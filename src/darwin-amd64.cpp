// Auto generated by JuleC.
// JuleC version: jule0.0.12 @master
// Date: 12/5/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _246cdc854_Importer{};
struct _246d8ea6b_Kind{};
struct _246daaacb_Lookup{};
struct _24766550b_CommonFlag{};
struct _2444ceb92_Range16;
struct _2444d0115_Range32;
struct _2444d0588_RangeTable;
struct _244592c66_acceptRange;
struct _2435ec530_lazyBuff;
struct _2427516da_DirEntry;
struct _242829010_Directory;
struct _24282ac48_File;
struct _243528703_Status;
struct _24468b601_Cmd;
struct _244640d69_Log;
struct _24496dc35_Token;
struct _2449740c0_File;
struct _244976127_kindPair;
struct _24497bc21_lex;
struct _2460db7ad_Ast;
struct _2460dc45c_Node;
struct _2460dc858_Directive;
struct _246125b27_TypeDecl;
struct _2461261dd_IdentTypeDecl;
struct _24612683c_SubIdentTypeDecl;
struct _246126be4_NamespaceTypeDecl;
struct _246126ed0_SptrTypeDecl;
struct _2461273cb_SlcTypeDecl;
struct _2461276b7_TupleTypeDecl;
struct _2461279a3_PtrTypeDecl;
struct _246128135_ArrTypeDecl;
struct _246128883_MapTypeDecl;
struct _246128c3a_RetTypeDecl;
struct _24612a148_Expr;
struct _24612a434_RangeExpr;
struct _24612a9d9_UseExpr;
struct _24612acc5_TupleExpr;
struct _24612b17c_LitExpr;
struct _24612b886_UnsafeExpr;
struct _24612bd09_IdentExpr;
struct _24612c513_UnaryExpr;
struct _24612c8ba_VariadicExpr;
struct _24612cc72_CastExpr;
struct _24612d129_NsSelectionExpr;
struct _24612d59c_SubIdentExpr;
struct _24612da20_BinopExpr;
struct _24612e12a_FnCallExpr;
struct _24612eaa9_FieldExprPair;
struct _246130307_StructLit;
struct _24613077a_BraceLit;
struct _246131050_KeyValPair;
struct _246131737_SliceExpr;
struct _2461320a6_IndexingExpr;
struct _2461326b1_SlicingExpr;
struct _24613299c_Constraint;
struct _246132e20_GenericDecl;
struct _2461332c7_LabelSt;
struct _24613367e_GotoSt;
struct _24613396a_FallSt;
struct _246134075_AssignLeft;
struct _2461345b4_AssignSt;
struct _2461354a5_Stmt;
struct _246135ab0_ScopeTree;
struct _246136286_ParamDecl;
struct _2461375a6_FnDecl;
struct _246138585_VarDecl;
struct _24613893c_RetSt;
struct _24613909c_Iter;
struct _246139872_WhileKind;
struct _24613a213_RangeKind;
struct _24613a5ba_BreakSt;
struct _24613a972_ContSt;
struct _24613ade5_If;
struct _24613b29c_Else;
struct _24613b720_Conditional;
struct _24613bde6_TypeAliasDecl;
struct _24613c369_Case;
struct _24613ca40_MatchCase;
struct _24613d2d2_UseDecl;
struct _24613d755_EnumItemDecl;
struct _24613e27d_EnumDecl;
struct _24613ec84_TypeEnumItemDecl;
struct _24614038e_TypeEnumDecl;
struct _24614058c_FieldDecl;
struct _246140d40_StructDecl;
struct _24614144a_TraitDecl;
struct _246141a55_Impl;
struct _246874a3a_floatInfo;
struct _2435aa246_decimalSlice;
struct _246c9ed77_leftCheat;
struct _246ca01da_decimal;
struct _2461e4872_Const;
struct _246108841_Field;
struct _246116310_Operators;
struct _246117c3a_Struct;
struct _24611d977_FieldIns;
struct _246ca5a2b_OperandExprModel;
struct _246ca5c18_BinopExprModel;
struct _246ca5e05_UnaryExprModel;
struct _246ca60e2_StructArgExprModel;
struct _246ca62ce_StructLitExprModel;
struct _246ca64bb_AllocStructLitExprModel;
struct _246ca66a8_CastingExprModel;
struct _246ca6895_FnCallExprModel;
struct _246ca6a82_SliceExprModel;
struct _246ca6c6e_IndexingExprModel;
struct _246ca6e5b_AnonFnExprModel;
struct _246ca7148_KeyValPairExprModel;
struct _246ca7335_MapExprModel;
struct _246ca7522_SlicingExprModel;
struct _246ca770e_TraitSubIdentExprModel;
struct _246ca7b2c_StructSubIdentExprModel;
struct _246ca7d19_StructStaticIdentExprModel;
struct _246ca8006_ArrayExprModel;
struct _246ca81e3_CommonIdentExprModel;
struct _246ca83d0_CommonSubIdentExprModel;
struct _246ca85bc_TupleExprModel;
struct _246ca87a9_BuiltinOutCallExprModel;
struct _246ca8996_BuiltinOutlnCallExprModel;
struct _246ca8b83_BuiltinCloneCallExprModel;
struct _246ca8d70_BuiltinNewCallExprModel;
struct _246ca905c_BuiltinPanicCallExprModel;
struct _246ca9249_BuiltinAssertCallExprModel;
struct _246ca9436_BuiltinMakeCallExprModel;
struct _246ca9623_BuiltinAppendCallExprModel;
struct _246ca9810_BuiltinLenCallExprModel;
struct _246ca99ec_BuiltinCapCallExprModel;
struct _246ca78eb_BuiltinDeleteCallExprModel;
struct _246caa15c_BuiltinCopyCallExprModel;
struct _246caa349_BuiltinErrorCallExprModel;
struct _246caa536_SizeofExprModel;
struct _246caa723_AlignofExprModel;
struct _246caa910_RuneExprModel;
struct _246caaaec_IntegratedToStrExprModel;
struct _246caacd9_BackendEmitExprModel;
struct _246caaec6_FreeExprModel;
struct _246cab38e_RetType;
struct _246cab57b_Param;
struct _246cab768_Fn;
struct _246cab955_ParamIns;
struct _246cabb42_FnIns;
struct _246cac615_ReferenceStack;
struct _246cace0c_Pass;
struct _246caed87_symbolBuilder;
struct _246cb3e9b_Trait;
struct _246cb55eb_EnumItem;
struct _246cb60e1_Enum;
struct _246cb7125_TypeEnumItem;
struct _246cb76db_TypeEnum;
struct _246cb9c60_constraintChecker;
struct _246cbbb96_Impl;
struct _246cc1c01_Scope;
struct _246cc20ec_If;
struct _246cc23d8_Else;
struct _246cc275c_Conditional;
struct _246cc2a48_InfIter;
struct _246cc2ebb_WhileIter;
struct _246cc38a1_RangeIter;
struct _246cc3c9c_ContSt;
struct _246cc4154_BreakSt;
struct _246cc4440_Label;
struct _246cc472b_GotoSt;
struct _246cc4ad3_Postfix;
struct _246cc5056_Assign;
struct _246cc540d_MultiAssign;
struct _246cc594c_Match;
struct _246cc6497_Case;
struct _246cc6a4c_FallSt;
struct _246cc6ec0_RetSt;
struct _246cc75ca_scopeLabel;
struct _246cc7a4d_scopeGoto;
struct _246cc8862_scopeChecker;
struct _246cd9444_directiveChecker;
struct _246ce04c2_ImportInfo;
struct _246ce342b_Package;
struct _246ce861d_Sema;
struct _246d13748_missingRetChecker;
struct _246d15409_IterRelation;
struct _246d16372_Var;
struct _246d17120_FuncPattern;
struct _246d48041_typeCompatibilityChecker;
struct _246d49b69_assignTypeChecker;
struct _246d4b583_dynamicTypeAnnotation;
struct _246d50d7e_fnCallArgChecker;
struct _246d53788_structLitChecker;
struct _246d5536c_rangeChecker;
struct _246d574c3_retTypeChecker;
struct _246d5956e_SymbolTable;
struct _246d5e398_Data;
struct _246d60421_Value;
struct _246d60e16_Eval;
struct _246d81b18_unaryEval;
struct _246d838a6_binaryEval;
struct _246d8d76d_InsGeneric;
struct _246d8e2a7_TypeAlias;
struct _246d8ee9a_TypeKind;
struct _246d94103_TypeSymbol;
struct _246d94972_Prim;
struct _246d98206_Sptr;
struct _246d98b63_Slc;
struct _246d996e1_Tuple;
struct _246d9a219_Map;
struct _246d9ad0d_Arr;
struct _246d9b76a_Ptr;
struct _246d9c6b1_referencer;
struct _246d9d4c5_typeChecker;
struct _246da5bd6_identTypeLookup;
struct _2475c5aba_FileInfo;
struct _24762263e_stmt;
struct _247622e69_scopeParser;
struct _24762e42b_exprBuilder;
struct _24763ac84_assignInfo;
struct _24763e5b2_parser;
struct _2476502c6_typeBuilder;
struct _246e7107b_CompileInfo;
struct _246e723ce_directiveEval;
struct _2476aea83_JuleImporter;
struct _2476b4846_OrderedDefines;
struct _2476b4a99_defineOrderer;
struct _2477a8165_liveTable;
struct _2477de4a9_scopeDeadCode;
struct _2477e3414_exprDeadCode;
struct _24499b37d_UnsafeBinopExprModel;
struct _2454bc9e7_UnsafeIndexingExprModel;
struct _2458b100b_PushToSliceExprModel;
struct _245d606b9_MutSlicingExprModel;
struct _2449dbc09_StrInsertBeginExprModel;
struct _244ced504_scopeOptimizer;
struct _24535c1b1_exprOptimizer;
struct _2477b3835_Optimizer;
struct _24780d9c3_AnsiEscape;
struct _2478100ac_Logger;
struct _2113399ec_AbsTime;
struct _21133a190_Time;
struct _210674871_scopeCoder;
struct _21067c527_exprCoder;
struct _21129b6d9_deriveCoder;
struct _21129cb5d_TestCoder;
struct _2112a02ae_identCoder;
struct _2112a810d_SerializationInfo;
struct _2113421ec_traitHash;
struct _211346399_customType;
struct _211346b91_typeCoder;
struct _213ee4583_Flag;
struct _213ee83cd_Flag;
struct _213eec019_Flag;
struct _214000b99_Flag;
struct _2140047d5_Flag;
struct _247666919_FlagSet;
struct _2476b22e4_IR;
struct _246142319_StructIns;
struct _2477a84ea_ObjectDeadCode;
struct _2113423d9_ObjectCoder;
struct _2476690e2_argParser;
struct _2444ceb92_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	_2444ceb92_Range16(void) = default;

	inline bool operator==(_2444ceb92_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_2444ceb92_Range16 _other) { return !this->operator==(_other); }


};
struct _2444d0115_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	_2444d0115_Range32(void) = default;

	inline bool operator==(_2444d0115_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_2444d0115_Range32 _other) { return !this->operator==(_other); }


};
struct _2444d0588_RangeTable {
	jule::Slice<_2444ceb92_Range16> _field_R16;
	jule::Slice<_2444d0115_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	

	_2444d0588_RangeTable(void) = default;

	inline bool operator==(_2444d0588_RangeTable _other) {
		return 
			this->_field_R16 == _other._field_R16 &&
			this->_field_R32 == _other._field_R32 &&
			this->_field_LatinOffset == _other._field_LatinOffset;
	}

	inline bool operator!=(_2444d0588_RangeTable _other) { return !this->operator==(_other); }


};
struct _244592c66_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	_244592c66_acceptRange(void) = default;

	inline bool operator==(_244592c66_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_244592c66_acceptRange _other) { return !this->operator==(_other); }


};
inline jule::U8 _243603ca6_index(_2435ec530_lazyBuff*, jule::I64);
inline void _2436044b0_append(_2435ec530_lazyBuff*, jule::U8);
inline jule::Str _243607738_string(_2435ec530_lazyBuff*);
struct _2435ec530_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	

	_2435ec530_lazyBuff(void) = default;

	inline bool operator==(_2435ec530_lazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_volAndPath == _other._field_volAndPath &&
			this->_field_volLen == _other._field_volLen;
	}

	inline bool operator!=(_2435ec530_lazyBuff _other) { return !this->operator==(_other); }


};
struct _2427516da_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_243528703_Status> _field_Stat;
	

	_2427516da_DirEntry(void) = default;

	inline bool operator==(_2427516da_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_2427516da_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_2427516da_DirEntry>>> static__24357b0a2_Read(jule::Str);
inline jule::VoidExceptional static__243588851_Create(jule::Str);
inline jule::VoidExceptional static__2435649e7_Remove(jule::Str);
struct _242829010_Directory {
	

	_242829010_Directory(void) = default;

	inline bool operator==(_242829010_Directory _other) { return true; }

	inline bool operator!=(_242829010_Directory _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_24282ac48_File>> static__242737072_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__242737c32_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _2427388e2_Write(_24282ac48_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _24273a00e_Read(_24282ac48_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_24282ac48_File> static__2427564ae_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_24282ac48_File>> static__2427581a3_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__242758e62_Read(jule::Str);
inline jule::VoidExceptional static__242759c98_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _24275b827_Seek(_24282ac48_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _24275c30b_Close(_24282ac48_File*);
struct _24282ac48_File {
	jule::Uintptr _field_handle = 0;
	

	_24282ac48_File(void) = default;

	inline bool operator==(_24282ac48_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_24282ac48_File _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_243528703_Status>> static__2427535dd_Of(jule::Str);
inline jule::Bool _24275d98e_IsDir(_243528703_Status*);
inline jule::Bool _242829a5a_IsReg(_243528703_Status*);
struct _243528703_Status {
	jule::U64 _field_Mode = 0;
	jule::U64 _field_Size = 0;
	

	_243528703_Status(void) = default;

	inline bool operator==(_243528703_Status _other) {
		return 
			this->_field_Mode == _other._field_Mode &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_243528703_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_24468b601_Cmd> static__24468ba30_New(jule::Str);
inline jule::Exceptional<jule::I64> _24468bc94_Spawn(_24468b601_Cmd*);
inline jule::Exceptional<jule::I64> _24468ebed_spawn(_24468b601_Cmd*);
struct _24468b601_Cmd {
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	

	_24468b601_Cmd(void) = default;

	inline bool operator==(_24468b601_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_Args == _other._field_Args &&
			this->_field_Env == _other._field_Env;
	}

	inline bool operator!=(_24468b601_Cmd _other) { return !this->operator==(_other); }


};
struct _244640d69_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	_244640d69_Log(void) = default;

	inline bool operator==(_244640d69_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_244640d69_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _24496e0dc_Prec(_24496dc35_Token*);
struct _24496dc35_Token {
	jule::Ptr<_2449740c0_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	_24496dc35_Token(void) = default;

	inline bool operator==(_24496dc35_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_24496dc35_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _2449744cc_IsOk(_2449740c0_File*);
inline void _244974752_Fill(_2449740c0_File*, jule::Slice<jule::U8>);
inline jule::Str _2449749b6_Dir(_2449740c0_File*);
inline jule::Str _244974c2a_Name(_2449740c0_File*);
inline jule::Uintptr _244974e8e_Addr(_2449740c0_File*);
inline jule::Str _24497529c_GetRow(_2449740c0_File*, jule::I64);
struct _2449740c0_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _field_Tokens;
	

	_2449740c0_File(void) = default;

	inline bool operator==(_2449740c0_File _other) {
		return 
			this->_field_Path == _other._field_Path &&
			this->_field_Data == _other._field_Data &&
			this->_field_Tokens == _other._field_Tokens;
	}

	inline bool operator!=(_2449740c0_File _other) { return !this->operator==(_other); }


};
struct _244976127_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_244976127_kindPair(void) = default;

	inline bool operator==(_244976127_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_244976127_kindPair _other) { return !this->operator==(_other); }


};
inline void _24497c2b5_pushErr(_24497bc21_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _24497c5d4_pushErrTok(_24497bc21_lex*, jule::Ptr<_24496dc35_Token>&, jule::Str);
inline void _24497c7b0_lex(_24497bc21_lex*);
inline jule::Str _24497cabd_id(_24497bc21_lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _24497cd32_resume(_24497bc21_lex*);
inline void _24497d0a7_lexLineComment(_24497bc21_lex*, jule::Ptr<_24496dc35_Token>&);
inline void _24497d32c_lexRangeComment(_24497bc21_lex*, jule::Ptr<_24496dc35_Token>&);
inline jule::Str _24497d63a_num(_24497bc21_lex*, jule::Slice<jule::U8>&);
inline jule::Str _24497d948_escapeSeq(_24497bc21_lex*, jule::Slice<jule::U8>&);
inline jule::Str _24497dd00_getRune(_24497bc21_lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _24497e10d_lexRune(_24497bc21_lex*, jule::Slice<jule::U8>&);
inline jule::Str _24497e372_lexStr(_24497bc21_lex*);
inline jule::Bool _24497e5d6_isFirstTokenOfLine(_24497bc21_lex*);
inline void _24497e7b2_newLine(_24497bc21_lex*);
inline jule::Bool _24497ecac_isOp(_24497bc21_lex*, jule::Slice<jule::U8>&, jule::Str, jule::U64, jule::Ptr<_24496dc35_Token>&);
inline jule::Bool _244980164_lexBasicOps(_24497bc21_lex*, jule::Slice<jule::U8>, jule::Ptr<_24496dc35_Token>&);
inline jule::Bool _24498051b_lexId(_24497bc21_lex*, jule::Slice<jule::U8>&, jule::Ptr<_24496dc35_Token>&);
inline jule::Bool _2449808c3_lexNum(_24497bc21_lex*, jule::Slice<jule::U8>&, jule::Ptr<_24496dc35_Token>&);
inline jule::Ptr<_24496dc35_Token> _244980b37_token(_24497bc21_lex*);
struct _24497bc21_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _field_tokens;
	jule::Ptr<_2449740c0_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_244640d69_Log> _field_errors;
	

	_24497bc21_lex(void) = default;

	inline bool operator==(_24497bc21_lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_24497bc21_lex _other) { return !this->operator==(_other); }


};
struct _2460db7ad_Ast {
	jule::Ptr<_2449740c0_File> _field_File;
	jule::Slice<jule::Ptr<_2460dc858_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_24613d2d2_UseDecl>> _field_UseDecls;
	jule::Slice<_2460dc45c_Node> _field_Nodes;
	

	_2460db7ad_Ast(void) = default;

	inline bool operator==(_2460db7ad_Ast _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_TopDirectives == _other._field_TopDirectives &&
			this->_field_UseDecls == _other._field_UseDecls &&
			this->_field_Nodes == _other._field_Nodes;
	}

	inline bool operator!=(_2460db7ad_Ast _other) { return !this->operator==(_other); }


};
struct _2460dc45c_Node {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_2460dc45c_Node(void) = default;

	inline bool operator==(_2460dc45c_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_2460dc45c_Node _other) { return !this->operator==(_other); }


};
struct _2460dc858_Directive {
	jule::Ptr<_24496dc35_Token> _field_Tag;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _field_Args;
	

	_2460dc858_Directive(void) = default;

	inline bool operator==(_2460dc858_Directive _other) {
		return 
			this->_field_Tag == _other._field_Tag &&
			this->_field_Args == _other._field_Args;
	}

	inline bool operator!=(_2460dc858_Directive _other) { return !this->operator==(_other); }


};
struct _246125b27_TypeDecl {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_246125b27_TypeDecl(void) = default;

	inline bool operator==(_246125b27_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_246125b27_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _246126551_IsPrim(_2461261dd_IdentTypeDecl*);
struct _2461261dd_IdentTypeDecl {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_246125b27_TypeDecl>> _field_Generics;
	

	_2461261dd_IdentTypeDecl(void) = default;

	inline bool operator==(_2461261dd_IdentTypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_2461261dd_IdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _24612683c_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_2461261dd_IdentTypeDecl>> _field_Idents;
	

	_24612683c_SubIdentTypeDecl(void) = default;

	inline bool operator==(_24612683c_SubIdentTypeDecl _other) {
		return 
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_24612683c_SubIdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _246126be4_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_24496dc35_Token>> _field_Idents;
	jule::Ptr<_246125b27_TypeDecl> _field_Kind;
	

	_246126be4_NamespaceTypeDecl(void) = default;

	inline bool operator==(_246126be4_NamespaceTypeDecl _other) {
		return 
			this->_field_Idents == _other._field_Idents &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_246126be4_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _246126ed0_SptrTypeDecl {
	jule::Ptr<_246125b27_TypeDecl> _field_Elem;
	

	_246126ed0_SptrTypeDecl(void) = default;

	inline bool operator==(_246126ed0_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_246126ed0_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _2461273cb_SlcTypeDecl {
	jule::Ptr<_246125b27_TypeDecl> _field_Elem;
	

	_2461273cb_SlcTypeDecl(void) = default;

	inline bool operator==(_2461273cb_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_2461273cb_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _2461276b7_TupleTypeDecl {
	jule::Slice<jule::Ptr<_246125b27_TypeDecl>> _field_Types;
	

	_2461276b7_TupleTypeDecl(void) = default;

	inline bool operator==(_2461276b7_TupleTypeDecl _other) {
		return 
			this->_field_Types == _other._field_Types;
	}

	inline bool operator!=(_2461276b7_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _246127d05_IsUnsafe(_2461279a3_PtrTypeDecl*);
struct _2461279a3_PtrTypeDecl {
	jule::Ptr<_246125b27_TypeDecl> _field_Elem;
	

	_2461279a3_PtrTypeDecl(void) = default;

	inline bool operator==(_2461279a3_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_2461279a3_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _24612850e_AutoSized(_246128135_ArrTypeDecl*);
struct _246128135_ArrTypeDecl {
	jule::Ptr<_246125b27_TypeDecl> _field_Elem;
	jule::Ptr<_24612a148_Expr> _field_Size;
	

	_246128135_ArrTypeDecl(void) = default;

	inline bool operator==(_246128135_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_246128135_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _246128883_MapTypeDecl {
	jule::Ptr<_246125b27_TypeDecl> _field_Key;
	jule::Ptr<_246125b27_TypeDecl> _field_Val;
	

	_246128883_MapTypeDecl(void) = default;

	inline bool operator==(_246128883_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_246128883_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _246128c3a_RetTypeDecl {
	jule::Ptr<_246125b27_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _field_Idents;
	

	_246128c3a_RetTypeDecl(void) = default;

	inline bool operator==(_246128c3a_RetTypeDecl _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_246128c3a_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _24612a148_Expr {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Ptr<_24496dc35_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_24612a148_Expr(void) = default;

	inline bool operator==(_24612a148_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_24612a148_Expr _other) { return !this->operator==(_other); }


};
struct _24612a434_RangeExpr {
	jule::Ptr<_24612a148_Expr> _field_Expr;
	

	_24612a434_RangeExpr(void) = default;

	inline bool operator==(_24612a434_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_24612a434_RangeExpr _other) { return !this->operator==(_other); }


};
struct _24612a9d9_UseExpr {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Ptr<_24612a148_Expr> _field_Expr;
	

	_24612a9d9_UseExpr(void) = default;

	inline bool operator==(_24612a9d9_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_24612a9d9_UseExpr _other) { return !this->operator==(_other); }


};
struct _24612acc5_TupleExpr {
	jule::Slice<jule::Ptr<_24612a148_Expr>> _field_Expr;
	

	_24612acc5_TupleExpr(void) = default;

	inline bool operator==(_24612acc5_TupleExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_24612acc5_TupleExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _24612b4ce_IsNil(_24612b17c_LitExpr*);
struct _24612b17c_LitExpr {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Str _field_Value;
	

	_24612b17c_LitExpr(void) = default;

	inline bool operator==(_24612b17c_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_24612b17c_LitExpr _other) { return !this->operator==(_other); }


};
struct _24612b886_UnsafeExpr {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Ptr<_24612a148_Expr> _field_Expr;
	

	_24612b886_UnsafeExpr(void) = default;

	inline bool operator==(_24612b886_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_24612b886_UnsafeExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _24612c15b_IsSelf(_24612bd09_IdentExpr*);
struct _24612bd09_IdentExpr {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	

	_24612bd09_IdentExpr(void) = default;

	inline bool operator==(_24612bd09_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked;
	}

	inline bool operator!=(_24612bd09_IdentExpr _other) { return !this->operator==(_other); }


};
struct _24612c513_UnaryExpr {
	jule::Ptr<_24496dc35_Token> _field_Op;
	jule::Ptr<_24612a148_Expr> _field_Expr;
	

	_24612c513_UnaryExpr(void) = default;

	inline bool operator==(_24612c513_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_24612c513_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _24612c8ba_VariadicExpr {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Ptr<_24612a148_Expr> _field_Expr;
	

	_24612c8ba_VariadicExpr(void) = default;

	inline bool operator==(_24612c8ba_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_24612c8ba_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _24612cc72_CastExpr {
	jule::Ptr<_246125b27_TypeDecl> _field_Kind;
	jule::Ptr<_24612a148_Expr> _field_Expr;
	

	_24612cc72_CastExpr(void) = default;

	inline bool operator==(_24612cc72_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_24612cc72_CastExpr _other) { return !this->operator==(_other); }


};
struct _24612d129_NsSelectionExpr {
	jule::Slice<jule::Ptr<_24496dc35_Token>> _field_Ns;
	jule::Ptr<_24496dc35_Token> _field_Ident;
	

	_24612d129_NsSelectionExpr(void) = default;

	inline bool operator==(_24612d129_NsSelectionExpr _other) {
		return 
			this->_field_Ns == _other._field_Ns &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_24612d129_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _24612d59c_SubIdentExpr {
	jule::Bool _field_IsSelf = false;
	jule::Ptr<_24612a148_Expr> _field_Expr;
	jule::Ptr<_24496dc35_Token> _field_Ident;
	

	_24612d59c_SubIdentExpr(void) = default;

	inline bool operator==(_24612d59c_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_24612d59c_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _24612da20_BinopExpr {
	jule::Ptr<_24612a148_Expr> _field_Left;
	jule::Ptr<_24612a148_Expr> _field_Right;
	jule::Ptr<_24496dc35_Token> _field_Op;
	

	_24612da20_BinopExpr(void) = default;

	inline bool operator==(_24612da20_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_24612da20_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _24612e48d_Unhandled(_24612e12a_FnCallExpr*);
inline jule::Bool _24612e702_Ignored(_24612e12a_FnCallExpr*);
struct _24612e12a_FnCallExpr {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Ptr<_24612a148_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_24612a148_Expr>> _field_Args;
	jule::Ptr<_246135ab0_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	

	_24612e12a_FnCallExpr(void) = default;

	inline bool operator==(_24612e12a_FnCallExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Args == _other._field_Args &&
			this->_field_Exception == _other._field_Exception &&
			this->_field_IsCo == _other._field_IsCo;
	}

	inline bool operator!=(_24612e12a_FnCallExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _24612ee0b_IsTargeted(_24612eaa9_FieldExprPair*);
struct _24612eaa9_FieldExprPair {
	jule::Ptr<_24496dc35_Token> _field_Field;
	jule::Ptr<_24612a148_Expr> _field_Expr;
	

	_24612eaa9_FieldExprPair(void) = default;

	inline bool operator==(_24612eaa9_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_24612eaa9_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _246130307_StructLit {
	jule::Ptr<_24496dc35_Token> _field_End;
	jule::Ptr<_246125b27_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_24612a148_Expr>> _field_Exprs;
	

	_246130307_StructLit(void) = default;

	inline bool operator==(_246130307_StructLit _other) {
		return 
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_246130307_StructLit _other) { return !this->operator==(_other); }


};
inline jule::Bool _246130acc_IsEmpty(_24613077a_BraceLit*);
struct _24613077a_BraceLit {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Ptr<_24496dc35_Token> _field_End;
	jule::Slice<jule::Ptr<_24612a148_Expr>> _field_Exprs;
	

	_24613077a_BraceLit(void) = default;

	inline bool operator==(_24613077a_BraceLit _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_24613077a_BraceLit _other) { return !this->operator==(_other); }


};
struct _246131050_KeyValPair {
	jule::Ptr<_24612a148_Expr> _field_Key;
	jule::Ptr<_24612a148_Expr> _field_Val;
	jule::Ptr<_24496dc35_Token> _field_Colon;
	

	_246131050_KeyValPair(void) = default;

	inline bool operator==(_246131050_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_246131050_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _246131a67_IsEmpty(_246131737_SliceExpr*);
struct _246131737_SliceExpr {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Ptr<_24496dc35_Token> _field_End;
	jule::Slice<jule::Ptr<_24612a148_Expr>> _field_Exprs;
	

	_246131737_SliceExpr(void) = default;

	inline bool operator==(_246131737_SliceExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_246131737_SliceExpr _other) { return !this->operator==(_other); }


};
struct _2461320a6_IndexingExpr {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Ptr<_24496dc35_Token> _field_End;
	jule::Ptr<_24612a148_Expr> _field_Expr;
	jule::Ptr<_24612a148_Expr> _field_Index;
	

	_2461320a6_IndexingExpr(void) = default;

	inline bool operator==(_2461320a6_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_2461320a6_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _2461326b1_SlicingExpr {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Ptr<_24496dc35_Token> _field_End;
	jule::Ptr<_24612a148_Expr> _field_Expr;
	jule::Ptr<_24612a148_Expr> _field_Start;
	jule::Ptr<_24612a148_Expr> _field_To;
	

	_2461326b1_SlicingExpr(void) = default;

	inline bool operator==(_2461326b1_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_2461326b1_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _24613299c_Constraint {
	jule::Slice<jule::Ptr<_246125b27_TypeDecl>> _field_Mask;
	

	_24613299c_Constraint(void) = default;

	inline bool operator==(_24613299c_Constraint _other) {
		return 
			this->_field_Mask == _other._field_Mask;
	}

	inline bool operator!=(_24613299c_Constraint _other) { return !this->operator==(_other); }


};
struct _246132e20_GenericDecl {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_24613299c_Constraint> _field_Constraint;
	

	_246132e20_GenericDecl(void) = default;

	inline bool operator==(_246132e20_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_246132e20_GenericDecl _other) { return !this->operator==(_other); }


};
struct _2461332c7_LabelSt {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Str _field_Ident;
	

	_2461332c7_LabelSt(void) = default;

	inline bool operator==(_2461332c7_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_2461332c7_LabelSt _other) { return !this->operator==(_other); }


};
struct _24613367e_GotoSt {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Ptr<_24496dc35_Token> _field_Label;
	

	_24613367e_GotoSt(void) = default;

	inline bool operator==(_24613367e_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_24613367e_GotoSt _other) { return !this->operator==(_other); }


};
struct _24613396a_FallSt {
	jule::Ptr<_24496dc35_Token> _field_Token;
	

	_24613396a_FallSt(void) = default;

	inline bool operator==(_24613396a_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_24613396a_FallSt _other) { return !this->operator==(_other); }


};
struct _246134075_AssignLeft {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_24612a148_Expr> _field_Expr;
	

	_246134075_AssignLeft(void) = default;

	inline bool operator==(_246134075_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_246134075_AssignLeft _other) { return !this->operator==(_other); }


};
struct _2461345b4_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_24496dc35_Token> _field_Setter;
	jule::Slice<jule::Ptr<_246134075_AssignLeft>> _field_Left;
	jule::Ptr<_24612a148_Expr> _field_Right;
	

	_2461345b4_AssignSt(void) = default;

	inline bool operator==(_2461345b4_AssignSt _other) {
		return 
			this->_field_Declarative == _other._field_Declarative &&
			this->_field_Setter == _other._field_Setter &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_2461345b4_AssignSt _other) { return !this->operator==(_other); }


};
struct _2461354a5_Stmt {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_2461354a5_Stmt(void) = default;

	inline bool operator==(_2461354a5_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_2461354a5_Stmt _other) { return !this->operator==(_other); }


};
struct _246135ab0_ScopeTree {
	jule::Ptr<_246135ab0_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_2461354a5_Stmt> _field_Stmts;
	jule::Ptr<_24496dc35_Token> _field_End;
	

	_246135ab0_ScopeTree(void) = default;

	inline bool operator==(_246135ab0_ScopeTree _other) {
		return 
			this->_field_Parent == _other._field_Parent &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Deferred == _other._field_Deferred &&
			this->_field_Stmts == _other._field_Stmts &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_246135ab0_ScopeTree _other) { return !this->operator==(_other); }


};
inline jule::Bool _2461365e9_IsSelf(_246136286_ParamDecl*);
inline jule::Bool _24613685d_IsRef(_246136286_ParamDecl*);
struct _246136286_ParamDecl {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_246125b27_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	_246136286_ParamDecl(void) = default;

	inline bool operator==(_246136286_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_246136286_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _246137908_IsAnon(_2461375a6_FnDecl*);
struct _2461375a6_FnDecl {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_2460dc858_Directive>> _field_Directives;
	jule::Ptr<_246135ab0_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_246132e20_GenericDecl>> _field_Generics;
	jule::Ptr<_246128c3a_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_246136286_ParamDecl>> _field_Params;
	

	_2461375a6_FnDecl(void) = default;

	inline bool operator==(_2461375a6_FnDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Global == _other._field_Global &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Exceptional == _other._field_Exceptional &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Result == _other._field_Result &&
			this->_field_Params == _other._field_Params;
	}

	inline bool operator!=(_2461375a6_FnDecl _other) { return !this->operator==(_other); }


};
struct _246138585_VarDecl {
	jule::Ptr<_246135ab0_ScopeTree> _field_Scope;
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_2460dc858_Directive>> _field_Directives;
	jule::Ptr<_246125b27_TypeDecl> _field_Kind;
	jule::Ptr<_24612a148_Expr> _field_Expr;
	

	_246138585_VarDecl(void) = default;

	inline bool operator==(_246138585_VarDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Constant == _other._field_Constant &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_246138585_VarDecl _other) { return !this->operator==(_other); }


};
struct _24613893c_RetSt {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Ptr<_24612a148_Expr> _field_Expr;
	

	_24613893c_RetSt(void) = default;

	inline bool operator==(_24613893c_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_24613893c_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _2461393ee_IsInf(_24613909c_Iter*);
struct _24613909c_Iter {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_246135ab0_ScopeTree> _field_Scope;
	

	_24613909c_Iter(void) = default;

	inline bool operator==(_24613909c_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_24613909c_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _246139bc4_IsWhileNext(_246139872_WhileKind*);
struct _246139872_WhileKind {
	jule::Ptr<_24612a148_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_24496dc35_Token> _field_NextToken;
	

	_246139872_WhileKind(void) = default;

	inline bool operator==(_246139872_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_246139872_WhileKind _other) { return !this->operator==(_other); }


};
struct _24613a213_RangeKind {
	jule::Ptr<_24496dc35_Token> _field_InToken;
	jule::Ptr<_24612a148_Expr> _field_Expr;
	jule::Ptr<_246138585_VarDecl> _field_KeyA;
	jule::Ptr<_246138585_VarDecl> _field_KeyB;
	

	_24613a213_RangeKind(void) = default;

	inline bool operator==(_24613a213_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_24613a213_RangeKind _other) { return !this->operator==(_other); }


};
struct _24613a5ba_BreakSt {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Ptr<_24496dc35_Token> _field_Label;
	

	_24613a5ba_BreakSt(void) = default;

	inline bool operator==(_24613a5ba_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_24613a5ba_BreakSt _other) { return !this->operator==(_other); }


};
struct _24613a972_ContSt {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Ptr<_24496dc35_Token> _field_Label;
	

	_24613a972_ContSt(void) = default;

	inline bool operator==(_24613a972_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_24613a972_ContSt _other) { return !this->operator==(_other); }


};
struct _24613ade5_If {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Ptr<_24612a148_Expr> _field_Expr;
	jule::Ptr<_246135ab0_ScopeTree> _field_Scope;
	

	_24613ade5_If(void) = default;

	inline bool operator==(_24613ade5_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_24613ade5_If _other) { return !this->operator==(_other); }


};
struct _24613b29c_Else {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Ptr<_246135ab0_ScopeTree> _field_Scope;
	

	_24613b29c_Else(void) = default;

	inline bool operator==(_24613b29c_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_24613b29c_Else _other) { return !this->operator==(_other); }


};
struct _24613b720_Conditional {
	jule::Ptr<_24613ade5_If> _field_Head;
	jule::Slice<jule::Ptr<_24613ade5_If>> _field_Tail;
	jule::Ptr<_24613b29c_Else> _field_Default;
	

	_24613b720_Conditional(void) = default;

	inline bool operator==(_24613b720_Conditional _other) {
		return 
			this->_field_Head == _other._field_Head &&
			this->_field_Tail == _other._field_Tail &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_24613b720_Conditional _other) { return !this->operator==(_other); }


};
struct _24613bde6_TypeAliasDecl {
	jule::Ptr<_246135ab0_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_246125b27_TypeDecl> _field_Kind;
	

	_24613bde6_TypeAliasDecl(void) = default;

	inline bool operator==(_24613bde6_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_24613bde6_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _24613c369_Case {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Ptr<_246135ab0_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_24612a148_Expr>> _field_Exprs;
	

	_24613c369_Case(void) = default;

	inline bool operator==(_24613c369_Case _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_24613c369_Case _other) { return !this->operator==(_other); }


};
struct _24613ca40_MatchCase {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Ptr<_24496dc35_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_24612a148_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_24613c369_Case>> _field_Cases;
	jule::Ptr<_24613b29c_Else> _field_Default;
	

	_24613ca40_MatchCase(void) = default;

	inline bool operator==(_24613ca40_MatchCase _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_TypeMatch == _other._field_TypeMatch &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Cases == _other._field_Cases &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_24613ca40_MatchCase _other) { return !this->operator==(_other); }


};
struct _24613d2d2_UseDecl {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _field_Selected;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	

	_24613d2d2_UseDecl(void) = default;

	inline bool operator==(_24613d2d2_UseDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_LinkPath == _other._field_LinkPath &&
			this->_field_Alias == _other._field_Alias &&
			this->_field_Full == _other._field_Full &&
			this->_field_Selected == _other._field_Selected &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Std == _other._field_Std;
	}

	inline bool operator!=(_24613d2d2_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _24613daa7_AutoExpr(_24613d755_EnumItemDecl*);
struct _24613d755_EnumItemDecl {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_24612a148_Expr> _field_Expr;
	

	_24613d755_EnumItemDecl(void) = default;

	inline bool operator==(_24613d755_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_24613d755_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _24613e811_DefaultTyped(_24613e27d_EnumDecl*);
struct _24613e27d_EnumDecl {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_246125b27_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_24613d755_EnumItemDecl>> _field_Items;
	jule::Ptr<_24496dc35_Token> _field_End;
	

	_24613e27d_EnumDecl(void) = default;

	inline bool operator==(_24613e27d_EnumDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Items == _other._field_Items &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_24613e27d_EnumDecl _other) { return !this->operator==(_other); }


};
struct _24613ec84_TypeEnumItemDecl {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_246125b27_TypeDecl> _field_Kind;
	

	_24613ec84_TypeEnumItemDecl(void) = default;

	inline bool operator==(_24613ec84_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_24613ec84_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _24614038e_TypeEnumDecl {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_24613ec84_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_24496dc35_Token> _field_End;
	

	_24614038e_TypeEnumDecl(void) = default;

	inline bool operator==(_24614038e_TypeEnumDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Items == _other._field_Items &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_24614038e_TypeEnumDecl _other) { return !this->operator==(_other); }


};
struct _24614058c_FieldDecl {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_246125b27_TypeDecl> _field_Kind;
	jule::Ptr<_24612a148_Expr> _field_Default;
	

	_24614058c_FieldDecl(void) = default;

	inline bool operator==(_24614058c_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_24614058c_FieldDecl _other) { return !this->operator==(_other); }


};
struct _246140d40_StructDecl {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Ptr<_24496dc35_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_24614058c_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_2460dc858_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_246132e20_GenericDecl>> _field_Generics;
	

	_246140d40_StructDecl(void) = default;

	inline bool operator==(_246140d40_StructDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_246140d40_StructDecl _other) { return !this->operator==(_other); }


};
struct _24614144a_TraitDecl {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Ptr<_24496dc35_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_2461375a6_FnDecl>> _field_Methods;
	

	_24614144a_TraitDecl(void) = default;

	inline bool operator==(_24614144a_TraitDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Public == _other._field_Public &&
			this->_field_Methods == _other._field_Methods;
	}

	inline bool operator!=(_24614144a_TraitDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _246141db8_IsTraitImpl(_246141a55_Impl*);
inline jule::Bool _24614212c_IsStructImpl(_246141a55_Impl*);
struct _246141a55_Impl {
	jule::Ptr<_24496dc35_Token> _field_End;
	jule::Ptr<_246125b27_TypeDecl> _field_Base;
	jule::Ptr<_246125b27_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_2461375a6_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_246138585_VarDecl>> _field_Statics;
	

	_246141a55_Impl(void) = default;

	inline bool operator==(_246141a55_Impl _other) {
		return 
			this->_field_End == _other._field_End &&
			this->_field_Base == _other._field_Base &&
			this->_field_Dest == _other._field_Dest &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics;
	}

	inline bool operator!=(_246141a55_Impl _other) { return !this->operator==(_other); }


};
struct _246874a3a_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	_246874a3a_floatInfo(void) = default;

	inline bool operator==(_246874a3a_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_246874a3a_floatInfo _other) { return !this->operator==(_other); }


};
struct _2435aa246_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	

	_2435aa246_decimalSlice(void) = default;

	inline bool operator==(_2435aa246_decimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_2435aa246_decimalSlice _other) { return !this->operator==(_other); }


};
struct _246c9ed77_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	_246c9ed77_leftCheat(void) = default;

	inline bool operator==(_246c9ed77_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_246c9ed77_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _246786a90_set(_246ca01da_decimal*, jule::Str);
inline std::tuple<jule::U64,jule::Bool> _2466e7506_floatBits(_246ca01da_decimal*, _246874a3a_floatInfo&);
inline void _246ca03c7_assign(_246ca01da_decimal*, jule::U64);
inline void _246ca0509_shift(_246ca01da_decimal*, jule::I64);
inline void _246ca063b_roundDown(_246ca01da_decimal*, jule::I64);
inline void _246ca076d_roundUp(_246ca01da_decimal*, jule::I64);
inline void _246ca08a0_round(_246ca01da_decimal*, jule::I64);
inline jule::U64 _246ca09d2_roundedInteger(_246ca01da_decimal*);
struct _246ca01da_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	_246ca01da_decimal(void) = default;

	inline bool operator==(_246ca01da_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_246ca01da_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2461e4872_Const> static__246204db0_NewI64(jule::I64);
inline jule::Ptr<_2461e4872_Const> static__24621bde9_NewU64(jule::U64);
inline jule::Ptr<_2461e4872_Const> static__246236793_NewBool(jule::Bool);
inline jule::Ptr<_2461e4872_Const> static__2462385db_NewStr(jule::Str);
inline jule::Ptr<_2461e4872_Const> static__2462397c9_NewF64(jule::F64);
inline jule::Ptr<_2461e4872_Const> static__24623a027_NewNil(void);
inline jule::I64 _24623bb1c_ReadI64(_2461e4872_Const*);
inline jule::U64 _24623cd0a_ReadU64(_2461e4872_Const*);
inline jule::Bool _24623d558_ReadBool(_2461e4872_Const*);
inline jule::Str _246245de0_ReadStr(_2461e4872_Const*);
inline jule::F64 _24624696d_ReadF64(_2461e4872_Const*);
inline jule::I64 _24624782b_AsI64(_2461e4872_Const*);
inline jule::U64 _24623b974_AsU64(_2461e4872_Const*);
inline jule::F64 _2462487e9_AsF64(_2461e4872_Const*);
inline void _2462496a7_SetI64(_2461e4872_Const*, jule::I64);
inline void _246257462_SetU64(_2461e4872_Const*, jule::U64);
inline void _246260217_SetBool(_2461e4872_Const*, jule::Bool);
inline void _246260c51_SetStr(_2461e4872_Const*, jule::Str);
inline void _2462617ce_SetF64(_2461e4872_Const*, jule::F64);
inline void _246249e05_SetNil(_2461e4872_Const*);
inline jule::Bool _2462570dd_IsI64(_2461e4872_Const*);
inline jule::Bool _2462069a5_IsU64(_2461e4872_Const*);
inline jule::Bool _246208de7_IsBool(_2461e4872_Const*);
inline jule::Bool _2462456a3_IsStr(_2461e4872_Const*);
inline jule::Bool _24625698e_IsF64(_2461e4872_Const*);
inline jule::Bool _246ca3ebe_IsNil(_2461e4872_Const*);
inline jule::Bool _246ca4101_AreSameTypes(_2461e4872_Const*, _2461e4872_Const);
inline jule::Bool _246ca4233_And(_2461e4872_Const*, _2461e4872_Const);
inline jule::Bool _246ca4365_Or(_2461e4872_Const*, _2461e4872_Const);
inline jule::Bool _246ca4497_Eq(_2461e4872_Const*, _2461e4872_Const);
inline jule::Bool _246ca45c9_Lt(_2461e4872_Const*, _2461e4872_Const);
inline jule::Bool _246ca470b_LtEq(_2461e4872_Const*, _2461e4872_Const);
inline jule::Bool _246ca483d_Gt(_2461e4872_Const*, _2461e4872_Const);
inline jule::Bool _246ca4970_GtEq(_2461e4872_Const*, _2461e4872_Const);
inline jule::Bool _246ca4aa2_Add(_2461e4872_Const*, _2461e4872_Const);
inline jule::Bool _246ca4bd4_Sub(_2461e4872_Const*, _2461e4872_Const);
inline jule::Bool _246ca4d16_Mul(_2461e4872_Const*, _2461e4872_Const);
inline jule::Bool _246ca4e48_Div(_2461e4872_Const*, _2461e4872_Const);
inline jule::Bool _246ca507a_Mod(_2461e4872_Const*, _2461e4872_Const);
inline jule::Bool _246ca51ac_BitwiseAnd(_2461e4872_Const*, _2461e4872_Const);
inline jule::Bool _246ca52de_BitwiseOr(_2461e4872_Const*, _2461e4872_Const);
inline jule::Bool _246ca5421_Xor(_2461e4872_Const*, _2461e4872_Const);
inline jule::Bool _246ca5553_Lshift(_2461e4872_Const*, _2461e4872_Const);
inline jule::Bool _246ca5685_Rshift(_2461e4872_Const*, _2461e4872_Const);
struct _2461e4872_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	_2461e4872_Const(void) = default;

	inline jule::Bool operator==(_2461e4872_Const _other) { return _246ca4497_Eq(this, _other); }

	inline bool operator!=(_2461e4872_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_2461e4872_Const _other) { return _246ca483d_Gt(this, _other); }

	inline jule::Bool operator>=(_2461e4872_Const _other) { return _246ca4970_GtEq(this, _other); }

	inline jule::Bool operator<(_2461e4872_Const _other) { return _246ca45c9_Lt(this, _other); }

	inline jule::Bool operator<=(_2461e4872_Const _other) { return _246ca470b_LtEq(this, _other); }


};
inline jule::Ptr<_24611d977_FieldIns> _245ee3990_instance(jule::Ptr<_246108841_Field>);
struct _246108841_Field {
	jule::Ptr<_246117c3a_Struct> _field_Owner;
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_246d94103_TypeSymbol> _field_Kind;
	jule::Ptr<_24612a148_Expr> _field_Default;
	

	_246108841_Field(void) = default;

	inline bool operator==(_246108841_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_246108841_Field _other) { return !this->operator==(_other); }


};
struct _246116310_Operators {
	jule::Ptr<_246cabb42_FnIns> _field_Eq;
	jule::Ptr<_246cabb42_FnIns> _field_Gt;
	jule::Ptr<_246cabb42_FnIns> _field_GtEq;
	jule::Ptr<_246cabb42_FnIns> _field_Lt;
	jule::Ptr<_246cabb42_FnIns> _field_LtEq;
	jule::Ptr<_246cabb42_FnIns> _field_Shl;
	jule::Ptr<_246cabb42_FnIns> _field_Shr;
	jule::Ptr<_246cabb42_FnIns> _field_Add;
	jule::Ptr<_246cabb42_FnIns> _field_Sub;
	jule::Ptr<_246cabb42_FnIns> _field_Div;
	jule::Ptr<_246cabb42_FnIns> _field_Mul;
	jule::Ptr<_246cabb42_FnIns> _field_Mod;
	jule::Ptr<_246cabb42_FnIns> _field_BitAnd;
	jule::Ptr<_246cabb42_FnIns> _field_BitOr;
	jule::Ptr<_246cabb42_FnIns> _field_BitXor;
	jule::Ptr<_246cabb42_FnIns> _field_Neg;
	jule::Ptr<_246cabb42_FnIns> _field_Pos;
	jule::Ptr<_246cabb42_FnIns> _field_BitNot;
	jule::Ptr<_246cabb42_FnIns> _field_AddAssign;
	jule::Ptr<_246cabb42_FnIns> _field_SubAssign;
	jule::Ptr<_246cabb42_FnIns> _field_DivAssign;
	jule::Ptr<_246cabb42_FnIns> _field_MulAssign;
	jule::Ptr<_246cabb42_FnIns> _field_ModAssign;
	jule::Ptr<_246cabb42_FnIns> _field_ShlAssign;
	jule::Ptr<_246cabb42_FnIns> _field_ShrAssign;
	jule::Ptr<_246cabb42_FnIns> _field_BitOrAssign;
	jule::Ptr<_246cabb42_FnIns> _field_BitAndAssign;
	jule::Ptr<_246cabb42_FnIns> _field_BitXorAssign;
	

	_246116310_Operators(void) = default;

	inline bool operator==(_246116310_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_246116310_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_246142319_StructIns> _2460e2a4a_instance(jule::Ptr<_246117c3a_Struct>);
inline jule::Ptr<_246142319_StructIns> _2460e8b3e_appendInstance(_246117c3a_Struct*, jule::Ptr<_246142319_StructIns>&);
inline jule::Ptr<_246cab768_Fn> _2460ec934_FindMethod(_246117c3a_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_246d16372_Var> _246105673_FindStatic(_246117c3a_Struct*, jule::Str);
inline jule::Ptr<_246108841_Field> _246106685_FindField(_246117c3a_Struct*, jule::Str);
inline jule::Bool _246105ac4_IsImplements(_246117c3a_Struct*, jule::Ptr<_246cb3e9b_Trait>);
inline jule::Bool _246107ec2_IsDerives(_246117c3a_Struct*, jule::Str);
inline jule::Bool _2461072ac_IsUses(_246117c3a_Struct*, jule::Ptr<_246117c3a_Struct>);
inline jule::Bool _24610b2a0_HasRefAccessible(_246117c3a_Struct*);
struct _246117c3a_Struct {
	jule::Ptr<_246ce861d_Sema> _field_sema;
	jule::Slice<jule::Ptr<_246117c3a_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_246117c3a_Struct>> _field_Uses;
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_246108841_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_246cab768_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_246d16372_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_2460dc858_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_246132e20_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_246cb3e9b_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_246142319_StructIns>> _field_Instances;
	

	_246117c3a_Struct(void) = default;

	inline bool operator==(_246117c3a_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_Depends == _other._field_Depends &&
			this->_field_Uses == _other._field_Uses &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Implements == _other._field_Implements &&
			this->_field_Instances == _other._field_Instances;
	}

	inline bool operator!=(_246117c3a_Struct _other) { return !this->operator==(_other); }


};
struct _24611d977_FieldIns {
	jule::Ptr<_246108841_Field> _field_Decl;
	jule::Ptr<_246d8ee9a_TypeKind> _field_Kind;
	jule::Ptr<_246d5e398_Data> _field_Default;
	

	_24611d977_FieldIns(void) = default;

	inline bool operator==(_24611d977_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_24611d977_FieldIns _other) { return !this->operator==(_other); }


};
struct _246ca5a2b_OperandExprModel {
	jule::Ptr<_246d8ee9a_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	_246ca5a2b_OperandExprModel(void) = default;

	inline bool operator==(_246ca5a2b_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_246ca5a2b_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _246ca5c18_BinopExprModel {
	jule::Ptr<_246ca5a2b_OperandExprModel> _field_Left;
	jule::Ptr<_246ca5a2b_OperandExprModel> _field_Right;
	jule::Ptr<_24496dc35_Token> _field_Op;
	

	_246ca5c18_BinopExprModel(void) = default;

	inline bool operator==(_246ca5c18_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_246ca5c18_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _246ca5e05_UnaryExprModel {
	jule::Ptr<_246d5e398_Data> _field_Expr;
	jule::Ptr<_24496dc35_Token> _field_Op;
	

	_246ca5e05_UnaryExprModel(void) = default;

	inline bool operator==(_246ca5e05_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_246ca5e05_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _246ca60e2_StructArgExprModel {
	jule::Ptr<_24611d977_FieldIns> _field_Field;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_246ca60e2_StructArgExprModel(void) = default;

	inline bool operator==(_246ca60e2_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_246ca60e2_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _246ca62ce_StructLitExprModel {
	jule::Ptr<_246142319_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_246ca60e2_StructArgExprModel>> _field_Args;
	

	_246ca62ce_StructLitExprModel(void) = default;

	inline bool operator==(_246ca62ce_StructLitExprModel _other) {
		return 
			this->_field_Strct == _other._field_Strct &&
			this->_field_Args == _other._field_Args;
	}

	inline bool operator!=(_246ca62ce_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _246ca64bb_AllocStructLitExprModel {
	jule::Ptr<_246ca62ce_StructLitExprModel> _field_Lit;
	

	_246ca64bb_AllocStructLitExprModel(void) = default;

	inline bool operator==(_246ca64bb_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_246ca64bb_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _246ca66a8_CastingExprModel {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_246d8ee9a_TypeKind> _field_Kind;
	jule::Ptr<_246d8ee9a_TypeKind> _field_ExprKind;
	

	_246ca66a8_CastingExprModel(void) = default;

	inline bool operator==(_246ca66a8_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_246ca66a8_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _246ca6895_FnCallExprModel {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Ptr<_246cabb42_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_246cc1c01_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	

	_246ca6895_FnCallExprModel(void) = default;

	inline bool operator==(_246ca6895_FnCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Func == _other._field_Func &&
			this->_field_IsCo == _other._field_IsCo &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Args == _other._field_Args &&
			this->_field_Except == _other._field_Except &&
			this->_field_Assigned == _other._field_Assigned;
	}

	inline bool operator!=(_246ca6895_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _246ca6a82_SliceExprModel {
	jule::Ptr<_246d8ee9a_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	

	_246ca6a82_SliceExprModel(void) = default;

	inline bool operator==(_246ca6a82_SliceExprModel _other) {
		return 
			this->_field_ElemKind == _other._field_ElemKind &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_246ca6a82_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _246ca6c6e_IndexingExprModel {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Ptr<_246d5e398_Data> _field_Expr;
	jule::Ptr<_246d5e398_Data> _field_Index;
	

	_246ca6c6e_IndexingExprModel(void) = default;

	inline bool operator==(_246ca6c6e_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_246ca6c6e_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _246ca6e5b_AnonFnExprModel {
	jule::Ptr<_246cabb42_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	_246ca6e5b_AnonFnExprModel(void) = default;

	inline bool operator==(_246ca6e5b_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_246ca6e5b_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _246ca7148_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	_246ca7148_KeyValPairExprModel(void) = default;

	inline bool operator==(_246ca7148_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_246ca7148_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _246ca7335_MapExprModel {
	jule::Ptr<_246d8ee9a_TypeKind> _field_KeyKind;
	jule::Ptr<_246d8ee9a_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_246ca7148_KeyValPairExprModel>> _field_Entries;
	

	_246ca7335_MapExprModel(void) = default;

	inline bool operator==(_246ca7335_MapExprModel _other) {
		return 
			this->_field_KeyKind == _other._field_KeyKind &&
			this->_field_ValKind == _other._field_ValKind &&
			this->_field_Entries == _other._field_Entries;
	}

	inline bool operator!=(_246ca7335_MapExprModel _other) { return !this->operator==(_other); }


};
struct _246ca7522_SlicingExprModel {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_246ca7522_SlicingExprModel(void) = default;

	inline bool operator==(_246ca7522_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_246ca7522_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _246ca770e_TraitSubIdentExprModel {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_246cab768_Fn> _field_Method;
	jule::Ptr<_246cb3e9b_Trait> _field_Trt;
	

	_246ca770e_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_246ca770e_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_246ca770e_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _246ca7b2c_StructSubIdentExprModel {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Ptr<_246d5e398_Data> _field_Expr;
	jule::Ptr<_246d8ee9a_TypeKind> _field_ExprKind;
	jule::Ptr<_246cabb42_FnIns> _field_Method;
	jule::Ptr<_24611d977_FieldIns> _field_Field;
	jule::Ptr<_246142319_StructIns> _field_Owner;
	

	_246ca7b2c_StructSubIdentExprModel(void) = default;

	inline bool operator==(_246ca7b2c_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_246ca7b2c_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _246ca7d19_StructStaticIdentExprModel {
	jule::Ptr<_246142319_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_246cabb42_FnIns> _field_Method;
	

	_246ca7d19_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_246ca7d19_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_246ca7d19_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _246ca8006_ArrayExprModel {
	jule::Ptr<_246d9ad0d_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	

	_246ca8006_ArrayExprModel(void) = default;

	inline bool operator==(_246ca8006_ArrayExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_246ca8006_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _246ca81e3_CommonIdentExprModel {
	jule::Str _field_Ident;
	

	_246ca81e3_CommonIdentExprModel(void) = default;

	inline bool operator==(_246ca81e3_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_246ca81e3_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _246ca83d0_CommonSubIdentExprModel {
	jule::Ptr<_246d8ee9a_TypeKind> _field_ExprKind;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Str _field_Ident;
	

	_246ca83d0_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_246ca83d0_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_246ca83d0_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _246ca85bc_TupleExprModel {
	jule::Slice<jule::Ptr<_246d5e398_Data>> _field_Datas;
	

	_246ca85bc_TupleExprModel(void) = default;

	inline bool operator==(_246ca85bc_TupleExprModel _other) {
		return 
			this->_field_Datas == _other._field_Datas;
	}

	inline bool operator!=(_246ca85bc_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _246ca87a9_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_246ca87a9_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_246ca87a9_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_246ca87a9_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _246ca8996_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_246ca8996_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_246ca8996_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_246ca8996_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _246ca8b83_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_246ca8b83_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_246ca8b83_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_246ca8b83_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _246ca8d70_BuiltinNewCallExprModel {
	jule::Ptr<_246d8ee9a_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	_246ca8d70_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_246ca8d70_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_246ca8d70_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _246ca905c_BuiltinPanicCallExprModel {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_246ca905c_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_246ca905c_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_246ca905c_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _246ca9249_BuiltinAssertCallExprModel {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	_246ca9249_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_246ca9249_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_246ca9249_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _246ca9436_BuiltinMakeCallExprModel {
	jule::Ptr<_246d8ee9a_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	_246ca9436_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_246ca9436_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_246ca9436_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _246ca9623_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	_246ca9623_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_246ca9623_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_246ca9623_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _246ca9810_BuiltinLenCallExprModel {
	jule::Ptr<_246d5e398_Data> _field_Expr;
	

	_246ca9810_BuiltinLenCallExprModel(void) = default;

	inline bool operator==(_246ca9810_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_246ca9810_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _246ca99ec_BuiltinCapCallExprModel {
	jule::Ptr<_246d5e398_Data> _field_Expr;
	

	_246ca99ec_BuiltinCapCallExprModel(void) = default;

	inline bool operator==(_246ca99ec_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_246ca99ec_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _246ca78eb_BuiltinDeleteCallExprModel {
	jule::Ptr<_246d5e398_Data> _field_Dest;
	jule::Ptr<_246d5e398_Data> _field_Key;
	

	_246ca78eb_BuiltinDeleteCallExprModel(void) = default;

	inline bool operator==(_246ca78eb_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_246ca78eb_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _246caa15c_BuiltinCopyCallExprModel {
	jule::Ptr<_246d5e398_Data> _field_Dest;
	jule::Ptr<_246d5e398_Data> _field_Src;
	

	_246caa15c_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_246caa15c_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_246caa15c_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _246caa349_BuiltinErrorCallExprModel {
	jule::Ptr<_246cabb42_FnIns> _field_Func;
	jule::Any _field_Err = jule::Any(nullptr);
	

	_246caa349_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_246caa349_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_246caa349_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _246caa536_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_246caa536_SizeofExprModel(void) = default;

	inline bool operator==(_246caa536_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_246caa536_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _246caa723_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_246caa723_AlignofExprModel(void) = default;

	inline bool operator==(_246caa723_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_246caa723_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _246caa910_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	_246caa910_RuneExprModel(void) = default;

	inline bool operator==(_246caa910_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_246caa910_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _246caaaec_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_246caaaec_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_246caaaec_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_246caaaec_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _246caacd9_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	

	_246caacd9_BackendEmitExprModel(void) = default;

	inline bool operator==(_246caacd9_BackendEmitExprModel _other) {
		return 
			this->_field_Code == _other._field_Code &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_246caacd9_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _246caaec6_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_246caaec6_FreeExprModel(void) = default;

	inline bool operator==(_246caaec6_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_246caaec6_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _246cab38e_RetType {
	jule::Ptr<_246d94103_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _field_Idents;
	

	_246cab38e_RetType(void) = default;

	inline bool operator==(_246cab38e_RetType _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_246cab38e_RetType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_246cab955_ParamIns> _2461b9270_instance(jule::Ptr<_246cab57b_Param>);
inline jule::Bool _24617a220_IsSelf(_246cab57b_Param*);
inline jule::Bool _24617b4da_IsRef(_246cab57b_Param*);
struct _246cab57b_Param {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_246d94103_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	_246cab57b_Param(void) = default;

	inline bool operator==(_246cab57b_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_246cab57b_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _24618a10e_IsVoid(_246cab768_Fn*);
inline jule::Bool _24618a829_IsMethod(_246cab768_Fn*);
inline jule::Bool _24618b044_IsEntryPoint(_246cab768_Fn*);
inline jule::Bool _24618bdbe_IsInit(_246cab768_Fn*);
inline jule::Bool _246179818_IsAnon(_246cab768_Fn*);
inline jule::Bool _24617e8a6_AnyVar(_246cab768_Fn*);
inline jule::Ptr<_246cabb42_FnIns> _24618148a_instanceForce(jule::Ptr<_246cab768_Fn>);
inline jule::Ptr<_246cabb42_FnIns> _24618225a_instance(jule::Ptr<_246cab768_Fn>);
inline jule::Ptr<_246cabb42_FnIns> _246179087_appendInstance(_246cab768_Fn*, jule::Ptr<_246cabb42_FnIns>&);
struct _246cab768_Fn {
	jule::Ptr<_246ce861d_Sema> _field_sema;
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_2460dc858_Directive>> _field_Directives;
	jule::Ptr<_246135ab0_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_246132e20_GenericDecl>> _field_Generics;
	jule::Ptr<_246cab38e_RetType> _field_Result;
	jule::Slice<jule::Ptr<_246cab57b_Param>> _field_Params;
	jule::Ptr<_246117c3a_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_246cabb42_FnIns>> _field_Instances;
	

	_246cab768_Fn(void) = default;

	inline bool operator==(_246cab768_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_Token == _other._field_Token &&
			this->_field_Global == _other._field_Global &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Exceptional == _other._field_Exceptional &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Result == _other._field_Result &&
			this->_field_Params == _other._field_Params &&
			this->_field_Owner == _other._field_Owner &&
			this->_field_Instances == _other._field_Instances;
	}

	inline bool operator!=(_246cab768_Fn _other) { return !this->operator==(_other); }


};
inline jule::Str _246178a04_Str(_246cab955_ParamIns*);
struct _246cab955_ParamIns {
	jule::Ptr<_246cab57b_Param> _field_Decl;
	jule::Ptr<_246d8ee9a_TypeKind> _field_Kind;
	

	_246cab955_ParamIns(void) = default;

	inline bool operator==(_246cab955_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_246cab955_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _24617aad3_Str(_246cabb42_FnIns*);
inline jule::Bool _246179340_Equals(jule::Ptr<_246cabb42_FnIns>, jule::Ptr<_246d8ee9a_TypeKind>);
inline jule::Bool _24618b75e_EqualsFn(jule::Ptr<_246cabb42_FnIns>, jule::Ptr<_246cabb42_FnIns>&);
inline jule::Bool _24617da92_equalsTrait(jule::Ptr<_246cabb42_FnIns>, jule::Ptr<_246cabb42_FnIns>&);
inline jule::Slice<jule::Ptr<_246d8ee9a_TypeKind>> _2461a97e3_Types(_246cabb42_FnIns*);
inline jule::Bool _246cabd2e_IsBuiltin(_246cabb42_FnIns*);
inline jule::Bool _246cabe61_IsAnon(_246cabb42_FnIns*);
inline jule::Bool _246cac093_Same(_246cabb42_FnIns*, jule::Ptr<_246cabb42_FnIns>);
inline jule::Str _246cac1c5_GetKindStr(_246cabb42_FnIns*, jule::Bool);
struct _246cabb42_FnIns {
	jule::Ptr<_246142319_StructIns> _field_Owner;
	jule::Ptr<_246cab768_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_246d8d76d_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_246cab955_ParamIns>> _field_Params;
	jule::Ptr<_246d8ee9a_TypeKind> _field_Result;
	jule::Ptr<_246cc1c01_Scope> _field_Scope;
	jule::Ptr<_246cac615_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_246d5e398_Data>(jule::Ptr<_246d60e16_Eval>&,jule::Ptr<_24612e12a_FnCallExpr>&,jule::Ptr<_246d5e398_Data>&)> _field_caller;
	jule::Bool _field_reloaded = false;
	

	_246cabb42_FnIns(void) = default;

	inline bool operator==(_246cabb42_FnIns _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Params == _other._field_Params &&
			this->_field_Result == _other._field_Result &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Anon == _other._field_Anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_246cabb42_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_246cac615_ReferenceStack> static__246cac802_new(void);
inline jule::I64 _246cac934_Len(_246cac615_ReferenceStack*);
inline jule::Any _246caca66_At(_246cac615_ReferenceStack*, jule::I64);
inline void _246cacb98_Push(_246cac615_ReferenceStack*, jule::Any);
inline jule::Bool _213008d4b_Exist(_246cac615_ReferenceStack*, jule::Ptr<_246cabb42_FnIns>);
inline jule::Bool _21301e79b_Exist(_246cac615_ReferenceStack*, jule::Ptr<_246d16372_Var>);
inline jule::Bool _2130bea16_Exist(_246cac615_ReferenceStack*, jule::Ptr<_246142319_StructIns>);
inline jule::Bool _2132a4a75_Exist(_246cac615_ReferenceStack*, jule::Ptr<_246cb3e9b_Trait>);
struct _246cac615_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	

	_246cac615_ReferenceStack(void) = default;

	inline bool operator==(_246cac615_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_246cac615_ReferenceStack _other) { return !this->operator==(_other); }


};
struct _246cace0c_Pass {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Str _field_Text;
	

	_246cace0c_Pass(void) = default;

	inline bool operator==(_246cace0c_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_246cace0c_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_246caed87_symbolBuilder> _246cb023e_getRoot(jule::Ptr<_246caed87_symbolBuilder>);
inline void _246cb0371_pushErr(_246caed87_symbolBuilder*, jule::Ptr<_24496dc35_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _246cb04a3_pushErrText(_246caed87_symbolBuilder*, jule::Ptr<_24496dc35_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _246cb05d5_pushSuggestion(_246caed87_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _246cb0717_checkCppUseDeclPath(_246caed87_symbolBuilder*, jule::Ptr<_24613d2d2_UseDecl>&, jule::Str);
inline jule::Ptr<_246ce04c2_ImportInfo> _246cb0849_buildCppHeaderImport(_246caed87_symbolBuilder*, jule::Ptr<_24613d2d2_UseDecl>&);
inline jule::Ptr<_246ce04c2_ImportInfo> _246cb097b_buildStdImport(_246caed87_symbolBuilder*, jule::Ptr<_24613d2d2_UseDecl>&);
inline jule::Ptr<_246ce04c2_ImportInfo> _246cb0aad_buildIdentImport(jule::Ptr<_246caed87_symbolBuilder>, jule::Ptr<_24613d2d2_UseDecl>&);
inline jule::Ptr<_246ce04c2_ImportInfo> _246cb0be0_buildImport(jule::Ptr<_246caed87_symbolBuilder>, jule::Ptr<_24613d2d2_UseDecl>&);
inline jule::Bool _246cb0d22_checkDuplicateUseDecl(_246caed87_symbolBuilder*, jule::Ptr<_246ce04c2_ImportInfo>&);
inline void _246cb0e54_implImportSelections(_246caed87_symbolBuilder*, jule::Ptr<_246ce04c2_ImportInfo>&, jule::Ptr<_24613d2d2_UseDecl>&);
inline jule::Str _246cb1086_getAsLinkPath(jule::Ptr<_246caed87_symbolBuilder>, jule::Str);
inline void _246cb13d8_pushCycleError(jule::Ptr<_246caed87_symbolBuilder>, jule::Ptr<_246caed87_symbolBuilder>&, jule::Str, jule::Str&);
inline void _246cb17a1_pushCrossCycleError(jule::Ptr<_246caed87_symbolBuilder>, jule::Ptr<_246caed87_symbolBuilder>&, jule::Ptr<_246ce04c2_ImportInfo>&, jule::Ptr<_24496dc35_Token>&);
inline jule::Bool _246cb1b58_checkImportCycles(jule::Ptr<_246caed87_symbolBuilder>, jule::Ptr<_246ce04c2_ImportInfo>, jule::Ptr<_24613d2d2_UseDecl>&);
inline void _246cb2043_checkPackageAccessibility(_246caed87_symbolBuilder*, jule::Ptr<_24613d2d2_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _246cb240b_importPackage(jule::Ptr<_246caed87_symbolBuilder>, jule::Ptr<_246ce04c2_ImportInfo>&, jule::Ptr<_24613d2d2_UseDecl>&);
inline jule::Ptr<_246ce04c2_ImportInfo> _246cb2719_importUseDecl(jule::Ptr<_246caed87_symbolBuilder>, jule::Ptr<_24613d2d2_UseDecl>&);
inline void _246cb28e5_importUseDecls(jule::Ptr<_246caed87_symbolBuilder>);
inline void _246cb2b6a_appendNode(_246caed87_symbolBuilder*, _2460dc45c_Node&);
inline void _246cb2d46_appendNodes(_246caed87_symbolBuilder*);
inline void _246cb30bb_pushDirectivePass(_246caed87_symbolBuilder*, jule::Ptr<_2460dc858_Directive>&);
inline void _246cb3297_appendTopDirectives(_246caed87_symbolBuilder*);
inline void _246cb3473_build(jule::Ptr<_246caed87_symbolBuilder>);
struct _246caed87_symbolBuilder {
	jule::Ptr<_246caed87_symbolBuilder> _field_owner;
	jule::Trait<_246cdc854_Importer> _field_importer;
	jule::Slice<_244640d69_Log> _field_errors;
	jule::Ptr<_2460db7ad_Ast> _field_ast;
	jule::Ptr<_246d5956e_SymbolTable> _field_table;
	

	_246caed87_symbolBuilder(void) = default;

	inline bool operator==(_246caed87_symbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_246caed87_symbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Str _246cb4397_Str(_246cb3e9b_Trait*);
inline jule::Bool _246cb46a5_Equals(jule::Ptr<_246cb3e9b_Trait>, jule::Ptr<_246d8ee9a_TypeKind>);
inline jule::Bool _246cb4a18_IsBuiltin(_246cb3e9b_Trait*);
inline jule::Ptr<_246cab768_Fn> _246cb4d26_FindMethod(_246cb3e9b_Trait*, jule::Str);
struct _246cb3e9b_Trait {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Slice<jule::Ptr<_246cab768_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_246117c3a_Struct>> _field_Implemented;
	

	_246cb3e9b_Trait(void) = default;

	inline bool operator==(_246cb3e9b_Trait _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Implemented == _other._field_Implemented;
	}

	inline bool operator!=(_246cb3e9b_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _246cb59d6_AutoExpr(_246cb55eb_EnumItem*);
struct _246cb55eb_EnumItem {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_246d60421_Value> _field_Value;
	

	_246cb55eb_EnumItem(void) = default;

	inline bool operator==(_246cb55eb_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_246cb55eb_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _246cb6454_Str(_246cb60e1_Enum*);
inline jule::Bool _246cb6762_Equals(jule::Ptr<_246cb60e1_Enum>, jule::Ptr<_246d8ee9a_TypeKind>);
inline jule::Ptr<_246cb55eb_EnumItem> _246cb6ba2_FindItem(_246cb60e1_Enum*, jule::Str);
struct _246cb60e1_Enum {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_246d94103_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_246cb55eb_EnumItem>> _field_Items;
	

	_246cb60e1_Enum(void) = default;

	inline bool operator==(_246cb60e1_Enum _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Items == _other._field_Items;
	}

	inline bool operator!=(_246cb60e1_Enum _other) { return !this->operator==(_other); }


};
struct _246cb7125_TypeEnumItem {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_246d94103_TypeSymbol> _field_Kind;
	

	_246cb7125_TypeEnumItem(void) = default;

	inline bool operator==(_246cb7125_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_246cb7125_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _246cb7a1b_Str(_246cb76db_TypeEnum*);
inline jule::Bool _246cb7d29_Equals(jule::Ptr<_246cb76db_TypeEnum>, jule::Ptr<_246d8ee9a_TypeKind>);
inline jule::Ptr<_246cb7125_TypeEnumItem> _246cb8225_FindItem(_246cb76db_TypeEnum*, jule::Str);
struct _246cb76db_TypeEnum {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_246cb7125_TypeEnumItem>> _field_Items;
	

	_246cb76db_TypeEnum(void) = default;

	inline bool operator==(_246cb76db_TypeEnum _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Items == _other._field_Items;
	}

	inline bool operator!=(_246cb76db_TypeEnum _other) { return !this->operator==(_other); }


};
inline jule::Fn<jule::Bool(jule::Ptr<_246ce861d_Sema>&,jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>>&)> _246cba18e_readyFn(jule::Ptr<_246cb9c60_constraintChecker>);
inline jule::Bool _246cba403_readyFi(jule::Ptr<_246cb9c60_constraintChecker>);
inline jule::Bool _246cba667_readySi(jule::Ptr<_246cb9c60_constraintChecker>);
inline jule::Bool _246cba8cb_ready(jule::Ptr<_246cb9c60_constraintChecker>);
inline jule::Bool _246cbab40_check(jule::Ptr<_246cb9c60_constraintChecker>);
struct _246cb9c60_constraintChecker {
	jule::Ptr<_246ce861d_Sema> _field_s;
	jule::Slice<jule::Ptr<_246132e20_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_246d8d76d_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>> _field_genericsA;
	jule::Ptr<_246cabb42_FnIns> _field_fi;
	jule::Ptr<_246142319_StructIns> _field_si;
	jule::Ptr<_24496dc35_Token> _field_et;
	jule::Bool _field_uniq = false;
	

	_246cb9c60_constraintChecker(void) = default;

	inline bool operator==(_246cb9c60_constraintChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_genericsD == _other._field_genericsD &&
			this->_field_generics == _other._field_generics &&
			this->_field_genericsA == _other._field_genericsA &&
			this->_field_fi == _other._field_fi &&
			this->_field_si == _other._field_si &&
			this->_field_et == _other._field_et &&
			this->_field_uniq == _other._field_uniq;
	}

	inline bool operator!=(_246cb9c60_constraintChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _246cbc092_IsTraitImpl(_246cbbb96_Impl*);
inline jule::Bool _246cbc306_IsStructImpl(_246cbbb96_Impl*);
struct _246cbbb96_Impl {
	jule::Ptr<_246125b27_TypeDecl> _field_Base;
	jule::Ptr<_246125b27_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_246cab768_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_246d16372_Var>> _field_Statics;
	

	_246cbbb96_Impl(void) = default;

	inline bool operator==(_246cbbb96_Impl _other) {
		return 
			this->_field_Base == _other._field_Base &&
			this->_field_Dest == _other._field_Dest &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics;
	}

	inline bool operator!=(_246cbbb96_Impl _other) { return !this->operator==(_other); }


};
struct _246cc1c01_Scope {
	jule::Ptr<_246cc1c01_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	

	_246cc1c01_Scope(void) = default;

	inline bool operator==(_246cc1c01_Scope _other) {
		return 
			this->_field_Parent == _other._field_Parent &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Deferred == _other._field_Deferred &&
			this->_field_Stmts == _other._field_Stmts;
	}

	inline bool operator!=(_246cc1c01_Scope _other) { return !this->operator==(_other); }


};
struct _246cc20ec_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_246cc1c01_Scope> _field_Scope;
	

	_246cc20ec_If(void) = default;

	inline bool operator==(_246cc20ec_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_246cc20ec_If _other) { return !this->operator==(_other); }


};
struct _246cc23d8_Else {
	jule::Ptr<_246cc1c01_Scope> _field_Scope;
	

	_246cc23d8_Else(void) = default;

	inline bool operator==(_246cc23d8_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_246cc23d8_Else _other) { return !this->operator==(_other); }


};
struct _246cc275c_Conditional {
	jule::Slice<jule::Ptr<_246cc20ec_If>> _field_Elifs;
	jule::Ptr<_246cc23d8_Else> _field_Default;
	

	_246cc275c_Conditional(void) = default;

	inline bool operator==(_246cc275c_Conditional _other) {
		return 
			this->_field_Elifs == _other._field_Elifs &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_246cc275c_Conditional _other) { return !this->operator==(_other); }


};
struct _246cc2a48_InfIter {
	jule::Ptr<_246cc1c01_Scope> _field_Scope;
	

	_246cc2a48_InfIter(void) = default;

	inline bool operator==(_246cc2a48_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_246cc2a48_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _246cc3362_IsWhileNext(_246cc2ebb_WhileIter*);
struct _246cc2ebb_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_246cc1c01_Scope> _field_Scope;
	

	_246cc2ebb_WhileIter(void) = default;

	inline bool operator==(_246cc2ebb_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_246cc2ebb_WhileIter _other) { return !this->operator==(_other); }


};
struct _246cc38a1_RangeIter {
	jule::Ptr<_246d5e398_Data> _field_Expr;
	jule::Ptr<_246cc1c01_Scope> _field_Scope;
	jule::Ptr<_246d16372_Var> _field_KeyA;
	jule::Ptr<_246d16372_Var> _field_KeyB;
	

	_246cc38a1_RangeIter(void) = default;

	inline bool operator==(_246cc38a1_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_246cc38a1_RangeIter _other) { return !this->operator==(_other); }


};
struct _246cc3c9c_ContSt {
	jule::Uintptr _field_It = 0;
	

	_246cc3c9c_ContSt(void) = default;

	inline bool operator==(_246cc3c9c_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_246cc3c9c_ContSt _other) { return !this->operator==(_other); }


};
struct _246cc4154_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	_246cc4154_BreakSt(void) = default;

	inline bool operator==(_246cc4154_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_246cc4154_BreakSt _other) { return !this->operator==(_other); }


};
struct _246cc4440_Label {
	jule::Str _field_Ident;
	

	_246cc4440_Label(void) = default;

	inline bool operator==(_246cc4440_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_246cc4440_Label _other) { return !this->operator==(_other); }


};
struct _246cc472b_GotoSt {
	jule::Str _field_Ident;
	

	_246cc472b_GotoSt(void) = default;

	inline bool operator==(_246cc472b_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_246cc472b_GotoSt _other) { return !this->operator==(_other); }


};
struct _246cc4ad3_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	_246cc4ad3_Postfix(void) = default;

	inline bool operator==(_246cc4ad3_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_246cc4ad3_Postfix _other) { return !this->operator==(_other); }


};
struct _246cc5056_Assign {
	jule::Ptr<_246ca5a2b_OperandExprModel> _field_L;
	jule::Ptr<_246ca5a2b_OperandExprModel> _field_R;
	jule::Ptr<_24496dc35_Token> _field_Op;
	

	_246cc5056_Assign(void) = default;

	inline bool operator==(_246cc5056_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_246cc5056_Assign _other) { return !this->operator==(_other); }


};
struct _246cc540d_MultiAssign {
	jule::Slice<jule::Any> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	

	_246cc540d_MultiAssign(void) = default;

	inline bool operator==(_246cc540d_MultiAssign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R;
	}

	inline bool operator!=(_246cc540d_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _246cc5e58_IsGenericTypeMatch(_246cc594c_Match*);
struct _246cc594c_Match {
	jule::Ptr<_246d5e398_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Slice<jule::Ptr<_246cc6497_Case>> _field_Cases;
	jule::Ptr<_246cc6497_Case> _field_Default;
	

	_246cc594c_Match(void) = default;

	inline bool operator==(_246cc594c_Match _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_TypeMatch == _other._field_TypeMatch &&
			this->_field_Cases == _other._field_Cases &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_246cc594c_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _246cc6761_isDefault(_246cc6497_Case*);
struct _246cc6497_Case {
	jule::Ptr<_246cc594c_Match> _field_Owner;
	jule::Ptr<_246cc1c01_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_246d5e398_Data>> _field_Exprs;
	jule::Ptr<_246cc6497_Case> _field_Next;
	

	_246cc6497_Case(void) = default;

	inline bool operator==(_246cc6497_Case _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Exprs == _other._field_Exprs &&
			this->_field_Next == _other._field_Next;
	}

	inline bool operator!=(_246cc6497_Case _other) { return !this->operator==(_other); }


};
struct _246cc6a4c_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	_246cc6a4c_FallSt(void) = default;

	inline bool operator==(_246cc6a4c_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_246cc6a4c_FallSt _other) { return !this->operator==(_other); }


};
struct _246cc6ec0_RetSt {
	jule::Ptr<_246cabb42_FnIns> _field_Func;
	jule::Slice<jule::Ptr<_246d16372_Var>> _field_Vars;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_246cc6ec0_RetSt(void) = default;

	inline bool operator==(_246cc6ec0_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Vars == _other._field_Vars &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_246cc6ec0_RetSt _other) { return !this->operator==(_other); }


};
struct _246cc75ca_scopeLabel {
	jule::Ptr<_24496dc35_Token> _field_token;
	jule::Ptr<_246cc4440_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_246cc8862_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	_246cc75ca_scopeLabel(void) = default;

	inline bool operator==(_246cc75ca_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_246cc75ca_scopeLabel _other) { return !this->operator==(_other); }


};
struct _246cc7a4d_scopeGoto {
	jule::Ptr<_24613367e_GotoSt> _field_gt;
	jule::Ptr<_246cc8862_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	_246cc7a4d_scopeGoto(void) = default;

	inline bool operator==(_246cc7a4d_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_246cc7a4d_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_246ce04c2_ImportInfo> _246cc8cb3_FindPackage(_246cc8862_scopeChecker*, jule::Str);
inline jule::Ptr<_246ce04c2_ImportInfo> _246cc90c1_SelectPackage(_246cc8862_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_246ce04c2_ImportInfo>)>);
inline jule::Ptr<_246d16372_Var> _246cc9478_FindVar(_246cc8862_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_246d8e2a7_TypeAlias> _246cc9830_FindTypeAlias(_246cc8862_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_246117c3a_Struct> _246cc9bd7_FindStruct(_246cc8862_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_246cab768_Fn> _246cca08e_FindFn(_246cc8862_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_246cb3e9b_Trait> _246cca39c_FindTrait(_246cc8862_scopeChecker*, jule::Str);
inline jule::Ptr<_246cb60e1_Enum> _246cca6aa_FindEnum(_246cc8862_scopeChecker*, jule::Str);
inline jule::Ptr<_246cb76db_TypeEnum> _246cca9b8_FindTypeEnum(_246cc8862_scopeChecker*, jule::Str);
inline jule::Bool _246ccace8_isUnsafe(jule::Ptr<_246cc8862_scopeChecker>);
inline jule::Bool _246ccb05c_isRoot(_246cc8862_scopeChecker*);
inline void _246ccb238_stop(_246cc8862_scopeChecker*);
inline jule::Bool _246ccb49c_stopped(_246cc8862_scopeChecker*);
inline jule::Bool _246ccb711_isDeferred(jule::Ptr<_246cc8862_scopeChecker>);
inline jule::Ptr<_246cc8862_scopeChecker> _246ccb975_getRoot(jule::Ptr<_246cc8862_scopeChecker>);
inline jule::Ptr<_246cc8862_scopeChecker> _246ccbbd9_getHardRoot(jule::Ptr<_246cc8862_scopeChecker>);
inline jule::Ptr<_246cc4440_Label> _246ccbee7_findLabel(_246cc8862_scopeChecker*, jule::Str);
inline jule::Ptr<_246cc75ca_scopeLabel> _246ccc305_findLabelScope(jule::Ptr<_246cc8862_scopeChecker>, jule::Str);
inline jule::Ptr<_246cc75ca_scopeLabel> _246ccc613_findLabelAll(_246cc8862_scopeChecker*, jule::Str);
inline jule::Bool _246ccc9ba_isDuplicatedIdent(_246cc8862_scopeChecker*, jule::Uintptr, jule::Str);
inline void _246cccc40_checkVarDecl(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_246138585_VarDecl>);
inline void _246ccceb5_checkTypeAliasDecl(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_24613bde6_TypeAliasDecl>);
inline jule::Ptr<_246cc1c01_Scope> _246ccd229_getChild(_246cc8862_scopeChecker*);
inline void _246ccd5e2_checkChildSsc(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_246135ab0_ScopeTree>&, jule::Ptr<_246cc1c01_Scope>&, jule::Ptr<_246cc8862_scopeChecker>&);
inline jule::Ptr<_246cc1c01_Scope> _246ccd999_checkChildSc(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_246135ab0_ScopeTree>&, jule::Ptr<_246cc8862_scopeChecker>&);
inline jule::Ptr<_246cc1c01_Scope> _246ccdca7_checkChild(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_246135ab0_ScopeTree>&);
inline void _246cce02c_checkAnonScope(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_246135ab0_ScopeTree>);
inline void _246cce34b_processErrorCall(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_246caa349_BuiltinErrorCallExprModel>&, jule::Ptr<_24496dc35_Token>);
inline void _246cce5c1_checkExpr(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_24612a148_Expr>);
inline jule::Ptr<_246cc20ec_If> _246cce8ce_checkIf(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_24613ade5_If>);
inline jule::Ptr<_246cc23d8_Else> _246ccebdc_checkElse(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_24613b29c_Else>);
inline void _246ccee62_checkConditional(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_24613b720_Conditional>);
inline void _246cd03c4_checkIterScopeSsc(jule::Ptr<_246cc8862_scopeChecker>, jule::Uintptr, jule::Ptr<_246135ab0_ScopeTree>, jule::Ptr<_246cc1c01_Scope>&, jule::Ptr<_246cc8862_scopeChecker>);
inline jule::Ptr<_246cc1c01_Scope> _246cd0825_checkIterScopeSc(jule::Ptr<_246cc8862_scopeChecker>, jule::Uintptr, jule::Ptr<_246135ab0_ScopeTree>, jule::Ptr<_246cc8862_scopeChecker>);
inline jule::Ptr<_246cc1c01_Scope> _246cd0bcc_checkIterScope(jule::Ptr<_246cc8862_scopeChecker>, jule::Uintptr, jule::Ptr<_246135ab0_ScopeTree>&);
inline void _246cd0e52_checkInfIter(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_24613909c_Iter>&);
inline void _246cd11c7_checkWhileIter(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_24613909c_Iter>&);
inline void _246cd144c_checkRangeIter(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_24613909c_Iter>&);
inline void _246cd16c2_checkIter(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_24613909c_Iter>);
inline jule::Bool _246cd19d0_checkValidContLabel(jule::Ptr<_246cc8862_scopeChecker>, jule::Uintptr);
inline jule::Bool _246cd1cdd_checkValidBreakLabel(jule::Ptr<_246cc8862_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_246cc3c9c_ContSt> _246cd20eb_checkContValidScope(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_24613a972_ContSt>);
inline void _246cd2371_checkCont(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_24613a972_ContSt>);
inline void _246cd25e6_checkLabel(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_2461332c7_LabelSt>);
inline void _246cd286b_pushGoto(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_24613367e_GotoSt>);
inline void _246cd2ae1_checkPostfix(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_2461345b4_AssignSt>);
inline jule::Bool _246cd2dee_isNewAssignIdent(_246cc8862_scopeChecker*, jule::Str);
inline jule::Bool _246cd3350_checkStructureAssignOp(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_246142319_StructIns>&, jule::Ptr<_2461345b4_AssignSt>&, jule::Ptr<_246d5e398_Data>&);
inline void _246cd35c5_checkSingleAssign(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_2461345b4_AssignSt>&);
inline void _246cd3b03_processEndPartOfMultiAssign(_246cc8862_scopeChecker*, jule::Ptr<_246cc540d_MultiAssign>&, jule::Ptr<_2461345b4_AssignSt>&, jule::Ptr<_246134075_AssignLeft>&, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d5e398_Data>&);
inline void _246cd3d89_checkMultiAssign(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_2461345b4_AssignSt>&);
inline void _246cd410e_checkAssignSt(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_2461345b4_AssignSt>);
inline jule::Ptr<_246cc1c01_Scope> _246cd44b6_checkCaseScope(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_246cc6497_Case>&, jule::Ptr<_246135ab0_ScopeTree>&);
inline jule::Ptr<_246cc6497_Case> _246cd49b1_checkCase(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_246cc594c_Match>, jule::I64, jule::Ptr<_24613c369_Case>, jule::Ptr<_246d5e398_Data>);
inline void _246cd4d79_checkCases(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_24613ca40_MatchCase>&, jule::Ptr<_246cc594c_Match>, jule::Ptr<_246d5e398_Data>);
inline jule::Ptr<_246cc6497_Case> _246cd5231_checkDefault(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_246cc594c_Match>, jule::Ptr<_24613b29c_Else>);
inline void _246cd54a6_checkComptimePanic(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_246cc1c01_Scope>&);
inline void _246cd57c5_pushTypeMatch(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_246cc594c_Match>, jule::Ptr<_24613ca40_MatchCase>&);
inline void _246cd5a4a_checkTypeMatch(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_24613ca40_MatchCase>&);
inline void _246cd5cc0_checkCommonMatch(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_24613ca40_MatchCase>&);
inline void _246cd6045_checkMatch(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_24613ca40_MatchCase>);
inline void _246cd62ba_checkFall(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_24613396a_FallSt>);
inline jule::Ptr<_246cc4154_BreakSt> _246cd65c8_checkBreakWithLabel(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_24613a5ba_BreakSt>);
inline jule::Ptr<_246cc4154_BreakSt> _246cd68d6_checkPlainBreak(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_24613a5ba_BreakSt>);
inline void _246cd6b5b_checkBreak(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_24613a5ba_BreakSt>);
inline void _246cd6dd1_checkRet(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_24613893c_RetSt>);
inline void _246cd7156_checkUseExpr(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_24612a9d9_UseExpr>);
inline void _246cd73cb_checkNode(jule::Ptr<_246cc8862_scopeChecker>, jule::Any&);
inline void _246cd75a7_checkResult(jule::Ptr<_246cc8862_scopeChecker>);
inline void _246cd7783_checkTree(jule::Ptr<_246cc8862_scopeChecker>);
inline void _246cd7aa2_checkGoto(_246cc8862_scopeChecker*, jule::Ptr<_246cc7a4d_scopeGoto>&, jule::Ptr<_246cc75ca_scopeLabel>&);
inline void _246cd7c7d_checkGotos(_246cc8862_scopeChecker*);
inline void _246cd7e59_checkLabels(_246cc8862_scopeChecker*);
inline void _246cd8135_checkVars(_246cc8862_scopeChecker*);
inline void _246cd8311_checkAliases(_246cc8862_scopeChecker*);
inline void _246cd8630_check(jule::Ptr<_246cc8862_scopeChecker>, jule::Ptr<_246135ab0_ScopeTree>&, jule::Ptr<_246cc1c01_Scope>&);
inline jule::Ptr<_246cc8862_scopeChecker> _246cd8894_newChildChecker(jule::Ptr<_246cc8862_scopeChecker>);
struct _246cc8862_scopeChecker {
	jule::Ptr<_24496dc35_Token> _field_calledFrom;
	jule::Ptr<_246ce861d_Sema> _field_s;
	jule::Ptr<_246cabb42_FnIns> _field_owner;
	jule::Ptr<_246cc8862_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_246d5956e_SymbolTable> _field_table;
	jule::Ptr<_246cc1c01_Scope> _field_scope;
	jule::Ptr<_246135ab0_ScopeTree> _field_tree;
	jule::Ptr<_246cabb42_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_246cc75ca_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_246cc7a4d_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	_246cc8862_scopeChecker(void) = default;

	inline bool operator==(_246cc8862_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_246cc8862_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _246cd9884_checkCdef(_246cd9444_directiveChecker*, jule::Ptr<_2460dc858_Directive>&);
inline void _246cd9b09_checkTypedef(_246cd9444_directiveChecker*, jule::Ptr<_2460dc858_Directive>&);
inline void _246cd9d7e_checkDerive(_246cd9444_directiveChecker*, jule::Ptr<_2460dc858_Directive>&);
inline void _246cda104_checkNamespace(_246cd9444_directiveChecker*, jule::Ptr<_2460dc858_Directive>&);
inline void _246cda379_checkDeprecated(_246cd9444_directiveChecker*, jule::Ptr<_2460dc858_Directive>&);
inline void _246cda5ee_checkTest(_246cd9444_directiveChecker*, jule::Ptr<_2460dc858_Directive>&);
inline void _246cda874_checkDirective(_246cd9444_directiveChecker*, jule::Ptr<_2460dc858_Directive>&);
inline void _246cdaa50_check(_246cd9444_directiveChecker*);
struct _246cd9444_directiveChecker {
	jule::Ptr<_246ce861d_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_2460dc858_Directive>>> _field_d;
	jule::Any _field_o;
	

	_246cd9444_directiveChecker(void) = default;

	inline bool operator==(_246cd9444_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_246cd9444_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_246ce04c2_ImportInfo> _246ce09de_FindPackage(_246ce04c2_ImportInfo*, jule::Str);
inline jule::Ptr<_246ce04c2_ImportInfo> _246ce0cec_SelectPackage(_246ce04c2_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_246ce04c2_ImportInfo>)>);
inline jule::Ptr<_246d16372_Var> _246ce11a4_FindVar(_246ce04c2_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_246d8e2a7_TypeAlias> _246ce155b_FindTypeAlias(_246ce04c2_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_246117c3a_Struct> _246ce1913_FindStruct(_246ce04c2_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_246cab768_Fn> _246ce1cba_FindFn(_246ce04c2_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_246cb3e9b_Trait> _246ce20c8_FindTrait(_246ce04c2_ImportInfo*, jule::Str);
inline jule::Ptr<_246cb60e1_Enum> _246ce23d6_FindEnum(_246ce04c2_ImportInfo*, jule::Str);
inline jule::Ptr<_246cb76db_TypeEnum> _246ce26e4_FindTypeEnum(_246ce04c2_ImportInfo*, jule::Str);
inline jule::Bool _246ce2a8a_isLookupable(_246ce04c2_ImportInfo*, jule::Str);
inline jule::Bool _246ce2d98_existIdent(_246ce04c2_ImportInfo*, jule::Str);
inline jule::Bool _246ce312e_isAccessibleViaSelection(_246ce04c2_ImportInfo*);
struct _246ce04c2_ImportInfo {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _field_Selected;
	jule::Ptr<_246ce342b_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	

	_246ce04c2_ImportInfo(void) = default;

	inline bool operator==(_246ce04c2_ImportInfo _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Path == _other._field_Path &&
			this->_field_LinkPath == _other._field_LinkPath &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Alias == _other._field_Alias &&
			this->_field_Duplicate == _other._field_Duplicate &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Std == _other._field_Std &&
			this->_field_ImportAll == _other._field_ImportAll &&
			this->_field_Selected == _other._field_Selected &&
			this->_field_Package == _other._field_Package &&
			this->_field_ModId == _other._field_ModId;
	}

	inline bool operator!=(_246ce04c2_ImportInfo _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_246ce04c2_ImportInfo> _246ce3904_FindPackage(_246ce342b_Package*, jule::Str);
inline jule::Ptr<_246ce04c2_ImportInfo> _246ce3c12_SelectPackage(_246ce342b_Package*, jule::Fn<jule::Bool(jule::Ptr<_246ce04c2_ImportInfo>)>);
inline jule::Ptr<_246d16372_Var> _246ce40b9_FindVar(_246ce342b_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_246d8e2a7_TypeAlias> _246ce4471_FindTypeAlias(_246ce342b_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_246117c3a_Struct> _246ce4828_FindStruct(_246ce342b_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_246cab768_Fn> _246ce4bd0_FindFn(_246ce342b_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_246cb3e9b_Trait> _246ce4edd_FindTrait(_246ce342b_Package*, jule::Str);
inline jule::Ptr<_246cb60e1_Enum> _246ce52eb_FindEnum(_246ce342b_Package*, jule::Str);
inline jule::Ptr<_246cb76db_TypeEnum> _246ce5609_FindTypeEnum(_246ce342b_Package*, jule::Str);
struct _246ce342b_Package {
	jule::Slice<jule::Ptr<_246d5956e_SymbolTable>> _field_Files;
	

	_246ce342b_Package(void) = default;

	inline bool operator==(_246ce342b_Package _other) {
		return 
			this->_field_Files == _other._field_Files;
	}

	inline bool operator!=(_246ce342b_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_246ce04c2_ImportInfo> _246ce8b3a_FindPackage(_246ce861d_Sema*, jule::Str);
inline jule::Ptr<_246ce04c2_ImportInfo> _246ce8e48_SelectPackage(_246ce861d_Sema*, jule::Fn<jule::Bool(jule::Ptr<_246ce04c2_ImportInfo>)>);
inline jule::Ptr<_246d16372_Var> _246ce9300_FindVar(_246ce861d_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_246d8e2a7_TypeAlias> _246ce96a7_FindTypeAlias(_246ce861d_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_246117c3a_Struct> _246ce9a5e_FindStruct(_246ce861d_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_246cab768_Fn> _246ce9e16_FindFn(_246ce861d_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_246cb3e9b_Trait> _246cea224_FindTrait(_246ce861d_Sema*, jule::Str);
inline jule::Ptr<_246cb60e1_Enum> _246cea532_FindEnum(_246ce861d_Sema*, jule::Str);
inline jule::Ptr<_246cb76db_TypeEnum> _246cea840_FindTypeEnum(_246ce861d_Sema*, jule::Str);
inline jule::Bool _246ceab92_isFlag(_246ce861d_Sema*, jule::I64);
inline void _246ceae17_setCurrentFile(_246ce861d_Sema*, jule::Ptr<_246d5956e_SymbolTable>);
inline void _246ceb2d0_pushErr(_246ce861d_Sema*, jule::Ptr<_24496dc35_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _246ceb5ee_pushSugggestion(_246ce861d_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _246ceb9a6_isAccessibleDefine(_246ce861d_Sema*, jule::Bool, jule::Ptr<_24496dc35_Token>);
inline jule::Bool _246cebe07_isDuplicatedIdent(_246ce861d_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _246cec226_checkDirectives(jule::Ptr<_246ce861d_Sema>, jule::Slice<jule::Ptr<_2460dc858_Directive>>&, jule::Any);
inline jule::Bool _246cec677_checkGenericQuantity(_246ce861d_Sema*, jule::I64, jule::I64, jule::Ptr<_24496dc35_Token>);
inline jule::Bool _246ceca51_isDuplicatedImportSelection(_246ce861d_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _246cece19_getImportDef(_246ce861d_Sema*, jule::Str, jule::Ptr<_246ce04c2_ImportInfo>&);
inline jule::Bool _212b36913_checkImportSelection(_246ce861d_Sema*, jule::Ptr<_24496dc35_Token>&, jule::Ptr<_246d16372_Var>&);
inline jule::Bool _212b3ae67_checkImportSelection(_246ce861d_Sema*, jule::Ptr<_24496dc35_Token>&, jule::Ptr<_246d8e2a7_TypeAlias>&);
inline jule::Bool _212b40477_checkImportSelection(_246ce861d_Sema*, jule::Ptr<_24496dc35_Token>&, jule::Ptr<_246117c3a_Struct>&);
inline jule::Bool _212b44b85_checkImportSelection(_246ce861d_Sema*, jule::Ptr<_24496dc35_Token>&, jule::Ptr<_246cb3e9b_Trait>&);
inline jule::Bool _212b49195_checkImportSelection(_246ce861d_Sema*, jule::Ptr<_24496dc35_Token>&, jule::Ptr<_246cb60e1_Enum>&);
inline jule::Bool _212b4d6a5_checkImportSelection(_246ce861d_Sema*, jule::Ptr<_24496dc35_Token>&, jule::Ptr<_246cb76db_TypeEnum>&);
inline jule::Bool _212b52bb5_checkImportSelection(_246ce861d_Sema*, jule::Ptr<_24496dc35_Token>&, jule::Ptr<_246cab768_Fn>&);
inline jule::Bool _246ced601_checkImportSelectedSelections(_246ce861d_Sema*, jule::Ptr<_246ce04c2_ImportInfo>&);
inline jule::Bool _212b57714_checkImportsAllSelectionsFromCollection(_246ce861d_Sema*, jule::Slice<jule::Ptr<_246d16372_Var>>&, jule::Ptr<_24496dc35_Token>&);
inline jule::Bool _212b58b77_checkImportsAllSelectionsFromCollection(_246ce861d_Sema*, jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>>&, jule::Ptr<_24496dc35_Token>&);
inline jule::Bool _212b5b2ea_checkImportsAllSelectionsFromCollection(_246ce861d_Sema*, jule::Slice<jule::Ptr<_246117c3a_Struct>>&, jule::Ptr<_24496dc35_Token>&);
inline jule::Bool _212b60882_checkImportsAllSelectionsFromCollection(_246ce861d_Sema*, jule::Slice<jule::Ptr<_246cab768_Fn>>&, jule::Ptr<_24496dc35_Token>&);
inline jule::Bool _212b62356_checkImportsAllSelectionsFromCollection(_246ce861d_Sema*, jule::Slice<jule::Ptr<_246cb3e9b_Trait>>&, jule::Ptr<_24496dc35_Token>&);
inline jule::Bool _212b65326_checkImportsAllSelectionsFromCollection(_246ce861d_Sema*, jule::Slice<jule::Ptr<_246cb60e1_Enum>>&, jule::Ptr<_24496dc35_Token>&);
inline jule::Bool _212b682e6_checkImportsAllSelectionsFromCollection(_246ce861d_Sema*, jule::Slice<jule::Ptr<_246cb76db_TypeEnum>>&, jule::Ptr<_24496dc35_Token>&);
inline jule::Bool _246cedd2c_checkImportAllSelections(_246ce861d_Sema*, jule::Ptr<_246ce04c2_ImportInfo>&);
inline jule::Bool _246cee14b_checkImportSelections(_246ce861d_Sema*, jule::Ptr<_246ce04c2_ImportInfo>&);
inline jule::Bool _246cee459_isUseAliasDuplication(_246ce861d_Sema*, jule::Ptr<_246ce04c2_ImportInfo>&);
inline jule::Bool _246cee767_checkImport(_246ce861d_Sema*, jule::Ptr<_246ce04c2_ImportInfo>&);
inline void _246cee943_checkImports(_246ce861d_Sema*);
inline void _246ceeb1e_implFileImpls(jule::Ptr<_246ce861d_Sema>);
inline void _246ceecea_implImpls(jule::Ptr<_246ce861d_Sema>);
inline void _246ceeec6_checkEnums(jule::Ptr<_246ce861d_Sema>);
inline _246d9d4c5_typeChecker _246d00427_typeChecker(jule::Ptr<_246ce861d_Sema>, jule::Trait<_246daaacb_Lookup>, jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>>, jule::Ptr<_246d9c6b1_referencer>);
inline jule::Ptr<_246d8ee9a_TypeKind> _246d00922_buildTypeWithRefers(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246125b27_TypeDecl>&, jule::Trait<_246daaacb_Lookup>, jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>>, jule::Ptr<_246d9c6b1_referencer>);
inline jule::Bool _246d00e1c_checkTypeWithRefers(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246d94103_TypeSymbol>&, jule::Trait<_246daaacb_Lookup>, jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>>, jule::Ptr<_246d9c6b1_referencer>);
inline jule::Ptr<_246cb9c60_constraintChecker> _246d01181_constraintChecker(jule::Ptr<_246ce861d_Sema>);
inline jule::Bool _246d01538_checkType(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246d94103_TypeSymbol>&, jule::Trait<_246daaacb_Lookup>);
inline jule::Ptr<_246d8ee9a_TypeKind> _246d01989_buildTypeWithGenerics(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246125b27_TypeDecl>&, jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>>, jule::Ptr<_246cac615_ReferenceStack>);
inline jule::Ptr<_246d8ee9a_TypeKind> _246d01c97_buildType(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246125b27_TypeDecl>&);
inline jule::Ptr<_246d8ee9a_TypeKind> _246d020a5_selectType(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246125b27_TypeDecl>&);
inline jule::Ptr<_246d60e16_Eval> _246d02506_evalpd(jule::Ptr<_246ce861d_Sema>, jule::Trait<_246daaacb_Lookup>, jule::Ptr<_246d8ee9a_TypeKind>, jule::Ptr<_246d16372_Var>);
inline jule::Ptr<_246d60e16_Eval> _246d028ad_evalp(jule::Ptr<_246ce861d_Sema>, jule::Trait<_246daaacb_Lookup>, jule::Ptr<_246d8ee9a_TypeKind>);
inline jule::Ptr<_246d60e16_Eval> _246d02bbb_eval(jule::Ptr<_246ce861d_Sema>, jule::Trait<_246daaacb_Lookup>);
inline jule::Bool _246d031b6_checkAssignType(jule::Ptr<_246ce861d_Sema>, jule::Bool, jule::Ptr<_246d8ee9a_TypeKind>&, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_24496dc35_Token>);
inline jule::Bool _246d03617_checkTypeCompatibility(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246d8ee9a_TypeKind>&, jule::Ptr<_246d8ee9a_TypeKind>&, jule::Ptr<_24496dc35_Token>&);
inline jule::Ptr<_246d8ee9a_TypeKind> _246d039e1_buildNonGenericTypeKind(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246125b27_TypeDecl>&, jule::Slice<jule::Ptr<_246132e20_GenericDecl>>&);
inline void _246d03c99_buildFnNonGenericTypeKinds(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246cabb42_FnIns>&);
inline jule::Ptr<_246cabb42_FnIns> _246d040b8_getTraitCheckFnKind(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246cab768_Fn>&);
inline jule::Bool _246d04519_checkConstraintsFn(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246cabb42_FnIns>&, jule::Ptr<_24496dc35_Token>&, jule::Ptr<_246cabb42_FnIns>);
inline jule::Bool _246d0496a_checkConstraintsStruct(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246142319_StructIns>&, jule::Ptr<_24496dc35_Token>&, jule::Ptr<_246142319_StructIns>);
inline jule::Bool _246d04d22_fnEnvironment(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246cabb42_FnIns>&, jule::Fn<jule::Bool(jule::Ptr<_246ce861d_Sema>&,jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>>&)>);
inline void _246d05097_checkFnParamKind(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246cab955_ParamIns>&);
inline jule::Bool _246d053a5_reloadFnInsTypes(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246cabb42_FnIns>);
inline jule::Bool _246d05828_checkRefValidityForInitExpr(jule::Ptr<_246ce861d_Sema>, jule::Bool, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_24496dc35_Token>&);
inline jule::Bool _246d05e00_checkValidityForInitExpr(jule::Ptr<_246ce861d_Sema>, jule::Bool, jule::Bool, jule::Ptr<_246d8ee9a_TypeKind>&, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_24496dc35_Token>&);
inline jule::Bool _246d062b8_checkTypeAliasDeclKind(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246d8e2a7_TypeAlias>&, jule::Trait<_246daaacb_Lookup>);
inline void _246d065d7_checkTypeAliasDecl(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246d8e2a7_TypeAlias>&, jule::Trait<_246daaacb_Lookup>);
inline void _246d0685c_checkTypeAliasDeclDup(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246d8e2a7_TypeAlias>&);
inline jule::Bool _246d06ac1_checkTypeAliasDecls(jule::Ptr<_246ce861d_Sema>);
inline void _212bdc436_checkEnumItemsDup(_246ce861d_Sema*, jule::Slice<jule::Ptr<_246cb55eb_EnumItem>>);
inline void _212be8475_checkEnumItemsDup(_246ce861d_Sema*, jule::Slice<jule::Ptr<_246cb7125_TypeEnumItem>>);
inline void _246d070bb_checkEnumItemsStr(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246cb60e1_Enum>&);
inline void _246d07341_checkEnumItemsInt(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246cb60e1_Enum>&);
inline void _246d075b6_checkEnumDecl(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246cb60e1_Enum>&);
inline void _246d0783b_checkTypeEnumDecl(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246cb76db_TypeEnum>&);
inline jule::Bool _246d07aa0_checkEnumDecls(jule::Ptr<_246ce861d_Sema>);
inline jule::Bool _246d07d14_checkTypeEnumDecls(jule::Ptr<_246ce861d_Sema>);
inline jule::Bool _246d08122_checkDeclGenerics(_246ce861d_Sema*, jule::Slice<jule::Ptr<_246132e20_GenericDecl>>&);
inline jule::Bool _246d08430_checkFnDeclParamsDup(_246ce861d_Sema*, jule::Ptr<_246cab768_Fn>&);
inline jule::Bool _246d0873d_checkFnDeclResultDup(_246ce861d_Sema*, jule::Ptr<_246cab768_Fn>&);
inline void _246d089b3_checkFnDeclPrototype(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246cab768_Fn>&);
inline void _246d08c38_checkTraitDeclMethod(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246cab768_Fn>&);
inline void _246d08ead_checkTraitDeclMethods(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246cb3e9b_Trait>&);
inline void _246d09233_checkTraitDecl(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246cb3e9b_Trait>&);
inline jule::Bool _246d09497_checkTraitDecls(jule::Ptr<_246ce861d_Sema>);
inline jule::Bool _246d0984e_checkTraitImplMethods(_246ce861d_Sema*, jule::Ptr<_246cb3e9b_Trait>&, jule::Ptr<_246cbbb96_Impl>&);
inline jule::Bool _246d09c06_implToStruct(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246117c3a_Struct>&, jule::Ptr<_246cbbb96_Impl>&);
inline void _246d09e7b_implTrait(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246cbbb96_Impl>&);
inline void _246d0a201_implStruct(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246cbbb96_Impl>&);
inline void _246d0a476_implImpl(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246cbbb96_Impl>&);
inline void _246d0a795_checkVarDecl(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246d16372_Var>&, jule::Trait<_246daaacb_Lookup>);
inline void _246d0aa1a_checkGlobalVarDecl(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246d16372_Var>&);
inline jule::Bool _246d0ac7e_checkGlobalDecls(jule::Ptr<_246ce861d_Sema>);
inline jule::Bool _246d0b136_checkStructTraitImpl(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246117c3a_Struct>&, jule::Ptr<_246cb3e9b_Trait>&);
inline jule::Bool _246d0b444_checkStructImpls(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246117c3a_Struct>&);
inline jule::Bool _246d0b752_checkStructFields(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246117c3a_Struct>&);
inline void _246d0b9c7_checkStructDecl(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246117c3a_Struct>&);
inline jule::Bool _246d0bc3b_checkStructDecls(jule::Ptr<_246ce861d_Sema>);
inline void _246d0beb1_checkFnDecl(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246cab768_Fn>&);
inline jule::Bool _246d0c225_checkFnDecls(jule::Ptr<_246ce861d_Sema>);
inline void _246d0c5dd_pushCycleError(_246ce861d_Sema*, jule::Ptr<_246117c3a_Struct>&, jule::Ptr<_246117c3a_Struct>&, jule::Str&);
inline jule::Bool _246d0ca3e_checkCrossCycle(_246ce861d_Sema*, jule::Ptr<_246117c3a_Struct>&, jule::Ptr<_246117c3a_Struct>&, jule::Str&);
inline jule::Bool _246d0ceb2_checkStructDeriveIllegalCycles(_246ce861d_Sema*, jule::Str, jule::Ptr<_246117c3a_Struct>&, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Bool _246d0d303_checkStructInsDeriveClone(_246ce861d_Sema*, jule::Ptr<_246142319_StructIns>);
inline void _246d0d4e0_checkPackageDecls(jule::Ptr<_246ce861d_Sema>);
inline void _246d0d831_checkDataForTypeInference(_246ce861d_Sema*, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_24496dc35_Token>&);
inline void _246d0dab7_checkVar(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246d16372_Var>&);
inline void _246d0ddd6_checkTypeVar(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246d16372_Var>&, jule::Trait<_246daaacb_Lookup>);
inline void _246d0e0b2_checkGlobalTypes(jule::Ptr<_246ce861d_Sema>);
inline jule::Ptr<_246cabb42_FnIns> _246d0e469_readyToCheckFn(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246142319_StructIns>&, jule::Ptr<_246cab768_Fn>&);
inline void _246d0e788_checkTypeMethod(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246142319_StructIns>&, jule::Ptr<_246cab768_Fn>&);
inline jule::Ptr<_246cabb42_FnIns> _246d0ebd9_checkStructInsOp(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246142319_StructIns>&, jule::Ptr<_246cab768_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>);
inline jule::Bool _246d10091_checkStructEnv(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246142319_StructIns>&, jule::Ptr<_24496dc35_Token>);
inline jule::Bool _246d10448_precheckStructIns(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246142319_StructIns>&, jule::Ptr<_24496dc35_Token>);
inline void _246d106bd_checkStructIns(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246142319_StructIns>&);
inline void _246d10943_checkTypeStruct(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246117c3a_Struct>&);
inline void _246d10b1e_checkStructTypes(jule::Ptr<_246ce861d_Sema>);
inline void _246d10db6_checkStructInsOperators(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246142319_StructIns>);
inline void _246d1114c_precheckStructType(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246117c3a_Struct>&);
inline void _246d11328_precheckStructTypes(jule::Ptr<_246ce861d_Sema>);
inline void _246d1159d_checkRets(_246ce861d_Sema*, jule::Ptr<_246cabb42_FnIns>&);
inline void _246d118bc_checkFnInsSc(_246ce861d_Sema*, jule::Ptr<_246cabb42_FnIns>&, jule::Ptr<_246cc8862_scopeChecker>&);
inline void _246d11bdb_checkFnInsCaller(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246cabb42_FnIns>&, jule::Ptr<_24496dc35_Token>);
inline void _246d11e61_checkFnIns(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246cabb42_FnIns>&);
inline void _246d121d6_checkTypeFn(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246cab768_Fn>&);
inline void _246d1245b_checkTestFn(_246ce861d_Sema*, jule::Ptr<_246cabb42_FnIns>&);
inline void _246d126d1_precheckTypeFn(jule::Ptr<_246ce861d_Sema>, jule::Ptr<_246cab768_Fn>&);
inline void _246d128ac_precheckFnTypes(jule::Ptr<_246ce861d_Sema>);
inline void _246d12a88_checkFnTypes(jule::Ptr<_246ce861d_Sema>);
inline void _246d12c64_checkPackageTypes(jule::Ptr<_246ce861d_Sema>);
inline void _246d12e40_setFileSemaFields(jule::Ptr<_246ce861d_Sema>);
inline void _246d1311b_setSemaFields(jule::Ptr<_246ce861d_Sema>);
inline void _246d13391_check(jule::Ptr<_246ce861d_Sema>, jule::Slice<jule::Ptr<_246d5956e_SymbolTable>>&);
struct _246ce861d_Sema {
	jule::Slice<_244640d69_Log> _field_errors;
	jule::Slice<jule::Ptr<_246d5956e_SymbolTable>> _field_files;
	jule::Ptr<_246d5956e_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	

	_246ce861d_Sema(void) = default;

	inline bool operator==(_246ce861d_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_246ce861d_Sema _other) { return !this->operator==(_other); }


};
inline _246d13748_missingRetChecker static__246d13b11_new(void);
inline jule::Bool _246d13ddb_checkConditional(_246d13748_missingRetChecker*, jule::Ptr<_246cc275c_Conditional>);
inline jule::Bool _246d141e9_checkMatch(_246d13748_missingRetChecker*, jule::Ptr<_246cc594c_Match>);
inline jule::Bool _246d14507_checkInfIter(_246d13748_missingRetChecker*, jule::Ptr<_246cc2a48_InfIter>);
inline jule::Bool _246d14815_checkScope(_246d13748_missingRetChecker*, jule::Ptr<_246cc1c01_Scope>);
inline jule::Bool _246d14b23_check(_246d13748_missingRetChecker*, jule::Ptr<_246cc1c01_Scope>);
struct _246d13748_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	

	_246d13748_missingRetChecker(void) = default;

	inline bool operator==(_246d13748_missingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_246d13748_missingRetChecker _other) { return !this->operator==(_other); }


};
struct _246d15409_IterRelation {
	jule::Ptr<_246d16372_Var> _field_Range;
	

	_246d15409_IterRelation(void) = default;

	inline bool operator==(_246d15409_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_246d15409_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _246d1673a_IsInitialized(_246d16372_Var*);
inline jule::Bool _246d1699e_IsTypeInferred(_246d16372_Var*);
inline jule::Bool _246d16c13_untypedConstant(_246d16372_Var*);
struct _246d16372_Var {
	jule::Ptr<_246cc1c01_Scope> _field_Scope;
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_246d94103_TypeSymbol> _field_Kind;
	jule::Ptr<_246d60421_Value> _field_Value;
	jule::Ptr<_246cac615_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_2460dc858_Directive>> _field_Directives;
	jule::Ptr<_246d15409_IterRelation> _field_IterRelation;
	jule::Slice<jule::Ptr<_246d16372_Var>> _field_Depends;
	

	_246d16372_Var(void) = default;

	inline bool operator==(_246d16372_Var _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Constant == _other._field_Constant &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Public == _other._field_Public &&
			this->_field_Used == _other._field_Used &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Value == _other._field_Value &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_IterRelation == _other._field_IterRelation &&
			this->_field_Depends == _other._field_Depends;
	}

	inline bool operator!=(_246d16372_Var _other) { return !this->operator==(_other); }


};
inline jule::Bool static__246d17791_Dispose(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d17a38_Str(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d17d79_logical(jule::Ptr<_246cab768_Fn>&, jule::Str);
inline jule::Bool static__246d18121_Eq(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d183b8_Gt(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d18660_GtEq(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d18907_Lt(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d18b9e_LtEq(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d18ee0_result(jule::Ptr<_246cab768_Fn>&, jule::Str);
inline jule::Bool static__246d19287_Shl(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d1952e_Shr(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d197c6_Add(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d19a6d_Sub(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d19d15_Div(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d1a0ac_Mul(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d1a354_Mod(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d1a5eb_BitAnd(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d1a893_BitOr(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d1ab3a_BitXor(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d1ae7b_unary(jule::Ptr<_246cab768_Fn>&, jule::Str);
inline jule::Bool static__246d1b223_Neg(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d1b4ba_Pos(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d1b762_BitNot(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d1baa3_assign(jule::Ptr<_246cab768_Fn>&, jule::Str);
inline jule::Bool static__246d1bd4a_AddAssign(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d1c0e2_SubAssign(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d1c389_DivAssign(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d1c631_MulAssign(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d1c8c8_ModAssign(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d1cb70_ShlAssign(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d1ce17_ShrAssign(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d1d1ae_BitOrAssign(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d1d456_BitAndAssign(jule::Ptr<_246cab768_Fn>);
inline jule::Bool static__246d1d6ed_BitXorAssign(jule::Ptr<_246cab768_Fn>);
struct _246d17120_FuncPattern {
	

	_246d17120_FuncPattern(void) = default;

	inline bool operator==(_246d17120_FuncPattern _other) { return true; }

	inline bool operator!=(_246d17120_FuncPattern _other) { return !this->operator==(_other); }


};
inline void _246d4855d_pushErr(_246d48041_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _246d487c2_checkTrait(_246d48041_typeCompatibilityChecker*);
inline jule::Bool _246d48a36_checkPtr(_246d48041_typeCompatibilityChecker*);
inline jule::Bool _246d48c9a_checkPrim(_246d48041_typeCompatibilityChecker*);
inline jule::Bool _246d49152_typeEnum(_246d48041_typeCompatibilityChecker*, jule::Ptr<_246cb76db_TypeEnum>&, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Bool _246d493b6_checkTypeEnum(_246d48041_typeCompatibilityChecker*);
inline jule::Bool _246d4962a_check(_246d48041_typeCompatibilityChecker*);
struct _246d48041_typeCompatibilityChecker {
	jule::Ptr<_246ce861d_Sema> _field_s;
	jule::Ptr<_246d8ee9a_TypeKind> _field_dest;
	jule::Ptr<_246d8ee9a_TypeKind> _field_src;
	jule::Ptr<_24496dc35_Token> _field_errorToken;
	

	_246d48041_typeCompatibilityChecker(void) = default;

	inline bool operator==(_246d48041_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_246d48041_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _246d4a0cb_pushErr(_246d49b69_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _246d4a340_checkValidity(_246d49b69_assignTypeChecker*);
inline jule::Bool _246d4a5a4_checkConst(_246d49b69_assignTypeChecker*);
inline jule::Bool _246d4a818_isPrim(_246d49b69_assignTypeChecker*);
inline jule::Bool _246d4aa7c_checkCompatibility(_246d49b69_assignTypeChecker*);
inline jule::Bool _246d4ace1_check(_246d49b69_assignTypeChecker*);
struct _246d49b69_assignTypeChecker {
	jule::Ptr<_246ce861d_Sema> _field_s;
	jule::Ptr<_246d8ee9a_TypeKind> _field_dest;
	jule::Ptr<_246d5e398_Data> _field_d;
	jule::Ptr<_24496dc35_Token> _field_errorToken;
	

	_246d49b69_assignTypeChecker(void) = default;

	inline bool operator==(_246d49b69_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_246d49b69_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _212da03da_annotateConstraintElem(_246d4b583_dynamicTypeAnnotation*, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Bool _212d9ea7c_annotateConstraintElem(_246d4b583_dynamicTypeAnnotation*, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Bool _212d9ed68_annotateConstraintElem(_246d4b583_dynamicTypeAnnotation*, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Bool _212da83d2_annotateConstraintElem(_246d4b583_dynamicTypeAnnotation*, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Bool _246d4be68_annotateConstraintMap(_246d4b583_dynamicTypeAnnotation*, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Bool _246d4c276_annotateConstraintTup(_246d4b583_dynamicTypeAnnotation*, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Bool _246d4c584_annotateConstraintFn(_246d4b583_dynamicTypeAnnotation*, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Bool _246d4c8b4_annotateConstraintIdent(_246d4b583_dynamicTypeAnnotation*, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Bool _246d4cbd3_annotateConstraint(_246d4b583_dynamicTypeAnnotation*, jule::Ptr<_246d8ee9a_TypeKind>&);
inline void _246d4d002_pushGeneric(_246d4b583_dynamicTypeAnnotation*, jule::Ptr<_246d8ee9a_TypeKind>&, jule::I64);
inline jule::Bool _246d4d310_annotatePrim(_246d4b583_dynamicTypeAnnotation*, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Bool _246d4d61d_annotateArr(_246d4b583_dynamicTypeAnnotation*, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Bool _246d4d92b_annotateSlc(_246d4b583_dynamicTypeAnnotation*, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Bool _246d4dcd3_checkMapKey(_246d4b583_dynamicTypeAnnotation*, jule::Ptr<_246d8ee9a_TypeKind>*, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Bool _246d4e0e1_annotateMap(_246d4b583_dynamicTypeAnnotation*, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Bool _246d4e3ee_annotateFn(_246d4b583_dynamicTypeAnnotation*, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Bool _246d4e70c_annotatePtr(_246d4b583_dynamicTypeAnnotation*, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Bool _246d4ea1a_annotateSptr(_246d4b583_dynamicTypeAnnotation*, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Bool _246d4ed28_annotateStruct(_246d4b583_dynamicTypeAnnotation*, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Bool _246d50136_annotateAny(_246d4b583_dynamicTypeAnnotation*, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Bool _246d50444_annotateKind(_246d4b583_dynamicTypeAnnotation*, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Bool _246d506a8_annotate(_246d4b583_dynamicTypeAnnotation*);
struct _246d4b583_dynamicTypeAnnotation {
	jule::Ptr<_246d60e16_Eval> _field_e;
	jule::Ptr<_246cabb42_FnIns> _field_f;
	jule::Ptr<_246cab955_ParamIns> _field_p;
	jule::Ptr<_246d5e398_Data> _field_a;
	jule::Ptr<_24496dc35_Token> _field_errorToken;
	jule::Ptr<_246d8ee9a_TypeKind>* _field_k = nullptr;
	jule::Ptr<_246125b27_TypeDecl> _field_c;
	

	_246d4b583_dynamicTypeAnnotation(void) = default;

	inline bool operator==(_246d4b583_dynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_k == _other._field_k &&
			this->_field_c == _other._field_c;
	}

	inline bool operator!=(_246d4b583_dynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _246d513ce_pushErrToken(_246d50d7e_fnCallArgChecker*, jule::Ptr<_24496dc35_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _246d516ed_pushErr(_246d50d7e_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_246cab955_ParamIns>> _246d51962_getParams(_246d50d7e_fnCallArgChecker*);
inline jule::Bool _246d51c70_checkCounts(_246d50d7e_fnCallArgChecker*, jule::Slice<jule::Ptr<_246cab955_ParamIns>>&);
inline jule::Bool _246d521c1_checkArg(_246d50d7e_fnCallArgChecker*, jule::Ptr<_246cab955_ParamIns>&, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_24496dc35_Token>&);
inline jule::Bool _246d52578_push(_246d50d7e_fnCallArgChecker*, jule::Ptr<_246cab955_ParamIns>&, jule::Ptr<_24612a148_Expr>);
inline jule::Bool _246d52930_pushVariadic(_246d50d7e_fnCallArgChecker*, jule::Ptr<_246cab955_ParamIns>&, jule::I64);
inline jule::Bool _246d52c3d_checkArgs(_246d50d7e_fnCallArgChecker*, jule::Slice<jule::Ptr<_246cab955_ParamIns>>&);
inline jule::Bool _246d52ec4_checkDynamicTypeAnnotation(_246d50d7e_fnCallArgChecker*);
inline jule::Bool _246d53249_check(_246d50d7e_fnCallArgChecker*);
struct _246d50d7e_fnCallArgChecker {
	jule::Ptr<_246d60e16_Eval> _field_e;
	jule::Slice<jule::Ptr<_24612a148_Expr>> _field_args;
	jule::Ptr<_24496dc35_Token> _field_errorToken;
	jule::Ptr<_246cabb42_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	

	_246d50d7e_fnCallArgChecker(void) = default;

	inline bool operator==(_246d50d7e_fnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_f == _other._field_f &&
			this->_field_dynamicAnnotation == _other._field_dynamicAnnotation &&
			this->_field_argModels == _other._field_argModels;
	}

	inline bool operator!=(_246d50d7e_fnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _246d53c94_pushErr(_246d53788_structLitChecker*, jule::Ptr<_24496dc35_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _246d540b3_pushSugggestion(_246d53788_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _246d5447b_pushMatch(_246d53788_structLitChecker*, jule::Ptr<_24611d977_FieldIns>&, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_24496dc35_Token>&);
inline void _246d5479a_checkPair(_246d53788_structLitChecker*, jule::Ptr<_24612eaa9_FieldExprPair>&, jule::Slice<jule::Ptr<_24612a148_Expr>>&);
inline jule::Bool _246d54aa8_readyExprs(_246d53788_structLitChecker*, jule::Slice<jule::Ptr<_24612a148_Expr>>&);
inline void _246d54d2d_check(_246d53788_structLitChecker*, jule::Slice<jule::Ptr<_24612a148_Expr>>&);
struct _246d53788_structLitChecker {
	jule::Ptr<_246d60e16_Eval> _field_e;
	jule::Ptr<_24496dc35_Token> _field_errorToken;
	jule::Ptr<_246142319_StructIns> _field_s;
	jule::Slice<jule::Ptr<_246ca60e2_StructArgExprModel>> _field_args;
	

	_246d53788_structLitChecker(void) = default;

	inline bool operator==(_246d53788_structLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_246d53788_structLitChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_246d16372_Var> _246d55812_buildVar(_246d5536c_rangeChecker*, jule::Ptr<_246138585_VarDecl>&);
inline void _246d559dd_setSizeKey(_246d5536c_rangeChecker*);
inline void _246d55da6_checkRangeExprValidity(_246d5536c_rangeChecker*, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d16372_Var>&, jule::Ptr<_246d8ee9a_TypeKind>&);
inline void _246d56082_checkSlice(_246d5536c_rangeChecker*);
inline void _246d5625d_checkArray(_246d5536c_rangeChecker*);
inline void _246d56439_checkMapKeyA(_246d5536c_rangeChecker*);
inline void _246d56615_checkMapKeyB(_246d5536c_rangeChecker*);
inline void _246d567e1_checkMap(_246d5536c_rangeChecker*);
inline void _246d569bc_checkStr(_246d5536c_rangeChecker*);
inline jule::Bool _246d56c31_check(_246d5536c_rangeChecker*);
struct _246d5536c_rangeChecker {
	jule::Ptr<_246cc8862_scopeChecker> _field_sc;
	jule::Ptr<_24613a213_RangeKind> _field_rang;
	jule::Ptr<_246cc38a1_RangeIter> _field_Kind;
	jule::Ptr<_246d5e398_Data> _field_d;
	

	_246d5536c_rangeChecker(void) = default;

	inline bool operator==(_246d5536c_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_246d5536c_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _246d57979_prepareTypes(_246d574c3_retTypeChecker*);
inline void _246d57bee_prepareExprs(_246d574c3_retTypeChecker*, jule::Ptr<_24612a148_Expr>&);
inline void _246d57dca_retVars(_246d574c3_retTypeChecker*);
inline void _246d580a6_checkExprs(_246d574c3_retTypeChecker*);
inline jule::Bool _246d583b4_check(_246d574c3_retTypeChecker*, jule::Ptr<_24612a148_Expr>&);
struct _246d574c3_retTypeChecker {
	jule::Ptr<_246cc8862_scopeChecker> _field_sc;
	jule::Ptr<_246cabb42_FnIns> _field_f;
	jule::Slice<jule::Ptr<_246d8ee9a_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_24612a148_Expr>> _field_exprs;
	jule::Slice<jule::Ptr<_246d16372_Var>> _field_vars;
	jule::Ptr<_24496dc35_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	

	_246d574c3_retTypeChecker(void) = default;

	inline bool operator==(_246d574c3_retTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_246d574c3_retTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_246ce04c2_ImportInfo> _246d59a8b_FindPackage(_246d5956e_SymbolTable*, jule::Str);
inline jule::Ptr<_246ce04c2_ImportInfo> _246d59d99_SelectPackage(_246d5956e_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_246ce04c2_ImportInfo>)>);
inline jule::Ptr<_246d16372_Var> _246d5a251_FindVar(_246d5956e_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_246d8e2a7_TypeAlias> _246d5a608_FindTypeAlias(_246d5956e_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_246117c3a_Struct> _246d5a9b0_FindStruct(_246d5956e_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_246cab768_Fn> _246d5ad67_FindFn(_246d5956e_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_246cb3e9b_Trait> _246d5b175_FindTrait(_246d5956e_SymbolTable*, jule::Str);
inline jule::Ptr<_246cb60e1_Enum> _246d5b483_FindEnum(_246d5956e_SymbolTable*, jule::Str);
inline jule::Ptr<_246cb76db_TypeEnum> _246d5b791_FindTypeEnum(_246d5956e_SymbolTable*, jule::Str);
inline jule::Ptr<_246d16372_Var> _246d5bd13_findVar(_246d5956e_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_246d8e2a7_TypeAlias> _246d5c264_findTypeAlias(_246d5956e_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _246d5c61b_defByIdent(_246d5956e_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _246d5ca6c_isDuplicatedIdent(_246d5956e_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _246d5956e_SymbolTable {
	jule::Ptr<_2449740c0_File> _field_File;
	jule::Slice<_246cace0c_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_246ce04c2_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_246d16372_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_246117c3a_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_246cab768_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_246cb3e9b_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_246cb60e1_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_246cb76db_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_246cbbb96_Impl>> _field_Impls;
	

	_246d5956e_SymbolTable(void) = default;

	inline bool operator==(_246d5956e_SymbolTable _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Passes == _other._field_Passes &&
			this->_field_Imports == _other._field_Imports &&
			this->_field_Vars == _other._field_Vars &&
			this->_field_TypeAliases == _other._field_TypeAliases &&
			this->_field_Structs == _other._field_Structs &&
			this->_field_Funcs == _other._field_Funcs &&
			this->_field_Traits == _other._field_Traits &&
			this->_field_Enums == _other._field_Enums &&
			this->_field_TypeEnums == _other._field_TypeEnums &&
			this->_field_Impls == _other._field_Impls;
	}

	inline bool operator!=(_246d5956e_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _246d5e783_IsNil(_246d5e398_Data*);
inline jule::Bool _246d5e9e7_IsVoid(_246d5e398_Data*);
inline jule::Bool _246d5ec5b_IsConst(_246d5e398_Data*);
inline jule::Bool _246d60069_GoodOperand(_246d5e398_Data*, jule::Ptr<_246d5e398_Data>&);
struct _246d5e398_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_246d8ee9a_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_2461e4872_Const> _field_Constant;
	

	_246d5e398_Data(void) = default;

	inline bool operator==(_246d5e398_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_246d5e398_Data _other) { return !this->operator==(_other); }


};
struct _246d60421_Value {
	jule::Ptr<_24612a148_Expr> _field_Expr;
	jule::Ptr<_246d5e398_Data> _field_Data;
	

	_246d60421_Value(void) = default;

	inline bool operator==(_246d60421_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_246d60421_Value _other) { return !this->operator==(_other); }


};
inline void _246d61422_pushErr(_246d60e16_Eval*, jule::Ptr<_24496dc35_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _246d61741_pushSugggestion(_246d60e16_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _246d6191c_allowBuiltin(_246d60e16_Eval*);
inline void _246d61ae8_disallowBuiltin(_246d60e16_Eval*);
inline jule::Bool _246d61d5c_isUnsafe(_246d60e16_Eval*);
inline jule::Bool _246d620c1_isGlobal(_246d60e16_Eval*);
inline jule::Bool _246d6239b_applyNumericPrefix(_246d60e16_Eval*, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246d62610_litNil(_246d60e16_Eval*);
inline jule::Ptr<_246d5e398_Data> _246d6291d_litStr(_246d60e16_Eval*, jule::Ptr<_24612b17c_LitExpr>&);
inline jule::Ptr<_246d5e398_Data> _246d62c2b_litBool(_246d60e16_Eval*, jule::Ptr<_24612b17c_LitExpr>&);
inline jule::Ptr<_246d5e398_Data> _246d63039_litRune(_246d60e16_Eval*, jule::Ptr<_24612b17c_LitExpr>&);
inline jule::Ptr<_246d5e398_Data> _246d63347_litFloat(_246d60e16_Eval*, jule::Ptr<_24612b17c_LitExpr>&);
inline jule::Ptr<_246d5e398_Data> _246d63655_litInt(_246d60e16_Eval*, jule::Ptr<_24612b17c_LitExpr>&);
inline jule::Ptr<_246d5e398_Data> _246d63963_litNum(_246d60e16_Eval*, jule::Ptr<_24612b17c_LitExpr>&);
inline jule::Ptr<_246d5e398_Data> _246d63c71_evalLit(_246d60e16_Eval*, jule::Ptr<_24612b17c_LitExpr>);
inline jule::Any _246d6407e_findBuiltins(_246d60e16_Eval*, jule::Str);
inline jule::Any _246d64436_getDef(_246d60e16_Eval*, jule::Str, jule::Bool);
inline void _21300640e_pushReference(_246d60e16_Eval*, jule::Ptr<_246cabb42_FnIns>&);
inline void _21301c03a_pushReference(_246d60e16_Eval*, jule::Ptr<_246d16372_Var>&);
inline void _2130bc1d9_pushReference(_246d60e16_Eval*, jule::Ptr<_246142319_StructIns>&);
inline jule::Ptr<_246d5e398_Data> _246d649b9__evalEnum(_246d60e16_Eval*, jule::Ptr<_246cb60e1_Enum>);
inline jule::Ptr<_246d5e398_Data> _246d69bcd_evalEnum(_246d60e16_Eval*, jule::Ptr<_246cb60e1_Enum>, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d69edb__evalTypeEnum(_246d60e16_Eval*, jule::Ptr<_246cb76db_TypeEnum>);
inline jule::Ptr<_246d5e398_Data> _246d6a393_evalTypeEnum(_246d60e16_Eval*, jule::Ptr<_246cb76db_TypeEnum>, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d6a6a1__evalStruct(_246d60e16_Eval*, jule::Ptr<_246142319_StructIns>);
inline jule::Ptr<_246d5e398_Data> _246d6aa58_evalStruct(_246d60e16_Eval*, jule::Ptr<_246142319_StructIns>, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d6ad66_evalFnIns(_246d60e16_Eval*, jule::Ptr<_246cabb42_FnIns>);
inline void _246d6b185_checkDeprecated(_246d60e16_Eval*, jule::Slice<jule::Ptr<_2460dc858_Directive>>&, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d6b53c_evalFn(_246d60e16_Eval*, jule::Ptr<_246cab768_Fn>, jule::Ptr<_24496dc35_Token>);
inline void _246d6b905_pushIllegalCycleError(_246d60e16_Eval*, jule::Ptr<_246d16372_Var>&, jule::Ptr<_246d16372_Var>&, jule::Str&);
inline jule::Bool _246d6bcac_checkCrossCycle(_246d60e16_Eval*, jule::Ptr<_246d16372_Var>&, jule::Str&);
inline jule::Bool _246d6c164_checkIllegalCycles(_246d60e16_Eval*, jule::Ptr<_246d16372_Var>&, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d6c51b_evalVar(_246d60e16_Eval*, jule::Ptr<_246d16372_Var>, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d6c8c3_evalTypeAlias(_246d60e16_Eval*, jule::Ptr<_246d8e2a7_TypeAlias>, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d6cc7a_evalDef(_246d60e16_Eval*, jule::Any, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d6d088_evalIdent(_246d60e16_Eval*, jule::Ptr<_24612bd09_IdentExpr>);
inline jule::Ptr<_246d5e398_Data> _246d6d396_evalUnary(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_24612c513_UnaryExpr>);
inline jule::Ptr<_246d5e398_Data> _246d6d6a4_evalVariadic(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_24612c8ba_VariadicExpr>);
inline jule::Ptr<_246d5e398_Data> _246d6d9b2_evalUnsafe(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_24612b886_UnsafeExpr>);
inline jule::Ptr<_246d5e398_Data> _246d6dcc0_evalArr(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_246131737_SliceExpr>);
inline jule::Ptr<_246d5e398_Data> _246d6e221_evalExpSlc(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_246131737_SliceExpr>, jule::Ptr<_246d8ee9a_TypeKind>, jule::Any);
inline jule::Ptr<_246d5e398_Data> _246d6e52e_evalSliceExpr(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_246131737_SliceExpr>);
inline void _246d6e870_checkIntegerIndexingByData(_246d60e16_Eval*, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_24496dc35_Token>);
inline void _246d6ec49_indexingPtr(_246d60e16_Eval*, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_2461320a6_IndexingExpr>&);
inline void _246d70112_indexingArr(_246d60e16_Eval*, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_2461320a6_IndexingExpr>&);
inline void _246d704ca_indexingSlc(_246d60e16_Eval*, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_2461320a6_IndexingExpr>&);
inline void _246d70893_indexingMap(_246d60e16_Eval*, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_2461320a6_IndexingExpr>&);
inline void _246d70c5b_indexingStr(_246d60e16_Eval*, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_2461320a6_IndexingExpr>&);
inline void _246d71124_toIndexing(_246d60e16_Eval*, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_2461320a6_IndexingExpr>&);
inline jule::Bool _246d71597_pushGenericsFromExprSubIdent(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_24612d59c_SubIdentExpr>&, jule::Slice<jule::Ptr<_246125b27_TypeDecl>>&, jule::Ptr<_24612a148_Expr>&);
inline jule::Bool _246d71960_pushGenericsFromData(jule::Ptr<_246d60e16_Eval>, jule::Slice<jule::Ptr<_246125b27_TypeDecl>>&, jule::Ptr<_24612a148_Expr>&);
inline void _246d71ca1_evalIdentDeclFromIndexing(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_2461320a6_IndexingExpr>&);
inline jule::Bool _246d72213_checkGenericFn(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_246cabb42_FnIns>&, jule::Ptr<_24496dc35_Token>&, jule::Any&);
inline void _246d72554_evalFnGenericFromIndexing(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_2461320a6_IndexingExpr>&);
inline jule::Ptr<_246d5e398_Data> _246d72873_evalIndexing(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_2461320a6_IndexingExpr>);
inline std::tuple<jule::Ptr<_246d5e398_Data>,jule::Ptr<_246d5e398_Data>> _246d72b81_evalSlicingExprs(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_2461326b1_SlicingExpr>&);
inline void _246d72e06_slicingArr(_246d60e16_Eval*, jule::Ptr<_246d5e398_Data>&);
inline void _246d732be_slicingStr(_246d60e16_Eval*, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d5e398_Data>&);
inline void _246d73731_checkSlicing(_246d60e16_Eval*, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_2461326b1_SlicingExpr>&);
inline jule::Ptr<_246d5e398_Data> _246d73a3e_evalSlicing(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_2461326b1_SlicingExpr>);
inline void _246d73e07_castPtr(_246d60e16_Eval*, jule::Ptr<_246d8ee9a_TypeKind>, jule::Ptr<_246d5e398_Data>, jule::Ptr<_24496dc35_Token>);
inline void _246d742c0_castStruct(_246d60e16_Eval*, jule::Ptr<_246d8ee9a_TypeKind>, jule::Ptr<_246d5e398_Data>, jule::Ptr<_24496dc35_Token>);
inline void _246d74688_castRef(_246d60e16_Eval*, jule::Ptr<_246d8ee9a_TypeKind>, jule::Ptr<_246d5e398_Data>, jule::Ptr<_24496dc35_Token>);
inline void _246d74a51_castSlc(_246d60e16_Eval*, jule::Ptr<_246d8ee9a_TypeKind>, jule::Ptr<_246d5e398_Data>, jule::Ptr<_24496dc35_Token>);
inline void _246d74d70_castStr(_246d60e16_Eval*, jule::Ptr<_246d5e398_Data>, jule::Ptr<_24496dc35_Token>);
inline void _246d75238_castInt(_246d60e16_Eval*, jule::Ptr<_246d8ee9a_TypeKind>, jule::Ptr<_246d5e398_Data>, jule::Ptr<_24496dc35_Token>);
inline void _246d75601_castNum(_246d60e16_Eval*, jule::Ptr<_246d8ee9a_TypeKind>, jule::Ptr<_246d5e398_Data>, jule::Ptr<_24496dc35_Token>);
inline void _246d759b9_castPrim(_246d60e16_Eval*, jule::Ptr<_246d8ee9a_TypeKind>, jule::Ptr<_246d5e398_Data>, jule::Ptr<_24496dc35_Token>);
inline void _246d75cd8_castConstant(_246d60e16_Eval*, jule::Ptr<_246d8ee9a_TypeKind>&, jule::Ptr<_246d5e398_Data>&);
inline void _246d761a1_castTypeEnum(_246d60e16_Eval*, jule::Ptr<_246d8ee9a_TypeKind>&, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_24496dc35_Token>&);
inline void _246d76569_castTypeEnumT(_246d60e16_Eval*, jule::Ptr<_246d8ee9a_TypeKind>&, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_24496dc35_Token>&);
inline jule::Ptr<_246d5e398_Data> _246d769ba_evalCastByTypeNData(_246d60e16_Eval*, jule::Ptr<_246d8ee9a_TypeKind>, jule::Ptr<_246d5e398_Data>, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d76e1b_evalCastT(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_246d8ee9a_TypeKind>&, jule::Ptr<_24612a148_Expr>&, jule::Ptr<_24496dc35_Token>&);
inline jule::Ptr<_246d5e398_Data> _246d77229_evalCast(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_24612cc72_CastExpr>);
inline jule::Ptr<_246d5e398_Data> _246d77537_evalNsSelection(_246d60e16_Eval*, jule::Ptr<_24612d129_NsSelectionExpr>);
inline jule::Ptr<_246d5e398_Data> _246d77988_evalStructLitExplicit(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_246142319_StructIns>, jule::Slice<jule::Ptr<_24612a148_Expr>>, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d77c96_evalStructLit(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_246130307_StructLit>);
inline _246d9d4c5_typeChecker _246d7800a_typeChecker(_246d60e16_Eval*);
inline jule::Ptr<_246d5e398_Data> _246d78318_evalType(_246d60e16_Eval*, jule::Ptr<_246125b27_TypeDecl>);
inline void _246d78637_callTypeFn(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline void _246d78956_callBuiltinFn(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline void _246d78c97_checkFnOfConcurrentCall(_246d60e16_Eval*, jule::Ptr<_246cabb42_FnIns>&, jule::Ptr<_24496dc35_Token>);
inline void _246d79193_processExceptionalHandler(_246d60e16_Eval*, jule::Ptr<_246cabb42_FnIns>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline void _246d794c3_callFn(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246d797d1_evalFnCall(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_24612e12a_FnCallExpr>);
inline jule::Ptr<_246d5e398_Data> _246d79b88_evalEnumStatic(_246d60e16_Eval*, jule::Ptr<_246cb60e1_Enum>, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d7a040_evalTypeEnumStatic(_246d60e16_Eval*, jule::Ptr<_246cb76db_TypeEnum>, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d7a3e7_evalStructStatic(_246d60e16_Eval*, jule::Ptr<_246142319_StructIns>, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d7a848_evalTraitSubIdent(_246d60e16_Eval*, jule::Ptr<_246d5e398_Data>, jule::Ptr<_246cb3e9b_Trait>, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d7ad43_evalStructSubIdent(_246d60e16_Eval*, jule::Ptr<_246d5e398_Data>, jule::Ptr<_246142319_StructIns>, jule::Ptr<_24612d59c_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_246d5e398_Data> _246d7b1ea_evalSliceSubIdent(_246d60e16_Eval*, jule::Ptr<_246d5e398_Data>, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d7b5a2_evalArraySubIdent(_246d60e16_Eval*, jule::Ptr<_246d5e398_Data>, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d7b8b0_evalIntTypeStatic(_246d60e16_Eval*, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d7bbbd_evalUintTypeStatic(_246d60e16_Eval*, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d7becb_evalI8TypeStatic(_246d60e16_Eval*, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d7c2d9_evalI16TypeStatic(_246d60e16_Eval*, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d7c5e7_evalI32TypeStatic(_246d60e16_Eval*, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d7c905_evalI64TypeStatic(_246d60e16_Eval*, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d7cc13_evalU8TypeStatic(_246d60e16_Eval*, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d7d021_evalU16TypeStatic(_246d60e16_Eval*, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d7d32e_evalU32TypeStatic(_246d60e16_Eval*, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d7d63c_evalU64TypeStatic(_246d60e16_Eval*, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d7d94a_evalF32TypeStatic(_246d60e16_Eval*, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d7dc58_evalF64TypeStatic(_246d60e16_Eval*, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d7e110_evalPrimStatic(_246d60e16_Eval*, jule::Str, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246d5e398_Data> _246d7e4b7_evalTypeStatic(_246d60e16_Eval*, jule::Ptr<_246d5e398_Data>, jule::Ptr<_24612d59c_SubIdentExpr>);
inline jule::Ptr<_246d5e398_Data> _246d7e86e_evalObjSubIdent(_246d60e16_Eval*, jule::Ptr<_246d5e398_Data>, jule::Ptr<_24612d59c_SubIdentExpr>);
inline jule::Ptr<_246d5e398_Data> _246d7eb7c_evalSubIdent(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_24612d59c_SubIdentExpr>);
inline jule::Ptr<_246d5e398_Data> _246d7ee8a_evalTuple(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_24612acc5_TupleExpr>);
inline jule::Ptr<_246d5e398_Data> _246d80342_evalMap(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_246d9a219_Map>, jule::Ptr<_24613077a_BraceLit>);
inline jule::Ptr<_246d5e398_Data> _246d80650_evalBraceLit(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_24613077a_BraceLit>);
inline jule::Ptr<_246d5e398_Data> _246d8095d_evalAnonFn(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_2461375a6_FnDecl>);
inline jule::Ptr<_246d5e398_Data> _246d80c6b_evalBinop(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_24612da20_BinopExpr>);
inline jule::Ptr<_246d5e398_Data> _246d81079_evalExprKind(jule::Ptr<_246d60e16_Eval>, jule::Any);
inline jule::Ptr<_246d5e398_Data> _246d81387_eval(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_24612a148_Expr>);
inline jule::Ptr<_246d5e398_Data> _246d81695_evalExpr(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_24612a148_Expr>);
struct _246d60e16_Eval {
	jule::Ptr<_246ce861d_Sema> _field_s;
	jule::Trait<_246daaacb_Lookup> _field_lookup;
	jule::Ptr<_246d8ee9a_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_246d16372_Var> _field_owner;
	jule::Ptr<_24611d977_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	_246d60e16_Eval(void) = default;

	inline bool operator==(_246d60e16_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_246d60e16_Eval _other) { return !this->operator==(_other); }


};
inline _246d81b18_unaryEval static__246d820be_new(jule::Ptr<_246d60e16_Eval>);
inline void _246d8229a_minus(_246d81b18_unaryEval*);
inline void _246d82476_plus(_246d81b18_unaryEval*);
inline void _246d82652_caret(_246d81b18_unaryEval*);
inline void _246d8282d_excl(_246d81b18_unaryEval*);
inline void _246d82a09_star(_246d81b18_unaryEval*);
inline void _246d82bd5_amper(_246d81b18_unaryEval*);
inline void _246d82db1_typeDecl(_246d81b18_unaryEval*);
inline void _246d8308c_evalData(_246d81b18_unaryEval*);
inline jule::Ptr<_246d5e398_Data> _246d83367_eval(_246d81b18_unaryEval*, jule::Ptr<_24612c513_UnaryExpr>);
struct _246d81b18_unaryEval {
	jule::Ptr<_246d60e16_Eval> _field_e;
	jule::Ptr<_246d5e398_Data> _field_d;
	jule::Ptr<_24612c513_UnaryExpr> _field_u;
	

	_246d81b18_unaryEval(void) = default;

	inline bool operator==(_246d81b18_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_246d81b18_unaryEval _other) { return !this->operator==(_other); }


};
inline _246d838a6_binaryEval static__246d83e6c_newPlain(jule::Ptr<_246d60e16_Eval>);
inline _246d838a6_binaryEval static__246d842ad_new(jule::Ptr<_246d60e16_Eval>, jule::Ptr<_24496dc35_Token>);
inline jule::Bool _246d84522_checkTypeCompatibility(_246d838a6_binaryEval*);
inline jule::Bool _246d847b9_checkStructCommonOperatorCompatibility(_246d838a6_binaryEval*);
inline jule::Ptr<_246d5e398_Data> _246d84a61_evalNil(_246d838a6_binaryEval*);
inline jule::Ptr<_246d5e398_Data> _246d84cc5_evalEnum(_246d838a6_binaryEval*);
inline jule::Ptr<_246d5e398_Data> _246d85039_evalTypeEnum(_246d838a6_binaryEval*);
inline jule::Ptr<_246d5e398_Data> _246d8529d_evalSptr(_246d838a6_binaryEval*);
inline jule::Ptr<_246d5e398_Data> _246d85512_evalPtr(_246d838a6_binaryEval*);
inline jule::Ptr<_246d5e398_Data> _246d85776_evalArr(_246d838a6_binaryEval*);
inline jule::Ptr<_246d5e398_Data> _246d859da_evalSlc(_246d838a6_binaryEval*);
inline jule::Ptr<_246d5e398_Data> _246d85c4e_evalFn(_246d838a6_binaryEval*);
inline jule::Ptr<_246d5e398_Data> _246d85eb3_evalStruct(_246d838a6_binaryEval*);
inline jule::Ptr<_246d5e398_Data> _246d86227_evalTrait(_246d838a6_binaryEval*);
inline jule::Ptr<_246d5e398_Data> _246d8648b_evalAny(_246d838a6_binaryEval*);
inline jule::Ptr<_246d5e398_Data> _246d86700_evalBool(_246d838a6_binaryEval*);
inline jule::Ptr<_246d5e398_Data> _246d86964_evalStr(_246d838a6_binaryEval*);
inline void _246d86b40_setTypeToGreater(_246d838a6_binaryEval*);
inline void _246d86d82_checkModData(_246d838a6_binaryEval*, jule::Ptr<_246d5e398_Data>&);
inline void _246d8705d_mod(_246d838a6_binaryEval*);
inline jule::Bool _246d87415_numbersAreCompatibile(_246d838a6_binaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_246d5e398_Data> _246d87679_evalFloat(_246d838a6_binaryEval*);
inline jule::Ptr<_246d5e398_Data> _246d878dd_evalInt(_246d838a6_binaryEval*);
inline jule::Ptr<_246d5e398_Data> _246d87b52_evalPrim(_246d838a6_binaryEval*);
inline jule::Ptr<_246d5e398_Data> _246d87db6_evalOp(_246d838a6_binaryEval*);
inline void _246d8813b_evalConst(_246d838a6_binaryEval*, jule::Ptr<_246d5e398_Data>&);
inline void _246d883b1_checkData(_246d838a6_binaryEval*, jule::Ptr<_246d5e398_Data>&);
inline void _246d8858c_checkDatas(_246d838a6_binaryEval*);
inline void _246d88812_setModel(_246d838a6_binaryEval*, jule::Ptr<_246d5e398_Data>&);
inline void _246d88a87_postEval(_246d838a6_binaryEval*, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246d88e3e_solveExplicit(_246d838a6_binaryEval*, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246d8924c_eval(_246d838a6_binaryEval*, jule::Ptr<_24612da20_BinopExpr>&);
struct _246d838a6_binaryEval {
	jule::Ptr<_246d60e16_Eval> _field_e;
	jule::Ptr<_246d5e398_Data> _field_l;
	jule::Ptr<_246d5e398_Data> _field_r;
	jule::Ptr<_24496dc35_Token> _field_op;
	

	_246d838a6_binaryEval(void) = default;

	inline bool operator==(_246d838a6_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_246d838a6_binaryEval _other) { return !this->operator==(_other); }


};
struct _246d8d76d_InsGeneric {
	jule::Ptr<_246d8ee9a_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_246d8ee9a_TypeKind>> _field_Constraint;
	

	_246d8d76d_InsGeneric(void) = default;

	inline bool operator==(_246d8d76d_InsGeneric _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_246d8d76d_InsGeneric _other) { return !this->operator==(_other); }


};
struct _246d8e2a7_TypeAlias {
	jule::Ptr<_246135ab0_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_246d94103_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>> _field_Generics;
	

	_246d8e2a7_TypeAlias(void) = default;

	inline bool operator==(_246d8e2a7_TypeAlias _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Used == _other._field_Used &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_246d8e2a7_TypeAlias _other) { return !this->operator==(_other); }


};
inline jule::Str _246d90396_Str(_246d8ee9a_TypeKind*);
inline jule::Bool _246d906a4_Equals(jule::Ptr<_246d8ee9a_TypeKind>, jule::Ptr<_246d8ee9a_TypeKind>);
inline jule::Bool _246d90b5a_CppLinked(_246d8ee9a_TypeKind*);
inline jule::Bool _246d90dbe_IsNil(_246d8ee9a_TypeKind*);
inline jule::Bool _246d91133_Void(_246d8ee9a_TypeKind*);
inline jule::Bool _246d91397_Mutable(_246d8ee9a_TypeKind*);
inline jule::Bool _246d9160b_NilCompatible(_246d8ee9a_TypeKind*);
inline jule::Bool _246d91870_PerformsRC(_246d8ee9a_TypeKind*);
inline jule::Bool _246d91ad4_SupportsCloning(_246d8ee9a_TypeKind*);
inline jule::Bool _246d91d48_Variadicable(_246d8ee9a_TypeKind*);
inline jule::Ptr<_246d94972_Prim> _246d920ac_Prim(_246d8ee9a_TypeKind*);
inline jule::Ptr<_246d98206_Sptr> _246d92321_Sptr(_246d8ee9a_TypeKind*);
inline jule::Ptr<_246d9b76a_Ptr> _246d92585_Ptr(_246d8ee9a_TypeKind*);
inline jule::Ptr<_246cb60e1_Enum> _246d927e9_Enum(_246d8ee9a_TypeKind*);
inline jule::Ptr<_246cb76db_TypeEnum> _246d92a5d_TypeEnum(_246d8ee9a_TypeKind*);
inline jule::Ptr<_246d9ad0d_Arr> _246d92cc2_Arr(_246d8ee9a_TypeKind*);
inline jule::Ptr<_246d98b63_Slc> _246d93036_Slc(_246d8ee9a_TypeKind*);
inline jule::Ptr<_246cabb42_FnIns> _246d9329a_Fn(_246d8ee9a_TypeKind*);
inline jule::Ptr<_246142319_StructIns> _246d9350e_Struct(_246d8ee9a_TypeKind*);
inline jule::Ptr<_246cb3e9b_Trait> _246d93773_Trait(_246d8ee9a_TypeKind*);
inline jule::Ptr<_246d9a219_Map> _246d939d7_Map(_246d8ee9a_TypeKind*);
inline jule::Ptr<_246d996e1_Tuple> _246d93c4b_Tup(_246d8ee9a_TypeKind*);
struct _246d8ee9a_TypeKind {
	jule::Str _field_CppIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_246d8ea6b_Kind> _field_Kind;
	

	_246d8ee9a_TypeKind(void) = default;

	inline bool operator==(_246d8ee9a_TypeKind _other) {
		return 
			this->_field_CppIdent == _other._field_CppIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_246d8ee9a_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _246d944aa_checked(_246d94103_TypeSymbol*);
inline void _246d94686_removeKind(_246d94103_TypeSymbol*);
struct _246d94103_TypeSymbol {
	jule::Ptr<_246125b27_TypeDecl> _field_Decl;
	jule::Ptr<_246d8ee9a_TypeKind> _field_Kind;
	

	_246d94103_TypeSymbol(void) = default;

	inline bool operator==(_246d94103_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_246d94103_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _246d94cd5_Str(_246d94972_Prim*);
inline jule::Bool _246d950e3_Equals(jule::Ptr<_246d94972_Prim>, jule::Ptr<_246d8ee9a_TypeKind>);
inline jule::Bool _246d95566_IsConstraint(_246d94972_Prim*);
inline jule::Bool _246d957ca_IsI8(_246d94972_Prim*);
inline jule::Bool _246d95a3e_IsI16(_246d94972_Prim*);
inline jule::Bool _246d95ca3_IsI32(_246d94972_Prim*);
inline jule::Bool _246d96017_IsI64(_246d94972_Prim*);
inline jule::Bool _246d9627b_IsU8(_246d94972_Prim*);
inline jule::Bool _246d964e0_IsU16(_246d94972_Prim*);
inline jule::Bool _246d96754_IsU32(_246d94972_Prim*);
inline jule::Bool _246d969b8_IsU64(_246d94972_Prim*);
inline jule::Bool _246d96c2c_IsF32(_246d94972_Prim*);
inline jule::Bool _246d96e91_IsF64(_246d94972_Prim*);
inline jule::Bool _246d97205_IsInt(_246d94972_Prim*);
inline jule::Bool _246d97469_IsUint(_246d94972_Prim*);
inline jule::Bool _246d976cd_IsUintptr(_246d94972_Prim*);
inline jule::Bool _246d97942_IsBool(_246d94972_Prim*);
inline jule::Bool _246d97ba6_IsStr(_246d94972_Prim*);
inline jule::Bool _246d97e1a_IsAny(_246d94972_Prim*);
struct _246d94972_Prim {
	jule::Str _field_Kind;
	

	_246d94972_Prim(void) = default;

	inline bool operator==(_246d94972_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_246d94972_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _246d98569_Str(_246d98206_Sptr*);
inline jule::Bool _246d98877_Equals(jule::Ptr<_246d98206_Sptr>, jule::Ptr<_246d8ee9a_TypeKind>);
struct _246d98206_Sptr {
	jule::Ptr<_246d8ee9a_TypeKind> _field_Elem;
	

	_246d98206_Sptr(void) = default;

	inline bool operator==(_246d98206_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_246d98206_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _246d9916e_Str(_246d98b63_Slc*);
inline jule::Bool _246d9947c_Equals(jule::Ptr<_246d98b63_Slc>, jule::Ptr<_246d8ee9a_TypeKind>);
struct _246d98b63_Slc {
	jule::Ptr<_246d8ee9a_TypeKind> _field_Elem;
	

	_246d98b63_Slc(void) = default;

	inline bool operator==(_246d98b63_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_246d98b63_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _246d99a54_Str(_246d996e1_Tuple*);
inline jule::Bool _246d99d62_Equals(jule::Ptr<_246d996e1_Tuple>, jule::Ptr<_246d8ee9a_TypeKind>);
struct _246d996e1_Tuple {
	jule::Slice<jule::Ptr<_246d8ee9a_TypeKind>> _field_Types;
	

	_246d996e1_Tuple(void) = default;

	inline bool operator==(_246d996e1_Tuple _other) {
		return 
			this->_field_Types == _other._field_Types;
	}

	inline bool operator!=(_246d996e1_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _246d9a57c_Str(_246d9a219_Map*);
inline jule::Bool _246d9a88a_Equals(jule::Ptr<_246d9a219_Map>, jule::Ptr<_246d8ee9a_TypeKind>);
struct _246d9a219_Map {
	jule::Ptr<_246d8ee9a_TypeKind> _field_Key;
	jule::Ptr<_246d8ee9a_TypeKind> _field_Val;
	

	_246d9a219_Map(void) = default;

	inline bool operator==(_246d9a219_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_246d9a219_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _246d9b171_Str(_246d9ad0d_Arr*);
inline jule::Bool _246d9b47e_Equals(jule::Ptr<_246d9ad0d_Arr>, jule::Ptr<_246d8ee9a_TypeKind>);
struct _246d9ad0d_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_246d8ee9a_TypeKind> _field_Elem;
	

	_246d9ad0d_Arr(void) = default;

	inline bool operator==(_246d9ad0d_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_246d9ad0d_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _246d9bacd_Str(_246d9b76a_Ptr*);
inline jule::Bool _246d9bddb_Equals(jule::Ptr<_246d9b76a_Ptr>, jule::Ptr<_246d8ee9a_TypeKind>);
inline jule::Bool _246d9c23d_IsUnsafe(_246d9b76a_Ptr*);
struct _246d9b76a_Ptr {
	jule::Ptr<_246d8ee9a_TypeKind> _field_Elem;
	

	_246d9b76a_Ptr(void) = default;

	inline bool operator==(_246d9b76a_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_246d9b76a_Ptr _other) { return !this->operator==(_other); }


};
struct _246d9c6b1_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_246d9c6b1_referencer(void) = default;

	inline bool operator==(_246d9c6b1_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_246d9c6b1_referencer _other) { return !this->operator==(_other); }


};
inline void _246d9dbce_pushErr(_246d9d4c5_typeChecker*, jule::Ptr<_24496dc35_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _246d9ddaa_allowBuiltin(_246d9d4c5_typeChecker*);
inline void _246d9e086_disallowBuiltin(_246d9d4c5_typeChecker*);
inline jule::Ptr<_246d94972_Prim> _246d9e394_buildPrim(_246d9d4c5_typeChecker*, jule::Ptr<_2461261dd_IdentTypeDecl>&);
inline void _21329e9e8_pushReference(_246d9d4c5_typeChecker*, jule::Ptr<_246142319_StructIns>&);
inline void _2132a2c4e_pushReference(_246d9d4c5_typeChecker*, jule::Ptr<_246cb3e9b_Trait>&);
inline void _246d9e88e_pushReferenceByKind(_246d9d4c5_typeChecker*, jule::Ptr<_246d8ee9a_TypeKind>&);
inline void _246d9ec57_pushCycleError(_246d9d4c5_typeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _246da010e_checkCrossCycle(_246d9d4c5_typeChecker*, jule::Any, jule::Str&);
inline jule::Bool _246da04b6_checkIllegalCycles(_246d9d4c5_typeChecker*, jule::Ptr<_2461261dd_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_246d8ea6b_Kind> _246da086d_fromTypeAlias(_246d9d4c5_typeChecker*, jule::Ptr<_2461261dd_IdentTypeDecl>&, jule::Ptr<_246d8e2a7_TypeAlias>&);
inline jule::Ptr<_246cb60e1_Enum> _246da0c25_fromEnum(_246d9d4c5_typeChecker*, jule::Ptr<_2461261dd_IdentTypeDecl>&, jule::Ptr<_246cb60e1_Enum>&);
inline jule::Ptr<_246cb76db_TypeEnum> _246da10cc_fromTypeEnum(_246d9d4c5_typeChecker*, jule::Ptr<_2461261dd_IdentTypeDecl>&, jule::Ptr<_246cb76db_TypeEnum>&);
inline jule::Ptr<_246cb3e9b_Trait> _246da1484_fromTrait(_246d9d4c5_typeChecker*, jule::Ptr<_2461261dd_IdentTypeDecl>&, jule::Ptr<_246cb3e9b_Trait>&);
inline jule::Bool _246da183b_checkStructIns(_246d9d4c5_typeChecker*, jule::Ptr<_246142319_StructIns>&, jule::Ptr<_24496dc35_Token>&);
inline void _246da1ad3_appendUsedStructReference(_246d9d4c5_typeChecker*, jule::Ptr<_246117c3a_Struct>&);
inline jule::Ptr<_246142319_StructIns> _246da1e9b_buildStructInstance(_246d9d4c5_typeChecker*, jule::Ptr<_2461261dd_IdentTypeDecl>&, jule::Ptr<_246117c3a_Struct>&);
inline jule::Ptr<_246142319_StructIns> _246da2353_fromStruct(_246d9d4c5_typeChecker*, jule::Ptr<_2461261dd_IdentTypeDecl>&, jule::Ptr<_246117c3a_Struct>&);
inline jule::Trait<_246d8ea6b_Kind> _246da2661_getDef(_246d9d4c5_typeChecker*, jule::Ptr<_2461261dd_IdentTypeDecl>&);
inline jule::Trait<_246d8ea6b_Kind> _246da296e_buildIdent(_246d9d4c5_typeChecker*, jule::Ptr<_2461261dd_IdentTypeDecl>);
inline jule::Trait<_246d8ea6b_Kind> _246da2c7c_buildSubIdent(_246d9d4c5_typeChecker*, jule::Ptr<_24612683c_SubIdentTypeDecl>);
inline jule::Ptr<_246d98206_Sptr> _246da308a_buildSptrFromType(_246d9d4c5_typeChecker*, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Ptr<_246d98206_Sptr> _246da3398_buildSptr(_246d9d4c5_typeChecker*, jule::Ptr<_246126ed0_SptrTypeDecl>);
inline jule::Ptr<_246d9b76a_Ptr> _246da36a6_buildPtrFromType(_246d9d4c5_typeChecker*, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Ptr<_246d9b76a_Ptr> _246da39b4_buildPtr(_246d9d4c5_typeChecker*, jule::Ptr<_2461279a3_PtrTypeDecl>);
inline jule::Ptr<_246d98b63_Slc> _246da3cc2_buildSlc(_246d9d4c5_typeChecker*, jule::Ptr<_2461273cb_SlcTypeDecl>);
inline jule::Ptr<_246d9ad0d_Arr> _246da40d0_buildArr(_246d9d4c5_typeChecker*, jule::Ptr<_246128135_ArrTypeDecl>);
inline jule::Ptr<_246d9a219_Map> _246da43dd_buildMap(_246d9d4c5_typeChecker*, jule::Ptr<_246128883_MapTypeDecl>);
inline jule::Ptr<_246d996e1_Tuple> _246da46eb_buildTuple(_246d9d4c5_typeChecker*, jule::Ptr<_2461276b7_TupleTypeDecl>);
inline jule::Bool _246da4a09_checkFnTypes(_246d9d4c5_typeChecker*, jule::Ptr<_246cabb42_FnIns>&);
inline jule::Ptr<_246cabb42_FnIns> _246da4d17_buildFn(_246d9d4c5_typeChecker*, jule::Ptr<_2461375a6_FnDecl>);
inline jule::Trait<_246d8ea6b_Kind> _246da5125_buildByNamespace(_246d9d4c5_typeChecker*, jule::Ptr<_246126be4_NamespaceTypeDecl>);
inline jule::Ptr<_246d8ee9a_TypeKind> _246da5433_build(_246d9d4c5_typeChecker*, jule::Any&);
inline jule::Ptr<_246d8ee9a_TypeKind> _246da5741_checkDecl(_246d9d4c5_typeChecker*, jule::Ptr<_246125b27_TypeDecl>&);
inline void _246da59b6_check(_246d9d4c5_typeChecker*, jule::Ptr<_246d94103_TypeSymbol>&);
struct _246d9d4c5_typeChecker {
	jule::Ptr<_246ce861d_Sema> _field_s;
	jule::Trait<_246daaacb_Lookup> _field_rootLookup;
	jule::Trait<_246daaacb_Lookup> _field_lookup;
	jule::Ptr<_246d9c6b1_referencer> _field_referencer;
	jule::Ptr<_246cac615_ReferenceStack> _field_refers;
	jule::Ptr<_24496dc35_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_246132e20_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>> _field_useGenerics;
	jule::Bool _field_notPlain = false;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_246d8e2a7_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	

	_246d9d4c5_typeChecker(void) = default;

	inline bool operator==(_246d9d4c5_typeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_rootLookup == _other._field_rootLookup &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_refers == _other._field_refers &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_ignoreGenerics == _other._field_ignoreGenerics &&
			this->_field_useGenerics == _other._field_useGenerics &&
			this->_field_notPlain == _other._field_notPlain &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_selection == _other._field_selection &&
			this->_field_ownerAlias == _other._field_ownerAlias &&
			this->_field_bannedGenerics == _other._field_bannedGenerics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_246d9d4c5_typeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool static__246da6126_identTypeDecl(jule::Str&, jule::Ptr<_2461261dd_IdentTypeDecl>);
inline jule::Bool static__246da6467_exist(jule::Str&, jule::Any&);
struct _246da5bd6_identTypeLookup {
	

	_246da5bd6_identTypeLookup(void) = default;

	inline bool operator==(_246da5bd6_identTypeLookup _other) { return true; }

	inline bool operator!=(_246da5bd6_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _2475c5aba_FileInfo {
	jule::Ptr<_2460db7ad_Ast> _field_Ast;
	jule::Slice<_244640d69_Log> _field_Errors;
	

	_2475c5aba_FileInfo(void) = default;

	inline bool operator==(_2475c5aba_FileInfo _other) {
		return 
			this->_field_Ast == _other._field_Ast &&
			this->_field_Errors == _other._field_Errors;
	}

	inline bool operator!=(_2475c5aba_FileInfo _other) { return !this->operator==(_other); }


};
struct _24762263e_stmt {
	jule::Slice<jule::Ptr<_24496dc35_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	

	_24762263e_stmt(void) = default;

	inline bool operator==(_24762263e_stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_24762263e_stmt _other) { return !this->operator==(_other); }


};
inline void _2476235eb_stop(_247622e69_scopeParser*);
inline jule::Bool _247623860_stopped(_247622e69_scopeParser*);
inline jule::Bool _247623ac4_finished(_247622e69_scopeParser*);
inline jule::Bool _247623d38_isLastSt(_247622e69_scopeParser*);
inline void _247624157_pushErr(_247622e69_scopeParser*, jule::Ptr<_24496dc35_Token>, jule::Str);
inline void _247624476_pushSuggestion(_247622e69_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _2476246eb_insertAsNext(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_24762263e_stmt> _247624960_next(_247622e69_scopeParser*);
inline jule::Ptr<_246135ab0_ScopeTree> _247624d17_buildScope(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246138585_VarDecl> _247625125_buildVarSt(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_24613893c_RetSt> _247625433_buildRetSt(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_24613909c_Iter> _247625741_buildWhileNextIter(_247622e69_scopeParser*, jule::Ptr<_24762263e_stmt>&);
inline jule::Ptr<_246139872_WhileKind> _247625a4e_buildWhileIterKind(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _247625d5c_getRangeKindKeysTokens(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_246138585_VarDecl> _24762616a_buildRangeKindKey(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Slice<jule::Ptr<_246138585_VarDecl>> _247626478_buildRangeKindKeys(_247622e69_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>>&);
inline void _2476267b9_setupRangeKindKeysPlain(_247622e69_scopeParser*, jule::Ptr<_24613a213_RangeKind>&, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline void _247626b1b_setupRangeKindKeysExplicit(_247622e69_scopeParser*, jule::Ptr<_24613a213_RangeKind>&, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline void _247626e4b_setupRangeKindKeys(_247622e69_scopeParser*, jule::Ptr<_24613a213_RangeKind>&, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_24613a213_RangeKind> _24762739c_buildRangeIterKind(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::Ptr<_24496dc35_Token>&);
inline jule::Any _247627754_buildCommonIterKind(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::Ptr<_24496dc35_Token>&);
inline jule::Ptr<_24613909c_Iter> _247627a62_buildCommonIter(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_24613909c_Iter> _247627d70_buildIterSt(_247622e69_scopeParser*, jule::Ptr<_24762263e_stmt>&);
inline jule::Ptr<_24613a5ba_BreakSt> _24762817d_buildBreakSt(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_24613a972_ContSt> _24762848b_buildContSt(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_24613ade5_If> _247628799_buildIf(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_24613b29c_Else> _247628aa7_buildElse(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_24613b720_Conditional> _247628db5_buildIfElseChain(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_24612a148_Expr> _2476291c3_buildCoCallSt(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_24613367e_GotoSt> _2476294d1_buildGotoSt(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_24613396a_FallSt> _2476297de_buildFallSt(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_24613bde6_TypeAliasDecl> _247629aec_buildTypeAliasSt(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline void _24762a05e_pushCaseExpr(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>, jule::Ptr<_24496dc35_Token>, jule::Bool, jule::Slice<jule::Ptr<_24612a148_Expr>>&);
inline jule::Slice<jule::Ptr<_24612a148_Expr>> _24762a4b0_buildCaseExprs(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::Ptr<_24496dc35_Token>&, jule::Bool);
inline jule::Ptr<_246135ab0_ScopeTree> _24762a7bd_buildCaseScope(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline std::tuple<jule::Ptr<_24613c369_Case>,jule::Bool> _24762ab75_buildCase(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_24613c369_Case>>,jule::Ptr<_24613b29c_Else>> _24762b02c_buildCases(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>, jule::Bool);
inline jule::Ptr<_24613ca40_MatchCase> _24762b33a_buildMatchCase(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_246135ab0_ScopeTree> _24762b648_buildScopeSt(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_2461332c7_LabelSt> _24762b956_buildLabelSt(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline std::tuple<jule::Any,jule::Bool> _24762bc64_buildIdSt(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_24763ac84_assignInfo> _24762c072_buildAssignInfo(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_246134075_AssignLeft> _24762c380_buildAssignL(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Slice<jule::Ptr<_246134075_AssignLeft>> _24762c68d_buildAssignLs(_247622e69_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>>&);
inline std::tuple<jule::Ptr<_2461345b4_AssignSt>,jule::Bool> _24762c99b_buildPlainAssign(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline std::tuple<jule::Ptr<_2461345b4_AssignSt>,jule::Bool> _24762cca9_buildDeclAssign(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline std::tuple<jule::Ptr<_2461345b4_AssignSt>,jule::Bool> _24762d0b7_buildAssignSt(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_24612a9d9_UseExpr> _24762d3c5_buildUseExpr(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Any _24762d6d3_buildSt(_247622e69_scopeParser*, jule::Ptr<_24762263e_stmt>&);
inline void _24762da02_build(_247622e69_scopeParser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::Ptr<_246135ab0_ScopeTree>&);
struct _247622e69_scopeParser {
	jule::Ptr<_24763e5b2_parser> _field_p;
	jule::Ptr<_246135ab0_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_24762263e_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	

	_247622e69_scopeParser(void) = default;

	inline bool operator==(_247622e69_scopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_247622e69_scopeParser _other) { return !this->operator==(_other); }


};
inline void _24762ec23_pushErr(_24762e42b_exprBuilder*, jule::Ptr<_24496dc35_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _247630042_pushSuggestion(_24762e42b_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_24612acc5_TupleExpr> _247630350_buildTuple(_24762e42b_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>>&);
inline jule::Ptr<_24612b17c_LitExpr> _24763065d_buildLit(_24762e42b_exprBuilder*, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_246125b27_TypeDecl> _24763096b_buildPrimitiveType(_24762e42b_exprBuilder*, jule::Ptr<_24496dc35_Token>&);
inline jule::Any _247630c79_buildSingle(_24762e42b_exprBuilder*, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_24612bd09_IdentExpr> _247631087_buildCppLinkedIdent(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_24612c513_UnaryExpr> _247631395_buildUnary(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_24612d59c_SubIdentExpr> _2476316a3_buildObjSubIdent(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_24612d129_NsSelectionExpr> _2476319b1_buildNsSubIdent(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_246125b27_TypeDecl> _247631cbe_buildType(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Any _2476320cc_buildSubIdent(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_24612c8ba_VariadicExpr> _2476323da_buildVariadic(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Any _2476326e8_buildOpRight(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_24612a434_RangeExpr> _247632a28_buildBetweenParentheses(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_24612cc72_CastExpr> _247632d47_tryBuildCast(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline void _247633210_pushArg(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24612a148_Expr>>&, jule::Slice<jule::Ptr<_24496dc35_Token>>, jule::Ptr<_24496dc35_Token>);
inline jule::Slice<jule::Ptr<_24612a148_Expr>> _24763351d_buildArgs(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Slice<jule::Ptr<_246125b27_TypeDecl>> _24763382b_buildCallGenerics(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_24612e12a_FnCallExpr> _247633c7c_buildFnCall(_24762e42b_exprBuilder*, jule::Ptr<_24496dc35_Token>&, jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Any _24763408a_buildParenthesesRange(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_24612b886_UnsafeExpr> _247634398_buildUnsafeExpr(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_2461375a6_FnDecl> _2476346a6_buildAnonFn(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Any _2476349b4_buildUnsafe(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline void _247634d7c_pushRangeLitPart(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>, jule::Ptr<_24496dc35_Token>, jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _2476351ac_getBraceRangeLitExprParts(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_24612eaa9_FieldExprPair> _2476354cb_buildFieldExprPair(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_24612a148_Expr> _2476357d9_buildStructLitExpr(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Slice<jule::Ptr<_24612a148_Expr>> _247635ae7_buildStructLitExprs(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_246130307_StructLit> _247635e27_buildTypedStructLiteral(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_24612a148_Expr> _247636246_buildBraceLitPart(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_24613077a_BraceLit> _247636554_buildBraceLit(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Any _247636862_buildBraceRange(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _247636b70_getEnumerableParts(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_246131737_SliceExpr> _247636e7d_buildSlice(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_2461320a6_IndexingExpr> _2476373ce_buildIndexing(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>, jule::Slice<jule::Ptr<_24496dc35_Token>>, jule::Ptr<_24496dc35_Token>);
inline jule::Ptr<_2461326b1_SlicingExpr> _247637973_buildSlicing(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::Ptr<_24496dc35_Token>&, jule::Ptr<_24496dc35_Token>);
inline jule::Any _247637c81_buildBracketRange(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Any _24763808e_buildData(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Any _247638446_buildBinop(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::I64);
inline jule::Any _247638754_build(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Any _247638a62_buildKind(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_24612a148_Expr> _247638d70_buildFromTokens(_24762e42b_exprBuilder*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
struct _24762e42b_exprBuilder {
	jule::Ptr<_24763e5b2_parser> _field_p;
	

	_24762e42b_exprBuilder(void) = default;

	inline bool operator==(_24762e42b_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_24762e42b_exprBuilder _other) { return !this->operator==(_other); }


};
struct _24763ac84_assignInfo {
	jule::Slice<jule::Ptr<_24496dc35_Token>> _field_l;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _field_r;
	jule::Ptr<_24496dc35_Token> _field_setter;
	jule::Bool _field_ok = false;
	

	_24763ac84_assignInfo(void) = default;

	inline bool operator==(_24763ac84_assignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_24763ac84_assignInfo _other) { return !this->operator==(_other); }


};
inline void _24763e8e2_stop(_24763e5b2_parser*);
inline jule::Bool _24763eb56_stopped(_24763e5b2_parser*);
inline void _24764001e_pushErr(_24763e5b2_parser*, jule::Ptr<_24496dc35_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _24764033d_pushSuggestion(_24763e5b2_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_24612a148_Expr> _24764064b_buildExpr(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_2460dc858_Directive> _247640959_buildDirective(_24763e5b2_parser*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline void _247640bce_pushDirective(_24763e5b2_parser*, jule::Ptr<_2460dc858_Directive>);
inline jule::Ptr<_246135ab0_ScopeTree> _247641086_buildScope(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::Ptr<_24496dc35_Token>);
inline std::tuple<jule::Ptr<_246125b27_TypeDecl>,jule::Bool> _2476414d7__buildType(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::I64*, jule::Bool);
inline std::tuple<jule::Ptr<_246125b27_TypeDecl>,jule::Bool> _247641938_buildType(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::I64*, jule::Bool);
inline jule::Ptr<_24613bde6_TypeAliasDecl> _247641c46_buildTypeAliasDecl(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline void _247642065_buildVarTypeAndExpr(jule::Ptr<_24763e5b2_parser>, jule::Ptr<_246138585_VarDecl>&, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline void _247642384_buildVarCommon(jule::Ptr<_24763e5b2_parser>, jule::Ptr<_246138585_VarDecl>&, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline void _24764274c_buildVarBegin(_24763e5b2_parser*, jule::Ptr<_246138585_VarDecl>&, jule::I64&, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_246138585_VarDecl> _247642a5a_buildVar(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_246132e20_GenericDecl> _247642d68_buildGeneric(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Slice<jule::Ptr<_246132e20_GenericDecl>> _247643220_buildGenerics(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::Ptr<_24496dc35_Token>&);
inline jule::Ptr<_246136286_ParamDecl> _24764352d_buildSelfParam(_24763e5b2_parser*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline void _2476438e6_paramTypeBegin(_24763e5b2_parser*, jule::Ptr<_246136286_ParamDecl>&, jule::I64&, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline void _247643c15_buildParamType(jule::Ptr<_24763e5b2_parser>, jule::Ptr<_246136286_ParamDecl>&, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline void _247644034_buildParamBody(jule::Ptr<_24763e5b2_parser>, jule::Ptr<_246136286_ParamDecl>&, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_246136286_ParamDecl> _247644342_buildParam(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline void _2476445b7_checkParams(_24763e5b2_parser*, jule::Slice<jule::Ptr<_246136286_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_246136286_ParamDecl>> _24764496e_buildParams(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::Bool);
inline std::tuple<jule::Ptr<_246128c3a_RetTypeDecl>,jule::Bool> _247644d26_buildMultiRetType(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::I64&);
inline std::tuple<jule::Ptr<_246128c3a_RetTypeDecl>,jule::Bool> _2476451cd_buildRetType(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::I64&);
inline jule::Ptr<_2461375a6_FnDecl> _24764562e_buildFnPrototype(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::I64&, jule::Bool);
inline jule::Ptr<_2461375a6_FnDecl> _247645a80_buildFn(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_24496dc35_Token>> _247645d8d_getUseDeclSelectors(_24763e5b2_parser*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline void _2476461ac_buildCppUseDecl(_24763e5b2_parser*, jule::Ptr<_24613d2d2_UseDecl>&, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline void _2476464cb_buildStdUseDecl(_24763e5b2_parser*, jule::Ptr<_24613d2d2_UseDecl>&, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline void _2476467ea_buildIdentUseDecl(_24763e5b2_parser*, jule::Ptr<_24613d2d2_UseDecl>&, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline void _247646b19_parseUseDecl(_24763e5b2_parser*, jule::Ptr<_24613d2d2_UseDecl>&, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_24613d2d2_UseDecl> _247646ec1_buildUseDecl(_24763e5b2_parser*, jule::Slice<jule::Ptr<_24496dc35_Token>>, jule::Bool);
inline jule::Ptr<_246125b27_TypeDecl> _247647378_buildTypeEnumItemKind(jule::Ptr<_24763e5b2_parser>, jule::I64&, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Slice<jule::Ptr<_24613ec84_TypeEnumItemDecl>> _247647686_buildTypeEnumItems(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_24614038e_TypeEnumDecl> _247647994_buildTypeEnumDecl(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_24612a148_Expr> _247647d4b_buildEnumItemExpr(jule::Ptr<_24763e5b2_parser>, jule::I64&, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Slice<jule::Ptr<_24613d755_EnumItemDecl>> _247648159_buildEnumItems(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_24613e27d_EnumDecl> _247648467_buildEnumDecl(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Any _247648775_buildNodeEnumDecl(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_24614058c_FieldDecl> _247648a83_buildField(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Slice<jule::Ptr<_24614058c_FieldDecl>> _247648d91_buildStructDeclFields(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_246140d40_StructDecl> _24764919e_buildStructDecl(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline void _247649424_checkMethodReceiver(_24763e5b2_parser*, jule::Ptr<_2461375a6_FnDecl>&);
inline jule::Slice<jule::Ptr<_2461375a6_FnDecl>> _247649732_buildTraitMethods(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_24614144a_TraitDecl> _247649a40_buildTraitDecl(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_2461375a6_FnDecl> _247649d4d_buildCppLinkFn(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_246138585_VarDecl> _24764a15b_buildCppLinkVar(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_246140d40_StructDecl> _24764a469_buildCppLinkStruct(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_24613bde6_TypeAliasDecl> _24764a777_buildCppLinkTypeAlias(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_24613d2d2_UseDecl> _24764aa85_buildCppLinkUse(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Any _24764ad93_buildCppLink(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_2461375a6_FnDecl> _24764b1a1_getMethod(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline void _24764b4c0_parseImplBody(jule::Ptr<_24763e5b2_parser>, jule::Ptr<_246141a55_Impl>&, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_246141a55_Impl> _24764b7cd_buildImpl(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Any _24764badb_buildNodeData(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline void _24764bd61_applyFnMeta(_24763e5b2_parser*, jule::Ptr<_2461375a6_FnDecl>&);
inline void _24764c0d6_applyMeta(_24763e5b2_parser*, _2460dc45c_Node&);
inline void _24764c35b_pushUseDecl(jule::Ptr<_24763e5b2_parser>, jule::Ptr<_24613d2d2_UseDecl>&);
inline jule::Bool _24764c669_pushMetaNodes(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline _2460dc45c_Node _24764c977_parseNode(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline void _24764cbec_appendNode(jule::Ptr<_24763e5b2_parser>, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline void _24764d15e_removeRange(_24763e5b2_parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::Slice<jule::I64>&);
inline void _24764d527_pushWrongOrderCloseErr(_24763e5b2_parser*, jule::Ptr<_24496dc35_Token>&, jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::Slice<jule::I64>&);
inline void _24764d989_pushRangeClose(_24763e5b2_parser*, jule::Ptr<_24496dc35_Token>, jule::Str, jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::Slice<jule::I64>&);
inline void _24764dc0e_checkRanges(_24763e5b2_parser*, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline void _24764de84_parse(jule::Ptr<_24763e5b2_parser>, jule::Ptr<_2449740c0_File>&);
struct _24763e5b2_parser {
	jule::Ptr<_2460db7ad_Ast> _field_ast;
	jule::Slice<jule::Ptr<_2460dc858_Directive>> _field_directives;
	jule::Slice<_244640d69_Log> _field_errors;
	

	_24763e5b2_parser(void) = default;

	inline bool operator==(_24763e5b2_parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_24763e5b2_parser _other) { return !this->operator==(_other); }


};
inline void _24765089d_pushErr(_2476502c6_typeBuilder*, jule::Ptr<_24496dc35_Token>, jule::Str);
inline void _247650bbc_pushSuggestion(_2476502c6_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_246125b27_TypeDecl> _247650e31_buildPrim(_2476502c6_typeBuilder*);
inline jule::Ptr<_246125b27_TypeDecl> _247651195_buildNamespace(_2476502c6_typeBuilder*);
inline jule::Slice<jule::Ptr<_246125b27_TypeDecl>> _247651409_buildGenerics(_2476502c6_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _24765166d_identGenerics(_2476502c6_typeBuilder*);
inline jule::Ptr<_246125b27_TypeDecl> _2476518d2_buildIdent(_2476502c6_typeBuilder*);
inline jule::Ptr<_246125b27_TypeDecl> _247651b46_buildCppLink(_2476502c6_typeBuilder*);
inline jule::Ptr<_246125b27_TypeDecl> _247651daa_buildFn(_2476502c6_typeBuilder*);
inline jule::Ptr<_246125b27_TypeDecl> _24765211e_buildPtr(_2476502c6_typeBuilder*);
inline jule::Ptr<_246125b27_TypeDecl> _247652383_buildSptr(_2476502c6_typeBuilder*);
inline jule::Ptr<_246125b27_TypeDecl> _2476525e7_buildOp(_2476502c6_typeBuilder*);
inline jule::Ptr<_246125b27_TypeDecl> _24765285b_buildSlc(_2476502c6_typeBuilder*);
inline jule::Ptr<_246125b27_TypeDecl> _247652ac0_buildArr(_2476502c6_typeBuilder*);
inline jule::Ptr<_246125b27_TypeDecl> _247652d34_buildMap(_2476502c6_typeBuilder*);
inline jule::Ptr<_246125b27_TypeDecl> _247653098_buildEnumerable(_2476502c6_typeBuilder*);
inline jule::Ptr<_246125b27_TypeDecl> _24765330c_step(_2476502c6_typeBuilder*);
inline std::tuple<jule::Ptr<_246125b27_TypeDecl>,jule::Bool> _247653571_build(_2476502c6_typeBuilder*);
struct _2476502c6_typeBuilder {
	jule::Ptr<_24763e5b2_parser> _field_p;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	

	_2476502c6_typeBuilder(void) = default;

	inline bool operator==(_2476502c6_typeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_2476502c6_typeBuilder _other) { return !this->operator==(_other); }


};
struct _246e7107b_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	_246e7107b_CompileInfo(void) = default;

	inline bool operator==(_246e7107b_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_246e7107b_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _246e7292e_pushErr(_246e723ce_directiveEval*, jule::Ptr<_24496dc35_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _246e72cd6_splitOperans(_246e723ce_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Bool _246e730e4_evalDirectiveIdent(_246e723ce_directiveEval*, jule::Str);
inline jule::Bool _246e73402_evalDirectivePart(_246e723ce_directiveEval*, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Bool _246e73666_eval(_246e723ce_directiveEval*);
struct _246e723ce_directiveEval {
	jule::Slice<_244640d69_Log> _field_logs;
	jule::Ptr<_2460dc858_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	

	_246e723ce_directiveEval(void) = default;

	inline bool operator==(_246e723ce_directiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_246e723ce_directiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2476aea83_JuleImporter> static__2476aeeb2_New(_246e7107b_CompileInfo);
inline jule::Slice<jule::Ptr<_246ce04c2_ImportInfo>> _2476b0226_AllPackages(_2476aea83_JuleImporter*);
inline void _2476b05de_SetModPath(_2476aea83_JuleImporter*, jule::Str);
inline jule::Str _2476b0853_GetModPath(_2476aea83_JuleImporter*);
inline jule::Str _2476b0b61_ModById(_2476aea83_JuleImporter*, jule::I64);
inline jule::Ptr<_246ce04c2_ImportInfo> _2476b0e6e_GetImport(_2476aea83_JuleImporter*, jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_2460db7ad_Ast>>,jule::Slice<_244640d69_Log>> _2476b1326_ImportPackage(_2476aea83_JuleImporter*, jule::Str, jule::Bool);
inline void _2476b159b_Imported(_2476aea83_JuleImporter*, jule::Ptr<_246ce04c2_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_244640d69_Log>> _2476b19db_isPassBuildDirectives(_2476aea83_JuleImporter*, jule::Ptr<_2460db7ad_Ast>&);
struct _2476aea83_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_246ce04c2_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	

	_2476aea83_JuleImporter(void) = default;

	inline bool operator==(_2476aea83_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_2476aea83_JuleImporter _other) { return !this->operator==(_other); }


};
struct _2476b4846_OrderedDefines {
	jule::Slice<jule::Ptr<_246117c3a_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_246d16372_Var>> _field_Globals;
	

	_2476b4846_OrderedDefines(void) = default;

	inline bool operator==(_2476b4846_OrderedDefines _other) {
		return 
			this->_field_Structs == _other._field_Structs &&
			this->_field_Globals == _other._field_Globals;
	}

	inline bool operator!=(_2476b4846_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool _213900214_isCommonOrdered(jule::Slice<jule::Ptr<_246117c3a_Struct>>&, jule::Ptr<_246117c3a_Struct>);
inline jule::Bool _213908a25_isCommonOrdered(jule::Slice<jule::Ptr<_246d16372_Var>>&, jule::Ptr<_246d16372_Var>);
inline void _2138eb1aa_orderCommon(jule::Slice<jule::Ptr<_246117c3a_Struct>>&);
inline void _2138ebc7c_orderCommon(jule::Slice<jule::Ptr<_246d16372_Var>>&);
inline void static__2476b546d_orderStructures(jule::Slice<jule::Ptr<_246117c3a_Struct>>&);
inline void static__2476b567c_orderVars(jule::Slice<jule::Ptr<_246d16372_Var>>&);
struct _2476b4a99_defineOrderer {
	

	_2476b4a99_defineOrderer(void) = default;

	inline bool operator==(_2476b4a99_defineOrderer _other) { return true; }

	inline bool operator!=(_2476b4a99_defineOrderer _other) { return !this->operator==(_other); }


};
struct _2477a8165_liveTable {
	jule::Slice<jule::Ptr<_246d16372_Var>> _field_vars;
	jule::Slice<jule::Ptr<_246cabb42_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_246142319_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_246cb3e9b_Trait>> _field_traits;
	

	_2477a8165_liveTable(void) = default;

	inline bool operator==(_2477a8165_liveTable _other) {
		return 
			this->_field_vars == _other._field_vars &&
			this->_field_fns == _other._field_fns &&
			this->_field_structs == _other._field_structs &&
			this->_field_traits == _other._field_traits;
	}

	inline bool operator!=(_2477a8165_liveTable _other) { return !this->operator==(_other); }


};
inline void _2477de982_optimizeChild(jule::Ptr<_2477de4a9_scopeDeadCode>, jule::Ptr<_246cc1c01_Scope>&);
inline void _2477dec29_optimizeBodyChildExceptional(jule::Ptr<_2477de4a9_scopeDeadCode>, jule::Ptr<_246cc1c01_Scope>&);
inline void _2477deeb0_optimizeBodyChild(jule::Ptr<_2477de4a9_scopeDeadCode>, jule::Ptr<_246cc1c01_Scope>&);
inline void _2477e0235_optimizeExprModel(jule::Ptr<_2477de4a9_scopeDeadCode>, jule::Any&);
inline void _2477e0411_eliminateFollowed(_2477de4a9_scopeDeadCode*);
inline void _2477e0686_pushGoto(jule::Ptr<_2477de4a9_scopeDeadCode>, jule::Ptr<_246cc472b_GotoSt>);
inline void _2477e090b_pushLabel(jule::Ptr<_2477de4a9_scopeDeadCode>, jule::Ptr<_246cc4440_Label>);
inline void _2477e0b81_optimizeRangeIter(jule::Ptr<_2477de4a9_scopeDeadCode>, jule::Ptr<_246cc38a1_RangeIter>);
inline void _2477e0e06_optimizeWhileIter(jule::Ptr<_2477de4a9_scopeDeadCode>, jule::Ptr<_246cc2ebb_WhileIter>);
inline void _2477e117b_optimizeInfIter(jule::Ptr<_2477de4a9_scopeDeadCode>, jule::Ptr<_246cc2a48_InfIter>);
inline void _2477e1401_optimizeConditional(jule::Ptr<_2477de4a9_scopeDeadCode>, jule::Ptr<_246cc275c_Conditional>);
inline void _2477e1676_optimizeMatch(jule::Ptr<_2477de4a9_scopeDeadCode>, jule::Ptr<_246cc594c_Match>);
inline void _2477e18eb_optimizeAssign(jule::Ptr<_2477de4a9_scopeDeadCode>, jule::Ptr<_246cc5056_Assign>);
inline void _2477e1b71_optimizeMultiAssign(jule::Ptr<_2477de4a9_scopeDeadCode>, jule::Ptr<_246cc540d_MultiAssign>);
inline void _2477e1de6_optimizeStmt(jule::Ptr<_2477de4a9_scopeDeadCode>, jule::Any);
inline void _2477e20c2_optimizeStmts(jule::Ptr<_2477de4a9_scopeDeadCode>);
struct _2477de4a9_scopeDeadCode {
	jule::Ptr<_2477de4a9_scopeDeadCode> _field_parent;
	jule::Ptr<_246cc1c01_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_246cc4440_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_246cc472b_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	_2477de4a9_scopeDeadCode(void) = default;

	inline bool operator==(_2477de4a9_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_2477de4a9_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _2477e3414_exprDeadCode static__2477e3a41_new(jule::Ptr<_2477de4a9_scopeDeadCode>&);
inline void _2477e3cb6_binary(_2477e3414_exprDeadCode*, jule::Ptr<_246ca5c18_BinopExprModel>);
inline void _2477e403b_unary(_2477e3414_exprDeadCode*, jule::Ptr<_246ca5e05_UnaryExprModel>);
inline void _2477e42b1_structureLit(_2477e3414_exprDeadCode*, jule::Ptr<_246ca62ce_StructLitExprModel>);
inline void _2477e4536_allocStructure(_2477e3414_exprDeadCode*, jule::Ptr<_246ca64bb_AllocStructLitExprModel>);
inline void _2477e47ab_casting(_2477e3414_exprDeadCode*, jule::Ptr<_246ca66a8_CastingExprModel>);
inline void _2477e4a31_args(_2477e3414_exprDeadCode*, jule::Slice<jule::Any>&);
inline void _2477e4ca6_funcCall(_2477e3414_exprDeadCode*, jule::Ptr<_246ca6895_FnCallExprModel>);
inline void _2477e502b_slice(_2477e3414_exprDeadCode*, jule::Ptr<_246ca6a82_SliceExprModel>);
inline void _2477e52a1_array(_2477e3414_exprDeadCode*, jule::Ptr<_246ca8006_ArrayExprModel>);
inline void _2477e5526_indexing(_2477e3414_exprDeadCode*, jule::Ptr<_246ca6c6e_IndexingExprModel>);
inline void _2477e579b_anonFunc(_2477e3414_exprDeadCode*, jule::Ptr<_246ca6e5b_AnonFnExprModel>);
inline void _2477e5a21_mapExpr(_2477e3414_exprDeadCode*, jule::Ptr<_246ca7335_MapExprModel>);
inline void _2477e5c96_slicing(_2477e3414_exprDeadCode*, jule::Ptr<_246ca7522_SlicingExprModel>);
inline void _2477e601b_traitSub(_2477e3414_exprDeadCode*, jule::Ptr<_246ca770e_TraitSubIdentExprModel>);
inline void _2477e6291_structureSub(_2477e3414_exprDeadCode*, jule::Ptr<_246ca7b2c_StructSubIdentExprModel>);
inline void _2477e6516_commonSub(_2477e3414_exprDeadCode*, jule::Ptr<_246ca83d0_CommonSubIdentExprModel>);
inline void _2477e678b_tuple(_2477e3414_exprDeadCode*, jule::Ptr<_246ca85bc_TupleExprModel>);
inline void _2477e6a11_newCall(_2477e3414_exprDeadCode*, jule::Ptr<_246ca8d70_BuiltinNewCallExprModel>);
inline void _2477e6c86_outCall(_2477e3414_exprDeadCode*, jule::Ptr<_246ca87a9_BuiltinOutCallExprModel>);
inline void _2477e700b_outlnCall(_2477e3414_exprDeadCode*, jule::Ptr<_246ca8996_BuiltinOutlnCallExprModel>);
inline void _2477e7281_panicCall(_2477e3414_exprDeadCode*, jule::Ptr<_246ca905c_BuiltinPanicCallExprModel>);
inline void _2477e7506_assertCall(_2477e3414_exprDeadCode*, jule::Ptr<_246ca9249_BuiltinAssertCallExprModel>);
inline void _2477e777b_errorCall(_2477e3414_exprDeadCode*, jule::Ptr<_246caa349_BuiltinErrorCallExprModel>);
inline void _2477e7a01_makeCall(_2477e3414_exprDeadCode*, jule::Ptr<_246ca9436_BuiltinMakeCallExprModel>);
inline void _2477e7c76_appendCall(_2477e3414_exprDeadCode*, jule::Ptr<_246ca9623_BuiltinAppendCallExprModel>);
inline void _2477e7eeb_lenCall(_2477e3414_exprDeadCode*, jule::Ptr<_246ca9810_BuiltinLenCallExprModel>);
inline void _2477e8271_capCall(_2477e3414_exprDeadCode*, jule::Ptr<_246ca99ec_BuiltinCapCallExprModel>);
inline void _2477e84e6_cloneCall(_2477e3414_exprDeadCode*, jule::Ptr<_246ca8b83_BuiltinCloneCallExprModel>);
inline void _2477e876b_deleteCall(_2477e3414_exprDeadCode*, jule::Ptr<_246ca78eb_BuiltinDeleteCallExprModel>);
inline void _2477e89e1_sizeof(_2477e3414_exprDeadCode*, jule::Ptr<_246caa536_SizeofExprModel>);
inline void _2477e8c66_alignof(_2477e3414_exprDeadCode*, jule::Ptr<_246caa723_AlignofExprModel>);
inline void _2477e8edb_integratedToStr(_2477e3414_exprDeadCode*, jule::Ptr<_246caaaec_IntegratedToStrExprModel>);
inline void _2477e9261_free(_2477e3414_exprDeadCode*, jule::Ptr<_246caaec6_FreeExprModel>);
inline void _2477e94d6_backendEmit(_2477e3414_exprDeadCode*, jule::Ptr<_246caacd9_BackendEmitExprModel>);
inline void _2477e975b_optimize(_2477e3414_exprDeadCode*, jule::Any&);
struct _2477e3414_exprDeadCode {
	jule::Ptr<_2477de4a9_scopeDeadCode> _field_s;
	

	_2477e3414_exprDeadCode(void) = default;

	inline bool operator==(_2477e3414_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_2477e3414_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _24499b37d_UnsafeBinopExprModel {
	jule::Ptr<_246ca5c18_BinopExprModel> _field_Node;
	

	_24499b37d_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_24499b37d_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_24499b37d_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _2454bc9e7_UnsafeIndexingExprModel {
	jule::Ptr<_246ca6c6e_IndexingExprModel> _field_Node;
	

	_2454bc9e7_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_2454bc9e7_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_2454bc9e7_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _2458b100b_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_246ca6a82_SliceExprModel> _field_Elems;
	

	_2458b100b_PushToSliceExprModel(void) = default;

	inline bool operator==(_2458b100b_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_2458b100b_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _245d606b9_MutSlicingExprModel {
	jule::Ptr<_24496dc35_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_245d606b9_MutSlicingExprModel(void) = default;

	inline bool operator==(_245d606b9_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_245d606b9_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _2449dbc09_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_2449dbc09_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_2449dbc09_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2449dbc09_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_244ced504_scopeOptimizer> static__2449940ac_new(jule::Ptr<_246cc1c01_Scope>);
inline void _2449ae14e_setCurrentStmt(_244ced504_scopeOptimizer*, jule::Any);
inline void _2449bc06e_optimizeData(_244ced504_scopeOptimizer*, jule::Ptr<_246d5e398_Data>);
inline void _2449bcc62_optimizeVar(_244ced504_scopeOptimizer*, jule::Ptr<_246d16372_Var>);
inline void _2449db18c_optimizeConditional(_244ced504_scopeOptimizer*, jule::Ptr<_246cc275c_Conditional>);
inline void _2449e0d51_buildDefaultConstatTrueCase(_244ced504_scopeOptimizer*, jule::Ptr<_246cc6497_Case>, jule::I64&, jule::Ptr<_246cc594c_Match>&);
inline void _2449e22e7_optimizeMatch(_244ced504_scopeOptimizer*, jule::Ptr<_246cc594c_Match>);
inline void _2449e3370_optimizeRangeIter(_244ced504_scopeOptimizer*, jule::Ptr<_246cc38a1_RangeIter>);
inline void _2449e37b0_optimizeWhileIter(_244ced504_scopeOptimizer*, jule::Ptr<_246cc2ebb_WhileIter>);
inline jule::Bool _244a26b56_substr(_244ced504_scopeOptimizer*, jule::Ptr<_246cc5056_Assign>);
inline jule::Bool _244a27508_strInsert(_244ced504_scopeOptimizer*, jule::Ptr<_246cc5056_Assign>);
inline jule::Bool _244a3cb5b_strAssign(_244ced504_scopeOptimizer*, jule::Ptr<_246cc5056_Assign>);
inline void _244abd071_optimizeAssign(_244ced504_scopeOptimizer*, jule::Ptr<_246cc5056_Assign>);
inline void _244ac6376_optimizeMultiAssign(_244ced504_scopeOptimizer*, jule::Ptr<_246cc540d_MultiAssign>);
inline void _244ac95bb_optimizeRet(_244ced504_scopeOptimizer*, jule::Ptr<_246cc6ec0_RetSt>);
inline void _244acadd6_optimizeStmt(_244ced504_scopeOptimizer*, jule::Any);
inline void _244ad0803_optimizeChild(_244ced504_scopeOptimizer*, jule::Ptr<_246cc1c01_Scope>);
inline void _244ac60ce_optimize(_244ced504_scopeOptimizer*);
struct _244ced504_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_246cc1c01_Scope> _field_scope;
	

	_244ced504_scopeOptimizer(void) = default;

	inline bool operator==(_244ced504_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_244ced504_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__244b133d5_optimize(jule::Any&);
inline jule::Bool _244b16b36_strCond(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca5c18_BinopExprModel>);
inline void _244b174e9_binary(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca5c18_BinopExprModel>);
inline void _244b1e37a_unary(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca5e05_UnaryExprModel>);
inline void _244b26c56_structureLit(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca62ce_StructLitExprModel>);
inline void _244b28450_allocStructure(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca64bb_AllocStructLitExprModel>);
inline void _244b358d0_casting(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca66a8_CastingExprModel>);
inline void _244b4797a_args(_24535c1b1_exprOptimizer*, jule::Slice<jule::Any>&);
inline void _244b7c31c_scope(_24535c1b1_exprOptimizer*, jule::Ptr<_246cc1c01_Scope>&);
inline void _244b80d04_funcCall(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca6895_FnCallExprModel>);
inline void _244b8a11b_slice(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca6a82_SliceExprModel>);
inline void _244cc5be6_array(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca8006_ArrayExprModel>);
inline void _244cd9c1b_indexing(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca6c6e_IndexingExprModel>);
inline void _244ce3e01_anonFunc(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca6e5b_AnonFnExprModel>);
inline void _244ce9d80_mapExpr(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca7335_MapExprModel>);
inline void _244ceae08_slicing(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca7522_SlicingExprModel>);
inline void _244cd9655_traitSub(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca770e_TraitSubIdentExprModel>);
inline void _244ceeca8_structureSub(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca7b2c_StructSubIdentExprModel>);
inline void _244d12051_commonSub(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca83d0_CommonSubIdentExprModel>);
inline void _244d16b5a_tuple(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca85bc_TupleExprModel>);
inline void _244d1c29d_newCall(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca8d70_BuiltinNewCallExprModel>);
inline void _244d1d6ab_outCall(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca87a9_BuiltinOutCallExprModel>);
inline void _244d1e965_outlnCall(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca8996_BuiltinOutlnCallExprModel>);
inline void _244d21208_panicCall(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca905c_BuiltinPanicCallExprModel>);
inline void _244d24c45_assertCall(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca9249_BuiltinAssertCallExprModel>);
inline void _244d31a98_errorCall(_24535c1b1_exprOptimizer*, jule::Ptr<_246caa349_BuiltinErrorCallExprModel>);
inline void _244d3d4cd_makeCall(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca9436_BuiltinMakeCallExprModel>);
inline void _244d4388a_appendCall(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca9623_BuiltinAppendCallExprModel>);
inline void _244d64955_lenCall(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca9810_BuiltinLenCallExprModel>);
inline void _244d6743b_capCall(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca99ec_BuiltinCapCallExprModel>);
inline void _244d6ba4a_cloneCall(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca8b83_BuiltinCloneCallExprModel>);
inline void _244d79b68_deleteCall(_24535c1b1_exprOptimizer*, jule::Ptr<_246ca78eb_BuiltinDeleteCallExprModel>);
inline void _244d8d077_sizeof(_24535c1b1_exprOptimizer*, jule::Ptr<_246caa536_SizeofExprModel>);
inline void _244dc62be_alignof(_24535c1b1_exprOptimizer*, jule::Ptr<_246caa723_AlignofExprModel>);
inline void _244e20192_integratedToStr(_24535c1b1_exprOptimizer*, jule::Ptr<_246caaaec_IntegratedToStrExprModel>);
inline void _244ec2c17_free(_24535c1b1_exprOptimizer*, jule::Ptr<_246caaec6_FreeExprModel>);
inline void _244ec5bc6_backendEmit(_24535c1b1_exprOptimizer*, jule::Ptr<_246caacd9_BackendEmitExprModel>);
inline void _244ecc76b_do(_24535c1b1_exprOptimizer*);
struct _24535c1b1_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	_24535c1b1_exprOptimizer(void) = default;

	inline bool operator==(_24535c1b1_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_24535c1b1_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2477b3835_Optimizer> static__2477132ac_New(jule::Ptr<_2476b22e4_IR>&);
inline void _247713ba3_optimizeGlobal(_2477b3835_Optimizer*, jule::Ptr<_246d16372_Var>&);
inline void _247722310_optimizeFunction(_2477b3835_Optimizer*, jule::Ptr<_246cab768_Fn>&);
inline void _2476e5415_optimizeStruct(_2477b3835_Optimizer*, jule::Ptr<_246117c3a_Struct>&);
inline void _247751482_optimizeGlobals(_2477b3835_Optimizer*, jule::Ptr<_246ce342b_Package>&);
inline void _247751839_optimizeFunctions(_2477b3835_Optimizer*, jule::Ptr<_246ce342b_Package>&);
inline void _2477532b9_optimizeStructs(_2477b3835_Optimizer*, jule::Ptr<_246ce342b_Package>&);
inline void _2477595cd_optimizePackage(_2477b3835_Optimizer*, jule::Ptr<_246ce342b_Package>&);
inline void _247760e53_Optimize(_2477b3835_Optimizer*);
struct _2477b3835_Optimizer {
	jule::Ptr<_2476b22e4_IR> _field_ir;
	

	_2477b3835_Optimizer(void) = default;

	inline bool operator==(_2477b3835_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_2477b3835_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__24780c8e5_Reset(void);
inline void static__24780dbb0_Print(jule::Str, jule::Str);
struct _24780d9c3_AnsiEscape {
	

	_24780d9c3_AnsiEscape(void) = default;

	inline bool operator==(_24780d9c3_AnsiEscape _other) { return true; }

	inline bool operator!=(_24780d9c3_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__247810365_LogFlat(_244640d69_Log&);
inline void static__247810574_LogError(_244640d69_Log&);
inline void static__247810783_Log(_244640d69_Log&);
inline void static__247810992_PrintLogs(jule::Slice<_244640d69_Log>&);
struct _2478100ac_Logger {
	

	_2478100ac_Logger(void) = default;

	inline bool operator==(_2478100ac_Logger _other) { return true; }

	inline bool operator!=(_2478100ac_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _211339da4_Unix(_2113399ec_AbsTime*);
struct _2113399ec_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	_2113399ec_AbsTime(void) = default;

	inline bool operator==(_2113399ec_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_2113399ec_AbsTime _other) { return !this->operator==(_other); }


};
inline _21133a190_Time static__21133a536_Unix(jule::U64);
inline _21133a190_Time static__21133a734_Now(void);
inline jule::U64 _21133ab85_Unix(_21133a190_Time*);
inline jule::U64 _21133ade9_Day(_21133a190_Time*);
inline jule::U64 _21133b15d_Month(_21133a190_Time*);
inline jule::U64 _21133b3c2_Year(_21133a190_Time*);
inline jule::U64 _21133b636_Second(_21133a190_Time*);
inline jule::U64 _21133b89a_Minute(_21133a190_Time*);
inline jule::U64 _21133bb0e_Hour(_21133a190_Time*);
inline _2113399ec_AbsTime _21133bd73_Abs(_21133a190_Time*);
struct _21133a190_Time {
	jule::U64 _field_sec = 0;
	

	_21133a190_Time(void) = default;

	inline bool operator==(_21133a190_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_21133a190_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_210674871_scopeCoder> static__210674c8e_new(jule::Ptr<_2113423d9_ObjectCoder>&);
inline void _210674e15_rangeIndexIter(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc38a1_RangeIter>&);
inline void _21067518a_rangeHashmapIter(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc38a1_RangeIter>&);
inline void _210675410_ifCase(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc20ec_If>);
inline void _210675685_conditional(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc275c_Conditional>);
inline void _21067590a_infIter(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc2a48_InfIter>);
inline void _210675b80_whileIter(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc2ebb_WhileIter>);
inline void _210675e05_rangeIter(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc38a1_RangeIter>);
inline void _21067617a_cont(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc3c9c_ContSt>);
inline void _210676400_label(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc4440_Label>);
inline void _210676675_gotoSt(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc472b_GotoSt>);
inline void _2106768ea_postfix(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc4ad3_Postfix>);
inline void _210676b70_assign(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc5056_Assign>);
inline void _210676de5_mapLookupAssign(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc540d_MultiAssign>&);
inline void _21067716a_multiAssign(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc540d_MultiAssign>);
inline jule::Fn<void(void)> _210677478_matchExpr(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc594c_Match>);
inline void _210677797_case(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc594c_Match>, jule::Ptr<_246cc6497_Case>);
inline void _210677a1c_matchSt(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc594c_Match>);
inline void _210677c92_fallSt(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc6a4c_FallSt>);
inline void _210678017_breakSt(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc4154_BreakSt>);
inline void _21067828c_retWithVars(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc6ec0_RetSt>);
inline void _210678512_retTuple(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc6ec0_RetSt>);
inline void _210678787_retWithExprs(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc6ec0_RetSt>);
inline void _210678a0c_retSt(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc6ec0_RetSt>);
inline void _210679007_var(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246d16372_Var>);
inline void _21067927c_st(jule::Ptr<_210674871_scopeCoder>, jule::Any);
inline void _210679502_scopeStmts(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc1c01_Scope>&);
inline void _210679777_scope(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cc1c01_Scope>);
inline void _2106799ec_funcScope(jule::Ptr<_210674871_scopeCoder>, jule::Ptr<_246cabb42_FnIns>);
struct _210674871_scopeCoder {
	jule::Ptr<_2113423d9_ObjectCoder> _field_oc;
	

	_210674871_scopeCoder(void) = default;

	inline bool operator==(_210674871_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_210674871_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21067c527_exprCoder> static__21067c923_new(jule::Ptr<_2113423d9_ObjectCoder>&);
inline void _21067cb98_string(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_2461e4872_Const>&);
inline void _21067ce1d_boolean(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_2461e4872_Const>&);
inline void _21067d0e9_nilLit(jule::Ptr<_21067c527_exprCoder>);
inline jule::Bool _21067d407_ftoaSpecialCases(jule::Ptr<_21067c527_exprCoder>, jule::F64&);
inline void _21067d67c_float32(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_2461e4872_Const>&);
inline void _21067d902_float64(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_2461e4872_Const>&);
inline void _21067db77_constant(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_2461e4872_Const>);
inline void _21067e040_divByZeroBinary(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_24496dc35_Token>&, jule::Ptr<_246ca5a2b_OperandExprModel>&, jule::Ptr<_246ca5a2b_OperandExprModel>&);
inline void _21067e2b5_unsafeBinary(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca5c18_BinopExprModel>);
inline void _21067e53a_binary(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca5c18_BinopExprModel>);
inline void _21128edd6_var(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246d16372_Var>);
inline void _21129014a_structureIns(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246142319_StructIns>);
inline void _2112903c0_unary(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca5e05_UnaryExprModel>);
inline void _211290645_structureLit(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca62ce_StructLitExprModel>);
inline void _2112908ba_allocStructure(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca64bb_AllocStructLitExprModel>);
inline void _211290b40_casting(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca66a8_CastingExprModel>);
inline void _211290db5_args(jule::Ptr<_21067c527_exprCoder>, jule::Slice<jule::Any>);
inline void _21129113a_modelForCall(jule::Ptr<_21067c527_exprCoder>, jule::Any);
inline void _2112913b0_pushCallInf(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca6895_FnCallExprModel>&);
inline jule::Bool _2112916bd_isWrapped(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca6895_FnCallExprModel>&);
inline void _211291943_pureFuncCall(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca6895_FnCallExprModel>&);
inline void _211291bb8_coFuncCall(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca6895_FnCallExprModel>&);
inline void _211291e3d_funcCall(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca6895_FnCallExprModel>);
inline void _2112921b3_slice(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca6a82_SliceExprModel>);
inline void _211292438_indexing(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca6c6e_IndexingExprModel>);
inline void _2112926ad_unsafeIndexing(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_2454bc9e7_UnsafeIndexingExprModel>);
inline void _211292933_anonFunc(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca6e5b_AnonFnExprModel>);
inline void _211292ba8_mapExpr(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca7335_MapExprModel>);
inline void _211292e2d_slicing(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca7522_SlicingExprModel>);
inline void _2112931a3_traitSub(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca770e_TraitSubIdentExprModel>);
inline void _211293428_structureSub(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca7b2c_StructSubIdentExprModel>);
inline void _21129369d_commonIdent(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca81e3_CommonIdentExprModel>);
inline void _211293923_commonSub(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca83d0_CommonSubIdentExprModel>);
inline void _211293b98_array(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca8006_ArrayExprModel>);
inline void _211293e1d_funcInsCommon(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246cabb42_FnIns>);
inline void _211294193_funcIns(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246cabb42_FnIns>);
inline void _211294418_tuple(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca85bc_TupleExprModel>);
inline void _21129468d_newCall(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca8d70_BuiltinNewCallExprModel>);
inline void _211294913_outCall(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca87a9_BuiltinOutCallExprModel>);
inline void _211294b88_outlnCall(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca8996_BuiltinOutlnCallExprModel>);
inline void _211294e0d_panicCall(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca905c_BuiltinPanicCallExprModel>);
inline void _211295183_assertCall(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca9249_BuiltinAssertCallExprModel>);
inline void _211295408_errorCall(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246caa349_BuiltinErrorCallExprModel>);
inline void _21129567d_copyCall(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246caa15c_BuiltinCopyCallExprModel>);
inline void _211295903_lenCall(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca9810_BuiltinLenCallExprModel>);
inline void _211295b78_capCall(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca99ec_BuiltinCapCallExprModel>);
inline void _211295ded_deleteCall(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca78eb_BuiltinDeleteCallExprModel>);
inline void _211296173_makeCallSlice(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca9436_BuiltinMakeCallExprModel>&);
inline void _2112963e8_makeCallStr(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca9436_BuiltinMakeCallExprModel>&);
inline void _21129666d_makeCall(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca9436_BuiltinMakeCallExprModel>);
inline void _2112968e3_pushToSlice(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_2458b100b_PushToSliceExprModel>);
inline void _211296b68_appendCall(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca9623_BuiltinAppendCallExprModel>);
inline void _211296ddd_cloneCall(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca8b83_BuiltinCloneCallExprModel>);
inline void _211297163_sizeof(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246caa536_SizeofExprModel>);
inline void _2112973d8_alignof(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246caa723_AlignofExprModel>);
inline jule::Str _2112976e6_runeLit(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246caa910_RuneExprModel>);
inline void _21129796b_structureStatic(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246ca7d19_StructStaticIdentExprModel>);
inline void _211297be1_integratedToStr(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246caaaec_IntegratedToStrExprModel>);
inline void _211297e66_backendEmit(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246caacd9_BackendEmitExprModel>);
inline void _2112981db_free(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246caaec6_FreeExprModel>);
inline void _211298461_mutSlicing(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_245d606b9_MutSlicingExprModel>);
inline void _2112986d6_strInsertBegin(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_2449dbc09_StrInsertBeginExprModel>);
inline void _21129895b_model(jule::Ptr<_21067c527_exprCoder>, jule::Any);
inline void _211298bd1_expr(jule::Ptr<_21067c527_exprCoder>, jule::Any);
inline void _211298e56_val(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246d60421_Value>);
inline void _2112991cb_initExpr(jule::Ptr<_21067c527_exprCoder>, jule::Ptr<_246d8ee9a_TypeKind>);
struct _21067c527_exprCoder {
	jule::Ptr<_2113423d9_ObjectCoder> _field_oc;
	

	_21067c527_exprCoder(void) = default;

	inline bool operator==(_21067c527_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_21067c527_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__21129b9d6_cloneFuncDecl(jule::Ptr<_246117c3a_Struct>&);
inline jule::Str static__21129bc7d_cloneFuncDef(jule::Ptr<_246117c3a_Struct>&);
struct _21129b6d9_deriveCoder {
	

	_21129b6d9_deriveCoder(void) = default;

	inline bool operator==(_21129b6d9_deriveCoder _other) { return true; }

	inline bool operator!=(_21129b6d9_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21129cb5d_TestCoder> static__21129d0d1_New(jule::Ptr<_2113423d9_ObjectCoder>&);
inline jule::Ptr<_246ce04c2_ImportInfo> _21129d345_findTestingPackage(jule::Ptr<_21129cb5d_TestCoder>);
inline void _21129d5ba_appendTest(jule::Ptr<_21129cb5d_TestCoder>, jule::Ptr<_246cabb42_FnIns>);
inline void _21129d840_appendPackageTests(jule::Ptr<_21129cb5d_TestCoder>, jule::Ptr<_246ce342b_Package>&);
inline jule::Bool _21129daa4_readyTestingPackage(jule::Ptr<_21129cb5d_TestCoder>);
inline void _21129dc80_callTmReset(jule::Ptr<_21129cb5d_TestCoder>);
inline void _21129de5b_callTmFailed(jule::Ptr<_21129cb5d_TestCoder>);
inline void _21129e137_callTmSkipped(jule::Ptr<_21129cb5d_TestCoder>);
inline void _21129e313_Serialize(jule::Ptr<_21129cb5d_TestCoder>);
struct _21129cb5d_TestCoder {
	jule::Ptr<_246142319_StructIns> _field_t;
	jule::Ptr<_246cab768_Fn> _field_tmReset;
	jule::Ptr<_246cab768_Fn> _field_tmFailed;
	jule::Ptr<_246cab768_Fn> _field_tmSkipped;
	jule::Ptr<_2113423d9_ObjectCoder> _field_oc;
	

	_21129cb5d_TestCoder(void) = default;

	inline bool operator==(_21129cb5d_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_21129cb5d_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__2112a07ba_toOut(jule::Str&, jule::Uintptr);
inline jule::Str static__2112a0ba5_toLocal(jule::I64, jule::I64, jule::Str&);
inline jule::Str static__2112a0e4c_func(jule::Ptr<_246cab768_Fn>&);
inline jule::Str static__2112a11e4_funcIns(jule::Ptr<_246cabb42_FnIns>&);
inline jule::Str static__2112a148b_traitDecl(jule::Ptr<_246cb3e9b_Trait>);
inline jule::Str static__2112a1733_param(jule::Ptr<_246cab57b_Param>&);
inline jule::Str static__2112a19ca_structure(jule::Ptr<_246117c3a_Struct>&);
inline jule::Str static__2112a1c72_structureIns(jule::Ptr<_246142319_StructIns>&);
inline jule::Str static__2112a2019_field(jule::Ptr<_246108841_Field>&);
inline jule::Str static__2112a22b1_var(jule::Ptr<_246d16372_Var>);
inline jule::Str static__2112a2558_iterBegin(jule::Uintptr);
inline jule::Str static__2112a2800_iterEnd(jule::Uintptr);
inline jule::Str static__2112a2a97_iterNext(jule::Uintptr);
inline jule::Str static__2112a2d3e_label(jule::Str&);
inline jule::Str static__2112a30d6_matchEnd(jule::Uintptr);
inline jule::Str static__2112a337d_caseBegin(jule::Uintptr);
struct _2112a02ae_identCoder {
	

	_2112a02ae_identCoder(void) = default;

	inline bool operator==(_2112a02ae_identCoder _other) { return true; }

	inline bool operator!=(_2112a02ae_identCoder _other) { return !this->operator==(_other); }


};
struct _2112a810d_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	_2112a810d_SerializationInfo(void) = default;

	inline bool operator==(_2112a810d_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_2112a810d_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _2113421ec_traitHash {
	jule::Ptr<_246cb3e9b_Trait> _field_t;
	jule::Ptr<_246142319_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	_2113421ec_traitHash(void) = default;

	inline bool operator==(_2113421ec_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_2113421ec_traitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _211346663_Str(_211346399_customType*);
inline jule::Bool _211346971_Equals(jule::Ptr<_211346399_customType>, jule::Ptr<_246d8ee9a_TypeKind>);
struct _211346399_customType {
	jule::Str _field_kind;
	

	_211346399_customType(void) = default;

	inline bool operator==(_211346399_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_211346399_customType _other) { return !this->operator==(_other); }


};
inline jule::Str static__2113471be_toType(jule::Str);
inline jule::Str static__211347466_prim(jule::Ptr<_246d94972_Prim>);
inline jule::Str static__21134770d_tuple(jule::Ptr<_246d996e1_Tuple>);
inline jule::Str static__2113479a5_asSptr(jule::Str);
inline jule::Str static__211347c4c_asPtr(jule::Str);
inline jule::Str static__211347ee4_sptr(jule::Ptr<_246d98206_Sptr>);
inline jule::Str static__21134828b_ptr(jule::Ptr<_246d9b76a_Ptr>);
inline jule::Str static__211348533_enumDecl(jule::Ptr<_246cb60e1_Enum>);
inline jule::Str static__2113487ca_typeEnumDecl(jule::Ptr<_246cb76db_TypeEnum>);
inline jule::Str static__211348a72_asSlice(jule::Ptr<_246d8ee9a_TypeKind>);
inline jule::Str static__211348d19_slice(jule::Ptr<_246d98b63_Slc>);
inline jule::Str static__2113490b1_mapType(jule::Ptr<_246d9a219_Map>);
inline jule::Str static__211349358_traitIdent(jule::Str);
inline jule::Str static__211349600_traitDecl(jule::Ptr<_246cb3e9b_Trait>);
inline jule::Str static__211349897_structure(jule::Ptr<_246117c3a_Struct>);
inline jule::Str static__211349b3e_structureIns(jule::Ptr<_246142319_StructIns>);
inline jule::Str static__211349dd6_array(jule::Ptr<_246d9ad0d_Arr>);
inline jule::Str static__21134a425_paramIns(jule::Ptr<_246cab955_ParamIns>&);
inline jule::Str static__21134a964_funcInsResult(jule::Ptr<_246cabb42_FnIns>&);
inline jule::Str static__21134ac0b_anonFunc(jule::Ptr<_246cabb42_FnIns>);
inline jule::Str static__21134aea3_func(jule::Ptr<_246cabb42_FnIns>);
inline jule::Str static__21134b24a_kind(jule::Ptr<_246d8ee9a_TypeKind>);
struct _211346b91_typeCoder {
	

	_211346b91_typeCoder(void) = default;

	inline bool operator==(_211346b91_typeCoder _other) { return true; }

	inline bool operator!=(_211346b91_typeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _213c9aee9_Name(_213ee4583_Flag*);
inline jule::Str _213c9b12b_What(_213ee4583_Flag*);
inline void _213ee49b2_Reset(_213ee4583_Flag*);
inline jule::I32 _213ee4ae4_Short(_213ee4583_Flag*);
struct _213ee4583_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	_213ee4583_Flag(void) = default;

	inline bool operator==(_213ee4583_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_213ee4583_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _213ee7de4_Name(_213ee83cd_Flag*);
inline jule::Str _213ee86b9_What(_213ee83cd_Flag*);
inline void _213ee87eb_Reset(_213ee83cd_Flag*);
inline jule::I32 _213ee892d_Short(_213ee83cd_Flag*);
struct _213ee83cd_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	_213ee83cd_Flag(void) = default;

	inline bool operator==(_213ee83cd_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_213ee83cd_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _213eeba30_Name(_213eec019_Flag*);
inline jule::Str _213eec305_What(_213eec019_Flag*);
inline void _213eec437_Reset(_213eec019_Flag*);
inline jule::I32 _213eec569_Short(_213eec019_Flag*);
struct _213eec019_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	_213eec019_Flag(void) = default;

	inline bool operator==(_213eec019_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_213eec019_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _2140006b0_Name(_214000b99_Flag*);
inline jule::Str _214000e85_What(_214000b99_Flag*);
inline void _2140010b7_Reset(_214000b99_Flag*);
inline jule::I32 _2140011e9_Short(_214000b99_Flag*);
struct _214000b99_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	_214000b99_Flag(void) = default;

	inline bool operator==(_214000b99_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_214000b99_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _2140042eb_Name(_2140047d5_Flag*);
inline jule::Str _214004ac1_What(_2140047d5_Flag*);
inline void _214004c03_Reset(_2140047d5_Flag*);
inline jule::I32 _214004d35_Short(_2140047d5_Flag*);
struct _2140047d5_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	_2140047d5_Flag(void) = default;

	inline bool operator==(_2140047d5_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_2140047d5_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_247666919_FlagSet> static__247666c05_New(void);
inline jule::Trait<_24766550b_CommonFlag> _247667189_FindFlag(_247666919_FlagSet*, jule::Str);
inline jule::Trait<_24766550b_CommonFlag> _247667497_FindFlagShort(_247666919_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_24766550b_CommonFlag>> _24766770b_Flags(_247666919_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _247667a19_Parse(_247666919_FlagSet*, jule::Slice<jule::Str>);
inline void _247667be5_Reset(_247666919_FlagSet*);
inline jule::Ptr<_2140047d5_Flag> _214083699_addFlagCommon(_247666919_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_214000b99_Flag> _21408c7d5_addFlagCommon(_247666919_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _214081950_AddVar(_247666919_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _21408aa9c_AddVar(_247666919_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _247666919_FlagSet {
	jule::Slice<jule::Trait<_24766550b_CommonFlag>> _field_flags;
	

	_247666919_FlagSet(void) = default;

	inline bool operator==(_247666919_FlagSet _other) {
		return 
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_247666919_FlagSet _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_2476b22e4_IR>,jule::Slice<_244640d69_Log>> static__2476b2778_Build(jule::Str, jule::I64);
inline void _2476b2bc9_appendStructs(_2476b22e4_IR*, jule::Ptr<_246ce342b_Package>&, jule::Slice<jule::Ptr<_246117c3a_Struct>>&);
inline jule::Slice<jule::Ptr<_246117c3a_Struct>> _2476b2e3d_GetAllStructures(_2476b22e4_IR*);
inline void _2476b325c_appendGlobals(_2476b22e4_IR*, jule::Ptr<_246ce342b_Package>&, jule::Slice<jule::Ptr<_246d16372_Var>>&);
inline jule::Slice<jule::Ptr<_246d16372_Var>> _2476b34c1_GetAllGlobals(_2476b22e4_IR*);
inline void _2476b369c_Order(_2476b22e4_IR*);
struct _2476b22e4_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_246ce342b_Package> _field_Main;
	jule::Slice<jule::Ptr<_246ce04c2_ImportInfo>> _field_Used;
	_2476b4846_OrderedDefines _field_Ordered;
	

	_2476b22e4_IR(void) = default;

	inline bool operator==(_2476b22e4_IR _other) {
		return 
			this->_field_Root == _other._field_Root &&
			this->_field_Passes == _other._field_Passes &&
			this->_field_Main == _other._field_Main &&
			this->_field_Used == _other._field_Used &&
			this->_field_Ordered == _other._field_Ordered;
	}

	inline bool operator!=(_2476b22e4_IR _other) { return !this->operator==(_other); }


};
inline jule::Str _24610b965_Str(_246142319_StructIns*);
inline jule::Bool _246117ee3_Equals(jule::Ptr<_246142319_StructIns>, jule::Ptr<_246d8ee9a_TypeKind>);
inline jule::Bool _246119159_Same(_246142319_StructIns*, jule::Ptr<_246142319_StructIns>);
inline jule::Ptr<_246cab768_Fn> _24611b4ad_FindMethod(_246142319_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_24611d977_FieldIns> _24611c7cd_FindField(_246142319_StructIns*, jule::Str);
inline jule::Ptr<_246d16372_Var> _2461202e7_FindStatic(_246142319_StructIns*, jule::Str);
struct _246142319_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_246117c3a_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_246d8d76d_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_24611d977_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_246d16372_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_246cab768_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Ptr<_246cac615_ReferenceStack> _field_Refers;
	_246116310_Operators _field_Operators;
	

	_246142319_StructIns(void) = default;

	inline bool operator==(_246142319_StructIns _other) {
		return 
			this->_field_Checked == _other._field_Checked &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Statics == _other._field_Statics &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Operators == _other._field_Operators;
	}

	inline bool operator!=(_246142319_StructIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2477a84ea_ObjectDeadCode> static__2477a89c3_new(jule::Ptr<_2476b22e4_IR>&);
inline jule::Bool _21393537b_isLive(jule::Ptr<_2477a84ea_ObjectDeadCode>, jule::Ptr<_246cb3e9b_Trait>&);
inline jule::Bool _21393a815_isLive(jule::Ptr<_2477a84ea_ObjectDeadCode>, jule::Ptr<_246cabb42_FnIns>&);
inline jule::Bool _2139450c2_isLive(jule::Ptr<_2477a84ea_ObjectDeadCode>, jule::Ptr<_246142319_StructIns>&);
inline jule::Bool _213949d30_isLive(jule::Ptr<_2477a84ea_ObjectDeadCode>, jule::Ptr<_246d16372_Var>&);
inline void _213935964_pushLive(jule::Ptr<_2477a84ea_ObjectDeadCode>, jule::Ptr<_246cb3e9b_Trait>);
inline void _21393ebe3_pushLive(jule::Ptr<_2477a84ea_ObjectDeadCode>, jule::Ptr<_246cabb42_FnIns>);
inline void _213943037_pushLive(jule::Ptr<_2477a84ea_ObjectDeadCode>, jule::Ptr<_246142319_StructIns>);
inline void _21394d87d_pushLive(jule::Ptr<_2477a84ea_ObjectDeadCode>, jule::Ptr<_246d16372_Var>);
inline void _2477db253_setReferencesAsLive(jule::Ptr<_2477a84ea_ObjectDeadCode>, jule::Ptr<_246cac615_ReferenceStack>&);
inline void _2477db4c8_inits(jule::Ptr<_2477a84ea_ObjectDeadCode>, jule::Ptr<_246ce342b_Package>&);
inline void _2477db74d_collectLivePackage(jule::Ptr<_2477a84ea_ObjectDeadCode>, jule::Ptr<_246ce342b_Package>&);
inline void _2477db929_collectLive(jule::Ptr<_2477a84ea_ObjectDeadCode>);
inline void _2477dbb9e_removeDeadGlobals(jule::Ptr<_2477a84ea_ObjectDeadCode>, jule::Slice<jule::Ptr<_246d16372_Var>>&);
inline void _2477dbe24_removeDeadFns(jule::Ptr<_2477a84ea_ObjectDeadCode>, jule::Slice<jule::Ptr<_246cab768_Fn>>&);
inline void _2477dc199_removeDeadStructs(jule::Ptr<_2477a84ea_ObjectDeadCode>, jule::Slice<jule::Ptr<_246117c3a_Struct>>&);
inline void _2477dc41e_removeDeadTraits(jule::Ptr<_2477a84ea_ObjectDeadCode>, jule::Slice<jule::Ptr<_246cb3e9b_Trait>>&);
inline void _2477dc694_removeDeadsFile(jule::Ptr<_2477a84ea_ObjectDeadCode>, jule::Ptr<_246d5956e_SymbolTable>&);
inline void _2477dc919_removeDeadsPackage(jule::Ptr<_2477a84ea_ObjectDeadCode>, jule::Ptr<_246ce342b_Package>&);
inline void _2477dcae5_removeDeads(jule::Ptr<_2477a84ea_ObjectDeadCode>);
inline void _2477dccc1_elimanate(jule::Ptr<_2477a84ea_ObjectDeadCode>);
struct _2477a84ea_ObjectDeadCode {
	_2477a8165_liveTable _field_live;
	jule::Ptr<_2476b22e4_IR> _field_ir;
	

	_2477a84ea_ObjectDeadCode(void) = default;

	inline bool operator==(_2477a84ea_ObjectDeadCode _other) {
		return 
			this->_field_live == _other._field_live &&
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_2477a84ea_ObjectDeadCode _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2113423d9_ObjectCoder> static__2112d25aa_New(jule::Ptr<_2476b22e4_IR>&, _2112a810d_SerializationInfo);
inline void _2112d6c0d_write(jule::Ptr<_2113423d9_ObjectCoder>, jule::Str);
inline void _211319ba8_addIndent(jule::Ptr<_2113423d9_ObjectCoder>);
inline void _21131a58d_doneIndent(jule::Ptr<_2113423d9_ObjectCoder>);
inline void _2112a75d5_indent(jule::Ptr<_2113423d9_ObjectCoder>);
inline jule::I64 _2112c7a34_findTypeOffset(_2113423d9_ObjectCoder*, jule::Ptr<_246cb3e9b_Trait>, jule::Ptr<_246d8ee9a_TypeKind>);
inline void _211317238_locInfo(jule::Ptr<_2113423d9_ObjectCoder>, jule::Ptr<_24496dc35_Token>&);
inline void _211317766_head(jule::Ptr<_2113423d9_ObjectCoder>);
inline void _2112a82ea_links(jule::Ptr<_2113423d9_ObjectCoder>);
inline void _2112cb362_prepareStructures(jule::Ptr<_2113423d9_ObjectCoder>);
inline void _2112d319e_iterPackages(jule::Ptr<_2113423d9_ObjectCoder>, jule::Fn<void(jule::Ptr<_246ce342b_Package>&)>);
inline void _2112d3732_buildTraitMap(jule::Ptr<_2113423d9_ObjectCoder>);
inline void _2112d4601_traitDecls(jule::Ptr<_2113423d9_ObjectCoder>);
inline void _2112d4cb6_structurePlainDecl(jule::Ptr<_2113423d9_ObjectCoder>, jule::Ptr<_246117c3a_Struct>&);
inline void _2112d547b_structurePlainDecls(jule::Ptr<_2113423d9_ObjectCoder>);
inline void _211320a38_fieldDecl(jule::Ptr<_2113423d9_ObjectCoder>, jule::Ptr<_24611d977_FieldIns>&);
inline void _2112d5b41_structureDestructor(jule::Ptr<_2113423d9_ObjectCoder>, jule::Ptr<_246142319_StructIns>&);
inline void _211319713_structureDeriveDefsDecls(jule::Ptr<_2113423d9_ObjectCoder>, jule::Ptr<_246142319_StructIns>&);
inline void _2112cc72b_structureOperatorEq(jule::Ptr<_2113423d9_ObjectCoder>, jule::Str&, jule::Ptr<_246142319_StructIns>&);
inline void _21134297d_structureOperatorNotEq(jule::Ptr<_2113423d9_ObjectCoder>, jule::Str&, jule::Ptr<_246142319_StructIns>&);
inline void _211342ab0_structureOperator(jule::Ptr<_2113423d9_ObjectCoder>, jule::Str&, jule::Ptr<_246cabb42_FnIns>&, jule::Str);
inline void _211342be2_structureOperators(jule::Ptr<_2113423d9_ObjectCoder>, jule::Ptr<_246142319_StructIns>&);
inline void _211342d24_structureInsDecl(jule::Ptr<_2113423d9_ObjectCoder>, jule::Ptr<_246142319_StructIns>&);
inline void _211342e56_structureDecl(jule::Ptr<_2113423d9_ObjectCoder>, jule::Ptr<_246117c3a_Struct>&);
inline void _211343088_structureDecls(jule::Ptr<_2113423d9_ObjectCoder>);
inline void _2113431ba_paramsDecls(jule::Ptr<_2113423d9_ObjectCoder>, jule::Slice<jule::Ptr<_246cab955_ParamIns>>&);
inline void _2113432ec_funcHead(jule::Ptr<_2113423d9_ObjectCoder>, jule::Ptr<_246cabb42_FnIns>&, jule::Bool);
inline void _21134342e_funcDecl(jule::Ptr<_2113423d9_ObjectCoder>, jule::Ptr<_246cab768_Fn>&, jule::Bool);
inline void _211343561_funcDecls(jule::Ptr<_2113423d9_ObjectCoder>);
inline void _211343693_traitDataTypes(jule::Ptr<_2113423d9_ObjectCoder>);
inline void _2113437c5_paramIns(jule::Ptr<_2113423d9_ObjectCoder>, jule::Ptr<_246cab955_ParamIns>&);
inline void _211343907_paramsIns(jule::Ptr<_2113423d9_ObjectCoder>, jule::Slice<jule::Ptr<_246cab955_ParamIns>>&);
inline void _211343a39_varInitExpr(jule::Ptr<_2113423d9_ObjectCoder>, jule::Ptr<_246d16372_Var>&, jule::Fn<void(void)>);
inline void _211343b6b_var(jule::Ptr<_2113423d9_ObjectCoder>, jule::Ptr<_246d16372_Var>);
inline void _211343c9d_func(jule::Ptr<_2113423d9_ObjectCoder>, jule::Ptr<_246cab768_Fn>&);
inline void _211343dd0_traitWrappers(jule::Ptr<_2113423d9_ObjectCoder>);
inline void _211344012_traitDatas(jule::Ptr<_2113423d9_ObjectCoder>);
inline void _211344144_globals(jule::Ptr<_2113423d9_ObjectCoder>);
inline void _211344276_decls(jule::Ptr<_2113423d9_ObjectCoder>);
inline void _2113443a8_structureMethods(jule::Ptr<_2113423d9_ObjectCoder>, jule::Ptr<_246142319_StructIns>&);
inline void _2113444da_structureDeriveDefs(jule::Ptr<_2113423d9_ObjectCoder>, jule::Ptr<_246142319_StructIns>&);
inline void _21134461c_structureOstream(jule::Ptr<_2113423d9_ObjectCoder>, jule::Ptr<_246142319_StructIns>&);
inline void _21134474e_structureIns(jule::Ptr<_2113423d9_ObjectCoder>, jule::Ptr<_246142319_StructIns>&);
inline void _211344881_structure(jule::Ptr<_2113423d9_ObjectCoder>, jule::Ptr<_246117c3a_Struct>&);
inline void _2113449b3_structures(jule::Ptr<_2113423d9_ObjectCoder>);
inline void _211344ae5_funcs(jule::Ptr<_2113423d9_ObjectCoder>);
inline void _211344c27_pushInit(jule::Ptr<_2113423d9_ObjectCoder>, jule::Ptr<_246ce342b_Package>&);
inline void _211344d59_initCaller(jule::Ptr<_2113423d9_ObjectCoder>);
inline void _211344e8b_end(jule::Ptr<_2113423d9_ObjectCoder>);
inline void _2113450bd_serializeHead(jule::Ptr<_2113423d9_ObjectCoder>);
inline void _211345200_Serialize(jule::Ptr<_2113423d9_ObjectCoder>);
struct _2113423d9_ObjectCoder {
	jule::Str _field_Obj;
	jule::Ptr<_2476b22e4_IR> _field_ir;
	_2112a810d_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_2113421ec_traitHash>> _field_tmap;
	jule::Str _field_indentBuffer;
	jule::Ptr<_21067c527_exprCoder> _field_ec;
	jule::Ptr<_210674871_scopeCoder> _field_sc;
	

	_2113423d9_ObjectCoder(void) = default;

	inline bool operator==(_2113423d9_ObjectCoder _other) {
		return 
			this->_field_Obj == _other._field_Obj &&
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_tmap == _other._field_tmap &&
			this->_field_indentBuffer == _other._field_indentBuffer &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_2113423d9_ObjectCoder _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _214019234_parseInteger(_2476690e2_argParser*, jule::Str&, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>);
inline std::tuple<jule::U64,jule::Bool> _214022858_parseInteger(_2476690e2_argParser*, jule::Str&, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>);
inline jule::Str _2476698d9_getData(_2476690e2_argParser*);
inline jule::VoidExceptional _247669b2b_processFlag(_2476690e2_argParser*, jule::Trait<_24766550b_CommonFlag>&);
inline jule::VoidExceptional _247669da1_singleDash(_2476690e2_argParser*, jule::Str&);
inline jule::VoidExceptional _24766a126_doubleDash(_2476690e2_argParser*, jule::Str&);
inline jule::VoidExceptional _24766a302_tryArg(_2476690e2_argParser*);
inline jule::VoidExceptional _24766a4cd_parse(_2476690e2_argParser*);
struct _2476690e2_argParser {
	_247666919_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	

	_2476690e2_argParser(void) = default;

	inline bool operator==(_2476690e2_argParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_2476690e2_argParser _other) { return !this->operator==(_other); }


};
inline void _2434b48c0_Free(void*);
inline jule::Str _2434de059_BytePtrToStr(jule::U8*);
inline jule::I64 _242713317_GetLastErrno(void);
inline jule::I64 _2434e788c_Stat(jule::U8*, struct stat*);
inline jule::I64 _2434e7c77_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _2434e80b8_Getcwd(jule::U8*, jule::U64);
inline DIR* _2434e8591_Opendir(jule::U8*);
inline struct dirent* _2434e8838_Readdir(DIR*);
inline jule::I64 _2434e8ad0_Closedir(DIR*);
inline jule::I64 _2434e9460_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _2434e9707_Rmdir(jule::U8*);
inline jule::I64 _2434e999e_Unlink(jule::U8*);
inline jule::I64 _2435176e2_Seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _243517acc_Read(jule::I64, void*, jule::U64);
inline jule::I64 _243517e51_Close(jule::I64);
inline jule::I64 _24351833b_Write(jule::I64, void*, jule::U64);
inline void _24351854a_Exit(jule::I64);
inline jule::I64 _2435ad2e3_getLastOsError(void);
inline jule::Slice<jule::Str> _2435adcc7_Args(void);
inline jule::Exceptional<jule::Str> _2435ae24a_WorkingDir(void);
inline jule::Exceptional<jule::Str> _2435b0191_getwd(void);
inline jule::Bool _244459534_IsLetter(jule::I32);
inline jule::Bool _2444d1754_is16(jule::Slice<_2444ceb92_Range16>, jule::U16);
inline jule::Bool _2444d1a95_is32(jule::Slice<_2444d0115_Range32>, jule::U32);
inline jule::Bool _2444d2337_isExcludingLatin(jule::Ptr<_2444d0588_RangeTable>, jule::I32);
inline jule::Bool _2444d25ce_IsUpper(jule::I32);
inline std::tuple<jule::I32,jule::I64> _244593849_DecodeRune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I64> _244593b68_DecodeRuneStr(jule::Str);
inline std::tuple<jule::I32,jule::I64> _244593e10_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _244594bad_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _244594eee_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _24459553d_RuneCountStr(jule::Str);
inline jule::Bool _2445957d5_RuneStart(jule::U8);
inline jule::Slice<jule::U8> _2445b32c5_Stobs(jule::Str&);
inline void _2445b3924_PushToStrBuffer(jule::Str&, jule::Slice<jule::U8>);
inline jule::I64 _2445b2703_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _2445b3d31_FindLastByteStr(jule::Str&, jule::U8);
inline jule::Str _24459aab5_Repeat(jule::Str, jule::I64);
inline jule::Bool _244596ebd_hasPrefix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _2445b3e96_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _2445b4150_hasSuffix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _2445b445d_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _2445b4848_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _2445b5184_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _2445b54c5_FindLast(jule::Str, jule::Str);
inline jule::I64 _2445b676d_findRune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I64 _2445b70a9_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _2445b7dbd_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _2445b85e9_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _2445b893a_Contains(jule::Str, jule::Str);
inline jule::Bool _2445b940d_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _2445b974e_Count(jule::Str, jule::Str);
inline jule::Str _2445b9bd3_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _2445b6c46_trimLeft(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _2445bac8e_TrimLeft(jule::Str, jule::Str);
inline void _2445bb047_trimRight(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _2445bb6c9_Trim(jule::Str, jule::Str);
inline jule::Str _2445bba1a_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _24361b62b_Clean(jule::Str);
inline jule::Str _24361ed9e_FromSlash(jule::Str);
inline jule::Str _243624832_Join(jule::Slice<jule::Str>);
inline jule::Str _24362c30c_Ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _24362dd25_Abs(jule::Str);
inline jule::Str _24360ba28_Base(jule::Str);
inline jule::Str _243611a3e_Dir(jule::Str);
inline jule::Str _24361549e_VolumeName(jule::Str);
inline jule::Bool _24363e484_IsPathSep(jule::U8);
inline jule::Bool _24364309d_IsAbs(jule::Str);
inline jule::I64 _243614503_volumeNameLen(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _2436181e9_abs(jule::Str);
inline jule::Str _24361ae99_join(jule::Slice<jule::Str>);
inline jule::I64 _242735988_getLastFsError(void);
inline jule::I64 _24468ad70_getLastProcessError(void);
inline jule::Slice<char*> _24468e0c6_strSliceToCstrSlice(jule::Slice<jule::Str>);
inline jule::I64 _24468e527_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I64 _24468e912_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _244690528_Exit(jule::I64);
inline jule::Str _244690726_Executable(void);
inline jule::Bool _244633e5b_IsStdHeaderPath(jule::Str);
inline jule::Bool _24463408d_IsValidHeaderExt(jule::Str);
inline jule::Bool _2446342e1_IsValidCppExt(jule::Str);
inline jule::Str _2446412a9_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _244641595_argToStr(jule::Any);
inline jule::I64 _24464183c_findNextFmt(jule::Str);
inline jule::Str _244641bc2_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _244642c8e_IsTopDirective(jule::Str);
inline jule::Bool _2446441be_IsWindows(jule::Str);
inline jule::Bool _244644477_IsDarwin(jule::Str);
inline jule::Bool _24464471e_IsLinux(jule::Str);
inline jule::Bool _244644a3d_IsI386(jule::Str);
inline jule::Bool _244644cd5_IsAmd64(jule::Str);
inline jule::Bool _24464507c_IsArm64(jule::Str);
inline jule::Bool _244645324_IsUnix(jule::Str);
inline jule::Bool _244645698_Is32Bit(jule::Str);
inline jule::Bool _244645940_Is64Bit(jule::Str);
inline void _244652a5c_init(void);
inline jule::Bool _24496e43e_IsUnaryOp(jule::Str);
inline jule::Bool _24496e72a_IsBinOp(jule::Str);
inline jule::Bool _24496ece1_IsStr(jule::Str);
inline jule::Bool _244970088_IsRawStr(jule::Str);
inline jule::Bool _244970330_IsRune(jule::Str);
inline jule::Bool _24497094b_IsBool(jule::Str);
inline jule::Bool _244970be3_IsFloat(jule::Str);
inline jule::Bool _244970e8a_IsNum(jule::Str);
inline jule::Bool _2449714c9_IsIgnoreIdent(jule::Str);
inline jule::Bool _244971771_IsAnonIdent(jule::Str);
inline jule::Bool _244971cb0_IsSpace(jule::I32);
inline jule::Bool _244972211_IsLetter(jule::I32);
inline jule::Bool _244972750_IsDecimal(jule::U8);
inline jule::Bool _2449729e7_IsBinary(jule::U8);
inline jule::Bool _244972c8e_IsOctal(jule::U8);
inline jule::Bool _244973036_IsHex(jule::U8);
inline jule::Bool _2449732cd_IsAssign(jule::U64);
inline jule::Bool _244973575_IsPostfixOp(jule::Str);
inline jule::Bool _24497381c_IsAssignOp(jule::Str);
inline jule::Ptr<_2449740c0_File> _2449755ee_NewFileSet(jule::Str);
inline _244640d69_Log _244976e2a_makeErr(jule::I64, jule::I64, jule::Ptr<_2449740c0_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _2449772b0_bytesHasPrefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _244977601_floatFmtE(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _244977986_floatFmtP(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _244977cc7_floatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _244978118_floatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _244978459_floatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _2449788aa_floatNum(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _244978b52_commonNum(jule::Slice<jule::U8>&);
inline jule::Str _244978de9_binaryNum(jule::Slice<jule::U8>&);
inline jule::Bool _24497923a_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _24497957b_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _2449798bc_isFloatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _244979c0d_isFloatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _24497a04e_isFloatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _24497a4a0_octalNum(jule::Slice<jule::U8>&);
inline jule::Str _24497a747_hexNum(jule::Slice<jule::U8>&);
inline jule::Str _24497aa88_hexEscape(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _24497ad30_bigUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _24497b0e9_littleUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _24497b2a3_hexByteEscape(jule::Slice<jule::U8>&);
inline jule::Str _24497b539_byteEscape(jule::Slice<jule::U8>&);
inline jule::Slice<_244640d69_Log> _244981033_Lex(jule::Ptr<_2449740c0_File>, jule::I64);
inline jule::I64 _246c5e52e_LeadingZeros64(jule::U64);
inline jule::I64 _246c60585_TrailingZeros(jule::U64);
inline jule::I64 _246c60e7b_TrailingZeros32(jule::U32);
inline jule::I64 _246c61223_TrailingZeros64(jule::U64);
inline jule::I64 _246c66998_Len32(jule::U32);
inline jule::I64 _246c66c40_Len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _246c67900_Add64(jule::U64, jule::U64, jule::U64);
inline std::tuple<jule::U64,jule::U64> _246c69083_Mul64(jule::U64, jule::U64);
inline jule::U32 _246b8590b_F32Bits(jule::F32);
inline jule::F32 _246b85be7_F32FromBits(jule::U32);
inline jule::U64 _246b85e8e_F64Bits(jule::F64);
inline jule::F64 _246b862ad_F64FromBits(jule::U64);
inline std::tuple<jule::F64,jule::I64> _246b888ba_Frexp(jule::F64);
inline jule::F64 _246be61ec_NaN(void);
inline jule::Bool _246be7132_IsNaN(jule::F64);
inline jule::F64 _246be8ac3_Inf(jule::I64);
inline jule::Bool _246bee436_IsInf(jule::F64, jule::I64);
inline std::tuple<jule::F64,jule::I64> _246c00a42_normalize(jule::F64);
inline jule::F64 _246c15a68_Log(jule::F64);
inline jule::F64 _246c1c4dc_Abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _246c7292c_Modf(jule::F64);
inline jule::F64 _246c731e1_Log2(jule::F64);
inline jule::Str _2466d22b0_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _2466e6967_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _24674e5e6_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _246874a3a_floatInfo&);
inline jule::Slice<jule::U8> _246775ee1_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _2435aa246_decimalSlice, jule::I64, jule::U8);
inline void _2467781ad_roundShortest(_246ca01da_decimal&, jule::U64, jule::I64, _246874a3a_floatInfo&);
inline jule::Slice<jule::U8> _2467872aa_fmtE(jule::Slice<jule::U8>, jule::Bool, _2435aa246_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _24678795e_fmtF(jule::Slice<jule::U8>, jule::Bool, _2435aa246_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _2467888e9_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _246874a3a_floatInfo&);
inline jule::Slice<jule::U8> _24685230e_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _246874a3a_floatInfo&);
inline jule::I64 _246875a91_min(jule::I64, jule::I64);
inline jule::I64 _24687ae70_max(jule::I64, jule::I64);
inline jule::U8 _2468d6be0_lower(jule::U8);
inline std::tuple<jule::U64,jule::I64> _246906b33_parseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _2469291c7_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _2469aabb5_ParseInt(jule::Str, jule::I64, jule::I64);
inline std::tuple<jule::F64,jule::Bool> _246a75d6d_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _246ab9169_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _246885c9e_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::Bool> _2466c3317_special(jule::Str);
inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _246b179d1_readFloat(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _24675c79c_atof64exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _2467ac2e1_atof32exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F64,jule::I64> _2469308b5_atofHex(jule::Str, _246874a3a_floatInfo&, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline std::tuple<jule::F32,jule::I64,jule::I64> _2469ab2d1_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _246a06c00_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _246a44974_parseFloatPrefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _246b19670_ParseFloat(jule::Str, jule::I64);
inline void _246b77777_ryuFtoaFixed32(_2435aa246_decimalSlice&, jule::U32, jule::I64, jule::I64);
inline void _24673c67d_ryuFtoaFixed64(_2435aa246_decimalSlice&, jule::U64, jule::I64, jule::I64);
inline void _2468257aa_formatDecimal(_2435aa246_decimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _2468a2958_ryuFtoaShortest(_2435aa246_decimalSlice&, jule::U64, jule::I64, _246874a3a_floatInfo&);
inline jule::I64 _246c9dbab_mulByLog2Log10(jule::I64);
inline jule::I64 _246c9dcdd_mulByLog10Log2(jule::I64);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _246c9de20_computeBounds(jule::U64, jule::I64, _246874a3a_floatInfo&);
inline void _246c9e162_ryuDigits(_2435aa246_decimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _246c9e294_ryuDigits32(_2435aa246_decimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline std::tuple<jule::U32,jule::I64,jule::Bool> _246c9e3c6_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline std::tuple<jule::U64,jule::I64,jule::Bool> _246c9e508_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _246c9e63a_divisibleByPow5(jule::U64, jule::I64);
inline std::tuple<jule::U32,jule::U32> _246c9e76c_divmod1e9(jule::U64);
inline void _246ca0c46_trim(_246ca01da_decimal&);
inline void _246ca0d78_rightShift(_246ca01da_decimal&, jule::U64);
inline jule::Bool _246ca0eaa_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _246ca10dc_leftShift(_246ca01da_decimal&, jule::U64);
inline jule::Bool _246ca121e_shouldRoundUp(_246ca01da_decimal&, jule::I64);
inline jule::Str _246ca1c9c_FmtUint(jule::U64, jule::I64);
inline jule::Str _246ca1dce_FmtInt(jule::I64, jule::I64);
inline jule::Str _246ca2011_Itoa(jule::I64);
inline jule::Str _246ca2143_small(jule::I64);
inline jule::Bool _246ca2275_isPowerOfTwo(jule::I64);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _246ca23a7_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _2462d20d0_RealKindOf(jule::Str);
inline jule::I64 _2462d8812_BitsizeOf(jule::Str);
inline jule::Str _24630ca9a_IntFromBits(jule::I64);
inline jule::Str _24631e9ad_UintFromBits(jule::I64);
inline jule::Str _246348e49_FloatFromBits(jule::I64);
inline jule::Bool _2464d5701_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _2465053e1_BitsizeOfFloat(jule::F64);
inline jule::I64 _2465ab91a_BitsizeOfInt(jule::I64);
inline jule::I64 _2465c46ad_BitsizeOfUint(jule::U64);
inline void _2465c4dd9_UpdateTarget(void);
inline void _2465d249b_init(void);
inline jule::F64 _24665ba75_Min(jule::Str);
inline jule::F64 _2466648a2_Max(jule::Str);
inline jule::Bool _2466714d5_IsI8Compatible(jule::Str);
inline jule::Bool _246682a79_IsI16Compatible(jule::Str);
inline jule::Bool _2466a3182_IsI32Compatible(jule::Str);
inline jule::Bool _2466a974e_IsI64Compatible(jule::Str);
inline jule::Bool _2462ae365_IsU8Compatible(jule::Str);
inline jule::Bool _246265470_IsU16Compatible(jule::Str);
inline jule::Bool _24633680a_IsU32Compatible(jule::Str);
inline jule::Bool _246337377_IsU64Compatible(jule::Str);
inline jule::Bool _24652bc31_IsF32Compatible(jule::Str);
inline jule::Bool _24652cd64_IsF64Compatible(jule::Str);
inline jule::Bool _246532ebd_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _246538127_IsI16Greater(jule::Str);
inline jule::Bool _2466a35e4_IsI32Greater(jule::Str);
inline jule::Bool _2462b1411_IsI64Greater(jule::Str);
inline jule::Bool _2464d505d_IsU16Greater(jule::Str);
inline jule::Bool _246ca2d69_IsU32Greater(jule::Str);
inline jule::Bool _246ca2e9b_IsU64Greater(jule::Str);
inline jule::Bool _246ca30cd_IsF32Greater(jule::Str);
inline jule::Bool _246ca3210_IsF64Greater(jule::Str);
inline jule::Bool _246ca3342_IsGreater(jule::Str, jule::Str);
inline jule::Bool _246ca3782_IsSigInt(jule::Str);
inline jule::Bool _246ca38b4_IsUnsigInt(jule::Str);
inline jule::Bool _246ca39e6_IsInt(jule::Str);
inline jule::Bool _246ca3b28_IsFloat(jule::Str);
inline jule::Bool _246ca3c5a_IsNum(jule::Str);
inline jule::Bool _246ca3d8c_IsSigNum(jule::Str);
inline void _246ca57b7_lshiftUnsig(_2461e4872_Const&, _2461e4872_Const&);
inline void _246ca58e9_rshiftUnsig(_2461e4872_Const&, _2461e4872_Const&);
inline jule::Bool _246d2e8b8_IsAscii(jule::I32);
inline jule::I32 _246d2e9ea_ToRune(jule::Slice<jule::U8>);
inline jule::Str _246d46eda_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _246d47293_ToStr(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _246d4753a_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _246d47848_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::Slice<jule::U8> _246d47b89_strEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::I64 _246e4324b_findFormatPrefix(jule::Slice<jule::U8>&, jule::I64&);
inline jule::Slice<jule::U8> _246e49043_getFormatRange(jule::I64&, jule::Slice<jule::U8>&);
inline void _246e492eb_FmtByDefault(jule::Str&, jule::Any&);
inline void _246e496c5_applyFmtByDefault(jule::Str&, jule::I64&, jule::Slice<jule::Any>&);
inline void _246e49ac1_applyFmt(jule::Slice<jule::U8>&, jule::Str&, jule::I64&, jule::Slice<jule::Any>&);
inline jule::Str _246e49dce_Format(jule::Str&, jule::Slice<jule::Any>);
inline jule::Str _246e4a4c8_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _246cac307_parameterUsesGenerics(jule::Ptr<_246cab57b_Param>&, jule::Slice<jule::Ptr<_246132e20_GenericDecl>>&);
inline jule::Ptr<_246d94103_TypeSymbol> _246cad0e9_buildType(jule::Ptr<_246125b27_TypeDecl>);
inline jule::Ptr<_246d60421_Value> _246cad22b_buildExpr(jule::Ptr<_24612a148_Expr>);
inline jule::Ptr<_246d8e2a7_TypeAlias> _246cad35d_buildTypeAlias(jule::Ptr<_24613bde6_TypeAliasDecl>);
inline jule::Ptr<_246108841_Field> _246cad490_buildField(jule::Ptr<_24614058c_FieldDecl>);
inline jule::Slice<jule::Ptr<_246108841_Field>> _246cad5c2_buildFields(jule::Slice<jule::Ptr<_24614058c_FieldDecl>>&);
inline jule::Ptr<_246117c3a_Struct> _246cad704_buildStruct(jule::Ptr<_246140d40_StructDecl>);
inline jule::Ptr<_246cab57b_Param> _246cad836_buildParam(jule::Ptr<_246136286_ParamDecl>);
inline jule::Slice<jule::Ptr<_246cab57b_Param>> _246cad968_buildParams(jule::Slice<jule::Ptr<_246136286_ParamDecl>>&);
inline jule::Ptr<_246cab38e_RetType> _246cada9a_buildRetType(jule::Ptr<_246128c3a_RetTypeDecl>);
inline jule::Ptr<_246cab768_Fn> _246cadbcc_buildFn(jule::Ptr<_2461375a6_FnDecl>);
inline jule::Slice<jule::Ptr<_246cab768_Fn>> _246cadd0e_buildMethods(jule::Slice<jule::Ptr<_2461375a6_FnDecl>>&);
inline jule::Ptr<_246cb3e9b_Trait> _246cade41_buildTrait(jule::Ptr<_24614144a_TraitDecl>);
inline jule::Ptr<_246cb55eb_EnumItem> _246cae073_buildEnumItem(jule::Ptr<_24613d755_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_246cb55eb_EnumItem>> _246cae1a5_buildEnumItems(jule::Slice<jule::Ptr<_24613d755_EnumItemDecl>>&);
inline jule::Ptr<_246cb60e1_Enum> _246cae2d7_buildEnum(jule::Ptr<_24613e27d_EnumDecl>);
inline jule::Ptr<_246cb7125_TypeEnumItem> _246cae64a_buildTypeEnumItem(jule::Ptr<_24613ec84_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_246cb7125_TypeEnumItem>> _246cae77c_buildTypeEnumItems(jule::Slice<jule::Ptr<_24613ec84_TypeEnumItemDecl>>&);
inline jule::Ptr<_246cb76db_TypeEnum> _246cae8ae_buildTypeEnum(jule::Ptr<_24614038e_TypeEnumDecl>);
inline jule::Ptr<_246d16372_Var> _246cae9e1_buildVar(jule::Ptr<_246138585_VarDecl>);
inline jule::Slice<jule::Ptr<_246d16372_Var>> _246caeb23_buildVars(jule::Slice<jule::Ptr<_246138585_VarDecl>>);
inline jule::Ptr<_246cbbb96_Impl> _246caec55_buildImpl(jule::Ptr<_246141a55_Impl>);
inline jule::Bool _246cbb03b_matchConstraint(jule::Str&, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Bool _246cbb327_isBuiltinConstraint(jule::Str&);
inline jule::Ptr<_246cc8862_scopeChecker> _246cbdc31_newScopeCheckerBase(jule::Ptr<_246ce861d_Sema>&, jule::Ptr<_246cabb42_FnIns>);
inline jule::Ptr<_246cc8862_scopeChecker> _246cbe0b6_newScopeChecker(jule::Ptr<_246ce861d_Sema>&, jule::Ptr<_246cabb42_FnIns>);
inline jule::Ptr<_246cc75ca_scopeLabel> _246cbe407_findLabelParent(jule::Str, jule::Ptr<_246cc8862_scopeChecker>);
inline jule::Bool _246cbe78c_modelIsGotoScope(jule::Any, jule::Ptr<_246cc1c01_Scope>&);
inline jule::Bool _246cbeacd_stmtIsGotoScope(jule::Any&, jule::Ptr<_246cc1c01_Scope>&);
inline jule::I64 _246cbee1e_countMatchType(jule::Ptr<_246cc594c_Match>&, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Slice<jule::Ptr<_246d5e398_Data>> _246cc01b6_getDatasFromTupleData(jule::Ptr<_246d5e398_Data>&);
inline jule::Bool _246cc0a02_checkMut(jule::Ptr<_246ce861d_Sema>&, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d5e398_Data>, jule::Ptr<_24496dc35_Token>);
inline jule::Bool _246cc0e86_checkAssign(jule::Ptr<_246ce861d_Sema>&, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d5e398_Data>, jule::Ptr<_24496dc35_Token>);
inline jule::Bool _246cc122d_isValidAstStForNextSt(jule::Any&);
inline jule::Bool _246cc14c5_isValidStForNextSt(jule::Any&);
inline jule::Bool _246cc176c_stmtIsDef(jule::Any&);
inline jule::Ptr<_246d16372_Var> _246cdcbd9_findVarInPackage(jule::Slice<jule::Ptr<_246d5956e_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_246d8e2a7_TypeAlias> _246cdd118_findTypeAliasInPackage(jule::Slice<jule::Ptr<_246d5956e_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_246117c3a_Struct> _246cdd503_findStructInPackage(jule::Slice<jule::Ptr<_246d5956e_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_246cab768_Fn> _246cdd965_findFnInPackage(jule::Slice<jule::Ptr<_246d5956e_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_246cb3e9b_Trait> _246cddc73_findTraitInPackage(jule::Slice<jule::Ptr<_246d5956e_SymbolTable>>&, jule::Str);
inline jule::Ptr<_246cb60e1_Enum> _246cde0b4_findEnumInPackage(jule::Slice<jule::Ptr<_246d5956e_SymbolTable>>&, jule::Str);
inline jule::Ptr<_246cb76db_TypeEnum> _246cde405_findTypeEnumInPackage(jule::Slice<jule::Ptr<_246d5956e_SymbolTable>>&, jule::Str);
inline jule::Any _246cde900_defByIdentPackage(jule::Slice<jule::Ptr<_246d5956e_SymbolTable>>&, jule::Str&, jule::Bool);
inline jule::Bool _246ce5a05_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _246ce675e_isValidModelForRef(jule::Any&);
inline _244640d69_Log _246ce6c04_compilerErr(jule::Ptr<_24496dc35_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _246ce7045_impIsLookupable(jule::Ptr<_246ce04c2_ImportInfo>&, jule::Str);
inline void _246ce7342_appendRetVars(jule::Slice<jule::Ptr<_246d16372_Var>>&, jule::Ptr<_246cabb42_FnIns>&);
inline void _246ce75ea_appendParamVars(jule::Slice<jule::Ptr<_246d16372_Var>>&, jule::Ptr<_246cabb42_FnIns>&);
inline void _246ce78c5_appendGenericTypeAliases(jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>>&, jule::Ptr<_246cabb42_FnIns>&);
inline jule::Ptr<_246d5956e_SymbolTable> _246ce7c27_findFile(jule::Slice<jule::Ptr<_246d5956e_SymbolTable>>&, jule::Ptr<_2449740c0_File>&);
inline void _246ce8189_pushSugggestion(_244640d69_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _246d38361_traitHasReferenceReceiver(jule::Ptr<_246cb3e9b_Trait>&);
inline jule::Bool _246d2ecd6_floatAssignable(jule::Str, jule::Ptr<_246d5e398_Data>&);
inline jule::Bool _246d2ee18_sigAssignable(jule::Str, jule::Ptr<_246d5e398_Data>&);
inline jule::Bool _246d46bcc_unsigAssignable(jule::Str, jule::Ptr<_246d5e398_Data>&);
inline jule::Bool _246d46d0e_intAssignable(jule::Str, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d8ee9a_TypeKind> _246d585e5_lenKind(void);
inline jule::Ptr<_2460dc858_Directive> _246d89648_findDirective(jule::Slice<jule::Ptr<_2460dc858_Directive>>&, jule::Str);
inline jule::Any _246d899cd_findBuiltinsImport(jule::Str, jule::Ptr<_246ce04c2_ImportInfo>);
inline void _246d89bdc_fitBitsize(jule::Ptr<_246d5e398_Data>&);
inline void _246d89ed9_makeStructLitAlloc(jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246ca62ce_StructLitExprModel>&);
inline jule::Ptr<_246d16372_Var> _246d8a32a_buildErrorVar(jule::Ptr<_246cc1c01_Scope>&, jule::Ptr<_24612e12a_FnCallExpr>&);
inline jule::Any _246d8a66b_findBuiltinsSema(jule::Str, jule::Ptr<_246ce861d_Sema>);
inline jule::Bool _246d8a913_isOkForShifting(jule::Ptr<_246d5e398_Data>&);
inline jule::Bool _246d8acba_isInstancedStruct(jule::Ptr<_246142319_StructIns>);
inline jule::Bool _246d8b12d_isPtrArithmeticCompatible(jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d5e398_Data>&);
inline void _246d8b370_applyCastKindModel(jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d8ee9a_TypeKind>&);
inline void _246d8b628_applyCastKind(jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Ptr<_246d5e398_Data> _246d8b826_buildVoidData(void);
inline jule::Str _246d8bae0_checkDataForIntegerIndexing(jule::Ptr<_246d5e398_Data>&);
inline void _246d8bda9_applyCastModelByEnum(jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246cb60e1_Enum>);
inline void _246d8c162_castConstByType(jule::Str&, jule::Ptr<_246d5e398_Data>&);
inline void _246d8c66d_updateModelToGenericIns(jule::Any&, jule::Ptr<_246cabb42_FnIns>&);
inline jule::Bool _246d8c8b0_pushSubIdentFromExpr(jule::Any, jule::Ptr<_24612683c_SubIdentTypeDecl>&);
inline jule::Bool _246da6863_kindUsesGenerics(jule::Any&, jule::Slice<jule::Ptr<_246132e20_GenericDecl>>&);
inline jule::Bool _246da6be8_hasDirective(jule::Slice<jule::Ptr<_2460dc858_Directive>>&, jule::Str);
inline jule::Bool _246da6e90_canGetPtr(jule::Ptr<_246d5e398_Data>&);
inline jule::Bool _246da72ae_isValidForSptrType(jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Bool _246da7556_isValidForRef(jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Bool _246da7820_isBuiltinStrConvertable(jule::Ptr<_246d8ee9a_TypeKind>&);
inline jule::Str _246da7a95_buildLinkPathByTokens(jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_246d94972_Prim> _246da7e4c_buildPrimType(jule::Str);
inline jule::Ptr<_246117c3a_Struct> _246da81e4_getStructFromKind(jule::Ptr<_246d8ee9a_TypeKind>);
inline jule::Bool _246da848b_isPrim(jule::Str);
inline void _246da8744_applyImplicitCast(jule::Ptr<_246d8ee9a_TypeKind>&, jule::Ptr<_246d5e398_Data>&);
inline std::tuple<jule::Ptr<_246d5956e_SymbolTable>,jule::Slice<_244640d69_Log>> _246dab7ad_buildSymbols(jule::Ptr<_2460db7ad_Ast>&, jule::Trait<_246cdc854_Importer>&, jule::Ptr<_246caed87_symbolBuilder>);
inline std::tuple<jule::Ptr<_246ce342b_Package>,jule::Slice<_244640d69_Log>> _246dabbdc_analyzePackage(jule::Slice<jule::Ptr<_2460db7ad_Ast>>&, jule::Trait<_246cdc854_Importer>&, jule::I64&);
inline std::tuple<jule::Ptr<_246ce342b_Package>,jule::Slice<_244640d69_Log>> _246dac0c7_AnalyzePackage(jule::Slice<jule::Ptr<_2460db7ad_Ast>>, jule::Trait<_246cdc854_Importer>, jule::I64);
inline jule::Ptr<_246cabb42_FnIns> _246db8204_findBuiltinFn(jule::Str);
inline jule::Ptr<_246d8e2a7_TypeAlias> _246dba4c0_findBuiltinTypeAlias(jule::Str);
inline jule::Any _246dbb081_findBuiltinDef(jule::Str);
inline jule::Any _246dbba98_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _246dbe837_findBuiltinDefStdMem(jule::Str);
inline jule::Any _246dbda23_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _246dbdbbb_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_246d5e398_Data> _246e4a693_builtinCallerCommonPlain(jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e4aa17_builtinCallerCommon(jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e4ae02_builtinCallerCommonMut(jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e4b243_builtinCallerError(jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&);
inline jule::Ptr<_246d5e398_Data> _246e4b62d_builtinCallerOut(jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e4ba18_builtinCallerOutln(jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e4be03_builtinCallerNew(jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e4c2dd_builtinCallerPanic(jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e4c909_builtinCallerMake(jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e4cce4_builtinCallerAppend(jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e4d278_callerCopySlice(jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e4d70c_callerCopyStr(jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e4dae7_builtinCallerCopy(jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e4de38_callerLenSlice(jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e4e279_callerLenMap(jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e4e5ba_callerLenArr(jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e4e90b_callerLenStr(jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e4ece6_builtinCallerLen(jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e50137_callerCapSlice(jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e50478_callerCapStr(jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e50863_builtinCallerCap(jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e50ce7_callerDeleteMap(jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e511d2_builtinCallerDelete(jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e515bc_builtinCallerClone(jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e51b83_builtinCallerAssert(jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e51ee6_builtinCallerStdMemSizeOf(jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e52414_builtinCallerStdMemAlignOf(jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e52832_builtinCallerStdMemFree(jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e52c61_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e5317e_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e535be_builtinCallerStdDebugOut(jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Ptr<_246d5e398_Data> _246e539a9_builtinCallerStdDebugOutln(jule::Ptr<_246d60e16_Eval>&, jule::Ptr<_24612e12a_FnCallExpr>&, jule::Ptr<_246d5e398_Data>&);
inline jule::Bool _246e82532_FindModuleFile(jule::Slice<jule::Ptr<_2427516da_DirEntry>>&);
inline jule::Str _246e82664_FindModuleFileDeep(jule::Str);
inline jule::Slice<_244640d69_Log> _246e828ea_CheckModuleFile(jule::Str);
inline jule::Ptr<_2475c5aba_FileInfo> _2475c878d_ParseFile(jule::Ptr<_2449740c0_File>);
inline std::tuple<jule::Ptr<_2460db7ad_Ast>,jule::Slice<_244640d69_Log>> _247620b15_parseFileset(jule::Ptr<_2449740c0_File>);
inline jule::Ptr<_246135ab0_ScopeTree> _24762151c_newScope(void);
inline std::tuple<jule::Bool,jule::Bool> _24762182a_isSt(jule::Ptr<_24496dc35_Token>, jule::Ptr<_24496dc35_Token>);
inline jule::Bool _247621b6b_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::I64&);
inline std::tuple<jule::I64,jule::Bool> _247622001_nextStPos(jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::I64);
inline std::tuple<jule::Slice<jule::Ptr<_24496dc35_Token>>,jule::Bool> _247622342_skipSt(jule::I64&, jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Slice<jule::Ptr<_24762263e_stmt>> _2476229d5_splitStmts(jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Bool _2476391c2_isTypeOp(jule::Str&);
inline jule::Bool _2476394ad_isTypeRange(jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Slice<jule::Ptr<_24496dc35_Token>> _247639755_getBlockExpr(jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_24496dc35_Token>>,jule::Slice<jule::Ptr<_24496dc35_Token>>> _247639ada_splitDelim(jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::U64);
inline jule::I64 _247639d82_findLowestPrecOp(jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Ptr<_24612bd09_IdentExpr> _24763a129_buildIdentExpr(jule::Ptr<_24496dc35_Token>&);
inline std::tuple<jule::Slice<jule::Ptr<_24496dc35_Token>>,jule::I64> _24763a3c1_getRangeExprTokens(jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Bool _24763b12a_checkAssignTokens(jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline _244640d69_Log _24763c34b_makeErr(jule::I64, jule::I64, jule::Ptr<_2449740c0_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_24496dc35_Token>> _24763c824_range(jule::I64&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_24496dc35_Token>>,jule::Slice<jule::Ptr<_24496dc35_Token>>> _24763cabb_rangeLast(jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>>,jule::Slice<_244640d69_Log>> _24763cea6_partsKind(jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::Str, jule::Bool);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>>,jule::Slice<_244640d69_Log>> _24763d391_parts(jule::Slice<jule::Ptr<_24496dc35_Token>>&, jule::U64, jule::Bool);
inline jule::Str _24763d638_getCloseKindOfBrace(jule::Str);
inline _244640d69_Log _24763da23_compilerErr(jule::Ptr<_24496dc35_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _24763de52_pushSuggestion(_244640d69_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _24763e1e9_tokstoa(jule::Slice<jule::Ptr<_24496dc35_Token>>&);
inline jule::Bool _24764e25e_isPub(jule::Str&);
inline jule::Ptr<_246125b27_TypeDecl> _24764eacd_buildVoidType(void);
inline jule::Ptr<_246125b27_TypeDecl> _24764ed42_buildPrimType(jule::Ptr<_24496dc35_Token>);
inline std::tuple<jule::Bool,jule::Bool> _246e56209_checkOs(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _246e5633b_checkArch(jule::Str);
inline jule::Bool _246e5646d_isPassFileAnnotation(jule::Str);
inline void _246e71389_setOsVars(jule::Slice<jule::Str>&);
inline void _246e715dc_setArchVars(jule::Slice<jule::Str>&);
inline void _246e71895_initVars(jule::Slice<jule::Str>&, _246e7107b_CompileInfo&);
inline jule::Slice<jule::U8> _2476ae346_readBuff(jule::Str);
inline _244640d69_Log _2476ae5ee_flatCompilerErr(jule::Str);
inline void _2476b3a10_pushPasses(jule::Ptr<_246ce342b_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _2476b3d95_getAllUniquePasses(jule::Ptr<_246ce342b_Package>&, jule::Slice<jule::Ptr<_246ce04c2_ImportInfo>>);
inline _246e7107b_CompileInfo _2476b4093_buildCompileInfo(void);
inline void _2477dd08a_EliminateDefines(jule::Ptr<_2476b22e4_IR>&);
inline jule::Ptr<_2460dc858_Directive> _2477dd420_findDirective(jule::Slice<jule::Ptr<_2460dc858_Directive>>&, jule::Str);
inline jule::Bool _2477dd761_hasDirective(jule::Slice<jule::Ptr<_2460dc858_Directive>>&, jule::Str);
inline void _2477e23ad_eliminateDeadCodeOfScope(jule::Ptr<_246cc1c01_Scope>);
inline void _2477e2644_eliminateScopeFunctions(jule::Slice<jule::Ptr<_246cab768_Fn>>&);
inline void _2477e2886_eliminateFunctionsScopePackage(jule::Ptr<_246ce342b_Package>&);
inline void _2477e2b2d_eliminateScopePackage(jule::Ptr<_246ce342b_Package>&);
inline void _2477e2d3c_EliminateScopes(jule::Ptr<_2476b22e4_IR>&);
inline jule::Bool _244ad59c3_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _244ad8652_isConstantValidConditionalCase(jule::Ptr<_246cc20ec_If>&);
inline jule::Bool _244ad9c5d_isUnreachableExpr(jule::Any&);
inline jule::Bool _244adc8dc_isConstantValidMatchCase(jule::Ptr<_246cc6497_Case>&);
inline jule::Bool _244addb41_isUnreachableConditionalCase(jule::Ptr<_246cc20ec_If>&);
inline jule::Bool _244ae6a4a_isUnreachableMatchCase(jule::Ptr<_246cc6497_Case>&);
inline std::tuple<jule::Bool,jule::U64> _245192601_checkForBitShiftOpt(jule::Ptr<_246ca5a2b_OperandExprModel>&, jule::Ptr<_246ca5a2b_OperandExprModel>&);
inline void _245196748_PushOptLevel(jule::I64);
inline void _247769302_detectEnabled(void);
inline void _247811410_Throw(jule::Str);
inline jule::U64 _21133c12b_unix(void);
inline jule::U64 _21133c439_unixYearToSeconds(jule::U64, jule::Bool&);
inline jule::U64 _21133c7be_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _210679d4e_isCopyOptimizable(jule::Ptr<_246d5e398_Data>&);
inline jule::Bool _21067a1d4_isIterCopyOptimizable(jule::Ptr<_246d5e398_Data>&, jule::Ptr<_246d16372_Var>&);
inline jule::Str _21129952d_decomposeCommonEsq(jule::U8);
inline jule::Str _211299819_sbtoa(jule::U8);
inline jule::Str _211299ab1_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _211299dd0_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _21129a1dd_ftoa(jule::F64, jule::I64);
inline jule::Str _21129a485_itoa(jule::I64);
inline jule::Str _21129a72c_utoa(jule::U64);
inline jule::Bool _21129aad4_isForwarded(jule::Ptr<_246cc1c01_Scope>&);
inline jule::Bool _21129ad9d_isBuiltinCallHasDebuginf(jule::Ptr<_246ca6895_FnCallExprModel>&);
inline jule::Bool _21129b0ce_isExprComesFromBind(jule::Ptr<_246d5e398_Data>&);
inline void _211345332_iterFiles(jule::Ptr<_246ce342b_Package>&, jule::Fn<void(jule::Ptr<_246d5956e_SymbolTable>&)>);
inline void _211345464_prepareStructure(jule::Ptr<_246117c3a_Struct>&);
inline jule::Str _211345684_concatAllParts(jule::Slice<jule::Ptr<_24496dc35_Token>>);
inline jule::Ptr<_2460dc858_Directive> _21134daaa_findDirective(jule::Slice<jule::Ptr<_2460dc858_Directive>>&, jule::Str);
inline jule::Bool _21134de40_hasDirective(jule::Slice<jule::Ptr<_2460dc858_Directive>>&, jule::Str);
inline jule::Bool _21134e1d7_shouldInitialized(jule::Ptr<_246d8ee9a_TypeKind>&);
inline void _24270bc8e_printErrorMessage(jule::Str);
inline void _244609ddd_help(jule::Slice<jule::Str>&);
inline void _24461d561_version(jule::Slice<jule::Str>&);
inline void _24461dcae_toolDistos(void);
inline void _244620662_toolDistarch(void);
inline void _244620db0_tool(jule::Slice<jule::Str>&);
inline void _24462646a_julenv(jule::Slice<jule::Str>&);
inline void _24460ace0_mod(jule::Slice<jule::Str>&);
inline jule::Bool _244632d28_processCommand(jule::Slice<jule::Str>&);
inline void _243589423_showInfo(void);
void entry_point(void);
inline void _2447106ca_init(void);
inline jule::Ptr<_24282ac48_File> _244711d19_openOutput(jule::Str&);
inline void _244711e4b_clearObjects(void);
inline void _24766a6ed_compileIr(jule::Str, jule::Str);
inline jule::Bool _24766a830_isCppSourceFile(jule::Str);
inline void _24766a962_pushCompCmdClang(jule::Str&);
inline void _24766aa94_pushCompCmdGcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _24766abc6_genCompileCmd(jule::Str, jule::Ptr<_2476b22e4_IR>&);
inline jule::Str _24766ad08_getCompilePath(void);
inline void _24766ae3a_applyTargetIndependentOptimizations(jule::Ptr<_2476b22e4_IR>&);
inline void _24766b06c_checkCompilerFlag(void);
inline void _24766b19e_checkTargetArch(jule::Str);
inline void _24766b2d1_checkTargetOs(jule::Str);
inline void _24766b413_checkTargetFlag(jule::Str&);
inline void _24766b545_checkOptFlag(jule::Str&);
inline void _24766b8a8_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _24766b9da_checkFlags(jule::Slice<jule::Str>&);
inline void _24766bb1c_setupSemaFlags(jule::I64&);
inline jule::Ptr<_2476b22e4_IR> _24766bc4e_buildIr(jule::Slice<jule::Str>&);
inline void _24766bd81_compileCommand(jule::Slice<jule::Str>&);


struct _246cdc854_ImporterMptrData {
	void(*_246cdb776_SetModPath)(jule::Trait<_246cdc854_Importer>, jule::Str);
	jule::Str(*_246cdb9b8_GetModPath)(jule::Trait<_246cdc854_Importer>);
	jule::Str(*_246cdbcc6_ModById)(jule::Trait<_246cdc854_Importer>, jule::I64);
	jule::Ptr<_246ce04c2_ImportInfo>(*_246cdc0d4_GetImport)(jule::Trait<_246cdc854_Importer>, jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_2460db7ad_Ast>>,jule::Slice<_244640d69_Log>>(*_246cdc48b_ImportPackage)(jule::Trait<_246cdc854_Importer>, jule::Str, jule::Bool);
	void(*_246cdc711_Imported)(jule::Trait<_246cdc854_Importer>, jule::Ptr<_246ce04c2_ImportInfo>);
};

struct _246d8ea6b_KindMptrData {
	jule::Str(*_246d8e61a_Str)(jule::Trait<_246d8ea6b_Kind>);
	jule::Bool(*_246d8e928_Equals)(jule::Trait<_246d8ea6b_Kind>, jule::Ptr<_246d8ee9a_TypeKind>);
};

struct _246daaacb_LookupMptrData {
	jule::Ptr<_246ce04c2_ImportInfo>(*_246da8c83_FindPackage)(jule::Trait<_246daaacb_Lookup>, jule::Str);
	jule::Ptr<_246ce04c2_ImportInfo>(*_246da9091_SelectPackage)(jule::Trait<_246daaacb_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_246ce04c2_ImportInfo>)>);
	jule::Ptr<_246d16372_Var>(*_246da9448_FindVar)(jule::Trait<_246daaacb_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_246d8e2a7_TypeAlias>(*_246da9800_FindTypeAlias)(jule::Trait<_246daaacb_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_246117c3a_Struct>(*_246da9ba7_FindStruct)(jule::Trait<_246daaacb_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_246cab768_Fn>(*_246daa05e_FindFn)(jule::Trait<_246daaacb_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_246cb3e9b_Trait>(*_246daa36c_FindTrait)(jule::Trait<_246daaacb_Lookup>, jule::Str);
	jule::Ptr<_246cb60e1_Enum>(*_246daa67a_FindEnum)(jule::Trait<_246daaacb_Lookup>, jule::Str);
	jule::Ptr<_246cb76db_TypeEnum>(*_246daa988_FindTypeEnum)(jule::Trait<_246daaacb_Lookup>, jule::Str);
};

struct _24766550b_CommonFlagMptrData {
	jule::Str(*_2476645d7_Name)(jule::Trait<_24766550b_CommonFlag>);
	jule::I32(*_247665165_Short)(jule::Trait<_24766550b_CommonFlag>);
	jule::Str(*_247665297_What)(jule::Trait<_24766550b_CommonFlag>);
	void(*_2476653c9_Reset)(jule::Trait<_24766550b_CommonFlag>);
};



inline void _246cdb776_SetModPath_0(jule::Trait<_246cdc854_Importer> _self_, jule::Str _1729_path) {
	_2476b05de_SetModPath(_self_.safe_ptr<_2476aea83_JuleImporter>(), _1729_path);
}
inline jule::Str _246cdb9b8_GetModPath_0(jule::Trait<_246cdc854_Importer> _self_) {
	return _2476b0853_GetModPath(_self_.safe_ptr<_2476aea83_JuleImporter>());
}
inline jule::Str _246cdbcc6_ModById_0(jule::Trait<_246cdc854_Importer> _self_, jule::I64 _2522_id) {
	return _2476b0b61_ModById(_self_.safe_ptr<_2476aea83_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_246ce04c2_ImportInfo> _246cdc0d4_GetImport_0(jule::Trait<_246cdc854_Importer> _self_, jule::Str _3128_path) {
	return _2476b0e6e_GetImport(_self_.safe_ptr<_2476aea83_JuleImporter>(), _3128_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_2460db7ad_Ast>>,jule::Slice<_244640d69_Log>> _246cdc48b_ImportPackage_0(jule::Trait<_246cdc854_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _2476b1326_ImportPackage(_self_.safe_ptr<_2476aea83_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _246cdc711_Imported_0(jule::Trait<_246cdc854_Importer> _self_, jule::Ptr<_246ce04c2_ImportInfo> _4131__0) {
	_2476b159b_Imported(_self_.safe_ptr<_2476aea83_JuleImporter>(), _4131__0);
}
inline jule::Str _246d8e61a_Str_0(jule::Trait<_246d8ea6b_Kind> _self_) {
	return _24610b965_Str(_self_.safe_ptr<_246142319_StructIns>());
}
inline jule::Bool _246d8e928_Equals_0(jule::Trait<_246d8ea6b_Kind> _self_, jule::Ptr<_246d8ee9a_TypeKind> _5622_other) {
	return _246117ee3_Equals(_self_.data.as<_246142319_StructIns>(), _5622_other);
}
inline jule::Str _246d8e61a_Str_1(jule::Trait<_246d8ea6b_Kind> _self_) {
	return _24617aad3_Str(_self_.safe_ptr<_246cabb42_FnIns>());
}
inline jule::Bool _246d8e928_Equals_1(jule::Trait<_246d8ea6b_Kind> _self_, jule::Ptr<_246d8ee9a_TypeKind> _5622_other) {
	return _246179340_Equals(_self_.data.as<_246cabb42_FnIns>(), _5622_other);
}
inline jule::Str _246d8e61a_Str_2(jule::Trait<_246d8ea6b_Kind> _self_) {
	return _246cb4397_Str(_self_.safe_ptr<_246cb3e9b_Trait>());
}
inline jule::Bool _246d8e928_Equals_2(jule::Trait<_246d8ea6b_Kind> _self_, jule::Ptr<_246d8ee9a_TypeKind> _5622_other) {
	return _246cb46a5_Equals(_self_.data.as<_246cb3e9b_Trait>(), _5622_other);
}
inline jule::Str _246d8e61a_Str_3(jule::Trait<_246d8ea6b_Kind> _self_) {
	return _246cb6454_Str(_self_.safe_ptr<_246cb60e1_Enum>());
}
inline jule::Bool _246d8e928_Equals_3(jule::Trait<_246d8ea6b_Kind> _self_, jule::Ptr<_246d8ee9a_TypeKind> _5622_other) {
	return _246cb6762_Equals(_self_.data.as<_246cb60e1_Enum>(), _5622_other);
}
inline jule::Str _246d8e61a_Str_4(jule::Trait<_246d8ea6b_Kind> _self_) {
	return _246cb7a1b_Str(_self_.safe_ptr<_246cb76db_TypeEnum>());
}
inline jule::Bool _246d8e928_Equals_4(jule::Trait<_246d8ea6b_Kind> _self_, jule::Ptr<_246d8ee9a_TypeKind> _5622_other) {
	return _246cb7d29_Equals(_self_.data.as<_246cb76db_TypeEnum>(), _5622_other);
}
inline jule::Str _246d8e61a_Str_5(jule::Trait<_246d8ea6b_Kind> _self_) {
	return _246d90396_Str(_self_.safe_ptr<_246d8ee9a_TypeKind>());
}
inline jule::Bool _246d8e928_Equals_5(jule::Trait<_246d8ea6b_Kind> _self_, jule::Ptr<_246d8ee9a_TypeKind> _5622_other) {
	return _246d906a4_Equals(_self_.data.as<_246d8ee9a_TypeKind>(), _5622_other);
}
inline jule::Str _246d8e61a_Str_6(jule::Trait<_246d8ea6b_Kind> _self_) {
	return _246d94cd5_Str(_self_.safe_ptr<_246d94972_Prim>());
}
inline jule::Bool _246d8e928_Equals_6(jule::Trait<_246d8ea6b_Kind> _self_, jule::Ptr<_246d8ee9a_TypeKind> _5622_other) {
	return _246d950e3_Equals(_self_.data.as<_246d94972_Prim>(), _5622_other);
}
inline jule::Str _246d8e61a_Str_7(jule::Trait<_246d8ea6b_Kind> _self_) {
	return _246d98569_Str(_self_.safe_ptr<_246d98206_Sptr>());
}
inline jule::Bool _246d8e928_Equals_7(jule::Trait<_246d8ea6b_Kind> _self_, jule::Ptr<_246d8ee9a_TypeKind> _5622_other) {
	return _246d98877_Equals(_self_.data.as<_246d98206_Sptr>(), _5622_other);
}
inline jule::Str _246d8e61a_Str_8(jule::Trait<_246d8ea6b_Kind> _self_) {
	return _246d9916e_Str(_self_.safe_ptr<_246d98b63_Slc>());
}
inline jule::Bool _246d8e928_Equals_8(jule::Trait<_246d8ea6b_Kind> _self_, jule::Ptr<_246d8ee9a_TypeKind> _5622_other) {
	return _246d9947c_Equals(_self_.data.as<_246d98b63_Slc>(), _5622_other);
}
inline jule::Str _246d8e61a_Str_9(jule::Trait<_246d8ea6b_Kind> _self_) {
	return _246d99a54_Str(_self_.safe_ptr<_246d996e1_Tuple>());
}
inline jule::Bool _246d8e928_Equals_9(jule::Trait<_246d8ea6b_Kind> _self_, jule::Ptr<_246d8ee9a_TypeKind> _5622_other) {
	return _246d99d62_Equals(_self_.data.as<_246d996e1_Tuple>(), _5622_other);
}
inline jule::Str _246d8e61a_Str_10(jule::Trait<_246d8ea6b_Kind> _self_) {
	return _246d9a57c_Str(_self_.safe_ptr<_246d9a219_Map>());
}
inline jule::Bool _246d8e928_Equals_10(jule::Trait<_246d8ea6b_Kind> _self_, jule::Ptr<_246d8ee9a_TypeKind> _5622_other) {
	return _246d9a88a_Equals(_self_.data.as<_246d9a219_Map>(), _5622_other);
}
inline jule::Str _246d8e61a_Str_11(jule::Trait<_246d8ea6b_Kind> _self_) {
	return _246d9b171_Str(_self_.safe_ptr<_246d9ad0d_Arr>());
}
inline jule::Bool _246d8e928_Equals_11(jule::Trait<_246d8ea6b_Kind> _self_, jule::Ptr<_246d8ee9a_TypeKind> _5622_other) {
	return _246d9b47e_Equals(_self_.data.as<_246d9ad0d_Arr>(), _5622_other);
}
inline jule::Str _246d8e61a_Str_12(jule::Trait<_246d8ea6b_Kind> _self_) {
	return _246d9bacd_Str(_self_.safe_ptr<_246d9b76a_Ptr>());
}
inline jule::Bool _246d8e928_Equals_12(jule::Trait<_246d8ea6b_Kind> _self_, jule::Ptr<_246d8ee9a_TypeKind> _5622_other) {
	return _246d9bddb_Equals(_self_.data.as<_246d9b76a_Ptr>(), _5622_other);
}
inline jule::Str _246d8e61a_Str_13(jule::Trait<_246d8ea6b_Kind> _self_) {
	return _211346663_Str(_self_.safe_ptr<_211346399_customType>());
}
inline jule::Bool _246d8e928_Equals_13(jule::Trait<_246d8ea6b_Kind> _self_, jule::Ptr<_246d8ee9a_TypeKind> _5622_other) {
	return _211346971_Equals(_self_.data.as<_211346399_customType>(), _5622_other);
}
inline jule::Ptr<_246ce04c2_ImportInfo> _246da8c83_FindPackage_0(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _930_ident) {
	return _246cc8cb3_FindPackage(_self_.safe_ptr<_246cc8862_scopeChecker>(), _930_ident);
}
inline jule::Ptr<_246ce04c2_ImportInfo> _246da9091_SelectPackage_0(jule::Trait<_246daaacb_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_246ce04c2_ImportInfo>)> _1332_selector) {
	return _246cc90c1_SelectPackage(_self_.safe_ptr<_246cc8862_scopeChecker>(), _1332_selector);
}
inline jule::Ptr<_246d16372_Var> _246da9448_FindVar_0(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _246cc9478_FindVar(_self_.safe_ptr<_246cc8862_scopeChecker>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_246d8e2a7_TypeAlias> _246da9800_FindTypeAlias_0(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _246cc9830_FindTypeAlias(_self_.safe_ptr<_246cc8862_scopeChecker>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_246117c3a_Struct> _246da9ba7_FindStruct_0(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _246cc9bd7_FindStruct(_self_.safe_ptr<_246cc8862_scopeChecker>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_246cab768_Fn> _246daa05e_FindFn_0(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _246cca08e_FindFn(_self_.safe_ptr<_246cc8862_scopeChecker>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_246cb3e9b_Trait> _246daa36c_FindTrait_0(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _3328_ident) {
	return _246cca39c_FindTrait(_self_.safe_ptr<_246cc8862_scopeChecker>(), _3328_ident);
}
inline jule::Ptr<_246cb60e1_Enum> _246daa67a_FindEnum_0(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _3727_ident) {
	return _246cca6aa_FindEnum(_self_.safe_ptr<_246cc8862_scopeChecker>(), _3727_ident);
}
inline jule::Ptr<_246cb76db_TypeEnum> _246daa988_FindTypeEnum_0(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _4131_ident) {
	return _246cca9b8_FindTypeEnum(_self_.safe_ptr<_246cc8862_scopeChecker>(), _4131_ident);
}
inline jule::Ptr<_246ce04c2_ImportInfo> _246da8c83_FindPackage_1(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _930_ident) {
	return _246ce09de_FindPackage(_self_.safe_ptr<_246ce04c2_ImportInfo>(), _930_ident);
}
inline jule::Ptr<_246ce04c2_ImportInfo> _246da9091_SelectPackage_1(jule::Trait<_246daaacb_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_246ce04c2_ImportInfo>)> _1332_selector) {
	return _246ce0cec_SelectPackage(_self_.safe_ptr<_246ce04c2_ImportInfo>(), _1332_selector);
}
inline jule::Ptr<_246d16372_Var> _246da9448_FindVar_1(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _246ce11a4_FindVar(_self_.safe_ptr<_246ce04c2_ImportInfo>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_246d8e2a7_TypeAlias> _246da9800_FindTypeAlias_1(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _246ce155b_FindTypeAlias(_self_.safe_ptr<_246ce04c2_ImportInfo>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_246117c3a_Struct> _246da9ba7_FindStruct_1(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _246ce1913_FindStruct(_self_.safe_ptr<_246ce04c2_ImportInfo>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_246cab768_Fn> _246daa05e_FindFn_1(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _246ce1cba_FindFn(_self_.safe_ptr<_246ce04c2_ImportInfo>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_246cb3e9b_Trait> _246daa36c_FindTrait_1(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _3328_ident) {
	return _246ce20c8_FindTrait(_self_.safe_ptr<_246ce04c2_ImportInfo>(), _3328_ident);
}
inline jule::Ptr<_246cb60e1_Enum> _246daa67a_FindEnum_1(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _3727_ident) {
	return _246ce23d6_FindEnum(_self_.safe_ptr<_246ce04c2_ImportInfo>(), _3727_ident);
}
inline jule::Ptr<_246cb76db_TypeEnum> _246daa988_FindTypeEnum_1(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _4131_ident) {
	return _246ce26e4_FindTypeEnum(_self_.safe_ptr<_246ce04c2_ImportInfo>(), _4131_ident);
}
inline jule::Ptr<_246ce04c2_ImportInfo> _246da8c83_FindPackage_2(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _930_ident) {
	return _246ce3904_FindPackage(_self_.safe_ptr<_246ce342b_Package>(), _930_ident);
}
inline jule::Ptr<_246ce04c2_ImportInfo> _246da9091_SelectPackage_2(jule::Trait<_246daaacb_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_246ce04c2_ImportInfo>)> _1332_selector) {
	return _246ce3c12_SelectPackage(_self_.safe_ptr<_246ce342b_Package>(), _1332_selector);
}
inline jule::Ptr<_246d16372_Var> _246da9448_FindVar_2(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _246ce40b9_FindVar(_self_.safe_ptr<_246ce342b_Package>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_246d8e2a7_TypeAlias> _246da9800_FindTypeAlias_2(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _246ce4471_FindTypeAlias(_self_.safe_ptr<_246ce342b_Package>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_246117c3a_Struct> _246da9ba7_FindStruct_2(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _246ce4828_FindStruct(_self_.safe_ptr<_246ce342b_Package>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_246cab768_Fn> _246daa05e_FindFn_2(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _246ce4bd0_FindFn(_self_.safe_ptr<_246ce342b_Package>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_246cb3e9b_Trait> _246daa36c_FindTrait_2(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _3328_ident) {
	return _246ce4edd_FindTrait(_self_.safe_ptr<_246ce342b_Package>(), _3328_ident);
}
inline jule::Ptr<_246cb60e1_Enum> _246daa67a_FindEnum_2(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _3727_ident) {
	return _246ce52eb_FindEnum(_self_.safe_ptr<_246ce342b_Package>(), _3727_ident);
}
inline jule::Ptr<_246cb76db_TypeEnum> _246daa988_FindTypeEnum_2(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _4131_ident) {
	return _246ce5609_FindTypeEnum(_self_.safe_ptr<_246ce342b_Package>(), _4131_ident);
}
inline jule::Ptr<_246ce04c2_ImportInfo> _246da8c83_FindPackage_3(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _930_ident) {
	return _246ce8b3a_FindPackage(_self_.safe_ptr<_246ce861d_Sema>(), _930_ident);
}
inline jule::Ptr<_246ce04c2_ImportInfo> _246da9091_SelectPackage_3(jule::Trait<_246daaacb_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_246ce04c2_ImportInfo>)> _1332_selector) {
	return _246ce8e48_SelectPackage(_self_.safe_ptr<_246ce861d_Sema>(), _1332_selector);
}
inline jule::Ptr<_246d16372_Var> _246da9448_FindVar_3(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _246ce9300_FindVar(_self_.safe_ptr<_246ce861d_Sema>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_246d8e2a7_TypeAlias> _246da9800_FindTypeAlias_3(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _246ce96a7_FindTypeAlias(_self_.safe_ptr<_246ce861d_Sema>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_246117c3a_Struct> _246da9ba7_FindStruct_3(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _246ce9a5e_FindStruct(_self_.safe_ptr<_246ce861d_Sema>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_246cab768_Fn> _246daa05e_FindFn_3(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _246ce9e16_FindFn(_self_.safe_ptr<_246ce861d_Sema>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_246cb3e9b_Trait> _246daa36c_FindTrait_3(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _3328_ident) {
	return _246cea224_FindTrait(_self_.safe_ptr<_246ce861d_Sema>(), _3328_ident);
}
inline jule::Ptr<_246cb60e1_Enum> _246daa67a_FindEnum_3(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _3727_ident) {
	return _246cea532_FindEnum(_self_.safe_ptr<_246ce861d_Sema>(), _3727_ident);
}
inline jule::Ptr<_246cb76db_TypeEnum> _246daa988_FindTypeEnum_3(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _4131_ident) {
	return _246cea840_FindTypeEnum(_self_.safe_ptr<_246ce861d_Sema>(), _4131_ident);
}
inline jule::Ptr<_246ce04c2_ImportInfo> _246da8c83_FindPackage_4(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _930_ident) {
	return _246d59a8b_FindPackage(_self_.safe_ptr<_246d5956e_SymbolTable>(), _930_ident);
}
inline jule::Ptr<_246ce04c2_ImportInfo> _246da9091_SelectPackage_4(jule::Trait<_246daaacb_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_246ce04c2_ImportInfo>)> _1332_selector) {
	return _246d59d99_SelectPackage(_self_.safe_ptr<_246d5956e_SymbolTable>(), _1332_selector);
}
inline jule::Ptr<_246d16372_Var> _246da9448_FindVar_4(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _246d5a251_FindVar(_self_.safe_ptr<_246d5956e_SymbolTable>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_246d8e2a7_TypeAlias> _246da9800_FindTypeAlias_4(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _246d5a608_FindTypeAlias(_self_.safe_ptr<_246d5956e_SymbolTable>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_246117c3a_Struct> _246da9ba7_FindStruct_4(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _246d5a9b0_FindStruct(_self_.safe_ptr<_246d5956e_SymbolTable>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_246cab768_Fn> _246daa05e_FindFn_4(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _246d5ad67_FindFn(_self_.safe_ptr<_246d5956e_SymbolTable>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_246cb3e9b_Trait> _246daa36c_FindTrait_4(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _3328_ident) {
	return _246d5b175_FindTrait(_self_.safe_ptr<_246d5956e_SymbolTable>(), _3328_ident);
}
inline jule::Ptr<_246cb60e1_Enum> _246daa67a_FindEnum_4(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _3727_ident) {
	return _246d5b483_FindEnum(_self_.safe_ptr<_246d5956e_SymbolTable>(), _3727_ident);
}
inline jule::Ptr<_246cb76db_TypeEnum> _246daa988_FindTypeEnum_4(jule::Trait<_246daaacb_Lookup> _self_, jule::Str _4131_ident) {
	return _246d5b791_FindTypeEnum(_self_.safe_ptr<_246d5956e_SymbolTable>(), _4131_ident);
}
inline jule::Str _2476645d7_Name_0(jule::Trait<_24766550b_CommonFlag> _self_) {
	return _213c9aee9_Name(_self_.safe_ptr<_213ee4583_Flag>());
}
inline jule::I32 _247665165_Short_0(jule::Trait<_24766550b_CommonFlag> _self_) {
	return _213ee4ae4_Short(_self_.safe_ptr<_213ee4583_Flag>());
}
inline jule::Str _247665297_What_0(jule::Trait<_24766550b_CommonFlag> _self_) {
	return _213c9b12b_What(_self_.safe_ptr<_213ee4583_Flag>());
}
inline void _2476653c9_Reset_0(jule::Trait<_24766550b_CommonFlag> _self_) {
	_213ee49b2_Reset(_self_.safe_ptr<_213ee4583_Flag>());
}
inline jule::Str _2476645d7_Name_1(jule::Trait<_24766550b_CommonFlag> _self_) {
	return _213ee7de4_Name(_self_.safe_ptr<_213ee83cd_Flag>());
}
inline jule::I32 _247665165_Short_1(jule::Trait<_24766550b_CommonFlag> _self_) {
	return _213ee892d_Short(_self_.safe_ptr<_213ee83cd_Flag>());
}
inline jule::Str _247665297_What_1(jule::Trait<_24766550b_CommonFlag> _self_) {
	return _213ee86b9_What(_self_.safe_ptr<_213ee83cd_Flag>());
}
inline void _2476653c9_Reset_1(jule::Trait<_24766550b_CommonFlag> _self_) {
	_213ee87eb_Reset(_self_.safe_ptr<_213ee83cd_Flag>());
}
inline jule::Str _2476645d7_Name_2(jule::Trait<_24766550b_CommonFlag> _self_) {
	return _213eeba30_Name(_self_.safe_ptr<_213eec019_Flag>());
}
inline jule::I32 _247665165_Short_2(jule::Trait<_24766550b_CommonFlag> _self_) {
	return _213eec569_Short(_self_.safe_ptr<_213eec019_Flag>());
}
inline jule::Str _247665297_What_2(jule::Trait<_24766550b_CommonFlag> _self_) {
	return _213eec305_What(_self_.safe_ptr<_213eec019_Flag>());
}
inline void _2476653c9_Reset_2(jule::Trait<_24766550b_CommonFlag> _self_) {
	_213eec437_Reset(_self_.safe_ptr<_213eec019_Flag>());
}
inline jule::Str _2476645d7_Name_3(jule::Trait<_24766550b_CommonFlag> _self_) {
	return _2140006b0_Name(_self_.safe_ptr<_214000b99_Flag>());
}
inline jule::I32 _247665165_Short_3(jule::Trait<_24766550b_CommonFlag> _self_) {
	return _2140011e9_Short(_self_.safe_ptr<_214000b99_Flag>());
}
inline jule::Str _247665297_What_3(jule::Trait<_24766550b_CommonFlag> _self_) {
	return _214000e85_What(_self_.safe_ptr<_214000b99_Flag>());
}
inline void _2476653c9_Reset_3(jule::Trait<_24766550b_CommonFlag> _self_) {
	_2140010b7_Reset(_self_.safe_ptr<_214000b99_Flag>());
}
inline jule::Str _2476645d7_Name_4(jule::Trait<_24766550b_CommonFlag> _self_) {
	return _2140042eb_Name(_self_.safe_ptr<_2140047d5_Flag>());
}
inline jule::I32 _247665165_Short_4(jule::Trait<_24766550b_CommonFlag> _self_) {
	return _214004d35_Short(_self_.safe_ptr<_2140047d5_Flag>());
}
inline jule::Str _247665297_What_4(jule::Trait<_24766550b_CommonFlag> _self_) {
	return _214004ac1_What(_self_.safe_ptr<_2140047d5_Flag>());
}
inline void _2476653c9_Reset_4(jule::Trait<_24766550b_CommonFlag> _self_) {
	_214004c03_Reset(_self_.safe_ptr<_2140047d5_Flag>());
}


static _246cdc854_ImporterMptrData _246cdc854_Importer_mptr_data[] = {
	{
		._246cdb776_SetModPath=_246cdb776_SetModPath_0,
		._246cdb9b8_GetModPath=_246cdb9b8_GetModPath_0,
		._246cdbcc6_ModById=_246cdbcc6_ModById_0,
		._246cdc0d4_GetImport=_246cdc0d4_GetImport_0,
		._246cdc48b_ImportPackage=_246cdc48b_ImportPackage_0,
		._246cdc711_Imported=_246cdc711_Imported_0,
	},
};
static _246d8ea6b_KindMptrData _246d8ea6b_Kind_mptr_data[] = {
	{
		._246d8e61a_Str=_246d8e61a_Str_0,
		._246d8e928_Equals=_246d8e928_Equals_0,
	},
	{
		._246d8e61a_Str=_246d8e61a_Str_1,
		._246d8e928_Equals=_246d8e928_Equals_1,
	},
	{
		._246d8e61a_Str=_246d8e61a_Str_2,
		._246d8e928_Equals=_246d8e928_Equals_2,
	},
	{
		._246d8e61a_Str=_246d8e61a_Str_3,
		._246d8e928_Equals=_246d8e928_Equals_3,
	},
	{
		._246d8e61a_Str=_246d8e61a_Str_4,
		._246d8e928_Equals=_246d8e928_Equals_4,
	},
	{
		._246d8e61a_Str=_246d8e61a_Str_5,
		._246d8e928_Equals=_246d8e928_Equals_5,
	},
	{
		._246d8e61a_Str=_246d8e61a_Str_6,
		._246d8e928_Equals=_246d8e928_Equals_6,
	},
	{
		._246d8e61a_Str=_246d8e61a_Str_7,
		._246d8e928_Equals=_246d8e928_Equals_7,
	},
	{
		._246d8e61a_Str=_246d8e61a_Str_8,
		._246d8e928_Equals=_246d8e928_Equals_8,
	},
	{
		._246d8e61a_Str=_246d8e61a_Str_9,
		._246d8e928_Equals=_246d8e928_Equals_9,
	},
	{
		._246d8e61a_Str=_246d8e61a_Str_10,
		._246d8e928_Equals=_246d8e928_Equals_10,
	},
	{
		._246d8e61a_Str=_246d8e61a_Str_11,
		._246d8e928_Equals=_246d8e928_Equals_11,
	},
	{
		._246d8e61a_Str=_246d8e61a_Str_12,
		._246d8e928_Equals=_246d8e928_Equals_12,
	},
	{
		._246d8e61a_Str=_246d8e61a_Str_13,
		._246d8e928_Equals=_246d8e928_Equals_13,
	},
};
static _246daaacb_LookupMptrData _246daaacb_Lookup_mptr_data[] = {
	{
		._246da8c83_FindPackage=_246da8c83_FindPackage_0,
		._246da9091_SelectPackage=_246da9091_SelectPackage_0,
		._246da9448_FindVar=_246da9448_FindVar_0,
		._246da9800_FindTypeAlias=_246da9800_FindTypeAlias_0,
		._246da9ba7_FindStruct=_246da9ba7_FindStruct_0,
		._246daa05e_FindFn=_246daa05e_FindFn_0,
		._246daa36c_FindTrait=_246daa36c_FindTrait_0,
		._246daa67a_FindEnum=_246daa67a_FindEnum_0,
		._246daa988_FindTypeEnum=_246daa988_FindTypeEnum_0,
	},
	{
		._246da8c83_FindPackage=_246da8c83_FindPackage_1,
		._246da9091_SelectPackage=_246da9091_SelectPackage_1,
		._246da9448_FindVar=_246da9448_FindVar_1,
		._246da9800_FindTypeAlias=_246da9800_FindTypeAlias_1,
		._246da9ba7_FindStruct=_246da9ba7_FindStruct_1,
		._246daa05e_FindFn=_246daa05e_FindFn_1,
		._246daa36c_FindTrait=_246daa36c_FindTrait_1,
		._246daa67a_FindEnum=_246daa67a_FindEnum_1,
		._246daa988_FindTypeEnum=_246daa988_FindTypeEnum_1,
	},
	{
		._246da8c83_FindPackage=_246da8c83_FindPackage_2,
		._246da9091_SelectPackage=_246da9091_SelectPackage_2,
		._246da9448_FindVar=_246da9448_FindVar_2,
		._246da9800_FindTypeAlias=_246da9800_FindTypeAlias_2,
		._246da9ba7_FindStruct=_246da9ba7_FindStruct_2,
		._246daa05e_FindFn=_246daa05e_FindFn_2,
		._246daa36c_FindTrait=_246daa36c_FindTrait_2,
		._246daa67a_FindEnum=_246daa67a_FindEnum_2,
		._246daa988_FindTypeEnum=_246daa988_FindTypeEnum_2,
	},
	{
		._246da8c83_FindPackage=_246da8c83_FindPackage_3,
		._246da9091_SelectPackage=_246da9091_SelectPackage_3,
		._246da9448_FindVar=_246da9448_FindVar_3,
		._246da9800_FindTypeAlias=_246da9800_FindTypeAlias_3,
		._246da9ba7_FindStruct=_246da9ba7_FindStruct_3,
		._246daa05e_FindFn=_246daa05e_FindFn_3,
		._246daa36c_FindTrait=_246daa36c_FindTrait_3,
		._246daa67a_FindEnum=_246daa67a_FindEnum_3,
		._246daa988_FindTypeEnum=_246daa988_FindTypeEnum_3,
	},
	{
		._246da8c83_FindPackage=_246da8c83_FindPackage_4,
		._246da9091_SelectPackage=_246da9091_SelectPackage_4,
		._246da9448_FindVar=_246da9448_FindVar_4,
		._246da9800_FindTypeAlias=_246da9800_FindTypeAlias_4,
		._246da9ba7_FindStruct=_246da9ba7_FindStruct_4,
		._246daa05e_FindFn=_246daa05e_FindFn_4,
		._246daa36c_FindTrait=_246daa36c_FindTrait_4,
		._246daa67a_FindEnum=_246daa67a_FindEnum_4,
		._246daa988_FindTypeEnum=_246daa988_FindTypeEnum_4,
	},
};
static _24766550b_CommonFlagMptrData _24766550b_CommonFlag_mptr_data[] = {
	{
		._2476645d7_Name=_2476645d7_Name_0,
		._247665165_Short=_247665165_Short_0,
		._247665297_What=_247665297_What_0,
		._2476653c9_Reset=_2476653c9_Reset_0,
	},
	{
		._2476645d7_Name=_2476645d7_Name_1,
		._247665165_Short=_247665165_Short_1,
		._247665297_What=_247665297_What_1,
		._2476653c9_Reset=_2476653c9_Reset_1,
	},
	{
		._2476645d7_Name=_2476645d7_Name_2,
		._247665165_Short=_247665165_Short_2,
		._247665297_What=_247665297_What_2,
		._2476653c9_Reset=_2476653c9_Reset_2,
	},
	{
		._2476645d7_Name=_2476645d7_Name_3,
		._247665165_Short=_247665165_Short_3,
		._247665297_What=_247665297_What_3,
		._2476653c9_Reset=_2476653c9_Reset_3,
	},
	{
		._2476645d7_Name=_2476645d7_Name_4,
		._247665165_Short=_247665165_Short_4,
		._247665297_What=_247665297_What_4,
		._2476653c9_Reset=_2476653c9_Reset_4,
	},
};


jule::Str _2472268c5_OutDir = jule::Str("dist", 4);
jule::Str _2472295dc_OutName = jule::Str("ir.cpp", 6);
jule::Str _247239652_Out = jule::Str();
jule::Str _24267d419_Compiler = jule::Str();
jule::Str _24267d67d_CompilerPath = jule::Str();
jule::Str _24267d8e2_CppStd = jule::Str("cpp17", 5);
jule::Bool _24267db56_Shadowing = false;
jule::Bool _24267ddba_Transpilation = false;
jule::Bool _24267e162_Test = false;
jule::Bool _24267e45e_RC = true;
jule::Bool _24267e87c_Safety = true;
jule::Bool _24267eb8a_Production = false;
jule::Ptr<_2444d0588_RangeTable> _24445b789__L = jule::new_ptr<_2444d0588_RangeTable>(_2444d0588_RangeTable{._field_R16=jule::Slice<_2444ceb92_Range16>::make({_2444ceb92_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_2444ceb92_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_2444ceb92_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_2444ceb92_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_2444ceb92_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_2444ceb92_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_2444ceb92_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_2444ceb92_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_2444ceb92_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_2444ceb92_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_2444ceb92_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_2444ceb92_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_2444ceb92_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_2444ceb92_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_2444ceb92_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_2444ceb92_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_2444ceb92_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_2444ceb92_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_2444ceb92_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_2444ceb92_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_2444ceb92_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_2444ceb92_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_2444ceb92_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_2444ceb92_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_2444ceb92_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_2444ceb92_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_2444ceb92_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_2444ceb92_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_2444ceb92_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_2444ceb92_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_2444ceb92_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_2444ceb92_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_2444ceb92_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_2444ceb92_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_2444ceb92_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_2444ceb92_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_2444ceb92_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_2444ceb92_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_2444ceb92_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_2444ceb92_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_2444ceb92_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_2444ceb92_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_2444ceb92_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_2444ceb92_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_2444ceb92_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_2444ceb92_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_2444ceb92_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_2444ceb92_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_2444ceb92_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_2444ceb92_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_2444ceb92_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_2444ceb92_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_2444ceb92_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_2444ceb92_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_2444ceb92_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_2444ceb92_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_2444ceb92_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_2444ceb92_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_2444ceb92_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_2444ceb92_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_2444d0115_Range32>::make({_2444d0115_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_2444d0115_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_2444d0115_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_2444d0115_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_2444d0115_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_2444d0115_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_2444d0115_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_2444d0115_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_2444d0115_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_2444d0115_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_2444d0115_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_2444d0115_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_2444d0115_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_2444d0115_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_2444d0115_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_2444d0115_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_2444d0115_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_2444d0115_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_2444d0115_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_2444d0115_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_2444d0115_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_2444d0115_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_2444d0115_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_2444d0115_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_2444d0115_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_2444d0115_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_2444d0115_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_2444d0115_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_2444d0115_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_2444d0115_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_2444d0115_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_2444d0115_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_2444d0115_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_2444d0115_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_2444d0115_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_2444d0115_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_2444d0115_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_2444d0115_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_2444d0115_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_2444d0115_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_2444d0115_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_2444d0115_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_2444d0115_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_2444d0588_RangeTable> _24445c8de__LU = jule::new_ptr<_2444d0588_RangeTable>(_2444d0588_RangeTable{._field_R16=jule::Slice<_2444ceb92_Range16>::make({_2444ceb92_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_2444ceb92_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_2444ceb92_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_2444ceb92_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_2444ceb92_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_2444ceb92_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_2444ceb92_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_2444ceb92_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_2444ceb92_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_2444ceb92_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_2444ceb92_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_2444ceb92_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_2444ceb92_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_2444ceb92_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_2444ceb92_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_2444ceb92_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_2444ceb92_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_2444d0115_Range32>::make({_2444d0115_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_2444d0115_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_2444d0115_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_2444d0115_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_2444d0115_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_2444d0115_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_2444d0115_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::Str,4> _242688611_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _24463283e_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _244633d6d_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _244679a95_PathStdlib = jule::Str();
jule::Str _24467b954_PathExec = jule::Str();
jule::Str _24467e1c6_PathWd = jule::Str();
jule::Str _244689951_PathApi = jule::Str();
jule::Array<jule::I32,5> _2448bb787_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _2448bb9eb_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _2448bbd3c_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _244968207_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _244968548_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_244976127_kindPair,47> _2449765ab_keywords = jule::Array<_244976127_kindPair,47>({_244976127_kindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_244976127_kindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_244976127_kindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_244976127_kindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_244976127_kindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_244976127_kindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_244976127_kindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_244976127_kindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_244976127_kindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_244976127_kindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_244976127_kindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_244976127_kindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_244976127_kindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_244976127_kindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_244976127_kindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_244976127_kindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_244976127_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_244976127_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_244976127_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_244976127_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_244976127_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_244976127_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_244976127_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_244976127_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_244976127_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_244976127_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_244976127_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_244976127_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_244976127_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_244976127_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(21LLU)},_244976127_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(23LLU)},_244976127_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(24LLU)},_244976127_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(25LLU)},_244976127_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(26LLU)},_244976127_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(27LLU)},_244976127_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(28LLU)},_244976127_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(29LLU)},_244976127_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(30LLU)},_244976127_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(31LLU)},_244976127_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(32LLU)},_244976127_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(33LLU)},_244976127_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(34LLU)},_244976127_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(35LLU)},_244976127_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(36LLU)},_244976127_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(37LLU)},_244976127_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(39LLU)},_244976127_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U64>(40LLU)}});
jule::Array<_244976127_kindPair,39> _244976941_basicOps = jule::Array<_244976127_kindPair,39>({_244976127_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(22LLU)},_244976127_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_244976127_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_244976127_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_244976127_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_244976127_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_244976127_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(38LLU)}});
jule::Array<jule::U8,32> _246c5ebd3__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _246c60332__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_246874a3a_floatInfo _2466c2239_f32info = _246874a3a_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_246874a3a_floatInfo _2466c76c3_f64info = _246874a3a_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _2467625c6_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _2467a93ed_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _2467b587c_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _2467cc5ec_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _246875024_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_246c9ed77_leftCheat> _246876a5e_leftCheats = jule::Slice<_246c9ed77_leftCheat>::make({_246c9ed77_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_246c9ed77_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_246c9ed77_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_246c9ed77_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_246c9ed77_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_246c9ed77_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_246c9ed77_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_246c9ed77_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_246c9ed77_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_246c9ed77_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_246c9ed77_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_246c9ed77_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_246c9ed77_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_246c9ed77_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_246c9ed77_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_246c9ed77_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_246c9ed77_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_246c9ed77_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_246c9ed77_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_246c9ed77_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_246c9ed77_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_246c9ed77_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_246c9ed77_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_246c9ed77_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_246c9ed77_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_246c9ed77_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_246c9ed77_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_246c9ed77_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_246c9ed77_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_246c9ed77_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_246c9ed77_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_246c9ed77_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_246c9ed77_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_246c9ed77_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_246c9ed77_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_246c9ed77_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_246c9ed77_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_246c9ed77_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_246c9ed77_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_246c9ed77_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_246c9ed77_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_246c9ed77_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_246c9ed77_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_246c9ed77_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_246c9ed77_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_246c9ed77_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_246c9ed77_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_246c9ed77_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_246c9ed77_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_246c9ed77_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_246c9ed77_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_246c9ed77_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_246c9ed77_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_246c9ed77_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_246c9ed77_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_246c9ed77_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_246c9ed77_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_246c9ed77_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_246c9ed77_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_246c9ed77_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_246c9ed77_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _246263061_BitSize = 0LL;
jule::Str _2462b018a_SysInt = jule::Str();
jule::Str _2462b06b8_SysUint = jule::Str();
jule::Slice<jule::Str> _246cb94ac_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _2449a74ee_Copy = false;
jule::Bool _2449aba31_Deadcode = false;
jule::Bool _2449957b7_Append = false;
jule::Bool _2449d10d8_Math = false;
jule::Bool _2449d9311_Access = false;
jule::Bool _2449dc2d1_Inline = false;
jule::Bool _2449dc6ee_Ptr = false;
jule::Bool _2449dd0e5_Cond = false;
jule::Bool _2476e4c1c_exprEnabled = false;
jule::Bool _2476e5d72_scopeEnabled = false;
jule::Array<jule::U64,12> _211339090_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Ptr<_2444d0588_RangeTable> _2444644a6_Letter = _24445b789__L;
jule::Ptr<_2444d0588_RangeTable> _24446b546_Upper = _24445c8de__LU;
jule::Array<_244592c66_acceptRange,16> _2445930c9_acceptRanges = jule::Array<_244592c66_acceptRange,16>({_244592c66_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_244592c66_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_244592c66_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_244592c66_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_244592c66_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _244613d92_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _24468a237_Os = jule::Str("darwin", 6);
jule::Str _244679710_Arch = jule::Str("amd64", 5);
jule::Array<jule::U8,256> _2444c887d__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _2445926e4_first = jule::Array<jule::U8,256>({});





std::ostream &operator<<(std::ostream &_Stream, _2444ceb92_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2444d0115_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2444d0588_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _244592c66_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _243603ca6_index(_2435ec530_lazyBuff* _self_, jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	};
	return (*_self_)._field_path[_5424_i];
}



inline void _2436044b0_append(_2435ec530_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len(), (*_self_)._field_path.len(), 0);
		jule::copy(((*_self_)._field_buff), (static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w))));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _243607738_string(_2435ec530_lazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_volAndPath.slice(0LL,((*_self_)._field_volLen + (*_self_)._field_w));
	};
	return ((*_self_)._field_volAndPath.slice(0LL,(*_self_)._field_volLen) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, _2435ec530_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2427516da_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_2427516da_DirEntry>>> static__24357b0a2_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_2427516da_DirEntry>> _1534_dirents = jule::Slice<jule::Ptr<_2427516da_DirEntry>>(nullptr);
	DIR* _1617_dir = _2434e8591_Opendir((&(_1520_path[0LL])));;
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_2427516da_DirEntry>>>(_242735988_getLastFsError());
	};
	for (;;) {
		{
			struct dirent* _2117_dirent = _2434e8838_Readdir(_1617_dir);;
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_211c5c243;
			};
			jule::Str _2517_name = _2434de059_BytePtrToStr(((jule::U8*)(_2117_dirent->d_name)));;
			jule::Ptr<_243528703_Status> _2621_stat = ({
				auto except = static__2427535dd_Of(_243624832_Join(jule::Slice<jule::Str>::make({_1520_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_2427516da_DirEntry>>>(except.error);
				} jule::Ptr<_243528703_Status>(nullptr);});
			});;
			_1534_dirents = jule::alloc_for_append(_1534_dirents,1);_1534_dirents.__push(jule::new_ptr<_2427516da_DirEntry>(_2427516da_DirEntry{._field_Name=_2517_name, ._field_Stat=_2621_stat}));;
		}
	_iter_next_211c5c243:;
	}
	_iter_end_211c5c243:;;
	_2434e8ad0_Closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_2427516da_DirEntry>>>(jule::Any(), _1534_dirents);
}



inline jule::VoidExceptional static__243588851_Create(jule::Str _3922_path) {
	if ((_2434e9460_Mkdir((&(_3922_path[0LL])),448LL) != 0LL)) {
		return jule::VoidExceptional(_242735988_getLastFsError());
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional static__2435649e7_Remove(jule::Str _5122_path) {
	if ((_2434e9707_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_242735988_getLastFsError());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _242829010_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_24282ac48_File>> static__242737072_Open(jule::Str _1820_path, jule::I64 _1831_flag, jule::I64 _1844_mode) {
	jule::I64 _1913_handle = _2434e7c77_Open((&(_1820_path[0LL])),static_cast<jule::I64>(_1831_flag),_1844_mode);;
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_24282ac48_File>>(_242735988_getLastFsError());
	};
	return jule::Exceptional<jule::Ptr<_24282ac48_File>>(jule::Any(),static__2427564ae_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_1913_handle))));
}



inline jule::VoidExceptional static__242737c32_Remove(jule::Str _3022_path) {
	if ((_2434e999e_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_242735988_getLastFsError());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _2427388e2_Write(_24282ac48_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I64 _4441_n = 0;
	if ((_4424_buff.len() == 0LL)) {
		_4441_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_4441_n);
	};
	_4441_n=static_cast<jule::I64>(_24351833b_Write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4424_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4424_buff.len()))));
	if ((_4441_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_242735988_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_4441_n);
}



inline jule::Exceptional<jule::I64> _24273a00e_Read(_24282ac48_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I64 _6444_n = 0;
	if ((_6427_buff.len() == 0LL)) {
		_6444_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_6444_n);
	};
	_6444_n=static_cast<jule::I64>(_243517acc_Read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_6427_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_6427_buff.len()))));
	if ((_6444_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_242735988_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_6444_n);
}



inline jule::Ptr<_24282ac48_File> static__2427564ae_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_24282ac48_File>(_24282ac48_File{._field_handle=_4519_handle});
}



inline jule::Exceptional<jule::Ptr<_24282ac48_File>> static__2427581a3_Create(jule::Str _5522_path) {
	return jule::Exceptional<jule::Ptr<_24282ac48_File>>(jule::Any(),({
		auto except = static__242737072_Open(_5522_path,static_cast<jule::I64>(1538LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_24282ac48_File>>(except.error);
		} jule::Ptr<_24282ac48_File>(nullptr);});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__242758e62_Read(jule::Str _6720_path) {
	jule::Ptr<_243528703_Status> _6813_s = ({
		auto except = static__2427535dd_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_243528703_Status>(nullptr);});
	});;
	if ((!(_242829a5a_IsReg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I64>(14LL));
	};
	if ((_6813_s.get()._field_Size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));
	};
	jule::Ptr<_24282ac48_File> _7817_f = ({
		auto except = static__242737072_Open(_6720_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_24282ac48_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _24275c30b_Close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_Size), static_cast<jule::I64>(_6813_s.get()._field_Size), 0);;
	jule::I64 _8213_n = ({
		auto except = _24273a00e_Read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__242759c98_Write(jule::Str _9121_path, jule::Slice<jule::U8> _9132_data, jule::I64 _9146_perm) {
	jule::Ptr<_24282ac48_File> _9217_f = ({
		auto except = static__242737072_Open(_9121_path,static_cast<jule::I64>(1537LL),_9146_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_24282ac48_File>(nullptr);});
	});;
	({
		auto except = _2427388e2_Write(_9217_f.ptr(), _9132_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _24275c30b_Close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _24275b827_Seek(_24282ac48_File* _self_, jule::I64 _10523_offset, jule::I64 _10536_origin) {
	jule::I64 _10613_pos = _2435176e2_Seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10523_offset,static_cast<jule::I64>(_10536_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(_242735988_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _24275c30b_Close(_24282ac48_File* _self_) {
	if ((_243517e51_Close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_242735988_getLastFsError());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _24282ac48_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_243528703_Status>> static__2427535dd_Of(jule::Str _1118_path) {
	if (_1118_path.empty()) {
		return jule::Exceptional<jule::Ptr<_243528703_Status>>(static_cast<jule::I64>(4LL));
	};
	struct stat _1517_handle = (struct stat){};;
	jule::I64 _1613_code = _2434e788c_Stat((&(_1118_path[0LL])),(&(_1517_handle)));;
	if ((_1613_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_243528703_Status>>(jule::Any(),jule::new_ptr<_243528703_Status>(_243528703_Status{._field_Mode=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_mode)), ._field_Size=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_size))}));
	};
	return jule::Exceptional<jule::Ptr<_243528703_Status>>(_242735988_getLastFsError());
}



inline jule::Bool _24275d98e_IsDir(_243528703_Status* _self_) {
	return (((*_self_)._field_Mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _242829a5a_IsReg(_243528703_Status* _self_) {
	return (((*_self_)._field_Mode & 32768LLU) == 32768LLU);
}







std::ostream &operator<<(std::ostream &_Stream, _243528703_Status _Src) {
	_Stream << "Status{";
	_Stream << "Mode:" << _Src._field_Mode << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_24468b601_Cmd> static__24468ba30_New(jule::Str _2019_path) {
	return jule::new_ptr<_24468b601_Cmd>(_24468b601_Cmd{._field_path=_2019_path, });
}



inline jule::Exceptional<jule::I64> _24468bc94_Spawn(_24468b601_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(({
		auto except = _24468ebed_spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	})));
}



inline jule::Exceptional<jule::I64> _24468ebed_spawn(_24468b601_Cmd* _self_) {
	if ((*_self_)._field_path.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(3LL));
	};
	jule::I64 _4913_pid = fork();;
	{
		auto &_match_expr{ _4913_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_211c82e17:;
			{
				return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_211c81a4d:;
			{
				jule::I64 _5421_status = 0LL;;
				if (((*_self_)._field_Env == nullptr)) {
					_5421_status=static_cast<jule::I64>(_24468e527_execvp((*_self_)._field_path,(*_self_)._field_Args));
				} else {
					_5421_status=static_cast<jule::I64>(_24468e912_execve((*_self_)._field_path,(*_self_)._field_Args,(*_self_)._field_Env));
				};
				if ((_5421_status == -1LL)) {
					kill(static_cast<jule::I64>(getpid()),SIGTERM);
				};
				_244690528_Exit(255LL);
			}
		}
		_match_end_211c82db2:;
	};
	jule::I64 _6513_status = 0LL;;
	if ((waitpid(_4913_pid,((signed*)((&(_6513_status)))),WUNTRACED) == -1LL)) {
		return jule::Exceptional<jule::I64>(_24468ad70_getLastProcessError());
	};
	if (WIFSIGNALED(_6513_status)) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(WEXITSTATUS(_6513_status)));
}







std::ostream &operator<<(std::ostream &_Stream, _24468b601_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _244640d69_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _24496e0dc_Prec(_24496dc35_Token* _self_) {
	if (((*_self_)._field_Id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;
	};
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_211d3eb83:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_211d3ebe9:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_211d3ec60:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_211d3ecc6:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_211d4004b:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_211d3db71:;
			{
				return 0LLU;
			}
		}
		_match_end_211d3eb2d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _24496dc35_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2449744cc_IsOk(_2449740c0_File* _self_) {
	({
		auto except = static__2427535dd_Of((*_self_)._field_Path);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::Ptr<_243528703_Status>(nullptr);});
	});
	return true;
}



inline void _244974752_Fill(_2449740c0_File* _self_, jule::Slice<jule::U8> _2327_data) {
	(*_self_)._field_Data=_2327_data;
}



inline jule::Str _2449749b6_Dir(_2449740c0_File* _self_) {
	return _243611a3e_Dir((*_self_)._field_Path);
}



inline jule::Str _244974c2a_Name(_2449740c0_File* _self_) {
	return _24360ba28_Base((*_self_)._field_Path);
}



inline jule::Uintptr _244974e8e_Addr(_2449740c0_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*_self_))))));
}



inline jule::Str _24497529c_GetRow(_2449740c0_File* _self_, jule::I64 _4421_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_lineStart = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_Data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_Data[_4717_i] != '\n')) {
				goto _iter_next_211d45639;
			};
			(_4517_n)++;
			if ((_4517_n == _4421_row)) {
				return static_cast<jule::Str>((*_self_)._field_Data.slice(_4617_lineStart,_4717_i));
			};
			_4617_lineStart=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_211d45639:;
	}
	_iter_end_211d45639:;;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _2449740c0_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _244976127_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _24497c2b5_pushErr(_24497bc21_lex* _self_, jule::Str _45826_fmt, jule::Slice<jule::Any> _45839_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_244976e2a_makeErr((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45826_fmt,jule::Any(_45839_args)));;
}



inline void _24497c5d4_pushErrTok(_24497bc21_lex* _self_, jule::Ptr<_24496dc35_Token>& _46330_token, jule::Str _46345_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_244976e2a_makeErr(_46330_token.get()._field_Row,_46330_token.get()._field_Column,(*_self_)._field_file,_46345_fmt,jule::Slice<jule::Any>()));;
}



inline void _24497c7b0_lex(_24497bc21_lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_24497e7b2_newLine(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_24496dc35_Token> _47321_token = _244980b37_token(&(*_self_));;
			if ((_47321_token.get()._field_Id != static_cast<jule::U64>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_211d7e178:;
	}
	_iter_end_211d7e178:;;
}



inline jule::Str _24497cabd_id(_24497bc21_lex* _self_, jule::Slice<jule::U8>& _48222_ln) {
	if ((_48222_ln.len() == 0LL)) {
		return jule::Str();
	};
	jule::I32 _48614_r;;
	jule::I64 _48621_i;;
	std::tie(_48614_r,_48621_i) = _244593849_DecodeRune(_48222_ln);
	if (((_48614_r != '_') && (!(_244972211_IsLetter(_48614_r))))) {
		return jule::Str();
	};
	while ((_48621_i < _48222_ln.len())) {
		{
			jule::I32 _49218_pr;;
			jule::I64 _49222_n;;
			std::tie(_49218_pr,_49222_n) = _244593849_DecodeRune(_48222_ln.slice(_48621_i));
			if ((((_49218_pr != '_') && (!(_244972750_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_244972211_IsLetter(_49218_pr))))) {
				(*_self_)._field_pos+=_48621_i;
				return static_cast<jule::Str>(_48222_ln.slice(0LL,_48621_i));
			};
			_48621_i+=_49222_n;
		}
	_iter_next_211d830d3:;
	}
	_iter_end_211d830d3:;;
	(*_self_)._field_pos+=_48222_ln.len();
	return static_cast<jule::Str>(_48222_ln);
}



inline jule::Slice<jule::U8> _24497cd32_resume(_24497bc21_lex* _self_) {
	jule::I64 _50717_i = (*_self_)._field_pos;;
	for (; (_50717_i < (*_self_)._field_file.get()._field_Data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_Data[_50717_i]);;
			if (_244971cb0_IsSpace(_50917_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_211d879de:;
						{
							_24497e7b2_newLine(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_211d878ce:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_211d875b0:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_211d8745b:;
				};
				goto _iter_next_211d85635;
			};
			jule::I64 _52421_j = _50717_i;;
			for (; (_52421_j < (*_self_)._field_file.get()._field_Data.len()); (_52421_j)++) {
				{
					if (((*_self_)._field_file.get()._field_Data[_52421_j] == '\n')) {
						goto _iter_end_211d8636c;
					};
				}
			_iter_next_211d8636c:;
			}
			_iter_end_211d8636c:;;
			return (*_self_)._field_file.get()._field_Data.slice(_50717_i,_52421_j);
		}
	_iter_next_211d85635:;
	}
	_iter_end_211d85635:;;
	return nullptr;
}



inline void _24497d0a7_lexLineComment(_24497bc21_lex* _self_, jule::Ptr<_24496dc35_Token>& _53538_token) {
	jule::I64 _53613_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _53917_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if (((_53917_r == '\n') || (_53917_r == '\r'))) {
				goto _iter_end_211d8a87c;
			};
		}
	_iter_next_211d8a87c:;
	}
	_iter_end_211d8a87c:;;
	if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		_53538_token.get()._field_Id=static_cast<jule::U64>(18LLU);
		_53538_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_53613_start,(*_self_)._field_pos));
	};
}



inline void _24497d32c_lexRangeComment(_24497bc21_lex* _self_, jule::Ptr<_24496dc35_Token>& _55039_token) {
	jule::I64 _55113_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55417_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_55417_r == '\r')) {
				goto _iter_next_211d8e078;
			};
			if ((_55417_r == '\n')) {
				_24497e7b2_newLine(&(*_self_));
				goto _iter_next_211d8e078;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_Data.len()) && (_55417_r == '*')) && ((*_self_)._field_file.get()._field_Data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					_55039_token.get()._field_Id=static_cast<jule::U64>(18LLU);
					_55039_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_55113_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_211d8e078:;
	}
	_iter_end_211d8e078:;;
	_24497c2b5_pushErr(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _24497d63a_num(_24497bc21_lex* _self_, jule::Slice<jule::U8>& _57823_txt) {
	jule::Str _57838_lit = jule::Str();
	if ((_57823_txt[0LL] == '_')) {
		_57838_lit = jule::Str();
		return _57838_lit;
	};
	_57838_lit=_24497a747_hexNum(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	};
	_57838_lit=_24497a4a0_octalNum(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	};
	_57838_lit=_244978de9_binaryNum(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	};
	_57838_lit=_244978b52_commonNum(_57823_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=_57838_lit.len();
	return _57838_lit;
}



inline jule::Str _24497d948_escapeSeq(_24497bc21_lex* _self_, jule::Slice<jule::U8>& _60029_txt) {
	jule::Str _60117_seq = jule::Str();;
	if ((_60029_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _60029_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_211d9e709:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60029_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_211d9e770:;
			{
				_60117_seq=_24497ad30_bigUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_211d9e2ca:;
			{
				_60117_seq=_24497b0e9_littleUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_211d9e341:;
			{
				_60117_seq=_24497b2a3_hexByteEscape(_60029_txt);
			}
		}
		else {
			_case_begin_211d9d9c2:;
			{
				_60117_seq=_24497b539_byteEscape(_60029_txt);
			}
		}
		_match_end_211d9e176:;
	};
	_julec_label_end:;
	if (_60117_seq.empty()) {
		((*_self_)._field_pos)++;
		_24497c2b5_pushErr(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	};
	(*_self_)._field_pos+=_60117_seq.len();
	return _60117_seq;
}



inline jule::Str _24497dd00_getRune(_24497bc21_lex* _self_, jule::Slice<jule::U8>& _63027_txt, jule::Bool _63040_raw) {
	if (((!(_63040_raw)) && (_63027_txt[0LL] == '\\'))) {
		return _24497d948_escapeSeq(&(*_self_), _63027_txt);
	};
	jule::I32 _63414_r;;
	jule::I64 _63417_n;;
	std::tie(_63414_r,_63417_n) = _244593849_DecodeRune(_63027_txt);
	(*_self_)._field_pos+=_63417_n;
	return static_cast<jule::Str>(_63414_r);
}



inline jule::Str _24497e10d_lexRune(_24497bc21_lex* _self_, jule::Slice<jule::U8>& _63927_txt) {
	jule::Str _64017_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I64 _64217_n = 0LL;;
	jule::I64 _64317_i = 1LL;;
	for (; (_64317_i < _63927_txt.len()); (_64317_i)++) {
		{
			if ((_63927_txt[_64317_i] == '\r')) {
				goto _iter_next_211da6b62;
			};
			if ((_63927_txt[_64317_i] == '\n')) {
				_24497c2b5_pushErr(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_24497e7b2_newLine(&(*_self_));
				return jule::Str();
			};
			jule::Slice<jule::U8> _65517_part = _63927_txt.slice(_64317_i);;
			jule::Str _65617_r = _24497dd00_getRune(&(*_self_), _65517_part,false);;
			_64017_run+=_65617_r;
			(*_self_)._field_column+=_24459553d_RuneCountStr(_65617_r);
			if ((_65617_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_211da6b62;
			};
			if ((_65617_r.len() > 1LL)) {
				_64317_i+=(_65617_r.len() - 1LL);
			};
			(_64217_n)++;
		}
	_iter_next_211da6b62:;
	}
	_iter_end_211da6b62:;;
	if ((_64217_n == 0LL)) {
		_24497c2b5_pushErr(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64217_n > 1LL)) {
		_24497c2b5_pushErr(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _64017_run;
}



inline jule::Str _24497e372_lexStr(_24497bc21_lex* _self_) {
	jule::Str _67917_s = jule::Str();;
	jule::U8 _68013_mark = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68213_raw = (_68013_mark == '`');;
	_67917_s+=static_cast<jule::Str>(_68013_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::U8 _68717_ch = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_68717_ch == '\r')) {
				goto _iter_next_211daba46;
			};
			if ((_68717_ch == '\n')) {
				_24497e7b2_newLine(&(*_self_));
				if ((!(_68213_raw))) {
					_24497c2b5_pushErr(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				};
			};
			jule::Slice<jule::U8> _69921_part = (*_self_)._field_file.get()._field_Data.slice((*_self_)._field_pos);;
			jule::Str _70017_r = _24497dd00_getRune(&(*_self_), _69921_part,_68213_raw);;
			_67917_s+=_70017_r;
			(*_self_)._field_column+=_24459553d_RuneCountStr(_70017_r);
			if ((_68717_ch == _68013_mark)) {
				goto _iter_end_211daba46;
			};
		}
	_iter_next_211daba46:;
	}
	_iter_end_211daba46:;;
	return _67917_s;
}



inline jule::Bool _24497e5d6_isFirstTokenOfLine(_24497bc21_lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _24497e7b2_newLine(_24497bc21_lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _24497ecac_isOp(_24497bc21_lex* _self_, jule::Slice<jule::U8>& _72024_txt, jule::Str _72037_kind, jule::U64 _72048_id, jule::Ptr<_24496dc35_Token>& _72066_t) {
	if ((!(_2449772b0_bytesHasPrefix(_72024_txt,_72037_kind)))) {
		return false;
	};
	_72066_t.get()._field_Kind=_72037_kind;
	_72066_t.get()._field_Id=_72048_id;
	(*_self_)._field_pos+=_72037_kind.len();
	return true;
}



inline jule::Bool _244980164_lexBasicOps(_24497bc21_lex* _self_, jule::Slice<jule::U8> _73030_txt, jule::Ptr<_24496dc35_Token>& _73048_tok) {
	{
		auto &expr = _244976941_basicOps;
		auto it = expr.begin();
		_iter_begin_211db4ce6:;
		if (it != expr.end()) {
			_244976127_kindPair &_73116_pair = *it;
			{
				if (_24497ecac_isOp(&(*_self_), _73030_txt,_73116_pair._field_kind,_73116_pair._field_id,_73048_tok)) {
					return true;
				};
			}
			_iter_next_211db4ce6:;
			++it;
			goto _iter_begin_211db4ce6;
		}
		_iter_end_211db4ce6:;
	};
	return false;
}



inline jule::Bool _24498051b_lexId(_24497bc21_lex* _self_, jule::Slice<jule::U8>& _74025_txt, jule::Ptr<_24496dc35_Token>& _74043_t) {
	jule::Str _74113_lex = _24497cabd_id(&(*_self_), _74025_txt);;
	if (_74113_lex.empty()) {
		return false;
	};
	_74043_t.get()._field_Kind=_74113_lex;
	_74043_t.get()._field_Id=static_cast<jule::U64>(2LLU);
	return true;
}



inline jule::Bool _2449808c3_lexNum(_24497bc21_lex* _self_, jule::Slice<jule::U8>& _75026_txt, jule::Ptr<_24496dc35_Token>& _75044_t) {
	jule::Str _75113_lex = _24497d63a_num(&(*_self_), _75026_txt);;
	if (_75113_lex.empty()) {
		return false;
	};
	_75044_t.get()._field_Kind=_75113_lex;
	_75044_t.get()._field_Id=static_cast<jule::U64>(6LLU);
	return true;
}



inline jule::Ptr<_24496dc35_Token> _244980b37_token(_24497bc21_lex* _self_) {
	jule::Ptr<_24496dc35_Token> _76217_t = jule::new_ptr<_24496dc35_Token>(_24496dc35_Token{._field_File=(*_self_)._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _76713_txt = _24497cd32_resume(&(*_self_));;
	if ((_76713_txt == nullptr)) {
		return _76217_t;
	};
	_76217_t.get()._field_Column=(*_self_)._field_column;
	_76217_t.get()._field_Row=(*_self_)._field_row;
	{
		
		if (_2449808c3_lexNum(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_211dbbe30:;
			{
				goto _match_end_211dba04e;
			}
		}
		else if ((_76713_txt[0LL] == '\'')) {
			_case_begin_211dbb65a:;
			{
				_76217_t.get()._field_Kind=_24497e10d_lexRune(&(*_self_), _76713_txt);
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;
			}
		}
		else if (((_76713_txt[0LL] == '\"') || (_76713_txt[0LL] == '`'))) {
			_case_begin_211dbb6c1:;
			{
				_76217_t.get()._field_Kind=_24497e372_lexStr(&(*_self_));
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;
			}
		}
		else if (_2449772b0_bytesHasPrefix(_76713_txt,jule::Str("//", 2))) {
			_case_begin_211dbb737:;
			{
				_24497d0a7_lexLineComment(&(*_self_), _76217_t);
				return _76217_t;
			}
		}
		else if (_2449772b0_bytesHasPrefix(_76713_txt,jule::Str("/*", 2))) {
			_case_begin_211dbc381:;
			{
				_24497d32c_lexRangeComment(&(*_self_), _76217_t);
				return _76217_t;
			}
		}
		else if (_24497ecac_isOp(&(*_self_), _76713_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76217_t) || _24497ecac_isOp(&(*_self_), _76713_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76217_t) || _24497ecac_isOp(&(*_self_), _76713_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76217_t) || _24497ecac_isOp(&(*_self_), _76713_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76217_t) || _24497ecac_isOp(&(*_self_), _76713_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76217_t) || _24497ecac_isOp(&(*_self_), _76713_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76217_t) || _244980164_lexBasicOps(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_211dbc3e7:;
			{
				goto _match_end_211dba04e;
			}
		}
		else if (_24498051b_lexId(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_211dbc45d:;
			{
				{
					auto &expr = _2449765ab_keywords;
					auto it = expr.begin();
					_iter_begin_211dc2d37:;
					if (it != expr.end()) {
						_244976127_kindPair &_80520_pair = *it;
						{
							if ((_80520_pair._field_kind == _76217_t.get()._field_Kind)) {
								_76217_t.get()._field_Id=_80520_pair._field_id;
								goto _iter_end_211dc2d37;
							};
						}
						_iter_next_211dc2d37:;
						++it;
						goto _iter_begin_211dc2d37;
					}
					_iter_end_211dc2d37:;
				};
			}
		}
		else {
			_case_begin_211dbaa22:;
			{
				jule::I32 _81218_r;;
				jule::I64 _81221_sz;;
				std::tie(_81218_r,_81221_sz) = _244593849_DecodeRune(_76713_txt);
				_24497c2b5_pushErr(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>::make({jule::Any(_81218_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81221_sz;
				return _76217_t;
			}
		}
		_match_end_211dba04e:;
	};
	(*_self_)._field_column+=_24459553d_RuneCountStr(_76217_t.get()._field_Kind);
	return _76217_t;
}







std::ostream &operator<<(std::ostream &_Stream, _24497bc21_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2460db7ad_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2460dc45c_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2460dc858_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246125b27_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _246126551_IsPrim(_2461261dd_IdentTypeDecl* _self_) {
	return ((*_self_)._field_Token.get()._field_Id == static_cast<jule::U64>(1LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _2461261dd_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24612683c_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246126be4_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246126ed0_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2461273cb_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2461276b7_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _246127d05_IsUnsafe(_2461279a3_PtrTypeDecl* _self_) {
	return ((*_self_)._field_Elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _2461279a3_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _24612850e_AutoSized(_246128135_ArrTypeDecl* _self_) {
	return ((*_self_)._field_Size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _246128135_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246128883_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246128c3a_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24612a148_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24612a434_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24612a9d9_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24612acc5_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _24612b4ce_IsNil(_24612b17c_LitExpr* _self_) {
	return ((*_self_)._field_Value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _24612b17c_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24612b886_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _24612c15b_IsSelf(_24612bd09_IdentExpr* _self_) {
	return ((*_self_)._field_Ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _24612bd09_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24612c513_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24612c8ba_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24612cc72_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24612d129_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24612d59c_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24612da20_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _24612e48d_Unhandled(_24612e12a_FnCallExpr* _self_) {
	return ((*_self_)._field_Exception == nullptr);
}



inline jule::Bool _24612e702_Ignored(_24612e12a_FnCallExpr* _self_) {
	return (((*_self_)._field_Exception != nullptr) && (*_self_)._field_Exception.get()._field_Deferred);
}







std::ostream &operator<<(std::ostream &_Stream, _24612e12a_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _24612ee0b_IsTargeted(_24612eaa9_FieldExprPair* _self_) {
	return ((*_self_)._field_Field != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _24612eaa9_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246130307_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _246130acc_IsEmpty(_24613077a_BraceLit* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _24613077a_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246131050_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _246131a67_IsEmpty(_246131737_SliceExpr* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _246131737_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2461320a6_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2461326b1_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24613299c_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246132e20_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2461332c7_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24613367e_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24613396a_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246134075_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2461345b4_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2461354a5_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246135ab0_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2461365e9_IsSelf(_246136286_ParamDecl* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));
}



inline jule::Bool _24613685d_IsRef(_246136286_ParamDecl* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _246136286_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _246137908_IsAnon(_2461375a6_FnDecl* _self_) {
	return ((*_self_)._field_Ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _2461375a6_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246138585_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24613893c_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2461393ee_IsInf(_24613909c_Iter* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _24613909c_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _246139bc4_IsWhileNext(_246139872_WhileKind* _self_) {
	return ((*_self_)._field_Next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _246139872_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24613a213_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24613a5ba_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24613a972_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24613ade5_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24613b29c_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24613b720_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24613bde6_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24613c369_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24613ca40_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24613d2d2_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _24613daa7_AutoExpr(_24613d755_EnumItemDecl* _self_) {
	return ((*_self_)._field_Expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _24613d755_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _24613e811_DefaultTyped(_24613e27d_EnumDecl* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _24613e27d_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24613ec84_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24614038e_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24614058c_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246140d40_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24614144a_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _246141db8_IsTraitImpl(_246141a55_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);
}



inline jule::Bool _24614212c_IsStructImpl(_246141a55_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _246141a55_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246874a3a_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2435aa246_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246c9ed77_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _246786a90_set(_246ca01da_decimal* _self_, jule::Str _23322_s) {
	jule::Bool _23332_ok = false;
	jule::I64 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return _23332_ok;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_2124a28bc:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_2124a2933:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_2124a2702:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_2124a4d20:;
					{
						goto _iter_next_2124a4528;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_2124a4d97:;
					{
						if (_25117_sawdot) {
							return _23332_ok;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_2124a4528;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_2124a4e1e:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_2124a4528;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_2124a4528;
					}
				}
				_match_end_2124a4bdd:;
			};
			goto _iter_end_2124a4528;
		}
	_iter_next_2124a4528:;
	}
	_iter_end_2124a4528:;;
	if ((!(_25217_sawdigits))) {
		return _23332_ok;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_2468d6be0_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return _23332_ok;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return _23332_ok;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_2124acdb1;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_2124acdb1:;
		}
		_iter_end_2124acdb1:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return _23332_ok;
	};
	_23332_ok=true;
	return _23332_ok;
}



inline std::tuple<jule::U64,jule::Bool> _2466e7506_floatBits(_246ca01da_decimal* _self_, _246874a3a_floatInfo& _32729_flt) {
	jule::U64 _32747_b = 0;
	jule::Bool _32755_overflow = false;
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _2467a93ed_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_2467a93ed_powtab[(*_self_)._field_dp];
			};
			_246ca0509_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_2124b4cec:;
	}
	_iter_end_2124b4cec:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _2467a93ed_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_2467a93ed_powtab[(-((*_self_)._field_dp))];
			};
			_246ca0509_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_2124b6e0e:;
	}
	_iter_end_2124b6e0e:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32729_flt._field_bias + 1LL))) {
		jule::I64 _38117_n = ((_32729_flt._field_bias + 1LL) - _32817_exp);;
		_246ca0509_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_246ca0509_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>((1LL + _32729_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_246ca09d2_roundedInteger(&(*_self_)));
	if ((_32917_mant == (2LLU << _32729_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32729_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32729_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << _32729_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(_32729_flt._field_bias))));
	_32755_overflow=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32729_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32729_flt._field_bias) & static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) << _32729_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32729_flt._field_mantbits) << _32729_flt._field_expbits);
	};
	_32747_b = _41717_bits;
	return std::make_tuple(_32747_b,_32755_overflow);
}



inline void _246ca03c7_assign(_246ca01da_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_2124c41d5:;
	}
	_iter_end_2124c41d5:;;
	(*_self_)._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_33117_buf[_33417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_2124c512b:;
	}
	_iter_end_2124c512b:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_246ca0c46_trim((*_self_));
}



inline void _246ca0509_shift(_246ca01da_decimal* _self_, jule::I64 _35528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_2124c70b7:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_2124c713e:;
			{
				while ((_35528_k > 60LL)) {
					{
						_246ca10dc_leftShift((*_self_),60LLU);
						_35528_k-=60LL;
					}
				_iter_next_2124c7e20:;
				}
				_iter_end_2124c7e20:;;
				_246ca10dc_leftShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_2124c71b6:;
			{
				while ((_35528_k < -60LL)) {
					{
						_246ca0d78_rightShift((*_self_),60LLU);
						_35528_k+=60LL;
					}
				_iter_next_2124c8e87:;
				}
				_iter_end_2124c8e87:;;
				_246ca0d78_rightShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_35528_k)))));
			}
		}
		_match_end_2124c6e85:;
	};
}



inline void _246ca063b_roundDown(_246ca01da_decimal* _self_, jule::I64 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_37528_nd;
	_246ca0c46_trim((*_self_));
}



inline void _246ca076d_roundUp(_246ca01da_decimal* _self_, jule::I64 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I64 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*_self_)._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*_self_)._field_d[_39017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_2124cbe46:;
	}
	_iter_end_2124cbe46:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _246ca08a0_round(_246ca01da_decimal* _self_, jule::I64 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_246ca121e_shouldRoundUp((*_self_),_41124_nd)) {
		_246ca076d_roundUp(&(*_self_), _41124_nd);
	} else {
		_246ca063b_roundDown(&(*_self_), _41124_nd);
	};
}



inline jule::U64 _246ca09d2_roundedInteger(_246ca01da_decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	};
	jule::I64 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*_self_)._field_dp) && (_42817_i < (*_self_)._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_42817_i] - '0'))));
		}
	_iter_next_2124ceeb0:;
	}
	_iter_end_2124ceeb0:;;
	for (; (_42817_i < (*_self_)._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_2124d1d80:;
	}
	_iter_end_2124d1d80:;;
	if (_246ca121e_shouldRoundUp((*_self_),(*_self_)._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca01da_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2461e4872_Const> static__246204db0_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_2461e4872_Const>(_2461e4872_Const{._field_data=jule::Any(_1622_x)});
}



inline jule::Ptr<_2461e4872_Const> static__24621bde9_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_2461e4872_Const>(_2461e4872_Const{._field_data=jule::Any(_1922_x)});
}



inline jule::Ptr<_2461e4872_Const> static__246236793_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_2461e4872_Const>(_2461e4872_Const{._field_data=jule::Any(_2223_x)});
}



inline jule::Ptr<_2461e4872_Const> static__2462385db_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_2461e4872_Const>(_2461e4872_Const{._field_data=jule::Any(_2522_x)});
}



inline jule::Ptr<_2461e4872_Const> static__2462397c9_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_2461e4872_Const>(_2461e4872_Const{._field_data=jule::Any(_2822_x)});
}



inline jule::Ptr<_2461e4872_Const> static__24623a027_NewNil(void) {
	return jule::new_ptr<_2461e4872_Const>(_2461e4872_Const{._field_data=nullptr});
}



inline jule::I64 _24623bb1c_ReadI64(_2461e4872_Const* _self_) {
	if ((!(_2462570dd_IsI64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _24623cd0a_ReadU64(_2461e4872_Const* _self_) {
	if ((!(_2462069a5_IsU64(&(*_self_))))) {
		return 0LLU;
	};
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _24623d558_ReadBool(_2461e4872_Const* _self_) {
	if ((!(_246208de7_IsBool(&(*_self_))))) {
		return false;
	};
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _246245de0_ReadStr(_2461e4872_Const* _self_) {
	if ((!(_2462456a3_IsStr(&(*_self_))))) {
		return jule::Str();
	};
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _24624696d_ReadF64(_2461e4872_Const* _self_) {
	if ((!(_24625698e_IsF64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _24624782b_AsI64(_2461e4872_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_21256373b:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_2125630a9:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_212563120:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_212563010:;
			{
				return 0LL;
			}
		}
		_match_end_212562eaa:;
	};
}



inline jule::U64 _24623b974_AsU64(_2461e4872_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_212565386:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_212564d14:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_212564d7a:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_2125638d4:;
			{
				return 0LLU;
			}
		}
		_match_end_212564792:;
	};
}



inline jule::F64 _2462487e9_AsF64(_2461e4872_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_212566ed1:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_21256693c:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_2125669a3:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_2125651aa:;
			{
				return 0LL;
			}
		}
		_match_end_212566695:;
	};
}



inline void _2462496a7_SetI64(_2461e4872_Const* _self_, jule::I64 _13825_x) {
	(*_self_)._field_data=jule::Any(_13825_x);
}



inline void _246257462_SetU64(_2461e4872_Const* _self_, jule::U64 _14125_x) {
	(*_self_)._field_data=jule::Any(_14125_x);
}



inline void _246260217_SetBool(_2461e4872_Const* _self_, jule::Bool _14426_x) {
	(*_self_)._field_data=jule::Any(_14426_x);
}



inline void _246260c51_SetStr(_2461e4872_Const* _self_, jule::Str _14725_x) {
	(*_self_)._field_data=jule::Any(_14725_x);
}



inline void _2462617ce_SetF64(_2461e4872_Const* _self_, jule::F64 _15025_x) {
	(*_self_)._field_data=jule::Any(_15025_x);
}



inline void _246249e05_SetNil(_2461e4872_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _2462570dd_IsI64(_2461e4872_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_21256b5ce:;
			{
				return true;
			}
		}
		else {
			_case_begin_21256ae3b:;
			{
				return false;
			}
		}
		_match_end_21256add6:;
	};
}



inline jule::Bool _2462069a5_IsU64(_2461e4872_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_21256c1a1:;
			{
				return true;
			}
		}
		else {
			_case_begin_21256b865:;
			{
				return false;
			}
		}
		_match_end_21256b4e1:;
	};
}



inline jule::Bool _246208de7_IsBool(_2461e4872_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_21256cc73:;
			{
				return true;
			}
		}
		else {
			_case_begin_21256c437:;
			{
				return false;
			}
		}
		_match_end_21256c0d5:;
	};
}



inline jule::Bool _2462456a3_IsStr(_2461e4872_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_21256d845:;
			{
				return true;
			}
		}
		else {
			_case_begin_21256d009:;
			{
				return false;
			}
		}
		_match_end_21256cba7:;
	};
}



inline jule::Bool _24625698e_IsF64(_2461e4872_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_21256e417:;
			{
				return true;
			}
		}
		else {
			_case_begin_21256dacb:;
			{
				return false;
			}
		}
		_match_end_21256d779:;
	};
}



inline jule::Bool _246ca3ebe_IsNil(_2461e4872_Const* _self_) {
	return ((*_self_)._field_data == nullptr);
}



inline jule::Bool _246ca4101_AreSameTypes(_2461e4872_Const* _self_, _2461e4872_Const _21327_x) {
	{
		
		if ((_2462570dd_IsI64(&(*_self_)) == _2462570dd_IsI64(&_21327_x))) {
			_case_begin_2125708ad:;
			{
				return true;
			}
		}
		else if ((_2462069a5_IsU64(&(*_self_)) == _2462069a5_IsU64(&_21327_x))) {
			_case_begin_21257011b:;
			{
				return true;
			}
		}
		else if ((_24625698e_IsF64(&(*_self_)) == _24625698e_IsF64(&_21327_x))) {
			_case_begin_212570193:;
			{
				return true;
			}
		}
		else if ((_246208de7_IsBool(&(*_self_)) == _246208de7_IsBool(&_21327_x))) {
			_case_begin_21257021a:;
			{
				return true;
			}
		}
		else if ((_2462456a3_IsStr(&(*_self_)) == _2462456a3_IsStr(&_21327_x))) {
			_case_begin_212570292:;
			{
				return true;
			}
		}
		else if ((_246ca3ebe_IsNil(&(*_self_)) == _246ca3ebe_IsNil(&_21327_x))) {
			_case_begin_212570539:;
			{
				return true;
			}
		}
		else {
			_case_begin_2125700a5:;
			{
				return false;
			}
		}
		_match_end_21256eec8:;
	};
}



inline jule::Bool _246ca4233_And(_2461e4872_Const* _self_, _2461e4872_Const _23818_x) {
	{
		
		if ((_246208de7_IsBool(&(*_self_)) && _246208de7_IsBool(&_23818_x))) {
			_case_begin_212574153:;
			{
				return (_24623d558_ReadBool(&(*_self_)) && _24623d558_ReadBool(&_23818_x));
			}
		}
		else {
			_case_begin_2125738e4:;
			{
				return false;
			}
		}
		_match_end_2125733d8:;
	};
}



inline jule::Bool _246ca4365_Or(_2461e4872_Const* _self_, _2461e4872_Const _24917_x) {
	{
		
		if ((_246208de7_IsBool(&(*_self_)) && _246208de7_IsBool(&_24917_x))) {
			_case_begin_2125756b5:;
			{
				return (_24623d558_ReadBool(&(*_self_)) || _24623d558_ReadBool(&_24917_x));
			}
		}
		else {
			_case_begin_212574571:;
			{
				return false;
			}
		}
		_match_end_212574494:;
	};
}



inline jule::Bool _246ca4497_Eq(_2461e4872_Const* _self_, _2461e4872_Const _26017_x) {
	{
		
		if (_246ca3ebe_IsNil(&(*_self_))) {
			_case_begin_212576c5a:;
			{
				return _246ca3ebe_IsNil(&_26017_x);
			}
		}
		else if (_246208de7_IsBool(&(*_self_))) {
			_case_begin_2125764b8:;
			{
				return (_246208de7_IsBool(&_26017_x) && (_24623d558_ReadBool(&(*_self_)) == _24623d558_ReadBool(&_26017_x)));
			}
		}
		else if (_2462456a3_IsStr(&(*_self_))) {
			_case_begin_212576540:;
			{
				return (_2462456a3_IsStr(&_26017_x) && (_246245de0_ReadStr(&(*_self_)) == _246245de0_ReadStr(&_26017_x)));
			}
		}
		else if (_2462570dd_IsI64(&(*_self_))) {
			_case_begin_2125765b7:;
			{
				return (_24623bb1c_ReadI64(&(*_self_)) == _24624782b_AsI64(&_26017_x));
			}
		}
		else if (_2462069a5_IsU64(&(*_self_))) {
			_case_begin_21257663e:;
			{
				return (_24623cd0a_ReadU64(&(*_self_)) == _24623b974_AsU64(&_26017_x));
			}
		}
		else if (_24625698e_IsF64(&(*_self_))) {
			_case_begin_2125768d6:;
			{
				return (_24624696d_ReadF64(&(*_self_)) == _2462487e9_AsF64(&_26017_x));
			}
		}
		else {
			_case_begin_212575ab1:;
			{
				return false;
			}
		}
		_match_end_2125759d4:;
	};
}



inline jule::Bool _246ca45c9_Lt(_2461e4872_Const* _self_, _2461e4872_Const _28717_x) {
	{
		
		if (_2462456a3_IsStr(&(*_self_))) {
			_case_begin_21257b259:;
			{
				return (_2462456a3_IsStr(&_28717_x) && (_246245de0_ReadStr(&(*_self_)) < _246245de0_ReadStr(&_28717_x)));
			}
		}
		else if (_2462570dd_IsI64(&(*_self_))) {
			_case_begin_21257aab6:;
			{
				return (_24623bb1c_ReadI64(&(*_self_)) < _24624782b_AsI64(&_28717_x));
			}
		}
		else if (_2462069a5_IsU64(&(*_self_))) {
			_case_begin_21257ab2c:;
			{
				return (_24623cd0a_ReadU64(&(*_self_)) < _24623b974_AsU64(&_28717_x));
			}
		}
		else if (_24625698e_IsF64(&(*_self_))) {
			_case_begin_21257ab93:;
			{
				return (_24624696d_ReadF64(&(*_self_)) < _2462487e9_AsF64(&_28717_x));
			}
		}
		else {
			_case_begin_2125770ac:;
			{
				return false;
			}
		}
		_match_end_212577002:;
	};
}



inline jule::Bool _246ca470b_LtEq(_2461e4872_Const* _self_, _2461e4872_Const _31019_x) {
	{
		
		if (_2462456a3_IsStr(&(*_self_))) {
			_case_begin_2125843e9:;
			{
				return (_2462456a3_IsStr(&_31019_x) && (_246245de0_ReadStr(&(*_self_)) <= _246245de0_ReadStr(&_31019_x)));
			}
		}
		else if (_2462570dd_IsI64(&(*_self_))) {
			_case_begin_212583d44:;
			{
				return (_24623bb1c_ReadI64(&(*_self_)) <= _24624782b_AsI64(&_31019_x));
			}
		}
		else if (_2462069a5_IsU64(&(*_self_))) {
			_case_begin_212583daa:;
			{
				return (_24623cd0a_ReadU64(&(*_self_)) <= _24623b974_AsU64(&_31019_x));
			}
		}
		else if (_24625698e_IsF64(&(*_self_))) {
			_case_begin_212583e21:;
			{
				return (_24624696d_ReadF64(&(*_self_)) <= _2462487e9_AsF64(&_31019_x));
			}
		}
		else {
			_case_begin_21257b4ac:;
			{
				return false;
			}
		}
		_match_end_21257b3d0:;
	};
}



inline jule::Bool _246ca483d_Gt(_2461e4872_Const* _self_, _2461e4872_Const _33317_x) {
	{
		
		if (_2462456a3_IsStr(&(*_self_))) {
			_case_begin_21258772c:;
			{
				return (_2462456a3_IsStr(&_33317_x) && (_246245de0_ReadStr(&(*_self_)) > _246245de0_ReadStr(&_33317_x)));
			}
		}
		else if (_2462570dd_IsI64(&(*_self_))) {
			_case_begin_212587089:;
			{
				return (_24623bb1c_ReadI64(&(*_self_)) > _24624782b_AsI64(&_33317_x));
			}
		}
		else if (_2462069a5_IsU64(&(*_self_))) {
			_case_begin_212587100:;
			{
				return (_24623cd0a_ReadU64(&(*_self_)) > _24623b974_AsU64(&_33317_x));
			}
		}
		else if (_24625698e_IsF64(&(*_self_))) {
			_case_begin_212587166:;
			{
				return (_24624696d_ReadF64(&(*_self_)) > _2462487e9_AsF64(&_33317_x));
			}
		}
		else {
			_case_begin_21258463b:;
			{
				return false;
			}
		}
		_match_end_21258455e:;
	};
}



inline jule::Bool _246ca4970_GtEq(_2461e4872_Const* _self_, _2461e4872_Const _35619_x) {
	{
		
		if (_2462456a3_IsStr(&(*_self_))) {
			_case_begin_21258aa60:;
			{
				return (_2462456a3_IsStr(&_35619_x) && (_246245de0_ReadStr(&(*_self_)) >= _246245de0_ReadStr(&_35619_x)));
			}
		}
		else if (_2462570dd_IsI64(&(*_self_))) {
			_case_begin_21258a3bc:;
			{
				return (_24623bb1c_ReadI64(&(*_self_)) >= _24624782b_AsI64(&_35619_x));
			}
		}
		else if (_2462069a5_IsU64(&(*_self_))) {
			_case_begin_21258a433:;
			{
				return (_24623cd0a_ReadU64(&(*_self_)) >= _24623b974_AsU64(&_35619_x));
			}
		}
		else if (_24625698e_IsF64(&(*_self_))) {
			_case_begin_21258a499:;
			{
				return (_24624696d_ReadF64(&(*_self_)) >= _2462487e9_AsF64(&_35619_x));
			}
		}
		else {
			_case_begin_212587980:;
			{
				return false;
			}
		}
		_match_end_2125878a3:;
	};
}



inline jule::Bool _246ca4aa2_Add(_2461e4872_Const* _self_, _2461e4872_Const _37722_x) {
	{
		
		if (_2462456a3_IsStr(&(*_self_))) {
			_case_begin_21258dd93:;
			{
				if ((!(_2462456a3_IsStr(&_37722_x)))) {
					return false;
				};
				_246260c51_SetStr(&(*_self_), (_246245de0_ReadStr(&(*_self_)) + _246245de0_ReadStr(&_37722_x)));
			}
		}
		else if (_24625698e_IsF64(&(*_self_))) {
			_case_begin_21258d700:;
			{
				_2462617ce_SetF64(&(*_self_), static_cast<jule::F64>((_24624696d_ReadF64(&(*_self_)) + _2462487e9_AsF64(&_37722_x))));
			}
		}
		else if (_2462570dd_IsI64(&(*_self_))) {
			_case_begin_21258d766:;
			{
				if (_24625698e_IsF64(&_37722_x)) {
					_2462617ce_SetF64(&(*_self_), static_cast<jule::F64>((_2462487e9_AsF64(&(*_self_)) + _24624696d_ReadF64(&_37722_x))));
				} else {
					_2462496a7_SetI64(&(*_self_), static_cast<jule::I64>((_24623bb1c_ReadI64(&(*_self_)) + _24624782b_AsI64(&_37722_x))));
				};
			}
		}
		else if (_2462069a5_IsU64(&(*_self_))) {
			_case_begin_21258d7cc:;
			{
				if (_24625698e_IsF64(&_37722_x)) {
					_2462617ce_SetF64(&(*_self_), static_cast<jule::F64>((_2462487e9_AsF64(&(*_self_)) + _24624696d_ReadF64(&_37722_x))));
				} else {
					_246257462_SetU64(&(*_self_), static_cast<jule::U64>((_24623cd0a_ReadU64(&(*_self_)) + _24623b974_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_21258acb3:;
			{
				return false;
			}
		}
		_match_end_21258abd6:;
	};
	return true;
}



inline jule::Bool _246ca4bd4_Sub(_2461e4872_Const* _self_, _2461e4872_Const _40622_x) {
	{
		
		if (_24625698e_IsF64(&(*_self_))) {
			_case_begin_212594b8a:;
			{
				_2462617ce_SetF64(&(*_self_), static_cast<jule::F64>((_24624696d_ReadF64(&(*_self_)) - _2462487e9_AsF64(&_40622_x))));
			}
		}
		else if (_2462570dd_IsI64(&(*_self_))) {
			_case_begin_21259442b:;
			{
				if (_24625698e_IsF64(&_40622_x)) {
					_2462617ce_SetF64(&(*_self_), static_cast<jule::F64>((_2462487e9_AsF64(&(*_self_)) - _24624696d_ReadF64(&_40622_x))));
				} else {
					_2462496a7_SetI64(&(*_self_), static_cast<jule::I64>((_24623bb1c_ReadI64(&(*_self_)) - _24624782b_AsI64(&_40622_x))));
				};
			}
		}
		else if (_2462069a5_IsU64(&(*_self_))) {
			_case_begin_212594492:;
			{
				if (_24625698e_IsF64(&_40622_x)) {
					_2462617ce_SetF64(&(*_self_), static_cast<jule::F64>((_2462487e9_AsF64(&(*_self_)) - _24624696d_ReadF64(&_40622_x))));
				} else {
					_246257462_SetU64(&(*_self_), static_cast<jule::U64>((_24623cd0a_ReadU64(&(*_self_)) - _24623b974_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_2125943b5:;
			{
				return false;
			}
		}
		_match_end_2125939be:;
	};
	return true;
}



inline jule::Bool _246ca4d16_Mul(_2461e4872_Const* _self_, _2461e4872_Const _43022_x) {
	{
		
		if (_24625698e_IsF64(&(*_self_))) {
			_case_begin_21259981b:;
			{
				_2462617ce_SetF64(&(*_self_), static_cast<jule::F64>((_24624696d_ReadF64(&(*_self_)) * _2462487e9_AsF64(&_43022_x))));
			}
		}
		else if (_2462570dd_IsI64(&(*_self_))) {
			_case_begin_2125990ac:;
			{
				if (_24625698e_IsF64(&_43022_x)) {
					_2462617ce_SetF64(&(*_self_), static_cast<jule::F64>((_2462487e9_AsF64(&(*_self_)) * _24624696d_ReadF64(&_43022_x))));
				} else {
					_2462496a7_SetI64(&(*_self_), static_cast<jule::I64>((_24623bb1c_ReadI64(&(*_self_)) * _24624782b_AsI64(&_43022_x))));
				};
			}
		}
		else if (_2462069a5_IsU64(&(*_self_))) {
			_case_begin_212599123:;
			{
				if (_24625698e_IsF64(&_43022_x)) {
					_2462617ce_SetF64(&(*_self_), static_cast<jule::F64>((_2462487e9_AsF64(&(*_self_)) * _24624696d_ReadF64(&_43022_x))));
				} else {
					_246257462_SetU64(&(*_self_), static_cast<jule::U64>((_24623cd0a_ReadU64(&(*_self_)) * _24623b974_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_212599046:;
			{
				return false;
			}
		}
		_match_end_2125984a7:;
	};
	return true;
}



inline jule::Bool _246ca4e48_Div(_2461e4872_Const* _self_, _2461e4872_Const _45822_x) {
	{
		
		if (_24625698e_IsF64(&(*_self_))) {
			_case_begin_21259e49c:;
			{
				jule::F64 _46117_l = _2462487e9_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;
				};
				_2462617ce_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_24624696d_ReadF64(&(*_self_)),_46117_l)));
			}
		}
		else if (_2462570dd_IsI64(&(*_self_))) {
			_case_begin_21259dc3d:;
			{
				jule::F64 _46717_l = _2462487e9_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;
				};
				_2462617ce_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_2462487e9_AsF64(&(*_self_)),_46717_l)));
			}
		}
		else if (_2462069a5_IsU64(&(*_self_))) {
			_case_begin_21259dca4:;
			{
				jule::F64 _47317_l = _2462487e9_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;
				};
				_2462617ce_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_2462487e9_AsF64(&(*_self_)),_47317_l)));
			}
		}
		else {
			_case_begin_21259dbc7:;
			{
				return false;
			}
		}
		_match_end_21259d138:;
	};
	return true;
}



inline jule::Bool _246ca507a_Mod(_2461e4872_Const* _self_, _2461e4872_Const _48722_x) {
	{
		
		if (_2462570dd_IsI64(&(*_self_))) {
			_case_begin_2125a412d:;
			{
				jule::I64 _49017_l = _24624782b_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;
				};
				_2462496a7_SetI64(&(*_self_), static_cast<jule::I64>(jule::mod(_24623bb1c_ReadI64(&(*_self_)),_49017_l)));
			}
		}
		else if (_2462069a5_IsU64(&(*_self_))) {
			_case_begin_2125a38d0:;
			{
				jule::U64 _49617_l = _24623b974_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;
				};
				_246257462_SetU64(&(*_self_), static_cast<jule::U64>(jule::mod(_24623cd0a_ReadU64(&(*_self_)),_49617_l)));
			}
		}
		else {
			_case_begin_2125a3869:;
			{
				return false;
			}
		}
		_match_end_2125a378c:;
	};
	return true;
}



inline jule::Bool _246ca51ac_BitwiseAnd(_2461e4872_Const* _self_, _2461e4872_Const _50929_x) {
	{
		
		if (_2462570dd_IsI64(&(*_self_))) {
			_case_begin_2125a774c:;
			{
				_2462496a7_SetI64(&(*_self_), static_cast<jule::I64>((_24623bb1c_ReadI64(&(*_self_)) & _24624782b_AsI64(&_50929_x))));
			}
		}
		else if (_2462069a5_IsU64(&(*_self_))) {
			_case_begin_2125a6eee:;
			{
				_246257462_SetU64(&(*_self_), static_cast<jule::U64>((_24623cd0a_ReadU64(&(*_self_)) & _24623b974_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_2125a6e88:;
			{
				return false;
			}
		}
		_match_end_2125a6dab:;
	};
	return true;
}



inline jule::Bool _246ca52de_BitwiseOr(_2461e4872_Const* _self_, _2461e4872_Const _52328_x) {
	{
		
		if (_2462570dd_IsI64(&(*_self_))) {
			_case_begin_2125a9ae5:;
			{
				_2462496a7_SetI64(&(*_self_), static_cast<jule::I64>((_24623bb1c_ReadI64(&(*_self_)) | _24624782b_AsI64(&_52328_x))));
			}
		}
		else if (_2462069a5_IsU64(&(*_self_))) {
			_case_begin_2125a9397:;
			{
				_246257462_SetU64(&(*_self_), static_cast<jule::U64>((_24623cd0a_ReadU64(&(*_self_)) | _24623b974_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_2125a9331:;
			{
				return false;
			}
		}
		_match_end_2125a9254:;
	};
	return true;
}



inline jule::Bool _246ca5421_Xor(_2461e4872_Const* _self_, _2461e4872_Const _53722_x) {
	{
		
		if (_2462570dd_IsI64(&(*_self_))) {
			_case_begin_2125abe8d:;
			{
				_2462496a7_SetI64(&(*_self_), static_cast<jule::I64>((_24623bb1c_ReadI64(&(*_self_)) ^ _24624782b_AsI64(&_53722_x))));
			}
		}
		else if (_2462069a5_IsU64(&(*_self_))) {
			_case_begin_2125ab740:;
			{
				_246257462_SetU64(&(*_self_), static_cast<jule::U64>((_24623cd0a_ReadU64(&(*_self_)) ^ _24623b974_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_2125ab6c9:;
			{
				return false;
			}
		}
		_match_end_2125ab5ec:;
	};
	return true;
}



inline jule::Bool _246ca5553_Lshift(_2461e4872_Const* _self_, _2461e4872_Const _55125_x) {
	{
		
		if (_2462570dd_IsI64(&(*_self_))) {
			_case_begin_2125ae336:;
			{
				jule::I64 _55417_l = _24624782b_AsI64(&(*_self_));;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _24623b974_AsU64(&_55125_x);;
					_2462496a7_SetI64(&(*_self_), static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_246ca57b7_lshiftUnsig((*_self_),_55125_x);
				};
			}
		}
		else if (_2462069a5_IsU64(&(*_self_))) {
			_case_begin_2125adad8:;
			{
				_246ca57b7_lshiftUnsig((*_self_),_55125_x);
			}
		}
		else {
			_case_begin_2125ada72:;
			{
				return false;
			}
		}
		_match_end_2125ad995:;
	};
	return true;
}



inline jule::Bool _246ca5685_Rshift(_2461e4872_Const* _self_, _2461e4872_Const _57125_x) {
	{
		
		if (_2462570dd_IsI64(&(*_self_))) {
			_case_begin_2125b204d:;
			{
				jule::I64 _57417_l = _24624782b_AsI64(&(*_self_));;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _24623b974_AsU64(&_57125_x);;
					_2462496a7_SetI64(&(*_self_), static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_246ca58e9_rshiftUnsig((*_self_),_57125_x);
				};
			}
		}
		else if (_2462069a5_IsU64(&(*_self_))) {
			_case_begin_2125b1800:;
			{
				_246ca58e9_rshiftUnsig((*_self_),_57125_x);
			}
		}
		else {
			_case_begin_2125b1789:;
			{
				return false;
			}
		}
		_match_end_2125b16ac:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _2461e4872_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_24611d977_FieldIns> _245ee3990_instance(jule::Ptr<_246108841_Field> _self_) {
	return jule::new_ptr<_24611d977_FieldIns>(_24611d977_FieldIns{._field_Decl=_self_, });
}







std::ostream &operator<<(std::ostream &_Stream, _246108841_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246116310_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_246142319_StructIns> _2460e2a4a_instance(jule::Ptr<_246117c3a_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];
	};
	jule::Ptr<_246142319_StructIns> _9917_ins = jule::new_ptr<_246142319_StructIns>(_246142319_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_24611d977_FieldIns>>::alloc(0LL, _self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_246d16372_Var>>::alloc(0LL, _self_.get()._field_Statics.len()), ._field_Refers=static__246cac802_new(), });;
	{
		auto &expr = _self_.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_21283ea4a:;
		if (it != expr.end()) {
			jule::Ptr<_246d16372_Var> _10621_s = *it;
			{
				_9917_ins.get()._field_Statics = jule::alloc_for_append(_9917_ins.get()._field_Statics,1);_9917_ins.get()._field_Statics.__push(jule::new_ptr<_246d16372_Var>((*(_10621_s))));;
			}
			_iter_next_21283ea4a:;
			++it;
			goto _iter_begin_21283ea4a;
		}
		_iter_end_21283ea4a:;
	};
	{
		auto &expr = _self_.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_212840e9c:;
		if (it != expr.end()) {
			jule::Ptr<_246108841_Field> _11021_f = *it;
			{
				_9917_ins.get()._field_Fields = jule::alloc_for_append(_9917_ins.get()._field_Fields,1);_9917_ins.get()._field_Fields.__push(_245ee3990_instance(_11021_f));;
				if ((((!(_11021_f.get()._field_Mutable)) && (_11021_f.get()._field_Kind.get()._field_Kind != nullptr)) && _246d91397_Mutable(_11021_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_212840e9c:;
			++it;
			goto _iter_begin_212840e9c;
		}
		_iter_end_212840e9c:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_246cab768_Fn>>::alloc(0LL, _self_.get()._field_Methods.len());
		{
			auto &expr = _self_.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_212842ec1:;
			if (it != expr.end()) {
				jule::Ptr<_246cab768_Fn> _12125_f = *it;
				{
					jule::Ptr<_246cab768_Fn> _12225_fins = jule::new_ptr<_246cab768_Fn>((*(_12125_f)));;
					_12225_fins.get()._field_Instances=nullptr;
					_9917_ins.get()._field_Methods = jule::alloc_for_append(_9917_ins.get()._field_Methods,1);_9917_ins.get()._field_Methods.__push(_12225_fins);;
				}
				_iter_next_212842ec1:;
				++it;
				goto _iter_begin_212842ec1;
			}
			_iter_end_212842ec1:;
		};
	};
	return _9917_ins;
}



inline jule::Ptr<_246142319_StructIns> _2460e8b3e_appendInstance(_246117c3a_Struct* _self_, jule::Ptr<_246142319_StructIns>& _13338_ins) {
	if ((((*_self_)._field_Generics.len() == 0LL) && ((*_self_)._field_Instances.len() == 1LL))) {
		return (*_self_)._field_Instances[0LL];
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_21284b040:;
		if (it != expr.end()) {
			jule::Ptr<_246142319_StructIns> _13921_ains = *it;
			{
				if (_246119159_Same(_13921_ains.ptr(), _13338_ins)) {
					return _13921_ains;
				};
			}
			_iter_next_21284b040:;
			++it;
			goto _iter_begin_21284b040;
		}
		_iter_end_21284b040:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_13338_ins);;
	return nullptr;
}



inline jule::Ptr<_246cab768_Fn> _2460ec934_FindMethod(_246117c3a_Struct* _self_, jule::Str _15129_ident, jule::Bool _15141_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_21284c805:;
		if (it != expr.end()) {
			jule::Ptr<_246cab768_Fn> _15221_f = *it;
			{
				if (((_15221_f.get()._field_Statically == _15141_statically) && (_15221_f.get()._field_Ident == _15129_ident))) {
					return _15221_f;
				};
			}
			_iter_next_21284c805:;
			++it;
			goto _iter_begin_21284c805;
		}
		_iter_end_21284c805:;
	};
	return nullptr;
}



inline jule::Ptr<_246d16372_Var> _246105673_FindStatic(_246117c3a_Struct* _self_, jule::Str _16229_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_21284db47:;
		if (it != expr.end()) {
			jule::Ptr<_246d16372_Var> _16321_v = *it;
			{
				if ((_16321_v.get()._field_Ident == _16229_ident)) {
					return _16321_v;
				};
			}
			_iter_next_21284db47:;
			++it;
			goto _iter_begin_21284db47;
		}
		_iter_end_21284db47:;
	};
	return nullptr;
}



inline jule::Ptr<_246108841_Field> _246106685_FindField(_246117c3a_Struct* _self_, jule::Str _17328_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_21284deee:;
		if (it != expr.end()) {
			jule::Ptr<_246108841_Field> _17421_f = *it;
			{
				if ((_17421_f.get()._field_Ident == _17328_ident)) {
					return _17421_f;
				};
			}
			_iter_next_21284deee:;
			++it;
			goto _iter_begin_21284deee;
		}
		_iter_end_21284deee:;
	};
	return nullptr;
}



inline jule::Bool _246105ac4_IsImplements(_246117c3a_Struct* _self_, jule::Ptr<_246cb3e9b_Trait> _18327_t) {
	{
		auto &expr = (*_self_)._field_Implements;
		auto it = expr.begin();
		_iter_begin_212850011:;
		if (it != expr.end()) {
			jule::Ptr<_246cb3e9b_Trait> &_18416_it = *it;
			{
				if ((_18327_t == _18416_it)) {
					return true;
				};
			}
			_iter_next_212850011:;
			++it;
			goto _iter_begin_212850011;
		}
		_iter_end_212850011:;
	};
	return false;
}



inline jule::Bool _246107ec2_IsDerives(_246117c3a_Struct* _self_, jule::Str _19324_ident) {
	{
		auto &expr = (*_self_)._field_Directives;
		auto it = expr.begin();
		_iter_begin_21285109a:;
		if (it != expr.end()) {
			jule::Ptr<_2460dc858_Directive> &_19416_d = *it;
			{
				if ((_19416_d.get()._field_Tag.get()._field_Kind == jule::Str("derive", 6))) {
					if (((_19416_d.get()._field_Args.len() == 1LL) && (_19416_d.get()._field_Args[0LL].get()._field_Kind == _19324_ident))) {
						return true;
					};
				};
			}
			_iter_next_21285109a:;
			++it;
			goto _iter_begin_21285109a;
		}
		_iter_end_21285109a:;
	};
	return false;
}



inline jule::Bool _2461072ac_IsUses(_246117c3a_Struct* _self_, jule::Ptr<_246117c3a_Struct> _20521_s) {
	{
		auto &expr = (*_self_)._field_Uses;
		auto it = expr.begin();
		_iter_begin_212853a81:;
		if (it != expr.end()) {
			jule::Ptr<_246117c3a_Struct> &_20616_u = *it;
			{
				while ((_20521_s == _20616_u)) {
					{
						return true;
					}
				_iter_next_212854378:;
				}
				_iter_end_212854378:;;
			}
			_iter_next_212853a81:;
			++it;
			goto _iter_begin_212853a81;
		}
		_iter_end_212853a81:;
	};
	return false;
}



inline jule::Bool _24610b2a0_HasRefAccessible(_246117c3a_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_212854862:;
		if (it != expr.end()) {
			jule::Ptr<_246cab768_Fn> &_21616_m = *it;
			{
				if (((_21616_m.get()._field_Params.len() > 0LL) && _24617b4da_IsRef(_21616_m.get()._field_Params[0LL].ptr()))) {
					return true;
				};
			}
			_iter_next_212854862:;
			++it;
			goto _iter_begin_212854862;
		}
		_iter_end_212854862:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _246117c3a_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24611d977_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca5a2b_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca5c18_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca5e05_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca60e2_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca62ce_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca64bb_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca66a8_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca6895_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca6a82_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca6c6e_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca6e5b_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca7148_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca7335_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca7522_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca770e_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca7b2c_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca7d19_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca8006_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca81e3_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca83d0_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca85bc_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca87a9_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca8996_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca8b83_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca8d70_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca905c_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca9249_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca9436_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca9623_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca9810_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca99ec_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246ca78eb_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246caa15c_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246caa349_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246caa536_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246caa723_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246caa910_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246caaaec_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246caacd9_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246caaec6_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246cab38e_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_246cab955_ParamIns> _2461b9270_instance(jule::Ptr<_246cab57b_Param> _self_) {
	return jule::new_ptr<_246cab955_ParamIns>(_246cab955_ParamIns{._field_Decl=_self_, });
}



inline jule::Bool _24617a220_IsSelf(_246cab57b_Param* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));
}



inline jule::Bool _24617b4da_IsRef(_246cab57b_Param* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _246cab57b_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _24618a10e_IsVoid(_246cab768_Fn* _self_) {
	return ((*_self_)._field_Result == nullptr);
}



inline jule::Bool _24618a829_IsMethod(_246cab768_Fn* _self_) {
	return ((*_self_)._field_Owner != nullptr);
}



inline jule::Bool _24618b044_IsEntryPoint(_246cab768_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("main", 4));
}



inline jule::Bool _24618bdbe_IsInit(_246cab768_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("init", 4));
}



inline jule::Bool _246179818_IsAnon(_246cab768_Fn* _self_) {
	return _244971771_IsAnonIdent((*_self_)._field_Ident);
}



inline jule::Bool _24617e8a6_AnyVar(_246cab768_Fn* _self_) {
	return (((*_self_)._field_Result != nullptr) && ((*_self_)._field_Result.get()._field_Idents.len() > 0LL));
}



inline jule::Ptr<_246cabb42_FnIns> _24618148a_instanceForce(jule::Ptr<_246cab768_Fn> _self_) {
	jule::Ptr<_246cabb42_FnIns> _10017_ins = jule::new_ptr<_246cabb42_FnIns>(_246cabb42_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_246cc1c01_Scope>(), ._field_Refers=static__246cac802_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_246cab955_ParamIns>>::alloc(0LL, _self_.get()._field_Params.len());
	{
		auto &expr = _self_.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_212869c40:;
		if (it != expr.end()) {
			jule::Ptr<_246cab57b_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_Params = jule::alloc_for_append(_10017_ins.get()._field_Params,1);_10017_ins.get()._field_Params.__push(_2461b9270_instance(_10721_p));;
			}
			_iter_next_212869c40:;
			++it;
			goto _iter_begin_212869c40;
		}
		_iter_end_212869c40:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;
}



inline jule::Ptr<_246cabb42_FnIns> _24618225a_instance(jule::Ptr<_246cab768_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];
	};
	return _24618148a_instanceForce(_self_);
}



inline jule::Ptr<_246cabb42_FnIns> _246179087_appendInstance(_246cab768_Fn* _self_, jule::Ptr<_246cabb42_FnIns>& _12838_ins) {
	if (((*_self_)._field_Generics.len() == 0LL)) {
		if (((*_self_)._field_Instances.len() == 1LL)) {
			return (*_self_)._field_Instances[0LL];
		};
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;
	};
	if (((*_self_)._field_Instances.len() == 0LL)) {
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_2128700b9:;
		if (it != expr.end()) {
			jule::Ptr<_246cabb42_FnIns> _14421_ains = *it;
			{
				if (_246cac093_Same(_14421_ains.ptr(), _12838_ins)) {
					return _14421_ains;
				};
			}
			_iter_next_2128700b9:;
			++it;
			goto _iter_begin_2128700b9;
		}
		_iter_end_2128700b9:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _246cab768_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _246178a04_Str(_246cab955_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_Decl.get()._field_Reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_24617a220_IsSelf((*_self_)._field_Decl.ptr())) {
		if (_24617b4da_IsRef((*_self_)._field_Decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;
	};
	if ((*_self_)._field_Decl.get()._field_Variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_Kind != nullptr)) {
		_16617_s+=_246d90396_Str((*_self_)._field_Kind.ptr());
	};
	return _16617_s;
}







std::ostream &operator<<(std::ostream &_Stream, _246cab955_ParamIns _Src) {
	_Stream << _246178a04_Str(&_Src);
	return _Stream;
}



inline jule::Str _24617aad3_Str(_246cabb42_FnIns* _self_) {
	;
	return _246cac1c5_GetKindStr(&(*_self_), false);
}



inline jule::Bool _246179340_Equals(jule::Ptr<_246cabb42_FnIns> _self_, jule::Ptr<_246d8ee9a_TypeKind> _21722_other) {
	jule::Ptr<_246cabb42_FnIns> _21813_f = _246d9329a_Fn(_21722_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;
	};
	return _24618b75e_EqualsFn(_self_, _21813_f);
}



inline jule::Bool _24618b75e_EqualsFn(jule::Ptr<_246cabb42_FnIns> _self_, jule::Ptr<_246cabb42_FnIns>& _22825_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != _22825_f.get()._field_Decl.get()._field_Exceptional)) {
		return false;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != _22825_f.get()._field_Decl.get()._field_Unsafety)) {
		return false;
	};
	if ((_24618a10e_IsVoid(_self_.get()._field_Decl.ptr()) != _24618a10e_IsVoid(_22825_f.get()._field_Decl.ptr()))) {
		return false;
	};
	jule::Fn<jule::Bool(jule::Ptr<_246cab955_ParamIns>,jule::Ptr<_246cab955_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_246cab955_ParamIns>,jule::Ptr<_246cab955_ParamIns>)>([=](jule::Ptr<_246cab955_ParamIns> _23830_p1, jule::Ptr<_246cab955_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;
		};
		if (_24617a220_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_24617a220_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;
			};
			if ((_24617b4da_IsRef(_23830_p1.get()._field_Decl.ptr()) != _24617b4da_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;
			};
			return true;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;
		};
		return _246d906a4_Equals(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);
	});;
	if ((_22825_f.get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;
	};
	jule::I64 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i],_22825_f.get()._field_Params[_27017_i])))) {
				return false;
			};
		}
	_iter_next_21287e00c:;
	}
	_iter_end_21287e00c:;;
	if ((!(_24618a10e_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_246d906a4_Equals(_self_.get()._field_Result, _22825_f.get()._field_Result)))) {
			return false;
		};
	};
	return true;
}



inline jule::Bool _24617da92_equalsTrait(jule::Ptr<_246cabb42_FnIns> _self_, jule::Ptr<_246cabb42_FnIns>& _28728_other) {
	if ((!(_24618b75e_EqualsFn(_self_, _28728_other)))) {
		return false;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != _28728_other.get()._field_Decl.get()._field_Generics.len())) {
		return false;
	};
	return true;
}



inline jule::Slice<jule::Ptr<_246d8ee9a_TypeKind>> _2461a97e3_Types(_246cabb42_FnIns* _self_) {
	{
		
		if (((*_self_)._field_Result == nullptr)) {
			_case_begin_212883253:;
			{
				return nullptr;
			}
		}
		else if ((_246d93c4b_Tup((*_self_)._field_Result.ptr()) == nullptr)) {
			_case_begin_212882a6b:;
			{
				return jule::Slice<jule::Ptr<_246d8ee9a_TypeKind>>::make({(*_self_)._field_Result});
			}
		}
		else {
			_case_begin_212882a05:;
			{
				return _246d93c4b_Tup((*_self_)._field_Result.ptr()).get()._field_Types;
			}
		}
		_match_end_212882928:;
	};
}



inline jule::Bool _246cabd2e_IsBuiltin(_246cabb42_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _246cabe61_IsAnon(_246cabb42_FnIns* _self_) {
	return ((*_self_)._field_Anon || (((*_self_)._field_Decl != nullptr) && _246179818_IsAnon((*_self_)._field_Decl.ptr())));
}



inline jule::Bool _246cac093_Same(_246cabb42_FnIns* _self_, jule::Ptr<_246cabb42_FnIns> _32419_f) {
	if ((((*_self_)._field_Decl != _32419_f.get()._field_Decl) || (_32419_f.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_21288683e:;
		if (it != expr.end()) {
			jule::I64 _32913_i = it - expr.begin();
			jule::Ptr<_246d8d76d_InsGeneric> &_32916_g = *it;
			{
				if ((!(_246d906a4_Equals(_32916_g.get()._field_Kind, _32419_f.get()._field_Generics[_32913_i].get()._field_Kind)))) {
					return false;
				};
			}
			_iter_next_21288683e:;
			++it;
			_32913_i++;
			goto _iter_begin_21288683e;
		}
		_iter_end_21288683e:;
	};
	return true;
}



inline jule::Str _246cac1c5_GetKindStr(_246cabb42_FnIns* _self_, jule::Bool _34025_ident) {
	jule::Str _34117_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Unsafety) {
		_34117_s+=jule::Str("unsafe ", 7);
	};
	_34117_s+=jule::Str("fn", 2);
	if ((_34025_ident && ((*_self_)._field_Decl != nullptr))) {
		_34117_s+=(jule::Str(" ", 1) + (*_self_)._field_Decl.get()._field_Ident);
	};
	_34117_s+=jule::Str("(", 1);
	jule::I64 _35413_n = (*_self_)._field_Params.len();;
	if ((_35413_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_Params;
			auto it = expr.begin();
			_iter_begin_21288aaeb:;
			if (it != expr.end()) {
				jule::Ptr<_246cab955_ParamIns> &_35620_p = *it;
				{
					_34117_s+=_246178a04_Str(_35620_p.ptr());
					_34117_s+=jule::Str(",", 1);
				}
				_iter_next_21288aaeb:;
				++it;
				goto _iter_begin_21288aaeb;
			}
			_iter_end_21288aaeb:;
		};
		(_34117_s).mut_slice(0LL,(_34117_s.len() - 1LL));;
	};
	_34117_s+=jule::Str(")", 1);
	if ((*_self_)._field_Decl.get()._field_Exceptional) {
		_34117_s+=jule::Str("!", 1);
	};
	if ((!(_24618a10e_IsVoid((*_self_)._field_Decl.ptr())))) {
		_34117_s+=jule::Str(":", 1);
		_34117_s+=_246d90396_Str((*_self_)._field_Result.ptr());
	};
	return _34117_s;
}







std::ostream &operator<<(std::ostream &_Stream, _246cabb42_FnIns _Src) {
	_Stream << _24617aad3_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_246cac615_ReferenceStack> static__246cac802_new(void) {
	return jule::new_ptr<_246cac615_ReferenceStack>(_246cac615_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});
}



inline jule::I64 _246cac934_Len(_246cac615_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());
}



inline jule::Any _246caca66_At(_246cac615_ReferenceStack* _self_, jule::I64 _6821_i) {
	return jule::Any((*_self_)._field_buffer[_6821_i]);
}



inline void _246cacb98_Push(_246cac615_ReferenceStack* _self_, jule::Any _7327_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(jule::Any(_7327_ref));;
}



inline jule::Bool _213008d4b_Exist(_246cac615_ReferenceStack* _self_, jule::Ptr<_246cabb42_FnIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_21300a18d:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_21300a18d:;
			++it;
			goto _iter_begin_21300a18d;
		}
		_iter_end_21300a18d:;
	};
	return false;
}

inline jule::Bool _21301e79b_Exist(_246cac615_ReferenceStack* _self_, jule::Ptr<_246d16372_Var> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_213020a99:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_213020a99:;
			++it;
			goto _iter_begin_213020a99;
		}
		_iter_end_213020a99:;
	};
	return false;
}

inline jule::Bool _2130bea16_Exist(_246cac615_ReferenceStack* _self_, jule::Ptr<_246142319_StructIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_2130c0d58:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_2130c0d58:;
			++it;
			goto _iter_begin_2130c0d58;
		}
		_iter_end_2130c0d58:;
	};
	return false;
}

inline jule::Bool _2132a4a75_Exist(_246cac615_ReferenceStack* _self_, jule::Ptr<_246cb3e9b_Trait> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_2132a5c85:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_2132a5c85:;
			++it;
			goto _iter_begin_2132a5c85;
		}
		_iter_end_2132a5c85:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _246cac615_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246cace0c_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_246caed87_symbolBuilder> _246cb023e_getRoot(jule::Ptr<_246caed87_symbolBuilder> _self_) {
	jule::Ptr<_246caed87_symbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_2128a5572:;
	}
	_iter_end_2128a5572:;;
	return _31617_root;
}



inline void _246cb0371_pushErr(_246caed87_symbolBuilder* _self_, jule::Ptr<_24496dc35_Token>& _32327_token, jule::Str _32342_fmt, jule::Slice<jule::Any> _32355_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_246ce6c04_compilerErr(_32327_token,true,_32342_fmt,jule::Any(_32355_args)));;
}



inline void _246cb04a3_pushErrText(_246caed87_symbolBuilder* _self_, jule::Ptr<_24496dc35_Token>& _32731_token, jule::Str _32746_fmt, jule::Slice<jule::Any> _32759_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_246ce6c04_compilerErr(_32731_token,false,_32746_fmt,jule::Any(_32759_args)));;
}



inline void _246cb05d5_pushSuggestion(_246caed87_symbolBuilder* _self_, jule::Str _33233_fmt, jule::Slice<jule::Any> _33246_args) {
	{
		_246ce8189_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_33233_fmt,jule::Any(_33246_args));
	};
}



inline jule::Bool _246cb0717_checkCppUseDeclPath(_246caed87_symbolBuilder* _self_, jule::Ptr<_24613d2d2_UseDecl>& _33639_decl, jule::Str _33655_path) {
	jule::Bool _33668_ok = false;
	jule::Str _33713_ext = _24362c30c_Ext(_33655_path);;
	if (((!(_24463408d_IsValidHeaderExt(_33713_ext))) && (!(_2446342e1_IsValidCppExt(_33713_ext))))) {
		_246cb0371_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>::make({jule::Any(_33713_ext)}));
		_33668_ok = false;
		return _33668_ok;
	};
	jule::Ptr<_243528703_Status> _34413_info = ({
		auto except = static__2427535dd_Of(_33655_path);
		(except.ok()) ? (except.result) : ({{
			_246cb0371_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath)}));
			_33668_ok = false;
			return _33668_ok;
		} jule::Ptr<_243528703_Status>(nullptr);});
	});;
	if (_24275d98e_IsDir(_34413_info.ptr())) {
		_246cb0371_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath)}));
		_33668_ok = false;
		return _33668_ok;
	};
	_33668_ok = true;
	return _33668_ok;
}



inline jule::Ptr<_246ce04c2_ImportInfo> _246cb0849_buildCppHeaderImport(_246caed87_symbolBuilder* _self_, jule::Ptr<_24613d2d2_UseDecl>& _35644_decl) {
	jule::Str _35717_path = _35644_decl.get()._field_LinkPath;;
	if ((!(_244633e5b_IsStdHeaderPath(_35644_decl.get()._field_LinkPath)))) {
		_35717_path=_243624832_Join(jule::Slice<jule::Str>::make({_2449749b6_Dir(_35644_decl.get()._field_Token.get()._field_File.ptr()),_35644_decl.get()._field_LinkPath}));
		jule::Bool _36121_ok = _246cb0717_checkCppUseDeclPath(&(*_self_), _35644_decl,_35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;
		};
		std::tie(_35717_path,_36121_ok) = _24362dd25_Abs(_35717_path);
		if ((!(_36121_ok))) {
			_246cb0371_pushErr(&(*_self_), _35644_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35644_decl.get()._field_LinkPath)}));
		};
	};
	return jule::new_ptr<_246ce04c2_ImportInfo>(_246ce04c2_ImportInfo{._field_Token=_35644_decl.get()._field_Token, ._field_Path=_35717_path, ._field_LinkPath=_35644_decl.get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_CppLinked=true, ._field_Std=false, ._field_Package=nullptr, });
}



inline jule::Ptr<_246ce04c2_ImportInfo> _246cb097b_buildStdImport(_246caed87_symbolBuilder* _self_, jule::Ptr<_24613d2d2_UseDecl>& _38438_decl) {
	jule::Str _38517_path = _38438_decl.get()._field_LinkPath.slice(5LL);;
	_38517_path=_2445b9bd3_Replace(_38517_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_38517_path=_243624832_Join(jule::Slice<jule::Str>::make({_244679a95_PathStdlib,_38517_path}));
	jule::Bool _38820_ok;;
	std::tie(_38517_path,_38820_ok) = _24362dd25_Abs(_38517_path);
	if ((!(_38820_ok))) {
		_246cb0371_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::Ptr<_243528703_Status> _39513_info = ({
		auto except = static__2427535dd_Of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_246cb0371_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
			return nullptr;
		} jule::Ptr<_243528703_Status>(nullptr);});
	});;
	if ((!(_24275d98e_IsDir(_39513_info.ptr())))) {
		_246cb0371_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::I64 _40513_i = (_2445b54c5_FindLast(_38438_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = _38438_decl.get()._field_LinkPath.slice(_40513_i);;
	return jule::new_ptr<_246ce04c2_ImportInfo>(_246ce04c2_ImportInfo{._field_Token=_38438_decl.get()._field_Token, ._field_Path=_38517_path, ._field_LinkPath=_38438_decl.get()._field_LinkPath, ._field_Ident=_40613_ident, ._field_Alias=_38438_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=true, ._field_ImportAll=_38438_decl.get()._field_Full, ._field_Package=jule::new_ptr<_246ce342b_Package>(_246ce342b_Package{._field_Files=nullptr}), });
}



inline jule::Ptr<_246ce04c2_ImportInfo> _246cb0aad_buildIdentImport(jule::Ptr<_246caed87_symbolBuilder> _self_, jule::Ptr<_24613d2d2_UseDecl>& _42341_decl) {
	jule::Str _42413_modPath = _246cdc854_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._246cdb9b8_GetModPath(_self_.get()._field_importer);;
	if ((_42413_modPath.len() == 0LL)) {
		_246cb0371_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_246cb05d5_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Str _43117_path = _42341_decl.get()._field_LinkPath;;
	_43117_path=_2445b9bd3_Replace(_43117_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_43117_path=_243624832_Join(jule::Slice<jule::Str>::make({_42413_modPath,_43117_path}));
	jule::Bool _43520_ok;;
	std::tie(_43117_path,_43520_ok) = _24362dd25_Abs(_43117_path);
	if ((!(_43520_ok))) {
		_246cb0371_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::Ptr<_243528703_Status> _44213_info = ({
		auto except = static__2427535dd_Of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_246cb0371_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
			return nullptr;
		} jule::Ptr<_243528703_Status>(nullptr);});
	});;
	if ((!(_24275d98e_IsDir(_44213_info.ptr())))) {
		_246cb0371_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::I64 _45213_i = (_2445b54c5_FindLast(_42341_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = _42341_decl.get()._field_LinkPath.slice(_45213_i);;
	return jule::new_ptr<_246ce04c2_ImportInfo>(_246ce04c2_ImportInfo{._field_Token=_42341_decl.get()._field_Token, ._field_Path=_43117_path, ._field_LinkPath=_42341_decl.get()._field_LinkPath, ._field_Ident=_45313_ident, ._field_Alias=_42341_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=false, ._field_ImportAll=_42341_decl.get()._field_Full, ._field_Package=jule::new_ptr<_246ce342b_Package>(_246ce342b_Package{._field_Files=nullptr}), });
}



inline jule::Ptr<_246ce04c2_ImportInfo> _246cb0be0_buildImport(jule::Ptr<_246caed87_symbolBuilder> _self_, jule::Ptr<_24613d2d2_UseDecl>& _47036_decl) {
	{
		
		if (_47036_decl.get()._field_CppLinked) {
			_case_begin_2128c068b:;
			{
				return _246cb0849_buildCppHeaderImport(_self_.ptr(), _47036_decl);
			}
		}
		else if (_47036_decl.get()._field_Std) {
			_case_begin_2128c0944:;
			{
				return _246cb097b_buildStdImport(_self_.ptr(), _47036_decl);
			}
		}
		else {
			_case_begin_2128bee1b:;
			{
				return _246cb0aad_buildIdentImport(_self_, _47036_decl);
			}
		}
		_match_end_2128bed3e:;
	};
}



inline jule::Bool _246cb0d22_checkDuplicateUseDecl(_246caed87_symbolBuilder* _self_, jule::Ptr<_246ce04c2_ImportInfo>& _48141_pkg) {
	jule::Bool _48161_ok = false;
	jule::Ptr<_246ce04c2_ImportInfo> _48313_lpkg = _246d59d99_SelectPackage((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_246ce04c2_ImportInfo>)>([=](jule::Ptr<_246ce04c2_ImportInfo> _48348_spkg) mutable -> jule::Bool {
		return (_48141_pkg.get()._field_Path == _48348_spkg.get()._field_Path);
	}));;
	if ((_48313_lpkg == nullptr)) {
		_48161_ok = true;
		return _48161_ok;
	};
	_246cb0371_pushErr(&(*_self_), _48141_pkg.get()._field_Token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>::make({jule::Any(_48141_pkg.get()._field_LinkPath)}));
	_246cb05d5_pushSuggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_48161_ok = false;
	return _48161_ok;
}



inline void _246cb0e54_implImportSelections(_246caed87_symbolBuilder* _self_, jule::Ptr<_246ce04c2_ImportInfo>& _49544_imp, jule::Ptr<_24613d2d2_UseDecl>& _49567_decl) {
	_49544_imp.get()._field_Selected=_49567_decl.get()._field_Selected;
	{
		auto &expr = _49544_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_2128c46c3:;
		if (it != expr.end()) {
			jule::Ptr<_24496dc35_Token> _49716_item = *it;
			{
				{
					auto &expr = _49544_imp.get()._field_Selected;
					auto it = expr.begin();
					_iter_begin_2128c5383:;
					if (it != expr.end()) {
						jule::Ptr<_24496dc35_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_2128c5383;
							} else if ((_49716_item.get()._field_Kind == _49820_citem.get()._field_Kind)) {
								_246cb0371_pushErr(&(*_self_), _49716_item,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_Kind)}));
								_246cb05d5_pushSuggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
								goto _iter_end_2128c5383;
							};
						}
						_iter_next_2128c5383:;
						++it;
						goto _iter_begin_2128c5383;
					}
					_iter_end_2128c5383:;
				};
			}
			_iter_next_2128c46c3:;
			++it;
			goto _iter_begin_2128c46c3;
		}
		_iter_end_2128c46c3:;
	};
}



inline jule::Str _246cb1086_getAsLinkPath(jule::Ptr<_246caed87_symbolBuilder> _self_, jule::Str _51037_path) {
	if (_2445b3e96_HasPrefix(_51037_path,_244679a95_PathStdlib)) {
		(_51037_path).mut_slice(_244679a95_PathStdlib.len());;
		return (jule::Str("std", 3) + _2445b9bd3_Replace(_51037_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
	};
	jule::Str _51614_root;;
	std::tie(_51614_root,std::ignore) = _24362dd25_Abs(_246cdc854_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._246cdb9b8_GetModPath(_self_.get()._field_importer));
	(_51037_path).mut_slice(_51614_root.len());;
	if ((_51037_path[0LL] == 47LLU)) {
		(_51037_path).mut_slice(1LL);;
	};
	return _2445b9bd3_Replace(_51037_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _246cb13d8_pushCycleError(jule::Ptr<_246caed87_symbolBuilder> _self_, jule::Ptr<_246caed87_symbolBuilder>& _52435_sb, jule::Str _52455_path, jule::Str& _52471_message) {
	;
	jule::Str _52613_refersTo = _2446412a9_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_246cb1086_getAsLinkPath(_self_, _2449749b6_Dir(_52435_sb.get()._field_table.get()._field_File.ptr()))),jule::Any(_246cb1086_getAsLinkPath(_self_, _52455_path))}));;
	(_52471_message).buffer.insert(0, (((_24459aab5_Repeat(jule::Str(" ", 1),4LL) + _52613_refersTo) + jule::Str("\n", 1))));;
}



inline void _246cb17a1_pushCrossCycleError(jule::Ptr<_246caed87_symbolBuilder> _self_, jule::Ptr<_246caed87_symbolBuilder>& _53340_target, jule::Ptr<_246ce04c2_ImportInfo>& _53365_imp, jule::Ptr<_24496dc35_Token>& _53384_errorToken) {
	jule::Str _53417_message = jule::Str();;
	_246cb13d8_pushCycleError(_self_, _self_,_53365_imp.get()._field_Path,_53417_message);
	jule::Ptr<_246caed87_symbolBuilder> _53817_owner = _self_.get()._field_owner;;
	jule::Ptr<_246caed87_symbolBuilder> _53917_old = _self_;;
	while ((_53817_owner.get()._field_owner != nullptr)) {
		{
			_246cb13d8_pushCycleError(_self_, _53917_old.get()._field_owner,_2449749b6_Dir(_53917_old.get()._field_table.get()._field_File.ptr()),_53417_message);
			if ((_53817_owner.get()._field_owner == _53340_target)) {
				_246cb13d8_pushCycleError(_self_, _53340_target,_2449749b6_Dir(_53817_owner.get()._field_table.get()._field_File.ptr()),_53417_message);
				goto _iter_end_2128cc70e;
			};
			_53917_old=_53817_owner;
			_53817_owner=_53817_owner.get()._field_owner;
		}
	_iter_next_2128cc70e:;
	}
	_iter_end_2128cc70e:;;
	_246cb0371_pushErr(_self_.ptr(), _53384_errorToken,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>::make({jule::Any(_53417_message)}));
}



inline jule::Bool _246cb1b58_checkImportCycles(jule::Ptr<_246caed87_symbolBuilder> _self_, jule::Ptr<_246ce04c2_ImportInfo> _55637_imp, jule::Ptr<_24613d2d2_UseDecl>& _55656_decl) {
	if ((_55637_imp.get()._field_Path == _2449749b6_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_246cb0371_pushErr(_self_.ptr(), _55656_decl.get()._field_Token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>::make({jule::Any(_246cb1086_getAsLinkPath(_self_, _55637_imp.get()._field_Path))}));
		return false;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	};
	if ((_2449749b6_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_246cb17a1_pushCrossCycleError(_self_, _self_.get()._field_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;
	};
	jule::Ptr<_246caed87_symbolBuilder> _57117_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_2449749b6_Dir(_57117_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_246cb17a1_pushCrossCycleError(_self_, _57117_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;
	};
	if ((_57117_owner.get()._field_owner != nullptr)) {
		_57117_owner=_57117_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;
}



inline void _246cb2043_checkPackageAccessibility(_246caed87_symbolBuilder* _self_, jule::Ptr<_24613d2d2_UseDecl>& _59245_decl, jule::Str& _59262_mod, jule::Str& _59273_path) {
	if (((_246cdc854_Importer_mptr_data[((*_self_)._field_importer).type_offset]._246cdb9b8_GetModPath((*_self_)._field_importer) != _59262_mod) && _2445b893a_Contains(_59273_path,jule::Str("internal", 8)))) {
		_246cb0371_pushErr(&(*_self_), _59245_decl.get()._field_Token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _246cb240b_importPackage(jule::Ptr<_246caed87_symbolBuilder> _self_, jule::Ptr<_246ce04c2_ImportInfo>& _59838_imp, jule::Ptr<_24613d2d2_UseDecl>& _59861_decl) {
	jule::Bool _59879_ok = false;
	if (_59838_imp.get()._field_CppLinked) {
		_59879_ok = true;
		return _59879_ok;
	};
	jule::Ptr<_246ce04c2_ImportInfo> _60317_port = _246cdc854_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._246cdc0d4_GetImport(_self_.get()._field_importer, _59838_imp.get()._field_Path);;
	if ((_60317_port != nullptr)) {
		_59838_imp.get()._field_Package=_60317_port.get()._field_Package;
		_59838_imp.get()._field_Duplicate=true;
		jule::Str _60817_oldMod = _246cdc854_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._246cdb9b8_GetModPath(_self_.get()._field_importer);;
		_246cdc854_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._246cdb776_SetModPath(_self_.get()._field_importer, _246cdc854_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._246cdbcc6_ModById(_self_.get()._field_importer, _59838_imp.get()._field_ModId));
		_246cb2043_checkPackageAccessibility(_self_.ptr(), _59861_decl,_60817_oldMod,_60317_port.get()._field_Path);
		_246cdc854_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._246cdb776_SetModPath(_self_.get()._field_importer, _60817_oldMod);
	} else {
		if ((!(_246cb1b58_checkImportCycles(_self_, _59838_imp,_59861_decl)))) {
			_59879_ok = false;
			return _59879_ok;
		};
		jule::Str _61717_oldMod = _246cdc854_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._246cdb9b8_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_246cdc854_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._246cdb776_SetModPath(_self_.get()._field_importer, _61717_oldMod);
		});;
		if (_59838_imp.get()._field_Std) {
			_246cdc854_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._246cdb776_SetModPath(_self_.get()._field_importer, _244679a95_PathStdlib);
		};
		jule::Slice<jule::Ptr<_2460db7ad_Ast>> _62222_asts;;
		jule::Slice<_244640d69_Log> _62232_errors;;
		std::tie(_62222_asts,_62232_errors) = _246cdc854_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._246cdc48b_ImportPackage(_self_.get()._field_importer, _59838_imp.get()._field_Path,(!(_59838_imp.get()._field_Std)));
		if ((_62232_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
			_59879_ok = false;
			return _59879_ok;
		};
		_246cb2043_checkPackageAccessibility(_self_.ptr(), _59861_decl,_61717_oldMod,_59838_imp.get()._field_Path);
		{
			auto &expr = _62222_asts;
			auto it = expr.begin();
			_iter_begin_2128de1b0:;
			if (it != expr.end()) {
				jule::Ptr<_2460db7ad_Ast> _63025_ast = *it;
				{
					jule::Ptr<_246d5956e_SymbolTable> _63125_table = nullptr;;
					std::tie(_63125_table,_62232_errors) = _246dab7ad_buildSymbols(_63025_ast,_self_.get()._field_importer,_self_);
					if ((_62232_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
						_59879_ok = false;
						return _59879_ok;
					};
					_59838_imp.get()._field_Package.get()._field_Files = jule::alloc_for_append(_59838_imp.get()._field_Package.get()._field_Files,1);_59838_imp.get()._field_Package.get()._field_Files.__push(_63125_table);;
				}
				_iter_next_2128de1b0:;
				++it;
				goto _iter_begin_2128de1b0;
			}
			_iter_end_2128de1b0:;
		};
	};
	_246cb0e54_implImportSelections(_self_.ptr(), _59838_imp,_59861_decl);
	_59879_ok = true;
	return _59879_ok;
}



inline jule::Ptr<_246ce04c2_ImportInfo> _246cb2719_importUseDecl(jule::Ptr<_246caed87_symbolBuilder> _self_, jule::Ptr<_24613d2d2_UseDecl>& _64538_decl) {
	jule::Ptr<_246ce04c2_ImportInfo> _64617_imp = _246cb0be0_buildImport(_self_, _64538_decl);;
	if ((_64617_imp == nullptr)) {
		return nullptr;
	};
	jule::Bool _65217_ok = _246cb0d22_checkDuplicateUseDecl(_self_.ptr(), _64617_imp);;
	if ((!(_65217_ok))) {
		return nullptr;
	};
	_65217_ok=_246cb240b_importPackage(_self_, _64617_imp,_64538_decl);
	_self_.get()._field_table.get()._field_Imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_Imports,1);_self_.get()._field_table.get()._field_Imports.__push(_64617_imp);;
	if (_65217_ok) {
		_246cdc854_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._246cdc711_Imported(_self_.get()._field_importer, _64617_imp);
		return _64617_imp;
	};
	return nullptr;
}



inline void _246cb28e5_importUseDecls(jule::Ptr<_246caed87_symbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_UseDecls;
		auto it = expr.begin();
		_iter_begin_2128e4627:;
		if (it != expr.end()) {
			jule::Ptr<_24613d2d2_UseDecl> _66721_decl = *it;
			{
				_246cb2719_importUseDecl(_self_, _66721_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_2128e4627;
				};
			}
			_iter_next_2128e4627:;
			++it;
			goto _iter_begin_2128e4627;
		}
		_iter_end_2128e4627:;
	};
}



inline void _246cb2b6a_appendNode(_246caed87_symbolBuilder* _self_, _2460dc45c_Node& _67634_node) {
	{
		auto &_match_expr{ _67634_node._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_246141a55_Impl>>()) {
			_case_begin_2128e612e:;
			{
				(*_self_)._field_table.get()._field_Impls = jule::alloc_for_append((*_self_)._field_table.get()._field_Impls,1);(*_self_)._field_table.get()._field_Impls.__push(_246caec55_buildImpl(_67634_node._field_Data.operator jule::Ptr<_246141a55_Impl>()));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24613bde6_TypeAliasDecl>>()) {
			_case_begin_2128e4d31:;
			{
				jule::Ptr<_246d8e2a7_TypeAlias> _68121_ta = _246cad35d_buildTypeAlias(_67634_node._field_Data.operator jule::Ptr<_24613bde6_TypeAliasDecl>());;
				(*_self_)._field_table.get()._field_TypeAliases = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeAliases,1);(*_self_)._field_table.get()._field_TypeAliases.__push(_68121_ta);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246140d40_StructDecl>>()) {
			_case_begin_2128e5d10:;
			{
				jule::Ptr<_246117c3a_Struct> _68421_srct = _246cad704_buildStruct(_67634_node._field_Data.operator jule::Ptr<_246140d40_StructDecl>());;
				(*_self_)._field_table.get()._field_Structs = jule::alloc_for_append((*_self_)._field_table.get()._field_Structs,1);(*_self_)._field_table.get()._field_Structs.__push(_68421_srct);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2461375a6_FnDecl>>()) {
			_case_begin_2128e5d76:;
			{
				jule::Ptr<_246cab768_Fn> _68721_f = _246cadbcc_buildFn(_67634_node._field_Data.operator jule::Ptr<_2461375a6_FnDecl>());;
				(*_self_)._field_table.get()._field_Funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_Funcs,1);(*_self_)._field_table.get()._field_Funcs.__push(_68721_f);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24614144a_TraitDecl>>()) {
			_case_begin_2128e5ddc:;
			{
				jule::Ptr<_246cb3e9b_Trait> _69021_t = _246cade41_buildTrait(_67634_node._field_Data.operator jule::Ptr<_24614144a_TraitDecl>());;
				(*_self_)._field_table.get()._field_Traits = jule::alloc_for_append((*_self_)._field_table.get()._field_Traits,1);(*_self_)._field_table.get()._field_Traits.__push(_69021_t);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246138585_VarDecl>>()) {
			_case_begin_2128e6739:;
			{
				jule::Ptr<_246d16372_Var> _69321_v = _246cae9e1_buildVar(_67634_node._field_Data.operator jule::Ptr<_246138585_VarDecl>());;
				(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_69321_v);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24613e27d_EnumDecl>>()) {
			_case_begin_2128e67b1:;
			{
				jule::Ptr<_246cb60e1_Enum> _69621_e = _246cae2d7_buildEnum(_67634_node._field_Data.operator jule::Ptr<_24613e27d_EnumDecl>());;
				(*_self_)._field_table.get()._field_Enums = jule::alloc_for_append((*_self_)._field_table.get()._field_Enums,1);(*_self_)._field_table.get()._field_Enums.__push(_69621_e);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24614038e_TypeEnumDecl>>()) {
			_case_begin_2128e6838:;
			{
				jule::Ptr<_246cb76db_TypeEnum> _69921_e = _246cae8ae_buildTypeEnum(_67634_node._field_Data.operator jule::Ptr<_24614038e_TypeEnumDecl>());;
				(*_self_)._field_table.get()._field_TypeEnums = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeEnums,1);(*_self_)._field_table.get()._field_TypeEnums.__push(_69921_e);;
			}
		}
		else {
			_case_begin_2128e4dca:;
			{
				_246cb0371_pushErr(&(*_self_), _67634_node._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_2128e5c00:;
	};
}



inline void _246cb2d46_appendNodes(_246caed87_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_Nodes;
		auto it = expr.begin();
		_iter_begin_2128eea50:;
		if (it != expr.end()) {
			_2460dc45c_Node _70721_node = *it;
			{
				_246cb2b6a_appendNode(&(*_self_), _70721_node);
			}
			_iter_next_2128eea50:;
			++it;
			goto _iter_begin_2128eea50;
		}
		_iter_end_2128eea50:;
	};
}



inline void _246cb30bb_pushDirectivePass(_246caed87_symbolBuilder* _self_, jule::Ptr<_2460dc858_Directive>& _71241_d) {
	if ((_71241_d.get()._field_Args.len() == 0LL)) {
		_246cb0371_pushErr(&(*_self_), _71241_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_71241_d.get()._field_Args.len() > 1LL)) {
		jule::Ptr<_24496dc35_Token> _71717_arg = _71241_d.get()._field_Args[1LL];;
		_246cb0371_pushErr(&(*_self_), _71717_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_24496dc35_Token> _72113_arg = _71241_d.get()._field_Args[0LL];;
	if ((_72113_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_246cb0371_pushErr(&(*_self_), _72113_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_72113_arg.get()._field_Kind[0LL] != '\"')) {
		_246cb0371_pushErr(&(*_self_), _72113_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_Passes = jule::alloc_for_append((*_self_)._field_table.get()._field_Passes,1);(*_self_)._field_table.get()._field_Passes.__push(_246cace0c_Pass{._field_Token=_71241_d.get()._field_Tag, ._field_Text=_72113_arg.get()._field_Kind.slice(1LL,(_72113_arg.get()._field_Kind.len() - 1LL))});;
}



inline void _246cb3297_appendTopDirectives(_246caed87_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_2129036e1:;
		if (it != expr.end()) {
			jule::Ptr<_2460dc858_Directive> _73921_d = *it;
			{
				{
					auto &_match_expr{ _73921_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_212906e0e:;
						{
							_246cb30bb_pushDirectivePass(&(*_self_), _73921_d);
						}
					}
					_match_end_212906ace:;
				};
			}
			_iter_next_2129036e1:;
			++it;
			goto _iter_begin_2129036e1;
		}
		_iter_end_2129036e1:;
	};
}



inline void _246cb3473_build(jule::Ptr<_246caed87_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_246d5956e_SymbolTable>(_246d5956e_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_246cb3297_appendTopDirectives(_self_.ptr());
	_246cb28e5_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_246cb2d46_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _246caed87_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _246cb4397_Str(_246cb3e9b_Trait* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _246cb46a5_Equals(jule::Ptr<_246cb3e9b_Trait> _self_, jule::Ptr<_246d8ee9a_TypeKind> _2522_other) {
	jule::Ptr<_246cb3e9b_Trait> _2613_trt = _246d93773_Trait(_2522_other.ptr());;
	return (_self_ == _2613_trt);
}



inline jule::Bool _246cb4a18_IsBuiltin(_246cb3e9b_Trait* _self_) {
	return ((*_self_)._field_Token == nullptr);
}



inline jule::Ptr<_246cab768_Fn> _246cb4d26_FindMethod(_246cb3e9b_Trait* _self_, jule::Str _3929_ident) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_21290b331:;
		if (it != expr.end()) {
			jule::Ptr<_246cab768_Fn> _4021_f = *it;
			{
				if ((_4021_f.get()._field_Ident == _3929_ident)) {
					return _4021_f;
				};
			}
			_iter_next_21290b331:;
			++it;
			goto _iter_begin_21290b331;
		}
		_iter_end_21290b331:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _246cb3e9b_Trait _Src) {
	_Stream << _246cb4397_Str(&_Src);
	return _Stream;
}



inline jule::Bool _246cb59d6_AutoExpr(_246cb55eb_EnumItem* _self_) {
	return ((*_self_)._field_Value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _246cb55eb_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _246cb6454_Str(_246cb60e1_Enum* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _246cb6762_Equals(jule::Ptr<_246cb60e1_Enum> _self_, jule::Ptr<_246d8ee9a_TypeKind> _3822_other) {
	jule::Ptr<_246cb60e1_Enum> _3913_enm = _246d927e9_Enum(_3822_other.ptr());;
	return (_self_ == _3913_enm);
}



inline jule::Ptr<_246cb55eb_EnumItem> _246cb6ba2_FindItem(_246cb60e1_Enum* _self_, jule::Str _4727_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_21290dcb2:;
		if (it != expr.end()) {
			jule::Ptr<_246cb55eb_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;
				};
			}
			_iter_next_21290dcb2:;
			++it;
			goto _iter_begin_21290dcb2;
		}
		_iter_end_21290dcb2:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _246cb60e1_Enum _Src) {
	_Stream << _246cb6454_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246cb7125_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _246cb7a1b_Str(_246cb76db_TypeEnum* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _246cb7d29_Equals(jule::Ptr<_246cb76db_TypeEnum> _self_, jule::Ptr<_246d8ee9a_TypeKind> _8022_other) {
	jule::Ptr<_246cb76db_TypeEnum> _8113_tenm = _246d92a5d_TypeEnum(_8022_other.ptr());;
	return (_self_ == _8113_tenm);
}



inline jule::Ptr<_246cb7125_TypeEnumItem> _246cb8225_FindItem(_246cb76db_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_212911149:;
		if (it != expr.end()) {
			jule::Ptr<_246cb7125_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;
				};
			}
			_iter_next_212911149:;
			++it;
			goto _iter_begin_212911149;
		}
		_iter_end_212911149:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _246cb76db_TypeEnum _Src) {
	_Stream << _246cb7a1b_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_246ce861d_Sema>&,jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>>&)> _246cba18e_readyFn(jule::Ptr<_246cb9c60_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_246ce861d_Sema>&,jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>>&)>([=](jule::Ptr<_246ce861d_Sema>& _6321_sema, jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>>& _6339_generics) mutable -> jule::Bool {
		{
			auto &expr = _self_.get()._field_genericsD;
			auto it = expr.begin();
			_iter_begin_21291e762:;
			if (it != expr.end()) {
				jule::I64 _6418_i = it - expr.begin();
				jule::Ptr<_246132e20_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_246d8d76d_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_21291e762;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_246d8ee9a_TypeKind>>::alloc(0LL, _6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto &expr = _6425_g.get()._field_Constraint.get()._field_Mask;
						auto it = expr.begin();
						_iter_begin_212922314:;
						if (it != expr.end()) {
							jule::Ptr<_246125b27_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = _6321_sema.get()._field_errors.len();;
								jule::Ptr<_246d8ee9a_TypeKind> _7229_kind = _246d00922_buildTypeWithRefers(_6321_sema, _7029_mask,jule::Trait<_246daaacb_Lookup>(_6321_sema, 3),_6339_generics,nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type_is<jule::Ptr<_2461261dd_IdentTypeDecl>>()) {
											_case_begin_212924008:;
											{
												jule::Ptr<_2461261dd_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.operator jule::Ptr<_2461261dd_IdentTypeDecl>();;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _246cbb327_isBuiltinConstraint(_7637_itd.get()._field_Ident))) {
													_7229_kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(_7637_itd.get()._field_Ident), 6)});
													_6321_sema.get()._field_errors=_6321_sema.get()._field_errors.slice(0LL,_7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_212922cc6:;
									};
									return false;
								};
								_julec_label_success:;
								_6525_generic.get()._field_Constraint = jule::alloc_for_append(_6525_generic.get()._field_Constraint,1);_6525_generic.get()._field_Constraint.__push(_7229_kind);;
							}
							_iter_next_212922314:;
							++it;
							goto _iter_begin_212922314;
						}
						_iter_end_212922314:;
					};
				}
				_iter_next_21291e762:;
				++it;
				_6418_i++;
				goto _iter_begin_21291e762;
			}
			_iter_end_21291e762:;
		};
		return true;
	});
}



inline jule::Bool _246cba403_readyFi(jule::Ptr<_246cb9c60_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _246d04d22_fnEnvironment(_self_.get()._field_s, _self_.get()._field_fi,_246cba18e_readyFn(_self_)));
}



inline jule::Bool _246cba667_readySi(jule::Ptr<_246cb9c60_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _246cba18e_readyFn(_self_)(_self_.get()._field_s,_self_.get()._field_genericsA));
}



inline jule::Bool _246cba8cb_ready(jule::Ptr<_246cb9c60_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _246cba403_readyFi(_self_);
	};
	return _246cba667_readySi(_self_);
}



inline jule::Bool _246cbab40_check(jule::Ptr<_246cb9c60_constraintChecker> _self_) {
	if ((!(_246cba8cb_ready(_self_)))) {
		return false;
	};
	_julec_label_lookup:;
	{
		auto &expr = _self_.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_21292b63c:;
		if (it != expr.end()) {
			jule::I64 _11914_i = it - expr.begin();
			jule::Ptr<_246d8d76d_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_21292b63c;
				};
				{
					auto &expr = _11921_g.get()._field_Constraint;
					auto it = expr.begin();
					_iter_begin_21292c5e9:;
					if (it != expr.end()) {
						jule::Ptr<_246d8ee9a_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_246d94972_Prim> _12425_prim = _246d920ac_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _246d95566_IsConstraint(_12425_prim.ptr()))) {
								if (_246cbb03b_matchConstraint(_12425_prim.get()._field_Kind,_11921_g.get()._field_Kind)) {
									goto _iter_next_21292b63c;
								};
								goto _iter_next_21292c5e9;
							};
							if (_246d906a4_Equals(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_21292b63c;
							};
						}
						_iter_next_21292c5e9:;
						++it;
						goto _iter_begin_21292c5e9;
					}
					_iter_end_21292c5e9:;
				};
				_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et,jule::Str("type @ is not matched with @'s constraint", 41),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_11921_g.get()._field_Kind.ptr())),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident)}));
				return false;
			}
			_iter_next_21292b63c:;
			++it;
			_11914_i++;
			goto _iter_begin_21292b63c;
		}
		_iter_end_21292b63c:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _246cb9c60_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _246cbc092_IsTraitImpl(_246cbbb96_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);
}



inline jule::Bool _246cbc306_IsStructImpl(_246cbbb96_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _246cbbb96_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246cc1c01_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246cc20ec_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246cc23d8_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246cc275c_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246cc2a48_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _246cc3362_IsWhileNext(_246cc2ebb_WhileIter* _self_) {
	return ((*_self_)._field_Next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _246cc2ebb_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246cc38a1_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246cc3c9c_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246cc4154_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246cc4440_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246cc472b_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246cc4ad3_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246cc5056_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246cc540d_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _246cc5e58_IsGenericTypeMatch(_246cc594c_Match* _self_) {
	return (((*_self_)._field_TypeMatch && ((*_self_)._field_Expr != nullptr)) && (*_self_)._field_Expr.get()._field_Kind.get()._field_Generic);
}







std::ostream &operator<<(std::ostream &_Stream, _246cc594c_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _246cc6761_isDefault(_246cc6497_Case* _self_) {
	return ((*_self_)._field_Exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _246cc6497_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246cc6a4c_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246cc6ec0_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246cc75ca_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246cc7a4d_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_246ce04c2_ImportInfo> _246cc8cb3_FindPackage(_246cc8862_scopeChecker* _self_, jule::Str _45530_ident) {
	return _246ce8b3a_FindPackage((*_self_)._field_s.ptr(), _45530_ident);
}



inline jule::Ptr<_246ce04c2_ImportInfo> _246cc90c1_SelectPackage(_246cc8862_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_246ce04c2_ImportInfo>)> _46532_selector) {
	return _246ce8e48_SelectPackage((*_self_)._field_s.ptr(), _46532_selector);
}



inline jule::Ptr<_246d16372_Var> _246cc9478_FindVar(_246cc8862_scopeChecker* _self_, jule::Str _47626_ident, jule::Bool _47638_cpp_linked) {
	;
	jule::Ptr<_246d16372_Var> _47917_v = _246d5bd13_findVar((*_self_)._field_table.ptr(), _47626_ident,_47638_cpp_linked,true);;
	if ((_47917_v != nullptr)) {
		return _47917_v;
	};
	jule::Ptr<_246cc8862_scopeChecker> _48417_parent = (*_self_)._field_parent;;
	while ((_48417_parent != nullptr)) {
		{
			_47917_v=_246d5bd13_findVar(_48417_parent.get()._field_table.ptr(), _47626_ident,_47638_cpp_linked,true);
			if ((_47917_v != nullptr)) {
				return _47917_v;
			};
			_48417_parent=_48417_parent.get()._field_parent;
		}
	_iter_next_21295a7d1:;
	}
	_iter_end_21295a7d1:;;
	return _246ce9300_FindVar((*_self_)._field_s.ptr(), _47626_ident,_47638_cpp_linked);
}



inline jule::Ptr<_246d8e2a7_TypeAlias> _246cc9830_FindTypeAlias(_246cc8862_scopeChecker* _self_, jule::Str _50332_ident, jule::Bool _50344_cppLinked) {
	;
	jule::Ptr<_246d8e2a7_TypeAlias> _50617_ta = _246d5c264_findTypeAlias((*_self_)._field_table.ptr(), _50332_ident,_50344_cppLinked,true);;
	if ((_50617_ta != nullptr)) {
		return _50617_ta;
	};
	jule::Ptr<_246cc8862_scopeChecker> _51117_parent = (*_self_)._field_parent;;
	while ((_51117_parent != nullptr)) {
		{
			_50617_ta=_246d5c264_findTypeAlias(_51117_parent.get()._field_table.ptr(), _50332_ident,_50344_cppLinked,true);
			if ((_50617_ta != nullptr)) {
				return _50617_ta;
			};
			_51117_parent=_51117_parent.get()._field_parent;
		}
	_iter_next_21295d8d3:;
	}
	_iter_end_21295d8d3:;;
	return _246ce96a7_FindTypeAlias((*_self_)._field_s.ptr(), _50332_ident,_50344_cppLinked);
}



inline jule::Ptr<_246117c3a_Struct> _246cc9bd7_FindStruct(_246cc8862_scopeChecker* _self_, jule::Str _52829_ident, jule::Bool _52841_cppLinked) {
	return _246ce9a5e_FindStruct((*_self_)._field_s.ptr(), _52829_ident,_52841_cppLinked);
}



inline jule::Ptr<_246cab768_Fn> _246cca08e_FindFn(_246cc8862_scopeChecker* _self_, jule::Str _53725_ident, jule::Bool _53737_cppLinked) {
	return _246ce9e16_FindFn((*_self_)._field_s.ptr(), _53725_ident,_53737_cppLinked);
}



inline jule::Ptr<_246cb3e9b_Trait> _246cca39c_FindTrait(_246cc8862_scopeChecker* _self_, jule::Str _54628_ident) {
	return _246cea224_FindTrait((*_self_)._field_s.ptr(), _54628_ident);
}



inline jule::Ptr<_246cb60e1_Enum> _246cca6aa_FindEnum(_246cc8862_scopeChecker* _self_, jule::Str _55527_ident) {
	return _246cea532_FindEnum((*_self_)._field_s.ptr(), _55527_ident);
}



inline jule::Ptr<_246cb76db_TypeEnum> _246cca9b8_FindTypeEnum(_246cc8862_scopeChecker* _self_, jule::Str _56431_ident) {
	return _246cea840_FindTypeEnum((*_self_)._field_s.ptr(), _56431_ident);
}



inline jule::Bool _246ccace8_isUnsafe(jule::Ptr<_246cc8862_scopeChecker> _self_) {
	jule::Ptr<_246cc8862_scopeChecker> _57217_scope = _self_;;
	_julec_label_iter:;
	if (_57217_scope.get()._field_scope.get()._field_Unsafety) {
		return true;
	};
	if ((_57217_scope.get()._field_parent != nullptr)) {
		_57217_scope=_57217_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _246ccb05c_isRoot(_246cc8862_scopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));
}



inline void _246ccb238_stop(_246cc8862_scopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _246ccb49c_stopped(_246cc8862_scopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _246ccb711_isDeferred(jule::Ptr<_246cc8862_scopeChecker> _self_) {
	jule::Ptr<_246cc8862_scopeChecker> _60517_scope = _self_;;
	_julec_label_iter:;
	if (_60517_scope.get()._field_scope.get()._field_Deferred) {
		return true;
	};
	if ((_60517_scope.get()._field_parent != nullptr)) {
		_60517_scope=_60517_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_246cc8862_scopeChecker> _246ccb975_getRoot(jule::Ptr<_246cc8862_scopeChecker> _self_) {
	jule::Ptr<_246cc8862_scopeChecker> _62317_root = _self_;;
	while (((_62317_root.get()._field_parent != nullptr) && (_62317_root.get()._field_owner == nullptr))) {
		{
			_62317_root=_62317_root.get()._field_parent;
		}
	_iter_next_212968613:;
	}
	_iter_end_212968613:;;
	return _62317_root;
}



inline jule::Ptr<_246cc8862_scopeChecker> _246ccbbd9_getHardRoot(jule::Ptr<_246cc8862_scopeChecker> _self_) {
	jule::Ptr<_246cc8862_scopeChecker> _63317_root = _self_;;
	while ((_63317_root.get()._field_parent != nullptr)) {
		{
			_63317_root=_63317_root.get()._field_parent;
		}
	_iter_next_2129699aa:;
	}
	_iter_end_2129699aa:;;
	return _63317_root;
}



inline jule::Ptr<_246cc4440_Label> _246ccbee7_findLabel(_246cc8862_scopeChecker* _self_, jule::Str _64328_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_21296a648:;
		if (it != expr.end()) {
			jule::Any _64421_st = *it;
			{
				{
					auto &_match_expr{ _64421_st };
					
					if (_match_expr.type_is<jule::Ptr<_246cc4440_Label>>()) {
						_case_begin_21296b171:;
						{
							jule::Ptr<_246cc4440_Label> _64725_label = _64421_st.operator jule::Ptr<_246cc4440_Label>();;
							if ((_64725_label.get()._field_Ident == _64328_ident)) {
								return _64725_label;
							};
						}
					}
					_match_end_21296b061:;
				};
			}
			_iter_next_21296a648:;
			++it;
			goto _iter_begin_21296a648;
		}
		_iter_end_21296a648:;
	};
	return nullptr;
}



inline jule::Ptr<_246cc75ca_scopeLabel> _246ccc305_findLabelScope(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Str _65934_ident) {
	jule::Ptr<_246cc75ca_scopeLabel> _66017_label = _246ccc613_findLabelAll(_self_.ptr(), _65934_ident);;
	if (((_66017_label != nullptr) && (_66017_label.get()._field_scope == _self_))) {
		return _66017_label;
	};
	return nullptr;
}



inline jule::Ptr<_246cc75ca_scopeLabel> _246ccc613_findLabelAll(_246cc8862_scopeChecker* _self_, jule::Str _67131_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_21296d67e:;
		if (it != expr.end()) {
			jule::Ptr<_246cc75ca_scopeLabel> _67221_lbl = *it;
			{
				if ((_67221_lbl.get()._field_label.get()._field_Ident == _67131_ident)) {
					return _67221_lbl;
				};
			}
			_iter_next_21296d67e:;
			++it;
			goto _iter_begin_21296d67e;
		}
		_iter_end_21296d67e:;
	};
	return nullptr;
}



inline jule::Bool _246ccc9ba_isDuplicatedIdent(_246cc8862_scopeChecker* _self_, jule::Uintptr _68336_itself, jule::Str _68353_ident) {
	jule::Ptr<_246d16372_Var> _68413_v = _246cc9478_FindVar(&(*_self_), _68353_ident,false);;
	if (((_68413_v != nullptr) && (static_cast<jule::Uintptr>(_68413_v) != _68336_itself))) {
		if ((_68413_v.get()._field_Scope == nullptr)) {
			return false;
		};
		return ((_68413_v.get()._field_Scope == (*_self_)._field_scope) || (!(_246ceab92_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	jule::Ptr<_246d8e2a7_TypeAlias> _69213_ta = _246cc9830_FindTypeAlias(&(*_self_), _68353_ident,false);;
	if (((_69213_ta != nullptr) && (static_cast<jule::Uintptr>(_69213_ta) != _68336_itself))) {
		if ((_69213_ta.get()._field_Scope == nullptr)) {
			return false;
		};
		return ((_69213_ta.get()._field_Scope == (*_self_)._field_tree) || (!(_246ceab92_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	return false;
}



inline void _246cccc40_checkVarDecl(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_246138585_VarDecl> _70336_decl) {
	jule::Ptr<_246d16372_Var> _70417_v = _246cae9e1_buildVar(_70336_decl);;
	_70417_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_Vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_Vars,1);_self_.get()._field_table.get()._field_Vars.__push(_70417_v);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_70417_v));;
	});;
	if (_246ccc9ba_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70417_v)),_70417_v.get()._field_Ident)) {
		_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _70417_v.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_70417_v.get()._field_Ident)}));
		_246ceb5ee_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_246ccb238_stop(_self_.ptr());
		return;;
	};
	_246d0a795_checkVarDecl(_self_.get()._field_s, _70417_v,jule::Trait<_246daaacb_Lookup>(_self_, 0));
	if (((!(_246d1699e_IsTypeInferred(_70417_v.ptr()))) && ((_70417_v.get()._field_Kind == nullptr) || (_70417_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_246d0ddd6_checkTypeVar(_self_.get()._field_s, _70417_v,jule::Trait<_246daaacb_Lookup>(_self_, 0));
}



inline void _246ccceb5_checkTypeAliasDecl(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_24613bde6_TypeAliasDecl> _72742_decl) {
	jule::Ptr<_246d8e2a7_TypeAlias> _72817_ta = _246cad35d_buildTypeAlias(_72742_decl);;
	if (_246ccc9ba_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72817_ta)),_72817_ta.get()._field_Ident)) {
		_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _72817_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_72817_ta.get()._field_Ident)}));
		_246ceb5ee_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_246ccb238_stop(_self_.ptr());
		return;;
	};
	_246d065d7_checkTypeAliasDecl(_self_.get()._field_s, _72817_ta,jule::Trait<_246daaacb_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_TypeAliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_TypeAliases,1);_self_.get()._field_table.get()._field_TypeAliases.__push(_72817_ta);;
	if ((_72817_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_246ccb238_stop(_self_.ptr());
	};
}



inline jule::Ptr<_246cc1c01_Scope> _246ccd229_getChild(_246cc8862_scopeChecker* _self_) {
	return jule::new_ptr<_246cc1c01_Scope>(_246cc1c01_Scope{._field_Parent=(*_self_)._field_scope, });
}



inline void _246ccd5e2_checkChildSsc(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_246135ab0_ScopeTree>& _75138_tree, jule::Ptr<_246cc1c01_Scope>& _75161_s, jule::Ptr<_246cc8862_scopeChecker>& _75177_ssc) {
	_75177_ssc.get()._field_parent=_self_;
	_246cd8630_check(_75177_ssc, _75138_tree,_75161_s);
}



inline jule::Ptr<_246cc1c01_Scope> _246ccd999_checkChildSc(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_246135ab0_ScopeTree>& _75637_tree, jule::Ptr<_246cc8862_scopeChecker>& _75660_ssc) {
	jule::Ptr<_246cc1c01_Scope> _75717_s = _246ccd229_getChild(_self_.ptr());;
	_246ccd5e2_checkChildSsc(_self_, _75637_tree,_75717_s,_75660_ssc);
	return _75717_s;
}



inline jule::Ptr<_246cc1c01_Scope> _246ccdca7_checkChild(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_246135ab0_ScopeTree>& _76235_tree) {
	jule::Ptr<_246cc8862_scopeChecker> _76317_ssc = _246cd8894_newChildChecker(_self_);;
	return _246ccd999_checkChildSc(_self_, _76235_tree,_76317_ssc);
}



inline void _246cce02c_checkAnonScope(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_246135ab0_ScopeTree> _76738_tree) {
	jule::Ptr<_246cc1c01_Scope> _76817_s = _246ccdca7_checkChild(_self_, _76738_tree);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_76817_s));;
}



inline void _246cce34b_processErrorCall(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_246caa349_BuiltinErrorCallExprModel>& _77241_m, jule::Ptr<_24496dc35_Token> _77272_err) {
	if (_246ccb711_isDeferred(_self_)) {
		_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _77272_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_246cc8862_scopeChecker> _77717_root = _246ccb975_getRoot(_self_);;
	if ((!(_77717_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _77272_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_246ceb5ee_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_77241_m.get()._field_Func=_77717_root.get()._field_owner;
}



inline void _246cce5c1_checkExpr(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_24612a148_Expr> _78533_expr) {
	jule::Ptr<_246d60e16_Eval> _78617_eval = _246d02bbb_eval(_self_.get()._field_s, jule::Trait<_246daaacb_Lookup>(_self_, 0));;
	_78617_eval.get()._field_ignored=true;
	jule::Ptr<_246d5e398_Data> _78817_d = _246d81695_evalExpr(_78617_eval, _78533_expr);;
	if ((_78817_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78817_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_246caa349_BuiltinErrorCallExprModel>>()) {
			_case_begin_2129862ce:;
			{
				jule::Ptr<_246caa349_BuiltinErrorCallExprModel> _79521_m = _78817_d.get()._field_Model.operator jule::Ptr<_246caa349_BuiltinErrorCallExprModel>();;
				_246cce34b_processErrorCall(_self_, _79521_m,_78533_expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_78817_d));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246caacd9_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_246ca9623_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_246ca8b83_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_246ca87a9_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_246ca8996_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_246ca905c_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_246ca9249_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_246caa15c_BuiltinCopyCallExprModel>>() || _match_expr.type_is<jule::Ptr<_246ca78eb_BuiltinDeleteCallExprModel>>() || _match_expr.type_is<jule::Ptr<_246caaec6_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_246ca6895_FnCallExprModel>>()) {
			_case_begin_212986543:;
			{
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_78817_d));;
			}
		}
		else {
			_case_begin_21298617a:;
			{
				_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _78533_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_21298607b:;
	};
}



inline jule::Ptr<_246cc20ec_If> _246cce8ce_checkIf(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_24613ade5_If> _81531_i) {
	jule::Ptr<_246cc1c01_Scope> _81617_s = _246ccdca7_checkChild(_self_, _81531_i.get()._field_Scope);;
	jule::Ptr<_246d5e398_Data> _81817_d = _246d81695_evalExpr(_246d02bbb_eval(_self_.get()._field_s, jule::Trait<_246daaacb_Lookup>(_self_, 0)), _81531_i.get()._field_Expr);;
	if ((_81817_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_246d94972_Prim> _82317_prim = _246d920ac_Prim(_81817_d.get()._field_Kind.ptr());;
	if (((_82317_prim == nullptr) || (!(_246d97942_IsBool(_82317_prim.ptr()))))) {
		_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _81531_i.get()._field_Expr.get()._field_Token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_246cc20ec_If>(_246cc20ec_If{._field_Expr=_81817_d.get()._field_Model, ._field_Scope=_81617_s});
}



inline jule::Ptr<_246cc23d8_Else> _246ccebdc_checkElse(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_24613b29c_Else> _83533_e) {
	return jule::new_ptr<_246cc23d8_Else>(_246cc23d8_Else{._field_Scope=_246ccdca7_checkChild(_self_, _83533_e.get()._field_Scope)});
}



inline void _246ccee62_checkConditional(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_24613b720_Conditional> _84140_conditional) {
	jule::Ptr<_246cc275c_Conditional> _84217_c = jule::new_ptr<_246cc275c_Conditional>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_84217_c));;
	_84217_c.get()._field_Elifs=jule::Slice<jule::Ptr<_246cc20ec_If>>::alloc(0LL, (_84140_conditional.get()._field_Tail.len() + 1LL));
	_84217_c.get()._field_Elifs = jule::alloc_for_append(_84217_c.get()._field_Elifs,1);_84217_c.get()._field_Elifs.__push(_246cce8ce_checkIf(_self_, _84140_conditional.get()._field_Head));;
	{
		auto &expr = _84140_conditional.get()._field_Tail;
		auto it = expr.begin();
		_iter_begin_21299011d:;
		if (it != expr.end()) {
			jule::Ptr<_24613ade5_If> _84821_elif = *it;
			{
				_84217_c.get()._field_Elifs = jule::alloc_for_append(_84217_c.get()._field_Elifs,1);_84217_c.get()._field_Elifs.__push(_246cce8ce_checkIf(_self_, _84821_elif));;
			}
			_iter_next_21299011d:;
			++it;
			goto _iter_begin_21299011d;
		}
		_iter_end_21299011d:;
	};
	if ((_84140_conditional.get()._field_Default != nullptr)) {
		_84217_c.get()._field_Default=_246ccebdc_checkElse(_self_, _84140_conditional.get()._field_Default);
	};
}



inline void _246cd03c4_checkIterScopeSsc(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Uintptr _85737_it, jule::Ptr<_246135ab0_ScopeTree> _85754_tree, jule::Ptr<_246cc1c01_Scope>& _85777_s, jule::Ptr<_246cc8862_scopeChecker> _85792_ssc) {
	_85792_ssc.get()._field_it=_85737_it;
	_246ccd5e2_checkChildSsc(_self_, _85754_tree,_85777_s,_85792_ssc);
}



inline jule::Ptr<_246cc1c01_Scope> _246cd0825_checkIterScopeSc(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Uintptr _86236_it, jule::Ptr<_246135ab0_ScopeTree> _86253_tree, jule::Ptr<_246cc8862_scopeChecker> _86275_ssc) {
	jule::Ptr<_246cc1c01_Scope> _86317_scope = _246ccd229_getChild(_self_.ptr());;
	_246cd03c4_checkIterScopeSsc(_self_, _86236_it,_86253_tree,_86317_scope,_86275_ssc);
	return _86317_scope;
}



inline jule::Ptr<_246cc1c01_Scope> _246cd0bcc_checkIterScope(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Uintptr _86834_it, jule::Ptr<_246135ab0_ScopeTree>& _86852_tree) {
	jule::Ptr<_246cc8862_scopeChecker> _86917_ssc = _246cd8894_newChildChecker(_self_);;
	return _246cd0825_checkIterScopeSc(_self_, _86834_it,_86852_tree,_86917_ssc);
}



inline void _246cd0e52_checkInfIter(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_24613909c_Iter>& _87337_it) {
	jule::Ptr<_246cc2a48_InfIter> _87417_kind = jule::new_ptr<_246cc2a48_InfIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_87417_kind));;
	_87417_kind.get()._field_Scope=_246cd0bcc_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87417_kind)),_87337_it.get()._field_Scope);
}



inline void _246cd11c7_checkWhileIter(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_24613909c_Iter>& _87939_it) {
	jule::Ptr<_246139872_WhileKind> _88017_wh = _87939_it.get()._field_Kind.operator jule::Ptr<_246139872_WhileKind>();;
	if (((_88017_wh.get()._field_Expr == nullptr) && (_88017_wh.get()._field_Next == nullptr))) {
		_246cd0e52_checkInfIter(_self_, _87939_it);
		return;;
	};
	jule::Ptr<_246cc2ebb_WhileIter> _88617_kind = jule::new_ptr<_246cc2ebb_WhileIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_88617_kind));;
	_88617_kind.get()._field_Scope=_246cd0bcc_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_88617_kind)),_87939_it.get()._field_Scope);
	if ((_88017_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_246d5e398_Data> _89121_d = _246d81695_evalExpr(_246d02bbb_eval(_self_.get()._field_s, jule::Trait<_246daaacb_Lookup>(_self_, 0)), _88017_wh.get()._field_Expr);;
		if ((_89121_d == nullptr)) {
			return;;
		};
		jule::Ptr<_246d94972_Prim> _89617_prim = _246d920ac_Prim(_89121_d.get()._field_Kind.ptr());;
		if ((_89617_prim == nullptr)) {
			_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _87939_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_246d97942_IsBool(_89617_prim.ptr())))) {
			_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _87939_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_88617_kind.get()._field_Expr=_89121_d.get()._field_Model;
	};
	if (_246139bc4_IsWhileNext(_88017_wh.ptr())) {
		if ((!(_246cc122d_isValidAstStForNextSt(_88017_wh.get()._field_Next)))) {
			_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _88017_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _91617_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_246cd73cb_checkNode(_self_, _88017_wh.get()._field_Next);
		if ((_91617_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _91925_st = _self_.get()._field_scope.get()._field_Stmts[_91617_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL,_91617_n);
			if ((!(_246cc14c5_isValidStForNextSt(_91925_st)))) {
				_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _88017_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_88617_kind.get()._field_Next=_91925_st;
		};
	};
}



inline void _246cd144c_checkRangeIter(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_24613909c_Iter>& _92939_it) {
	jule::Ptr<_24613a213_RangeKind> _93017_rang = _92939_it.get()._field_Kind.operator jule::Ptr<_24613a213_RangeKind>();;
	jule::Ptr<_246d5e398_Data> _93217_d = _246d81695_evalExpr(_246d02bbb_eval(_self_.get()._field_s, jule::Trait<_246daaacb_Lookup>(_self_, 0)), _93017_rang.get()._field_Expr);;
	if ((_93217_d == nullptr)) {
		return;;
	};
	jule::Ptr<_246cc38a1_RangeIter> _93717_kind = jule::new_ptr<_246cc38a1_RangeIter>(_246cc38a1_RangeIter{._field_Expr=_93217_d, });;
	_246d5536c_rangeChecker _94117_rc = _246d5536c_rangeChecker{._field_sc=_self_, ._field_rang=_93017_rang, ._field_Kind=_93717_kind, ._field_d=_93217_d};;
	jule::Bool _94713_ok = _246d56c31_check(&_94117_rc);;
	if ((!(_94713_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_93717_kind));;
	jule::Ptr<_246cc8862_scopeChecker> _95417_ssc = _246cd8894_newChildChecker(_self_);;
	jule::Ptr<_246cc1c01_Scope> _95517_scope = _246ccd229_getChild(_self_.ptr());;
	if ((_93717_kind.get()._field_KeyA != nullptr)) {
		if (((!(_246ceab92_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _246ccc9ba_isDuplicatedIdent(_self_.ptr(), 0LLU,_93717_kind.get()._field_KeyA.get()._field_Ident))) {
			_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _93717_kind.get()._field_KeyA.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_93717_kind.get()._field_KeyA.get()._field_Ident)}));
			_246ceb5ee_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_93717_kind.get()._field_KeyA.get()._field_Scope=_95517_scope;
		_95417_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_95417_ssc.get()._field_table.get()._field_Vars,1);_95417_ssc.get()._field_table.get()._field_Vars.__push(_93717_kind.get()._field_KeyA);;
	};
	if ((_93717_kind.get()._field_KeyB != nullptr)) {
		if (((!(_246ceab92_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _246ccc9ba_isDuplicatedIdent(_self_.ptr(), 0LLU,_93717_kind.get()._field_KeyB.get()._field_Ident))) {
			_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _93717_kind.get()._field_KeyB.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_93717_kind.get()._field_KeyB.get()._field_Ident)}));
			_246ceb5ee_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_93717_kind.get()._field_KeyB.get()._field_Scope=_95517_scope;
		_95417_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_95417_ssc.get()._field_table.get()._field_Vars,1);_95417_ssc.get()._field_table.get()._field_Vars.__push(_93717_kind.get()._field_KeyB);;
	};
	_246cd03c4_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_93717_kind)),_92939_it.get()._field_Scope,_95517_scope,_95417_ssc);
	_93717_kind.get()._field_Scope=_95517_scope;
}



inline void _246cd16c2_checkIter(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_24613909c_Iter> _97933_it) {
	if (_2461393ee_IsInf(_97933_it.ptr())) {
		_246cd0e52_checkInfIter(_self_, _97933_it);
		return;;
	};
	{
		auto &_match_expr{ _97933_it.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_246139872_WhileKind>>()) {
			_case_begin_2129b4c69:;
			{
				_246cd11c7_checkWhileIter(_self_, _97933_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24613a213_RangeKind>>()) {
			_case_begin_2129b40cb:;
			{
				_246cd144c_checkRangeIter(_self_, _97933_it);
			}
		}
		else {
			_case_begin_2129b4681:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_2129b3edd:;
	};
}



inline jule::Bool _246cd19d0_checkValidContLabel(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Uintptr _99539_it) {
	jule::Ptr<_246cc8862_scopeChecker> _99617_scope = _self_;;
	_julec_label_iter:;
	if ((_99617_scope.get()._field_it == _99539_it)) {
		return true;
	};
	if ((_99617_scope.get()._field_parent != nullptr)) {
		_99617_scope=_99617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _246cd1cdd_checkValidBreakLabel(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Uintptr _101140_ptr) {
	jule::Ptr<_246cc8862_scopeChecker> _101217_scope = _self_;;
	_julec_label_iter:;
	if ((_101217_scope.get()._field_it == _101140_ptr)) {
		return true;
	};
	if ((_101217_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _102017_mtch = static_cast<jule::Uintptr>(((_246cc6497_Case*)(_101217_scope.get()._field_cse))->_field_Owner);;
		if ((_102017_mtch == _101140_ptr)) {
			return true;
		};
	};
	if ((_101217_scope.get()._field_parent != nullptr)) {
		_101217_scope=_101217_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_246cc3c9c_ContSt> _246cd20eb_checkContValidScope(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_24613a972_ContSt> _103439_c) {
	if (_246ccb711_isDeferred(_self_)) {
		_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _103439_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_103439_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_246cc3c9c_ContSt>();
	};
	jule::Ptr<_246cc8862_scopeChecker> _104417_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_104417_scope.get()._field_it == 0LLU) && (_104417_scope.get()._field_parent != nullptr)) && (_104417_scope.get()._field_owner == nullptr))) {
			_case_begin_2129bc832:;
			{
				_104417_scope=_104417_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_104417_scope.get()._field_it != 0LLU)) {
			_case_begin_2129bc8a9:;
			{
				return jule::new_ptr<_246cc3c9c_ContSt>(_246cc3c9c_ContSt{._field_It=_104417_scope.get()._field_it});
			}
		}
		_match_end_2129bc777:;
	};
	_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _103439_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _246cd2371_checkCont(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_24613a972_ContSt> _105829_c) {
	jule::Ptr<_246cc3c9c_ContSt> _105917_cont = _246cd20eb_checkContValidScope(_self_, _105829_c);;
	if ((_105917_cont == nullptr)) {
		return;;
	};
	if ((_105829_c.get()._field_Label != nullptr)) {
		jule::Ptr<_246cc75ca_scopeLabel> _106521_label = _246cbe407_findLabelParent(_105829_c.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
		if ((_106521_label == nullptr)) {
			_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _105829_c.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_105829_c.get()._field_Label.get()._field_Kind)}));
			return;;
		};
		_106521_label.get()._field_used=true;
		if (((_106521_label.get()._field_pos + 1LL) >= _106521_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _105829_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105829_c.get()._field_Label.get()._field_Kind)}));
			return;;
		};
		jule::I64 _107817_i = (_106521_label.get()._field_pos + 1LL);;
		if ((_107817_i >= _106521_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _105829_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _108225_st = _106521_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_107817_i];;
			{
				auto &_match_expr{ _108225_st };
				
				if (_match_expr.type_is<jule::Ptr<_246cc2a48_InfIter>>()) {
					_case_begin_2129c5043:;
					{
						_105917_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108225_st.operator jule::Ptr<_246cc2a48_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_246cc38a1_RangeIter>>()) {
					_case_begin_2129c6b8d:;
					{
						_105917_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108225_st.operator jule::Ptr<_246cc38a1_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_246cc2ebb_WhileIter>>()) {
					_case_begin_2129c6c04:;
					{
						_105917_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108225_st.operator jule::Ptr<_246cc2ebb_WhileIter>()));
					}
				}
				else {
					_case_begin_2129c6a4a:;
					{
						_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _105829_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105829_c.get()._field_Label.get()._field_Kind)}));
					}
				}
				_match_end_2129c693a:;
			};
		};
	};
	if ((_105917_cont.get()._field_It != 0LLU)) {
		if ((!(_246cd19d0_checkValidContLabel(_self_, _105917_cont.get()._field_It)))) {
			_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _105829_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105829_c.get()._field_Label.get()._field_Kind)}));
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_105917_cont));;
}



inline void _246cd25e6_checkLabel(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_2461332c7_LabelSt> _110534_l) {
	if ((_246ccbee7_findLabel(_self_.ptr(), _110534_l.get()._field_Ident) != nullptr)) {
		_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _110534_l.get()._field_Token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>::make({jule::Any(_110534_l.get()._field_Ident)}));
		return;;
	};
	jule::Ptr<_246cc4440_Label> _111117_label = jule::new_ptr<_246cc4440_Label>(_246cc4440_Label{._field_Ident=_110534_l.get()._field_Ident});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_111117_label));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_246cc75ca_scopeLabel>>::make({jule::new_ptr<_246cc75ca_scopeLabel>(_246cc75ca_scopeLabel{._field_token=_110534_l.get()._field_Token, ._field_label=_111117_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _246cd286b_pushGoto(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_24613367e_GotoSt> _112432_gt) {
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_246cc472b_GotoSt>(_246cc472b_GotoSt{._field_Ident=_112432_gt.get()._field_Label.get()._field_Kind})));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_246cc7a4d_scopeGoto>>::make({jule::new_ptr<_246cc7a4d_scopeGoto>(_246cc7a4d_scopeGoto{._field_gt=_112432_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})}));
}



inline void _246cd2ae1_checkPostfix(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_2461345b4_AssignSt> _113636_a) {
	if ((_113636_a.get()._field_Left.len() > 1LL)) {
		_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _113636_a.get()._field_Setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_24612a148_Expr> _114217_expr = _113636_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_246d5e398_Data> _114317_d = _246d81695_evalExpr(_246d02bbb_eval(_self_.get()._field_s, jule::Trait<_246daaacb_Lookup>(_self_, 0)), _114217_expr);;
	if ((_114317_d == nullptr)) {
		return;;
	};
	_246cc0e86_checkAssign(_self_.get()._field_s,_114317_d,nullptr,_113636_a.get()._field_Setter);
	if ((_246d92585_Ptr(_114317_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_246d9b76a_Ptr> _115121_ptr = _246d92585_Ptr(_114317_d.get()._field_Kind.ptr());;
		if (_246d9c23d_IsUnsafe(_115121_ptr.ptr())) {
			_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _113636_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_113636_a.get()._field_Setter.get()._field_Kind),jule::Any(_246d90396_Str(_114317_d.get()._field_Kind.ptr()))}));
			return;;
		};
	} else {
		if (((_246d920ac_Prim(_114317_d.get()._field_Kind.ptr()) == nullptr) || (!(_246ca3c5a_IsNum(_246d920ac_Prim(_114317_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _113636_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_113636_a.get()._field_Setter.get()._field_Kind),jule::Any(_246d90396_Str(_114317_d.get()._field_Kind.ptr()))}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_246cc4ad3_Postfix>(_246cc4ad3_Postfix{._field_Expr=_114317_d.get()._field_Model, ._field_Op=_113636_a.get()._field_Setter.get()._field_Kind})));;
}



inline jule::Bool _246cd2dee_isNewAssignIdent(_246cc8862_scopeChecker* _self_, jule::Str _116935_ident) {
	if ((_2449714c9_IsIgnoreIdent(_116935_ident) || _116935_ident.empty())) {
		return false;
	};
	return (_246d5c61b_defByIdent((*_self_)._field_table.ptr(), _116935_ident,false) == nullptr);
}



inline jule::Bool _246cd3350_checkStructureAssignOp(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_246142319_StructIns>& _117647_s, jule::Ptr<_2461345b4_AssignSt>& _117667_a, jule::Ptr<_246d5e398_Data>& _117686_r) {
	jule::Ptr<_246cabb42_FnIns> _117917_overload = nullptr;;
	{
		auto &_match_expr{ _117667_a.get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_2129dba71:;
			{
				_117917_overload=_117647_s.get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_2129dbad7:;
			{
				_117917_overload=_117647_s.get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_2129dbb4d:;
			{
				_117917_overload=_117647_s.get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_2129dbbb4:;
			{
				_117917_overload=_117647_s.get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_2129da960:;
			{
				_117917_overload=_117647_s.get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_2129da9c6:;
			{
				_117917_overload=_117647_s.get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_2129daa3c:;
			{
				_117917_overload=_117647_s.get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_2129daaa3:;
			{
				_117917_overload=_117647_s.get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_2129dbd6d:;
			{
				_117917_overload=_117647_s.get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_2129dbdd4:;
			{
				_117917_overload=_117647_s.get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_2129da7c8:;
			{
				_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _117667_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_117667_a.get()._field_Setter.get()._field_Kind),jule::Any(_24610b965_Str(_117647_s.ptr()))}));
				return false;
			}
		}
		_match_end_2129da355:;
	};
	if ((_117917_overload == nullptr)) {
		_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _117667_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_117667_a.get()._field_Setter.get()._field_Kind),jule::Any(_24610b965_Str(_117647_s.ptr()))}));
		return false;
	};
	jule::Ptr<_246cab955_ParamIns> _121117_p = _117917_overload.get()._field_Params[1LL];;
	return _246d031b6_checkAssignType(_self_.get()._field_s, _121117_p.get()._field_Decl.get()._field_Reference,_121117_p.get()._field_Kind,_117686_r,_117667_a.get()._field_Setter);
}



inline void _246cd35c5_checkSingleAssign(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_2461345b4_AssignSt>& _121542_a) {
	jule::Ptr<_246d5e398_Data> _121617_l = nullptr;;
	if ((!(_2449714c9_IsIgnoreIdent(_121542_a.get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_24612a148_Expr> _121921_expr = _121542_a.get()._field_Left[0LL].get()._field_Expr;;
		_121617_l=_246d81695_evalExpr(_246d02bbb_eval(_self_.get()._field_s, jule::Trait<_246daaacb_Lookup>(_self_, 0)), _121921_expr);
		if ((_121617_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_246d60e16_Eval> _122617_eval = nullptr;;
	if ((_121617_l != nullptr)) {
		_122617_eval=_246d028ad_evalp(_self_.get()._field_s, jule::Trait<_246daaacb_Lookup>(_self_, 0),_121617_l.get()._field_Kind);
	} else {
		_122617_eval=_246d02bbb_eval(_self_.get()._field_s, jule::Trait<_246daaacb_Lookup>(_self_, 0));
	};
	_122617_eval.get()._field_unsafety=_246ccace8_isUnsafe(_self_);
	jule::Ptr<_246d5e398_Data> _123317_r = _246d81695_evalExpr(_122617_eval, _121542_a.get()._field_Right);;
	if ((_123317_r == nullptr)) {
		return;;
	};
	if ((_121617_l == nullptr)) {
		if (_246d91133_Void(_123317_r.get()._field_Kind.ptr())) {
			_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _121542_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_123317_r));;
		return;;
	};
	if ((!(_246cc0e86_checkAssign(_self_.get()._field_s,_121617_l,_123317_r,_121542_a.get()._field_Setter)))) {
		return;;
	};
	if ((_246d93c4b_Tup(_123317_r.get()._field_Kind.ptr()) != nullptr)) {
		_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _121542_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_246ca5a2b_OperandExprModel> _125517_lm = jule::new_ptr<_246ca5a2b_OperandExprModel>(_246ca5a2b_OperandExprModel{._field_Kind=_121617_l.get()._field_Kind, ._field_Model=_121617_l.get()._field_Model});;
	jule::Ptr<_246ca5a2b_OperandExprModel> _125917_rm = jule::new_ptr<_246ca5a2b_OperandExprModel>(_246ca5a2b_OperandExprModel{._field_Kind=_123317_r.get()._field_Kind, ._field_Model=_123317_r.get()._field_Model});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_246cc5056_Assign>(_246cc5056_Assign{._field_L=_125517_lm, ._field_R=_125917_rm, ._field_Op=_121542_a.get()._field_Setter})));;
	if ((_121542_a.get()._field_Setter.get()._field_Kind != jule::Str("=", 1))) {
		jule::Ptr<_246142319_StructIns> _126621_strct = _246d9350e_Struct(_121617_l.get()._field_Kind.ptr());;
		if ((_126621_strct != nullptr)) {
			_246cd3350_checkStructureAssignOp(_self_, _126621_strct,_121542_a,_123317_r);
			return;;
		};
		_121542_a.get()._field_Setter.get()._field_Kind=_121542_a.get()._field_Setter.get()._field_Kind.slice(0LL,(_121542_a.get()._field_Setter.get()._field_Kind.len() - 1LL));
		_246d838a6_binaryEval _127321_solver = static__246d842ad_new(_122617_eval,_121542_a.get()._field_Setter);;
		_123317_r=_246d88e3e_solveExplicit(&_127321_solver, _121617_l,_123317_r);
		if ((_123317_r == nullptr)) {
			return;;
		};
		_121542_a.get()._field_Setter.get()._field_Kind+=jule::Str("=", 1);
		return;;
	};
	_246d49b69_assignTypeChecker _128217_checker = _246d49b69_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_121617_l.get()._field_Kind, ._field_d=_123317_r, ._field_errorToken=_121542_a.get()._field_Setter};;
	if (_246d4ace1_check(&_128217_checker)) {
		_125917_rm.get()._field_Model=_123317_r.get()._field_Model;
		_125517_lm.get()._field_Model=_121617_l.get()._field_Model;
	};
}



inline void _246cd3b03_processEndPartOfMultiAssign(_246cc8862_scopeChecker* _self_, jule::Ptr<_246cc540d_MultiAssign>& _129451_st, jule::Ptr<_2461345b4_AssignSt>& _129514_a, jule::Ptr<_246134075_AssignLeft>& _129533_lexpr, jule::Ptr<_246d5e398_Data>& _129558_l, jule::Ptr<_246d5e398_Data>& _129573_r) {
	if (_2449714c9_IsIgnoreIdent(_129533_lexpr.get()._field_Ident)) {
		if (_246d91133_Void(_129573_r.get()._field_Kind.ptr())) {
			_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _129514_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_129451_st.get()._field_L = jule::alloc_for_append(_129451_st.get()._field_L,1);_129451_st.get()._field_L.__push(nullptr);;
		return;;
	};
	if ((_129514_a.get()._field_Declarative && _246cd2dee_isNewAssignIdent(&(*_self_), _129533_lexpr.get()._field_Ident))) {
		if (_246ccc9ba_isDuplicatedIdent(&(*_self_), 0LLU,_129533_lexpr.get()._field_Ident)) {
			_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _129533_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_129533_lexpr.get()._field_Ident)}));
			_246ceb5ee_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_246ccb238_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_246d16372_Var> _131321_v = jule::new_ptr<_246d16372_Var>(_246d16372_Var{._field_Scope=(*_self_)._field_scope, ._field_Token=_129533_lexpr.get()._field_Token, ._field_Ident=_129533_lexpr.get()._field_Ident, ._field_Mutable=_129533_lexpr.get()._field_Mutable, ._field_Reference=_129533_lexpr.get()._field_Reference, ._field_Value=jule::new_ptr<_246d60421_Value>(_246d60421_Value{._field_Expr=_129514_a.get()._field_Right, ._field_Data=_129573_r}), });;
		_246d0dab7_checkVar((*_self_)._field_s, _131321_v);
		_129451_st.get()._field_L = jule::alloc_for_append(_129451_st.get()._field_L,1);_129451_st.get()._field_L.__push(static_cast<jule::Any>(_131321_v));;
		(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_131321_v);;
		(*_self_)._field_scope.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_Stmts,1);(*_self_)._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_131321_v));;
		return;;
	};
	if ((_129533_lexpr.get()._field_Mutable || _129533_lexpr.get()._field_Reference)) {
		_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _129533_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_129533_lexpr.get()._field_Ident)}));
		_246ceb5ee_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_246cc0e86_checkAssign((*_self_)._field_s,_129558_l,_129573_r,_129514_a.get()._field_Setter)))) {
		return;;
	};
	;
	_246d05e00_checkValidityForInitExpr((*_self_)._field_s, _129558_l.get()._field_Mutable,false,_129558_l.get()._field_Kind,_129573_r,_129514_a.get()._field_Setter);
	_246d49b69_assignTypeChecker _134717_checker = _246d49b69_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_129558_l.get()._field_Kind, ._field_d=_129573_r, ._field_errorToken=_129514_a.get()._field_Setter};;
	_246d4ace1_check(&_134717_checker);
	_129451_st.get()._field_L = jule::alloc_for_append(_129451_st.get()._field_L,1);_129451_st.get()._field_L.__push(_129558_l.get()._field_Model);;
}



inline void _246cd3d89_checkMultiAssign(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_2461345b4_AssignSt>& _135741_a) {
	jule::Ptr<_246d5e398_Data> _135817_rd = _246d81695_evalExpr(_246d02bbb_eval(_self_.get()._field_s, jule::Trait<_246daaacb_Lookup>(_self_, 0)), _135741_a.get()._field_Right);;
	if ((_135817_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_246d5e398_Data>> _136217_right = _246cc01b6_getDatasFromTupleData(_135817_rd);;
	if ((_136217_right.len() == 1LL)) {
		{
			auto &_match_expr{ _136217_right[0LL].get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_246ca6c6e_IndexingExprModel>>()) {
				_case_begin_212a0e533:;
				{
					jule::Ptr<_246ca6c6e_IndexingExprModel> _136625_iem = _136217_right[0LL].get()._field_Model.operator jule::Ptr<_246ca6c6e_IndexingExprModel>();;
					if ((_246d939d7_Map(_136625_iem.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
						_136217_right=jule::Slice<jule::Ptr<_246d5e398_Data>>::make({jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=_246d939d7_Map(_136625_iem.get()._field_Expr.get()._field_Kind.ptr()).get()._field_Val, }),jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("bool", 4)), 6)}), })});
					};
				}
			}
			_match_end_212a0e489:;
		};
	};
	{
		
		if ((_135741_a.get()._field_Left.len() > _136217_right.len())) {
			_case_begin_212a0e874:;
			{
				_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _135741_a.get()._field_Setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_135741_a.get()._field_Left.len() < _136217_right.len())) {
			_case_begin_212a0e8da:;
			{
				_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _135741_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_212a0d9c7:;
	};
	jule::Ptr<_246cc540d_MultiAssign> _138517_st = jule::new_ptr<_246cc540d_MultiAssign>(_246cc540d_MultiAssign{._field_R=_135817_rd.get()._field_Model});;
	{
		auto &expr = _135741_a.get()._field_Left;
		auto it = expr.begin();
		_iter_begin_212745302:;
		if (it != expr.end()) {
			jule::I64 _138813_i = it - expr.begin();
			{
				jule::Ptr<_246134075_AssignLeft> _138921_lexpr = _135741_a.get()._field_Left[_138813_i];;
				jule::Ptr<_246d5e398_Data> _139021_l = nullptr;;
				if (((!(_2449714c9_IsIgnoreIdent(_138921_lexpr.get()._field_Ident))) && ((!(_135741_a.get()._field_Declarative)) || (!(_246cd2dee_isNewAssignIdent(_self_.ptr(), _138921_lexpr.get()._field_Ident)))))) {
					_139021_l=_246d81695_evalExpr(_246d02bbb_eval(_self_.get()._field_s, jule::Trait<_246daaacb_Lookup>(_self_, 0)), _138921_lexpr.get()._field_Expr);
					if ((_139021_l == nullptr)) {
						goto _iter_next_212745302;
					};
				};
				jule::Ptr<_246d5e398_Data> _139821_r = _136217_right[_138813_i];;
				_246cd3b03_processEndPartOfMultiAssign(_self_.ptr(), _138517_st,_135741_a,_138921_lexpr,_139021_l,_139821_r);
			}
			_iter_next_212745302:;
			++it;
			_138813_i++;
			goto _iter_begin_212745302;
		}
		_iter_end_212745302:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_138517_st));;
}



inline void _246cd410e_checkAssignSt(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_2461345b4_AssignSt> _140437_a) {
	{
		
		if (_244973575_IsPostfixOp(_140437_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_212a1886c:;
			{
				_246cd2ae1_checkPostfix(_self_, _140437_a);
			}
		}
		else if (((_140437_a.get()._field_Left.len() == 1LL) && (!(_140437_a.get()._field_Declarative)))) {
			_case_begin_212a185b4:;
			{
				_246cd35c5_checkSingleAssign(_self_, _140437_a);
			}
		}
		else {
			_case_begin_212a17eed:;
			{
				_246cd3d89_checkMultiAssign(_self_, _140437_a);
			}
		}
		_match_end_212a17e21:;
	};
}



inline jule::Ptr<_246cc1c01_Scope> _246cd44b6_checkCaseScope(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_246cc6497_Case>& _141535_c, jule::Ptr<_246135ab0_ScopeTree>& _141550_tree) {
	jule::Ptr<_246cc8862_scopeChecker> _141617_ssc = _246cd8894_newChildChecker(_self_);;
	_141617_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_141535_c));
	return _246ccd999_checkChildSc(_self_, _141550_tree,_141617_ssc);
}



inline jule::Ptr<_246cc6497_Case> _246cd49b1_checkCase(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_246cc594c_Match> _142133_m, jule::I64 _142144_i, jule::Ptr<_24613c369_Case> _142156_c, jule::Ptr<_246d5e398_Data> _142175_expr) {
	jule::Ptr<_246cc6497_Case> _142217_case = _142133_m.get()._field_Cases[_142144_i];;
	_142217_case.get()._field_Exprs=jule::Slice<jule::Ptr<_246d5e398_Data>>::alloc(0LL, _142156_c.get()._field_Exprs.len());
	jule::Bool _142417_genericMatched = false;;
	jule::Ptr<_246d60e16_Eval> _142517_eval = _246d02bbb_eval(_self_.get()._field_s, jule::Trait<_246daaacb_Lookup>(_self_, 0));;
	{
		auto &expr = _142156_c.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_212a1dc7e:;
		if (it != expr.end()) {
			jule::Ptr<_24612a148_Expr> _142621_e = *it;
			{
				jule::Ptr<_246d5e398_Data> _142721_d = _246d81079_evalExprKind(_142517_eval, _142621_e.get()._field_Kind);;
				if ((_142721_d == nullptr)) {
					goto _iter_next_212a1dc7e;
				};
				if (_142133_m.get()._field_TypeMatch) {
					_142217_case.get()._field_Exprs = jule::alloc_for_append(_142217_case.get()._field_Exprs,1);_142217_case.get()._field_Exprs.__push(_142721_d);;
					if ((_246cbee1e_countMatchType(_142133_m,_142721_d.get()._field_Kind) > 1LL)) {
						_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _142621_e.get()._field_Token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_142721_d.get()._field_Kind.ptr()))}));
					};
					if (_142175_expr.get()._field_Kind.get()._field_Generic) {
						_142417_genericMatched=(_142417_genericMatched || _246d906a4_Equals(_142175_expr.get()._field_Kind, _142721_d.get()._field_Kind));
					} else {
						if ((_246d92a5d_TypeEnum(_142175_expr.get()._field_Kind.ptr()) != nullptr)) {
							_246d03617_checkTypeCompatibility(_self_.get()._field_s, _142175_expr.get()._field_Kind,_142721_d.get()._field_Kind,_142621_e.get()._field_Token);
						} else {
							jule::Ptr<_246cb3e9b_Trait> _144229_trt = _246d93773_Trait(_142175_expr.get()._field_Kind.ptr());;
							if ((_144229_trt != nullptr)) {
								_246d03617_checkTypeCompatibility(_self_.get()._field_s, _142175_expr.get()._field_Kind,_142721_d.get()._field_Kind,_142621_e.get()._field_Token);
							};
						};
					};
					goto _iter_next_212a1dc7e;
				};
				if (_142721_d.get()._field_Decl) {
					_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _142621_e.get()._field_Token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_246ceb5ee_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_212a1dc7e;
				};
				_142217_case.get()._field_Exprs = jule::alloc_for_append(_142217_case.get()._field_Exprs,1);_142217_case.get()._field_Exprs.__push(_142721_d);;
				_246d49b69_assignTypeChecker _146021_checker = _246d49b69_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_142175_expr.get()._field_Kind, ._field_d=_142721_d, ._field_errorToken=_142621_e.get()._field_Token};;
				_246d4ace1_check(&_146021_checker);
			}
			_iter_next_212a1dc7e:;
			++it;
			goto _iter_begin_212a1dc7e;
		}
		_iter_end_212a1dc7e:;
	};
	if ((((!(_142133_m.get()._field_TypeMatch)) || (!(_142175_expr.get()._field_Kind.get()._field_Generic))) || _142417_genericMatched)) {
		_142217_case.get()._field_Scope=_246cd44b6_checkCaseScope(_self_, _142217_case,_142156_c.get()._field_Scope);
	};
	return _142217_case;
}



inline void _246cd4d79_checkCases(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_24613ca40_MatchCase>& _147435_m, jule::Ptr<_246cc594c_Match> _147454_rm, jule::Ptr<_246d5e398_Data> _147470_expr) {
	_147454_rm.get()._field_Cases=jule::Slice<jule::Ptr<_246cc6497_Case>>::alloc(0LL, _147435_m.get()._field_Cases.len());
	{
		auto &expr = _147435_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_212a283b5:;
		if (it != expr.end()) {
			jule::I64 _147613_i = it - expr.begin();
			{
				jule::Ptr<_246cc6497_Case> _147721_case = jule::new_ptr<_246cc6497_Case>(_246cc6497_Case{._field_Owner=_147454_rm, });;
				if ((_147613_i > 0LL)) {
					_147454_rm.get()._field_Cases[(_147613_i - 1LL)].get()._field_Next=_147721_case;
				};
				_147454_rm.get()._field_Cases = jule::alloc_for_append(_147454_rm.get()._field_Cases,1);_147454_rm.get()._field_Cases.__push(_147721_case);;
			}
			_iter_next_212a283b5:;
			++it;
			_147613_i++;
			goto _iter_begin_212a283b5;
		}
		_iter_end_212a283b5:;
	};
	if (((_147454_rm.get()._field_Default != nullptr) && (_147435_m.get()._field_Cases.len() > 0LL))) {
		_147454_rm.get()._field_Cases[(_147454_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_147454_rm.get()._field_Default;
	};
	{
		auto &expr = _147435_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_212a2b74d:;
		if (it != expr.end()) {
			jule::I64 _149014_i = it - expr.begin();
			jule::Ptr<_24613c369_Case> _149021_c = *it;
			{
				_246cd49b1_checkCase(_self_, _147454_rm,_149014_i,_149021_c,_147470_expr);
			}
			_iter_next_212a2b74d:;
			++it;
			_149014_i++;
			goto _iter_begin_212a2b74d;
		}
		_iter_end_212a2b74d:;
	};
}



inline jule::Ptr<_246cc6497_Case> _246cd5231_checkDefault(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_246cc594c_Match> _149536_m, jule::Ptr<_24613b29c_Else> _149551_d) {
	jule::Ptr<_246cc6497_Case> _149617_def = jule::new_ptr<_246cc6497_Case>(_246cc6497_Case{._field_Owner=_149536_m, });;
	_149617_def.get()._field_Scope=_246cd44b6_checkCaseScope(_self_, _149617_def,_149551_d.get()._field_Scope);
	return _149617_def;
}



inline void _246cd54a6_checkComptimePanic(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_246cc1c01_Scope>& _150339_s) {
	if ((_150339_s.get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _150813_stmt = _150339_s.get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _150813_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_246d5e398_Data>>()) {
			_case_begin_212a2ecb2:;
			{
				jule::Ptr<_246d5e398_Data> _151117_d = _150813_stmt.operator jule::Ptr<_246d5e398_Data>();;
				{
					auto &_match_expr{ _151117_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_246ca905c_BuiltinPanicCallExprModel>>()) {
						_case_begin_212a30ba3:;
						{
							jule::Ptr<_246ca905c_BuiltinPanicCallExprModel> _151421_m = _151117_d.get()._field_Model.operator jule::Ptr<_246ca905c_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ _151421_m.get()._field_Expr };
								
								if (_match_expr.type_is<jule::Ptr<_2461e4872_Const>>()) {
									_case_begin_212a31be8:;
									{
										jule::Ptr<_2461e4872_Const> _151725_c = _151421_m.get()._field_Expr.operator jule::Ptr<_2461e4872_Const>();;
										if (_2462456a3_IsStr(_151725_c.ptr())) {
											jule::Ptr<_246cc8862_scopeChecker> _151933_root = _246ccbbd9_getHardRoot(_self_);;
											_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _151933_root.get()._field_calledFrom,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>::make({jule::Any(_246245de0_ReadStr(_151725_c.ptr()))}));
										};
									}
								}
								_match_end_212a319c8:;
							};
						}
					}
					_match_end_212a30b4d:;
				};
			}
		}
		_match_end_212a2eb2a:;
	};
}



inline void _246cd57c5_pushTypeMatch(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_246cc594c_Match> _152737_tm, jule::Ptr<_24613ca40_MatchCase>& _152754_m) {
	if (_152737_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic) {
		{
			auto &expr = _152737_tm.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_212a310d2:;
			if (it != expr.end()) {
				jule::Ptr<_246cc6497_Case> _153125_c = *it;
				{
					if ((_153125_c.get()._field_Scope != nullptr)) {
						_246cd54a6_checkComptimePanic(_self_, _153125_c.get()._field_Scope);
						_152737_tm.get()._field_Default=_153125_c;
						_152737_tm.get()._field_Cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_212a310d2:;
				++it;
				goto _iter_begin_212a310d2;
			}
			_iter_end_212a310d2:;
		};
		if ((_152754_m.get()._field_Default != nullptr)) {
			_152737_tm.get()._field_Cases=nullptr;
			_152737_tm.get()._field_Default=_246cd5231_checkDefault(_self_, _152737_tm,_152754_m.get()._field_Default);
			if ((_152737_tm.get()._field_Default != nullptr)) {
				_246cd54a6_checkComptimePanic(_self_, _152737_tm.get()._field_Default.get()._field_Scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_152737_tm));;
}



inline void _246cd5a4a_checkTypeMatch(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_24613ca40_MatchCase>& _155139_m) {
	jule::Ptr<_246d5e398_Data> _155217_d = _246d81387_eval(_246d02bbb_eval(_self_.get()._field_s, jule::Trait<_246daaacb_Lookup>(_self_, 0)), _155139_m.get()._field_Expr);;
	if ((_155217_d == nullptr)) {
		return;;
	};
	if (((!(_155217_d.get()._field_Kind.get()._field_Generic)) && (!(((((_246d920ac_Prim(_155217_d.get()._field_Kind.ptr()) != nullptr) && _246d97e1a_IsAny(_246d920ac_Prim(_155217_d.get()._field_Kind.ptr()).ptr())) || (_246d93773_Trait(_155217_d.get()._field_Kind.ptr()) != nullptr)) || (_246d92a5d_TypeEnum(_155217_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _155139_m.get()._field_Expr.get()._field_Token,jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_246cc594c_Match> _156317_tm = jule::new_ptr<_246cc594c_Match>(_246cc594c_Match{._field_Expr=_155217_d, ._field_TypeMatch=true, });;
	if (((!(_156317_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic)) && (_155139_m.get()._field_Default != nullptr))) {
		_156317_tm.get()._field_Default=_246cd5231_checkDefault(_self_, _156317_tm,_155139_m.get()._field_Default);
	};
	_246cd4d79_checkCases(_self_, _155139_m,_156317_tm,_155217_d);
	_246cd57c5_pushTypeMatch(_self_, _156317_tm,_155139_m);
}



inline void _246cd5cc0_checkCommonMatch(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_24613ca40_MatchCase>& _157641_m) {
	jule::Ptr<_246d5e398_Data> _157717_d = nullptr;;
	if ((_157641_m.get()._field_Expr == nullptr)) {
		_157717_d=jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Constant=static__246236793_NewBool(true)});
		_157717_d.get()._field_Model=static_cast<jule::Any>(_157717_d.get()._field_Constant);
	} else {
		_157717_d=_246d81695_evalExpr(_246d02bbb_eval(_self_.get()._field_s, jule::Trait<_246daaacb_Lookup>(_self_, 0)), _157641_m.get()._field_Expr);
		if ((_157717_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_246cc594c_Match> _159117_mc = jule::new_ptr<_246cc594c_Match>(_246cc594c_Match{._field_Expr=_157717_d, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_159117_mc));;
	if ((_157641_m.get()._field_Default != nullptr)) {
		_159117_mc.get()._field_Default=_246cd5231_checkDefault(_self_, _159117_mc,_157641_m.get()._field_Default);
	};
	_246cd4d79_checkCases(_self_, _157641_m,_159117_mc,_157717_d);
}



inline void _246cd6045_checkMatch(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_24613ca40_MatchCase> _160334_m) {
	if (_160334_m.get()._field_TypeMatch) {
		_246cd5a4a_checkTypeMatch(_self_, _160334_m);
		return;;
	};
	_246cd5cc0_checkCommonMatch(_self_, _160334_m);
}



inline void _246cd62ba_checkFall(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_24613396a_FallSt> _161129_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _246ccb711_isDeferred(_self_))) {
		_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _161129_f.get()._field_Token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_246cc6497_Case* _161917_case = ((_246cc6497_Case*)(_self_.get()._field_cse));;
	if ((_161917_case->_field_Next == nullptr)) {
		_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _161129_f.get()._field_Token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_246ceb5ee_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_246cc6a4c_FallSt>(_246cc6a4c_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_161917_case->_field_Next))})));;
}



inline jule::Ptr<_246cc4154_BreakSt> _246cd65c8_checkBreakWithLabel(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_24613a5ba_BreakSt> _163139_b) {
	jule::Ptr<_246cc4154_BreakSt> _163217_brk = _246cd68d6_checkPlainBreak(_self_, _163139_b);;
	if ((_163217_brk == nullptr)) {
		return nullptr;
	};
	_163217_brk.get()._field_It=0LLU;
	_163217_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_246cc75ca_scopeLabel> _164217_label = _246cbe407_findLabelParent(_163139_b.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
	if ((_164217_label == nullptr)) {
		_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _163139_b.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_163139_b.get()._field_Label.get()._field_Kind)}));
		return nullptr;
	};
	_164217_label.get()._field_used=true;
	if (((_164217_label.get()._field_pos + 1LL) >= _164217_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _163139_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163139_b.get()._field_Label.get()._field_Kind)}));
		return nullptr;
	};
	jule::I64 _165513_i = (_164217_label.get()._field_pos + 1LL);;
	if ((_165513_i >= _164217_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _163139_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163139_b.get()._field_Label.get()._field_Kind)}));
	} else {
		jule::Any _165921_st = _164217_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_165513_i];;
		{
			auto &_match_expr{ _165921_st };
			
			if (_match_expr.type_is<jule::Ptr<_246cc2a48_InfIter>>()) {
				_case_begin_212a4d781:;
				{
					_163217_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_165921_st.operator jule::Ptr<_246cc2a48_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_246cc38a1_RangeIter>>()) {
				_case_begin_212a506a6:;
				{
					_163217_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_165921_st.operator jule::Ptr<_246cc38a1_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_246cc2ebb_WhileIter>>()) {
				_case_begin_212a5071c:;
				{
					_163217_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_165921_st.operator jule::Ptr<_246cc2ebb_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_246cc594c_Match>>()) {
				_case_begin_212a50783:;
				{
					_163217_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_165921_st.operator jule::Ptr<_246cc594c_Match>()));
				}
			}
			else {
				_case_begin_212a50563:;
				{
					_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _163139_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163139_b.get()._field_Label.get()._field_Kind)}));
				}
			}
			_match_end_212a50453:;
		};
	};
	if ((_163217_brk.get()._field_It != 0LLU)) {
		if ((!(_246cd1cdd_checkValidBreakLabel(_self_, _163217_brk.get()._field_It)))) {
			_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _163139_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163139_b.get()._field_Label.get()._field_Kind)}));
		};
	};
	if ((_163217_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_246cd1cdd_checkValidBreakLabel(_self_, _163217_brk.get()._field_Mtch)))) {
			_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _163139_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163139_b.get()._field_Label.get()._field_Kind)}));
		};
	};
	return _163217_brk;
}



inline jule::Ptr<_246cc4154_BreakSt> _246cd68d6_checkPlainBreak(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_24613a5ba_BreakSt> _168935_b) {
	if (_246ccb711_isDeferred(_self_)) {
		_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _168935_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_246cc8862_scopeChecker> _169517_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_169517_scope.get()._field_it == 0LLU) && (_169517_scope.get()._field_cse == 0LLU)) && (_169517_scope.get()._field_parent != nullptr)) && (_169517_scope.get()._field_owner == nullptr))) {
			_case_begin_212a5715d:;
			{
				_169517_scope=_169517_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_169517_scope.get()._field_it != 0LLU)) {
			_case_begin_212a571d5:;
			{
				return jule::new_ptr<_246cc4154_BreakSt>(_246cc4154_BreakSt{._field_It=_169517_scope.get()._field_it, });
			}
		}
		else if ((_169517_scope.get()._field_cse != 0LLU)) {
			_case_begin_212a5725c:;
			{
				return jule::new_ptr<_246cc4154_BreakSt>(_246cc4154_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_246cc6497_Case*)(_169517_scope.get()._field_cse))->_field_Owner))});
			}
		}
		_match_end_212a57092:;
	};
	_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _168935_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _246cd6b5b_checkBreak(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_24613a5ba_BreakSt> _171130_b) {
	if ((_171130_b.get()._field_Label != nullptr)) {
		jule::Ptr<_246cc4154_BreakSt> _171321_brk = _246cd65c8_checkBreakWithLabel(_self_, _171130_b);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_171321_brk));;
		return;;
	};
	jule::Ptr<_246cc4154_BreakSt> _171817_brk = _246cd68d6_checkPlainBreak(_self_, _171130_b);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_171817_brk));;
}



inline void _246cd6dd1_checkRet(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_24613893c_RetSt> _172232_r) {
	if (_246ccb711_isDeferred(_self_)) {
		_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _172232_r.get()._field_Token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_246cc6ec0_RetSt> _172717_rt = jule::new_ptr<_246cc6ec0_RetSt>(_246cc6ec0_RetSt{._field_Func=_246ccb975_getRoot(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_172717_rt));;
	jule::Ptr<_246d574c3_retTypeChecker> _173217_rtc = jule::new_ptr<_246d574c3_retTypeChecker>(_246d574c3_retTypeChecker{._field_sc=_self_, ._field_f=_172717_rt.get()._field_Func, ._field_errorToken=_172232_r.get()._field_Token, });;
	jule::Bool _173713_ok = _246d583b4_check(_173217_rtc.ptr(), _172232_r.get()._field_Expr);;
	if ((!(_173713_ok))) {
		return;;
	};
	if (((_172232_r.get()._field_Expr == nullptr) && (_173217_rtc.get()._field_vars.len() == 0LL))) {
		return;;
	};
	_172717_rt.get()._field_Vars=_173217_rtc.get()._field_vars;
	if ((_172232_r.get()._field_Expr != nullptr)) {
		_172717_rt.get()._field_Expr=_173217_rtc.get()._field_model;
	};
}



inline void _246cd7156_checkUseExpr(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_24612a9d9_UseExpr> _175332_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _175332_ue.get()._field_Token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_246ccb711_isDeferred(_self_)) {
		_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _175332_ue.get()._field_Token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _175332_ue.get()._field_Token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _246cd73cb_checkNode(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Any& _176934_node) {
	{
		auto &_match_expr{ _176934_node };
		
		if (_match_expr.type_is<jule::Ptr<_246135ab0_ScopeTree>>()) {
			_case_begin_212a665ce:;
			{
				_246cce02c_checkAnonScope(_self_, _176934_node.operator jule::Ptr<_246135ab0_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246138585_VarDecl>>()) {
			_case_begin_212a65ea2:;
			{
				_246cccc40_checkVarDecl(_self_, _176934_node.operator jule::Ptr<_246138585_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24613bde6_TypeAliasDecl>>()) {
			_case_begin_212a6639d:;
			{
				_246ccceb5_checkTypeAliasDecl(_self_, _176934_node.operator jule::Ptr<_24613bde6_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24612a148_Expr>>()) {
			_case_begin_212a66766:;
			{
				_246cce5c1_checkExpr(_self_, _176934_node.operator jule::Ptr<_24612a148_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24613b720_Conditional>>()) {
			_case_begin_212a66920:;
			{
				_246ccee62_checkConditional(_self_, _176934_node.operator jule::Ptr<_24613b720_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24613909c_Iter>>()) {
			_case_begin_212a66986:;
			{
				_246cd16c2_checkIter(_self_, _176934_node.operator jule::Ptr<_24613909c_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24613a972_ContSt>>()) {
			_case_begin_212a669ec:;
			{
				_246cd2371_checkCont(_self_, _176934_node.operator jule::Ptr<_24613a972_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2461332c7_LabelSt>>()) {
			_case_begin_212a66a63:;
			{
				_246cd25e6_checkLabel(_self_, _176934_node.operator jule::Ptr<_2461332c7_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24613367e_GotoSt>>()) {
			_case_begin_212a66ac9:;
			{
				_246cd286b_pushGoto(_self_, _176934_node.operator jule::Ptr<_24613367e_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2461345b4_AssignSt>>()) {
			_case_begin_212a66b40:;
			{
				_246cd410e_checkAssignSt(_self_, _176934_node.operator jule::Ptr<_2461345b4_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24613ca40_MatchCase>>()) {
			_case_begin_212a66ba6:;
			{
				_246cd6045_checkMatch(_self_, _176934_node.operator jule::Ptr<_24613ca40_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24613396a_FallSt>>()) {
			_case_begin_212a66c1c:;
			{
				_246cd62ba_checkFall(_self_, _176934_node.operator jule::Ptr<_24613396a_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24613a5ba_BreakSt>>()) {
			_case_begin_212a66c83:;
			{
				_246cd6b5b_checkBreak(_self_, _176934_node.operator jule::Ptr<_24613a5ba_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24613893c_RetSt>>()) {
			_case_begin_212a66ce9:;
			{
				_246cd6dd1_checkRet(_self_, _176934_node.operator jule::Ptr<_24613893c_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24612a9d9_UseExpr>>()) {
			_case_begin_212a66d60:;
			{
				_246cd7156_checkUseExpr(_self_, _176934_node.operator jule::Ptr<_24612a9d9_UseExpr>());
			}
		}
		else {
			_case_begin_212a66139:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_212a6604b:;
	};
}



inline void _246cd75a7_checkResult(jule::Ptr<_246cc8862_scopeChecker> _self_) {
	_2461354a5_Stmt _180717_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _180717_stmt._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_24612a9d9_UseExpr>>()) {
			_case_begin_212a70b5a:;
			{
				jule::Ptr<_24612a9d9_UseExpr> _181021_ue = _180717_stmt._field_Data.operator jule::Ptr<_24612a9d9_UseExpr>();;
				jule::Ptr<_246d5e398_Data> _181121_d = _246d81695_evalExpr(_246d02bbb_eval(_self_.get()._field_s, jule::Trait<_246daaacb_Lookup>(_self_, 0)), _181021_ue.get()._field_Expr);;
				if ((_181121_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_181121_d));;
				jule::Ptr<_246d574c3_retTypeChecker> _181621_rtc = jule::new_ptr<_246d574c3_retTypeChecker>(_246d574c3_retTypeChecker{._field_sc=_self_, ._field_types=_2461a97e3_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_181021_ue.get()._field_Expr.get()._field_Token, });;
				_246d583b4_check(_181621_rtc.ptr(), _181021_ue.get()._field_Expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24612a148_Expr>>()) {
			_case_begin_212a70bc1:;
			{
				jule::Ptr<_24612a148_Expr> _182321_expr = _180717_stmt._field_Data.operator jule::Ptr<_24612a148_Expr>();;
				jule::Ptr<_246d5e398_Data> _182421_d = _246d81695_evalExpr(_246d02bbb_eval(_self_.get()._field_s, jule::Trait<_246daaacb_Lookup>(_self_, 0)), _182321_expr);;
				if ((_182421_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _182421_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_246caa349_BuiltinErrorCallExprModel>>()) {
						_case_begin_212a75731:;
						{
							jule::Ptr<_246caa349_BuiltinErrorCallExprModel> _183025_m = _182421_d.get()._field_Model.operator jule::Ptr<_246caa349_BuiltinErrorCallExprModel>();;
							_246cce34b_processErrorCall(_self_, _183025_m,_182321_expr.get()._field_Token);
							_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_182421_d));;
						}
					}
					else {
						_case_begin_212a758da:;
						{
							return;;
						}
					}
					_match_end_212a754ab:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24613367e_GotoSt>>() || _match_expr.type_is<jule::Ptr<_24613a5ba_BreakSt>>() || _match_expr.type_is<jule::Ptr<_24613a972_ContSt>>() || _match_expr.type_is<jule::Ptr<_24613893c_RetSt>>()) {
			_case_begin_212a7031e:;
			{
				_246cd73cb_checkNode(_self_, _180717_stmt._field_Data);
			}
		}
		else {
			_case_begin_212a702a8:;
			{
				_246cd73cb_checkNode(_self_, _180717_stmt._field_Data);
				return;;
			}
		}
		_match_end_212a70099:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _246cd7783_checkTree(jule::Ptr<_246cc8862_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _185217_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_185217_n)--;
	};
	for (; (_self_.get()._field_i < _185217_n); (_self_.get()._field_i)++) {
		{
			_2461354a5_Stmt _186021_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_246cd73cb_checkNode(_self_, _186021_stmt._field_Data);
			if (_246ccb49c_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_212a790a3:;
	}
	_iter_end_212a790a3:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_246cd75a7_checkResult(_self_);
	};
}



inline void _246cd7aa2_checkGoto(_246cc8862_scopeChecker* _self_, jule::Ptr<_246cc7a4d_scopeGoto>& _187133_gt, jule::Ptr<_246cc75ca_scopeLabel>& _187154_label) {
	jule::Ptr<_246cc8862_scopeChecker> _187217_gtsc = _187133_gt.get()._field_scope;;
	while (((_187217_gtsc.get()._field_childIndex - 1LL) > _187154_label.get()._field_scope.get()._field_childIndex)) {
		{
			_187217_gtsc=_187217_gtsc.get()._field_parent;
		}
	_iter_next_212a7c3d6:;
	}
	_iter_end_212a7c3d6:;;
	jule::I64 _187717_n = 0LL;;
	if ((_187217_gtsc.get()._field_scope == _187154_label.get()._field_scope.get()._field_scope)) {
		if ((_187133_gt.get()._field_pos > _187154_label.get()._field_pos)) {
			return;;
		};
		_187717_n=_187133_gt.get()._field_pos;
	};
	jule::I64 _189017_i = (_187154_label.get()._field_pos - 1LL);;
	if ((_187717_n == 0LL)) {
		{
			auto &expr = _187154_label.get()._field_scope.get()._field_scope.get()._field_Stmts;
			auto it = expr.begin();
			_iter_begin_212a7ec35:;
			if (it != expr.end()) {
				jule::I64 _189317_j = it - expr.begin();
				jule::Any _189320_stmt = *it;
				{
					if (_246cbeacd_stmtIsGotoScope(_189320_stmt,_187217_gtsc.get()._field_scope)) {
						_187717_n=_189317_j;
						goto _iter_end_212a7ec35;
					};
				}
				_iter_next_212a7ec35:;
				++it;
				_189317_j++;
				goto _iter_begin_212a7ec35;
			}
			_iter_end_212a7ec35:;
		};
	};
	for (; (_189017_i >= _187717_n); (_189017_i)--) {
		{
			jule::Any _190321_stmt = _187154_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_189017_i];;
			if (_246cc176c_stmtIsDef(_190321_stmt)) {
				_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _187133_gt.get()._field_gt.get()._field_Token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>::make({jule::Any(_187133_gt.get()._field_gt.get()._field_Label.get()._field_Kind)}));
				return;;
			};
		}
	_iter_next_212a80cbe:;
	}
	_iter_end_212a80cbe:;;
}



inline void _246cd7c7d_checkGotos(_246cc8862_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_212a808e5:;
		if (it != expr.end()) {
			jule::Ptr<_246cc7a4d_scopeGoto> _191221_gt = *it;
			{
				jule::Ptr<_246cc75ca_scopeLabel> _191321_label = _246ccc613_findLabelAll(&(*_self_), _191221_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_191321_label == nullptr)) {
					_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _191221_gt.get()._field_gt.get()._field_Token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_191221_gt.get()._field_gt.get()._field_Label.get()._field_Kind)}));
					goto _iter_next_212a808e5;
				};
				_191321_label.get()._field_used=true;
				_246cd7aa2_checkGoto(&(*_self_), _191221_gt,_191321_label);
			}
			_iter_next_212a808e5:;
			++it;
			goto _iter_begin_212a808e5;
		}
		_iter_end_212a808e5:;
	};
}



inline void _246cd7e59_checkLabels(_246cc8862_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_212a8319a:;
		if (it != expr.end()) {
			jule::Ptr<_246cc75ca_scopeLabel> _192516_l = *it;
			{
				if ((!(_192516_l.get()._field_used))) {
					_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _192516_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_192516_l.get()._field_label.get()._field_Ident)}));
				};
			}
			_iter_next_212a8319a:;
			++it;
			goto _iter_begin_212a8319a;
		}
		_iter_end_212a8319a:;
	};
}



inline void _246cd8135_checkVars(_246cc8862_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_212a85bc5:;
		if (it != expr.end()) {
			jule::Ptr<_246d16372_Var> _193316_v = *it;
			{
				if (((((!(_193316_v.get()._field_Used)) && (!(_2449714c9_IsIgnoreIdent(_193316_v.get()._field_Ident)))) && (!(_244971771_IsAnonIdent(_193316_v.get()._field_Ident)))) && (_193316_v.get()._field_Ident != jule::Str("self", 4)))) {
					_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _193316_v.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_193316_v.get()._field_Ident)}));
				};
			}
			_iter_next_212a85bc5:;
			++it;
			goto _iter_begin_212a85bc5;
		}
		_iter_end_212a85bc5:;
	};
}



inline void _246cd8311_checkAliases(_246cc8862_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_212a879b8:;
		if (it != expr.end()) {
			jule::Ptr<_246d8e2a7_TypeAlias> _194116_a = *it;
			{
				if ((((!(_194116_a.get()._field_Used)) && (!(_2449714c9_IsIgnoreIdent(_194116_a.get()._field_Ident)))) && (!(_244971771_IsAnonIdent(_194116_a.get()._field_Ident))))) {
					_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _194116_a.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_194116_a.get()._field_Ident)}));
				};
			}
			_iter_next_212a879b8:;
			++it;
			goto _iter_begin_212a879b8;
		}
		_iter_end_212a879b8:;
	};
}



inline void _246cd8630_check(jule::Ptr<_246cc8862_scopeChecker> _self_, jule::Ptr<_246135ab0_ScopeTree>& _194930_tree, jule::Ptr<_246cc1c01_Scope>& _194953_s) {
	_194953_s.get()._field_Deferred=_194930_tree.get()._field_Deferred;
	_194953_s.get()._field_Unsafety=_194930_tree.get()._field_Unsafety;
	jule::I64 _195313_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_194930_tree;
	_self_.get()._field_scope=_194953_s;
	_246cd7783_checkTree(_self_);
	if ((_195313_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_246cd8135_checkVars(_self_.ptr());
		_246cd8311_checkAliases(_self_.ptr());
		if (_246ccb05c_isRoot(_self_.ptr())) {
			_246cd7c7d_checkGotos(_self_.ptr());
			_246cd7e59_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_246cc8862_scopeChecker> _246cd8894_newChildChecker(jule::Ptr<_246cc8862_scopeChecker> _self_) {
	jule::Ptr<_246cc8862_scopeChecker> _197317_base = _246cbdc31_newScopeCheckerBase(_self_.get()._field_s,nullptr);;
	_197317_base.get()._field_parent=_self_;
	_197317_base.get()._field_labels=_self_.get()._field_labels;
	_197317_base.get()._field_gotos=_self_.get()._field_gotos;
	_197317_base.get()._field_childIndex=static_cast<jule::I64>((_self_.get()._field_childIndex + 1LL));
	return _197317_base;
}







std::ostream &operator<<(std::ostream &_Stream, _246cc8862_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _246cd9884_checkCdef(_246cd9444_directiveChecker* _self_, jule::Ptr<_2460dc858_Directive>& _1629_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_246cab768_Fn>>()) {
			_case_begin_212a9130c:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_246cab768_Fn>().get()._field_CppLinked) {
					goto _match_end_212a90dbc;
				};
				goto _case_begin_212a90e22;
			}
		}
		else {
			_case_begin_212a90e22:;
			{
				_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_1629_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_212a90dbc:;
	};
	if ((_1629_d.get()._field_Args.len() > 0LL)) {
		_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _246cd9b09_checkTypedef(_246cd9444_directiveChecker* _self_, jule::Ptr<_2460dc858_Directive>& _3232_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_246117c3a_Struct>>()) {
			_case_begin_212a93d9d:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_246117c3a_Struct>().get()._field_CppLinked) {
					goto _match_end_212a93908;
				};
				goto _case_begin_212a9395d;
			}
		}
		else {
			_case_begin_212a9395d:;
			{
				_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_3232_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_212a93908:;
	};
	if ((_3232_d.get()._field_Args.len() > 0LL)) {
		_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _246cd9d7e_checkDerive(_246cd9444_directiveChecker* _self_, jule::Ptr<_2460dc858_Directive>& _4831_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_246117c3a_Struct>>()) {
			_case_begin_212a9691c:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_246117c3a_Struct>().get()._field_CppLinked))) {
					goto _match_end_212a96477;
				};
				goto _case_begin_212a964cc;
			}
		}
		else {
			_case_begin_212a964cc:;
			{
				_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_212a96477:;
	};
	if ((_4831_d.get()._field_Args.len() == 0LL)) {
		_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_246ceb5ee_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4831_d.get()._field_Args.len() > 1LL)) {
		_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4831_d.get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_212a9a3d2:;
		}
		else {
			_case_begin_212a98c4e:;
			{
				_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_4831_d.get()._field_Args[0LL].get()._field_Kind)}));
			}
		}
		_match_end_212a99e70:;
	};
}



inline void _246cda104_checkNamespace(_246cd9444_directiveChecker* _self_, jule::Ptr<_2460dc858_Directive>& _7438_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_246117c3a_Struct>>()) {
			_case_begin_212a9b7ac:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_246117c3a_Struct>().get()._field_CppLinked))) {
					_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cab768_Fn>>()) {
			_case_begin_212a9ba87:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_246cab768_Fn>().get()._field_CppLinked))) {
					_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246d16372_Var>>()) {
			_case_begin_212a9baed:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_246d16372_Var>().get()._field_CppLinked))) {
					_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else {
			_case_begin_212a9b9aa:;
			{
				_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_212a9b867:;
	};
	if ((_7438_d.get()._field_Args.len() == 0LL)) {
		_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7438_d.get()._field_Args.len() > 1LL)) {
		_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_24496dc35_Token> _9913_arg = _7438_d.get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7438_d.get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL,(_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_246117c3a_Struct>>()) {
			_case_begin_212aa5d5a:;
			{
				if ((_246d89648_findDirective((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_2460dc858_Directive> _11625_typedef = jule::new_ptr<_2460dc858_Directive>(_2460dc858_Directive{._field_Tag=_7438_d.get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_2460dc858_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_212aa56ea:;
	};
}



inline void _246cda379_checkDeprecated(_246cd9444_directiveChecker* _self_, jule::Ptr<_2460dc858_Directive>& _12539_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_246117c3a_Struct>>()) {
			_case_begin_212aa6696:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_246117c3a_Struct>().get()._field_CppLinked) {
					_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cab768_Fn>>()) {
			_case_begin_212aa82ad:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_246cab768_Fn>().get()._field_CppLinked) {
					_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246d16372_Var>>()) {
			_case_begin_212aa8324:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_246d16372_Var>().get()._field_CppLinked) {
					_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else {
			_case_begin_212aa7b92:;
			{
				_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_212aa7b3c:;
	};
	if ((_12539_d.get()._field_Args.len() == 0LL)) {
		return;;
	};
	if ((_12539_d.get()._field_Args.len() > 1LL)) {
		_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_24496dc35_Token> _15013_arg = _12539_d.get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12539_d.get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL,(_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _246cda5ee_checkTest(_246cd9444_directiveChecker* _self_, jule::Ptr<_2460dc858_Directive>& _16429_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_246cab768_Fn>>()) {
			_case_begin_212ab2592:;
			{
				jule::Ptr<_246cab768_Fn> _16717_f = (*_self_)._field_o.operator jule::Ptr<_246cab768_Fn>();;
				if ((((!(_16717_f.get()._field_CppLinked)) && (!(_24618bdbe_IsInit(_16717_f.ptr())))) && (!(_24618b044_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_212ab1e76;
				};
				if (_24618a829_IsMethod(_16717_f.ptr())) {
					_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _16717_f.get()._field_Token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_212ab1e76;
				};
				goto _case_begin_212ab2152;
			}
		}
		else {
			_case_begin_212ab2152:;
			{
				_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_16429_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_212ab1e76:;
	};
	if ((_16429_d.get()._field_Args.len() > 0LL)) {
		_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _246cda874_checkDirective(_246cd9444_directiveChecker* _self_, jule::Ptr<_2460dc858_Directive>& _18538_d) {
	{
		auto &_match_expr{ _18538_d.get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_212ab68d7:;
			{
				_246cd9884_checkCdef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_212ab6530:;
			{
				_246cd9b09_checkTypedef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_212ab6596:;
			{
				_246cd9d7e_checkDerive(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_212ab660c:;
			{
				_246cda104_checkNamespace(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_212ab6684:;
			{
				_246cda379_checkDeprecated(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_212ab73aa:;
			{
				_246cda5ee_checkTest(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_212ab7432:;
			{
				_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		else {
			_case_begin_212ab64b9:;
			{
				_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_212ab640e:;
	};
}



inline void _246cdaa50_check(_246cd9444_directiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_212ab9d91:;
		if (it != expr.end()) {
			jule::Ptr<_2460dc858_Directive> _20821_d = *it;
			{
				_246cda874_checkDirective(&(*_self_), _20821_d);
			}
			_iter_next_212ab9d91:;
			++it;
			goto _iter_begin_212ab9d91;
		}
		_iter_end_212ab9d91:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _246cd9444_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_246ce04c2_ImportInfo> _246ce09de_FindPackage(_246ce04c2_ImportInfo* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_246ce04c2_ImportInfo> _246ce0cec_SelectPackage(_246ce04c2_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_246ce04c2_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_246d16372_Var> _246ce11a4_FindVar(_246ce04c2_ImportInfo* _self_, jule::Str _19226_ident, jule::Bool ) {
	if ((!(_246ce2a8a_isLookupable(&(*_self_), _19226_ident)))) {
		return nullptr;
	};
	return _246cdcbd9_findVarInPackage((*_self_)._field_Package.get()._field_Files,_19226_ident,false);
}



inline jule::Ptr<_246d8e2a7_TypeAlias> _246ce155b_FindTypeAlias(_246ce04c2_ImportInfo* _self_, jule::Str _20432_ident, jule::Bool ) {
	if ((!(_246ce2a8a_isLookupable(&(*_self_), _20432_ident)))) {
		return nullptr;
	};
	return _246cdd118_findTypeAliasInPackage((*_self_)._field_Package.get()._field_Files,_20432_ident,false);
}



inline jule::Ptr<_246117c3a_Struct> _246ce1913_FindStruct(_246ce04c2_ImportInfo* _self_, jule::Str _21629_ident, jule::Bool ) {
	if ((!(_246ce2a8a_isLookupable(&(*_self_), _21629_ident)))) {
		return nullptr;
	};
	return _246cdd503_findStructInPackage((*_self_)._field_Package.get()._field_Files,_21629_ident,false);
}



inline jule::Ptr<_246cab768_Fn> _246ce1cba_FindFn(_246ce04c2_ImportInfo* _self_, jule::Str _22825_ident, jule::Bool ) {
	if ((!(_246ce2a8a_isLookupable(&(*_self_), _22825_ident)))) {
		return nullptr;
	};
	return _246cdd965_findFnInPackage((*_self_)._field_Package.get()._field_Files,_22825_ident,false);
}



inline jule::Ptr<_246cb3e9b_Trait> _246ce20c8_FindTrait(_246ce04c2_ImportInfo* _self_, jule::Str _23928_ident) {
	if ((!(_246ce2a8a_isLookupable(&(*_self_), _23928_ident)))) {
		return nullptr;
	};
	return _246cddc73_findTraitInPackage((*_self_)._field_Package.get()._field_Files,_23928_ident);
}



inline jule::Ptr<_246cb60e1_Enum> _246ce23d6_FindEnum(_246ce04c2_ImportInfo* _self_, jule::Str _25027_ident) {
	if ((!(_246ce2a8a_isLookupable(&(*_self_), _25027_ident)))) {
		return nullptr;
	};
	return _246cde0b4_findEnumInPackage((*_self_)._field_Package.get()._field_Files,_25027_ident);
}



inline jule::Ptr<_246cb76db_TypeEnum> _246ce26e4_FindTypeEnum(_246ce04c2_ImportInfo* _self_, jule::Str _26131_ident) {
	if ((!(_246ce2a8a_isLookupable(&(*_self_), _26131_ident)))) {
		return nullptr;
	};
	return _246cde405_findTypeEnumInPackage((*_self_)._field_Package.get()._field_Files,_26131_ident);
}



inline jule::Bool _246ce2a8a_isLookupable(_246ce04c2_ImportInfo* _self_, jule::Str _27027_ident) {
	if ((*_self_)._field_CppLinked) {
		return false;
	};
	if ((!((*_self_)._field_ImportAll))) {
		if ((((*_self_)._field_Alias.len() != 0LL) || _246ce2d98_existIdent(&(*_self_), jule::Str("self", 4)))) {
			return true;
		};
		if (((*_self_)._field_Selected.len() > 0LL)) {
			if ((!(_246ce2d98_existIdent(&(*_self_), _27027_ident)))) {
				return false;
			};
		};
	};
	return true;
}



inline jule::Bool _246ce2d98_existIdent(_246ce04c2_ImportInfo* _self_, jule::Str _29025_ident) {
	{
		auto &expr = (*_self_)._field_Selected;
		auto it = expr.begin();
		_iter_begin_212ad23c5:;
		if (it != expr.end()) {
			jule::Ptr<_24496dc35_Token> &_29116_sident = *it;
			{
				if ((_29116_sident.get()._field_Kind == _29025_ident)) {
					return true;
				};
			}
			_iter_next_212ad23c5:;
			++it;
			goto _iter_begin_212ad23c5;
		}
		_iter_end_212ad23c5:;
	};
	return false;
}



inline jule::Bool _246ce312e_isAccessibleViaSelection(_246ce04c2_ImportInfo* _self_) {
	return (((*_self_)._field_ImportAll || ((*_self_)._field_Selected.len() == 0LL)) || _246ce2d98_existIdent(&(*_self_), jule::Str("self", 4)));
}







std::ostream &operator<<(std::ostream &_Stream, _246ce04c2_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_246ce04c2_ImportInfo> _246ce3904_FindPackage(_246ce342b_Package* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_246ce04c2_ImportInfo> _246ce3c12_SelectPackage(_246ce342b_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_246ce04c2_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_246d16372_Var> _246ce40b9_FindVar(_246ce342b_Package* _self_, jule::Str _32026_ident, jule::Bool _32038_cpp_linked) {
	return _246cdcbd9_findVarInPackage((*_self_)._field_Files,_32026_ident,_32038_cpp_linked);
}



inline jule::Ptr<_246d8e2a7_TypeAlias> _246ce4471_FindTypeAlias(_246ce342b_Package* _self_, jule::Str _32632_ident, jule::Bool _32644_cpp_linked) {
	return _246cdd118_findTypeAliasInPackage((*_self_)._field_Files,_32632_ident,_32644_cpp_linked);
}



inline jule::Ptr<_246117c3a_Struct> _246ce4828_FindStruct(_246ce342b_Package* _self_, jule::Str _33229_ident, jule::Bool _33241_cpp_linked) {
	return _246cdd503_findStructInPackage((*_self_)._field_Files,_33229_ident,_33241_cpp_linked);
}



inline jule::Ptr<_246cab768_Fn> _246ce4bd0_FindFn(_246ce342b_Package* _self_, jule::Str _33825_ident, jule::Bool _33837_cpp_linked) {
	return _246cdd965_findFnInPackage((*_self_)._field_Files,_33825_ident,_33837_cpp_linked);
}



inline jule::Ptr<_246cb3e9b_Trait> _246ce4edd_FindTrait(_246ce342b_Package* _self_, jule::Str _34428_ident) {
	return _246cddc73_findTraitInPackage((*_self_)._field_Files,_34428_ident);
}



inline jule::Ptr<_246cb60e1_Enum> _246ce52eb_FindEnum(_246ce342b_Package* _self_, jule::Str _35027_ident) {
	return _246cde0b4_findEnumInPackage((*_self_)._field_Files,_35027_ident);
}



inline jule::Ptr<_246cb76db_TypeEnum> _246ce5609_FindTypeEnum(_246ce342b_Package* _self_, jule::Str _35631_ident) {
	return _246cde405_findTypeEnumInPackage((*_self_)._field_Files,_35631_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _246ce342b_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_246ce04c2_ImportInfo> _246ce8b3a_FindPackage(_246ce861d_Sema* _self_, jule::Str _21930_ident) {
	return _246d59a8b_FindPackage((*_self_)._field_file.ptr(), _21930_ident);
}



inline jule::Ptr<_246ce04c2_ImportInfo> _246ce8e48_SelectPackage(_246ce861d_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_246ce04c2_ImportInfo>)> _22932_selector) {
	return _246d59d99_SelectPackage((*_self_)._field_file.ptr(), _22932_selector);
}



inline jule::Ptr<_246d16372_Var> _246ce9300_FindVar(_246ce861d_Sema* _self_, jule::Str _23926_ident, jule::Bool _23938_cpp_linked) {
	jule::Ptr<_246d16372_Var> _24117_v = _246cdcbd9_findVarInPackage((*_self_)._field_files,_23926_ident,_23938_cpp_linked);;
	if ((_24117_v != nullptr)) {
		return _24117_v;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_212b06e33:;
		if (it != expr.end()) {
			jule::Ptr<_246ce04c2_ImportInfo> _24721_imp = *it;
			{
				if ((!(_246ce7045_impIsLookupable(_24721_imp,_23926_ident)))) {
					goto _iter_next_212b06e33;
				};
				_24117_v=_246ce11a4_FindVar(_24721_imp.ptr(), _23926_ident,_23938_cpp_linked);
				if (((_24117_v != nullptr) && _246ceb9a6_isAccessibleDefine(&(*_self_), _24117_v.get()._field_Public,_24117_v.get()._field_Token))) {
					return _24117_v;
				};
			}
			_iter_next_212b06e33:;
			++it;
			goto _iter_begin_212b06e33;
		}
		_iter_end_212b06e33:;
	};
	return nullptr;
}



inline jule::Ptr<_246d8e2a7_TypeAlias> _246ce96a7_FindTypeAlias(_246ce861d_Sema* _self_, jule::Str _26632_ident, jule::Bool _26644_cpp_linked) {
	jule::Ptr<_246d8e2a7_TypeAlias> _26817_ta = _246cdd118_findTypeAliasInPackage((*_self_)._field_files,_26632_ident,_26644_cpp_linked);;
	if ((_26817_ta != nullptr)) {
		return _26817_ta;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_212b09ab2:;
		if (it != expr.end()) {
			jule::Ptr<_246ce04c2_ImportInfo> _27421_imp = *it;
			{
				if ((!(_246ce7045_impIsLookupable(_27421_imp,_26632_ident)))) {
					goto _iter_next_212b09ab2;
				};
				_26817_ta=_246ce155b_FindTypeAlias(_27421_imp.ptr(), _26632_ident,_26644_cpp_linked);
				if (((_26817_ta != nullptr) && _246ceb9a6_isAccessibleDefine(&(*_self_), _26817_ta.get()._field_Public,_26817_ta.get()._field_Token))) {
					return _26817_ta;
				};
			}
			_iter_next_212b09ab2:;
			++it;
			goto _iter_begin_212b09ab2;
		}
		_iter_end_212b09ab2:;
	};
	return nullptr;
}



inline jule::Ptr<_246117c3a_Struct> _246ce9a5e_FindStruct(_246ce861d_Sema* _self_, jule::Str _29329_ident, jule::Bool _29341_cppLinked) {
	jule::Ptr<_246117c3a_Struct> _29517_s = _246cdd503_findStructInPackage((*_self_)._field_files,_29329_ident,_29341_cppLinked);;
	if ((_29517_s != nullptr)) {
		return _29517_s;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_212b1259d:;
		if (it != expr.end()) {
			jule::Ptr<_246ce04c2_ImportInfo> _30021_imp = *it;
			{
				if ((!(_246ce7045_impIsLookupable(_30021_imp,_29329_ident)))) {
					goto _iter_next_212b1259d;
				};
				_29517_s=_246ce1913_FindStruct(_30021_imp.ptr(), _29329_ident,_29341_cppLinked);
				if (((_29517_s != nullptr) && _246ceb9a6_isAccessibleDefine(&(*_self_), _29517_s.get()._field_Public,_29517_s.get()._field_Token))) {
					return _29517_s;
				};
			}
			_iter_next_212b1259d:;
			++it;
			goto _iter_begin_212b1259d;
		}
		_iter_end_212b1259d:;
	};
	return nullptr;
}



inline jule::Ptr<_246cab768_Fn> _246ce9e16_FindFn(_246ce861d_Sema* _self_, jule::Str _31825_ident, jule::Bool _31837_cpp_linked) {
	jule::Ptr<_246cab768_Fn> _32017_f = _246cdd965_findFnInPackage((*_self_)._field_files,_31825_ident,_31837_cpp_linked);;
	if ((_32017_f != nullptr)) {
		return _32017_f;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_212b1522c:;
		if (it != expr.end()) {
			jule::Ptr<_246ce04c2_ImportInfo> _32621_imp = *it;
			{
				if ((!(_246ce7045_impIsLookupable(_32621_imp,_31825_ident)))) {
					goto _iter_next_212b1522c;
				};
				_32017_f=_246ce1cba_FindFn(_32621_imp.ptr(), _31825_ident,_31837_cpp_linked);
				if (((_32017_f != nullptr) && _246ceb9a6_isAccessibleDefine(&(*_self_), _32017_f.get()._field_Public,_32017_f.get()._field_Token))) {
					return _32017_f;
				};
			}
			_iter_next_212b1522c:;
			++it;
			goto _iter_begin_212b1522c;
		}
		_iter_end_212b1522c:;
	};
	return nullptr;
}



inline jule::Ptr<_246cb3e9b_Trait> _246cea224_FindTrait(_246ce861d_Sema* _self_, jule::Str _34528_ident) {
	jule::Ptr<_246cb3e9b_Trait> _34717_t = _246cddc73_findTraitInPackage((*_self_)._field_files,_34528_ident);;
	if ((_34717_t != nullptr)) {
		return _34717_t;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_212b17d89:;
		if (it != expr.end()) {
			jule::Ptr<_246ce04c2_ImportInfo> _35321_imp = *it;
			{
				if ((!(_246ce7045_impIsLookupable(_35321_imp,_34528_ident)))) {
					goto _iter_next_212b17d89;
				};
				_34717_t=_246ce20c8_FindTrait(_35321_imp.ptr(), _34528_ident);
				if (((_34717_t != nullptr) && _246ceb9a6_isAccessibleDefine(&(*_self_), _34717_t.get()._field_Public,_34717_t.get()._field_Token))) {
					return _34717_t;
				};
			}
			_iter_next_212b17d89:;
			++it;
			goto _iter_begin_212b17d89;
		}
		_iter_end_212b17d89:;
	};
	return nullptr;
}



inline jule::Ptr<_246cb60e1_Enum> _246cea532_FindEnum(_246ce861d_Sema* _self_, jule::Str _37227_ident) {
	jule::Ptr<_246cb60e1_Enum> _37417_e = _246cde0b4_findEnumInPackage((*_self_)._field_files,_37227_ident);;
	if ((_37417_e != nullptr)) {
		return _37417_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_212b1a793:;
		if (it != expr.end()) {
			jule::Ptr<_246ce04c2_ImportInfo> _38021_imp = *it;
			{
				if ((!(_246ce7045_impIsLookupable(_38021_imp,_37227_ident)))) {
					goto _iter_next_212b1a793;
				};
				_37417_e=_246ce23d6_FindEnum(_38021_imp.ptr(), _37227_ident);
				if (((_37417_e != nullptr) && _246ceb9a6_isAccessibleDefine(&(*_self_), _37417_e.get()._field_Public,_37417_e.get()._field_Token))) {
					return _37417_e;
				};
			}
			_iter_next_212b1a793:;
			++it;
			goto _iter_begin_212b1a793;
		}
		_iter_end_212b1a793:;
	};
	return nullptr;
}



inline jule::Ptr<_246cb76db_TypeEnum> _246cea840_FindTypeEnum(_246ce861d_Sema* _self_, jule::Str _39931_ident) {
	jule::Ptr<_246cb76db_TypeEnum> _40117_e = _246cde405_findTypeEnumInPackage((*_self_)._field_files,_39931_ident);;
	if ((_40117_e != nullptr)) {
		return _40117_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_212b1d19c:;
		if (it != expr.end()) {
			jule::Ptr<_246ce04c2_ImportInfo> _40721_imp = *it;
			{
				if ((!(_246ce7045_impIsLookupable(_40721_imp,_39931_ident)))) {
					goto _iter_next_212b1d19c;
				};
				_40117_e=_246ce26e4_FindTypeEnum(_40721_imp.ptr(), _39931_ident);
				if (((_40117_e != nullptr) && _246ceb9a6_isAccessibleDefine(&(*_self_), _40117_e.get()._field_Public,_40117_e.get()._field_Token))) {
					return _40117_e;
				};
			}
			_iter_next_212b1d19c:;
			++it;
			goto _iter_begin_212b1d19c;
		}
		_iter_end_212b1d19c:;
	};
	return nullptr;
}



inline jule::Bool _246ceab92_isFlag(_246ce861d_Sema* _self_, jule::I64 _42321_flags) {
	return (((*_self_)._field_flags & _42321_flags) == _42321_flags);
}



inline void _246ceae17_setCurrentFile(_246ce861d_Sema* _self_, jule::Ptr<_246d5956e_SymbolTable> _42537_f) {
	(*_self_)._field_file=_42537_f;
}



inline void _246ceb2d0_pushErr(_246ce861d_Sema* _self_, jule::Ptr<_24496dc35_Token> _42726_token, jule::Str _42741_fmt, jule::Slice<jule::Any> _42754_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_246ce6c04_compilerErr(_42726_token,true,_42741_fmt,jule::Any(_42754_args)));;
}



inline void _246ceb5ee_pushSugggestion(_246ce861d_Sema* _self_, jule::Str _43234_fmt, jule::Slice<jule::Any> _43247_args) {
	{
		_246ce8189_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_43234_fmt,jule::Any(_43247_args));
	};
}



inline jule::Bool _246ceb9a6_isAccessibleDefine(_246ce861d_Sema* _self_, jule::Bool _43733_public, jule::Ptr<_24496dc35_Token> _43747_token) {
	return ((_43733_public || (_43747_token.get()._field_File == nullptr)) || (_2449749b6_Dir((*_self_)._field_file.get()._field_File.ptr()) == _2449749b6_Dir(_43747_token.get()._field_File.ptr())));
}



inline jule::Bool _246cebe07_isDuplicatedIdent(_246ce861d_Sema* _self_, jule::Uintptr _44432_itself, jule::Str _44449_ident, jule::Bool _44461_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_212b24e62:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> &_44516_f = *it;
			{
				if (_246d5ca6c_isDuplicatedIdent(_44516_f.ptr(), _44432_itself,_44449_ident,_44461_cpp_linked)) {
					return true;
				};
				{
					auto &expr = _44516_f.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_212b258be:;
					if (it != expr.end()) {
						jule::Ptr<_246ce04c2_ImportInfo> &_45020_imp = *it;
						{
							{
								auto &expr = _45020_imp.get()._field_Selected;
								auto it = expr.begin();
								_iter_begin_212b2676b:;
								if (it != expr.end()) {
									jule::Ptr<_24496dc35_Token> &_45124_selected = *it;
									{
										if ((_45124_selected.get()._field_Kind == _44449_ident)) {
											return true;
										};
									}
									_iter_next_212b2676b:;
									++it;
									goto _iter_begin_212b2676b;
								}
								_iter_end_212b2676b:;
							};
						}
						_iter_next_212b258be:;
						++it;
						goto _iter_begin_212b258be;
					}
					_iter_end_212b258be:;
				};
			}
			_iter_next_212b24e62:;
			++it;
			goto _iter_begin_212b24e62;
		}
		_iter_end_212b24e62:;
	};
	return false;
}



inline void _246cec226_checkDirectives(jule::Ptr<_246ce861d_Sema> _self_, jule::Slice<jule::Ptr<_2460dc858_Directive>>& _46140_d, jule::Any _46166_o) {
	_246cd9444_directiveChecker _46217_dc = _246cd9444_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_2460dc858_Directive>>>)((&(_46140_d)))), ._field_o=jule::Any(_46166_o)};;
	_246cdaa50_check(&_46217_dc);
}



inline jule::Bool _246cec677_checkGenericQuantity(_246ce861d_Sema* _self_, jule::I64 _47039_required, jule::I64 _47054_given, jule::Ptr<_24496dc35_Token> _47066_token) {
	jule::Bool _47083_ok = false;
	{
		
		if (((_47039_required == 0LL) && (_47054_given > 0LL))) {
			_case_begin_212b29670:;
			{
				_246ceb2d0_pushErr(&(*_self_), _47066_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if (((_47039_required > 0LL) && (_47054_given == 0LL))) {
			_case_begin_212b2976e:;
			{
				_246ceb2d0_pushErr(&(*_self_), _47066_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if ((_47039_required < _47054_given)) {
			_case_begin_212b297d5:;
			{
				_246ceb2d0_pushErr(&(*_self_), _47066_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if ((_47039_required > _47054_given)) {
			_case_begin_212b29494:;
			{
				_246ceb2d0_pushErr(&(*_self_), _47066_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else {
			_case_begin_212b29010:;
			{
				_47083_ok = true;
				return _47083_ok;
			}
		}
		_match_end_212b28e33:;
	};
}



inline jule::Bool _246ceca51_isDuplicatedImportSelection(_246ce861d_Sema* _self_, jule::Uintptr _48942_itself, jule::Str _48959_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_212b2caa2:;
		if (it != expr.end()) {
			jule::Ptr<_246ce04c2_ImportInfo> &_49016_imp = *it;
			{
				if ((static_cast<jule::Uintptr>(_49016_imp) == _48942_itself)) {
					goto _iter_end_212b2caa2;
				};
				if (_246ce2d98_existIdent(_49016_imp.ptr(), _48959_ident)) {
					return true;
				};
			}
			_iter_next_212b2caa2:;
			++it;
			goto _iter_begin_212b2caa2;
		}
		_iter_end_212b2caa2:;
	};
	return false;
}



inline jule::Any _246cece19_getImportDef(_246ce861d_Sema* _self_, jule::Str _50227_ident, jule::Ptr<_246ce04c2_ImportInfo>& _50244_imp) {
	if ((_246dbdbbb_findPackageBuiltinDef(_50244_imp.get()._field_LinkPath,_50227_ident) != nullptr)) {
		return jule::Any(true);
	};
	{
		auto &expr = _50244_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_212b2ed3a:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _50621_f = *it;
			{
				;
				jule::Any _50921_def = _246d5c61b_defByIdent(_50621_f.ptr(), _50227_ident,false);;
				if ((_50921_def != nullptr)) {
					return jule::Any(_50921_def);
				};
			}
			_iter_next_212b2ed3a:;
			++it;
			goto _iter_begin_212b2ed3a;
		}
		_iter_end_212b2ed3a:;
	};
	return nullptr;
}



inline jule::Bool _212b36913_checkImportSelection(_246ce861d_Sema* _self_, jule::Ptr<_24496dc35_Token>& _51743_ident, jule::Ptr<_246d16372_Var>& _51759_s) {
	if ((!(_246ceb9a6_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_246ceb2d0_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_246ceb5ee_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_246cde900_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_246ceb2d0_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _212b3ae67_checkImportSelection(_246ce861d_Sema* _self_, jule::Ptr<_24496dc35_Token>& _51743_ident, jule::Ptr<_246d8e2a7_TypeAlias>& _51759_s) {
	if ((!(_246ceb9a6_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_246ceb2d0_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_246ceb5ee_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_246cde900_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_246ceb2d0_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _212b40477_checkImportSelection(_246ce861d_Sema* _self_, jule::Ptr<_24496dc35_Token>& _51743_ident, jule::Ptr<_246117c3a_Struct>& _51759_s) {
	if ((!(_246ceb9a6_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_246ceb2d0_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_246ceb5ee_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_246cde900_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_246ceb2d0_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _212b44b85_checkImportSelection(_246ce861d_Sema* _self_, jule::Ptr<_24496dc35_Token>& _51743_ident, jule::Ptr<_246cb3e9b_Trait>& _51759_s) {
	if ((!(_246ceb9a6_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_246ceb2d0_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_246ceb5ee_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_246cde900_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_246ceb2d0_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _212b49195_checkImportSelection(_246ce861d_Sema* _self_, jule::Ptr<_24496dc35_Token>& _51743_ident, jule::Ptr<_246cb60e1_Enum>& _51759_s) {
	if ((!(_246ceb9a6_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_246ceb2d0_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_246ceb5ee_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_246cde900_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_246ceb2d0_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _212b4d6a5_checkImportSelection(_246ce861d_Sema* _self_, jule::Ptr<_24496dc35_Token>& _51743_ident, jule::Ptr<_246cb76db_TypeEnum>& _51759_s) {
	if ((!(_246ceb9a6_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_246ceb2d0_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_246ceb5ee_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_246cde900_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_246ceb2d0_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _212b52bb5_checkImportSelection(_246ce861d_Sema* _self_, jule::Ptr<_24496dc35_Token>& _51743_ident, jule::Ptr<_246cab768_Fn>& _51759_s) {
	if ((!(_246ceb9a6_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_246ceb2d0_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_246ceb5ee_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_246cde900_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_246ceb2d0_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}



inline jule::Bool _246ced601_checkImportSelectedSelections(_246ce861d_Sema* _self_, jule::Ptr<_246ce04c2_ImportInfo>& _53153_imp) {
	jule::Bool _53173_ok = false;
	_53173_ok=true;
	{
		auto &expr = _53153_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_212b31bd8:;
		if (it != expr.end()) {
			jule::Ptr<_24496dc35_Token> _53316_ident = *it;
			{
				if ((_53316_ident.get()._field_Kind == jule::Str("self", 4))) {
					goto _iter_next_212b31bd8;
				};
				if (_246ceca51_isDuplicatedImportSelection(&(*_self_), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_53153_imp)),_53316_ident.get()._field_Kind)) {
					_246ceb2d0_pushErr(&(*_self_), _53316_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_53316_ident.get()._field_Kind)}));
					_246ceb5ee_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_53173_ok=false;
					goto _iter_next_212b31bd8;
				};
				jule::Any _54521_def = _246cece19_getImportDef(&(*_self_), _53316_ident.get()._field_Kind,_53153_imp);;
				{
					auto &_match_expr{ _54521_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_212b347ce:;
						{
							goto _iter_next_212b31bd8;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_246d16372_Var>>()) {
						_case_begin_212b35406:;
						{
							jule::Ptr<_246d16372_Var> _55125_v = _54521_def.operator jule::Ptr<_246d16372_Var>();;
							_53173_ok=(_212b36913_checkImportSelection(&(*_self_), _53316_ident,_55125_v) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_246d8e2a7_TypeAlias>>()) {
						_case_begin_212b341a2:;
						{
							jule::Ptr<_246d8e2a7_TypeAlias> _55425_ta = _54521_def.operator jule::Ptr<_246d8e2a7_TypeAlias>();;
							_53173_ok=(_212b3ae67_checkImportSelection(&(*_self_), _53316_ident,_55425_ta) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_246117c3a_Struct>>()) {
						_case_begin_212b34922:;
						{
							jule::Ptr<_246117c3a_Struct> _55725_s = _54521_def.operator jule::Ptr<_246117c3a_Struct>();;
							_53173_ok=(_212b40477_checkImportSelection(&(*_self_), _53316_ident,_55725_s) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_246cb3e9b_Trait>>()) {
						_case_begin_212b34988:;
						{
							jule::Ptr<_246cb3e9b_Trait> _56025_t = _54521_def.operator jule::Ptr<_246cb3e9b_Trait>();;
							_53173_ok=(_212b44b85_checkImportSelection(&(*_self_), _53316_ident,_56025_t) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_246cb60e1_Enum>>()) {
						_case_begin_212b35637:;
						{
							jule::Ptr<_246cb60e1_Enum> _56325_e = _54521_def.operator jule::Ptr<_246cb60e1_Enum>();;
							_53173_ok=(_212b49195_checkImportSelection(&(*_self_), _53316_ident,_56325_e) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_246cb76db_TypeEnum>>()) {
						_case_begin_212b3569d:;
						{
							jule::Ptr<_246cb76db_TypeEnum> _56625_e = _54521_def.operator jule::Ptr<_246cb76db_TypeEnum>();;
							_53173_ok=(_212b4d6a5_checkImportSelection(&(*_self_), _53316_ident,_56625_e) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_246cab768_Fn>>()) {
						_case_begin_212b35714:;
						{
							jule::Ptr<_246cab768_Fn> _56925_f = _54521_def.operator jule::Ptr<_246cab768_Fn>();;
							_53173_ok=(_212b52bb5_checkImportSelection(&(*_self_), _53316_ident,_56925_f) && _53173_ok);
						}
					}
					else {
						_case_begin_212b34768:;
						{
							_246ceb2d0_pushErr(&(*_self_), _53316_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_53316_ident.get()._field_Kind)}));
							_53173_ok=false;
							goto _iter_next_212b31bd8;
						}
					}
					_match_end_212b32403:;
				};
			}
			_iter_next_212b31bd8:;
			++it;
			goto _iter_begin_212b31bd8;
		}
		_iter_end_212b31bd8:;
	};
	return _53173_ok;
}



inline jule::Bool _212b57714_checkImportsAllSelectionsFromCollection(_246ce861d_Sema* _self_, jule::Slice<jule::Ptr<_246d16372_Var>>& _58062_s, jule::Ptr<_24496dc35_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_212b59419:;
		if (it != expr.end()) {
			jule::Ptr<_246d16372_Var> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_212b36913_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_212b59419:;
			++it;
			goto _iter_begin_212b59419;
		}
		_iter_end_212b59419:;
	};
	return _58117_ok;
}

inline jule::Bool _212b58b77_checkImportsAllSelectionsFromCollection(_246ce861d_Sema* _self_, jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>>& _58062_s, jule::Ptr<_24496dc35_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_212b5c450:;
		if (it != expr.end()) {
			jule::Ptr<_246d8e2a7_TypeAlias> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_212b3ae67_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_212b5c450:;
			++it;
			goto _iter_begin_212b5c450;
		}
		_iter_end_212b5c450:;
	};
	return _58117_ok;
}

inline jule::Bool _212b5b2ea_checkImportsAllSelectionsFromCollection(_246ce861d_Sema* _self_, jule::Slice<jule::Ptr<_246117c3a_Struct>>& _58062_s, jule::Ptr<_24496dc35_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_212b60464:;
		if (it != expr.end()) {
			jule::Ptr<_246117c3a_Struct> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_212b40477_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_212b60464:;
			++it;
			goto _iter_begin_212b60464;
		}
		_iter_end_212b60464:;
	};
	return _58117_ok;
}

inline jule::Bool _212b60882_checkImportsAllSelectionsFromCollection(_246ce861d_Sema* _self_, jule::Slice<jule::Ptr<_246cab768_Fn>>& _58062_s, jule::Ptr<_24496dc35_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_212b634bc:;
		if (it != expr.end()) {
			jule::Ptr<_246cab768_Fn> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_212b52bb5_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_212b634bc:;
			++it;
			goto _iter_begin_212b634bc;
		}
		_iter_end_212b634bc:;
	};
	return _58117_ok;
}

inline jule::Bool _212b62356_checkImportsAllSelectionsFromCollection(_246ce861d_Sema* _self_, jule::Slice<jule::Ptr<_246cb3e9b_Trait>>& _58062_s, jule::Ptr<_24496dc35_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_212b6648c:;
		if (it != expr.end()) {
			jule::Ptr<_246cb3e9b_Trait> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_212b44b85_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_212b6648c:;
			++it;
			goto _iter_begin_212b6648c;
		}
		_iter_end_212b6648c:;
	};
	return _58117_ok;
}

inline jule::Bool _212b65326_checkImportsAllSelectionsFromCollection(_246ce861d_Sema* _self_, jule::Slice<jule::Ptr<_246cb60e1_Enum>>& _58062_s, jule::Ptr<_24496dc35_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_212b6945c:;
		if (it != expr.end()) {
			jule::Ptr<_246cb60e1_Enum> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_212b49195_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_212b6945c:;
			++it;
			goto _iter_begin_212b6945c;
		}
		_iter_end_212b6945c:;
	};
	return _58117_ok;
}

inline jule::Bool _212b682e6_checkImportsAllSelectionsFromCollection(_246ce861d_Sema* _self_, jule::Slice<jule::Ptr<_246cb76db_TypeEnum>>& _58062_s, jule::Ptr<_24496dc35_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_212b6c4b5:;
		if (it != expr.end()) {
			jule::Ptr<_246cb76db_TypeEnum> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_212b4d6a5_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_212b6c4b5:;
			++it;
			goto _iter_begin_212b6c4b5;
		}
		_iter_end_212b6c4b5:;
	};
	return _58117_ok;
}



inline jule::Bool _246cedd2c_checkImportAllSelections(_246ce861d_Sema* _self_, jule::Ptr<_246ce04c2_ImportInfo>& _59044_imp) {
	jule::Bool _59064_ok = false;
	_59064_ok=true;
	{
		auto &expr = _59044_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_212b56cda:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> &_59216_file = *it;
			{
				_59064_ok=(_212b57714_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Vars,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_212b58b77_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_TypeAliases,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_212b5b2ea_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Structs,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_212b60882_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Funcs,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_212b62356_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Traits,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_212b65326_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Enums,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_212b682e6_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_TypeEnums,_59044_imp.get()._field_Token) && _59064_ok);
			}
			_iter_next_212b56cda:;
			++it;
			goto _iter_begin_212b56cda;
		}
		_iter_end_212b56cda:;
	};
	return _59064_ok;
}



inline jule::Bool _246cee14b_checkImportSelections(_246ce861d_Sema* _self_, jule::Ptr<_246ce04c2_ImportInfo>& _60445_imp) {
	jule::Bool _60465_ok = false;
	if ((_60445_imp.get()._field_Selected.len() > 0LL)) {
		_60465_ok = _246ced601_checkImportSelectedSelections(&(*_self_), _60445_imp);
		return _60465_ok;
	} else if (_60445_imp.get()._field_ImportAll) {
		_60465_ok = _246cedd2c_checkImportAllSelections(&(*_self_), _60445_imp);
		return _60465_ok;
	};
	_60465_ok = true;
	return _60465_ok;
}



inline jule::Bool _246cee459_isUseAliasDuplication(_246ce861d_Sema* _self_, jule::Ptr<_246ce04c2_ImportInfo>& _61341_imp) {
	if ((_61341_imp.get()._field_Alias.len() == 0LL)) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_212b707d7:;
		if (it != expr.end()) {
			jule::Ptr<_246ce04c2_ImportInfo> _61821_imp2 = *it;
			{
				if ((_61821_imp2 == _61341_imp)) {
					goto _iter_end_212b707d7;
				};
				if ((_61821_imp2.get()._field_Alias == _61341_imp.get()._field_Alias)) {
					return true;
				};
				if (((_61821_imp2.get()._field_Ident == _61821_imp2.get()._field_LinkPath) && (_61821_imp2.get()._field_Ident == _61341_imp.get()._field_Alias))) {
					return true;
				};
			}
			_iter_next_212b707d7:;
			++it;
			goto _iter_begin_212b707d7;
		}
		_iter_end_212b707d7:;
	};
	return false;
}



inline jule::Bool _246cee767_checkImport(_246ce861d_Sema* _self_, jule::Ptr<_246ce04c2_ImportInfo>& _63335_imp) {
	if ((_63335_imp.get()._field_CppLinked || (_63335_imp.get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;
	};
	if (_246cee459_isUseAliasDuplication(&(*_self_), _63335_imp)) {
		_246ceb2d0_pushErr(&(*_self_), _63335_imp.get()._field_Token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>::make({jule::Any(_63335_imp.get()._field_Alias)}));
		_246ceb5ee_pushSugggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_63335_imp.get()._field_Duplicate))) {
		jule::Ptr<_246ce861d_Sema> _64421_sema = jule::new_ptr<_246ce861d_Sema>(_246ce861d_Sema{._field_flags=(*_self_)._field_flags});;
		_246d13391_check(_64421_sema, _63335_imp.get()._field_Package.get()._field_Files);
		if ((_64421_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_64421_sema.get()._field_errors);
			_64421_sema.get()._field_errors=nullptr;
			return false;
		};
	};
	return _246cee14b_checkImportSelections(&(*_self_), _63335_imp);
}



inline void _246cee943_checkImports(_246ce861d_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_212b75eb3:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _65821_file = *it;
			{
				_246ceae17_setCurrentFile(&(*_self_), _65821_file);
				{
					auto &expr = _65821_file.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_212b77734:;
					if (it != expr.end()) {
						jule::Ptr<_246ce04c2_ImportInfo> _66025_imp = *it;
						{
							jule::Bool _66121_ok = _246cee767_checkImport(&(*_self_), _66025_imp);;
							if ((!(_66121_ok))) {
								return;;
							};
						}
						_iter_next_212b77734:;
						++it;
						goto _iter_begin_212b77734;
					}
					_iter_end_212b77734:;
				};
			}
			_iter_next_212b75eb3:;
			++it;
			goto _iter_begin_212b75eb3;
		}
		_iter_end_212b75eb3:;
	};
}



inline void _246ceeb1e_implFileImpls(jule::Ptr<_246ce861d_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Impls;
		auto it = expr.begin();
		_iter_begin_212b78999:;
		if (it != expr.end()) {
			jule::Ptr<_246cbbb96_Impl> _67121_imp = *it;
			{
				_246d0a476_implImpl(_self_, _67121_imp);
			}
			_iter_next_212b78999:;
			++it;
			goto _iter_begin_212b78999;
		}
		_iter_end_212b78999:;
	};
}



inline void _246ceecea_implImpls(jule::Ptr<_246ce861d_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_212b7903d:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _67721_file = *it;
			{
				_246ceae17_setCurrentFile(_self_.ptr(), _67721_file);
				_246ceeb1e_implFileImpls(_self_);
			}
			_iter_next_212b7903d:;
			++it;
			goto _iter_begin_212b7903d;
		}
		_iter_end_212b7903d:;
	};
}



inline void _246ceeec6_checkEnums(jule::Ptr<_246ce861d_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_212b79c86:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _68421_file = *it;
			{
				_246ceae17_setCurrentFile(_self_.ptr(), _68421_file);
				_246d07aa0_checkEnumDecls(_self_);
			}
			_iter_next_212b79c86:;
			++it;
			goto _iter_begin_212b79c86;
		}
		_iter_end_212b79c86:;
	};
}



inline _246d9d4c5_typeChecker _246d00427_typeChecker(jule::Ptr<_246ce861d_Sema> _self_, jule::Trait<_246daaacb_Lookup> _69035_l, jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>> _69050_generics, jule::Ptr<_246d9c6b1_referencer> _69113_referencer) {
	_246d9d4c5_typeChecker _69217_tc = _246d9d4c5_typeChecker{._field_s=_self_, ._field_rootLookup=_69035_l, ._field_lookup=_69035_l, ._field_referencer=_69113_referencer, ._field_useGenerics=_69050_generics, };;
	{
		auto &_match_expr{ _69035_l };
		
		if (_match_expr.type_is<jule::Ptr<_246cc8862_scopeChecker>>()) {
			_case_begin_212b7c2d8:;
			{
				jule::Ptr<_246cc8862_scopeChecker> _70121_hard = _246ccbbd9_getHardRoot(_69035_l.operator jule::Ptr<_246cc8862_scopeChecker>());;
				_69217_tc._field_refers=_70121_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_212b7c1c8:;
	};
	if (((_69113_referencer != nullptr) && (_69113_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _69113_referencer.get()._field_owner };
			
			if (_match_expr.type_is<jule::Ptr<_246d8e2a7_TypeAlias>>()) {
				_case_begin_212b7c7b1:;
				{
					_69217_tc._field_ownerAlias=_69113_referencer.get()._field_owner.operator jule::Ptr<_246d8e2a7_TypeAlias>();
				}
			}
			_match_end_212b7be0e:;
		};
	};
	return _69217_tc;
}



inline jule::Ptr<_246d8ee9a_TypeKind> _246d00922_buildTypeWithRefers(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246125b27_TypeDecl>& _71744_t, jule::Trait<_246daaacb_Lookup> _71767_l, jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>> _71813_generics, jule::Ptr<_246d9c6b1_referencer> _71841_referencer) {
	return ({ auto _wrap_copy = _246d00427_typeChecker(_self_, _71767_l,_71813_generics,_71841_referencer); _246da5741_checkDecl(&_wrap_copy, _71744_t); });
}



inline jule::Bool _246d00e1c_checkTypeWithRefers(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246d94103_TypeSymbol>& _72444_t, jule::Trait<_246daaacb_Lookup> _72464_l, jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>> _72513_generics, jule::Ptr<_246d9c6b1_referencer> _72541_referencer) {
	jule::Bool _72568_ok = false;
	if (_246d944aa_checked(_72444_t.ptr())) {
		_72568_ok = true;
		return _72568_ok;
	};
	_72444_t.get()._field_Kind=_246d00922_buildTypeWithRefers(_self_, _72444_t.get()._field_Decl,_72464_l,_72513_generics,_72541_referencer);
	_72568_ok = _246d944aa_checked(_72444_t.ptr());
	return _72568_ok;
}



inline jule::Ptr<_246cb9c60_constraintChecker> _246d01181_constraintChecker(jule::Ptr<_246ce861d_Sema> _self_) {
	return jule::new_ptr<_246cb9c60_constraintChecker>(_246cb9c60_constraintChecker{._field_s=_self_, });
}



inline jule::Bool _246d01538_checkType(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246d94103_TypeSymbol>& _73934_t, jule::Trait<_246daaacb_Lookup> _73954_l) {
	return _246d00e1c_checkTypeWithRefers(_self_, _73934_t,_73954_l,nullptr,nullptr);
}



inline jule::Ptr<_246d8ee9a_TypeKind> _246d01989_buildTypeWithGenerics(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246125b27_TypeDecl>& _74546_t, jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>> _74613_generics, jule::Ptr<_246cac615_ReferenceStack> _74641_refers) {
	jule::Ptr<_246d9d4c5_typeChecker> _74717_tc = jule::new_ptr<_246d9d4c5_typeChecker>(_246d9d4c5_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_246daaacb_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_246daaacb_Lookup>(_self_, 3), ._field_refers=_74641_refers, ._field_useGenerics=_74613_generics, });;
	return _246da5741_checkDecl(_74717_tc.ptr(), _74546_t);
}



inline jule::Ptr<_246d8ee9a_TypeKind> _246d01c97_buildType(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246125b27_TypeDecl>& _75834_t) {
	return _246d01989_buildTypeWithGenerics(_self_, _75834_t,nullptr,nullptr);
}



inline jule::Ptr<_246d8ee9a_TypeKind> _246d020a5_selectType(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246125b27_TypeDecl>& _76335_t) {
	jule::Ptr<_246d9d4c5_typeChecker> _76417_tc = jule::new_ptr<_246d9d4c5_typeChecker>(_246d9d4c5_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_246daaacb_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_246daaacb_Lookup>(_self_, 3), ._field_selection=true, });;
	return _246da5741_checkDecl(_76417_tc.ptr(), _76335_t);
}



inline jule::Ptr<_246d60e16_Eval> _246d02506_evalpd(jule::Ptr<_246ce861d_Sema> _self_, jule::Trait<_246daaacb_Lookup> _77530_l, jule::Ptr<_246d8ee9a_TypeKind> _77545_p, jule::Ptr<_246d16372_Var> _77563_owner) {
	jule::Ptr<_246d60e16_Eval> _77617_e = jule::new_ptr<_246d60e16_Eval>(_246d60e16_Eval{._field_s=_self_, ._field_lookup=_77530_l, ._field_owner=_77563_owner, });;
	{
		auto &_match_expr{ _77530_l };
		
		if (_match_expr.type_is<jule::Ptr<_246cc8862_scopeChecker>>()) {
			_case_begin_212b8759b:;
			{
				_77617_e.get()._field_unsafety=_246ccace8_isUnsafe(_77530_l.operator jule::Ptr<_246cc8862_scopeChecker>());
			}
		}
		_match_end_212b8748b:;
	};
	_77617_e.get()._field_prefix=_77545_p;
	return _77617_e;
}



inline jule::Ptr<_246d60e16_Eval> _246d028ad_evalp(jule::Ptr<_246ce861d_Sema> _self_, jule::Trait<_246daaacb_Lookup> _79029_l, jule::Ptr<_246d8ee9a_TypeKind> _79044_p) {
	return _246d02506_evalpd(_self_, _79029_l,_79044_p,nullptr);
}



inline jule::Ptr<_246d60e16_Eval> _246d02bbb_eval(jule::Ptr<_246ce861d_Sema> _self_, jule::Trait<_246daaacb_Lookup> _79528_l) {
	return _246d028ad_evalp(_self_, _79528_l,nullptr);
}



inline jule::Bool _246d031b6_checkAssignType(jule::Ptr<_246ce861d_Sema> _self_, jule::Bool _79935_destIsRef, jule::Ptr<_246d8ee9a_TypeKind>& _79957_dest, jule::Ptr<_246d5e398_Data>& _80014_d, jule::Ptr<_24496dc35_Token> _80028_errorToken) {
	if (_80014_d.get()._field_Decl) {
		_246ceb2d0_pushErr(_self_.ptr(), _80028_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	};
	if (_79935_destIsRef) {
		if ((!(_246d906a4_Equals(_79957_dest, _80014_d.get()._field_Kind)))) {
			_246ceb2d0_pushErr(_self_.ptr(), _80028_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_79957_dest.ptr())),jule::Any(_246d90396_Str(_80014_d.get()._field_Kind.ptr()))}));
			return false;
		};
	} else {
		jule::Ptr<_246d49b69_assignTypeChecker> _81121_atc = jule::new_ptr<_246d49b69_assignTypeChecker>(_246d49b69_assignTypeChecker{._field_s=_self_, ._field_dest=_79957_dest, ._field_d=_80014_d, ._field_errorToken=_80028_errorToken});;
		jule::Bool _81717_ok = _246d4ace1_check(_81121_atc.ptr());;
		if ((!(_81717_ok))) {
			return false;
		};
	};
	if (((!(_246d5ec5b_IsConst(_80014_d.ptr()))) || (_246d920ac_Prim(_79957_dest.ptr()) == nullptr))) {
		return true;
	};
	jule::Str _82717_kind = _246d920ac_Prim(_79957_dest.ptr()).get()._field_Kind;;
	{
		
		if (_246ca3782_IsSigInt(_82717_kind)) {
			_case_begin_212b8e4a4:;
			{
				_2462496a7_SetI64(_80014_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_24624782b_AsI64(_80014_d.get()._field_Constant.ptr())));
			}
		}
		else if (_246ca38b4_IsUnsigInt(_82717_kind)) {
			_case_begin_212b8e52b:;
			{
				_246257462_SetU64(_80014_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_24623b974_AsU64(_80014_d.get()._field_Constant.ptr())));
			}
		}
		else if (_246ca3b28_IsFloat(_82717_kind)) {
			_case_begin_212b8e5a3:;
			{
				_2462617ce_SetF64(_80014_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_2462487e9_AsF64(_80014_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_212b8e3d8:;
	};
	return true;
}



inline jule::Bool _246d03617_checkTypeCompatibility(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246d8ee9a_TypeKind>& _84147_dest, jule::Ptr<_246d8ee9a_TypeKind>& _84214_src, jule::Ptr<_24496dc35_Token>& _84235_errorToken) {
	if ((_84214_src == nullptr)) {
		_246ceb2d0_pushErr(_self_.ptr(), _84235_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_84147_dest.ptr())),jule::Any(_246d90396_Str(_84214_src.ptr()))}));
		return false;
	};
	if ((_246d93c4b_Tup(_84214_src.ptr()) != nullptr)) {
		_246ceb2d0_pushErr(_self_.ptr(), _84235_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_84147_dest.ptr())),jule::Any(_246d90396_Str(_84214_src.ptr()))}));
		return false;
	};
	_246d48041_typeCompatibilityChecker _85617_tcc = _246d48041_typeCompatibilityChecker{._field_s=_self_, ._field_dest=_84147_dest, ._field_src=_84214_src, ._field_errorToken=_84235_errorToken};;
	if (_246d4962a_check(&_85617_tcc)) {
		return true;
	};
	_246ceb2d0_pushErr(_self_.ptr(), _84235_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_84147_dest.ptr())),jule::Any(_246d90396_Str(_84214_src.ptr()))}));
	return false;
}



inline jule::Ptr<_246d8ee9a_TypeKind> _246d039e1_buildNonGenericTypeKind(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246125b27_TypeDecl>& _87748_ast, jule::Slice<jule::Ptr<_246132e20_GenericDecl>>& _87814_generics) {
	jule::Ptr<_246d9d4c5_typeChecker> _87917_tc = jule::new_ptr<_246d9d4c5_typeChecker>(_246d9d4c5_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_246daaacb_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_246daaacb_Lookup>(_self_, 3), ._field_ignoreGenerics=_87814_generics, });;
	return _246da5741_checkDecl(_87917_tc.ptr(), _87748_ast);
}



inline void _246d03c99_buildFnNonGenericTypeKinds(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246cabb42_FnIns>& _88851_f) {
	jule::Slice<jule::Ptr<_246132e20_GenericDecl>> _88917_generics = nullptr;;
	if (_24618a829_IsMethod(_88851_f.get()._field_Decl.ptr())) {
		_88917_generics=jule::append(_88851_f.get()._field_Decl.get()._field_Generics,_88851_f.get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_88917_generics=_88851_f.get()._field_Decl.get()._field_Generics;
	};
	{
		auto &expr = _88851_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_212b97ed5:;
		if (it != expr.end()) {
			jule::Ptr<_246cab955_ParamIns> _89621_p = *it;
			{
				if ((!(_24617a220_IsSelf(_89621_p.get()._field_Decl.ptr())))) {
					_89621_p.get()._field_Kind=_246d039e1_buildNonGenericTypeKind(_self_, _89621_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_88917_generics);
				};
			}
			_iter_next_212b97ed5:;
			++it;
			goto _iter_begin_212b97ed5;
		}
		_iter_end_212b97ed5:;
	};
	if ((!(_24618a10e_IsVoid(_88851_f.get()._field_Decl.ptr())))) {
		_88851_f.get()._field_Result=_246d039e1_buildNonGenericTypeKind(_self_, _88851_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_88917_generics);
	};
}



inline jule::Ptr<_246cabb42_FnIns> _246d040b8_getTraitCheckFnKind(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246cab768_Fn>& _90644_f) {
	if ((_90644_f.get()._field_Instances.len() == 1LL)) {
		return _90644_f.get()._field_Instances[0LL];
	};
	jule::Ptr<_246cabb42_FnIns> _91017_ins = _24618148a_instanceForce(_90644_f);;
	jule::Ptr<_246d9d4c5_typeChecker> _91217_tc = jule::new_ptr<_246d9d4c5_typeChecker>(_246d9d4c5_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_246daaacb_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_246daaacb_Lookup>(_self_, 3), });;
	{
		auto &expr = _91017_ins.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_212b9c506:;
		if (it != expr.end()) {
			jule::Ptr<_246cab955_ParamIns> _91721_p = *it;
			{
				if ((!(_24617a220_IsSelf(_91721_p.get()._field_Decl.ptr())))) {
					_91721_p.get()._field_Kind=_246da5741_checkDecl(_91217_tc.ptr(), _91721_p.get()._field_Decl.get()._field_Kind.get()._field_Decl);
				};
			}
			_iter_next_212b9c506:;
			++it;
			goto _iter_begin_212b9c506;
		}
		_iter_end_212b9c506:;
	};
	if ((!(_24618a10e_IsVoid(_90644_f.ptr())))) {
		_91017_ins.get()._field_Result=_246da5741_checkDecl(_91217_tc.ptr(), _90644_f.get()._field_Result.get()._field_Kind.get()._field_Decl);
	};
	return _91017_ins;
}



inline jule::Bool _246d04519_checkConstraintsFn(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246cabb42_FnIns>& _92943_f, jule::Ptr<_24496dc35_Token>& _92959_et, jule::Ptr<_246cabb42_FnIns> _92975_exist) {
	jule::Ptr<_246cb9c60_constraintChecker> _93017_cc = _246d01181_constraintChecker(_self_);;
	_93017_cc.get()._field_et=_92959_et;
	_93017_cc.get()._field_fi=_92943_f;
	if ((_92975_exist != nullptr)) {
		{
			auto &expr = _92975_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_212ba0dcd:;
			if (it != expr.end()) {
				jule::I64 _93418_i = it - expr.begin();
				jule::Ptr<_246d8d76d_InsGeneric> _93425_g = *it;
				{
					_92943_f.get()._field_Generics[_93418_i].get()._field_Constraint=_93425_g.get()._field_Constraint;
				}
				_iter_next_212ba0dcd:;
				++it;
				_93418_i++;
				goto _iter_begin_212ba0dcd;
			}
			_iter_end_212ba0dcd:;
		};
	} else {
		_93017_cc.get()._field_uniq=true;
	};
	return _246cbab40_check(_93017_cc);
}



inline jule::Bool _246d0496a_checkConstraintsStruct(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246142319_StructIns>& _94347_s, jule::Ptr<_24496dc35_Token>& _94367_et, jule::Ptr<_246142319_StructIns> _94383_exist) {
	jule::Ptr<_246cb9c60_constraintChecker> _94417_cc = _246d01181_constraintChecker(_self_);;
	_94417_cc.get()._field_et=_94367_et;
	_94417_cc.get()._field_si=_94347_s;
	if ((_94383_exist != nullptr)) {
		{
			auto &expr = _94383_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_212ba3b8e:;
			if (it != expr.end()) {
				jule::I64 _94818_i = it - expr.begin();
				jule::Ptr<_246d8d76d_InsGeneric> _94825_g = *it;
				{
					_94347_s.get()._field_Generics[_94818_i].get()._field_Constraint=_94825_g.get()._field_Constraint;
				}
				_iter_next_212ba3b8e:;
				++it;
				_94818_i++;
				goto _iter_begin_212ba3b8e;
			}
			_iter_end_212ba3b8e:;
		};
	} else {
		_94417_cc.get()._field_uniq=true;
	};
	return _246cbab40_check(_94417_cc);
}



inline jule::Bool _246d04d22_fnEnvironment(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246cabb42_FnIns>& _96038_f, jule::Fn<jule::Bool(jule::Ptr<_246ce861d_Sema>&,jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>>&)> _96049_algo) {
	jule::Ptr<_246ce861d_Sema> _96117_sema = _96038_f.get()._field_Decl.get()._field_sema;;
	jule::Ptr<_246d5956e_SymbolTable> _96217_old = _96038_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_246ceae17_setCurrentFile(_96038_f.get()._field_Decl.get()._field_sema.ptr(), _96217_old);
	});;
	jule::Ptr<_246d5956e_SymbolTable> _96417_file = _246ce7c27_findFile(_96038_f.get()._field_Decl.get()._field_sema.get()._field_files,_96038_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_96417_file != nullptr)) {
		_246ceae17_setCurrentFile(_96038_f.get()._field_Decl.get()._field_sema.ptr(), _96417_file);
	};
	jule::I64 _96917_size = _96038_f.get()._field_Generics.len();;
	if (((_96038_f.get()._field_Decl != nullptr) && (_96038_f.get()._field_Decl.get()._field_Owner != nullptr))) {
		_96917_size+=_96038_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>> _97417_generics = jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>>::alloc(0LL, _96917_size);;
	_246ce78c5_appendGenericTypeAliases(_97417_generics,_96038_f);
	jule::Bool _97713_ok = _96049_algo(_96117_sema,_97417_generics);;
	if ((_96117_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_96117_sema.get()._field_errors);
		_96117_sema.get()._field_errors=nullptr;
	};
	return _97713_ok;
}



inline void _246d05097_checkFnParamKind(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246cab955_ParamIns>& _98741_p) {
	_98741_p.get()._field_Kind.get()._field_Variadic=_98741_p.get()._field_Decl.get()._field_Variadic;
	if ((_98741_p.get()._field_Decl.get()._field_Reference && (!(_246da7556_isValidForRef(_98741_p.get()._field_Kind))))) {
		_246ceb2d0_pushErr(_self_.ptr(), _98741_p.get()._field_Decl.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_98741_p.get()._field_Kind.ptr()))}));
	};
}



inline jule::Bool _246d053a5_reloadFnInsTypes(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246cabb42_FnIns> _99440_f) {
	if ((_246cabd2e_IsBuiltin(_99440_f.ptr()) || _246cabe61_IsAnon(_99440_f.ptr()))) {
		return true;
	};
	return _246d04d22_fnEnvironment(_self_, _99440_f,jule::Fn<jule::Bool(jule::Ptr<_246ce861d_Sema>&,jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>>&)>([=](jule::Ptr<_246ce861d_Sema>& _99843_sema, jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>>& _99861_generics) mutable -> jule::Bool {
		jule::Bool _99921_ok = true;;
		{
			auto &expr = _99440_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_212bb0b8a:;
			if (it != expr.end()) {
				jule::Ptr<_246cab955_ParamIns> _100025_p = *it;
				{
					if (_24617a220_IsSelf(_100025_p.get()._field_Decl.ptr())) {
						if (_24617b4da_IsRef(_100025_p.get()._field_Decl.ptr())) {
							_100025_p.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(jule::new_ptr<_246d98206_Sptr>(_246d98206_Sptr{._field_Elem=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_99440_f.get()._field_Owner, 0)})}), 7)});
						} else {
							_100025_p.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_99440_f.get()._field_Owner, 0)});
						};
					} else {
						_100025_p.get()._field_Kind=_246d01989_buildTypeWithGenerics(_99843_sema, _100025_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_99861_generics,_99440_f.get()._field_Refers);
						if ((_100025_p.get()._field_Kind != nullptr)) {
							_246d05097_checkFnParamKind(_self_, _100025_p);
						} else {
							_99921_ok=false;
						};
					};
				}
				_iter_next_212bb0b8a:;
				++it;
				goto _iter_begin_212bb0b8a;
			}
			_iter_end_212bb0b8a:;
		};
		if ((!(_24618a10e_IsVoid(_99440_f.get()._field_Decl.ptr())))) {
			_99440_f.get()._field_Result=_246d01989_buildTypeWithGenerics(_99843_sema, _99440_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_99861_generics,_99440_f.get()._field_Refers);
			_99921_ok=((_99440_f.get()._field_Result != nullptr) && _99921_ok);
		};
		return _99921_ok;
	}));
}



inline jule::Bool _246d05828_checkRefValidityForInitExpr(jule::Ptr<_246ce861d_Sema> _self_, jule::Bool _103047_leftMut, jule::Ptr<_246d5e398_Data>& _103067_d, jule::Ptr<_24496dc35_Token>& _103082_errorToken) {
	{
		auto &_match_expr{ _103067_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_246d16372_Var>>()) {
			_case_begin_212bb692c:;
			{
				goto _match_end_212baee64;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca770e_TraitSubIdentExprModel>>()) {
			_case_begin_212bb5d27:;
			{
				jule::Ptr<_246ca770e_TraitSubIdentExprModel> _103521_model = _103067_d.get()._field_Model.operator jule::Ptr<_246ca770e_TraitSubIdentExprModel>();;
				if ((!(_246ce675e_isValidModelForRef(_103521_model.get()._field_Expr)))) {
					_246ceb2d0_pushErr(_self_.ptr(), _103082_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_103521_model.get()._field_Method.get()._field_Ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca7b2c_StructSubIdentExprModel>>()) {
			_case_begin_212bb5d8d:;
			{
				jule::Ptr<_246ca7b2c_StructSubIdentExprModel> _104121_model = _103067_d.get()._field_Model.operator jule::Ptr<_246ca7b2c_StructSubIdentExprModel>();;
				if ((!(_246ce675e_isValidModelForRef(_104121_model.get()._field_Expr.get()._field_Model)))) {
					_246ceb2d0_pushErr(_self_.ptr(), _103082_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_104121_model.get()._field_Field.get()._field_Decl.get()._field_Ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca81e3_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_246ca83d0_CommonSubIdentExprModel>>()) {
			_case_begin_212bb5e04:;
			{
				_246ceb2d0_pushErr(_self_.ptr(), _103082_errorToken,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca5e05_UnaryExprModel>>()) {
			_case_begin_212bb5e6a:;
			{
				jule::Ptr<_246ca5e05_UnaryExprModel> _105121_unary = _103067_d.get()._field_Model.operator jule::Ptr<_246ca5e05_UnaryExprModel>();;
				if ((_105121_unary.get()._field_Op.get()._field_Kind == jule::Str("*", 1))) {
					if ((!(_246ce675e_isValidModelForRef(_103067_d.get()._field_Model)))) {
						_246ceb2d0_pushErr(_self_.ptr(), _103082_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					};
					goto _match_end_212baee64;
				};
				goto _case_begin_212bb5c5b;
			}
		}
		else {
			_case_begin_212bb5c5b:;
			{
				_246ceb2d0_pushErr(_self_.ptr(), _103082_errorToken,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_212baee64:;
	};
	if ((_103047_leftMut && (!(_103067_d.get()._field_Mutable)))) {
		_246ceb2d0_pushErr(_self_.ptr(), _103082_errorToken,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	};
	return true;
}



inline jule::Bool _246d05e00_checkValidityForInitExpr(jule::Ptr<_246ce861d_Sema> _self_, jule::Bool _107144_leftMut, jule::Bool _107159_leftRef, jule::Ptr<_246d8ee9a_TypeKind>& _107210_leftKind, jule::Ptr<_246d5e398_Data>& _107236_d, jule::Ptr<_24496dc35_Token>& _107251_errorToken) {
	if (((_107144_leftMut && (!(_107236_d.get()._field_Mutable))) && _246d91397_Mutable(_107236_d.get()._field_Kind.ptr()))) {
		_246ceb2d0_pushErr(_self_.ptr(), _107251_errorToken,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_107236_d.get()._field_Kind.ptr()))}));
		return false;
	};
	if (_107159_leftRef) {
		if ((!(_246d05828_checkRefValidityForInitExpr(_self_, _107144_leftMut,_107236_d,_107251_errorToken)))) {
			return false;
		};
	};
	jule::Ptr<_246d49b69_assignTypeChecker> _108217_atc = jule::new_ptr<_246d49b69_assignTypeChecker>(_246d49b69_assignTypeChecker{._field_s=_self_, ._field_d=_107236_d, ._field_errorToken=_107251_errorToken});;
	return _246d4a340_checkValidity(_108217_atc.ptr());
}



inline jule::Bool _246d062b8_checkTypeAliasDeclKind(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246d8e2a7_TypeAlias>& _109047_ta, jule::Trait<_246daaacb_Lookup> _109067_l) {
	jule::Bool _109080_ok = false;
	jule::Ptr<_246d5956e_SymbolTable> _109117_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_246ceae17_setCurrentFile(_self_.ptr(), _109117_old);
	});;
	if ((_109047_ta.get()._field_Token != nullptr)) {
		jule::Ptr<_246d5956e_SymbolTable> _109621_file = _246ce7c27_findFile(_self_.get()._field_files,_109047_ta.get()._field_Token.get()._field_File);;
		if ((_109621_file != nullptr)) {
			_246ceae17_setCurrentFile(_self_.ptr(), _109621_file);
		};
	};
	_109080_ok=_246d00e1c_checkTypeWithRefers(_self_, _109047_ta.get()._field_Kind,_109067_l,nullptr,jule::new_ptr<_246d9c6b1_referencer>(_246d9c6b1_referencer{._field_ident=_109047_ta.get()._field_Ident, ._field_owner=jule::Any(_109047_ta), ._field_refs=(&(_109047_ta.get()._field_Refers))}));
	if (((_109080_ok && (_246d92cc2_Arr(_109047_ta.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _246d92cc2_Arr(_109047_ta.get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_246ceb2d0_pushErr(_self_.ptr(), _109047_ta.get()._field_Kind.get()._field_Decl.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_109080_ok=false;
	};
	return _109080_ok;
}



inline void _246d065d7_checkTypeAliasDecl(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246d8e2a7_TypeAlias>& _111343_ta, jule::Trait<_246daaacb_Lookup> _111363_l) {
	if (_2449714c9_IsIgnoreIdent(_111343_ta.get()._field_Ident)) {
		_246ceb2d0_pushErr(_self_.ptr(), _111343_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_246d062b8_checkTypeAliasDeclKind(_self_, _111343_ta,_111363_l);
}



inline void _246d0685c_checkTypeAliasDeclDup(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246d8e2a7_TypeAlias>& _112146_ta) {
	if (_2449714c9_IsIgnoreIdent(_112146_ta.get()._field_Ident)) {
		_246ceb2d0_pushErr(_self_.ptr(), _112146_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_246cebe07_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_112146_ta)),_112146_ta.get()._field_Ident,_112146_ta.get()._field_CppLinked)) {
		_246ceb2d0_pushErr(_self_.ptr(), _112146_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_112146_ta.get()._field_Ident)}));
		_246ceb5ee_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_246d062b8_checkTypeAliasDeclKind(_self_, _112146_ta,jule::Trait<_246daaacb_Lookup>(_self_, 3));
}



inline jule::Bool _246d06ac1_checkTypeAliasDecls(jule::Ptr<_246ce861d_Sema> _self_) {
	jule::Bool _113341_ok = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_212bc9be8:;
		if (it != expr.end()) {
			jule::Ptr<_246d8e2a7_TypeAlias> _113421_ta = *it;
			{
				_246d0685c_checkTypeAliasDeclDup(_self_, _113421_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_113341_ok = false;
					return _113341_ok;
				};
			}
			_iter_next_212bc9be8:;
			++it;
			goto _iter_begin_212bc9be8;
		}
		_iter_end_212bc9be8:;
	};
	_113341_ok = true;
	return _113341_ok;
}



inline void _212bdc436_checkEnumItemsDup(_246ce861d_Sema* _self_, jule::Slice<jule::Ptr<_246cb55eb_EnumItem>> _114539_items) {
	{
		auto &expr = _114539_items;
		auto it = expr.begin();
		_iter_begin_212bdd48c:;
		if (it != expr.end()) {
			jule::Ptr<_246cb55eb_EnumItem> &_114616_item = *it;
			{
				if (_114616_item.get()._field_Ident.empty()) {
					goto _iter_next_212bdd48c;
				} else if (_2449714c9_IsIgnoreIdent(_114616_item.get()._field_Ident)) {
					_246ceb2d0_pushErr(&(*_self_), _114616_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _114539_items;
						auto it = expr.begin();
						_iter_begin_212bde317:;
						if (it != expr.end()) {
							jule::Ptr<_246cb55eb_EnumItem> &_115224_citem = *it;
							{
								if ((_114616_item == _115224_citem)) {
									goto _iter_end_212bde317;
								} else if ((_114616_item.get()._field_Ident == _115224_citem.get()._field_Ident)) {
									_246ceb2d0_pushErr(&(*_self_), _114616_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_114616_item.get()._field_Ident)}));
									_246ceb5ee_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_212bde317;
								};
							}
							_iter_next_212bde317:;
							++it;
							goto _iter_begin_212bde317;
						}
						_iter_end_212bde317:;
					};
				};
			}
			_iter_next_212bdd48c:;
			++it;
			goto _iter_begin_212bdd48c;
		}
		_iter_end_212bdd48c:;
	};
}

inline void _212be8475_checkEnumItemsDup(_246ce861d_Sema* _self_, jule::Slice<jule::Ptr<_246cb7125_TypeEnumItem>> _114539_items) {
	{
		auto &expr = _114539_items;
		auto it = expr.begin();
		_iter_begin_212be9773:;
		if (it != expr.end()) {
			jule::Ptr<_246cb7125_TypeEnumItem> &_114616_item = *it;
			{
				if (_114616_item.get()._field_Ident.empty()) {
					goto _iter_next_212be9773;
				} else if (_2449714c9_IsIgnoreIdent(_114616_item.get()._field_Ident)) {
					_246ceb2d0_pushErr(&(*_self_), _114616_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _114539_items;
						auto it = expr.begin();
						_iter_begin_212bea5ed:;
						if (it != expr.end()) {
							jule::Ptr<_246cb7125_TypeEnumItem> &_115224_citem = *it;
							{
								if ((_114616_item == _115224_citem)) {
									goto _iter_end_212bea5ed;
								} else if ((_114616_item.get()._field_Ident == _115224_citem.get()._field_Ident)) {
									_246ceb2d0_pushErr(&(*_self_), _114616_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_114616_item.get()._field_Ident)}));
									_246ceb5ee_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_212bea5ed;
								};
							}
							_iter_next_212bea5ed:;
							++it;
							goto _iter_begin_212bea5ed;
						}
						_iter_end_212bea5ed:;
					};
				};
			}
			_iter_next_212be9773:;
			++it;
			goto _iter_begin_212be9773;
		}
		_iter_end_212be9773:;
	};
}



inline void _246d070bb_checkEnumItemsStr(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246cb60e1_Enum>& _116542_e) {
	jule::Ptr<_246d60e16_Eval> _116617_eval = _246d02bbb_eval(_self_, jule::Trait<_246daaacb_Lookup>(_self_, 3));;
	{
		auto &expr = _116542_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_212bcbd71:;
		if (it != expr.end()) {
			jule::Ptr<_246cb55eb_EnumItem> _116721_item = *it;
			{
				if (_246cb59d6_AutoExpr(_116721_item.ptr())) {
					_116721_item.get()._field_Value=jule::new_ptr<_246d60421_Value>(_246d60421_Value{._field_Data=jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Constant=static__2462385db_NewStr(_116721_item.get()._field_Ident)})});
					_116721_item.get()._field_Value.get()._field_Data.get()._field_Model=static_cast<jule::Any>(_116721_item.get()._field_Value.get()._field_Data.get()._field_Constant);
				} else {
					jule::Ptr<_246d5e398_Data> _117625_d = _246d81695_evalExpr(_116617_eval, _116721_item.get()._field_Value.get()._field_Expr);;
					if ((_117625_d == nullptr)) {
						goto _iter_next_212bcbd71;
					};
					if ((!(_246d5ec5b_IsConst(_117625_d.ptr())))) {
						_246ceb2d0_pushErr(_self_.ptr(), _116721_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_246d031b6_checkAssignType(_self_, false,_116542_e.get()._field_Kind.get()._field_Kind,_117625_d,_116721_item.get()._field_Token);
					_116721_item.get()._field_Value.get()._field_Data=_117625_d;
				};
			}
			_iter_next_212bcbd71:;
			++it;
			goto _iter_begin_212bcbd71;
		}
		_iter_end_212bcbd71:;
	};
}



inline void _246d07341_checkEnumItemsInt(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246cb60e1_Enum>& _119142_e) {
	jule::Ptr<_246d94972_Prim> _119213_prim = _246d920ac_Prim(_119142_e.get()._field_Kind.get()._field_Kind.ptr());;
	jule::U64 _119317_max = static_cast<jule::U64>(_2466648a2_Max(_246d94cd5_Str(_119213_prim.ptr())));;
	jule::Ptr<_246d60e16_Eval> _119417_eval = _246d02bbb_eval(_self_, jule::Trait<_246daaacb_Lookup>(_self_, 3));;
	{
		auto &expr = _119142_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_212bd2508:;
		if (it != expr.end()) {
			jule::I64 _119514_i = it - expr.begin();
			jule::Ptr<_246cb55eb_EnumItem> _119521_item = *it;
			{
				if ((_119317_max == 0LLU)) {
					_246ceb2d0_pushErr(_self_.ptr(), _119521_item.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_119317_max)--;
				};
				if (_246cb59d6_AutoExpr(_119521_item.ptr())) {
					_119521_item.get()._field_Value=jule::new_ptr<_246d60421_Value>(_246d60421_Value{._field_Data=jule::new_ptr<_246d5e398_Data>()});
					{
						
						if (_246ca3782_IsSigInt(_246d94cd5_Str(_119213_prim.ptr()))) {
							_case_begin_212bd5330:;
							{
								_119521_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__246204db0_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((_119317_max - (_119317_max - static_cast<jule::U64>(_119514_i))))));
							}
						}
						else {
							_case_begin_212bd495b:;
							{
								_119521_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__24621bde9_NewU64(static_cast<jule::U64>((_119317_max - (_119317_max - static_cast<jule::U64>(_119514_i)))));
							}
						}
						_match_end_212bd48e5:;
					};
					_119521_item.get()._field_Value.get()._field_Data.get()._field_Model=static_cast<jule::Any>(_119521_item.get()._field_Value.get()._field_Data.get()._field_Constant);
				} else {
					jule::Ptr<_246d5e398_Data> _121325_d = _246d81695_evalExpr(_119417_eval, _119521_item.get()._field_Value.get()._field_Expr);;
					if ((_121325_d == nullptr)) {
						goto _iter_next_212bd2508;
					};
					if ((!(_246d5ec5b_IsConst(_121325_d.ptr())))) {
						_246ceb2d0_pushErr(_self_.ptr(), _119521_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_246d031b6_checkAssignType(_self_, false,_119142_e.get()._field_Kind.get()._field_Kind,_121325_d,_119521_item.get()._field_Token);
					_119521_item.get()._field_Value.get()._field_Data=_121325_d;
				};
			}
			_iter_next_212bd2508:;
			++it;
			_119514_i++;
			goto _iter_begin_212bd2508;
		}
		_iter_end_212bd2508:;
	};
}



inline void _246d075b6_checkEnumDecl(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246cb60e1_Enum>& _122638_e) {
	if (_2449714c9_IsIgnoreIdent(_122638_e.get()._field_Ident)) {
		_246ceb2d0_pushErr(_self_.ptr(), _122638_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_246cebe07_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_122638_e)),_122638_e.get()._field_Ident,false)) {
		_246ceb2d0_pushErr(_self_.ptr(), _122638_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_122638_e.get()._field_Ident)}));
		_246ceb5ee_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_122638_e.get()._field_Items.len() == 0LL)) {
		_246ceb2d0_pushErr(_self_.ptr(), _122638_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_122638_e.get()._field_Ident)}));
	};
	_212bdc436_checkEnumItemsDup(_self_.ptr(), _122638_e.get()._field_Items);
	if ((_122638_e.get()._field_Kind != nullptr)) {
		if ((!(_246d01538_checkType(_self_, _122638_e.get()._field_Kind,jule::Trait<_246daaacb_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_122638_e.get()._field_Kind=jule::new_ptr<_246d94103_TypeSymbol>(_246d94103_TypeSymbol{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_246d94972_Prim> _125317_t = _246d920ac_Prim(_122638_e.get()._field_Kind.get()._field_Kind.ptr());;
	if ((_125317_t == nullptr)) {
		_246ceb2d0_pushErr(_self_.ptr(), _122638_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_246d97ba6_IsStr(_125317_t.ptr())) {
			_case_begin_212be4064:;
			{
				_246d070bb_checkEnumItemsStr(_self_, _122638_e);
			}
		}
		else if (_246ca39e6_IsInt(_246d94cd5_Str(_125317_t.ptr()))) {
			_case_begin_212be3d55:;
			{
				_246d07341_checkEnumItemsInt(_self_, _122638_e);
			}
		}
		else {
			_case_begin_212be2da9:;
			{
				_246ceb2d0_pushErr(_self_.ptr(), _122638_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_212be2d43:;
	};
}



inline void _246d0783b_checkTypeEnumDecl(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246cb76db_TypeEnum>& _127042_e) {
	if (_2449714c9_IsIgnoreIdent(_127042_e.get()._field_Ident)) {
		_246ceb2d0_pushErr(_self_.ptr(), _127042_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_246cebe07_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_127042_e)),_127042_e.get()._field_Ident,false)) {
		_246ceb2d0_pushErr(_self_.ptr(), _127042_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_127042_e.get()._field_Ident)}));
		_246ceb5ee_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_127042_e.get()._field_Items.len() == 0LL)) {
		_246ceb2d0_pushErr(_self_.ptr(), _127042_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_127042_e.get()._field_Ident)}));
		return;;
	};
	_212be8475_checkEnumItemsDup(_self_.ptr(), _127042_e.get()._field_Items);
	{
		auto &expr = _127042_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_212be8ab3:;
		if (it != expr.end()) {
			jule::Ptr<_246cb7125_TypeEnumItem> _128421_item = *it;
			{
				if ((_128421_item.get()._field_Kind == nullptr)) {
					_246ceb2d0_pushErr(_self_.ptr(), _128421_item.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					goto _iter_next_212be8ab3;
				};
				jule::Bool _128917_ok = _246d01538_checkType(_self_, _128421_item.get()._field_Kind,jule::Trait<_246daaacb_Lookup>(_self_, 3));;
				if ((!(_128917_ok))) {
					goto _iter_next_212be8ab3;
				};
				jule::Ptr<_246d94972_Prim> _129317_p = _246d920ac_Prim(_128421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_129317_p != nullptr) && _246d97e1a_IsAny(_129317_p.ptr()))) {
					_246ceb2d0_pushErr(_self_.ptr(), _128421_item.get()._field_Token,jule::Str("the <any> type is not allowed for type-enum declarations", 56),jule::Slice<jule::Any>());
				};
			}
			_iter_next_212be8ab3:;
			++it;
			goto _iter_begin_212be8ab3;
		}
		_iter_end_212be8ab3:;
	};
	if ((_127042_e.get()._field_Items.len() == 1LL)) {
		jule::Ptr<_246cb7125_TypeEnumItem> _129921_item = _127042_e.get()._field_Items[0LL];;
		_246d8ee9a_TypeKind _130017_tk = _246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_127042_e, 4)};;
		if (((_129921_item.get()._field_Kind.get()._field_Kind != nullptr) && _246d906a4_Equals(_129921_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_246d8ee9a_TypeKind>)((&(_130017_tk))))))) {
			_246ceb2d0_pushErr(_self_.ptr(), _129921_item.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_246cb7a1b_Str(_127042_e.ptr()))}));
		};
	};
}



inline jule::Bool _246d07aa0_checkEnumDecls(jule::Ptr<_246ce861d_Sema> _self_) {
	jule::Bool _131036_ok = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Enums;
		auto it = expr.begin();
		_iter_begin_212c0357e:;
		if (it != expr.end()) {
			jule::Ptr<_246cb60e1_Enum> _131121_e = *it;
			{
				_246d075b6_checkEnumDecl(_self_, _131121_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_131036_ok = false;
					return _131036_ok;
				};
			}
			_iter_next_212c0357e:;
			++it;
			goto _iter_begin_212c0357e;
		}
		_iter_end_212c0357e:;
	};
	_131036_ok = true;
	return _131036_ok;
}



inline jule::Bool _246d07d14_checkTypeEnumDecls(jule::Ptr<_246ce861d_Sema> _self_) {
	jule::Bool _132240_ok = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_212c04dcc:;
		if (it != expr.end()) {
			jule::Ptr<_246cb76db_TypeEnum> _132321_e = *it;
			{
				_246d0783b_checkTypeEnumDecl(_self_, _132321_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_132240_ok = false;
					return _132240_ok;
				};
			}
			_iter_next_212c04dcc:;
			++it;
			goto _iter_begin_212c04dcc;
		}
		_iter_end_212c04dcc:;
	};
	_132240_ok = true;
	return _132240_ok;
}



inline jule::Bool _246d08122_checkDeclGenerics(_246ce861d_Sema* _self_, jule::Slice<jule::Ptr<_246132e20_GenericDecl>>& _133337_generics) {
	jule::Bool _133370_ok = false;
	_133370_ok=true;
	{
		auto &expr = _133337_generics;
		auto it = expr.begin();
		_iter_begin_212c0696c:;
		if (it != expr.end()) {
			jule::I64 _133513_i = it - expr.begin();
			jule::Ptr<_246132e20_GenericDecl> &_133516_g = *it;
			{
				if (_2449714c9_IsIgnoreIdent(_133516_g.get()._field_Ident)) {
					_246ceb2d0_pushErr(&(*_self_), _133516_g.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_133370_ok=false;
					goto _iter_next_212c0696c;
				};
				_julec_label_duplicationLookup:;
				{
					auto &expr = _133337_generics;
					auto it = expr.begin();
					_iter_begin_212c0795c:;
					if (it != expr.end()) {
						jule::I64 _134417_j = it - expr.begin();
						jule::Ptr<_246132e20_GenericDecl> &_134420_ct = *it;
						{
							{
								
								if ((_134417_j >= _133513_i)) {
									_case_begin_212c093ba:;
									{
										goto _iter_end_212c0795c;
									}
								}
								else if ((_133516_g.get()._field_Ident == _134420_ct.get()._field_Ident)) {
									_case_begin_212c09442:;
									{
										_246ceb2d0_pushErr(&(*_self_), _133516_g.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_133516_g.get()._field_Ident)}));
										_246ceb5ee_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_133370_ok=false;
										goto _iter_end_212c0795c;
									}
								}
								_match_end_212c09299:;
							};
						}
						_iter_next_212c0795c:;
						++it;
						_134417_j++;
						goto _iter_begin_212c0795c;
					}
					_iter_end_212c0795c:;
				};
			}
			_iter_next_212c0696c:;
			++it;
			_133513_i++;
			goto _iter_begin_212c0696c;
		}
		_iter_end_212c0696c:;
	};
	return _133370_ok;
}



inline jule::Bool _246d08430_checkFnDeclParamsDup(_246ce861d_Sema* _self_, jule::Ptr<_246cab768_Fn>& _136040_f) {
	jule::Bool _136050_ok = false;
	_136050_ok=true;
	_julec_label_check:;
	{
		auto &expr = _136040_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_212c0b9c7:;
		if (it != expr.end()) {
			jule::I64 _136313_i = it - expr.begin();
			jule::Ptr<_246cab57b_Param> &_136316_p = *it;
			{
				{
					auto &expr = _136040_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_212c0b884:;
					if (it != expr.end()) {
						jule::Ptr<_246132e20_GenericDecl> &_136520_g = *it;
						{
							if ((_136316_p.get()._field_Ident == _136520_g.get()._field_Ident)) {
								_136050_ok=false;
								_246ceb2d0_pushErr(&(*_self_), _136316_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_136316_p.get()._field_Ident)}));
								_246ceb5ee_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_212c0b9c7;
							};
						}
						_iter_next_212c0b884:;
						++it;
						goto _iter_begin_212c0b884;
					}
					_iter_end_212c0b884:;
				};
				_julec_label_paramsLookup:;
				{
					auto &expr = _136040_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_212c0d314:;
					if (it != expr.end()) {
						jule::I64 _137517_j = it - expr.begin();
						jule::Ptr<_246cab57b_Param> &_137520_jp = *it;
						{
							{
								
								if ((_137517_j >= _136313_i)) {
									_case_begin_212c101e5:;
									{
										goto _iter_end_212c0d314;
									}
								}
								else if ((_244971771_IsAnonIdent(_136316_p.get()._field_Ident) || _244971771_IsAnonIdent(_137520_jp.get()._field_Ident))) {
									_case_begin_212c1026c:;
									{
										goto _iter_end_212c0d314;
									}
								}
								else if ((_136316_p.get()._field_Ident == _137520_jp.get()._field_Ident)) {
									_case_begin_212c102e4:;
									{
										_136050_ok=false;
										_246ceb2d0_pushErr(&(*_self_), _136316_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_136316_p.get()._field_Ident)}));
										_246ceb5ee_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_212c0b9c7;
									}
								}
								_match_end_212c100b3:;
							};
						}
						_iter_next_212c0d314:;
						++it;
						_137517_j++;
						goto _iter_begin_212c0d314;
					}
					_iter_end_212c0d314:;
				};
			}
			_iter_next_212c0b9c7:;
			++it;
			_136313_i++;
			goto _iter_begin_212c0b9c7;
		}
		_iter_end_212c0b9c7:;
	};
	return _136050_ok;
}



inline jule::Bool _246d0873d_checkFnDeclResultDup(_246ce861d_Sema* _self_, jule::Ptr<_246cab768_Fn>& _139440_f) {
	jule::Bool _139450_ok = false;
	_139450_ok=true;
	if (_24618a10e_IsVoid(_139440_f.ptr())) {
		return _139450_ok;
	};
	{
		auto &expr = _139440_f.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_212c133c4:;
		if (it != expr.end()) {
			jule::I64 _140113_i = it - expr.begin();
			jule::Ptr<_24496dc35_Token> &_140116_v = *it;
			{
				if ((_2449714c9_IsIgnoreIdent(_140116_v.get()._field_Kind) || _244971771_IsAnonIdent(_140116_v.get()._field_Kind))) {
					goto _iter_next_212c133c4;
				};
				{
					auto &expr = _139440_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_212c14936:;
					if (it != expr.end()) {
						jule::Ptr<_246132e20_GenericDecl> &_140620_g = *it;
						{
							if ((_140116_v.get()._field_Kind == _140620_g.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_212c14936:;
						++it;
						goto _iter_begin_212c14936;
					}
					_iter_end_212c14936:;
				};
				{
					auto &expr = _139440_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_212c15c34:;
					if (it != expr.end()) {
						jule::Ptr<_246cab57b_Param> &_141220_p = *it;
						{
							if ((_140116_v.get()._field_Kind == _141220_p.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_212c15c34:;
						++it;
						goto _iter_begin_212c15c34;
					}
					_iter_end_212c15c34:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _139440_f.get()._field_Result.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_212c17043:;
					if (it != expr.end()) {
						jule::I64 _142017_j = it - expr.begin();
						jule::Ptr<_24496dc35_Token> &_142020_jv = *it;
						{
							{
								
								if ((_142017_j >= _140113_i)) {
									_case_begin_212c17d68:;
									{
										goto _iter_end_212c17043;
									}
								}
								else if ((_142020_jv.get()._field_Kind == _140116_v.get()._field_Kind)) {
									_case_begin_212c17de0:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_212c17c47:;
							};
						}
						_iter_next_212c17043:;
						++it;
						_142017_j++;
						goto _iter_begin_212c17043;
					}
					_iter_end_212c17043:;
				};
				goto _iter_next_212c133c4;
				_julec_label_exist:;
				_246ceb2d0_pushErr(&(*_self_), _140116_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_140116_v.get()._field_Kind)}));
				_246ceb5ee_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_139450_ok=false;
			}
			_iter_next_212c133c4:;
			++it;
			_140113_i++;
			goto _iter_begin_212c133c4;
		}
		_iter_end_212c133c4:;
	};
	return _139450_ok;
}



inline void _246d089b3_checkFnDeclPrototype(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246cab768_Fn>& _144145_f) {
	if ((_144145_f.get()._field_Exceptional && _144145_f.get()._field_CppLinked)) {
		_246ceb2d0_pushErr(_self_.ptr(), _144145_f.get()._field_Token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_144145_f.get()._field_Exceptional) {
		if (_24618b044_IsEntryPoint(_144145_f.ptr())) {
			_246ceb2d0_pushErr(_self_.ptr(), _144145_f.get()._field_Token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_24618bdbe_IsInit(_144145_f.ptr())) {
			_246ceb2d0_pushErr(_self_.ptr(), _144145_f.get()._field_Token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_246d08122_checkDeclGenerics(_self_.ptr(), _144145_f.get()._field_Generics)))) {
			_case_begin_212c1c91c:;
		}
		else if ((!(_246d08430_checkFnDeclParamsDup(_self_.ptr(), _144145_f)))) {
			_case_begin_212c1c983:;
		}
		else if ((!(_246d0873d_checkFnDeclResultDup(_self_.ptr(), _144145_f)))) {
			_case_begin_212c1c9e9:;
		}
		_match_end_212c1b2de:;
	};
}



inline void _246d08c38_checkTraitDeclMethod(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246cab768_Fn>& _146245_f) {
	if (_2449714c9_IsIgnoreIdent(_146245_f.get()._field_Ident)) {
		_246ceb2d0_pushErr(_self_.ptr(), _146245_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_146245_f.get()._field_sema=_self_;
	_246d089b3_checkFnDeclPrototype(_self_, _146245_f);
	jule::Ptr<_246cabb42_FnIns> _146917_ins = _24618225a_instance(_146245_f);;
	_246d053a5_reloadFnInsTypes(_self_, _146917_ins);
	_146917_ins.get()._field_reloaded=true;
	_246179087_appendInstance(_146245_f.ptr(), _146917_ins);
}



inline void _246d08ead_checkTraitDeclMethods(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246cb3e9b_Trait>& _147546_t) {
	{
		auto &expr = _147546_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_212c2136b:;
		if (it != expr.end()) {
			jule::I64 _147614_i = it - expr.begin();
			jule::Ptr<_246cab768_Fn> _147621_f = *it;
			{
				_246d08c38_checkTraitDeclMethod(_self_, _147621_f);
				_147546_t.get()._field_Mutable=(_147546_t.get()._field_Mutable || _147621_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicateLookup:;
				{
					auto &expr = _147546_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_212c23329:;
					if (it != expr.end()) {
						jule::I64 _148717_j = it - expr.begin();
						jule::Ptr<_246cab768_Fn> _148720_jf = *it;
						{
							{
								
								if ((_148717_j >= _147614_i)) {
									_case_begin_212c2446d:;
									{
										goto _iter_end_212c23329;
									}
								}
								else if ((_147621_f.get()._field_Ident == _148720_jf.get()._field_Ident)) {
									_case_begin_212c244e5:;
									{
										_246ceb2d0_pushErr(_self_.ptr(), _147621_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_147621_f.get()._field_Ident)}));
										_246ceb5ee_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_212c23329;
									}
								}
								_match_end_212c2434c:;
							};
						}
						_iter_next_212c23329:;
						++it;
						_148717_j++;
						goto _iter_begin_212c23329;
					}
					_iter_end_212c23329:;
				};
			}
			_iter_next_212c2136b:;
			++it;
			_147614_i++;
			goto _iter_begin_212c2136b;
		}
		_iter_end_212c2136b:;
	};
}



inline void _246d09233_checkTraitDecl(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246cb3e9b_Trait>& _150639_t) {
	if (_2449714c9_IsIgnoreIdent(_150639_t.get()._field_Ident)) {
		_246ceb2d0_pushErr(_self_.ptr(), _150639_t.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_246cebe07_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_150639_t)),_150639_t.get()._field_Ident,false)) {
		_246ceb2d0_pushErr(_self_.ptr(), _150639_t.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_150639_t.get()._field_Ident)}));
		_246ceb5ee_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_246d08ead_checkTraitDeclMethods(_self_, _150639_t);
}



inline jule::Bool _246d09497_checkTraitDecls(jule::Ptr<_246ce861d_Sema> _self_) {
	jule::Bool _151837_ok = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_212c288a1:;
		if (it != expr.end()) {
			jule::Ptr<_246cb3e9b_Trait> _151921_t = *it;
			{
				_246d09233_checkTraitDecl(_self_, _151921_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_151837_ok = false;
					return _151837_ok;
				};
			}
			_iter_next_212c288a1:;
			++it;
			goto _iter_begin_212c288a1;
		}
		_iter_end_212c288a1:;
	};
	_151837_ok = true;
	return _151837_ok;
}



inline jule::Bool _246d0984e_checkTraitImplMethods(_246ce861d_Sema* _self_, jule::Ptr<_246cb3e9b_Trait>& _152945_base, jule::Ptr<_246cbbb96_Impl>& _152960_ipl) {
	jule::Bool _152974_ok = false;
	_152974_ok=true;
	{
		auto &expr = _152960_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_212c2a7e8:;
		if (it != expr.end()) {
			jule::Ptr<_246cab768_Fn> &_153116_f = *it;
			{
				if ((_246cb4d26_FindMethod(_152945_base.ptr(), _153116_f.get()._field_Ident) == nullptr)) {
					_246ceb2d0_pushErr(&(*_self_), _153116_f.get()._field_Token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>::make({jule::Any(_152945_base.get()._field_Ident),jule::Any(_153116_f.get()._field_Ident)}));
					_152974_ok=false;
				};
			}
			_iter_next_212c2a7e8:;
			++it;
			goto _iter_begin_212c2a7e8;
		}
		_iter_end_212c2a7e8:;
	};
	return _152974_ok;
}



inline jule::Bool _246d09c06_implToStruct(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246117c3a_Struct>& _154037_dest, jule::Ptr<_246cbbb96_Impl>& _154057_ipl) {
	jule::Bool _154071_ok = false;
	_154071_ok=true;
	{
		auto &expr = _154057_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_212c2cd39:;
		if (it != expr.end()) {
			jule::Ptr<_246cab768_Fn> _154421_f = *it;
			{
				if (((_2460ec934_FindMethod(_154037_dest.ptr(), _154421_f.get()._field_Ident,_154421_f.get()._field_Statically) != nullptr) || (_246106685_FindField(_154037_dest.ptr(), _154421_f.get()._field_Ident) != nullptr))) {
					_246ceb2d0_pushErr(_self_.ptr(), _154421_f.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_154037_dest.get()._field_Ident),jule::Any(_154421_f.get()._field_Ident)}));
					_154071_ok=false;
					goto _iter_next_212c2cd39;
				};
				if (((_154037_dest.get()._field_Generics.len() > 0LL) && (_154421_f.get()._field_Generics.len() > 0LL))) {
					{
						auto &expr = _154421_f.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_212c30644:;
						if (it != expr.end()) {
							jule::Ptr<_246132e20_GenericDecl> _155224_fg = *it;
							{
								{
									auto &expr = _154037_dest.get()._field_Generics;
									auto it = expr.begin();
									_iter_begin_212c30ea2:;
									if (it != expr.end()) {
										jule::Ptr<_246132e20_GenericDecl> _155328_dg = *it;
										{
											if ((_155224_fg.get()._field_Ident == _155328_dg.get()._field_Ident)) {
												_246ceb2d0_pushErr(_self_.ptr(), _155224_fg.get()._field_Token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_154071_ok=false;
											};
										}
										_iter_next_212c30ea2:;
										++it;
										goto _iter_begin_212c30ea2;
									}
									_iter_end_212c30ea2:;
								};
							}
							_iter_next_212c30644:;
							++it;
							goto _iter_begin_212c30644;
						}
						_iter_end_212c30644:;
					};
				};
				_246cec226_checkDirectives(_self_, _154421_f.get()._field_Directives,jule::Any(_154421_f));
				_154421_f.get()._field_sema=_self_;
				_154421_f.get()._field_Owner=_154037_dest;
				_154037_dest.get()._field_Methods = jule::alloc_for_append(_154037_dest.get()._field_Methods,1);_154037_dest.get()._field_Methods.__push(_154421_f);;
			}
			_iter_next_212c2cd39:;
			++it;
			goto _iter_begin_212c2cd39;
		}
		_iter_end_212c2cd39:;
	};
	{
		auto &expr = _154057_ipl.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_212c2d29b:;
		if (it != expr.end()) {
			jule::Ptr<_246d16372_Var> _156921_v = *it;
			{
				;
				if (((_2460ec934_FindMethod(_154037_dest.ptr(), _156921_v.get()._field_Ident,true) != nullptr) || (_246105673_FindStatic(_154037_dest.ptr(), _156921_v.get()._field_Ident) != nullptr))) {
					_246ceb2d0_pushErr(_self_.ptr(), _156921_v.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_154037_dest.get()._field_Ident),jule::Any(_156921_v.get()._field_Ident)}));
					_154071_ok=false;
					goto _iter_next_212c2d29b;
				};
				_154037_dest.get()._field_Statics = jule::alloc_for_append(_154037_dest.get()._field_Statics,1);_154037_dest.get()._field_Statics.__push(_156921_v);;
			}
			_iter_next_212c2d29b:;
			++it;
			goto _iter_begin_212c2d29b;
		}
		_iter_end_212c2d29b:;
	};
	return _154071_ok;
}



inline void _246d09e7b_implTrait(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246cbbb96_Impl>& _158234_decl) {
	jule::Ptr<_246d8ee9a_TypeKind> _158317_base_t = _246d020a5_selectType(_self_, _158234_decl.get()._field_Base);;
	if ((_158317_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_246cb3e9b_Trait> _158717_base = _246d93773_Trait(_158317_base_t.ptr());;
	if ((_158717_base == nullptr)) {
		_246ceb2d0_pushErr(_self_.ptr(), _158234_decl.get()._field_Base.get()._field_Token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_158317_base_t.ptr()))}));
		_246ceb5ee_pushSugggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_246d8ee9a_TypeKind> _159417_destT = _246d020a5_selectType(_self_, _158234_decl.get()._field_Dest);;
	if ((_159417_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_246142319_StructIns> _159817_destS = _246d9350e_Struct(_159417_destT.ptr());;
	if ((_159817_destS == nullptr)) {
		_246ceb2d0_pushErr(_self_.ptr(), _158234_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_159417_destT.ptr()))}));
		_246ceb5ee_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_246117c3a_Struct> _160517_dest = _159817_destS.get()._field_Decl;;
	if ((_2449749b6_Dir(_160517_dest.get()._field_Token.get()._field_File.ptr()) != _2449749b6_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_246ceb2d0_pushErr(_self_.ptr(), _158234_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_158717_base.get()._field_Implemented = jule::alloc_for_append(_158717_base.get()._field_Implemented,1);_158717_base.get()._field_Implemented.__push(_160517_dest);;
	_160517_dest.get()._field_Implements = jule::alloc_for_append(_160517_dest.get()._field_Implements,1);_160517_dest.get()._field_Implements.__push(_158717_base);;
	if ((_158234_decl.get()._field_Statics.len() > 0LL)) {
		_246ceb2d0_pushErr(_self_.ptr(), _158234_decl.get()._field_Statics[0LL].get()._field_Token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_246d0984e_checkTraitImplMethods(_self_.ptr(), _158717_base,_158234_decl)))) {
			_case_begin_212c3de5a:;
			{
				return;;
			}
		}
		else if ((!(_246d09c06_implToStruct(_self_, _160517_dest,_158234_decl)))) {
			_case_begin_212c3dec1:;
			{
				return;;
			}
		}
		_match_end_212c3b72c:;
	};
}



inline void _246d0a201_implStruct(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246cbbb96_Impl>& _162735_decl) {
	jule::Ptr<_246d8ee9a_TypeKind> _162817_destT = _246d020a5_selectType(_self_, _162735_decl.get()._field_Dest);;
	if ((_162817_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_246142319_StructIns> _163217_destS = _246d9350e_Struct(_162817_destT.ptr());;
	if ((_163217_destS == nullptr)) {
		_246ceb2d0_pushErr(_self_.ptr(), _162735_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_162817_destT.ptr()))}));
		_246ceb5ee_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_246117c3a_Struct> _163917_dest = _163217_destS.get()._field_Decl;;
	if ((_2449749b6_Dir(_163917_dest.get()._field_Token.get()._field_File.ptr()) != _2449749b6_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_246ceb2d0_pushErr(_self_.ptr(), _162735_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_246d09c06_implToStruct(_self_, _163917_dest,_162735_decl)))) {
			_case_begin_212c43ee8:;
			{
				return;;
			}
		}
		_match_end_212c4359c:;
	};
}



inline void _246d0a476_implImpl(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246cbbb96_Impl>& _165233_decl) {
	{
		
		if (_246cbc092_IsTraitImpl(_165233_decl.ptr())) {
			_case_begin_212c44b86:;
			{
				_246d09e7b_implTrait(_self_, _165233_decl);
			}
		}
		else if (_246cbc306_IsStructImpl(_165233_decl.ptr())) {
			_case_begin_212c44c0d:;
			{
				_246d0a201_implStruct(_self_, _165233_decl);
			}
		}
		_match_end_212c44a65:;
	};
}



inline void _246d0a795_checkVarDecl(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246d16372_Var>& _166337_decl, jule::Trait<_246daaacb_Lookup> _166353_l) {
	if (_2449714c9_IsIgnoreIdent(_166337_decl.get()._field_Ident)) {
		_246ceb2d0_pushErr(_self_.ptr(), _166337_decl.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_246d1699e_IsTypeInferred(_166337_decl.ptr())) {
		if ((!(_246d1673a_IsInitialized(_166337_decl.ptr())))) {
			_246ceb2d0_pushErr(_self_.ptr(), _166337_decl.get()._field_Token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_246d01538_checkType(_self_, _166337_decl.get()._field_Kind,_166353_l);
	};
	if ((_166337_decl.get()._field_Constant && _166337_decl.get()._field_Reference)) {
		_246ceb2d0_pushErr(_self_.ptr(), _166337_decl.get()._field_Token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_246d1673a_IsInitialized(_166337_decl.ptr())))) {
		if (_166337_decl.get()._field_Constant) {
			_246ceb2d0_pushErr(_self_.ptr(), _166337_decl.get()._field_Token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_166337_decl.get()._field_Statically) {
			_246ceb2d0_pushErr(_self_.ptr(), _166337_decl.get()._field_Token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_166337_decl.get()._field_Reference) {
			_246ceb2d0_pushErr(_self_.ptr(), _166337_decl.get()._field_Token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _246d0aa1a_checkGlobalVarDecl(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246d16372_Var>& _169543_decl) {
	if (_246cebe07_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_169543_decl)),_169543_decl.get()._field_Ident,_169543_decl.get()._field_CppLinked)) {
		_246ceb2d0_pushErr(_self_.ptr(), _169543_decl.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_169543_decl.get()._field_Ident)}));
		_246ceb5ee_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_169543_decl.get()._field_CppLinked && _169543_decl.get()._field_Constant)) {
		_246ceb2d0_pushErr(_self_.ptr(), _169543_decl.get()._field_Token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_169543_decl.get()._field_CppLinked)) && (!(_169543_decl.get()._field_Constant))) && (!(_169543_decl.get()._field_Statically)))) {
		_246ceb2d0_pushErr(_self_.ptr(), _169543_decl.get()._field_Token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_246ceb5ee_pushSugggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_246cec226_checkDirectives(_self_, _169543_decl.get()._field_Directives,jule::Any(_169543_decl));
	_246d0a795_checkVarDecl(_self_, _169543_decl,jule::Trait<_246daaacb_Lookup>(_self_, 3));
}



inline jule::Bool _246d0ac7e_checkGlobalDecls(jule::Ptr<_246ce861d_Sema> _self_) {
	jule::Bool _171238_ok = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_212c50213:;
		if (it != expr.end()) {
			jule::Ptr<_246d16372_Var> _171321_decl = *it;
			{
				_246d0aa1a_checkGlobalVarDecl(_self_, _171321_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_171238_ok = false;
					return _171238_ok;
				};
			}
			_iter_next_212c50213:;
			++it;
			goto _iter_begin_212c50213;
		}
		_iter_end_212c50213:;
	};
	_171238_ok = true;
	return _171238_ok;
}



inline jule::Bool _246d0b136_checkStructTraitImpl(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246117c3a_Struct>& _172345_strct, jule::Ptr<_246cb3e9b_Trait>& _172366_trt) {
	jule::Bool _172381_ok = false;
	{
		auto &expr = _172366_trt.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_212c5208e:;
		if (it != expr.end()) {
			jule::Ptr<_246cab768_Fn> _172421_tf = *it;
			{
				jule::Bool _172521_exist = false;;
				jule::Ptr<_246cab768_Fn> _172621_sf = _2460ec934_FindMethod(_172345_strct.ptr(), _172421_tf.get()._field_Ident,_172421_tf.get()._field_Statically);;
				jule::Ptr<_246cabb42_FnIns> _172717_tfK = _246d040b8_getTraitCheckFnKind(_self_, _172421_tf);;
				if ((_172621_sf != nullptr)) {
					jule::Ptr<_246cabb42_FnIns> _172925_sfK = _246d040b8_getTraitCheckFnKind(_self_, _172621_sf);;
					_172521_exist=(((_172717_tfK.get()._field_Decl.get()._field_Public == _172925_sfK.get()._field_Decl.get()._field_Public) && (_172717_tfK.get()._field_Decl.get()._field_Ident == _172925_sfK.get()._field_Decl.get()._field_Ident)) && _24617da92_equalsTrait(_172717_tfK, _172925_sfK));
				};
				if (_172521_exist) {
					jule::Ptr<_2460dc858_Directive> _173521_d = _246d89648_findDirective(_172621_sf.get()._field_Directives,jule::Str("deprecated", 10));;
					if ((_173521_d != nullptr)) {
						_246ceb2d0_pushErr(_self_.ptr(), _173521_d.get()._field_Tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					_172381_ok=false;
				} else {
					;
					jule::Str _174225_s = _246cac1c5_GetKindStr(_172717_tfK.ptr(), true);;
					if (_172421_tf.get()._field_Public) {
						(_174225_s).buffer.insert(0, (jule::Str()));;
					};
					_246ceb2d0_pushErr(_self_.ptr(), _172345_strct.get()._field_Token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>::make({jule::Any(_172366_trt.get()._field_Ident),jule::Any(_174225_s)}));
					_172381_ok=false;
				};
			}
			_iter_next_212c5208e:;
			++it;
			goto _iter_begin_212c5208e;
		}
		_iter_end_212c5208e:;
	};
	return _172381_ok;
}



inline jule::Bool _246d0b444_checkStructImpls(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246117c3a_Struct>& _175341_s) {
	jule::Bool _175355_ok = false;
	_175355_ok=true;
	{
		auto &expr = _175341_s.get()._field_Implements;
		auto it = expr.begin();
		_iter_begin_212c59140:;
		if (it != expr.end()) {
			jule::Ptr<_246cb3e9b_Trait> _175521_trt = *it;
			{
				_175355_ok=(_246d0b136_checkStructTraitImpl(_self_, _175341_s,_175521_trt) && _175355_ok);
			}
			_iter_next_212c59140:;
			++it;
			goto _iter_begin_212c59140;
		}
		_iter_end_212c59140:;
	};
	return _175355_ok;
}



inline jule::Bool _246d0b752_checkStructFields(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246117c3a_Struct>& _176142_st) {
	jule::Bool _176157_ok = false;
	_176157_ok=true;
	{
		auto &expr = _176142_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_212c5a63b:;
		if (it != expr.end()) {
			jule::Ptr<_246108841_Field> _176321_f = *it;
			{
				_176321_f.get()._field_Owner=_176142_st;
				{
					auto &expr = _176142_st.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_212c5b076:;
					if (it != expr.end()) {
						jule::Ptr<_246108841_Field> _176520_cf = *it;
						{
							if ((_176321_f == _176520_cf)) {
								goto _iter_end_212c5b076;
							} else if ((_176321_f.get()._field_Ident == _176520_cf.get()._field_Ident)) {
								_246ceb2d0_pushErr(_self_.ptr(), _176321_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_176321_f.get()._field_Ident)}));
								_246ceb5ee_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_176157_ok=false;
							};
						}
						_iter_next_212c5b076:;
						++it;
						goto _iter_begin_212c5b076;
					}
					_iter_end_212c5b076:;
				};
			}
			_iter_next_212c5a63b:;
			++it;
			goto _iter_begin_212c5a63b;
		}
		_iter_end_212c5a63b:;
	};
	return _176157_ok;
}



inline void _246d0b9c7_checkStructDecl(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246117c3a_Struct>& _177840_s) {
	if (_2449714c9_IsIgnoreIdent(_177840_s.get()._field_Ident)) {
		_246ceb2d0_pushErr(_self_.ptr(), _177840_s.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_246cebe07_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_177840_s)),_177840_s.get()._field_Ident,_177840_s.get()._field_CppLinked)) {
		_246ceb2d0_pushErr(_self_.ptr(), _177840_s.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_177840_s.get()._field_Ident)}));
		_246ceb5ee_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_246cec226_checkDirectives(_self_, _177840_s.get()._field_Directives,jule::Any(_177840_s));
	{
		
		if ((!(_246d08122_checkDeclGenerics(_self_.ptr(), _177840_s.get()._field_Generics)))) {
			_case_begin_212c605ec:;
		}
		else if ((!(_246d0b752_checkStructFields(_self_, _177840_s)))) {
			_case_begin_212c60663:;
		}
		else if ((!(_246d0b444_checkStructImpls(_self_, _177840_s)))) {
			_case_begin_212c606c9:;
		}
		_match_end_212c60498:;
	};
}



inline jule::Bool _246d0bc3b_checkStructDecls(jule::Ptr<_246ce861d_Sema> _self_) {
	jule::Bool _179638_ok = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_212c61b09:;
		if (it != expr.end()) {
			jule::Ptr<_246117c3a_Struct> _179721_s = *it;
			{
				_246d0b9c7_checkStructDecl(_self_, _179721_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_179638_ok = false;
					return _179638_ok;
				};
			}
			_iter_next_212c61b09:;
			++it;
			goto _iter_begin_212c61b09;
		}
		_iter_end_212c61b09:;
	};
	_179638_ok = true;
	return _179638_ok;
}



inline void _246d0beb1_checkFnDecl(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246cab768_Fn>& _180736_f) {
	if (_2449714c9_IsIgnoreIdent(_180736_f.get()._field_Ident)) {
		_246ceb2d0_pushErr(_self_.ptr(), _180736_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_246cec226_checkDirectives(_self_, _180736_f.get()._field_Directives,jule::Any(_180736_f));
	_180736_f.get()._field_sema=_self_;
	_246d089b3_checkFnDeclPrototype(_self_, _180736_f);
	if (_246cebe07_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_180736_f)),_180736_f.get()._field_Ident,_180736_f.get()._field_CppLinked)) {
		if ((_180736_f.get()._field_Ident == jule::Str("init", 4))) {
			jule::Ptr<_246cab768_Fn> _181921_init = _246ce9e16_FindFn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_181921_init != nullptr)) {
				return;;
			};
		};
		_246ceb2d0_pushErr(_self_.ptr(), _180736_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_180736_f.get()._field_Ident)}));
		_246ceb5ee_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _246d0c225_checkFnDecls(jule::Ptr<_246ce861d_Sema> _self_) {
	jule::Bool _183034_ok = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_212c6736d:;
		if (it != expr.end()) {
			jule::Ptr<_246cab768_Fn> _183121_f = *it;
			{
				_246d0beb1_checkFnDecl(_self_, _183121_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_183034_ok = false;
					return _183034_ok;
				};
			}
			_iter_next_212c6736d:;
			++it;
			goto _iter_begin_212c6736d;
		}
		_iter_end_212c6736d:;
	};
	_183034_ok = true;
	return _183034_ok;
}



inline void _246d0c5dd_pushCycleError(_246ce861d_Sema* _self_, jule::Ptr<_246117c3a_Struct>& _184130_st1, jule::Ptr<_246117c3a_Struct>& _184145_st2, jule::Str& _184164_message) {
	;
	jule::Str _184313_refers_to = _2446412a9_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_184130_st1.get()._field_Ident),jule::Any(_184145_st2.get()._field_Ident)}));;
	(_184164_message).buffer.insert(0, (((_24459aab5_Repeat(jule::Str(" ", 1),4LL) + _184313_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _246d0ca3e_checkCrossCycle(_246ce861d_Sema* _self_, jule::Ptr<_246117c3a_Struct>& _184731_st1, jule::Ptr<_246117c3a_Struct>& _184746_st2, jule::Str& _184765_message) {
	{
		auto &expr = _184746_st2.get()._field_Uses;
		auto it = expr.begin();
		_iter_begin_212c70c28:;
		if (it != expr.end()) {
			jule::Ptr<_246117c3a_Struct> &_184816_u = *it;
			{
				if ((_184816_u == _184731_st1)) {
					_246d0c5dd_pushCycleError(&(*_self_), _184746_st2,_184816_u,_184765_message);
					return false;
				};
				if ((!(_246d0ca3e_checkCrossCycle(&(*_self_), _184731_st1,_184816_u,_184765_message)))) {
					_246d0c5dd_pushCycleError(&(*_self_), _184746_st2,_184816_u,_184765_message);
					return false;
				};
			}
			_iter_next_212c70c28:;
			++it;
			goto _iter_begin_212c70c28;
		}
		_iter_end_212c70c28:;
	};
	return true;
}



inline jule::Bool _246d0ceb2_checkStructDeriveIllegalCycles(_246ce861d_Sema* _self_, jule::Str _186249_derive, jule::Ptr<_246117c3a_Struct>& _186263_st1, jule::Ptr<_246d8ee9a_TypeKind>& _186282_k) {
	jule::Bool _186298_ok = false;
	jule::Ptr<_246117c3a_Struct> _186317_st2 = _246da81e4_getStructFromKind(_186282_k);;
	if ((_186317_st2 == nullptr)) {
		_186298_ok = true;
		return _186298_ok;
	};
	if ((_186263_st1 == _186317_st2)) {
		_246ceb2d0_pushErr(&(*_self_), _186263_st1.get()._field_Token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>::make({jule::Any(_186249_derive),jule::Any(_186263_st1.get()._field_Ident)}));
		_186298_ok = false;
		return _186298_ok;
	};
	jule::Str _187517_message = jule::Str();;
	if ((!(_246d0ca3e_checkCrossCycle(&(*_self_), _186263_st1,_186317_st2,_187517_message)))) {
		jule::Str _187721_errMsg = _187517_message;;
		_187517_message=jule::Str();
		_246d0c5dd_pushCycleError(&(*_self_), _186263_st1,_186317_st2,_187517_message);
		_187721_errMsg+=_187517_message;
		_246ceb2d0_pushErr(&(*_self_), _186263_st1.get()._field_Token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>::make({jule::Any(_186249_derive),jule::Any(_187721_errMsg)}));
		_186298_ok = false;
		return _186298_ok;
	};
	_186298_ok = true;
	return _186298_ok;
}



inline jule::Bool _246d0d303_checkStructInsDeriveClone(_246ce861d_Sema* _self_, jule::Ptr<_246142319_StructIns> _188748_st) {
	jule::Bool _188766_ok = false;
	if ((!(_246107ec2_IsDerives(_188748_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		_188766_ok = true;
		return _188766_ok;
	};
	{
		auto &expr = _188748_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_212c770b4:;
		if (it != expr.end()) {
			jule::Ptr<_24611d977_FieldIns> _189121_f = *it;
			{
				if ((_189121_f.get()._field_Kind == nullptr)) {
					goto _iter_next_212c770b4;
				};
				if ((!(_246d91ad4_SupportsCloning(_189121_f.get()._field_Kind.ptr())))) {
					_246ceb2d0_pushErr(&(*_self_), _188748_st.get()._field_Decl.get()._field_Token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_189121_f.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_188766_ok = false;
					return _188766_ok;
				};
				if ((!(_246d0ceb2_checkStructDeriveIllegalCycles(&(*_self_), jule::Str("Clone", 5),_188748_st.get()._field_Decl,_189121_f.get()._field_Kind)))) {
					_188766_ok = false;
					return _188766_ok;
				};
			}
			_iter_next_212c770b4:;
			++it;
			goto _iter_begin_212c770b4;
		}
		_iter_end_212c770b4:;
	};
	_188766_ok = true;
	return _188766_ok;
}



inline void _246d0d4e0_checkPackageDecls(jule::Ptr<_246ce861d_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_212c7a293:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _190921_f = *it;
			{
				_246ceae17_setCurrentFile(_self_.ptr(), _190921_f);
				if ((!(_246d07d14_checkTypeEnumDecls(_self_)))) {
					return;;
				};
				if ((!(_246d06ac1_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_212c7a293:;
			++it;
			goto _iter_begin_212c7a293;
		}
		_iter_end_212c7a293:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_212c7a6c2:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _191921_f = *it;
			{
				_246ceae17_setCurrentFile(_self_.ptr(), _191921_f);
				if ((!(_246d09497_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_212c7a6c2:;
			++it;
			goto _iter_begin_212c7a6c2;
		}
		_iter_end_212c7a6c2:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_212c7b86b:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _192621_f = *it;
			{
				_246ceae17_setCurrentFile(_self_.ptr(), _192621_f);
				if ((!(_246d0ac7e_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_212c7b86b:;
			++it;
			goto _iter_begin_212c7b86b;
		}
		_iter_end_212c7b86b:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_212c7d373:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _193321_f = *it;
			{
				_246ceae17_setCurrentFile(_self_.ptr(), _193321_f);
				{
					
					if ((!(_246d0c225_checkFnDecls(_self_)))) {
						_case_begin_212c7e2ca:;
					}
					else if ((!(_246d0bc3b_checkStructDecls(_self_)))) {
						_case_begin_212c7e341:;
					}
					else {
						_case_begin_212c7e264:;
						{
							goto _iter_next_212c7d373;
						}
					}
					_match_end_212c7e1ed:;
				};
				return;;
			}
			_iter_next_212c7d373:;
			++it;
			goto _iter_begin_212c7d373;
		}
		_iter_end_212c7d373:;
	};
}



inline void _246d0d831_checkDataForTypeInference(_246ce861d_Sema* _self_, jule::Ptr<_246d5e398_Data>& _194545_d, jule::Ptr<_24496dc35_Token>& _194556_err_token) {
	{
		
		if (_246d5e783_IsNil(_194545_d.ptr())) {
			_case_begin_212c803ec:;
			{
				_246ceb2d0_pushErr(&(*_self_), _194556_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_246d5e9e7_IsVoid(_194545_d.ptr())) {
			_case_begin_212c80474:;
			{
				_246ceb2d0_pushErr(&(*_self_), _194556_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_194545_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_212c804eb:;
			{
				_246ceb2d0_pushErr(&(*_self_), _194556_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_212c802ba:;
	};
}



inline void _246d0dab7_checkVar(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246d16372_Var>& _195633_v) {
	if (_195633_v.get()._field_CppLinked) {
		return;;
	};
	if (_246d1699e_IsTypeInferred(_195633_v.ptr())) {
		_195633_v.get()._field_Kind=jule::new_ptr<_246d94103_TypeSymbol>(_246d94103_TypeSymbol{._field_Kind=_195633_v.get()._field_Value.get()._field_Data.get()._field_Kind});
		_246d0d831_checkDataForTypeInference(_self_.ptr(), _195633_v.get()._field_Value.get()._field_Data,_195633_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		_246d05e00_checkValidityForInitExpr(_self_, _195633_v.get()._field_Mutable,_195633_v.get()._field_Reference,_195633_v.get()._field_Kind.get()._field_Kind,_195633_v.get()._field_Value.get()._field_Data,_195633_v.get()._field_Value.get()._field_Expr.get()._field_Token);
	} else {
		jule::Ptr<_246d9ad0d_Arr> _197321_arr = _246d92cc2_Arr(_195633_v.get()._field_Kind.get()._field_Kind.ptr());;
		if ((_197321_arr != nullptr)) {
			if (_197321_arr.get()._field_Auto) {
				jule::Ptr<_246d9ad0d_Arr> _197625_dataArr = _246d92cc2_Arr(_195633_v.get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_197625_dataArr != nullptr)) {
					_197321_arr.get()._field_N=_197625_dataArr.get()._field_N;
				};
			};
		};
		if (_246d031b6_checkAssignType(_self_, _195633_v.get()._field_Reference,_195633_v.get()._field_Kind.get()._field_Kind,_195633_v.get()._field_Value.get()._field_Data,_195633_v.get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_246d05e00_checkValidityForInitExpr(_self_, _195633_v.get()._field_Mutable,_195633_v.get()._field_Reference,_195633_v.get()._field_Kind.get()._field_Kind,_195633_v.get()._field_Value.get()._field_Data,_195633_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		};
	};
	if ((_195633_v.get()._field_Reference && (!(_246da7556_isValidForRef(_195633_v.get()._field_Kind.get()._field_Kind))))) {
		_246ceb2d0_pushErr(_self_.ptr(), _195633_v.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_195633_v.get()._field_Kind.get()._field_Kind.ptr()))}));
	};
	if (_195633_v.get()._field_Constant) {
		if ((!(_246d5ec5b_IsConst(_195633_v.get()._field_Value.get()._field_Data.ptr())))) {
			_246ceb2d0_pushErr(_self_.ptr(), _195633_v.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_195633_v.get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_246d93c4b_Tup(_195633_v.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		_195633_v.get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _246d0ddd6_checkTypeVar(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246d16372_Var>& _201137_decl, jule::Trait<_246daaacb_Lookup> _201153_l) {
	if ((_201137_decl.get()._field_CppLinked || (!(_246d1673a_IsInitialized(_201137_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_246d60e16_Eval> _201617_eval = nullptr;;
	if ((_201137_decl.get()._field_Kind != nullptr)) {
		_201617_eval=_246d02506_evalpd(_self_, _201153_l,_201137_decl.get()._field_Kind.get()._field_Kind,_201137_decl);
	} else {
		_201617_eval=_246d02506_evalpd(_self_, _201153_l,nullptr,_201137_decl);
	};
	_201617_eval.get()._field_immutable=(!(_201137_decl.get()._field_Mutable));
	_201137_decl.get()._field_Value.get()._field_Data=_246d81695_evalExpr(_201617_eval, _201137_decl.get()._field_Value.get()._field_Expr);
	if ((_201137_decl.get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_246d0dab7_checkVar(_self_, _201137_decl);
}



inline void _246d0e0b2_checkGlobalTypes(jule::Ptr<_246ce861d_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_212c90891:;
		if (it != expr.end()) {
			jule::Ptr<_246d16372_Var> _203221_decl = *it;
			{
				if (((_246d1673a_IsInitialized(_203221_decl.ptr()) && (_203221_decl.get()._field_Value.get()._field_Data == nullptr)) || (_246d1699e_IsTypeInferred(_203221_decl.ptr()) && (_203221_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_246d0ddd6_checkTypeVar(_self_, _203221_decl,jule::Trait<_246daaacb_Lookup>(_self_, 3));
				};
			}
			_iter_next_212c90891:;
			++it;
			goto _iter_begin_212c90891;
		}
		_iter_end_212c90891:;
	};
}



inline jule::Ptr<_246cabb42_FnIns> _246d0e469_readyToCheckFn(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246142319_StructIns>& _204339_s, jule::Ptr<_246cab768_Fn>& _204359_f) {
	jule::Ptr<_246cabb42_FnIns> _204417_ins = _24618225a_instance(_204359_f);;
	if ((_204359_f.get()._field_Instances.len() != 0LL)) {
		return _204417_ins;
	};
	_204417_ins.get()._field_Owner=_204339_s;
	_246179087_appendInstance(_204359_f.ptr(), _204417_ins);
	_204417_ins.get()._field_reloaded=true;
	if (_246d053a5_reloadFnInsTypes(_self_, _204417_ins)) {
		return _204417_ins;
	};
	return nullptr;
}



inline void _246d0e788_checkTypeMethod(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246142319_StructIns>& _205740_s, jule::Ptr<_246cab768_Fn>& _205760_f) {
	if ((_205760_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_246cabb42_FnIns> _206217_ins = _205760_f.get()._field_Instances[0LL];;
	if ((_206217_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_246d11e61_checkFnIns(_self_, _206217_ins);
}



inline jule::Ptr<_246cabb42_FnIns> _246d0ebd9_checkStructInsOp(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246142319_StructIns>& _207041_s, jule::Ptr<_246cab768_Fn>& _207061_f, jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)> _207069_p) {
	if ((((_207061_f == nullptr) || (_207061_f.get()._field_Generics.len() > 0LL)) || (!(_207069_p(_207061_f))))) {
		return nullptr;
	};
	return _207061_f.get()._field_Instances[0LL];
}



inline jule::Bool _246d10091_checkStructEnv(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246142319_StructIns>& _208039_s, jule::Ptr<_24496dc35_Token> _208058_errorToken) {
	jule::Bool _208080_ok = false;
	_246d9d4c5_typeChecker _208117_tc = _246d9d4c5_typeChecker{._field_s=_208039_s.get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_246daaacb_Lookup>(_208039_s.get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_246daaacb_Lookup>(_208039_s.get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_246d9c6b1_referencer>(_246d9c6b1_referencer{._field_ident=_208039_s.get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any(_208039_s.get()._field_Decl), }), ._field_refers=_208039_s.get()._field_Refers, };;
	if ((_208039_s.get()._field_Generics.len() > 0LL)) {
		_208117_tc._field_useGenerics=jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>>::alloc(0LL, _208039_s.get()._field_Generics.len());
		{
			auto &expr = _208039_s.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_212c9a37e:;
			if (it != expr.end()) {
				jule::I64 _209418_i = it - expr.begin();
				jule::Ptr<_246d8d76d_InsGeneric> _209425_g = *it;
				{
					jule::Ptr<_246132e20_GenericDecl> _209525_decl = _208039_s.get()._field_Decl.get()._field_Generics[_209418_i];;
					_208117_tc._field_useGenerics = jule::alloc_for_append(_208117_tc._field_useGenerics,1);_208117_tc._field_useGenerics.__push(jule::new_ptr<_246d8e2a7_TypeAlias>(_246d8e2a7_TypeAlias{._field_Token=_209525_decl.get()._field_Token, ._field_Ident=_209525_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_246d94103_TypeSymbol>(_246d94103_TypeSymbol{._field_Kind=_209425_g.get()._field_Kind}), }));;
				}
				_iter_next_212c9a37e:;
				++it;
				_209418_i++;
				goto _iter_begin_212c9a37e;
			}
			_iter_end_212c9a37e:;
		};
	};
	jule::Ptr<_246d5956e_SymbolTable> _210417_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_246ceae17_setCurrentFile(_self_.ptr(), _210417_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != _208039_s.get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_246d5956e_SymbolTable> _210821_file = _246ce7c27_findFile(_self_.get()._field_files,_208039_s.get()._field_Decl.get()._field_Token.get()._field_File);;
		if ((_210821_file != nullptr)) {
			_246ceae17_setCurrentFile(_self_.ptr(), _210821_file);
		};
	};
	if ((_208039_s.get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_246cb9c60_constraintChecker> _211521_cc = _246d01181_constraintChecker(_self_);;
		_211521_cc.get()._field_et=_208058_errorToken;
		_211521_cc.get()._field_si=_208039_s;
		_211521_cc.get()._field_genericsA=_208117_tc._field_useGenerics;
		_211521_cc.get()._field_uniq=true;
		if ((!(_246cbab40_check(_211521_cc)))) {
			return _208080_ok;
		};
	};
	_208080_ok=true;
	if ((_208039_s.get()._field_Statics.len() > 0LL)) {
		jule::I64 _212821_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_208117_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto &expr = _208039_s.get()._field_Statics;
			auto it = expr.begin();
			_iter_begin_212ca34ca:;
			if (it != expr.end()) {
				jule::Ptr<_246d16372_Var> _213025_v = *it;
				{
					_246d0a795_checkVarDecl(_self_, _213025_v,jule::Trait<_246daaacb_Lookup>(_self_, 3));
					_246d0ddd6_checkTypeVar(_self_, _213025_v,jule::Trait<_246daaacb_Lookup>(_self_, 3));
					_208080_ok=(((_self_.get()._field_errors.len() - _212821_n) == 0LL) && _208080_ok);
				}
				_iter_next_212ca34ca:;
				++it;
				goto _iter_begin_212ca34ca;
			}
			_iter_end_212ca34ca:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_208117_tc._field_useGenerics.len());
		if ((!(_208080_ok))) {
			_208080_ok = false;
			return _208080_ok;
		};
	};
	jule::Ptr<_246d60e16_Eval> _214117_eval = _246d02bbb_eval(_self_, jule::Trait<_246daaacb_Lookup>(_self_, 3));;
	{
		auto &expr = _208039_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_212ca5e4a:;
		if (it != expr.end()) {
			jule::Ptr<_24611d977_FieldIns> _214221_f = *it;
			{
				jule::Ptr<_246d8ee9a_TypeKind> _214321_kind = _246da5741_checkDecl(&_208117_tc, _214221_f.get()._field_Decl.get()._field_Kind.get()._field_Decl);;
				_208080_ok=((_214321_kind != nullptr) && _208080_ok);
				if ((_214321_kind == nullptr)) {
					if (((_self_ != _208039_s.get()._field_Decl.get()._field_sema) && (_208039_s.get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_208039_s.get()._field_Decl.get()._field_sema.get()._field_errors);
						_208039_s.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_212ca5e4a;
				};
				_214221_f.get()._field_Kind=_214321_kind;
				_208039_s.get()._field_Mutable=(_208039_s.get()._field_Mutable || ((!(_214221_f.get()._field_Decl.get()._field_Mutable)) && _246d91397_Mutable(_214221_f.get()._field_Kind.ptr())));
				_246d0d303_checkStructInsDeriveClone(_self_.ptr(), _208039_s);
				if ((_214221_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_212ca5e4a;
				};
				_214117_eval.get()._field_prefix=_214221_f.get()._field_Kind;
				_214117_eval.get()._field_field=_214221_f;
				_214221_f.get()._field_Default=_246d81695_evalExpr(_214117_eval, _214221_f.get()._field_Decl.get()._field_Default);
				if ((_214221_f.get()._field_Default == nullptr)) {
					goto _iter_next_212ca5e4a;
				};
				;
				_246d031b6_checkAssignType(_self_, false,_214221_f.get()._field_Kind,_214221_f.get()._field_Default,_214221_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_212ca5e4a:;
			++it;
			goto _iter_begin_212ca5e4a;
		}
		_iter_end_212ca5e4a:;
	};
	return _208080_ok;
}



inline jule::Bool _246d10448_precheckStructIns(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246142319_StructIns>& _217642_s, jule::Ptr<_24496dc35_Token> _217661_errorToken) {
	jule::Bool _217683_ok = false;
	_217683_ok=_246d10091_checkStructEnv(_self_, _217642_s,_217661_errorToken);
	if ((!(_217683_ok))) {
		_217683_ok = false;
		return _217683_ok;
	};
	{
		auto &expr = _217642_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_212cad727:;
		if (it != expr.end()) {
			jule::Ptr<_246cab768_Fn> _218121_f = *it;
			{
				if ((_218121_f.get()._field_Generics.len() == 0LL)) {
					if ((_246d0e469_readyToCheckFn(_self_, _217642_s,_218121_f) == nullptr)) {
						_217683_ok = false;
						return _217683_ok;
					};
				};
			}
			_iter_next_212cad727:;
			++it;
			goto _iter_begin_212cad727;
		}
		_iter_end_212cad727:;
	};
	_217683_ok = true;
	return _217683_ok;
}



inline void _246d106bd_checkStructIns(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246142319_StructIns>& _219139_s) {
	{
		auto &expr = _219139_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_212cb020c:;
		if (it != expr.end()) {
			jule::Ptr<_246cab768_Fn> _219221_f = *it;
			{
				_246d0e788_checkTypeMethod(_self_, _219139_s,_219221_f);
			}
			_iter_next_212cb020c:;
			++it;
			goto _iter_begin_212cb020c;
		}
		_iter_end_212cb020c:;
	};
}



inline void _246d10943_checkTypeStruct(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246117c3a_Struct>& _219740_s) {
	if (_219740_s.get()._field_CppLinked) {
		return;;
	};
	if ((_219740_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _219740_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_212cb1ad2:;
		if (it != expr.end()) {
			jule::Ptr<_246142319_StructIns> _221021_ins = *it;
			{
				_246d106bd_checkStructIns(_self_, _221021_ins);
			}
			_iter_next_212cb1ad2:;
			++it;
			goto _iter_begin_212cb1ad2;
		}
		_iter_end_212cb1ad2:;
	};
}



inline void _246d10b1e_checkStructTypes(jule::Ptr<_246ce861d_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_212cb22b9:;
		if (it != expr.end()) {
			jule::Ptr<_246117c3a_Struct> _221621_s = *it;
			{
				_246d10943_checkTypeStruct(_self_, _221621_s);
			}
			_iter_next_212cb22b9:;
			++it;
			goto _iter_begin_212cb22b9;
		}
		_iter_end_212cb22b9:;
	};
}



inline void _246d10db6_checkStructInsOperators(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246142319_StructIns> _222147_s) {
	{
		auto &expr = _222147_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_212cb370a:;
		if (it != expr.end()) {
			jule::Ptr<_246cab768_Fn> _222221_m = *it;
			{
				{
					auto &_match_expr{ _222221_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_212cb44ec:;
						{
							_222147_s.get()._field_Operators._field_Eq=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _222565_f) mutable -> jule::Bool {
								return static__246d18121_Eq(_222565_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_212cb4574:;
						{
							_222147_s.get()._field_Operators._field_Gt=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _222765_f) mutable -> jule::Bool {
								return static__246d183b8_Gt(_222765_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_212cb45eb:;
						{
							_222147_s.get()._field_Operators._field_GtEq=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _222967_f) mutable -> jule::Bool {
								return static__246d18660_GtEq(_222967_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_212cb4673:;
						{
							_222147_s.get()._field_Operators._field_Lt=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _223165_f) mutable -> jule::Bool {
								return static__246d18907_Lt(_223165_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_212cb46ea:;
						{
							_222147_s.get()._field_Operators._field_LtEq=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _223367_f) mutable -> jule::Bool {
								return static__246d18b9e_LtEq(_223367_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_212cb4772:;
						{
							_222147_s.get()._field_Operators._field_Shl=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _223566_f) mutable -> jule::Bool {
								return static__246d19287_Shl(_223566_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_212cb47e9:;
						{
							_222147_s.get()._field_Operators._field_Shr=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _223766_f) mutable -> jule::Bool {
								return static__246d1952e_Shr(_223766_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_212cb4871:;
						{
							_222147_s.get()._field_Operators._field_Add=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _223966_f) mutable -> jule::Bool {
								return static__246d197c6_Add(_223966_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_212cb48e8:;
						{
							_222147_s.get()._field_Operators._field_Sub=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _224166_f) mutable -> jule::Bool {
								return static__246d19a6d_Sub(_224166_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_212cb4970:;
						{
							_222147_s.get()._field_Operators._field_Div=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _224366_f) mutable -> jule::Bool {
								return static__246d19d15_Div(_224366_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_212cb49e7:;
						{
							_222147_s.get()._field_Operators._field_Mul=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _224566_f) mutable -> jule::Bool {
								return static__246d1a0ac_Mul(_224566_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_212cb4a6e:;
						{
							_222147_s.get()._field_Operators._field_Mod=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _224766_f) mutable -> jule::Bool {
								return static__246d1a354_Mod(_224766_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_212cb4ae6:;
						{
							_222147_s.get()._field_Operators._field_BitAnd=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _224969_f) mutable -> jule::Bool {
								return static__246d1a5eb_BitAnd(_224969_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_212cb4b6d:;
						{
							_222147_s.get()._field_Operators._field_BitOr=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _225168_f) mutable -> jule::Bool {
								return static__246d1a893_BitOr(_225168_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_212cb4be5:;
						{
							_222147_s.get()._field_Operators._field_BitXor=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _225369_f) mutable -> jule::Bool {
								return static__246d1ab3a_BitXor(_225369_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_212cb4c6c:;
						{
							_222147_s.get()._field_Operators._field_Neg=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _225566_f) mutable -> jule::Bool {
								return static__246d1b223_Neg(_225566_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_212cb4ce4:;
						{
							_222147_s.get()._field_Operators._field_Pos=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _225766_f) mutable -> jule::Bool {
								return static__246d1b4ba_Pos(_225766_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_212cb4d6b:;
						{
							_222147_s.get()._field_Operators._field_BitNot=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _225969_f) mutable -> jule::Bool {
								return static__246d1b762_BitNot(_225969_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_212cb4de3:;
						{
							_222147_s.get()._field_Operators._field_AddAssign=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _226172_f) mutable -> jule::Bool {
								return static__246d1bd4a_AddAssign(_226172_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_212cb4e6a:;
						{
							_222147_s.get()._field_Operators._field_SubAssign=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _226372_f) mutable -> jule::Bool {
								return static__246d1c0e2_SubAssign(_226372_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_212cb4ee2:;
						{
							_222147_s.get()._field_Operators._field_DivAssign=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _226572_f) mutable -> jule::Bool {
								return static__246d1c389_DivAssign(_226572_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_212cb5069:;
						{
							_222147_s.get()._field_Operators._field_MulAssign=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _226772_f) mutable -> jule::Bool {
								return static__246d1c631_MulAssign(_226772_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_212cb50e1:;
						{
							_222147_s.get()._field_Operators._field_ModAssign=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _226972_f) mutable -> jule::Bool {
								return static__246d1c8c8_ModAssign(_226972_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_212cb5168:;
						{
							_222147_s.get()._field_Operators._field_ShlAssign=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _227172_f) mutable -> jule::Bool {
								return static__246d1cb70_ShlAssign(_227172_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_212cb51e0:;
						{
							_222147_s.get()._field_Operators._field_ShrAssign=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _227372_f) mutable -> jule::Bool {
								return static__246d1ce17_ShrAssign(_227372_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_212cb5267:;
						{
							_222147_s.get()._field_Operators._field_BitOrAssign=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _227574_f) mutable -> jule::Bool {
								return static__246d1d1ae_BitOrAssign(_227574_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_212cb52de:;
						{
							_222147_s.get()._field_Operators._field_BitAndAssign=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _227775_f) mutable -> jule::Bool {
								return static__246d1d456_BitAndAssign(_227775_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_212cb5366:;
						{
							_222147_s.get()._field_Operators._field_BitXorAssign=_246d0ebd9_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_246cab768_Fn>)>([=](jule::Ptr<_246cab768_Fn> _227975_f) mutable -> jule::Bool {
								return static__246d1d6ed_BitXorAssign(_227975_f);
							}));
						}
					}
					_match_end_212cb40ac:;
				};
			}
			_iter_next_212cb370a:;
			++it;
			goto _iter_begin_212cb370a;
		}
		_iter_end_212cb370a:;
	};
}



inline void _246d1114c_precheckStructType(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246117c3a_Struct>& _228443_s) {
	if (_228443_s.get()._field_CppLinked) {
		return;;
	};
	if ((_228443_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_228443_s.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_246142319_StructIns> _229521_ins = _2460e2a4a_instance(_228443_s);;
		_229521_ins.get()._field_Checked=true;
		_2460e8b3e_appendInstance(_228443_s.ptr(), _229521_ins);
		_246d10448_precheckStructIns(_self_, _229521_ins,nullptr);
	};
	_246d10db6_checkStructInsOperators(_self_, _228443_s.get()._field_Instances[0LL]);
}



inline void _246d11328_precheckStructTypes(jule::Ptr<_246ce861d_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_212ce1bbc:;
		if (it != expr.end()) {
			jule::Ptr<_246117c3a_Struct> _230521_s = *it;
			{
				_246d1114c_precheckStructType(_self_, _230521_s);
			}
			_iter_next_212ce1bbc:;
			++it;
			goto _iter_begin_212ce1bbc;
		}
		_iter_end_212ce1bbc:;
	};
}



inline void _246d1159d_checkRets(_246ce861d_Sema* _self_, jule::Ptr<_246cabb42_FnIns>& _231033_f) {
	if (_24618a10e_IsVoid(_231033_f.get()._field_Decl.ptr())) {
		return;;
	};
	_246d13748_missingRetChecker _231413_mrc = static__246d13b11_new();;
	jule::Bool _231513_ok = _246d14b23_check(&_231413_mrc, _231033_f.get()._field_Scope);;
	if ((!(_231513_ok))) {
		_246ceb2d0_pushErr(&(*_self_), _231033_f.get()._field_Decl.get()._field_Token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _246d118bc_checkFnInsSc(_246ce861d_Sema* _self_, jule::Ptr<_246cabb42_FnIns>& _232136_f, jule::Ptr<_246cc8862_scopeChecker>& _232152_sc) {
	_246ce7342_appendRetVars(_232152_sc.get()._field_table.get()._field_Vars,_232136_f);
	_246ce75ea_appendParamVars(_232152_sc.get()._field_table.get()._field_Vars,_232136_f);
	_246ce78c5_appendGenericTypeAliases(_232152_sc.get()._field_table.get()._field_TypeAliases,_232136_f);
	_246cd8630_check(_232152_sc, _232136_f.get()._field_Decl.get()._field_Scope,_232136_f.get()._field_Scope);
	if ((!(_246ccb49c_stopped(_232152_sc.ptr())))) {
		_246d1159d_checkRets(&(*_self_), _232136_f);
	};
}



inline void _246d11bdb_checkFnInsCaller(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246cabb42_FnIns>& _233441_f, jule::Ptr<_24496dc35_Token> _233456_caller) {
	if (_233441_f.get()._field_Decl.get()._field_CppLinked) {
		return;;
	};
	jule::Ptr<_246d5956e_SymbolTable> _233917_old = _233441_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_246ceae17_setCurrentFile(_233441_f.get()._field_Decl.get()._field_sema.ptr(), _233917_old);
	});;
	jule::Ptr<_246d5956e_SymbolTable> _234117_file = _246ce7c27_findFile(_233441_f.get()._field_Decl.get()._field_sema.get()._field_files,_233441_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_234117_file != nullptr)) {
		_246ceae17_setCurrentFile(_233441_f.get()._field_Decl.get()._field_sema.ptr(), _234117_file);
	};
	jule::Ptr<_246cc8862_scopeChecker> _234617_sc = _246cbe0b6_newScopeChecker(_233441_f.get()._field_Decl.get()._field_sema,_233441_f);;
	_234617_sc.get()._field_calledFrom=_233456_caller;
	_246d118bc_checkFnInsSc(_self_.ptr(), _233441_f,_234617_sc);
	if ((_233441_f.get()._field_Decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_233441_f.get()._field_Decl.get()._field_sema.get()._field_errors);
		_233441_f.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _246d11e61_checkFnIns(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246cabb42_FnIns>& _235635_f) {
	_246d11bdb_checkFnInsCaller(_self_, _235635_f,nullptr);
}



inline void _246d121d6_checkTypeFn(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246cab768_Fn>& _236036_f) {
	if (_236036_f.get()._field_CppLinked) {
		return;;
	};
	if ((_236036_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _236036_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_212ced349:;
		if (it != expr.end()) {
			jule::Ptr<_246cabb42_FnIns> _237021_ins = *it;
			{
				_246d11e61_checkFnIns(_self_, _237021_ins);
			}
			_iter_next_212ced349:;
			++it;
			goto _iter_begin_212ced349;
		}
		_iter_end_212ced349:;
	};
}



inline void _246d1245b_checkTestFn(_246ce861d_Sema* _self_, jule::Ptr<_246cabb42_FnIns>& _237535_f) {
	if (_237535_f.get()._field_Decl.get()._field_Public) {
		_246ceb2d0_pushErr(&(*_self_), _237535_f.get()._field_Decl.get()._field_Token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_246ceb5ee_pushSugggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_237535_f.get()._field_Params.len() != 1LL) || (_237535_f.get()._field_Result != nullptr))) {
		_246ceb2d0_pushErr(&(*_self_), _237535_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_246ceb5ee_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_246d98206_Sptr> _238817_sptr = _246d92321_Sptr(_237535_f.get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_238817_sptr == nullptr)) {
		_246ceb2d0_pushErr(&(*_self_), _237535_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_246ceb5ee_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_246142319_StructIns> _239513_s = _246d9350e_Struct(_238817_sptr.get()._field_Elem.ptr());;
	if (((_239513_s == nullptr) || (!(_246ce5a05_isStdPackage(_239513_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("testing", 7)))))) {
		_246ceb2d0_pushErr(&(*_self_), _237535_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_246ceb5ee_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _246d126d1_precheckTypeFn(jule::Ptr<_246ce861d_Sema> _self_, jule::Ptr<_246cab768_Fn>& _240339_f) {
	if (_240339_f.get()._field_CppLinked) {
		return;;
	};
	if ((_240339_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_240339_f.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_246cabb42_FnIns> _241421_ins = _24618148a_instanceForce(_240339_f);;
		_240339_f.get()._field_Instances = jule::alloc_for_append(_240339_f.get()._field_Instances,1);_240339_f.get()._field_Instances.__push(_241421_ins);;
		_246d053a5_reloadFnInsTypes(_self_, _241421_ins);
		_241421_ins.get()._field_reloaded=true;
		if (_246da6be8_hasDirective(_240339_f.get()._field_Directives,jule::Str("test", 4))) {
			_246d1245b_checkTestFn(_self_.ptr(), _241421_ins);
		};
	};
}



inline void _246d128ac_precheckFnTypes(jule::Ptr<_246ce861d_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_212d07b7d:;
		if (it != expr.end()) {
			jule::Ptr<_246cb3e9b_Trait> _242721_decl = *it;
			{
				{
					auto &expr = _242721_decl.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_212d08e48:;
					if (it != expr.end()) {
						jule::Ptr<_246cab768_Fn> _242825_m = *it;
						{
							_246d126d1_precheckTypeFn(_self_, _242825_m);
						}
						_iter_next_212d08e48:;
						++it;
						goto _iter_begin_212d08e48;
					}
					_iter_end_212d08e48:;
				};
			}
			_iter_next_212d07b7d:;
			++it;
			goto _iter_begin_212d07b7d;
		}
		_iter_end_212d07b7d:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_212d08b6d:;
		if (it != expr.end()) {
			jule::Ptr<_246cab768_Fn> _243221_decl = *it;
			{
				_246d126d1_precheckTypeFn(_self_, _243221_decl);
			}
			_iter_next_212d08b6d:;
			++it;
			goto _iter_begin_212d08b6d;
		}
		_iter_end_212d08b6d:;
	};
}



inline void _246d12a88_checkFnTypes(jule::Ptr<_246ce861d_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_212d0a565:;
		if (it != expr.end()) {
			jule::Ptr<_246cab768_Fn> _243921_decl = *it;
			{
				_246d121d6_checkTypeFn(_self_, _243921_decl);
			}
			_iter_next_212d0a565:;
			++it;
			goto _iter_begin_212d0a565;
		}
		_iter_end_212d0a565:;
	};
}



inline void _246d12c64_checkPackageTypes(jule::Ptr<_246ce861d_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_212d0aca2:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _244721_f = *it;
			{
				_246ceae17_setCurrentFile(_self_.ptr(), _244721_f);
				_246d0e0b2_checkGlobalTypes(_self_);
				_246d128ac_precheckFnTypes(_self_);
				_246d11328_precheckStructTypes(_self_);
			}
			_iter_next_212d0aca2:;
			++it;
			goto _iter_begin_212d0aca2;
		}
		_iter_end_212d0aca2:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_212d0cd09:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _245821_f = *it;
			{
				_246ceae17_setCurrentFile(_self_.ptr(), _245821_f);
				_246d12a88_checkFnTypes(_self_);
				_246d10b1e_checkStructTypes(_self_);
			}
			_iter_next_212d0cd09:;
			++it;
			goto _iter_begin_212d0cd09;
		}
		_iter_end_212d0cd09:;
	};
}



inline void _246d12e40_setFileSemaFields(jule::Ptr<_246ce861d_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_212d0e1d4:;
		if (it != expr.end()) {
			jule::Ptr<_246cab768_Fn> _246621_f = *it;
			{
				_246621_f.get()._field_sema=_self_;
			}
			_iter_next_212d0e1d4:;
			++it;
			goto _iter_begin_212d0e1d4;
		}
		_iter_end_212d0e1d4:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_212d0e613:;
		if (it != expr.end()) {
			jule::Ptr<_246117c3a_Struct> _246921_st = *it;
			{
				_246921_st.get()._field_sema=_self_;
			}
			_iter_next_212d0e613:;
			++it;
			goto _iter_begin_212d0e613;
		}
		_iter_end_212d0e613:;
	};
}



inline void _246d1311b_setSemaFields(jule::Ptr<_246ce861d_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_212d10180:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _247521_file = *it;
			{
				_246ceae17_setCurrentFile(_self_.ptr(), _247521_file);
				_246d12e40_setFileSemaFields(_self_);
			}
			_iter_next_212d10180:;
			++it;
			goto _iter_begin_212d10180;
		}
		_iter_end_212d10180:;
	};
}



inline void _246d13391_check(jule::Ptr<_246ce861d_Sema> _self_, jule::Slice<jule::Ptr<_246d5956e_SymbolTable>>& _248130_files) {
	_self_.get()._field_files=_248130_files;
	_246cee943_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_246d1311b_setSemaFields(_self_);
	_246ceeec6_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_246ceecea_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_246d0d4e0_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_246d12c64_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _246ce861d_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _246d13748_missingRetChecker static__246d13b11_new(void) {
	return _246d13748_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };
}



inline jule::Bool _246d13ddb_checkConditional(_246d13748_missingRetChecker* _self_, jule::Ptr<_246cc275c_Conditional> _252435_c) {
	{
		auto &expr = _252435_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_212d15383:;
		if (it != expr.end()) {
			jule::Ptr<_246cc20ec_If> _252521_elif = *it;
			{
				if ((_252521_elif == nullptr)) {
					return false;
				};
				if ((!(_246d14815_checkScope(&(*_self_), _252521_elif.get()._field_Scope)))) {
					return false;
				};
			}
			_iter_next_212d15383:;
			++it;
			goto _iter_begin_212d15383;
		}
		_iter_end_212d15383:;
	};
	return ((_252435_c.get()._field_Default != nullptr) && _246d14815_checkScope(&(*_self_), _252435_c.get()._field_Default.get()._field_Scope));
}



inline jule::Bool _246d141e9_checkMatch(_246d13748_missingRetChecker* _self_, jule::Ptr<_246cc594c_Match> _253629_m) {
	{
		auto &expr = _253629_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_212d17187:;
		if (it != expr.end()) {
			jule::Ptr<_246cc6497_Case> _253721_c = *it;
			{
				if ((_253721_c == nullptr)) {
					return false;
				};
				jule::I64 _254117_n = (*_self_)._field_breaked.len();;
				jule::Bool _254217_ok = _246d14815_checkScope(&(*_self_), _253721_c.get()._field_Scope);;
				{
					
					if ((_254117_n != (*_self_)._field_breaked.len())) {
						_case_begin_212d19068:;
						{
							return false;
						}
					}
					else if ((!(_254217_ok))) {
						_case_begin_212d190e0:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							};
							goto _case_begin_212d19167;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_212d19167:;
						{
							(*_self_)._field_falled=false;
							if ((_253721_c.get()._field_Next == nullptr)) {
								return false;
							};
							goto _iter_next_212d17187;
						}
					}
					_match_end_212d18ae5:;
				};
			}
			_iter_next_212d17187:;
			++it;
			goto _iter_begin_212d17187;
		}
		_iter_end_212d17187:;
	};
	return ((_253629_m.get()._field_Default != nullptr) && _246d14815_checkScope(&(*_self_), _253629_m.get()._field_Default.get()._field_Scope));
}



inline jule::Bool _246d14507_checkInfIter(_246d13748_missingRetChecker* _self_, jule::Ptr<_246cc2a48_InfIter> _256231_it) {
	jule::I64 _256313_n = (*_self_)._field_breaked.len();;
	if (_246d14815_checkScope(&(*_self_), _256231_it.get()._field_Scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_256313_n);
		return true;
	};
	if ((_256313_n != (*_self_)._field_breaked.len())) {
		jule::Uintptr _256917_itaddr = static_cast<jule::Uintptr>(_256231_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_256313_n);
			auto it = expr.begin();
			_iter_begin_212d1d4ce:;
			if (it != expr.end()) {
				jule::Uintptr _257020_addr = *it;
				{
					if ((_256917_itaddr == _257020_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_256313_n);
						return false;
					};
				}
				_iter_next_212d1d4ce:;
				++it;
				goto _iter_begin_212d1d4ce;
			}
			_iter_end_212d1d4ce:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_256313_n);
	};
	return true;
}



inline jule::Bool _246d14815_checkScope(_246d13748_missingRetChecker* _self_, jule::Ptr<_246cc1c01_Scope> _258129_s) {
	if ((_258129_s == nullptr)) {
		return false;
	};
	{
		auto &expr = _258129_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_212d1ec72:;
		if (it != expr.end()) {
			jule::Any _258521_st = *it;
			{
				{
					auto &_match_expr{ _258521_st };
					
					if (_match_expr.type_is<jule::Ptr<_246cc6a4c_FallSt>>()) {
						_case_begin_212d20b0d:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_246cc4154_BreakSt>>()) {
						_case_begin_212d20b96:;
						{
							jule::Uintptr _259121_addr = _258521_st.operator jule::Ptr<_246cc4154_BreakSt>().get()._field_It;;
							if ((_259121_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_259121_addr);;
							};
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_246cc3c9c_ContSt>>()) {
						_case_begin_212d20c0c:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_246cc2a48_InfIter>>()) {
						_case_begin_212d20c73:;
						{
							if (_246d14507_checkInfIter(&(*_self_), _258521_st.operator jule::Ptr<_246cc2a48_InfIter>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_246cc6ec0_RetSt>>()) {
						_case_begin_212d20cea:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_246cc1c01_Scope>>()) {
						_case_begin_212d20d72:;
						{
							if (_246d14815_checkScope(&(*_self_), _258521_st.operator jule::Ptr<_246cc1c01_Scope>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_246d5e398_Data>>()) {
						_case_begin_212d20de9:;
						{
							{
								auto &_match_expr{ _258521_st.operator jule::Ptr<_246d5e398_Data>().get()._field_Model };
								
								if (_match_expr.type_is<jule::Ptr<_246ca905c_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_246caa349_BuiltinErrorCallExprModel>>()) {
									_case_begin_212d24cee:;
									{
										return true;
									}
								}
								_match_end_212d24a35:;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_246cc275c_Conditional>>()) {
						_case_begin_212d20e71:;
						{
							if (_246d13ddb_checkConditional(&(*_self_), _258521_st.operator jule::Ptr<_246cc275c_Conditional>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_246cc594c_Match>>()) {
						_case_begin_212d20ee8:;
						{
							if (_246d141e9_checkMatch(&(*_self_), _258521_st.operator jule::Ptr<_246cc594c_Match>())) {
								return true;
							};
						}
					}
					_match_end_212d20954:;
				};
			}
			_iter_next_212d1ec72:;
			++it;
			goto _iter_begin_212d1ec72;
		}
		_iter_end_212d1ec72:;
	};
	return false;
}



inline jule::Bool _246d14b23_check(_246d13748_missingRetChecker* _self_, jule::Ptr<_246cc1c01_Scope> _262724_s) {
	return _246d14815_checkScope(&(*_self_), _262724_s);
}







std::ostream &operator<<(std::ostream &_Stream, _246d13748_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246d15409_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _246d1673a_IsInitialized(_246d16372_Var* _self_) {
	return ((*_self_)._field_Value != nullptr);
}



inline jule::Bool _246d1699e_IsTypeInferred(_246d16372_Var* _self_) {
	return (((*_self_)._field_Kind == nullptr) || ((*_self_)._field_Kind.get()._field_Decl == nullptr));
}



inline jule::Bool _246d16c13_untypedConstant(_246d16372_Var* _self_) {
	return (_246d1699e_IsTypeInferred(&(*_self_)) && (*_self_)._field_Value.get()._field_Data.get()._field_untyped);
}







std::ostream &operator<<(std::ostream &_Stream, _246d16372_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__246d17791_Dispose(jule::Ptr<_246cab768_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && (_1023_f.get()._field_Ident == jule::Str("Dispose", 7))) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _24618a10e_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_24617b4da_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));
}



inline jule::Bool static__246d17a38_Str(jule::Ptr<_246cab768_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (_2419_f.get()._field_Ident != jule::Str("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _24618a10e_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _24617b4da_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_246cabb42_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_246d94972_Prim> _3913_prim = _246d920ac_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;
	};
	return _246d97ba6_IsStr(_3913_prim.ptr());
}



inline jule::Bool static__246d17d79_logical(jule::Ptr<_246cab768_Fn>& _4624_f, jule::Str _4632_ident) {
	if ((((((((((((((_4624_f == nullptr) || (_4624_f.get()._field_Ident != _4632_ident)) || (_4624_f.get()._field_Owner == nullptr)) || (_4624_f.get()._field_Instances.len() == 0LL)) || _4624_f.get()._field_Statically) || _4624_f.get()._field_Unsafety) || _24618a10e_IsVoid(_4624_f.ptr())) || (_4624_f.get()._field_Generics.len() != 0LL)) || (_4624_f.get()._field_Params.len() != 2LL)) || _4624_f.get()._field_Params[0LL].get()._field_Mutable) || _24617b4da_IsRef(_4624_f.get()._field_Params[0LL].ptr())) || _4624_f.get()._field_Params[1LL].get()._field_Mutable) || _4624_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	jule::Ptr<_246cabb42_FnIns> _6317_ins = _4624_f.get()._field_Instances[0LL];;
	jule::Ptr<_246d94972_Prim> _6413_prim = _246d920ac_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_246d97942_IsBool(_6413_prim.ptr()))))) {
		return false;
	};
	return (_6317_ins.get()._field_Owner == _246d9350e_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));
}



inline jule::Bool static__246d18121_Eq(jule::Ptr<_246cab768_Fn> _7218_f) {
	return static__246d17d79_logical(_7218_f,jule::Str("Eq", 2));
}



inline jule::Bool static__246d183b8_Gt(jule::Ptr<_246cab768_Fn> _7718_f) {
	return static__246d17d79_logical(_7718_f,jule::Str("Gt", 2));
}



inline jule::Bool static__246d18660_GtEq(jule::Ptr<_246cab768_Fn> _8220_f) {
	return static__246d17d79_logical(_8220_f,jule::Str("GtEq", 4));
}



inline jule::Bool static__246d18907_Lt(jule::Ptr<_246cab768_Fn> _8718_f) {
	return static__246d17d79_logical(_8718_f,jule::Str("Lt", 2));
}



inline jule::Bool static__246d18b9e_LtEq(jule::Ptr<_246cab768_Fn> _9220_f) {
	return static__246d17d79_logical(_9220_f,jule::Str("LtEq", 4));
}



inline jule::Bool static__246d18ee0_result(jule::Ptr<_246cab768_Fn>& _9623_f, jule::Str _9631_ident) {
	if ((((((((((((((_9623_f == nullptr) || (_9623_f.get()._field_Ident != _9631_ident)) || (_9623_f.get()._field_Owner == nullptr)) || (_9623_f.get()._field_Instances.len() == 0LL)) || _9623_f.get()._field_Statically) || _9623_f.get()._field_Unsafety) || _24618a10e_IsVoid(_9623_f.ptr())) || (_9623_f.get()._field_Generics.len() != 0LL)) || (_9623_f.get()._field_Params.len() != 2LL)) || _9623_f.get()._field_Params[0LL].get()._field_Mutable) || _24617b4da_IsRef(_9623_f.get()._field_Params[0LL].ptr())) || _9623_f.get()._field_Params[1LL].get()._field_Mutable) || _9623_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	jule::Ptr<_246cabb42_FnIns> _11317_ins = _9623_f.get()._field_Instances[0LL];;
	return (_246d9350e_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);
}



inline jule::Bool static__246d19287_Shl(jule::Ptr<_246cab768_Fn> _11819_f) {
	return static__246d18ee0_result(_11819_f,jule::Str("Shl", 3));
}



inline jule::Bool static__246d1952e_Shr(jule::Ptr<_246cab768_Fn> _12319_f) {
	return static__246d18ee0_result(_12319_f,jule::Str("Shr", 3));
}



inline jule::Bool static__246d197c6_Add(jule::Ptr<_246cab768_Fn> _12819_f) {
	return static__246d18ee0_result(_12819_f,jule::Str("Add", 3));
}



inline jule::Bool static__246d19a6d_Sub(jule::Ptr<_246cab768_Fn> _13319_f) {
	return static__246d18ee0_result(_13319_f,jule::Str("Sub", 3));
}



inline jule::Bool static__246d19d15_Div(jule::Ptr<_246cab768_Fn> _13819_f) {
	return static__246d18ee0_result(_13819_f,jule::Str("Div", 3));
}



inline jule::Bool static__246d1a0ac_Mul(jule::Ptr<_246cab768_Fn> _14319_f) {
	return static__246d18ee0_result(_14319_f,jule::Str("Mul", 3));
}



inline jule::Bool static__246d1a354_Mod(jule::Ptr<_246cab768_Fn> _14819_f) {
	return static__246d18ee0_result(_14819_f,jule::Str("Mod", 3));
}



inline jule::Bool static__246d1a5eb_BitAnd(jule::Ptr<_246cab768_Fn> _15322_f) {
	return static__246d18ee0_result(_15322_f,jule::Str("BitAnd", 6));
}



inline jule::Bool static__246d1a893_BitOr(jule::Ptr<_246cab768_Fn> _15821_f) {
	return static__246d18ee0_result(_15821_f,jule::Str("BitOr", 5));
}



inline jule::Bool static__246d1ab3a_BitXor(jule::Ptr<_246cab768_Fn> _16322_f) {
	return static__246d18ee0_result(_16322_f,jule::Str("BitXor", 6));
}



inline jule::Bool static__246d1ae7b_unary(jule::Ptr<_246cab768_Fn>& _16722_f, jule::Str _16730_ident) {
	if ((((((((((((_16722_f == nullptr) || (_16722_f.get()._field_Ident != _16730_ident)) || (_16722_f.get()._field_Owner == nullptr)) || (_16722_f.get()._field_Instances.len() == 0LL)) || _16722_f.get()._field_Statically) || _16722_f.get()._field_Unsafety) || _24618a10e_IsVoid(_16722_f.ptr())) || (_16722_f.get()._field_Generics.len() != 0LL)) || (_16722_f.get()._field_Params.len() != 1LL)) || _16722_f.get()._field_Params[0LL].get()._field_Mutable) || _24617b4da_IsRef(_16722_f.get()._field_Params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_246cabb42_FnIns> _18217_ins = _16722_f.get()._field_Instances[0LL];;
	return (_246d9350e_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);
}



inline jule::Bool static__246d1b223_Neg(jule::Ptr<_246cab768_Fn> _18719_f) {
	return static__246d1ae7b_unary(_18719_f,jule::Str("Neg", 3));
}



inline jule::Bool static__246d1b4ba_Pos(jule::Ptr<_246cab768_Fn> _19219_f) {
	return static__246d1ae7b_unary(_19219_f,jule::Str("Pos", 3));
}



inline jule::Bool static__246d1b762_BitNot(jule::Ptr<_246cab768_Fn> _19722_f) {
	return static__246d1ae7b_unary(_19722_f,jule::Str("BitNot", 6));
}



inline jule::Bool static__246d1baa3_assign(jule::Ptr<_246cab768_Fn>& _20123_f, jule::Str _20131_ident) {
	if ((((((((((((((_20123_f == nullptr) || (_20123_f.get()._field_Ident != _20131_ident)) || (_20123_f.get()._field_Owner == nullptr)) || (_20123_f.get()._field_Instances.len() == 0LL)) || _20123_f.get()._field_Statically) || _20123_f.get()._field_Unsafety) || (!(_24618a10e_IsVoid(_20123_f.ptr())))) || (_20123_f.get()._field_Generics.len() != 0LL)) || (_20123_f.get()._field_Params.len() != 2LL)) || (!(_20123_f.get()._field_Params[0LL].get()._field_Mutable))) || _24617b4da_IsRef(_20123_f.get()._field_Params[0LL].ptr())) || _20123_f.get()._field_Params[1LL].get()._field_Mutable) || _20123_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	return true;
}



inline jule::Bool static__246d1bd4a_AddAssign(jule::Ptr<_246cab768_Fn> _22125_f) {
	return static__246d1baa3_assign(_22125_f,jule::Str("AddAssign", 9));
}



inline jule::Bool static__246d1c0e2_SubAssign(jule::Ptr<_246cab768_Fn> _22625_f) {
	return static__246d1baa3_assign(_22625_f,jule::Str("SubAssign", 9));
}



inline jule::Bool static__246d1c389_DivAssign(jule::Ptr<_246cab768_Fn> _23125_f) {
	return static__246d1baa3_assign(_23125_f,jule::Str("DivAssign", 9));
}



inline jule::Bool static__246d1c631_MulAssign(jule::Ptr<_246cab768_Fn> _23625_f) {
	return static__246d1baa3_assign(_23625_f,jule::Str("MulAssign", 9));
}



inline jule::Bool static__246d1c8c8_ModAssign(jule::Ptr<_246cab768_Fn> _24125_f) {
	return static__246d1baa3_assign(_24125_f,jule::Str("ModAssign", 9));
}



inline jule::Bool static__246d1cb70_ShlAssign(jule::Ptr<_246cab768_Fn> _24625_f) {
	return static__246d1baa3_assign(_24625_f,jule::Str("ShlAssign", 9));
}



inline jule::Bool static__246d1ce17_ShrAssign(jule::Ptr<_246cab768_Fn> _25125_f) {
	return static__246d1baa3_assign(_25125_f,jule::Str("ShrAssign", 9));
}



inline jule::Bool static__246d1d1ae_BitOrAssign(jule::Ptr<_246cab768_Fn> _25627_f) {
	return static__246d1baa3_assign(_25627_f,jule::Str("BitOrAssign", 11));
}



inline jule::Bool static__246d1d456_BitAndAssign(jule::Ptr<_246cab768_Fn> _26128_f) {
	return static__246d1baa3_assign(_26128_f,jule::Str("BitAndAssign", 12));
}



inline jule::Bool static__246d1d6ed_BitXorAssign(jule::Ptr<_246cab768_Fn> _26628_f) {
	return static__246d1baa3_assign(_26628_f,jule::Str("BitXorAssign", 12));
}







std::ostream &operator<<(std::ostream &_Stream, _246d17120_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _246d4855d_pushErr(_246d48041_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_246ceb2d0_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_11726_fmt,jule::Any(_11739_args));
}



inline jule::Bool _246d487c2_checkTrait(_246d48041_typeCompatibilityChecker* _self_) {
	jule::Bool _12131_ok = false;
	if (_246d90dbe_IsNil((*_self_)._field_src.ptr())) {
		_12131_ok = true;
		return _12131_ok;
	};
	jule::Ptr<_246cb3e9b_Trait> _12513_trt = _246d93773_Trait((*_self_)._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_246d92321_Sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_212d630d4:;
			{
				_12617_ref=true;
				(*_self_)._field_src=_246d92321_Sptr((*_self_)._field_src.ptr()).get()._field_Elem;
				if ((_246d9350e_Struct((*_self_)._field_src.ptr()) == nullptr)) {
					_12131_ok = false;
					return _12131_ok;
				};
				goto _case_begin_212d631d3;
			}
		}
		else if ((_246d9350e_Struct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_212d631d3:;
			{
				jule::Ptr<_246142319_StructIns> _13617_s = _246d9350e_Struct((*_self_)._field_src.ptr());;
				if ((!(_246105ac4_IsImplements(_13617_s.get()._field_Decl.ptr(), _12513_trt)))) {
					_12131_ok = false;
					return _12131_ok;
				};
				if (((!(_12617_ref)) && _246d38361_traitHasReferenceReceiver(_12513_trt))) {
					_246d4855d_pushErr(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_12131_ok = false;
					return _12131_ok;
				};
				_12131_ok = true;
				return _12131_ok;
			}
		}
		else if ((_246d93773_Trait((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_212d6325a:;
			{
				_12131_ok = (_12513_trt == _246d93773_Trait((*_self_)._field_src.ptr()));
				return _12131_ok;
			}
		}
		else {
			_case_begin_212d62930:;
			{
				_12131_ok = false;
				return _12131_ok;
			}
		}
		_match_end_212d628ca:;
	};
}



inline jule::Bool _246d48a36_checkPtr(_246d48041_typeCompatibilityChecker* _self_) {
	jule::Bool _15229_ok = false;
	if (_246d90dbe_IsNil((*_self_)._field_src.ptr())) {
		_15229_ok = true;
		return _15229_ok;
	};
	jule::Ptr<_246d9b76a_Ptr> _15617_dest = _246d92585_Ptr((*_self_)._field_dest.ptr());;
	if (_246d9c23d_IsUnsafe(_15617_dest.ptr())) {
		_15229_ok = true;
		return _15229_ok;
	};
	_15229_ok = _246d906a4_Equals((*_self_)._field_dest, (*_self_)._field_src);
	return _15229_ok;
}



inline jule::Bool _246d48c9a_checkPrim(_246d48041_typeCompatibilityChecker* _self_) {
	jule::Bool _16330_ok = false;
	if ((!((*_self_)._field_dest.get()._field_Variadic))) {
		jule::Ptr<_246d94972_Prim> _16517_prim = _246d920ac_Prim((*_self_)._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _246d97e1a_IsAny(_16517_prim.ptr()))) {
			_16330_ok = true;
			return _16330_ok;
		};
	};
	_16330_ok = _246d906a4_Equals((*_self_)._field_dest, (*_self_)._field_src);
	return _16330_ok;
}



inline jule::Bool _246d49152_typeEnum(_246d48041_typeCompatibilityChecker* _self_, jule::Ptr<_246cb76db_TypeEnum>& _17328_e, jule::Ptr<_246d8ee9a_TypeKind>& _17347_t2) {
	jule::Bool _17364_ok = false;
	{
		auto &expr = _17328_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_212d6b780:;
		if (it != expr.end()) {
			jule::Ptr<_246cb7125_TypeEnumItem> _17421_item = *it;
			{
				if (_246d906a4_Equals(_17421_item.get()._field_Kind.get()._field_Kind, _17347_t2)) {
					_17364_ok = true;
					return _17364_ok;
				};
				jule::Ptr<_246cb76db_TypeEnum> _17821_ke = _246d92a5d_TypeEnum(_17421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_17821_ke == nullptr)) {
					goto _iter_next_212d6b780;
				};
				if (_246d49152_typeEnum(&(*_self_), _17821_ke,_17347_t2)) {
					_17364_ok = true;
					return _17364_ok;
				};
			}
			_iter_next_212d6b780:;
			++it;
			goto _iter_begin_212d6b780;
		}
		_iter_end_212d6b780:;
	};
	_17364_ok = false;
	return _17364_ok;
}



inline jule::Bool _246d493b6_checkTypeEnum(_246d48041_typeCompatibilityChecker* _self_) {
	jule::Bool _18934_ok = false;
	if (_246d906a4_Equals((*_self_)._field_dest, (*_self_)._field_src)) {
		_18934_ok = true;
		return _18934_ok;
	};
	jule::Ptr<_246cb76db_TypeEnum> _19317_e = _246d92a5d_TypeEnum((*_self_)._field_dest.ptr());;
	_18934_ok = _246d49152_typeEnum(&(*_self_), _19317_e,(*_self_)._field_src);
	return _18934_ok;
}



inline jule::Bool _246d4962a_check(_246d48041_typeCompatibilityChecker* _self_) {
	jule::Bool _19726_ok = false;
	if ((_246d92585_Ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_19726_ok = _246d48a36_checkPtr(&(*_self_));
		return _19726_ok;
	};
	if (_246d9160b_NilCompatible((*_self_)._field_dest.ptr())) {
		if (_246d90dbe_IsNil((*_self_)._field_src.ptr())) {
			_19726_ok = true;
			return _19726_ok;
		};
	};
	{
		
		if ((_246d920ac_Prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_212d71eb1:;
			{
				_19726_ok = _246d48c9a_checkPrim(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_246d92a5d_TypeEnum((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_212d72027:;
			{
				_19726_ok = _246d493b6_checkTypeEnum(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_246d93773_Trait((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_212d72357:;
			{
				_19726_ok = _246d487c2_checkTrait(&(*_self_));
				return _19726_ok;
			}
		}
		else {
			_case_begin_212d718ea:;
			{
				_19726_ok = _246d906a4_Equals((*_self_)._field_dest, (*_self_)._field_src);
				return _19726_ok;
			}
		}
		_match_end_212d70ec1:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _246d48041_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _246d4a0cb_pushErr(_246d49b69_assignTypeChecker* _self_, jule::Str _22926_fmt, jule::Slice<jule::Any> _22939_args) {
	_246ceb2d0_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_22926_fmt,jule::Any(_22939_args));
}



inline jule::Bool _246d4a340_checkValidity(_246d49b69_assignTypeChecker* _self_) {
	jule::Bool _23417_valid = true;;
	{
		
		if ((_246d9329a_Fn((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_212d759a9:;
			{
				jule::Ptr<_246cabb42_FnIns> _23717_f = _246d9329a_Fn((*_self_)._field_d.get()._field_Kind.ptr());;
				{
					
					if (_246cabd2e_IsBuiltin(_23717_f.ptr())) {
						_case_begin_212d771d6:;
						{
							_246d4a0cb_pushErr(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_23717_f.get()._field_Decl.get()._field_CppLinked) {
						_case_begin_212d7725d:;
						{
							_246d4a0cb_pushErr(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((!(_23717_f.get()._field_Decl.get()._field_Statically)) && _24618a829_IsMethod(_23717_f.get()._field_Decl.ptr()))) {
						_case_begin_212d772d5:;
						{
							_246d4a0cb_pushErr(&(*_self_), jule::Str("non-static methods cannot use as anonymous function", 51),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((_23717_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_23717_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_212d7735c:;
						{
							_246d4a0cb_pushErr(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_246ceb5ee_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					_match_end_212d77109:;
				};
			}
		}
		else if ((_246d93c4b_Tup((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_212d75a31:;
			{
				_246d4a0cb_pushErr(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23417_valid=false;
			}
		}
		_match_end_212d758ee:;
	};
	return _23417_valid;
}



inline jule::Bool _246d4a5a4_checkConst(_246d49b69_assignTypeChecker* _self_) {
	if (((((!(_246d5ec5b_IsConst((*_self_)._field_d.ptr()))) || (_246d920ac_Prim((*_self_)._field_dest.ptr()) == nullptr)) || (_246d920ac_Prim((*_self_)._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_246ca3c5a_IsNum(_246d920ac_Prim((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;
	};
	if (((*_self_)._field_d.get()._field_Model != (*_self_)._field_d.get()._field_Constant)) {
		return false;
	};
	jule::Str _27413_kind = _246d920ac_Prim((*_self_)._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_246ca3b28_IsFloat(_27413_kind)) {
			_case_begin_212d804ca:;
			{
				if ((!(_246d2ecd6_floatAssignable(_27413_kind,(*_self_)._field_d)))) {
					_246d4a0cb_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
				(*_self_)._field_d.get()._field_Constant.get()._field_Kind=_27413_kind;
			}
		}
		else if (_246ca39e6_IsInt(_27413_kind)) {
			_case_begin_212d7ec7c:;
			{
				if ((!(_246d46d0e_intAssignable(_27413_kind,(*_self_)._field_d)))) {
					_246d4a0cb_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
				(*_self_)._field_d.get()._field_Constant.get()._field_Kind=_27413_kind;
			}
		}
		else {
			_case_begin_212d7ec16:;
			{
				return false;
			}
		}
		_match_end_212d7eba0:;
	};
	return true;
}



inline jule::Bool _246d4a818_isPrim(_246d49b69_assignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_Variadic || (*_self_)._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;
	};
	if ((_246d90b5a_CppLinked((*_self_)._field_dest.ptr()) || _246d90b5a_CppLinked((*_self_)._field_d.get()._field_Kind.ptr()))) {
		return false;
	};
	return ((_246d920ac_Prim((*_self_)._field_dest.ptr()) != nullptr) && (_246d920ac_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr));
}



inline jule::Bool _246d4aa7c_checkCompatibility(_246d49b69_assignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_212d84cc6:;
			{
				return false;
			}
		}
		else if ((!(_246d4a340_checkValidity(&(*_self_))))) {
			_case_begin_212d84d4d:;
			{
				return false;
			}
		}
		else if (_246d4a5a4_checkConst(&(*_self_))) {
			_case_begin_212d84dc5:;
			{
				return true;
			}
		}
		else if ((_246d927e9_Enum((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_212d84e4c:;
			{
				jule::Ptr<_246d8ee9a_TypeKind> _31821_dkind = (*_self_)._field_dest;;
				if ((_246d927e9_Enum((*_self_)._field_dest.ptr()) != nullptr)) {
					_31821_dkind=_246d927e9_Enum((*_self_)._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_246d920ac_Prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_212d84b94;
				};
				if (_246532ebd_TypesAreCompatible(_246d920ac_Prim(_246d927e9_Enum((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind,_246d920ac_Prim(_31821_dkind.ptr()).get()._field_Kind)) {
					return true;
				};
			}
		}
		else if (_246d4a818_isPrim(&(*_self_))) {
			_case_begin_212d84ec4:;
			{
				jule::Ptr<_246d94972_Prim> _32817_dest = _246d920ac_Prim((*_self_)._field_dest.ptr());;
				if (_246d97e1a_IsAny(_32817_dest.ptr())) {
					return true;
				};
				jule::Ptr<_246d94972_Prim> _33221_src = _246d920ac_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_246532ebd_TypesAreCompatible(_32817_dest.get()._field_Kind,_33221_src.get()._field_Kind)) {
					return true;
				};
			}
		}
		_match_end_212d84b94:;
	};
	return _246d03617_checkTypeCompatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_Kind,(*_self_)._field_errorToken);
}



inline jule::Bool _246d4ace1_check(_246d49b69_assignTypeChecker* _self_) {
	jule::Bool _34113_ok = _246d4aa7c_checkCompatibility(&(*_self_));;
	if (_34113_ok) {
		_246da8744_applyImplicitCast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _34113_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _246d49b69_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _212da03da_annotateConstraintElem(_246d4b583_dynamicTypeAnnotation* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _36049_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_246128135_ArrTypeDecl>>()) {
			_case_begin_212da1a29:;
			{
				jule::Ptr<_246d8ee9a_TypeKind> _36321_elem = nullptr;;
				{
					
{
						_case_begin_212da295e:;
						{
							_36321_elem=_246d92cc2_Arr(_36049_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_212da28a4:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_246128135_ArrTypeDecl>().get()._field_Elem;
				return _246d4cbd3_annotateConstraint(&(*_self_), _36321_elem);
			}
		}
		_match_end_212da19c4:;
	};
	return false;
}

inline jule::Bool _212d9ea7c_annotateConstraintElem(_246d4b583_dynamicTypeAnnotation* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _36049_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_2461273cb_SlcTypeDecl>>()) {
			_case_begin_212da5456:;
			{
				jule::Ptr<_246d8ee9a_TypeKind> _36321_elem = nullptr;;
				{
					
{
						_case_begin_212da6424:;
						{
							_36321_elem=_246d93036_Slc(_36049_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_212da62d1:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_2461273cb_SlcTypeDecl>().get()._field_Elem;
				return _246d4cbd3_annotateConstraint(&(*_self_), _36321_elem);
			}
		}
		_match_end_212da5401:;
	};
	return false;
}

inline jule::Bool _212d9ed68_annotateConstraintElem(_246d4b583_dynamicTypeAnnotation* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _36049_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_2461279a3_PtrTypeDecl>>()) {
			_case_begin_212da8dd8:;
			{
				jule::Ptr<_246d8ee9a_TypeKind> _36321_elem = nullptr;;
				{
					
{
						_case_begin_212da9e1c:;
						{
							_36321_elem=_246d92585_Ptr(_36049_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_212da9c63:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_2461279a3_PtrTypeDecl>().get()._field_Elem;
				return _246d4cbd3_annotateConstraint(&(*_self_), _36321_elem);
			}
		}
		_match_end_212da8d83:;
	};
	return false;
}

inline jule::Bool _212da83d2_annotateConstraintElem(_246d4b583_dynamicTypeAnnotation* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _36049_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_246126ed0_SptrTypeDecl>>()) {
			_case_begin_212dac4c4:;
			{
				jule::Ptr<_246d8ee9a_TypeKind> _36321_elem = nullptr;;
				{
					
{
						_case_begin_212dad56e:;
						{
							_36321_elem=_246d92321_Sptr(_36049_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_212dad34e:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_246126ed0_SptrTypeDecl>().get()._field_Elem;
				return _246d4cbd3_annotateConstraint(&(*_self_), _36321_elem);
			}
		}
		_match_end_212dac46e:;
	};
	return false;
}



inline jule::Bool _246d4be68_annotateConstraintMap(_246d4b583_dynamicTypeAnnotation* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _38045_k) {
	jule::Bool _38061_ok = false;
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_246128883_MapTypeDecl>>()) {
			_case_begin_212d8d197:;
			{
				jule::Ptr<_246d9a219_Map> _38321_m = _246d939d7_Map(_38045_k.ptr());;
				jule::Ptr<_246128883_MapTypeDecl> _38421_m2 = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_246128883_MapTypeDecl>();;
				(*_self_)._field_c=_38421_m2.get()._field_Key;
				if ((!(_246d4cbd3_annotateConstraint(&(*_self_), _38321_m.get()._field_Key)))) {
					_38061_ok = false;
					return _38061_ok;
				};
				(*_self_)._field_c=_38421_m2.get()._field_Val;
				_38061_ok = _246d4cbd3_annotateConstraint(&(*_self_), _38321_m.get()._field_Val);
				return _38061_ok;
			}
		}
		_match_end_212d8d142:;
	};
	_38061_ok = false;
	return _38061_ok;
}



inline jule::Bool _246d4c276_annotateConstraintTup(_246d4b583_dynamicTypeAnnotation* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _39545_k) {
	jule::Bool _39561_ok = false;
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_2461276b7_TupleTypeDecl>>()) {
			_case_begin_212d90ebe:;
			{
				jule::Ptr<_2461276b7_TupleTypeDecl> _39821_tup = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_2461276b7_TupleTypeDecl>();;
				jule::Ptr<_246d996e1_Tuple> _39921_tup2 = _246d93c4b_Tup(_39545_k.ptr());;
				{
					auto &expr = _39921_tup2.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_212d92388:;
					if (it != expr.end()) {
						jule::Ptr<_246d8ee9a_TypeKind> _40025_t2 = *it;
						{
							{
								auto &expr = _39821_tup.get()._field_Types;
								auto it = expr.begin();
								_iter_begin_212d91d49:;
								if (it != expr.end()) {
									jule::Ptr<_246125b27_TypeDecl> _40129_t = *it;
									{
										(*_self_)._field_c=_40129_t;
										if (_246d4cbd3_annotateConstraint(&(*_self_), _40025_t2)) {
											_39561_ok = true;
											return _39561_ok;
										};
									}
									_iter_next_212d91d49:;
									++it;
									goto _iter_begin_212d91d49;
								}
								_iter_end_212d91d49:;
							};
						}
						_iter_next_212d92388:;
						++it;
						goto _iter_begin_212d92388;
					}
					_iter_end_212d92388:;
				};
			}
		}
		_match_end_212d90be4:;
	};
	_39561_ok = false;
	return _39561_ok;
}



inline jule::Bool _246d4c584_annotateConstraintFn(_246d4b583_dynamicTypeAnnotation* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _41244_k) {
	jule::Bool _41260_ok = false;
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_2461375a6_FnDecl>>()) {
			_case_begin_212d93422:;
			{
				jule::Ptr<_2461375a6_FnDecl> _41521_pf = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_2461375a6_FnDecl>();;
				jule::Ptr<_246cabb42_FnIns> _41621_f = _246d9329a_Fn(_41244_k.ptr());;
				{
					auto &expr = _41621_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_212d953e1:;
					if (it != expr.end()) {
						jule::I64 _41718_i = it - expr.begin();
						jule::Ptr<_246cab955_ParamIns> _41725_fp = *it;
						{
							(*_self_)._field_c=_41521_pf.get()._field_Params[_41718_i].get()._field_Kind;
							if (_246d4cbd3_annotateConstraint(&(*_self_), _41725_fp.get()._field_Kind)) {
								_41260_ok = true;
								return _41260_ok;
							};
						}
						_iter_next_212d953e1:;
						++it;
						_41718_i++;
						goto _iter_begin_212d953e1;
					}
					_iter_end_212d953e1:;
				};
				if ((_41521_pf.get()._field_Result != nullptr)) {
					(*_self_)._field_c=_41521_pf.get()._field_Result.get()._field_Kind;
					if (_246d4cbd3_annotateConstraint(&(*_self_), _41621_f.get()._field_Result)) {
						_41260_ok = true;
						return _41260_ok;
					};
				};
			}
		}
		_match_end_212d92ac5:;
	};
	_41260_ok = false;
	return _41260_ok;
}



inline jule::Bool _246d4c8b4_annotateConstraintIdent(_246d4b583_dynamicTypeAnnotation* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _43347_k) {
	jule::Ptr<_2461261dd_IdentTypeDecl> _43417_ident = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_2461261dd_IdentTypeDecl>();;
	jule::Ptr<_246142319_StructIns> _43517_s = _246d9350e_Struct(_43347_k.ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_212d98977:;
		if (it != expr.end()) {
			jule::I64 _43613_i = it - expr.begin();
			jule::Ptr<_246132e20_GenericDecl> _43616_g = *it;
			{
				if ((_43616_g.get()._field_Ident == _43417_ident.get()._field_Ident)) {
					jule::Ptr<_246d8d76d_InsGeneric> _43825_fg = (*_self_)._field_f.get()._field_Generics[_43613_i];;
					if ((_43825_fg != nullptr)) {
						return false;
					};
					_246d4d002_pushGeneric(&(*_self_), _43347_k,_43613_i);
					return true;
				};
				if ((_43517_s == nullptr)) {
					goto _iter_next_212d98977;
				};
				jule::Ptr<_246125b27_TypeDecl> _44821_c = (*_self_)._field_c;;
				{
					auto &expr = _43417_ident.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_212d9bbde:;
					if (it != expr.end()) {
						jule::Ptr<_246125b27_TypeDecl> _44925_ig = *it;
						{
							(*_self_)._field_c=_44925_ig;
							{
								auto &expr = _43517_s.get()._field_Generics;
								auto it = expr.begin();
								_iter_begin_212d9c4d6:;
								if (it != expr.end()) {
									jule::Ptr<_246d8d76d_InsGeneric> _45129_sg = *it;
									{
										if (_246d4cbd3_annotateConstraint(&(*_self_), _45129_sg.get()._field_Kind)) {
											return true;
										};
									}
									_iter_next_212d9c4d6:;
									++it;
									goto _iter_begin_212d9c4d6;
								}
								_iter_end_212d9c4d6:;
							};
						}
						_iter_next_212d9bbde:;
						++it;
						goto _iter_begin_212d9bbde;
					}
					_iter_end_212d9bbde:;
				};
				(*_self_)._field_c=_44821_c;
			}
			_iter_next_212d98977:;
			++it;
			_43613_i++;
			goto _iter_begin_212d98977;
		}
		_iter_end_212d98977:;
	};
	return false;
}



inline jule::Bool _246d4cbd3_annotateConstraint(_246d4b583_dynamicTypeAnnotation* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _46242_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_2461261dd_IdentTypeDecl>>()) {
			_case_begin_212d9c140:;
			{
				return _246d4c8b4_annotateConstraintIdent(&(*_self_), _46242_k);
			}
		}
		_match_end_212d9c0da:;
	};
	{
		
		if ((_246d92cc2_Arr(_46242_k.ptr()) != nullptr)) {
			_case_begin_212d9d85b:;
			{
				return _212da03da_annotateConstraintElem(&(*_self_), _46242_k);
			}
		}
		else if ((_246d93036_Slc(_46242_k.ptr()) != nullptr)) {
			_case_begin_212d9d8c2:;
			{
				return _212d9ea7c_annotateConstraintElem(&(*_self_), _46242_k);
			}
		}
		else if ((_246d92585_Ptr(_46242_k.ptr()) != nullptr)) {
			_case_begin_212d9d938:;
			{
				return _212d9ed68_annotateConstraintElem(&(*_self_), _46242_k);
			}
		}
		else if ((_246d92321_Sptr(_46242_k.ptr()) != nullptr)) {
			_case_begin_212d9d99e:;
			{
				return _212da83d2_annotateConstraintElem(&(*_self_), _46242_k);
			}
		}
		else if ((_246d939d7_Map(_46242_k.ptr()) != nullptr)) {
			_case_begin_212d9e30c:;
			{
				return _246d4be68_annotateConstraintMap(&(*_self_), _46242_k);
			}
		}
		else if ((_246d9329a_Fn(_46242_k.ptr()) != nullptr)) {
			_case_begin_212d9e373:;
			{
				return _246d4c584_annotateConstraintFn(&(*_self_), _46242_k);
			}
		}
		else if ((_246d93c4b_Tup(_46242_k.ptr()) != nullptr)) {
			_case_begin_212d9e3d9:;
			{
				return _246d4c276_annotateConstraintTup(&(*_self_), _46242_k);
			}
		}
		else {
			_case_begin_212d9dbe1:;
			{
				return false;
			}
		}
		_match_end_212d9db8b:;
	};
}



inline void _246d4d002_pushGeneric(_246d4b583_dynamicTypeAnnotation* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _48735_k, jule::I64 _48749_i) {
	(*_self_)._field_f.get()._field_Generics[_48749_i]=jule::new_ptr<_246d8d76d_InsGeneric>(_246d8d76d_InsGeneric{._field_Kind=_48735_k, });
	jule::Ptr<_246132e20_GenericDecl> _48917_gd = (*_self_)._field_f.get()._field_Decl.get()._field_Generics[_48749_i];;
	if (((_48917_gd.get()._field_Constraint == nullptr) || (_48917_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*_self_)._field_c=_48917_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_246d4cbd3_annotateConstraint(&(*_self_), _48735_k);
}



inline jule::Bool _246d4d310_annotatePrim(_246d4b583_dynamicTypeAnnotation* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _49743_k) {
	jule::Bool _49759_ok = false;
	_49759_ok = _246d50136_annotateAny(&(*_self_), _49743_k);
	return _49759_ok;
}



inline jule::Bool _246d4d61d_annotateArr(_246d4b583_dynamicTypeAnnotation* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _50142_k) {
	jule::Bool _50158_ok = false;
	jule::Ptr<_246d9ad0d_Arr> _50217_parr = _246d92cc2_Arr((*((*_self_)._field_k)).ptr());;
	if ((_50217_parr == nullptr)) {
		_50158_ok = false;
		return _50158_ok;
	};
	jule::Ptr<_246d9ad0d_Arr> _50617_arr = _246d92cc2_Arr(_50142_k.ptr());;
	(*_self_)._field_k=(&(_50217_parr.get()._field_Elem));
	_50158_ok = _246d50444_annotateKind(&(*_self_), _50617_arr.get()._field_Elem);
	return _50158_ok;
}



inline jule::Bool _246d4d92b_annotateSlc(_246d4b583_dynamicTypeAnnotation* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _51142_k) {
	jule::Bool _51158_ok = false;
	jule::Ptr<_246d98b63_Slc> _51217_pslc = _246d93036_Slc((*((*_self_)._field_k)).ptr());;
	if ((_51217_pslc == nullptr)) {
		_51158_ok = false;
		return _51158_ok;
	};
	jule::Ptr<_246d98b63_Slc> _51617_slc = _246d93036_Slc(_51142_k.ptr());;
	(*_self_)._field_k=(&(_51217_pslc.get()._field_Elem));
	_51158_ok = _246d50444_annotateKind(&(*_self_), _51617_slc.get()._field_Elem);
	return _51158_ok;
}



inline jule::Bool _246d4dcd3_checkMapKey(_246d4b583_dynamicTypeAnnotation* _self_, jule::Ptr<_246d8ee9a_TypeKind>* _52141_k, jule::Ptr<_246d8ee9a_TypeKind>& _52161_ck) {
	jule::Bool _52178_ok = false;
	jule::Ptr<_246d8ee9a_TypeKind>* _52217_old = (*_self_)._field_k;;
	(*_self_)._field_k=_52141_k;
	_52178_ok=_246d50444_annotateKind(&(*_self_), _52161_ck);
	(*_self_)._field_k=_52217_old;
	return _52178_ok;
}



inline jule::Bool _246d4e0e1_annotateMap(_246d4b583_dynamicTypeAnnotation* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _52942_k) {
	jule::Bool _52958_ok = false;
	jule::Ptr<_246d9a219_Map> _53017_pmap = _246d939d7_Map((*((*_self_)._field_k)).ptr());;
	if ((_53017_pmap == nullptr)) {
		_52958_ok = false;
		return _52958_ok;
	};
	jule::Ptr<_246d9a219_Map> _53417_m = _246d939d7_Map(_52942_k.ptr());;
	_52958_ok = (_246d4dcd3_checkMapKey(&(*_self_), (&(_53017_pmap.get()._field_Key)),_53417_m.get()._field_Key) && _246d4dcd3_checkMapKey(&(*_self_), (&(_53017_pmap.get()._field_Val)),_53417_m.get()._field_Val));
	return _52958_ok;
}



inline jule::Bool _246d4e3ee_annotateFn(_246d4b583_dynamicTypeAnnotation* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _53941_k) {
	jule::Bool _53957_ok = false;
	jule::Ptr<_246cabb42_FnIns> _54017_pf = _246d9329a_Fn((*((*_self_)._field_k)).ptr());;
	if ((_54017_pf == nullptr)) {
		_53957_ok = false;
		return _53957_ok;
	};
	jule::Ptr<_246cabb42_FnIns> _54417_f = _246d9329a_Fn(_53941_k.ptr());;
	{
		
		if ((_54017_pf.get()._field_Params.len() != _54417_f.get()._field_Params.len())) {
			_case_begin_212dbd3b4:;
			{
				_53957_ok = false;
				return _53957_ok;
			}
		}
		else if ((_24618a10e_IsVoid(_54017_pf.get()._field_Decl.ptr()) != _24618a10e_IsVoid(_54417_f.get()._field_Decl.ptr()))) {
			_case_begin_212dbd43b:;
			{
				_53957_ok = false;
				return _53957_ok;
			}
		}
		_match_end_212dbd34d:;
	};
	_53957_ok=true;
	jule::Ptr<_246d8ee9a_TypeKind>* _55317_old = (*_self_)._field_k;;
	{
		auto &expr = _54417_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_212dc000e:;
		if (it != expr.end()) {
			jule::I64 _55414_i = it - expr.begin();
			jule::Ptr<_246cab955_ParamIns> _55421_fp = *it;
			{
				(*_self_)._field_k=(&(_54017_pf.get()._field_Params[_55414_i].get()._field_Kind));
				_53957_ok=(_246d50444_annotateKind(&(*_self_), _55421_fp.get()._field_Kind) && _53957_ok);
			}
			_iter_next_212dc000e:;
			++it;
			_55414_i++;
			goto _iter_begin_212dc000e;
		}
		_iter_end_212dc000e:;
	};
	if ((!(_24618a10e_IsVoid(_54017_pf.get()._field_Decl.ptr())))) {
		(*_self_)._field_k=(&(_54017_pf.get()._field_Result));
		_53957_ok=(_246d50444_annotateKind(&(*_self_), _54417_f.get()._field_Result) && _53957_ok);
	};
	(*_self_)._field_k=_55317_old;
	return _53957_ok;
}



inline jule::Bool _246d4e70c_annotatePtr(_246d4b583_dynamicTypeAnnotation* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _56842_k) {
	jule::Bool _56858_ok = false;
	jule::Ptr<_246d9b76a_Ptr> _56917_pptr = _246d92585_Ptr((*((*_self_)._field_k)).ptr());;
	if ((_56917_pptr == nullptr)) {
		_56858_ok = false;
		return _56858_ok;
	};
	jule::Ptr<_246d9b76a_Ptr> _57317_ptr = _246d92585_Ptr(_56842_k.ptr());;
	(*_self_)._field_k=(&(_56917_pptr.get()._field_Elem));
	_56858_ok = _246d50444_annotateKind(&(*_self_), _57317_ptr.get()._field_Elem);
	return _56858_ok;
}



inline jule::Bool _246d4ea1a_annotateSptr(_246d4b583_dynamicTypeAnnotation* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _57843_k) {
	jule::Bool _57859_ok = false;
	jule::Ptr<_246d98206_Sptr> _57917_ssptr = _246d92321_Sptr((*((*_self_)._field_k)).ptr());;
	if ((_57917_ssptr == nullptr)) {
		_57859_ok = false;
		return _57859_ok;
	};
	jule::Ptr<_246d98206_Sptr> _58317_sptr = _246d92321_Sptr(_57843_k.ptr());;
	(*_self_)._field_k=(&(_57917_ssptr.get()._field_Elem));
	_57859_ok = _246d50444_annotateKind(&(*_self_), _58317_sptr.get()._field_Elem);
	return _57859_ok;
}



inline jule::Bool _246d4ed28_annotateStruct(_246d4b583_dynamicTypeAnnotation* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _58845_k) {
	jule::Bool _58861_ok = false;
	jule::Ptr<_246142319_StructIns> _58917_s = _246d9350e_Struct((*((*_self_)._field_k)).ptr());;
	if ((_58917_s == nullptr)) {
		_58861_ok = false;
		return _58861_ok;
	};
	jule::Ptr<_246142319_StructIns> _59317_s2 = _246d9350e_Struct(_58845_k.ptr());;
	if ((_58917_s.get()._field_Generics.len() != _59317_s2.get()._field_Generics.len())) {
		_58861_ok = false;
		return _58861_ok;
	};
	{
		auto &expr = _58917_s.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_212dce073:;
		if (it != expr.end()) {
			jule::I64 _59714_i = it - expr.begin();
			jule::Ptr<_246d8d76d_InsGeneric> _59721_g = *it;
			{
				jule::Ptr<_246d8d76d_InsGeneric> _59821_g2 = _59317_s2.get()._field_Generics[_59714_i];;
				if (_246d906a4_Equals(_59721_g.get()._field_Kind, _59821_g2.get()._field_Kind)) {
					goto _iter_next_212dce073;
				};
				(*_self_)._field_k=(&(_59721_g.get()._field_Kind));
				if ((!(_246d50444_annotateKind(&(*_self_), _59821_g2.get()._field_Kind)))) {
					_58861_ok = false;
					return _58861_ok;
				};
			}
			_iter_next_212dce073:;
			++it;
			_59714_i++;
			goto _iter_begin_212dce073;
		}
		_iter_end_212dce073:;
	};
	_58861_ok = true;
	return _58861_ok;
}



inline jule::Bool _246d50136_annotateAny(_246d4b583_dynamicTypeAnnotation* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _61042_k) {
	jule::Bool _61058_ok = false;
	jule::Str _61113_kind = _246d90396_Str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_212dd2252:;
		if (it != expr.end()) {
			jule::I64 _61213_i = it - expr.begin();
			jule::Ptr<_246132e20_GenericDecl> _61216_g = *it;
			{
				if ((_61113_kind != _61216_g.get()._field_Ident)) {
					goto _iter_next_212dd2252;
				};
				jule::Ptr<_246d8d76d_InsGeneric> _61617_t = (*_self_)._field_f.get()._field_Generics[_61213_i];;
				{
					
					if ((_61617_t == nullptr) || (_61617_t.get()._field_Kind == nullptr)) {
						_case_begin_212dd3e79:;
						{
							_246d4d002_pushGeneric(&(*_self_), _61042_k,_61213_i);
						}
					}
					else if ((!(_246d906a4_Equals(_61617_t.get()._field_Kind, _61042_k)))) {
						_case_begin_212dd4001:;
						{
							_61058_ok = false;
							return _61058_ok;
						}
					}
					_match_end_212dd3d14:;
				};
				(*((*_self_)._field_k)).get()._field_Kind=_61042_k.get()._field_Kind;
				_61058_ok = true;
				return _61058_ok;
			}
			_iter_next_212dd2252:;
			++it;
			_61213_i++;
			goto _iter_begin_212dd2252;
		}
		_iter_end_212dd2252:;
	};
	_61058_ok = false;
	return _61058_ok;
}



inline jule::Bool _246d50444_annotateKind(_246d4b583_dynamicTypeAnnotation* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _63243_k) {
	jule::Bool _63259_ok = false;
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return _63259_ok;
	};
	{
		
		if (_246d50136_annotateAny(&(*_self_), _63243_k)) {
			_case_begin_212dd7367:;
			{
				_63259_ok = true;
				return _63259_ok;
			}
		}
		else if ((_246d920ac_Prim(_63243_k.ptr()) != nullptr)) {
			_case_begin_212dd73de:;
			{
				_63259_ok = _246d4d310_annotatePrim(&(*_self_), _63243_k);
				return _63259_ok;
			}
		}
		else if ((_246d92cc2_Arr(_63243_k.ptr()) != nullptr)) {
			_case_begin_212dd7059:;
			{
				_63259_ok = _246d4d61d_annotateArr(&(*_self_), _63243_k);
				return _63259_ok;
			}
		}
		else if ((_246d93036_Slc(_63243_k.ptr()) != nullptr)) {
			_case_begin_212dd70c0:;
			{
				_63259_ok = _246d4d92b_annotateSlc(&(*_self_), _63243_k);
				return _63259_ok;
			}
		}
		else if ((_246d939d7_Map(_63243_k.ptr()) != nullptr)) {
			_case_begin_212dd7136:;
			{
				_63259_ok = _246d4e0e1_annotateMap(&(*_self_), _63243_k);
				return _63259_ok;
			}
		}
		else if ((_246d9329a_Fn(_63243_k.ptr()) != nullptr)) {
			_case_begin_212dd6b3b:;
			{
				_63259_ok = _246d4e3ee_annotateFn(&(*_self_), _63243_k);
				return _63259_ok;
			}
		}
		else if ((_246d92585_Ptr(_63243_k.ptr()) != nullptr)) {
			_case_begin_212dd6ba2:;
			{
				_63259_ok = _246d4e70c_annotatePtr(&(*_self_), _63243_k);
				return _63259_ok;
			}
		}
		else if ((_246d92321_Sptr(_63243_k.ptr()) != nullptr)) {
			_case_begin_212dd6c18:;
			{
				_63259_ok = _246d4ea1a_annotateSptr(&(*_self_), _63243_k);
				return _63259_ok;
			}
		}
		else if ((_246d9350e_Struct(_63243_k.ptr()) != nullptr)) {
			_case_begin_212dd6c90:;
			{
				_63259_ok = _246d4ed28_annotateStruct(&(*_self_), _63243_k);
				return _63259_ok;
			}
		}
		else {
			_case_begin_212dd6ac5:;
			{
				_63259_ok = false;
				return _63259_ok;
			}
		}
		_match_end_212dd6a70:;
	};
}



inline jule::Bool _246d506a8_annotate(_246d4b583_dynamicTypeAnnotation* _self_) {
	jule::Bool _66036_ok = false;
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_Kind));
	_66036_ok = _246d50444_annotateKind(&(*_self_), (*_self_)._field_a.get()._field_Kind);
	return _66036_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _246d4b583_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c;
	_Stream << "}";
	return _Stream;
}



inline void _246d513ce_pushErrToken(_246d50d7e_fnCallArgChecker* _self_, jule::Ptr<_24496dc35_Token> _67631_token, jule::Str _67646_fmt, jule::Slice<jule::Any> _67659_args) {
	_246ceb2d0_pushErr((*_self_)._field_e.get()._field_s.ptr(), _67631_token,_67646_fmt,jule::Any(_67659_args));
}



inline void _246d516ed_pushErr(_246d50d7e_fnCallArgChecker* _self_, jule::Str _68026_fmt, jule::Slice<jule::Any> _68039_args) {
	_246d513ce_pushErrToken(&(*_self_), (*_self_)._field_errorToken,_68026_fmt,jule::Any(_68039_args));
}



inline jule::Slice<jule::Ptr<_246cab955_ParamIns>> _246d51962_getParams(_246d50d7e_fnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_Params.len() > 0LL) && ((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _24617a220_IsSelf((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*_self_)._field_f.get()._field_Params.slice(1LL);
	};
	return (*_self_)._field_f.get()._field_Params;
}



inline jule::Bool _246d51c70_checkCounts(_246d50d7e_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_246cab955_ParamIns>>& _69331_params) {
	jule::Bool _69354_ok = false;
	jule::I64 _69417_n = _69331_params.len();;
	if (((_69417_n > 0LL) && _24617a220_IsSelf(_69331_params[0LL].get()._field_Decl.ptr()))) {
		(_69417_n)--;
	};
	jule::I64 _69917_diff = (_69417_n - (*_self_)._field_args.len());;
	{
		
		if ((_69917_diff == 0LL)) {
			_case_begin_212de4561:;
			{
				_69354_ok = true;
				return _69354_ok;
			}
		}
		else if (((_69417_n > 0LL) && _69331_params[(_69417_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_212de45d8:;
			{
				_69354_ok = true;
				return _69354_ok;
			}
		}
		else if (((_69917_diff < 0LL) || (_69917_diff > _69331_params.len()))) {
			_case_begin_212de4660:;
			{
				_246d516ed_pushErr(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_69354_ok = false;
				return _69354_ok;
			}
		}
		_match_end_212de44a6:;
	};
	jule::Str _71017_idents = jule::Str();;
	for (; (_69917_diff > 0LL); (_69917_diff)--) {
		{
			_71017_idents+=(jule::Str(", ", 2) + _69331_params[(_69417_n - _69917_diff)].get()._field_Decl.get()._field_Ident);
		}
	_iter_next_212de6299:;
	}
	_iter_end_212de6299:;;
	(_71017_idents).mut_slice(2LL);;
	_246d516ed_pushErr(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_71017_idents)}));
	_69354_ok = false;
	return _69354_ok;
}



inline jule::Bool _246d521c1_checkArg(_246d50d7e_fnCallArgChecker* _self_, jule::Ptr<_246cab955_ParamIns>& _72032_p, jule::Ptr<_246d5e398_Data>& _72051_arg, jule::Ptr<_24496dc35_Token>& _72068_errorToken) {
	jule::Bool _72090_ok = false;
	if (((*_self_)._field_dynamicAnnotation && _246cac307_parameterUsesGenerics(_72032_p.get()._field_Decl,(*_self_)._field_f.get()._field_Decl.get()._field_Generics))) {
		_72090_ok=(!(_72032_p.get()._field_Decl.get()._field_Variadic));
		if (_72090_ok) {
			_246d4b583_dynamicTypeAnnotation _72425_dta = _246d4b583_dynamicTypeAnnotation{._field_e=(*_self_)._field_e, ._field_f=(*_self_)._field_f, ._field_p=_72032_p, ._field_a=_72051_arg, ._field_errorToken=_72068_errorToken, };;
			_72090_ok=_246d506a8_annotate(&_72425_dta);
		};
		if ((!(_72090_ok))) {
			_246d513ce_pushErrToken(&(*_self_), _72068_errorToken,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_72090_ok = false;
			return _72090_ok;
		};
	};
	if (_246d05e00_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, _72032_p.get()._field_Decl.get()._field_Mutable,_72032_p.get()._field_Decl.get()._field_Reference,_72032_p.get()._field_Kind,_72051_arg,_72068_errorToken)) {
		_246d031b6_checkAssignType((*_self_)._field_e.get()._field_s, _72032_p.get()._field_Decl.get()._field_Reference,_72032_p.get()._field_Kind,_72051_arg,_72068_errorToken);
	};
	_72090_ok = true;
	return _72090_ok;
}



inline jule::Bool _246d52578_push(_246d50d7e_fnCallArgChecker* _self_, jule::Ptr<_246cab955_ParamIns>& _74728_p, jule::Ptr<_24612a148_Expr> _74746_arg) {
	jule::Bool _74760_ok = false;
	jule::Ptr<_246d8ee9a_TypeKind> _74817_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _74913_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_246d5e398_Data> _75017_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_74728_p.get()._field_Decl.get()._field_Mutable));
	if (((!((*_self_)._field_dynamicAnnotation)) && (!(_74728_p.get()._field_Decl.get()._field_Variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_74728_p.get()._field_Kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_75017_d=_246d81079_evalExprKind((*_self_)._field_e, _74746_arg.get()._field_Kind);
	(*_self_)._field_e.get()._field_prefix=_74817_old;
	(*_self_)._field_e.get()._field_immutable=_74913_old_immut;
	if ((_75017_d == nullptr)) {
		_74760_ok = false;
		return _74760_ok;
	};
	_74760_ok=_246d521c1_checkArg(&(*_self_), _74728_p,_75017_d,_74746_arg.get()._field_Token);
	(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_75017_d.get()._field_Model);;
	return _74760_ok;
}



inline jule::Bool _246d52930_pushVariadic(_246d50d7e_fnCallArgChecker* _self_, jule::Ptr<_246cab955_ParamIns>& _77236_p, jule::I64 _77254_i) {
	jule::Bool _77264_ok = false;
	_77264_ok=true;
	jule::Bool _77417_variadiced = false;;
	jule::Bool _77513_more = ((_77254_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_246ca6a82_SliceExprModel> _77617_model = jule::new_ptr<_246ca6a82_SliceExprModel>(_246ca6a82_SliceExprModel{._field_ElemKind=_77236_p.get()._field_Kind, });;
	jule::Ptr<_246d8ee9a_TypeKind> _78017_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _78513_variadic = _77236_p.get()._field_Kind.get()._field_Variadic;;
	_77236_p.get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		_77236_p.get()._field_Kind.get()._field_Variadic=_78513_variadic;
	});;
	for (; (_77254_i < (*_self_)._field_args.len()); (_77254_i)++) {
		{
			jule::Ptr<_24612a148_Expr> _79221_arg = (*_self_)._field_args[_77254_i];;
			{
				auto &_match_expr{ _79221_arg.get()._field_Kind };
				
				if (_match_expr.type_is<jule::Ptr<_24612c8ba_VariadicExpr>>()) {
					_case_begin_212e06e58:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(jule::new_ptr<_246d98b63_Slc>(_246d98b63_Slc{._field_Elem=_77236_p.get()._field_Kind}), 8)});
					}
				}
				else {
					_case_begin_212e06a5c:;
					{
						(*_self_)._field_e.get()._field_prefix=_77236_p.get()._field_Kind;
					}
				}
				_match_end_212e0684d:;
			};
			jule::Ptr<_246d5e398_Data> _80521_d = _246d81387_eval((*_self_)._field_e, _79221_arg);;
			if ((_80521_d == nullptr)) {
				_77264_ok=false;
				goto _iter_next_212e052db;
			};
			if (_80521_d.get()._field_Kind.get()._field_Variadic) {
				_77417_variadiced=true;
				_77236_p.get()._field_Kind.get()._field_Variadic=true;
				_77264_ok=(_77264_ok && _246d521c1_checkArg(&(*_self_), _77236_p,_80521_d,_79221_arg.get()._field_Token));
				{
					auto &_match_expr{ _80521_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_246ca6a82_SliceExprModel>>()) {
						_case_begin_212e0a2e1:;
						{
							_77617_model=_80521_d.get()._field_Model.operator jule::Ptr<_246ca6a82_SliceExprModel>();
							_77617_model.get()._field_ElemKind=_77236_p.get()._field_Kind;
						}
					}
					else {
						_case_begin_212e09cb3:;
						{
							_77617_model=nullptr;
							(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_80521_d.get()._field_Model);;
						}
					}
					_match_end_212e09136:;
				};
				(_77254_i)++;
				goto _iter_end_212e052db;
			};
			_77264_ok=(_77264_ok && _246d521c1_checkArg(&(*_self_), _77236_p,_80521_d,_79221_arg.get()._field_Token));
			_77617_model.get()._field_Elems = jule::alloc_for_append(_77617_model.get()._field_Elems,1);_77617_model.get()._field_Elems.__push(_80521_d.get()._field_Model);;
		}
	_iter_next_212e052db:;
	}
	_iter_end_212e052db:;;
	(*_self_)._field_e.get()._field_prefix=_78017_old;
	if ((_77417_variadiced && _77513_more)) {
		_246d513ce_pushErrToken(&(*_self_), (*_self_)._field_args[_77254_i].get()._field_Token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_77617_model != nullptr)) {
		(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(static_cast<jule::Any>(_77617_model));;
	};
	return _77264_ok;
}



inline jule::Bool _246d52c3d_checkArgs(_246d50d7e_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_246cab955_ParamIns>>& _84833_params) {
	jule::Bool _84856_ok = false;
	jule::Bool _84913_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	_84856_ok=true;
	jule::I64 _85317_i = 0LL;;
	if (((_84833_params.len() > 0LL) && _24617a220_IsSelf(_84833_params[0LL].get()._field_Decl.ptr()))) {
		(_85317_i)++;
	};
	_julec_label_iter:;
	while ((_85317_i < _84833_params.len())) {
		{
			jule::Ptr<_246cab955_ParamIns> _86021_p = _84833_params[_85317_i];;
			{
				
				if (_86021_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_212e1113d:;
					{
						_84856_ok=(_246d52930_pushVariadic(&(*_self_), _86021_p,_85317_i) && _84856_ok);
						goto _iter_end_212e0ee61;
					}
				}
				else if (((*_self_)._field_args.len() <= _85317_i)) {
					_case_begin_212e11a34:;
					{
						_84856_ok=false;
						goto _iter_end_212e0ee61;
					}
				}
				else {
					_case_begin_212e1168d:;
					{
						_84856_ok=(_246d52578_push(&(*_self_), _86021_p,(*_self_)._field_args[_85317_i]) && _84856_ok);
					}
				}
				_match_end_212e11627:;
			};
			(_85317_i)++;
		}
	_iter_next_212e0ee61:;
	}
	_iter_end_212e0ee61:;;
	(*_self_)._field_e.get()._field_arg=_84913_arg;
	return _84856_ok;
}



inline jule::Bool _246d52ec4_checkDynamicTypeAnnotation(_246d50d7e_fnCallArgChecker* _self_) {
	jule::Bool _87947_ok = false;
	{
		auto &expr = (*_self_)._field_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_212e13c89:;
		if (it != expr.end()) {
			jule::Ptr<_246d8d76d_InsGeneric> _88016_g = *it;
			{
				if ((_88016_g == nullptr)) {
					_246d516ed_pushErr(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_87947_ok = false;
					return _87947_ok;
				};
			}
			_iter_next_212e13c89:;
			++it;
			goto _iter_begin_212e13c89;
		}
		_iter_end_212e13c89:;
	};
	_87947_ok = true;
	return _87947_ok;
}



inline jule::Bool _246d53249_check(_246d50d7e_fnCallArgChecker* _self_) {
	jule::Bool _88926_ok = false;
	jule::Slice<jule::Ptr<_246cab955_ParamIns>> _89017_params = _246d51962_getParams(&(*_self_));;
	_88926_ok=_246d51c70_checkCounts(&(*_self_), _89017_params);
	if ((!(_88926_ok))) {
		_88926_ok = false;
		return _88926_ok;
	};
	_88926_ok=_246d52c3d_checkArgs(&(*_self_), _89017_params);
	if ((_88926_ok && (*_self_)._field_dynamicAnnotation)) {
		_88926_ok=_246d52ec4_checkDynamicTypeAnnotation(&(*_self_));
	};
	return _88926_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _246d50d7e_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels;
	_Stream << "}";
	return _Stream;
}



inline void _246d53c94_pushErr(_246d53788_structLitChecker* _self_, jule::Ptr<_24496dc35_Token> _91126_token, jule::Str _91141_fmt, jule::Slice<jule::Any> _91154_args) {
	_246d61422_pushErr((*_self_)._field_e.ptr(), _91126_token,_91141_fmt,jule::Any(_91154_args));
}



inline void _246d540b3_pushSugggestion(_246d53788_structLitChecker* _self_, jule::Str _91634_fmt, jule::Slice<jule::Any> _91647_args) {
	_246d61741_pushSugggestion((*_self_)._field_e.ptr(), _91634_fmt,jule::Any(_91647_args));
}



inline void _246d5447b_pushMatch(_246d53788_structLitChecker* _self_, jule::Ptr<_24611d977_FieldIns>& _92033_f, jule::Ptr<_246d5e398_Data>& _92052_d, jule::Ptr<_24496dc35_Token>& _92067_errorToken) {
	;
	if (_246d05e00_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_92033_f.get()._field_Kind,_92052_d,_92067_errorToken)) {
		_246d031b6_checkAssignType((*_self_)._field_e.get()._field_s, false,_92033_f.get()._field_Kind,_92052_d,_92067_errorToken);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_246ca60e2_StructArgExprModel>(_246ca60e2_StructArgExprModel{._field_Field=_92033_f, ._field_Expr=_92052_d.get()._field_Model}));;
}



inline void _246d5479a_checkPair(_246d53788_structLitChecker* _self_, jule::Ptr<_24612eaa9_FieldExprPair>& _93333_pair, jule::Slice<jule::Ptr<_24612a148_Expr>>& _93360_exprs) {
	jule::Ptr<_24611d977_FieldIns> _93517_f = _24611c7cd_FindField((*_self_)._field_s.ptr(), _93333_pair.get()._field_Field.get()._field_Kind);;
	if ((_93517_f == nullptr)) {
		_246d53c94_pushErr(&(*_self_), _93333_pair.get()._field_Field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_93333_pair.get()._field_Field.get()._field_Kind)}));
		return;;
	};
	if ((!(_246ceb9a6_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _93517_f.get()._field_Decl.get()._field_Public,_93517_f.get()._field_Decl.get()._field_Token)))) {
		_246d53c94_pushErr(&(*_self_), _93333_pair.get()._field_Field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_93333_pair.get()._field_Field.get()._field_Kind)}));
		_246d540b3_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _93360_exprs;
		auto it = expr.begin();
		_iter_begin_212e1e877:;
		if (it != expr.end()) {
			jule::Ptr<_24612a148_Expr> _94721_expr = *it;
			{
				{
					auto &_match_expr{ _94721_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_24612eaa9_FieldExprPair>>()) {
						_case_begin_212e202a1:;
						{
							jule::Ptr<_24612eaa9_FieldExprPair> _95025_dpair = _94721_expr.get()._field_Kind.operator jule::Ptr<_24612eaa9_FieldExprPair>();;
							{
								
								if ((_93333_pair == _95025_dpair)) {
									_case_begin_212e212b3:;
									{
										goto _iter_end_212e1e877;
									}
								}
								else if ((_93333_pair.get()._field_Field.get()._field_Kind == _95025_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_212e2133a:;
									{
										_246d53c94_pushErr(&(*_self_), _93333_pair.get()._field_Field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>::make({jule::Any(_93333_pair.get()._field_Field.get()._field_Kind)}));
										goto _iter_end_212e1e877;
									}
								}
								_match_end_212e21208:;
							};
						}
					}
					_match_end_212e20081:;
				};
			}
			_iter_next_212e1e877:;
			++it;
			goto _iter_begin_212e1e877;
		}
		_iter_end_212e1e877:;
	};
	jule::Ptr<_246d8ee9a_TypeKind> _96117_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_96117_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_93517_f.get()._field_Kind;
	jule::Ptr<_246d5e398_Data> _96517_d = _246d81079_evalExprKind((*_self_)._field_e, _93333_pair.get()._field_Expr.get()._field_Kind);;
	if ((_96517_d == nullptr)) {
		return;;
	};
	_246d5447b_pushMatch(&(*_self_), _93517_f,_96517_d,_93333_pair.get()._field_Field);
}



inline jule::Bool _246d54aa8_readyExprs(_246d53788_structLitChecker* _self_, jule::Slice<jule::Ptr<_24612a148_Expr>>& _97234_exprs) {
	jule::Bool _97317_ok = true;;
	{
		auto &expr = _97234_exprs;
		auto it = expr.begin();
		_iter_begin_212e2520c:;
		if (it != expr.end()) {
			jule::I64 _97414_i = it - expr.begin();
			jule::Ptr<_24612a148_Expr> _97421_expr = *it;
			{
				{
					auto &_match_expr{ _97421_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_246131050_KeyValPair>>()) {
						_case_begin_212e25edd:;
						{
							jule::Ptr<_246131050_KeyValPair> _97725_pair = _97421_expr.get()._field_Kind.operator jule::Ptr<_246131050_KeyValPair>();;
							{
								auto &_match_expr{ _97725_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type_is<jule::Ptr<_24612bd09_IdentExpr>>()) {
									_case_begin_212e274c8:;
									{
										goto _match_end_212e27066;
									}
								}
								else {
									_case_begin_212e270bb:;
									{
										_246d53c94_pushErr(&(*_self_), _97725_pair.get()._field_Colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_97317_ok=false;
										goto _iter_next_212e2520c;
									}
								}
								_match_end_212e27066:;
							};
							_97234_exprs[_97414_i].get()._field_Kind=static_cast<jule::Any>(jule::new_ptr<_24612eaa9_FieldExprPair>(_24612eaa9_FieldExprPair{._field_Field=_97725_pair.get()._field_Key.get()._field_Token, ._field_Expr=_97725_pair.get()._field_Val}));
						}
					}
					_match_end_212e25cbd:;
				};
			}
			_iter_next_212e2520c:;
			++it;
			_97414_i++;
			goto _iter_begin_212e2520c;
		}
		_iter_end_212e2520c:;
	};
	return _97317_ok;
}



inline void _246d54d2d_check(_246d53788_structLitChecker* _self_, jule::Slice<jule::Ptr<_24612a148_Expr>>& _99629_exprs) {
	if ((_99629_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_246d54aa8_readyExprs(&(*_self_), _99629_exprs)))) {
		return;;
	};
	jule::Bool _100317_paired = false;;
	{
		auto &expr = _99629_exprs;
		auto it = expr.begin();
		_iter_begin_212e298b5:;
		if (it != expr.end()) {
			jule::I64 _100414_i = it - expr.begin();
			jule::Ptr<_24612a148_Expr> _100421_expr = *it;
			{
				{
					auto &_match_expr{ _100421_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_24612eaa9_FieldExprPair>>()) {
						_case_begin_212e30987:;
						{
							jule::Ptr<_24612eaa9_FieldExprPair> _100725_pair = _100421_expr.get()._field_Kind.operator jule::Ptr<_24612eaa9_FieldExprPair>();;
							if (((_100414_i > 0LL) && (!(_100317_paired)))) {
								_246d53c94_pushErr(&(*_self_), _100725_pair.get()._field_Field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_100317_paired=true;
							_246d5479a_checkPair(&(*_self_), _100725_pair,_99629_exprs);
						}
					}
					else {
						_case_begin_212e2a5ec:;
						{
							if (_100317_paired) {
								_246d53c94_pushErr(&(*_self_), _100421_expr.get()._field_Token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_100414_i >= (*_self_)._field_s.get()._field_Fields.len())) {
								_246d53c94_pushErr(&(*_self_), _100421_expr.get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_212e298b5;
							};
							jule::Ptr<_24611d977_FieldIns> _102225_field = (*_self_)._field_s.get()._field_Fields[_100414_i];;
							if ((!(_246ceb9a6_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _102225_field.get()._field_Decl.get()._field_Public,_102225_field.get()._field_Decl.get()._field_Token)))) {
								_246d53c94_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("structure cannot instantiating because it has non-public fields", 63),jule::Slice<jule::Any>());
								_246d540b3_pushSugggestion(&(*_self_), jule::Str("use field:expression pairs to instantiate", 41),jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_246d8ee9a_TypeKind> _103025_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_103025_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_102225_field.get()._field_Kind;
							jule::Ptr<_246d5e398_Data> _103425_d = _246d81079_evalExprKind((*_self_)._field_e, _100421_expr.get()._field_Kind);;
							if ((_103425_d == nullptr)) {
								goto _iter_next_212e298b5;
							};
							_246d5447b_pushMatch(&(*_self_), _102225_field,_103425_d,_100421_expr.get()._field_Token);
						}
					}
					_match_end_212e2a443:;
				};
			}
			_iter_next_212e298b5:;
			++it;
			_100414_i++;
			goto _iter_begin_212e298b5;
		}
		_iter_end_212e298b5:;
	};
	if ((!(_100317_paired))) {
		jule::I64 _104517_n = (*_self_)._field_s.get()._field_Fields.len();;
		jule::I64 _104621_diff = (_104517_n - _99629_exprs.len());;
		{
			
			if ((_104621_diff <= 0LL)) {
				_case_begin_212e33924:;
				{
					return;;
				}
			}
			_match_end_212e337c0:;
		};
		jule::Str _105221_idents = jule::Str();;
		for (; (_104621_diff > 0LL); (_104621_diff)--) {
			{
				_105221_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_Fields[(_104517_n - _104621_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_212e343d6:;
		}
		_iter_end_212e343d6:;;
		(_105221_idents).mut_slice(2LL);;
		_246d53c94_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_105221_idents)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _246d53788_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_246d16372_Var> _246d55812_buildVar(_246d5536c_rangeChecker* _self_, jule::Ptr<_246138585_VarDecl>& _107128_decl) {
	jule::Ptr<_246d16372_Var> _107217_v = _246cae9e1_buildVar(_107128_decl);;
	return _107217_v;
}



inline void _246d559dd_setSizeKey(_246d5536c_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _2449714c9_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyA=_246d55812_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_246d94103_TypeSymbol>(_246d94103_TypeSymbol{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_246d16372_Var>>()) {
			_case_begin_212e384d9:;
			{
				(*_self_)._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_246d15409_IterRelation>(_246d15409_IterRelation{._field_Range=(*_self_)._field_d.get()._field_Model.operator jule::Ptr<_246d16372_Var>()});
			}
		}
		_match_end_212e36086:;
	};
}



inline void _246d55da6_checkRangeExprValidity(_246d5536c_rangeChecker* _self_, jule::Ptr<_246d5e398_Data>& _110246_d, jule::Ptr<_246d16372_Var>& _110257_key, jule::Ptr<_246d8ee9a_TypeKind>& _110273_k) {
	jule::Bool _110317__mut = _110257_key.get()._field_Mutable;;
	if ((_110317__mut && (!(_246d91397_Mutable(_110273_k.ptr()))))) {
		_110317__mut=false;
	};
	_246d05e00_checkValidityForInitExpr((*_self_)._field_sc.get()._field_s, _110317__mut,_110257_key.get()._field_Reference,_110257_key.get()._field_Kind.get()._field_Kind,_110246_d,(*_self_)._field_rang.get()._field_InToken);
}



inline void _246d56082_checkSlice(_246d5536c_rangeChecker* _self_) {
	_246d559dd_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _2449714c9_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_246d98b63_Slc> _112117_slc = _246d93036_Slc((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_246d55812_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_246d94103_TypeSymbol>(_246d94103_TypeSymbol{._field_Kind=_112117_slc.get()._field_Elem});
	_246d55da6_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_112117_slc.get()._field_Elem);
}



inline void _246d5625d_checkArray(_246d5536c_rangeChecker* _self_) {
	_246d559dd_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _2449714c9_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_246d9ad0d_Arr> _113417_arr = _246d92cc2_Arr((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_246d55812_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_246d94103_TypeSymbol>(_246d94103_TypeSymbol{._field_Kind=_113417_arr.get()._field_Elem});
	_246d55da6_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_113417_arr.get()._field_Elem);
}



inline void _246d56439_checkMapKeyA(_246d5536c_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _2449714c9_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_246d9a219_Map> _114617_m = _246d939d7_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyA=_246d55812_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_246d94103_TypeSymbol>(_246d94103_TypeSymbol{._field_Kind=_114617_m.get()._field_Key});
	jule::Ptr<_246d5e398_Data> _115017_d = jule::new_ptr<_246d5e398_Data>((*((*_self_)._field_d)));;
	_115017_d.get()._field_Kind=_114617_m.get()._field_Key;
	_246d55da6_checkRangeExprValidity(&(*_self_), _115017_d,(*_self_)._field_Kind.get()._field_KeyA,_114617_m.get()._field_Key);
}



inline void _246d56615_checkMapKeyB(_246d5536c_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _2449714c9_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_246d9a219_Map> _116117_m = _246d939d7_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_246d55812_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_246d94103_TypeSymbol>(_246d94103_TypeSymbol{._field_Kind=_116117_m.get()._field_Val});
	jule::Ptr<_246d5e398_Data> _116517_d = jule::new_ptr<_246d5e398_Data>((*((*_self_)._field_d)));;
	_116517_d.get()._field_Kind=_116117_m.get()._field_Val;
	_246d55da6_checkRangeExprValidity(&(*_self_), _116517_d,(*_self_)._field_Kind.get()._field_KeyB,_116117_m.get()._field_Val);
}



inline void _246d567e1_checkMap(_246d5536c_rangeChecker* _self_) {
	_246d56439_checkMapKeyA(&(*_self_));
	_246d56615_checkMapKeyB(&(*_self_));
}



inline void _246d569bc_checkStr(_246d5536c_rangeChecker* _self_) {
	_246d559dd_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _2449714c9_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyB=_246d55812_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_246d94103_TypeSymbol>(_246d94103_TypeSymbol{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _246d56c31_check(_246d5536c_rangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_212e4e104:;
		}
		else if ((_246d93036_Slc((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_212e4e236:;
			{
				_246d56082_checkSlice(&(*_self_));
				return true;
			}
		}
		else if ((_246d92cc2_Arr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_212e4ca3c:;
			{
				_246d5625d_checkArray(&(*_self_));
				return true;
			}
		}
		else if ((_246d939d7_Map((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_212e4caa3:;
			{
				_246d567e1_checkMap(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_212e4c9c6:;
			{
				jule::Ptr<_246d94972_Prim> _120317_prim = _246d920ac_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (((_120317_prim != nullptr) && _246d97ba6_IsStr(_120317_prim.ptr()))) {
					_246d569bc_checkStr(&(*_self_));
					return true;
				};
			}
		}
		_match_end_212e4c8e9:;
	};
	_246ceb2d0_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_InToken,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _246d5536c_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _246d57979_prepareTypes(_246d574c3_retTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_2461a97e3_Types((*_self_)._field_f.ptr());
	};
}



inline void _246d57bee_prepareExprs(_246d574c3_retTypeChecker* _self_, jule::Ptr<_24612a148_Expr>& _123236_e) {
	if ((_123236_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _123236_e.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_24612acc5_TupleExpr>>()) {
			_case_begin_212e54824:;
			{
				(*_self_)._field_exprs=_123236_e.get()._field_Kind.operator jule::Ptr<_24612acc5_TupleExpr>().get()._field_Expr;
			}
		}
		else {
			_case_begin_212e53735:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_123236_e);;
			}
		}
		_match_end_212e53834:;
	};
}



inline void _246d57dca_retVars(_246d574c3_retTypeChecker* _self_) {
	if ((((*_self_)._field_f == nullptr) || _24618a10e_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		return;;
	};
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_246d16372_Var>>::alloc(0LL, (*_self_)._field_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len());
	jule::Ptr<_246cc8862_scopeChecker> _125017_rootScope = _246ccb975_getRoot((*_self_)._field_sc);;
	jule::I64 _125217_j = 0LL;;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_212e56e42:;
		if (it != expr.end()) {
			jule::I64 _125313_i = it - expr.begin();
			jule::Ptr<_24496dc35_Token> _125316_ident = *it;
			{
				if (((!(_2449714c9_IsIgnoreIdent(_125316_ident.get()._field_Kind))) && (!(_244971771_IsAnonIdent(_125316_ident.get()._field_Kind))))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_125017_rootScope.get()._field_table.get()._field_Vars[_125217_j]);;
					(_125217_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_246d16372_Var>(_246d16372_Var{._field_Ident=jule::Str("_", 1), ._field_Kind=jule::new_ptr<_246d94103_TypeSymbol>(_246d94103_TypeSymbol{._field_Kind=(*_self_)._field_types[_125313_i]}), }));;
				};
			}
			_iter_next_212e56e42:;
			++it;
			_125313_i++;
			goto _iter_begin_212e56e42;
		}
		_iter_end_212e56e42:;
	};
	if ((_125217_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	};
}



inline void _246d580a6_checkExprs(_246d574c3_retTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_246d5e398_Data>> _127517_datas = jule::Slice<jule::Ptr<_246d5e398_Data>>::alloc(0LL, (*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_212e5b1aa:;
		if (it != expr.end()) {
			jule::I64 _127614_i = it - expr.begin();
			jule::Ptr<_24612a148_Expr> _127621_expr = *it;
			{
				if ((_127614_i >= (*_self_)._field_types.len())) {
					goto _iter_end_212e5b1aa;
				};
				jule::Ptr<_246d8ee9a_TypeKind> _128121_t = (*_self_)._field_types[_127614_i];;
				jule::Ptr<_246d5e398_Data> _128321_d = _246d81695_evalExpr(_246d028ad_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_246daaacb_Lookup>((*_self_)._field_sc, 0),_128121_t), _127621_expr);;
				if ((_128321_d == nullptr)) {
					goto _iter_next_212e5b1aa;
				};
				_127517_datas = jule::alloc_for_append(_127517_datas,1);_127517_datas.__push(_128321_d);;
				if (((!(_128321_d.get()._field_Mutable)) && _246d91397_Mutable(_128321_d.get()._field_Kind.ptr()))) {
					_246ceb2d0_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_246d49b69_assignTypeChecker _129521_ac = _246d49b69_assignTypeChecker{._field_s=(*_self_)._field_sc.get()._field_s, ._field_dest=_128121_t, ._field_d=_128321_d, ._field_errorToken=(*_self_)._field_errorToken};;
				_246d4ace1_check(&_129521_ac);
			}
			_iter_next_212e5b1aa:;
			++it;
			_127614_i++;
			goto _iter_begin_212e5b1aa;
		}
		_iter_end_212e5b1aa:;
	};
	if ((_127517_datas.len() > 1LL)) {
		(*_self_)._field_model=static_cast<jule::Any>(jule::new_ptr<_246ca85bc_TupleExprModel>(_246ca85bc_TupleExprModel{._field_Datas=_127517_datas}));
	} else if ((_127517_datas.len() == 1LL)) {
		(*_self_)._field_model=_127517_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _246d583b4_check(_246d574c3_retTypeChecker* _self_, jule::Ptr<_24612a148_Expr>& _131429_e) {
	_246d57979_prepareTypes(&(*_self_));
	_246d57bee_prepareExprs(&(*_self_), _131429_e);
	_246d57dca_retVars(&(*_self_));
	jule::I64 _131913_n = (*_self_)._field_exprs.len();;
	if (((_131913_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_24617e8a6_AnyVar((*_self_)._field_f.get()._field_Decl.ptr())))) {
			_246ceb2d0_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		};
		return true;
	};
	if ((((_131913_n > 0LL) && ((*_self_)._field_f != nullptr)) && _24618a10e_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		_246ceb2d0_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	};
	if ((_131913_n > (*_self_)._field_types.len())) {
		_246ceb2d0_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_131913_n < (*_self_)._field_types.len())) {
		_246ceb2d0_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_246d580a6_checkExprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _246d574c3_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_246ce04c2_ImportInfo> _246d59a8b_FindPackage(_246d5956e_SymbolTable* _self_, jule::Str _2630_ident) {
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_212e68508:;
		if (it != expr.end()) {
			jule::Ptr<_246ce04c2_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_Ident == _2630_ident)) {
					return _2721_pkg;
				};
			}
			_iter_next_212e68508:;
			++it;
			goto _iter_begin_212e68508;
		}
		_iter_end_212e68508:;
	};
	return nullptr;
}



inline jule::Ptr<_246ce04c2_ImportInfo> _246d59d99_SelectPackage(_246d5956e_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_246ce04c2_ImportInfo>)> _3832_selector) {
	if ((_3832_selector == nullptr)) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_212e68abe:;
		if (it != expr.end()) {
			jule::Ptr<_246ce04c2_ImportInfo> _4221_pkg = *it;
			{
				if (_3832_selector(_4221_pkg)) {
					return _4221_pkg;
				};
			}
			_iter_next_212e68abe:;
			++it;
			goto _iter_begin_212e68abe;
		}
		_iter_end_212e68abe:;
	};
	return nullptr;
}



inline jule::Ptr<_246d16372_Var> _246d5a251_FindVar(_246d5956e_SymbolTable* _self_, jule::Str _5226_ident, jule::Bool _5238_cppLinked) {
	return _246d5bd13_findVar(&(*_self_), _5226_ident,_5238_cppLinked,false);
}



inline jule::Ptr<_246d8e2a7_TypeAlias> _246d5a608_FindTypeAlias(_246d5956e_SymbolTable* _self_, jule::Str _5832_ident, jule::Bool _5844_cppLinked) {
	return _246d5c264_findTypeAlias(&(*_self_), _5832_ident,_5844_cppLinked,false);
}



inline jule::Ptr<_246117c3a_Struct> _246d5a9b0_FindStruct(_246d5956e_SymbolTable* _self_, jule::Str _6429_ident, jule::Bool _6441_cppLinked) {
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_212e6c463:;
		if (it != expr.end()) {
			jule::Ptr<_246117c3a_Struct> _6521_s = *it;
			{
				if (((_6521_s.get()._field_Ident == _6429_ident) && (_6521_s.get()._field_CppLinked == _6441_cppLinked))) {
					return _6521_s;
				};
			}
			_iter_next_212e6c463:;
			++it;
			goto _iter_begin_212e6c463;
		}
		_iter_end_212e6c463:;
	};
	return nullptr;
}



inline jule::Ptr<_246cab768_Fn> _246d5ad67_FindFn(_246d5956e_SymbolTable* _self_, jule::Str _7525_ident, jule::Bool _7537_cppLinked) {
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_212e6d9b4:;
		if (it != expr.end()) {
			jule::Ptr<_246cab768_Fn> _7621_f = *it;
			{
				if (((_7621_f.get()._field_Ident == _7525_ident) && (_7621_f.get()._field_CppLinked == _7537_cppLinked))) {
					return _7621_f;
				};
			}
			_iter_next_212e6d9b4:;
			++it;
			goto _iter_begin_212e6d9b4;
		}
		_iter_end_212e6d9b4:;
	};
	return nullptr;
}



inline jule::Ptr<_246cb3e9b_Trait> _246d5b175_FindTrait(_246d5956e_SymbolTable* _self_, jule::Str _8628_ident) {
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_212e6ed06:;
		if (it != expr.end()) {
			jule::Ptr<_246cb3e9b_Trait> _8721_t = *it;
			{
				if ((_8721_t.get()._field_Ident == _8628_ident)) {
					return _8721_t;
				};
			}
			_iter_next_212e6ed06:;
			++it;
			goto _iter_begin_212e6ed06;
		}
		_iter_end_212e6ed06:;
	};
	return nullptr;
}



inline jule::Ptr<_246cb60e1_Enum> _246d5b483_FindEnum(_246d5956e_SymbolTable* _self_, jule::Str _9727_ident) {
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_212e701ad:;
		if (it != expr.end()) {
			jule::Ptr<_246cb60e1_Enum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9727_ident)) {
					return _9821_e;
				};
			}
			_iter_next_212e701ad:;
			++it;
			goto _iter_begin_212e701ad;
		}
		_iter_end_212e701ad:;
	};
	return nullptr;
}



inline jule::Ptr<_246cb76db_TypeEnum> _246d5b791_FindTypeEnum(_246d5956e_SymbolTable* _self_, jule::Str _10831_ident) {
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_212e711c0:;
		if (it != expr.end()) {
			jule::Ptr<_246cb76db_TypeEnum> _10921_e = *it;
			{
				if ((_10921_e.get()._field_Ident == _10831_ident)) {
					return _10921_e;
				};
			}
			_iter_next_212e711c0:;
			++it;
			goto _iter_begin_212e711c0;
		}
		_iter_end_212e711c0:;
	};
	return nullptr;
}



inline jule::Ptr<_246d16372_Var> _246d5bd13_findVar(_246d5956e_SymbolTable* _self_, jule::Str _11926_ident, jule::Bool _11938_cppLinked, jule::Bool _11955_reverse) {
	if (_11955_reverse) {
		jule::I64 _12121_i = ((*_self_)._field_Vars.len() - 1LL);;
		for (; (_12121_i >= 0LL); (_12121_i)--) {
			{
				jule::Ptr<_246d16372_Var> _12325_v = (*_self_)._field_Vars[_12121_i];;
				if (((_12325_v.get()._field_Ident == _11926_ident) && (_12325_v.get()._field_CppLinked == _11938_cppLinked))) {
					return _12325_v;
				};
			}
		_iter_next_212e73d82:;
		}
		_iter_end_212e73d82:;;
	} else {
		{
			auto &expr = (*_self_)._field_Vars;
			auto it = expr.begin();
			_iter_begin_212e7413a:;
			if (it != expr.end()) {
				jule::Ptr<_246d16372_Var> _12925_v = *it;
				{
					if (((_12925_v.get()._field_Ident == _11926_ident) && (_12925_v.get()._field_CppLinked == _11938_cppLinked))) {
						return _12925_v;
					};
				}
				_iter_next_212e7413a:;
				++it;
				goto _iter_begin_212e7413a;
			}
			_iter_end_212e7413a:;
		};
	};
	return nullptr;
}



inline jule::Ptr<_246d8e2a7_TypeAlias> _246d5c264_findTypeAlias(_246d5956e_SymbolTable* _self_, jule::Str _13832_ident, jule::Bool _13844_cppLinked, jule::Bool _13861_reverse) {
	if (_13861_reverse) {
		jule::I64 _14021_i = ((*_self_)._field_TypeAliases.len() - 1LL);;
		for (; (_14021_i >= 0LL); (_14021_i)--) {
			{
				jule::Ptr<_246d8e2a7_TypeAlias> _14225_ta = (*_self_)._field_TypeAliases[_14021_i];;
				if (((_14225_ta.get()._field_Ident == _13832_ident) && (_14225_ta.get()._field_CppLinked == _13844_cppLinked))) {
					return _14225_ta;
				};
			}
		_iter_next_212e77391:;
		}
		_iter_end_212e77391:;;
	} else {
		{
			auto &expr = (*_self_)._field_TypeAliases;
			auto it = expr.begin();
			_iter_begin_212e77649:;
			if (it != expr.end()) {
				jule::Ptr<_246d8e2a7_TypeAlias> _14825_ta = *it;
				{
					if (((_14825_ta.get()._field_Ident == _13832_ident) && (_14825_ta.get()._field_CppLinked == _13844_cppLinked))) {
						return _14825_ta;
					};
				}
				_iter_next_212e77649:;
				++it;
				goto _iter_begin_212e77649;
			}
			_iter_end_212e77649:;
		};
	};
	return nullptr;
}



inline jule::Any _246d5c61b_defByIdent(_246d5956e_SymbolTable* _self_, jule::Str _15929_ident, jule::Bool _15941_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_212e7999d:;
		if (it != expr.end()) {
			jule::Ptr<_246d16372_Var> _16021_v = *it;
			{
				if (((_16021_v.get()._field_Ident == _15929_ident) && (_16021_v.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16021_v);
				};
			}
			_iter_next_212e7999d:;
			++it;
			goto _iter_begin_212e7999d;
		}
		_iter_end_212e7999d:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_212e7abd0:;
		if (it != expr.end()) {
			jule::Ptr<_246d8e2a7_TypeAlias> _16621_ta = *it;
			{
				if (((_16621_ta.get()._field_Ident == _15929_ident) && (_16621_ta.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16621_ta);
				};
			}
			_iter_next_212e7abd0:;
			++it;
			goto _iter_begin_212e7abd0;
		}
		_iter_end_212e7abd0:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_212e7ba49:;
		if (it != expr.end()) {
			jule::Ptr<_246117c3a_Struct> _17221_s = *it;
			{
				if (((_17221_s.get()._field_Ident == _15929_ident) && (_17221_s.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17221_s);
				};
			}
			_iter_next_212e7ba49:;
			++it;
			goto _iter_begin_212e7ba49;
		}
		_iter_end_212e7ba49:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_212e7c94b:;
		if (it != expr.end()) {
			jule::Ptr<_246cab768_Fn> _17821_f = *it;
			{
				if (((_17821_f.get()._field_Ident == _15929_ident) && (_17821_f.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17821_f);
				};
			}
			_iter_next_212e7c94b:;
			++it;
			goto _iter_begin_212e7c94b;
		}
		_iter_end_212e7c94b:;
	};
	if (_15941_cppLinked) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_212e7db06:;
		if (it != expr.end()) {
			jule::Ptr<_246cb3e9b_Trait> _18821_t = *it;
			{
				if ((_18821_t.get()._field_Ident == _15929_ident)) {
					return jule::Any(_18821_t);
				};
			}
			_iter_next_212e7db06:;
			++it;
			goto _iter_begin_212e7db06;
		}
		_iter_end_212e7db06:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_212e7e442:;
		if (it != expr.end()) {
			jule::Ptr<_246cb60e1_Enum> _19421_e = *it;
			{
				if ((_19421_e.get()._field_Ident == _15929_ident)) {
					return jule::Any(_19421_e);
				};
			}
			_iter_next_212e7e442:;
			++it;
			goto _iter_begin_212e7e442;
		}
		_iter_end_212e7e442:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_212e803dd:;
		if (it != expr.end()) {
			jule::Ptr<_246cb76db_TypeEnum> _20021_te = *it;
			{
				if ((_20021_te.get()._field_Ident == _15929_ident)) {
					return jule::Any(_20021_te);
				};
			}
			_iter_next_212e803dd:;
			++it;
			goto _iter_begin_212e803dd;
		}
		_iter_end_212e803dd:;
	};
	return nullptr;
}



inline jule::Bool _246d5ca6c_isDuplicatedIdent(_246d5956e_SymbolTable* _self_, jule::Uintptr _21232_itself, jule::Str _21249_ident, jule::Bool _21261_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_212e8139a:;
		if (it != expr.end()) {
			jule::Ptr<_246d16372_Var> &_21316_v = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21316_v) != _21232_itself) && (_21316_v.get()._field_Ident == _21249_ident)) && (_21316_v.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_212e8139a:;
			++it;
			goto _iter_begin_212e8139a;
		}
		_iter_end_212e8139a:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_212e81ed3:;
		if (it != expr.end()) {
			jule::Ptr<_246d8e2a7_TypeAlias> &_21916_ta = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21916_ta) != _21232_itself) && (_21916_ta.get()._field_Ident == _21249_ident)) && (_21916_ta.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_212e81ed3:;
			++it;
			goto _iter_begin_212e81ed3;
		}
		_iter_end_212e81ed3:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_212e822be:;
		if (it != expr.end()) {
			jule::Ptr<_246117c3a_Struct> &_22516_s = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22516_s) != _21232_itself) && (_22516_s.get()._field_Ident == _21249_ident)) && (_22516_s.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_212e822be:;
			++it;
			goto _iter_begin_212e822be;
		}
		_iter_end_212e822be:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_212e834ac:;
		if (it != expr.end()) {
			jule::Ptr<_246cab768_Fn> &_23116_f = *it;
			{
				if ((((static_cast<jule::Uintptr>(_23116_f) != _21232_itself) && (_23116_f.get()._field_Ident == _21249_ident)) && (_23116_f.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_212e834ac:;
			++it;
			goto _iter_begin_212e834ac;
		}
		_iter_end_212e834ac:;
	};
	if (_21261_cppLinked) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_212e862c3:;
		if (it != expr.end()) {
			jule::Ptr<_246cb3e9b_Trait> &_24116_t = *it;
			{
				if (((static_cast<jule::Uintptr>(_24116_t) != _21232_itself) && (_24116_t.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_212e862c3:;
			++it;
			goto _iter_begin_212e862c3;
		}
		_iter_end_212e862c3:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_212e867bd:;
		if (it != expr.end()) {
			jule::Ptr<_246cb60e1_Enum> &_24716_e = *it;
			{
				if (((static_cast<jule::Uintptr>(_24716_e) != _21232_itself) && (_24716_e.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_212e867bd:;
			++it;
			goto _iter_begin_212e867bd;
		}
		_iter_end_212e867bd:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_212e86dea:;
		if (it != expr.end()) {
			jule::Ptr<_246cb76db_TypeEnum> &_25316_te = *it;
			{
				if (((static_cast<jule::Uintptr>(_25316_te) != _21232_itself) && (_25316_te.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_212e86dea:;
			++it;
			goto _iter_begin_212e86dea;
		}
		_iter_end_212e86dea:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _246d5956e_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _246d5e783_IsNil(_246d5e398_Data* _self_) {
	return _246d90dbe_IsNil((*_self_)._field_Kind.ptr());
}



inline jule::Bool _246d5e9e7_IsVoid(_246d5e398_Data* _self_) {
	return _246d91133_Void((*_self_)._field_Kind.ptr());
}



inline jule::Bool _246d5ec5b_IsConst(_246d5e398_Data* _self_) {
	return ((*_self_)._field_Constant != nullptr);
}



inline jule::Bool _246d60069_GoodOperand(_246d5e398_Data* _self_, jule::Ptr<_246d5e398_Data>& _9831_other) {
	if ((_246d92a5d_TypeEnum(_9831_other.get()._field_Kind.ptr()) != nullptr)) {
		return false;
	};
	return ((((_246d920ac_Prim(_9831_other.get()._field_Kind.ptr()) == nullptr) || (!(_246d97e1a_IsAny(_246d920ac_Prim(_9831_other.get()._field_Kind.ptr()).ptr())))) && (_246d93773_Trait(_9831_other.get()._field_Kind.ptr()) == nullptr)) && (!(_246d90dbe_IsNil((*_self_)._field_Kind.ptr()))));
}







std::ostream &operator<<(std::ostream &_Stream, _246d5e398_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246d60421_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _246d61422_pushErr(_246d60e16_Eval* _self_, jule::Ptr<_24496dc35_Token> _12926_token, jule::Str _12941_fmt, jule::Slice<jule::Any> _12954_args) {
	_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _12926_token,_12941_fmt,jule::Any(_12954_args));
}



inline void _246d61741_pushSugggestion(_246d60e16_Eval* _self_, jule::Str _13434_fmt, jule::Slice<jule::Any> _13447_args) {
	_246ceb5ee_pushSugggestion((*_self_)._field_s.ptr(), _13434_fmt,jule::Any(_13447_args));
}



inline void _246d6191c_allowBuiltin(_246d60e16_Eval* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _246d61ae8_disallowBuiltin(_246d60e16_Eval* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Bool _246d61d5c_isUnsafe(_246d60e16_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _246d620c1_isGlobal(_246d60e16_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_246ce861d_Sema>>()) {
			_case_begin_212ebc040:;
			{
				return true;
			}
		}
		else {
			_case_begin_212ebb3b3:;
			{
				return false;
			}
		}
		_match_end_212ebb89c:;
	};
}



inline jule::Bool _246d6239b_applyNumericPrefix(_246d60e16_Eval* _self_, jule::Ptr<_246d5e398_Data>& _16142_d) {
	if (((((_16142_d == nullptr) || (!(_246d5ec5b_IsConst(_16142_d.ptr())))) || (_246d920ac_Prim(_16142_d.get()._field_Kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;
	};
	jule::Ptr<_246d94972_Prim> _16813_prim = _246d920ac_Prim((*_self_)._field_prefix.ptr());;
	if ((_16813_prim == nullptr)) {
		return false;
	};
	{
		
		if (_246ca3b28_IsFloat(_246d94cd5_Str(_16813_prim.ptr()))) {
			_case_begin_212ebe295:;
			{
				_16142_d.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>((*((*_self_)._field_prefix)));
				_2462617ce_SetF64(_16142_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_2462487e9_AsF64(_16142_d.get()._field_Constant.ptr())));
			}
		}
		else if (_246ca3782_IsSigInt(_246d94cd5_Str(_16813_prim.ptr()))) {
			_case_begin_212ebe30b:;
			{
				if ((!(_246d2ee18_sigAssignable(_246d94cd5_Str(_16813_prim.ptr()),_16142_d)))) {
					return false;
				};
				_16142_d.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>((*((*_self_)._field_prefix)));
				_2462496a7_SetI64(_16142_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_24624782b_AsI64(_16142_d.get()._field_Constant.ptr())));
			}
		}
		else if (_246ca38b4_IsUnsigInt(_246d94cd5_Str(_16813_prim.ptr()))) {
			_case_begin_212ebe372:;
			{
				if ((!(_246d46bcc_unsigAssignable(_246d94cd5_Str(_16813_prim.ptr()),_16142_d)))) {
					return false;
				};
				_16142_d.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>((*((*_self_)._field_prefix)));
				_246257462_SetU64(_16142_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_24623b974_AsU64(_16142_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_212ebe5b4:;
	};
	return true;
}



inline jule::Ptr<_246d5e398_Data> _246d62610_litNil(_246d60e16_Eval* _self_) {
	jule::Ptr<_2461e4872_Const> _19717_constant = static__24623a027_NewNil();;
	return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=nullptr}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_19717_constant), ._field_Constant=_19717_constant});
}



inline jule::Ptr<_246d5e398_Data> _246d6291d_litStr(_246d60e16_Eval* _self_, jule::Ptr<_24612b17c_LitExpr>& _20622_l) {
	jule::Str _20717_s = _20622_l.get()._field_Value.slice(1LL,(_20622_l.get()._field_Value.len() - 1LL));;
	if (_244970088_IsRawStr(_20622_l.get()._field_Value)) {
		_20717_s=_246d46eda_ToRawStr(static_cast<jule::Slice<jule::U8>>(_20717_s));
	} else {
		_20717_s=_246d47293_ToStr(static_cast<jule::Slice<jule::U8>>(_20717_s));
	};
	jule::Ptr<_2461e4872_Const> _21317_constant = static__2462385db_NewStr(_20717_s);;
	return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_21317_constant), ._field_Constant=_21317_constant});
}



inline jule::Ptr<_246d5e398_Data> _246d62c2b_litBool(_246d60e16_Eval* _self_, jule::Ptr<_24612b17c_LitExpr>& _22523_l) {
	jule::Ptr<_2461e4872_Const> _22617_constant = static__246236793_NewBool((_22523_l.get()._field_Value == jule::Str("true", 4)));;
	return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_22617_constant), ._field_Constant=_22617_constant});
}



inline jule::Ptr<_246d5e398_Data> _246d63039_litRune(_246d60e16_Eval* _self_, jule::Ptr<_24612b17c_LitExpr>& _23723_l) {
	;
	;
	jule::Str _24213_lt = _23723_l.get()._field_Value.slice(1LL,(_23723_l.get()._field_Value.len() - 1LL));;
	jule::I32 _24313_r = _246d2e9ea_ToRune(static_cast<jule::Slice<jule::U8>>(_24213_lt));;
	jule::Ptr<_246d5e398_Data> _24417_data = jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Constant=static__246204db0_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24313_r)))});;
	jule::Bool _24813_isAscii = _246d2e8b8_IsAscii(_24313_r);;
	if (_24813_isAscii) {
		_24417_data.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("u8", 2)), 6)});
	} else {
		_24417_data.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("i32", 3)), 6)});
	};
	_24417_data.get()._field_Mutable=true;
	_24417_data.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246caa910_RuneExprModel>(_246caa910_RuneExprModel{._field_Code=_24313_r}));
	_24417_data.get()._field_IsRune=true;
	_24417_data.get()._field_untyped=true;
	return _24417_data;
}



inline jule::Ptr<_246d5e398_Data> _246d63347_litFloat(_246d60e16_Eval* _self_, jule::Ptr<_24612b17c_LitExpr>& _26624_l) {
	;
	jule::F64 _26813_f = ({
		auto except = _246b19670_ParseFloat(_26624_l.get()._field_Value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});;
	jule::Ptr<_2461e4872_Const> _26917_constant = static__2462397c9_NewF64(_26813_f);;
	return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_untyped=true, ._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_26917_constant), ._field_Constant=_26917_constant});
}



inline jule::Ptr<_246d5e398_Data> _246d63655_litInt(_246d60e16_Eval* _self_, jule::Ptr<_24612b17c_LitExpr>& _28126_l) {
	;
	jule::Str _28417_lit = _28126_l.get()._field_Value;;
	jule::I64 _28517_base = 0LL;;
	{
		
		if (_2445b3e96_HasPrefix(_28417_lit,jule::Str("0x", 2))) {
			_case_begin_212ed19a0:;
			{
				(_28417_lit).mut_slice(2LL);;
				_28517_base=16LLU;
			}
		}
		else if (_2445b3e96_HasPrefix(_28417_lit,jule::Str("0b", 2))) {
			_case_begin_212ed1a16:;
			{
				(_28417_lit).mut_slice(2LL);;
				_28517_base=2LLU;
			}
		}
		else if (_2445b3e96_HasPrefix(_28417_lit,jule::Str("0o", 2))) {
			_case_begin_212ed1a7c:;
			{
				(_28417_lit).mut_slice(2LL);;
				_28517_base=8LLU;
			}
		}
		else if (((_28417_lit[0LL] == '0') && (_28417_lit.len() > 1LL))) {
			_case_begin_212ed1670:;
			{
				(_28417_lit).mut_slice(1LL);;
				_28517_base=8LLU;
			}
		}
		else {
			_case_begin_212ed1609:;
			{
				_28517_base=10LLU;
			}
		}
		_match_end_212ed15a4:;
	};
	jule::Ptr<_246d5e398_Data> _30517_d = jule::new_ptr<_246d5e398_Data>();;
	jule::Bool _30717_ok = true;;
	jule::I64 _30813_sig = ({
		auto except = _2469aabb5_ParseInt(_28417_lit,_28517_base,64LL);
		(except.ok()) ? (except.result) : ({
			_30717_ok=false;
			0LL;
		});
	});;
	if (_30717_ok) {
		_30517_d.get()._field_Constant=static__246204db0_NewI64(_30813_sig);
		_30517_d.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _31817_unsig = ({
			auto except = _2469291c7_ParseUint(_28417_lit,_28517_base,64LL);
			(except.ok()) ? (except.result) : ({
				_246d61422_pushErr(&(*_self_), _28126_l.get()._field_Token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_246d61741_pushSugggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});;
		_30517_d.get()._field_Constant=static__24621bde9_NewU64(_31817_unsig);
		_30517_d.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("uint", 4)), 6)});
	};
	_30517_d.get()._field_Model=static_cast<jule::Any>(_30517_d.get()._field_Constant);
	if ((!(_246d6239b_applyNumericPrefix(&(*_self_), _30517_d)))) {
		_246d89bdc_fitBitsize(_30517_d);
	};
	_30517_d.get()._field_Mutable=true;
	_30517_d.get()._field_untyped=true;
	return _30517_d;
}



inline jule::Ptr<_246d5e398_Data> _246d63963_litNum(_246d60e16_Eval* _self_, jule::Ptr<_24612b17c_LitExpr>& _34126_l) {
	{
		
		if (_244970be3_IsFloat(_34126_l.get()._field_Value)) {
			_case_begin_212eda5d0:;
			{
				return _246d63347_litFloat(&(*_self_), _34126_l);
			}
		}
		else {
			_case_begin_212ed9d60:;
			{
				return _246d63655_litInt(&(*_self_), _34126_l);
			}
		}
		_match_end_212ed9c83:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d63c71_evalLit(_246d60e16_Eval* _self_, jule::Ptr<_24612b17c_LitExpr> _35026_lit) {
	{
		
		if (_24612b4ce_IsNil(_35026_lit.ptr())) {
			_case_begin_212edb8ab:;
			{
				return _246d62610_litNil(&(*_self_));
			}
		}
		else if (_24496ece1_IsStr(_35026_lit.get()._field_Value)) {
			_case_begin_212edb229:;
			{
				return _246d6291d_litStr(&(*_self_), _35026_lit);
			}
		}
		else if (_24497094b_IsBool(_35026_lit.get()._field_Value)) {
			_case_begin_212edb290:;
			{
				return _246d62c2b_litBool(&(*_self_), _35026_lit);
			}
		}
		else if (_244970330_IsRune(_35026_lit.get()._field_Value)) {
			_case_begin_212edb317:;
			{
				return _246d63039_litRune(&(*_self_), _35026_lit);
			}
		}
		else if (_244970e8a_IsNum(_35026_lit.get()._field_Value)) {
			_case_begin_212edb38e:;
			{
				return _246d63963_litNum(&(*_self_), _35026_lit);
			}
		}
		else {
			_case_begin_212edabeb:;
			{
				return nullptr;
			}
		}
		_match_end_212edab41:;
	};
}



inline jule::Any _246d6407e_findBuiltins(_246d60e16_Eval* _self_, jule::Str _36731_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_246ce04c2_ImportInfo>>()) {
			_case_begin_212edbbb9:;
			{
				jule::Any _37021_def = _246d899cd_findBuiltinsImport(_36731_ident,(*_self_)._field_lookup.operator jule::Ptr<_246ce04c2_ImportInfo>());;
				if ((_37021_def != nullptr)) {
					return jule::Any(_37021_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ce861d_Sema>>()) {
			_case_begin_212ede13e:;
			{
				jule::Any _37521_def = _246d8a66b_findBuiltinsSema(_36731_ident,(*_self_)._field_lookup.operator jule::Ptr<_246ce861d_Sema>());;
				if ((_37521_def != nullptr)) {
					return jule::Any(_37521_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc8862_scopeChecker>>()) {
			_case_begin_212ede1a5:;
			{
				jule::Any _38021_def = _246d8a66b_findBuiltinsSema(_36731_ident,(*_self_)._field_lookup.operator jule::Ptr<_246cc8862_scopeChecker>().get()._field_s);;
				if ((_38021_def != nullptr)) {
					return jule::Any(_38021_def);
				};
			}
		}
		_match_end_212edbb64:;
	};
	if ((*_self_)._field_disBuiltin) {
		return nullptr;
	};
	return jule::Any(_246dbb081_findBuiltinDef(_36731_ident));
}



inline jule::Any _246d64436_getDef(_246d60e16_Eval* _self_, jule::Str _39125_ident, jule::Bool _39137_cppLinked) {
	jule::Ptr<_246d16372_Var> _39617_v = _246daaacb_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._246da9448_FindVar((*_self_)._field_lookup, _39125_ident,_39137_cppLinked);;
	if ((_39617_v != nullptr)) {
		return jule::Any(_39617_v);
	};
	jule::Ptr<_246d8e2a7_TypeAlias> _40117_ta = _246daaacb_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._246da9800_FindTypeAlias((*_self_)._field_lookup, _39125_ident,_39137_cppLinked);;
	if ((_40117_ta != nullptr)) {
		return jule::Any(_40117_ta);
	};
	if ((!(_39137_cppLinked))) {
		jule::Ptr<_246cb60e1_Enum> _40721_enm = _246daaacb_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._246daa67a_FindEnum((*_self_)._field_lookup, _39125_ident);;
		if ((_40721_enm != nullptr)) {
			return jule::Any(_40721_enm);
		};
		jule::Ptr<_246cb76db_TypeEnum> _41221_tenm = _246daaacb_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._246daa988_FindTypeEnum((*_self_)._field_lookup, _39125_ident);;
		if ((_41221_tenm != nullptr)) {
			return jule::Any(_41221_tenm);
		};
	};
	jule::Ptr<_246cab768_Fn> _41817_f = _246daaacb_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._246daa05e_FindFn((*_self_)._field_lookup, _39125_ident,_39137_cppLinked);;
	if ((_41817_f != nullptr)) {
		return jule::Any(_41817_f);
	};
	jule::Ptr<_246117c3a_Struct> _42317_s = _246daaacb_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._246da9ba7_FindStruct((*_self_)._field_lookup, _39125_ident,_39137_cppLinked);;
	if ((_42317_s != nullptr)) {
		return jule::Any(_42317_s);
	};
	return jule::Any(_246d6407e_findBuiltins(&(*_self_), _39125_ident));
}



inline void _21300640e_pushReference(_246d60e16_Eval* _self_, jule::Ptr<_246cabb42_FnIns>& _43140_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_246cc8862_scopeChecker>>()) {
			_case_begin_21300882e:;
			{
				jule::Ptr<_246cc8862_scopeChecker> _43421_sc = _246ccbbd9_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_246cc8862_scopeChecker>());;
				if ((!(_213008d4b_Exist(_43421_sc.get()._field_owner.get()._field_Refers.ptr(), _43140_ref)))) {
					_246cacb98_Push(_43421_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_43140_ref));
				};
			}
		}
		else {
			_case_begin_2130078c7:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_213008d4b_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _43140_ref))))) {
					_246cacb98_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_43140_ref));
				};
			}
		}
		_match_end_213007872:;
	};
}

inline void _21301c03a_pushReference(_246d60e16_Eval* _self_, jule::Ptr<_246d16372_Var>& _43140_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_246cc8862_scopeChecker>>()) {
			_case_begin_21301e27e:;
			{
				jule::Ptr<_246cc8862_scopeChecker> _43421_sc = _246ccbbd9_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_246cc8862_scopeChecker>());;
				if ((!(_21301e79b_Exist(_43421_sc.get()._field_owner.get()._field_Refers.ptr(), _43140_ref)))) {
					_246cacb98_Push(_43421_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_43140_ref));
				};
			}
		}
		else {
			_case_begin_21301d327:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_21301e79b_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _43140_ref))))) {
					_246cacb98_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_43140_ref));
				};
			}
		}
		_match_end_21301d2c2:;
	};
}

inline void _2130bc1d9_pushReference(_246d60e16_Eval* _self_, jule::Ptr<_246142319_StructIns>& _43140_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_246cc8862_scopeChecker>>()) {
			_case_begin_2130be4e9:;
			{
				jule::Ptr<_246cc8862_scopeChecker> _43421_sc = _246ccbbd9_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_246cc8862_scopeChecker>());;
				if ((!(_2130bea16_Exist(_43421_sc.get()._field_owner.get()._field_Refers.ptr(), _43140_ref)))) {
					_246cacb98_Push(_43421_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_43140_ref));
				};
			}
		}
		else {
			_case_begin_2130bd592:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_2130bea16_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _43140_ref))))) {
					_246cacb98_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_43140_ref));
				};
			}
		}
		_match_end_2130bd53c:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d649b9__evalEnum(_246d60e16_Eval* _self_, jule::Ptr<_246cb60e1_Enum> _44528_enm) {
	return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_44528_enm, 3)}), ._field_Decl=true, });
}



inline jule::Ptr<_246d5e398_Data> _246d69bcd_evalEnum(_246d60e16_Eval* _self_, jule::Ptr<_246cb60e1_Enum> _45431_enm, jule::Ptr<_24496dc35_Token> _45443_errorToken) {
	if ((!(_246ceb9a6_isAccessibleDefine((*_self_)._field_s.ptr(), _45431_enm.get()._field_Public,_45431_enm.get()._field_Token)))) {
		_246d61422_pushErr(&(*_self_), _45443_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_45431_enm.get()._field_Ident)}));
		_246d61741_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _246d649b9__evalEnum(&(*_self_), _45431_enm);
}



inline jule::Ptr<_246d5e398_Data> _246d69edb__evalTypeEnum(_246d60e16_Eval* _self_, jule::Ptr<_246cb76db_TypeEnum> _46332_enm) {
	return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_46332_enm, 4)}), ._field_Decl=true, });
}



inline jule::Ptr<_246d5e398_Data> _246d6a393_evalTypeEnum(_246d60e16_Eval* _self_, jule::Ptr<_246cb76db_TypeEnum> _47235_enm, jule::Ptr<_24496dc35_Token> _47251_errorToken) {
	if ((!(_246ceb9a6_isAccessibleDefine((*_self_)._field_s.ptr(), _47235_enm.get()._field_Public,_47235_enm.get()._field_Token)))) {
		_246d61422_pushErr(&(*_self_), _47251_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_47235_enm.get()._field_Ident)}));
		_246d61741_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _246d69edb__evalTypeEnum(&(*_self_), _47235_enm);
}



inline jule::Ptr<_246d5e398_Data> _246d6a6a1__evalStruct(_246d60e16_Eval* _self_, jule::Ptr<_246142319_StructIns> _48130_s) {
	return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_48130_s, 0)}), ._field_Model=static_cast<jule::Any>(_48130_s), ._field_Decl=true, });
}



inline jule::Ptr<_246d5e398_Data> _246d6aa58_evalStruct(_246d60e16_Eval* _self_, jule::Ptr<_246142319_StructIns> _49133_s, jule::Ptr<_24496dc35_Token> _49148_errorToken) {
	if ((!(_246ceb9a6_isAccessibleDefine((*_self_)._field_s.ptr(), _49133_s.get()._field_Decl.get()._field_Public,_49133_s.get()._field_Decl.get()._field_Token)))) {
		_246d61422_pushErr(&(*_self_), _49148_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_49133_s.get()._field_Decl.get()._field_Ident)}));
		_246d61741_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_246d6b185_checkDeprecated(&(*_self_), _49133_s.get()._field_Decl.get()._field_Directives,_49148_errorToken);
	return _246d6a6a1__evalStruct(&(*_self_), _49133_s);
}



inline jule::Ptr<_246d5e398_Data> _246d6ad66_evalFnIns(_246d60e16_Eval* _self_, jule::Ptr<_246cabb42_FnIns> _50128_f) {
	return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_50128_f, 1)}), ._field_Model=static_cast<jule::Any>(_50128_f), });
}



inline void _246d6b185_checkDeprecated(_246d60e16_Eval* _self_, jule::Slice<jule::Ptr<_2460dc858_Directive>>& _51039_directives, jule::Ptr<_24496dc35_Token> _51070_tok) {
	if (_246d61d5c_isUnsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_2460dc858_Directive> _51513_d = _246d89648_findDirective(_51039_directives,jule::Str("deprecated", 10));;
	if ((_51513_d != nullptr)) {
		if ((_51513_d.get()._field_Args.len() == 0LL)) {
			_246d61422_pushErr(&(*_self_), _51070_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_246d61422_pushErr(&(*_self_), _51070_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(_51513_d.get()._field_Args[0LL].get()._field_Kind)}));
		};
		_246d61741_pushSugggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_246d5e398_Data> _246d6b53c_evalFn(_246d60e16_Eval* _self_, jule::Ptr<_246cab768_Fn> _52629_f, jule::Ptr<_24496dc35_Token> _52637_errorToken) {
	if ((!(_246ceb9a6_isAccessibleDefine((*_self_)._field_s.ptr(), _52629_f.get()._field_Public,_52629_f.get()._field_Token)))) {
		_246d61422_pushErr(&(*_self_), _52637_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52629_f.get()._field_Ident)}));
		_246d61741_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_246d6b185_checkDeprecated(&(*_self_), _52629_f.get()._field_Directives,_52637_errorToken);
	jule::Ptr<_246cabb42_FnIns> _53517_ins = _24618225a_instance(_52629_f);;
	_21300640e_pushReference(&(*_self_), _53517_ins);
	return _246d6ad66_evalFnIns(&(*_self_), _53517_ins);
}



inline void _246d6b905_pushIllegalCycleError(_246d60e16_Eval* _self_, jule::Ptr<_246d16372_Var>& _54041_v1, jule::Ptr<_246d16372_Var>& _54052_v2, jule::Str& _54067_message) {
	;
	jule::Str _54213_refers_to = _2446412a9_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_54041_v1.get()._field_Ident),jule::Any(_54052_v2.get()._field_Ident)}));;
	(_54067_message).buffer.insert(0, (((_24459aab5_Repeat(jule::Str(" ", 1),4LL) + _54213_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _246d6bcac_checkCrossCycle(_246d60e16_Eval* _self_, jule::Ptr<_246d16372_Var>& _54635_v, jule::Str& _54649_message) {
	{
		auto &expr = _54635_v.get()._field_Depends;
		auto it = expr.begin();
		_iter_begin_21300e48e:;
		if (it != expr.end()) {
			jule::Ptr<_246d16372_Var> &_54716_d = *it;
			{
				if ((_54716_d == (*_self_)._field_owner)) {
					_246d6b905_pushIllegalCycleError(&(*_self_), _54635_v,_54716_d,_54649_message);
					return false;
				};
				if ((!(_246d6bcac_checkCrossCycle(&(*_self_), _54716_d,_54649_message)))) {
					_246d6b905_pushIllegalCycleError(&(*_self_), _54635_v,_54716_d,_54649_message);
					return false;
				};
			}
			_iter_next_21300e48e:;
			++it;
			goto _iter_begin_21300e48e;
		}
		_iter_end_21300e48e:;
	};
	return true;
}



inline jule::Bool _246d6c164_checkIllegalCycles(_246d60e16_Eval* _self_, jule::Ptr<_246d16372_Var>& _56542_v, jule::Ptr<_24496dc35_Token> _56551_decl_token) {
	jule::Bool _56573_ok = false;
	if (((*_self_)._field_owner == nullptr)) {
		_56573_ok = true;
		return _56573_ok;
	};
	if (((*_self_)._field_owner == _56542_v)) {
		_246d61422_pushErr(&(*_self_), (*_self_)._field_owner.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_owner.get()._field_Ident)}));
		_56573_ok = false;
		return _56573_ok;
	};
	jule::Str _57717_message = jule::Str();;
	if ((!(_246d6bcac_checkCrossCycle(&(*_self_), _56542_v,_57717_message)))) {
		jule::Str _58021_errMsg = _57717_message;;
		_57717_message=jule::Str();
		_246d6b905_pushIllegalCycleError(&(*_self_), (*_self_)._field_owner,_56542_v,_57717_message);
		_58021_errMsg+=_57717_message;
		_246d61422_pushErr(&(*_self_), _56551_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_58021_errMsg)}));
		_56573_ok = false;
		return _56573_ok;
	};
	(*_self_)._field_owner.get()._field_Depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_Depends,1);(*_self_)._field_owner.get()._field_Depends.__push(_56542_v);;
	_56573_ok = true;
	return _56573_ok;
}



inline jule::Ptr<_246d5e398_Data> _246d6c51b_evalVar(_246d60e16_Eval* _self_, jule::Ptr<_246d16372_Var> _59230_v, jule::Ptr<_24496dc35_Token> _59239_errorToken) {
	if ((!(_246ceb9a6_isAccessibleDefine((*_self_)._field_s.ptr(), _59230_v.get()._field_Public,_59230_v.get()._field_Token)))) {
		_246d61422_pushErr(&(*_self_), _59239_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_59230_v.get()._field_Ident)}));
		_246d61741_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_246d6b185_checkDeprecated(&(*_self_), _59230_v.get()._field_Directives,_59239_errorToken);
	_59230_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_246ce861d_Sema>>()) {
			_case_begin_2130178b5:;
			{
				jule::Bool _60617_ok = _246d6c164_checkIllegalCycles(&(*_self_), _59230_v,_59239_errorToken);;
				if ((!(_60617_ok))) {
					return nullptr;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc8862_scopeChecker>>()) {
			_case_begin_21301795e:;
			{
				if (((!(_59230_v.get()._field_Reference)) || _246d61d5c_isUnsafe(&(*_self_)))) {
					goto _match_end_213017860;
				};
				jule::Ptr<_246cc8862_scopeChecker> _61421_s = (*_self_)._field_lookup.operator jule::Ptr<_246cc8862_scopeChecker>();;
				while (((_61421_s.get()._field_owner == nullptr) && (_61421_s.get()._field_parent != nullptr))) {
					{
						_61421_s=_61421_s.get()._field_parent;
					}
				_iter_next_213019b09:;
				}
				_iter_end_213019b09:;;
				if ((((_61421_s.get()._field_owner != nullptr) && _61421_s.get()._field_owner.get()._field_Anon) && (_59230_v.get()._field_Scope != _61421_s.get()._field_owner.get()._field_Scope))) {
					_246d61422_pushErr(&(*_self_), _59239_errorToken,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>::make({jule::Any(_59230_v.get()._field_Ident)}));
				};
			}
		}
		_match_end_213017860:;
	};
	if ((_59230_v.get()._field_Scope == nullptr)) {
		_21301c03a_pushReference(&(*_self_), _59230_v);
	};
	if (((!(_59230_v.get()._field_CppLinked)) && ((_59230_v.get()._field_Value == nullptr) || (_59230_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_59230_v.get()._field_Constant) {
			_246d0ddd6_checkTypeVar((*_self_)._field_s, _59230_v,jule::Trait<_246daaacb_Lookup>((*_self_)._field_s, 3));
			if ((_59230_v.get()._field_Value.get()._field_Data == nullptr)) {
				return nullptr;
			};
		};
	};
	if (((_59230_v.get()._field_Kind == nullptr) || (_59230_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_59230_v.get()._field_Scope != nullptr)) {
			return nullptr;
		};
		_246d0ddd6_checkTypeVar((*_self_)._field_s, _59230_v,(*_self_)._field_lookup);
		if (((_59230_v.get()._field_Kind == nullptr) || (_59230_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;
		};
	};
	jule::Ptr<_246d5e398_Data> _65717_d = jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=_59230_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_59230_v.get()._field_Mutable, ._field_Reference=_59230_v.get()._field_Reference, ._field_Lvalue=(!(_59230_v.get()._field_Constant)), ._field_Model=static_cast<jule::Any>(_59230_v), });;
	if ((((!(_59230_v.get()._field_CppLinked)) && _246d1673a_IsInitialized(_59230_v.ptr())) && (_59230_v.get()._field_Value.get()._field_Data != nullptr))) {
		_65717_d.get()._field_IsRune=_59230_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_59230_v.get()._field_Constant && (_59230_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_65717_d.get()._field_Constant=jule::new_ptr<_2461e4872_Const>((*(_59230_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_65717_d.get()._field_Model=static_cast<jule::Any>(_65717_d.get()._field_Constant);
		if (_246d16c13_untypedConstant(_59230_v.ptr())) {
			_246d6239b_applyNumericPrefix(&(*_self_), _65717_d);
			_65717_d.get()._field_untyped=true;
		};
	};
	return _65717_d;
}



inline jule::Ptr<_246d5e398_Data> _246d6c8c3_evalTypeAlias(_246d60e16_Eval* _self_, jule::Ptr<_246d8e2a7_TypeAlias> _68136_ta, jule::Ptr<_24496dc35_Token> _68152_errorToken) {
	if ((!(_246ceb9a6_isAccessibleDefine((*_self_)._field_s.ptr(), _68136_ta.get()._field_Public,_68136_ta.get()._field_Token)))) {
		_246d61422_pushErr(&(*_self_), _68152_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_68136_ta.get()._field_Ident)}));
		_246d61741_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_68136_ta.get()._field_Used=true;
	jule::Trait<_246d8ea6b_Kind> _69017_kind = _68136_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_246d5e398_Data> _69117_d = nullptr;;
	{
		auto &_match_expr{ _69017_kind };
		
		if (_match_expr.type_is<jule::Ptr<_246142319_StructIns>>()) {
			_case_begin_2130340b8:;
			{
				_69117_d=_246d6a6a1__evalStruct(&(*_self_), _69017_kind.operator jule::Ptr<_246142319_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cb60e1_Enum>>()) {
			_case_begin_213034ad0:;
			{
				_69117_d=_246d649b9__evalEnum(&(*_self_), _69017_kind.operator jule::Ptr<_246cb60e1_Enum>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cb76db_TypeEnum>>()) {
			_case_begin_21302d469:;
			{
				_69117_d=_246d69edb__evalTypeEnum(&(*_self_), _69017_kind.operator jule::Ptr<_246cb76db_TypeEnum>());
			}
		}
		else {
			_case_begin_21302d348:;
			{
				_69117_d=jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=_68136_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_68136_ta.get()._field_CppLinked) {
					_69117_d.get()._field_Kind.get()._field_CppIdent=_68136_ta.get()._field_Ident;
				} else {
					_69117_d.get()._field_Kind.get()._field_CppIdent=_68136_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
				};
				_69117_d.get()._field_Model=static_cast<jule::Any>(_69117_d.get()._field_Kind);
			}
		}
		_match_end_21302d2e3:;
	};
	_69117_d.get()._field_Kind.get()._field_Generic=_68136_ta.get()._field_Generic;
	return _69117_d;
}



inline jule::Ptr<_246d5e398_Data> _246d6cc7a_evalDef(_246d60e16_Eval* _self_, jule::Any _71730_def, jule::Ptr<_24496dc35_Token> _71740_ident) {
	{
		auto &_match_expr{ _71730_def };
		
		if (_match_expr.type_is<jule::Ptr<_246d16372_Var>>()) {
			_case_begin_213037495:;
			{
				return _246d6c51b_evalVar(&(*_self_), _71730_def.operator jule::Ptr<_246d16372_Var>(),_71740_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cb60e1_Enum>>()) {
			_case_begin_21303750b:;
			{
				return _246d69bcd_evalEnum(&(*_self_), _71730_def.operator jule::Ptr<_246cb60e1_Enum>(),_71740_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cb76db_TypeEnum>>()) {
			_case_begin_213037572:;
			{
				return _246d6a393_evalTypeEnum(&(*_self_), _71730_def.operator jule::Ptr<_246cb76db_TypeEnum>(),_71740_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246117c3a_Struct>>()) {
			_case_begin_2130375d8:;
			{
				return _246d6aa58_evalStruct(&(*_self_), _2460e2a4a_instance(_71730_def.operator jule::Ptr<_246117c3a_Struct>()),_71740_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cab768_Fn>>()) {
			_case_begin_213037660:;
			{
				jule::Ptr<_246cab768_Fn> _72821_f = _71730_def.operator jule::Ptr<_246cab768_Fn>();;
				if ((_72821_f.get()._field_Ident != jule::Str("init", 4))) {
					return _246d6b53c_evalFn(&(*_self_), _72821_f,_71740_ident);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cabb42_FnIns>>()) {
			_case_begin_2130376d7:;
			{
				return _246d6ad66_evalFnIns(&(*_self_), _71730_def.operator jule::Ptr<_246cabb42_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246d8e2a7_TypeAlias>>()) {
			_case_begin_21303775e:;
			{
				return _246d6c8c3_evalTypeAlias(&(*_self_), _71730_def.operator jule::Ptr<_246d8e2a7_TypeAlias>(),_71740_ident);
			}
		}
		_match_end_213037396:;
	};
	_246d61422_pushErr(&(*_self_), _71740_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_71740_ident.get()._field_Kind)}));
	return nullptr;
}



inline jule::Ptr<_246d5e398_Data> _246d6d088_evalIdent(_246d60e16_Eval* _self_, jule::Ptr<_24612bd09_IdentExpr> _74128_ident) {
	jule::Any _74217_def = _246d64436_getDef(&(*_self_), _74128_ident.get()._field_Ident,_74128_ident.get()._field_CppLinked);;
	return _246d6cc7a_evalDef(&(*_self_), jule::Any(_74217_def),_74128_ident.get()._field_Token);
}



inline jule::Ptr<_246d5e398_Data> _246d6d396_evalUnary(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_24612c513_UnaryExpr> _74633_u) {
	_246d81b18_unaryEval _74717_unary = static__246d820be_new(_self_);;
	return _246d83367_eval(&_74717_unary, _74633_u);
}



inline jule::Ptr<_246d5e398_Data> _246d6d6a4_evalVariadic(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_24612c8ba_VariadicExpr> _75136_v) {
	if ((_75136_v.get()._field_Expr == nullptr)) {
		_246d61422_pushErr(_self_.ptr(), _75136_v.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_246d8ee9a_TypeKind> _75717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_75717_prefix;
	});;
	jule::Ptr<_246d5e398_Data> _76117_d = _246d81079_evalExprKind(_self_, _75136_v.get()._field_Expr.get()._field_Kind);;
	if ((_76117_d == nullptr)) {
		return nullptr;
	};
	if ((!(_246d91d48_Variadicable(_76117_d.get()._field_Kind.ptr())))) {
		_246d61422_pushErr(_self_.ptr(), _75136_v.get()._field_Token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_76117_d.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	jule::Ptr<_246d98b63_Slc> _77113_slc = _246d93036_Slc(_76117_d.get()._field_Kind.ptr());;
	_76117_d.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_CppIdent=_77113_slc.get()._field_Elem.get()._field_CppIdent, ._field_Generic=_77113_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_77113_slc.get()._field_Elem.get()._field_Kind});
	return _76117_d;
}



inline jule::Ptr<_246d5e398_Data> _246d6d9b2_evalUnsafe(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_24612b886_UnsafeExpr> _78134_u) {
	jule::Bool _78213_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_246d5e398_Data> _78417_d = _246d81079_evalExprKind(_self_, _78134_u.get()._field_Expr.get()._field_Kind);;
	_self_.get()._field_unsafety=_78213_unsafety;
	return _78417_d;
}



inline jule::Ptr<_246d5e398_Data> _246d6dcc0_evalArr(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_246131737_SliceExpr> _78931_s) {
	jule::Ptr<_246d9ad0d_Arr> _79117_pt = _246d92cc2_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_246d9ad0d_Arr> _79317_arr = jule::new_ptr<_246d9ad0d_Arr>(_246d9ad0d_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_79117_pt.get()._field_Elem});;
	jule::Bool _79917_filled = false;;
	if ((_78931_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _78931_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type_is<jule::Ptr<_24612c8ba_VariadicExpr>>()) {
				_case_begin_213047a7c:;
				{
					if ((_78931_s.get()._field_Exprs[1LL].get()._field_Kind.operator jule::Ptr<_24612c8ba_VariadicExpr>().get()._field_Expr != nullptr)) {
						goto _match_end_2130479d3;
					};
					if (_79117_pt.get()._field_Auto) {
						_246d61422_pushErr(_self_.ptr(), _78931_s.get()._field_Token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					};
					_79917_filled=true;
					_78931_s.get()._field_Exprs=_78931_s.get()._field_Exprs.slice(0LL,1LL);
				}
			}
			_match_end_2130479d3:;
		};
	};
	_79317_arr.get()._field_N=static_cast<jule::I64>(_78931_s.get()._field_Exprs.len());
	if ((!(_79117_pt.get()._field_Auto))) {
		if ((_79317_arr.get()._field_N > _79117_pt.get()._field_N)) {
			_246d61422_pushErr(_self_.ptr(), _78931_s.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_79317_arr.get()._field_N < _79117_pt.get()._field_N)) {
			_79317_arr.get()._field_N=_79117_pt.get()._field_N;
		};
	};
	jule::Ptr<_246ca8006_ArrayExprModel> _82817_model = jule::new_ptr<_246ca8006_ArrayExprModel>(_246ca8006_ArrayExprModel{._field_Kind=_79317_arr, });;
	if (_79917_filled) {
		_82817_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		_82817_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _78931_s.get()._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_246d8ee9a_TypeKind> _83717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_79317_arr.get()._field_Elem;
	{
		auto &expr = _78931_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_21304cc91:;
		if (it != expr.end()) {
			jule::Ptr<_24612a148_Expr> _83921_elem = *it;
			{
				jule::Ptr<_246d5e398_Data> _84021_d = _246d81079_evalExprKind(_self_, _83921_elem.get()._field_Kind);;
				if ((_84021_d == nullptr)) {
					goto _iter_next_21304cc91;
				};
				_246d031b6_checkAssignType(_self_.get()._field_s, false,_79317_arr.get()._field_Elem,_84021_d,_78931_s.get()._field_Token);
				_82817_model.get()._field_Elems = jule::alloc_for_append(_82817_model.get()._field_Elems,1);_82817_model.get()._field_Elems.__push(_84021_d.get()._field_Model);;
			}
			_iter_next_21304cc91:;
			++it;
			goto _iter_begin_21304cc91;
		}
		_iter_end_21304cc91:;
	};
	_self_.get()._field_prefix=_83717_prefix;
	if (_79917_filled) {
		_82817_model.get()._field_Elems = jule::alloc_for_append(_82817_model.get()._field_Elems,1);_82817_model.get()._field_Elems.__push(nullptr);;
	};
	return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_79317_arr, 11)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_82817_model), });
}



inline jule::Ptr<_246d5e398_Data> _246d6e221_evalExpSlc(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_246131737_SliceExpr> _86434_s, jule::Ptr<_246d8ee9a_TypeKind> _86453_t, jule::Any _86471_first) {
	jule::Ptr<_246d98b63_Slc> _86517_slc = jule::new_ptr<_246d98b63_Slc>(_246d98b63_Slc{._field_Elem=_86453_t});;
	jule::Ptr<_246ca6a82_SliceExprModel> _86917_model = jule::new_ptr<_246ca6a82_SliceExprModel>(_246ca6a82_SliceExprModel{._field_ElemKind=_86453_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _86434_s.get()._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_86471_first != nullptr)) {
		_86917_model.get()._field_Elems = jule::alloc_for_append(_86917_model.get()._field_Elems,1);_86917_model.get()._field_Elems.__push(_86471_first);;
		_86434_s.get()._field_Exprs=_86434_s.get()._field_Exprs.slice(1LL);
	};
	jule::Ptr<_246d8ee9a_TypeKind> _87817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_86517_slc.get()._field_Elem;
	{
		auto &expr = _86434_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_21305401c:;
		if (it != expr.end()) {
			jule::Ptr<_24612a148_Expr> _88021_elem = *it;
			{
				jule::Ptr<_246d5e398_Data> _88121_d = _246d81079_evalExprKind(_self_, _88021_elem.get()._field_Kind);;
				if ((_88121_d == nullptr)) {
					goto _iter_next_21305401c;
				};
				_246d031b6_checkAssignType(_self_.get()._field_s, false,_86517_slc.get()._field_Elem,_88121_d,_86434_s.get()._field_Token);
				_86917_model.get()._field_Elems = jule::alloc_for_append(_86917_model.get()._field_Elems,1);_86917_model.get()._field_Elems.__push(_88121_d.get()._field_Model);;
			}
			_iter_next_21305401c:;
			++it;
			goto _iter_begin_21305401c;
		}
		_iter_end_21305401c:;
	};
	_self_.get()._field_prefix=_87817_prefix;
	return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_86517_slc, 8)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_86917_model), });
}



inline jule::Ptr<_246d5e398_Data> _246d6e52e_evalSliceExpr(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_246131737_SliceExpr> _89937_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_246d92cc2_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_21305700e:;
				{
					return _246d6dcc0_evalArr(_self_, _89937_s);
				}
			}
			else if ((_246d93036_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_213057086:;
				{
					jule::Ptr<_246d98b63_Slc> _90525_pt = _246d93036_Slc(_self_.get()._field_prefix.ptr());;
					return _246d6e221_evalExpSlc(_self_, _89937_s,_90525_pt.get()._field_Elem,nullptr);
				}
			}
			_match_end_213056ddd:;
		};
	};
	jule::Ptr<_246d8ee9a_TypeKind> _91017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_89937_s.get()._field_Exprs.len() == 0LL)) {
		_246d61422_pushErr(_self_.ptr(), _89937_s.get()._field_Token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_246d5e398_Data> _91817_first_elem = _246d81079_evalExprKind(_self_, _89937_s.get()._field_Exprs[0LL].get()._field_Kind);;
	if ((_91817_first_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_246d5e398_Data> _92317_d = _246d6e221_evalExpSlc(_self_, _89937_s,_91817_first_elem.get()._field_Kind,_91817_first_elem.get()._field_Model);;
	_self_.get()._field_prefix=_91017_prefix;
	return _92317_d;
}



inline void _246d6e870_checkIntegerIndexingByData(_246d60e16_Eval* _self_, jule::Ptr<_246d5e398_Data>& _92950_d, jule::Ptr<_24496dc35_Token> _92960_token) {
	jule::Str _93013_err_key = _246d8bae0_checkDataForIntegerIndexing(_92950_d);;
	{
		auto &_match_expr{ _93013_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_21305d1ad:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_21305d5ba:;
			{
				_246d61422_pushErr(&(*_self_), _92960_token,_93013_err_key,jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_92950_d.get()._field_Kind.ptr()))}));
			}
		}
		else {
			_case_begin_21305cc7e:;
			{
				_246d61422_pushErr(&(*_self_), _92960_token,_93013_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_21305cb91:;
	};
}



inline void _246d6ec49_indexingPtr(_246d60e16_Eval* _self_, jule::Ptr<_246d5e398_Data>& _94135_d, jule::Ptr<_246d5e398_Data>& _94150_index, jule::Ptr<_2461320a6_IndexingExpr>& _94165_i) {
	_246d6e870_checkIntegerIndexingByData(&(*_self_), _94150_index,_94165_i.get()._field_Token);
	jule::Ptr<_246d9b76a_Ptr> _94417_ptr = _246d92585_Ptr(_94135_d.get()._field_Kind.ptr());;
	{
		
		if (_246d9c23d_IsUnsafe(_94417_ptr.ptr())) {
			_case_begin_213060941:;
			{
				_246d61422_pushErr(&(*_self_), _94165_i.get()._field_Token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_246d61d5c_isUnsafe(&(*_self_))))) {
			_case_begin_2130609a7:;
			{
				_246d61422_pushErr(&(*_self_), _94165_i.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_2130607dc:;
	};
	_94135_d.get()._field_Kind=_94417_ptr.get()._field_Elem;
}



inline void _246d70112_indexingArr(_246d60e16_Eval* _self_, jule::Ptr<_246d5e398_Data>& _95635_d, jule::Ptr<_246d5e398_Data>& _95650_index, jule::Ptr<_2461320a6_IndexingExpr>& _95665_i) {
	jule::Ptr<_246d9ad0d_Arr> _95717_arr = _246d92cc2_Arr(_95635_d.get()._field_Kind.ptr());;
	_95635_d.get()._field_Kind=_95717_arr.get()._field_Elem;
	_246d6e870_checkIntegerIndexingByData(&(*_self_), _95650_index,_95665_i.get()._field_Token);
	if ((_246d5ec5b_IsConst(_95650_index.ptr()) && (_2462487e9_AsF64(_95650_index.get()._field_Constant.ptr()) >= static_cast<jule::F64>(_95717_arr.get()._field_N)))) {
		_246d61422_pushErr(&(*_self_), _95665_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _246d704ca_indexingSlc(_246d60e16_Eval* _self_, jule::Ptr<_246d5e398_Data>& _96535_d, jule::Ptr<_246d5e398_Data>& _96550_index, jule::Ptr<_2461320a6_IndexingExpr>& _96565_i) {
	jule::Ptr<_246d98b63_Slc> _96617_slc = _246d93036_Slc(_96535_d.get()._field_Kind.ptr());;
	_96535_d.get()._field_Kind=_96617_slc.get()._field_Elem;
	_246d6e870_checkIntegerIndexingByData(&(*_self_), _96550_index,_96565_i.get()._field_Token);
	if ((!(_246d5ec5b_IsConst(_96550_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _96535_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_246ca6a82_SliceExprModel>>()) {
			_case_begin_21306698b:;
			{
				jule::Ptr<_246ca6a82_SliceExprModel> _97621_m = _96535_d.get()._field_Model.operator jule::Ptr<_246ca6a82_SliceExprModel>();;
				jule::F64 _97717_indx = _2462487e9_AsF64(_96550_index.get()._field_Constant.ptr());;
				if ((_97717_indx >= static_cast<jule::F64>(_97621_m.get()._field_Elems.len()))) {
					_246d61422_pushErr(&(*_self_), _96565_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_96535_d.get()._field_Model=_97621_m.get()._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_97717_indx))];
					_96535_d.get()._field_Decl=true;
				};
			}
		}
		_match_end_213066936:;
	};
}



inline void _246d70893_indexingMap(_246d60e16_Eval* _self_, jule::Ptr<_246d5e398_Data>& _98735_d, jule::Ptr<_246d5e398_Data>& _98750_index, jule::Ptr<_2461320a6_IndexingExpr>& _98769_i) {
	if ((_98750_index == nullptr)) {
		return;;
	};
	jule::Ptr<_246d9a219_Map> _99117_m = _246d939d7_Map(_98735_d.get()._field_Kind.ptr());;
	_246d49b69_assignTypeChecker _99217_atc = _246d49b69_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_99117_m.get()._field_Key, ._field_d=_98750_index, ._field_errorToken=_98769_i.get()._field_Token};;
	_246d4ace1_check(&_99217_atc);
	_98735_d.get()._field_Kind=_99117_m.get()._field_Val;
}



inline void _246d70c5b_indexingStr(_246d60e16_Eval* _self_, jule::Ptr<_246d5e398_Data>& _100235_d, jule::Ptr<_246d5e398_Data>& _100250_index, jule::Ptr<_2461320a6_IndexingExpr>& _100265_i) {
	;
	_100235_d.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("u8", 2)), 6)});
	if ((_100250_index == nullptr)) {
		return;;
	};
	_246d6e870_checkIntegerIndexingByData(&(*_self_), _100250_index,_100265_i.get()._field_Token);
	if ((!(_246d5ec5b_IsConst(_100250_index.ptr())))) {
		_100235_d.get()._field_Constant=nullptr;
		return;;
	};
	if (_246d5ec5b_IsConst(_100235_d.ptr())) {
		jule::Ptr<_24496dc35_Token> _101817_errorToken = _100265_i.get()._field_Token;;
		jule::I64 _101917_j = _24624782b_AsI64(_100250_index.get()._field_Constant.ptr());;
		jule::Str _102017_s = _246245de0_ReadStr(_100235_d.get()._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_101917_j) >= _102017_s.len())) {
			_246d61422_pushErr(&(*_self_), _101817_errorToken,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_246257462_SetU64(_100235_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_102017_s[_101917_j])));
		};
	};
}



inline void _246d71124_toIndexing(_246d60e16_Eval* _self_, jule::Ptr<_246d5e398_Data>& _102934_d, jule::Ptr<_246d5e398_Data>& _102949_index, jule::Ptr<_2461320a6_IndexingExpr>& _102968_i) {
	{
		
		if ((_246d92585_Ptr(_102934_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2130721d3:;
			{
				_246d6ec49_indexingPtr(&(*_self_), _102934_d,_102949_index,_102968_i);
				return;;
			}
		}
		else if ((_246d92cc2_Arr(_102934_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_21307225a:;
			{
				_246d70112_indexingArr(&(*_self_), _102934_d,_102949_index,_102968_i);
				return;;
			}
		}
		else if ((_246d93036_Slc(_102934_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2130722d2:;
			{
				_246d704ca_indexingSlc(&(*_self_), _102934_d,_102949_index,_102968_i);
				return;;
			}
		}
		else if ((_246d939d7_Map(_102934_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_213072359:;
			{
				_246d70893_indexingMap(&(*_self_), _102934_d,_102949_index,_102968_i);
				return;;
			}
		}
		else if ((_246d920ac_Prim(_102934_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2130723d1:;
			{
				jule::Ptr<_246d94972_Prim> _104417_prim = _246d920ac_Prim(_102934_d.get()._field_Kind.ptr());;
				{
					
					if (_246d97ba6_IsStr(_104417_prim.ptr())) {
						_case_begin_21307689c:;
						{
							_246d70c5b_indexingStr(&(*_self_), _102934_d,_102949_index,_102968_i);
							return;;
						}
					}
					_match_end_213076803:;
				};
			}
		}
		_match_end_21307207e:;
	};
	_246d61422_pushErr(&(*_self_), _102968_i.get()._field_Token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_102934_d.get()._field_Kind.ptr()))}));
}



inline jule::Bool _246d71597_pushGenericsFromExprSubIdent(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_24612d59c_SubIdentExpr>& _105453_sexpr, jule::Slice<jule::Ptr<_246125b27_TypeDecl>>& _105514_generics, jule::Ptr<_24612a148_Expr>& _105542_expr) {
	jule::Ptr<_24612683c_SubIdentTypeDecl> _105617_t = jule::new_ptr<_24612683c_SubIdentTypeDecl>();;
	if ((!(_246d8c8b0_pushSubIdentFromExpr(static_cast<jule::Any>(_105453_sexpr),_105617_t)))) {
		_246d61422_pushErr(_self_.ptr(), _105542_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	_105514_generics = jule::alloc_for_append(_105514_generics,1);_105514_generics.__push(jule::new_ptr<_246125b27_TypeDecl>(_246125b27_TypeDecl{._field_Kind=static_cast<jule::Any>(_105617_t)}));;
	return true;
}



inline jule::Bool _246d71960_pushGenericsFromData(jule::Ptr<_246d60e16_Eval> _self_, jule::Slice<jule::Ptr<_246125b27_TypeDecl>>& _106545_generics, jule::Ptr<_24612a148_Expr>& _106573_expr) {
	{
		auto &_match_expr{ _106573_expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_24612c513_UnaryExpr>>()) {
			_case_begin_21307ad68:;
			{
				jule::Ptr<_246d5e398_Data> _107021_d = _246d6d396_evalUnary(_self_, _106573_expr.get()._field_Kind.operator jule::Ptr<_24612c513_UnaryExpr>());;
				if ((!(_107021_d.get()._field_Decl))) {
					_246d61422_pushErr(_self_.ptr(), _106573_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				};
				_106545_generics = jule::alloc_for_append(_106545_generics,1);_106545_generics.__push(jule::new_ptr<_246125b27_TypeDecl>(_246125b27_TypeDecl{._field_Token=_106573_expr.get()._field_Token, ._field_Kind=(*(((jule::Any*)((&(_107021_d.get()._field_Kind.get()._field_Kind))))))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246125b27_TypeDecl>>()) {
			_case_begin_21307a0dc:;
			{
				_106545_generics = jule::alloc_for_append(_106545_generics,1);_106545_generics.__push(_106573_expr.get()._field_Kind.operator jule::Ptr<_246125b27_TypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24612d59c_SubIdentExpr>>()) {
			_case_begin_21307a153:;
			{
				jule::Ptr<_24612d59c_SubIdentExpr> _108221_sexpr = _106573_expr.get()._field_Kind.operator jule::Ptr<_24612d59c_SubIdentExpr>();;
				return _246d71597_pushGenericsFromExprSubIdent(_self_, _108221_sexpr,_106545_generics,_106573_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24612bd09_IdentExpr>>()) {
			_case_begin_21307a1b9:;
			{
				jule::Ptr<_24612bd09_IdentExpr> _108521_ident = _106573_expr.get()._field_Kind.operator jule::Ptr<_24612bd09_IdentExpr>();;
				_106545_generics = jule::alloc_for_append(_106545_generics,1);_106545_generics.__push(jule::new_ptr<_246125b27_TypeDecl>(_246125b27_TypeDecl{._field_Kind=static_cast<jule::Any>(jule::new_ptr<_2461261dd_IdentTypeDecl>(_2461261dd_IdentTypeDecl{._field_Token=_108521_ident.get()._field_Token, ._field_Ident=_108521_ident.get()._field_Ident, ._field_CppLinked=_108521_ident.get()._field_CppLinked, }))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24612acc5_TupleExpr>>()) {
			_case_begin_21307a230:;
			{
				{
					auto &expr = _106573_expr.get()._field_Kind.operator jule::Ptr<_24612acc5_TupleExpr>().get()._field_Expr;
					auto it = expr.begin();
					_iter_begin_213080202:;
					if (it != expr.end()) {
						jule::Ptr<_24612a148_Expr> _109425_texpr = *it;
						{
							if ((!(_246d71960_pushGenericsFromData(_self_, _106545_generics,_109425_texpr)))) {
								return false;
							};
						}
						_iter_next_213080202:;
						++it;
						goto _iter_begin_213080202;
					}
					_iter_end_213080202:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24612d129_NsSelectionExpr>>()) {
			_case_begin_21307aa9e:;
			{
				jule::Ptr<_24612d129_NsSelectionExpr> _110021_ns = _106573_expr.get()._field_Kind.operator jule::Ptr<_24612d129_NsSelectionExpr>();;
				jule::Ptr<_2461261dd_IdentTypeDecl> _110121_decl = jule::new_ptr<_2461261dd_IdentTypeDecl>(_2461261dd_IdentTypeDecl{._field_Token=_110021_ns.get()._field_Ident, ._field_Ident=_110021_ns.get()._field_Ident.get()._field_Kind, });;
				_106545_generics = jule::alloc_for_append(_106545_generics,1);_106545_generics.__push(jule::new_ptr<_246125b27_TypeDecl>(_246125b27_TypeDecl{._field_Token=_110121_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_246126be4_NamespaceTypeDecl>(_246126be4_NamespaceTypeDecl{._field_Idents=_110021_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_246125b27_TypeDecl>(_246125b27_TypeDecl{._field_Token=_110121_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(_110121_decl)})}))}));;
			}
		}
		else {
			_case_begin_213079d9a:;
			{
				_246d61422_pushErr(_self_.ptr(), _106573_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_21307a076:;
	};
	return true;
}



inline void _246d71ca1_evalIdentDeclFromIndexing(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_246d5e398_Data>& _112250_d, jule::Ptr<_2461320a6_IndexingExpr>& _112265_i) {
	jule::Ptr<_246142319_StructIns> _112317_s = _246d9350e_Struct(_112250_d.get()._field_Kind.ptr());;
	if ((_112317_s == nullptr)) {
		_246d61422_pushErr(_self_.ptr(), _112265_i.get()._field_Expr.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_112250_d.get()._field_Kind.ptr()))}));
		_112250_d=nullptr;
		return;;
	};
	jule::Ptr<_2461261dd_IdentTypeDecl> _113017_decl = nullptr;;
	{
		auto &_match_expr{ _112265_i.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_24612bd09_IdentExpr>>()) {
			_case_begin_213086ca8:;
			{
				jule::Ptr<_24612bd09_IdentExpr> _113321_expr = _112265_i.get()._field_Expr.get()._field_Kind.operator jule::Ptr<_24612bd09_IdentExpr>();;
				_113017_decl=jule::new_ptr<_2461261dd_IdentTypeDecl>(_2461261dd_IdentTypeDecl{._field_Token=_113321_expr.get()._field_Token, ._field_Ident=_113321_expr.get()._field_Ident, ._field_CppLinked=_113321_expr.get()._field_CppLinked, });
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24612d129_NsSelectionExpr>>()) {
			_case_begin_213085c96:;
			{
				jule::Ptr<_24612d129_NsSelectionExpr> _114021_expr = _112265_i.get()._field_Expr.get()._field_Kind.operator jule::Ptr<_24612d129_NsSelectionExpr>();;
				_113017_decl=jule::new_ptr<_2461261dd_IdentTypeDecl>(_2461261dd_IdentTypeDecl{._field_Token=_114021_expr.get()._field_Ident, ._field_Ident=_114021_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_213086280:;
			{
				_246d61422_pushErr(_self_.ptr(), _112265_i.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_112250_d=nullptr;
				return;;
			}
		}
		_match_end_213085e1c:;
	};
	if ((!(_246d71960_pushGenericsFromData(_self_, _113017_decl.get()._field_Generics,_112265_i.get()._field_Index)))) {
		_112250_d=nullptr;
		return;;
	};
	_112317_s=({ auto _wrap_copy = _246d7800a_typeChecker(_self_.ptr()); _246da2353_fromStruct(&_wrap_copy, _113017_decl,_112317_s.get()._field_Decl); });
	if ((_112317_s == nullptr)) {
		_112250_d=nullptr;
		return;;
	};
	_112250_d.get()._field_Kind.get()._field_Kind=jule::Trait<_246d8ea6b_Kind>(_112317_s, 0);
}



inline jule::Bool _246d72213_checkGenericFn(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_246cabb42_FnIns>& _116539_f, jule::Ptr<_24496dc35_Token>& _116555_et, jule::Any& _116572_model) {
	jule::Bool _116613_ok = _246d053a5_reloadFnInsTypes(_self_.get()._field_s, _116539_f);;
	_116539_f.get()._field_reloaded=true;
	if ((!(_116613_ok))) {
		return false;
	};
	jule::Ptr<_246cabb42_FnIns> _117117_existInstance = _246179087_appendInstance(_116539_f.get()._field_Decl.ptr(), _116539_f);;
	if ((!(_246d04519_checkConstraintsFn(_self_.get()._field_s, _116539_f,_116555_et,_117117_existInstance)))) {
		return false;
	};
	if ((_117117_existInstance != nullptr)) {
		_116539_f=_117117_existInstance;
		_246d8c66d_updateModelToGenericIns(_116572_model,_117117_existInstance);
	} else {
		_246d11bdb_checkFnInsCaller(_self_.get()._field_s, _116539_f,_116555_et);
	};
	return true;
}



inline void _246d72554_evalFnGenericFromIndexing(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_246d5e398_Data>& _119050_d, jule::Ptr<_2461320a6_IndexingExpr>& _119065_i) {
	jule::Slice<jule::Ptr<_246125b27_TypeDecl>> _119117_generics = jule::Slice<jule::Ptr<_246125b27_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_246d71960_pushGenericsFromData(_self_, _119117_generics,_119065_i.get()._field_Index)))) {
		_119050_d=nullptr;
		return;;
	};
	jule::Ptr<_246cabb42_FnIns> _119717_f = _246d9329a_Fn(_119050_d.get()._field_Kind.ptr());;
	jule::I64 _119817_genericsLen = 0LL;;
	if ((_119717_f.get()._field_Decl != nullptr)) {
		_119817_genericsLen=static_cast<jule::I64>(_119717_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_246cec677_checkGenericQuantity(_self_.get()._field_s.ptr(), _119817_genericsLen,static_cast<jule::I64>(_119117_generics.len()),_119065_i.get()._field_Expr.get()._field_Token)))) {
		_119050_d=nullptr;
		return;;
	};
	_119717_f.get()._field_Generics=jule::Slice<jule::Ptr<_246d8d76d_InsGeneric>>::alloc(0LL, _119717_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto &expr = _119117_generics;
		auto it = expr.begin();
		_iter_begin_213091675:;
		if (it != expr.end()) {
			jule::Ptr<_246125b27_TypeDecl> _120921_g = *it;
			{
				jule::Ptr<_246d5e398_Data> _121021_k = _246d78318_evalType(_self_.ptr(), _120921_g);;
				if ((_121021_k == nullptr)) {
					_119050_d=nullptr;
					return;;
				};
				_119717_f.get()._field_Generics = jule::alloc_for_append(_119717_f.get()._field_Generics,1);_119717_f.get()._field_Generics.__push(jule::new_ptr<_246d8d76d_InsGeneric>(_246d8d76d_InsGeneric{._field_Kind=_121021_k.get()._field_Kind, }));;
			}
			_iter_next_213091675:;
			++it;
			goto _iter_begin_213091675;
		}
		_iter_end_213091675:;
	};
	if (_246cabd2e_IsBuiltin(_119717_f.ptr())) {
		return;;
	};
	if (_246d72213_checkGenericFn(_self_, _119717_f,_119065_i.get()._field_Expr.get()._field_Token,_119050_d.get()._field_Model)) {
		_119050_d.get()._field_Kind.get()._field_Kind=jule::Trait<_246d8ea6b_Kind>(_119717_f, 1);
	} else {
		_119050_d=nullptr;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d72873_evalIndexing(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_2461320a6_IndexingExpr> _122936_i) {
	jule::Ptr<_246d8ee9a_TypeKind> _123017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_123017_prefix;
	});;
	jule::Ptr<_246d5e398_Data> _123417_d = _246d81079_evalExprKind(_self_, _122936_i.get()._field_Expr.get()._field_Kind);;
	if ((_123417_d == nullptr)) {
		return nullptr;
	};
	if (_123417_d.get()._field_Decl) {
		_246d71ca1_evalIdentDeclFromIndexing(_self_, _123417_d,_122936_i);
		return _123417_d;
	};
	if ((_246d9329a_Fn(_123417_d.get()._field_Kind.ptr()) != nullptr)) {
		_246d72554_evalFnGenericFromIndexing(_self_, _123417_d,_122936_i);
		return _123417_d;
	};
	_246d5e398_Data _125017_old_d = (*(_123417_d));;
	jule::Ptr<_246d5e398_Data> _125217_index = _246d81079_evalExprKind(_self_, _122936_i.get()._field_Index.get()._field_Kind);;
	if ((_125217_index == nullptr)) {
		return nullptr;
	};
	_123417_d.get()._field_Decl=false;
	_246d71124_toIndexing(_self_.ptr(), _123417_d,_125217_index,_122936_i);
	if (_246d5ec5b_IsConst(_123417_d.ptr())) {
		_123417_d.get()._field_Decl=false;
		_123417_d.get()._field_Model=static_cast<jule::Any>(_123417_d.get()._field_Constant);
	} else if (_123417_d.get()._field_Decl) {
		_123417_d.get()._field_Decl=false;
	} else {
		_123417_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca6c6e_IndexingExprModel>(_246ca6c6e_IndexingExprModel{._field_Token=_122936_i.get()._field_Token, ._field_Expr=jule::new_ptr<_246d5e398_Data>(_125017_old_d), ._field_Index=_125217_index}));
	};
	return _123417_d;
}



inline std::tuple<jule::Ptr<_246d5e398_Data>,jule::Ptr<_246d5e398_Data>> _246d72b81_evalSlicingExprs(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_2461326b1_SlicingExpr>& _128341_s) {
	jule::Ptr<_246d8ee9a_TypeKind> _128417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_128417_prefix;
	});;
	jule::Ptr<_246d5e398_Data> _128817_l = nullptr;;
	jule::Ptr<_246d5e398_Data> _128917_r = nullptr;;
	if ((_128341_s.get()._field_Start != nullptr)) {
		_128817_l=_246d81079_evalExprKind(_self_, _128341_s.get()._field_Start.get()._field_Kind);
		if ((_128817_l != nullptr)) {
			_246d6e870_checkIntegerIndexingByData(_self_.ptr(), _128817_l,_128341_s.get()._field_Token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	} else {
		_128817_l=jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Constant=static__246204db0_NewI64(0LL)});
		_128817_l.get()._field_Model=static_cast<jule::Any>(_128817_l.get()._field_Constant);
	};
	if ((_128341_s.get()._field_To != nullptr)) {
		_128917_r=_246d81079_evalExprKind(_self_, _128341_s.get()._field_To.get()._field_Kind);
		if ((_128917_r != nullptr)) {
			_246d6e870_checkIntegerIndexingByData(_self_.ptr(), _128917_r,_128341_s.get()._field_Token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	};
	return std::make_tuple(_128817_l,_128917_r);
}



inline void _246d72e06_slicingArr(_246d60e16_Eval* _self_, jule::Ptr<_246d5e398_Data>& _131830_d) {
	jule::Ptr<_246d8ee9a_TypeKind> _131917_elemType = _246d92cc2_Arr(_131830_d.get()._field_Kind.ptr()).get()._field_Elem;;
	_131830_d.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(jule::new_ptr<_246d98b63_Slc>(_246d98b63_Slc{._field_Elem=_131917_elemType}), 8)});
	_131830_d.get()._field_Lvalue=false;
	_131830_d.get()._field_Mutable=(_131830_d.get()._field_Mutable || (!(_246d91397_Mutable(_131917_elemType.ptr()))));
}



inline void _246d732be_slicingStr(_246d60e16_Eval* _self_, jule::Ptr<_246d5e398_Data>& _133330_d, jule::Ptr<_246d5e398_Data>& _133341_l, jule::Ptr<_246d5e398_Data>& _133352_r) {
	_133330_d.get()._field_Lvalue=false;
	_133330_d.get()._field_Mutable=true;
	if ((!(_246d5ec5b_IsConst(_133330_d.ptr())))) {
		return;;
	};
	if (((_133341_l == nullptr) || (_133352_r == nullptr))) {
		_133330_d.get()._field_Constant=nullptr;
		return;;
	};
	if ((_246d5ec5b_IsConst(_133341_l.ptr()) && _246d5ec5b_IsConst(_133352_r.ptr()))) {
		jule::I64 _134617_left = _24624782b_AsI64(_133341_l.get()._field_Constant.ptr());;
		if ((_134617_left < 0LL)) {
			return;;
		};
		jule::Str _135117_s = _246245de0_ReadStr(_133330_d.get()._field_Constant.ptr());;
		jule::I64 _135221_right = 0LL;;
		if ((_133352_r == nullptr)) {
			_135221_right=static_cast<jule::I64>(static_cast<jule::I64>(_135117_s.len()));
		} else {
			_135221_right=static_cast<jule::I64>(_24624782b_AsI64(_133352_r.get()._field_Constant.ptr()));
		};
		if ((_134617_left > _135221_right)) {
			return;;
		};
		_246260c51_SetStr(_133330_d.get()._field_Constant.ptr(), _135117_s.slice(_134617_left,_135221_right));
		_133330_d.get()._field_Decl=true;
	} else {
		_133330_d.get()._field_Constant=nullptr;
	};
}



inline void _246d73731_checkSlicing(_246d60e16_Eval* _self_, jule::Ptr<_246d5e398_Data>& _136936_d, jule::Ptr<_246d5e398_Data>& _136947_l, jule::Ptr<_246d5e398_Data>& _136958_r, jule::Ptr<_2461326b1_SlicingExpr>& _136969_s) {
	{
		
		if ((_246d92cc2_Arr(_136936_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2130aab9a:;
			{
				_246d72e06_slicingArr(&(*_self_), _136936_d);
				return;;
			}
		}
		else if ((_246d93036_Slc(_136936_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2130aac22:;
			{
				return;;
			}
		}
		else if ((_246d920ac_Prim(_136936_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2130aac99:;
			{
				jule::Ptr<_246d94972_Prim> _137717_prim = _246d920ac_Prim(_136936_d.get()._field_Kind.ptr());;
				{
					
					if (_246d97ba6_IsStr(_137717_prim.ptr())) {
						_case_begin_2130ad4a5:;
						{
							_246d732be_slicingStr(&(*_self_), _136936_d,_136947_l,_136958_r);
							return;;
						}
					}
					_match_end_2130ad40b:;
				};
			}
		}
		_match_end_2130aaa68:;
	};
	_246d61422_pushErr(&(*_self_), _136969_s.get()._field_Token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_136936_d.get()._field_Kind.ptr()))}));
}



inline jule::Ptr<_246d5e398_Data> _246d73a3e_evalSlicing(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_2461326b1_SlicingExpr> _138835_s) {
	jule::Ptr<_246d5e398_Data> _138917_d = _246d81079_evalExprKind(_self_, _138835_s.get()._field_Expr.get()._field_Kind);;
	if ((_138917_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_246d5e398_Data> _139418_l;;
	jule::Ptr<_246d5e398_Data> _139425_r;;
	std::tie(_139418_l,_139425_r) = _246d72b81_evalSlicingExprs(_self_, _138835_s);
	if ((_139418_l == nullptr)) {
		return _138917_d;
	};
	_138917_d.get()._field_Decl=false;
	_246d73731_checkSlicing(_self_.ptr(), _138917_d,_139418_l,_139425_r,_138835_s);
	if (_246d5ec5b_IsConst(_138917_d.ptr())) {
		_138917_d.get()._field_Decl=false;
		_138917_d.get()._field_Model=static_cast<jule::Any>(_138917_d.get()._field_Constant);
	} else if (_138917_d.get()._field_Decl) {
		_138917_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_246ca7522_SlicingExprModel> _141221_model = jule::new_ptr<_246ca7522_SlicingExprModel>(_246ca7522_SlicingExprModel{._field_Token=_138835_s.get()._field_Token, ._field_Expr=_138917_d.get()._field_Model, ._field_Left=_139418_l.get()._field_Model, });;
		if ((_139425_r != nullptr)) {
			_141221_model.get()._field_Right=_139425_r.get()._field_Model;
		};
		_138917_d.get()._field_Model=static_cast<jule::Any>(_141221_model);
	};
	return _138917_d;
}



inline void _246d73e07_castPtr(_246d60e16_Eval* _self_, jule::Ptr<_246d8ee9a_TypeKind> _142530_t, jule::Ptr<_246d5e398_Data> _142548_d, jule::Ptr<_24496dc35_Token> _142558_errorToken) {
	_142548_d.get()._field_Constant=nullptr;
	jule::Ptr<_246d98206_Sptr> _142713_sptr = _246d92321_Sptr(_142548_d.get()._field_Kind.ptr());;
	if ((_142713_sptr != nullptr)) {
		if ((!(_246d906a4_Equals(_246d92585_Ptr(_142530_t.ptr()).get()._field_Elem, _142713_sptr.get()._field_Elem)))) {
			_246d61422_pushErr(&(*_self_), _142558_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_142548_d.get()._field_Kind.ptr())),jule::Any(_246d90396_Str(_142530_t.ptr()))}));
		};
		return;;
	};
	if ((!(_246d61d5c_isUnsafe(&(*_self_))))) {
		_246d61422_pushErr(&(*_self_), _142558_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_246d94972_Prim> _144013_prim = _246d920ac_Prim(_142548_d.get()._field_Kind.ptr());;
	if (((_246d92585_Ptr(_142548_d.get()._field_Kind.ptr()) == nullptr) && ((_144013_prim == nullptr) || (!(_246ca39e6_IsInt(_246d94cd5_Str(_144013_prim.ptr()))))))) {
		_246d61422_pushErr(&(*_self_), _142558_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_142548_d.get()._field_Kind.ptr())),jule::Any(_246d90396_Str(_142530_t.ptr()))}));
	};
}



inline void _246d742c0_castStruct(_246d60e16_Eval* _self_, jule::Ptr<_246d8ee9a_TypeKind> _144633_t, jule::Ptr<_246d5e398_Data> _144651_d, jule::Ptr<_24496dc35_Token> _144661_errorToken) {
	_144651_d.get()._field_Constant=nullptr;
	jule::Ptr<_246cb3e9b_Trait> _144817_tr = _246d93773_Trait(_144651_d.get()._field_Kind.ptr());;
	if ((_144817_tr == nullptr)) {
		_246d61422_pushErr(&(*_self_), _144661_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_144651_d.get()._field_Kind.ptr())),jule::Any(_246d90396_Str(_144633_t.ptr()))}));
		return;;
	};
	jule::Ptr<_246142319_StructIns> _145417_s = _246d9350e_Struct(_144633_t.ptr());;
	_2130bc1d9_pushReference(&(*_self_), _145417_s);
	if ((!(_246105ac4_IsImplements(_145417_s.get()._field_Decl.ptr(), _144817_tr)))) {
		_246d61422_pushErr(&(*_self_), _144661_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_144651_d.get()._field_Kind.ptr())),jule::Any(_246d90396_Str(_144633_t.ptr()))}));
	};
}



inline void _246d74688_castRef(_246d60e16_Eval* _self_, jule::Ptr<_246d8ee9a_TypeKind> _146230_t, jule::Ptr<_246d5e398_Data> _146248_d, jule::Ptr<_24496dc35_Token> _146258_errorToken) {
	_146248_d.get()._field_Constant=nullptr;
	jule::Ptr<_246d98206_Sptr> _146417_sptr = _246d92321_Sptr(_146230_t.ptr());;
	jule::Ptr<_246d9b76a_Ptr> _146617_ptr = _246d92585_Ptr(_146248_d.get()._field_Kind.ptr());;
	if (((_146617_ptr != nullptr) && _246d906a4_Equals(_146417_sptr.get()._field_Elem, _146617_ptr.get()._field_Elem))) {
		if ((!(_246d61d5c_isUnsafe(&(*_self_))))) {
			_246d61422_pushErr(&(*_self_), _146258_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_246d9350e_Struct(_146417_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_246d742c0_castStruct(&(*_self_), _146417_sptr.get()._field_Elem,_146248_d,_146258_errorToken);
		return;;
	};
	_246d61422_pushErr(&(*_self_), _146258_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_146248_d.get()._field_Kind.ptr())),jule::Any(_246d90396_Str(_146230_t.ptr()))}));
}



inline void _246d74a51_castSlc(_246d60e16_Eval* _self_, jule::Ptr<_246d8ee9a_TypeKind> _148430_t, jule::Ptr<_246d5e398_Data> _148448_d, jule::Ptr<_24496dc35_Token> _148458_errorToken) {
	_148448_d.get()._field_Constant=nullptr;
	if ((_246d927e9_Enum(_148448_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_246d920ac_Prim(_246d927e9_Enum(_148448_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_246d97ba6_IsStr(_246d920ac_Prim(_246d927e9_Enum(_148448_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_246d61422_pushErr(&(*_self_), _148458_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_148448_d.get()._field_Kind.ptr())),jule::Any(_246d90396_Str(_148430_t.ptr()))}));
			return;;
		};
	} else if (((_246d920ac_Prim(_148448_d.get()._field_Kind.ptr()) == nullptr) || (!(_246d97ba6_IsStr(_246d920ac_Prim(_148448_d.get()._field_Kind.ptr()).ptr()))))) {
		_246d61422_pushErr(&(*_self_), _148458_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_148448_d.get()._field_Kind.ptr())),jule::Any(_246d90396_Str(_148430_t.ptr()))}));
		return;;
	};
	_148430_t=_246d93036_Slc(_148430_t.ptr()).get()._field_Elem;
	jule::Ptr<_246d94972_Prim> _149713_prim = _246d920ac_Prim(_148430_t.ptr());;
	if (((_149713_prim == nullptr) || ((!(_246d9627b_IsU8(_149713_prim.ptr()))) && (!(_246d95ca3_IsI32(_149713_prim.ptr())))))) {
		_246d61422_pushErr(&(*_self_), _148458_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_148448_d.get()._field_Kind.ptr())),jule::Any(_246d90396_Str(_148430_t.ptr()))}));
	};
}



inline void _246d74d70_castStr(_246d60e16_Eval* _self_, jule::Ptr<_246d5e398_Data> _150330_d, jule::Ptr<_24496dc35_Token> _150340_errorToken) {
	_150330_d.get()._field_Constant=nullptr;
	if ((_246d927e9_Enum(_150330_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_246cb60e1_Enum> _150621_e = _246d927e9_Enum(_150330_d.get()._field_Kind.ptr());;
		if (((_246d920ac_Prim(_150621_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _246d97ba6_IsStr(_246d920ac_Prim(_150621_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_246d920ac_Prim(_150330_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_246d94972_Prim> _151317_prim = _246d920ac_Prim(_150330_d.get()._field_Kind.ptr());;
		if (((!(_246d9627b_IsU8(_151317_prim.ptr()))) && (!(_246d95ca3_IsI32(_151317_prim.ptr()))))) {
			_246d61422_pushErr(&(*_self_), _150340_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_246d90396_Str(_150330_d.get()._field_Kind.ptr()))}));
		};
		return;;
	};
	if ((_246d93036_Slc(_150330_d.get()._field_Kind.ptr()) == nullptr)) {
		_246d61422_pushErr(&(*_self_), _150340_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_246d90396_Str(_150330_d.get()._field_Kind.ptr()))}));
		return;;
	};
	jule::Ptr<_246d8ee9a_TypeKind> _152517_t = _246d93036_Slc(_150330_d.get()._field_Kind.ptr()).get()._field_Elem;;
	jule::Ptr<_246d94972_Prim> _152613_prim = _246d920ac_Prim(_152517_t.ptr());;
	if (((_152613_prim == nullptr) || ((!(_246d9627b_IsU8(_152613_prim.ptr()))) && (!(_246d95ca3_IsI32(_152613_prim.ptr())))))) {
		_246d61422_pushErr(&(*_self_), _150340_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_246d90396_Str(_150330_d.get()._field_Kind.ptr()))}));
	};
}



inline void _246d75238_castInt(_246d60e16_Eval* _self_, jule::Ptr<_246d8ee9a_TypeKind> _153230_t, jule::Ptr<_246d5e398_Data> _153248_d, jule::Ptr<_24496dc35_Token> _153258_errorToken) {
	if (_246d5ec5b_IsConst(_153248_d.ptr())) {
		jule::Ptr<_246d94972_Prim> _153417_prim = _246d920ac_Prim(_153230_t.ptr());;
		{
			
			if (_246ca3782_IsSigInt(_153417_prim.get()._field_Kind)) {
				_case_begin_2130d9008:;
				{
					_2462496a7_SetI64(_153248_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_24624782b_AsI64(_153248_d.get()._field_Constant.ptr())));
				}
			}
			else if (_246ca38b4_IsUnsigInt(_153417_prim.get()._field_Kind)) {
				_case_begin_2130d9080:;
				{
					_246257462_SetU64(_153248_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_24623b974_AsU64(_153248_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_2130d8e4d:;
		};
	} else {
		_153248_d.get()._field_Constant=nullptr;
	};
	if ((_246d927e9_Enum(_153248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_246cb60e1_Enum> _154617_e = _246d927e9_Enum(_153248_d.get()._field_Kind.ptr());;
		if (_246ca3c5a_IsNum(_246d90396_Str(_154617_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_246d92321_Sptr(_153248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_246d94972_Prim> _155317_prim = _246d920ac_Prim(_153230_t.ptr());;
		if ((!(_246d976cd_IsUintptr(_155317_prim.ptr())))) {
			_246d61422_pushErr(&(*_self_), _153258_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_153248_d.get()._field_Kind.ptr())),jule::Any(_246d90396_Str(_153230_t.ptr()))}));
		};
		return;;
	};
	if ((_246d92585_Ptr(_153248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_246d94972_Prim> _156017_prim = _246d920ac_Prim(_153230_t.ptr());;
		if (_246d976cd_IsUintptr(_156017_prim.ptr())) {
		} else if ((!(_246d61d5c_isUnsafe(&(*_self_))))) {
			_246d61422_pushErr(&(*_self_), _153258_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_246d94972_Prim> _156913_prim = _246d920ac_Prim(_153248_d.get()._field_Kind.ptr());;
	if (((_156913_prim != nullptr) && _246ca3c5a_IsNum(_246d94cd5_Str(_156913_prim.ptr())))) {
		return;;
	};
	_246d61422_pushErr(&(*_self_), _153258_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_153248_d.get()._field_Kind.ptr())),jule::Any(_246d90396_Str(_153230_t.ptr()))}));
}



inline void _246d75601_castNum(_246d60e16_Eval* _self_, jule::Ptr<_246d8ee9a_TypeKind> _157730_t, jule::Ptr<_246d5e398_Data> _157748_d, jule::Ptr<_24496dc35_Token> _157758_errorToken) {
	if (_246d5ec5b_IsConst(_157748_d.ptr())) {
		jule::Ptr<_246d94972_Prim> _157917_prim = _246d920ac_Prim(_157730_t.ptr());;
		{
			
			if (_246ca3b28_IsFloat(_157917_prim.get()._field_Kind)) {
				_case_begin_2130e395d:;
				{
					_2462617ce_SetF64(_157748_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_2462487e9_AsF64(_157748_d.get()._field_Constant.ptr())));
				}
			}
			else if (_246ca3782_IsSigInt(_157917_prim.get()._field_Kind)) {
				_case_begin_2130e39d5:;
				{
					_2462496a7_SetI64(_157748_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_24624782b_AsI64(_157748_d.get()._field_Constant.ptr())));
				}
			}
			else if (_246ca38b4_IsUnsigInt(_157917_prim.get()._field_Kind)) {
				_case_begin_2130e3a5c:;
				{
					_246257462_SetU64(_157748_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_24623b974_AsU64(_157748_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_2130e3892:;
		};
	} else {
		_157748_d.get()._field_Constant=nullptr;
	};
	if ((_246d927e9_Enum(_157748_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_246cb60e1_Enum> _159317_e = _246d927e9_Enum(_157748_d.get()._field_Kind.ptr());;
		if (_246ca3c5a_IsNum(_246d90396_Str(_159317_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_246d94972_Prim> _159913_prim = _246d920ac_Prim(_157748_d.get()._field_Kind.ptr());;
	if (((_159913_prim != nullptr) && _246ca3c5a_IsNum(_246d94cd5_Str(_159913_prim.ptr())))) {
		return;;
	};
	_246d61422_pushErr(&(*_self_), _157758_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_157748_d.get()._field_Kind.ptr())),jule::Any(_246d90396_Str(_157730_t.ptr()))}));
}



inline void _246d759b9_castPrim(_246d60e16_Eval* _self_, jule::Ptr<_246d8ee9a_TypeKind> _160731_t, jule::Ptr<_246d5e398_Data> _160749_d, jule::Ptr<_24496dc35_Token> _160759_errorToken) {
	jule::Ptr<_246d94972_Prim> _160813_prim = _246d920ac_Prim(_160731_t.ptr());;
	{
		
		if (_246d97e1a_IsAny(_160813_prim.ptr())) {
			_case_begin_2130e9d71:;
			{
				_160749_d.get()._field_Constant=nullptr;
			}
		}
		else if (_246d97ba6_IsStr(_160813_prim.ptr())) {
			_case_begin_2130ea459:;
			{
				_246d74d70_castStr(&(*_self_), _160749_d,_160759_errorToken);
			}
		}
		else if (_246ca39e6_IsInt(_246d94cd5_Str(_160813_prim.ptr()))) {
			_case_begin_2130ea4c0:;
			{
				_246d75238_castInt(&(*_self_), _160731_t,_160749_d,_160759_errorToken);
			}
		}
		else if (_246ca3c5a_IsNum(_246d94cd5_Str(_160813_prim.ptr()))) {
			_case_begin_2130ea536:;
			{
				_246d75601_castNum(&(*_self_), _160731_t,_160749_d,_160759_errorToken);
			}
		}
		else {
			_case_begin_2130ea3e3:;
			{
				_246d61422_pushErr(&(*_self_), _160759_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_160731_t.ptr()))}));
			}
		}
		_match_end_2130ea37c:;
	};
}



inline void _246d75cd8_castConstant(_246d60e16_Eval* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _162436_t, jule::Ptr<_246d5e398_Data>& _162455_d) {
	if (((_162455_d == nullptr) || (!(_246d5ec5b_IsConst(_162455_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_246d94972_Prim> _162813_prim = _246d920ac_Prim(_162436_t.ptr());;
	_246d8c162_castConstByType(_162813_prim.get()._field_Kind,_162455_d);
	_162455_d.get()._field_Model=static_cast<jule::Any>(_162455_d.get()._field_Constant);
}



inline void _246d761a1_castTypeEnum(_246d60e16_Eval* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _163336_t, jule::Ptr<_246d5e398_Data>& _163355_d, jule::Ptr<_24496dc35_Token>& _163370_errorToken) {
	jule::I64 _163413_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_246d03617_checkTypeCompatibility((*_self_)._field_s, _163355_d.get()._field_Kind,_163336_t,_163370_errorToken)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_163413_n);
		_246d61422_pushErr(&(*_self_), _163370_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_163355_d.get()._field_Kind.ptr())),jule::Any(_246d90396_Str(_163336_t.ptr()))}));
	};
	_163355_d.get()._field_Constant=nullptr;
}



inline void _246d76569_castTypeEnumT(_246d60e16_Eval* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _164237_t, jule::Ptr<_246d5e398_Data>& _164256_d, jule::Ptr<_24496dc35_Token>& _164271_errorToken) {
	jule::I64 _164313_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_246d03617_checkTypeCompatibility((*_self_)._field_s, _164237_t,_164256_d.get()._field_Kind,_164271_errorToken)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_164313_n);
		_246d61422_pushErr(&(*_self_), _164271_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_164256_d.get()._field_Kind.ptr())),jule::Any(_246d90396_Str(_164237_t.ptr()))}));
	};
	_164256_d.get()._field_Constant=nullptr;
}



inline jule::Ptr<_246d5e398_Data> _246d769ba_evalCastByTypeNData(_246d60e16_Eval* _self_, jule::Ptr<_246d8ee9a_TypeKind> _165142_t, jule::Ptr<_246d5e398_Data> _165160_d, jule::Ptr<_24496dc35_Token> _165174_errorToken) {
	if (((_165160_d != nullptr) && _165160_d.get()._field_Decl)) {
		_246d61422_pushErr(&(*_self_), _165174_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	{
		
		if (_246d5e783_IsNil(_165160_d.ptr())) {
			_case_begin_213106e8d:;
			{
				if ((!(_246d9160b_NilCompatible(_165142_t.ptr())))) {
					_246d61422_pushErr(&(*_self_), _165174_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("<nil>", 5)),jule::Any(_246d90396_Str(_165142_t.ptr()))}));
				};
				_165160_d.get()._field_Constant=nullptr;
			}
		}
		else if (((_246d920ac_Prim(_165160_d.get()._field_Kind.ptr()) != nullptr) && _246d97e1a_IsAny(_246d920ac_Prim(_165160_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_2131077da:;
			{
				if ((_246d927e9_Enum(_165142_t.ptr()) != nullptr)) {
					_246d61422_pushErr(&(*_self_), _165174_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_246d61741_pushSugggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				} else if ((_246d92a5d_TypeEnum(_165142_t.ptr()) != nullptr)) {
					_246d61422_pushErr(&(*_self_), _165174_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
				};
				_165160_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_246d92a5d_TypeEnum(_165160_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_213106d6c:;
			{
				_246d761a1_castTypeEnum(&(*_self_), _165142_t,_165160_d,_165174_errorToken);
			}
		}
		else if ((_246d92a5d_TypeEnum(_165142_t.ptr()) != nullptr)) {
			_case_begin_213106ad6:;
			{
				_246d76569_castTypeEnumT(&(*_self_), _165142_t,_165160_d,_165174_errorToken);
			}
		}
		else if ((_246d92585_Ptr(_165142_t.ptr()) != nullptr)) {
			_case_begin_213106b4c:;
			{
				_246d73e07_castPtr(&(*_self_), _165142_t,_165160_d,_165174_errorToken);
			}
		}
		else if ((_246d92321_Sptr(_165142_t.ptr()) != nullptr)) {
			_case_begin_21310793e:;
			{
				_246d74688_castRef(&(*_self_), _165142_t,_165160_d,_165174_errorToken);
			}
		}
		else if ((_246d93036_Slc(_165142_t.ptr()) != nullptr)) {
			_case_begin_2131079a5:;
			{
				_246d74a51_castSlc(&(*_self_), _165142_t,_165160_d,_165174_errorToken);
			}
		}
		else if ((_246d9350e_Struct(_165142_t.ptr()) != nullptr)) {
			_case_begin_213107a1b:;
			{
				_246d742c0_castStruct(&(*_self_), _165142_t,_165160_d,_165174_errorToken);
			}
		}
		else if ((_246d920ac_Prim(_165142_t.ptr()) != nullptr)) {
			_case_begin_213107a82:;
			{
				_246d759b9_castPrim(&(*_self_), _165142_t,_165160_d,_165174_errorToken);
				_246d75cd8_castConstant(&(*_self_), _165142_t,_165160_d);
			}
		}
		else {
			_case_begin_2131069b5:;
			{
				_246d61422_pushErr(&(*_self_), _165174_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_165142_t.ptr()))}));
				_165160_d=nullptr;
			}
		}
		_match_end_21310694e:;
	};
	if ((_165160_d == nullptr)) {
		return nullptr;
	};
	_165160_d.get()._field_Mutable=(_165160_d.get()._field_Mutable || ((!(_246d91397_Mutable(_165160_d.get()._field_Kind.ptr()))) && _246d91397_Mutable(_165142_t.ptr())));
	_165160_d.get()._field_Lvalue=false;
	_165160_d.get()._field_Decl=false;
	if (((_246d927e9_Enum(_165160_d.get()._field_Kind.ptr()) == nullptr) || (!(_246d906a4_Equals(_246d927e9_Enum(_165160_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _165142_t))))) {
		_246d8b628_applyCastKind(_165160_d,_165142_t);
		_165160_d.get()._field_Model.operator jule::Ptr<_246ca66a8_CastingExprModel>().get()._field_Token=_165174_errorToken;
	} else {
		_165160_d.get()._field_Kind=_165142_t;
	};
	_165160_d.get()._field_untyped=false;
	if (_246d5ec5b_IsConst(_165160_d.ptr())) {
		_165160_d.get()._field_Constant.get()._field_Kind=_246d920ac_Prim(_165142_t.ptr()).get()._field_Kind;
	};
	return _165160_d;
}



inline jule::Ptr<_246d5e398_Data> _246d76e1b_evalCastT(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_246d8ee9a_TypeKind>& _171634_t, jule::Ptr<_24612a148_Expr>& _171653_e, jule::Ptr<_24496dc35_Token>& _171668_et) {
	jule::Ptr<_246d8ee9a_TypeKind> _171717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_171717_prefix;
	});;
	if ((_246d93036_Slc(_171634_t.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _171653_e.get()._field_Kind };
			
			if (_match_expr.type_is<jule::Ptr<_246131737_SliceExpr>>()) {
				_case_begin_213116871:;
				{
					_self_.get()._field_prefix=_171634_t;
				}
			}
			_match_end_2131158a3:;
		};
	};
	jule::Ptr<_246d5e398_Data> _172617_d = _246d81079_evalExprKind(_self_, _171653_e.get()._field_Kind);;
	if (((_172617_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _172617_d;
	};
	return _246d769ba_evalCastByTypeNData(_self_.ptr(), _171634_t,_172617_d,_171668_et);
}



inline jule::Ptr<_246d5e398_Data> _246d77229_evalCast(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_24612cc72_CastExpr> _173332_c) {
	jule::Ptr<_246d94103_TypeSymbol> _173417_t = _246cad0e9_buildType(_173332_c.get()._field_Kind);;
	jule::Bool _173513_ok = _246d01538_checkType(_self_.get()._field_s, _173417_t,_self_.get()._field_lookup);;
	if ((!(_173513_ok))) {
		return nullptr;
	};
	return _246d76e1b_evalCastT(_self_, _173417_t.get()._field_Kind,_173332_c.get()._field_Expr,_173332_c.get()._field_Kind.get()._field_Token);
}



inline jule::Ptr<_246d5e398_Data> _246d77537_evalNsSelection(_246d60e16_Eval* _self_, jule::Ptr<_24612d129_NsSelectionExpr> _174234_s) {
	jule::Str _174313_path = _246da7a95_buildLinkPathByTokens(_174234_s.get()._field_Ns);;
	jule::Ptr<_246ce04c2_ImportInfo> _174417_imp = _246daaacb_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._246da9091_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_246ce04c2_ImportInfo>)>([=](jule::Ptr<_246ce04c2_ImportInfo> _174452_imp) mutable -> jule::Bool {
		if (((_174234_s.get()._field_Ns.len() == 1LL) && (_174452_imp.get()._field_Alias == _174313_path))) {
			return true;
		};
		return ((_174452_imp.get()._field_LinkPath == _174313_path) && _246ce312e_isAccessibleViaSelection(_174452_imp.ptr()));
	}));;
	if ((_174417_imp == nullptr)) {
		_246d61422_pushErr(&(*_self_), _174234_s.get()._field_Ns[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_174313_path)}));
		return nullptr;
	};
	jule::Trait<_246daaacb_Lookup> _175617_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_246daaacb_Lookup>(_174417_imp, 1);
	;
	_246d61ae8_disallowBuiltin(&(*_self_));
	jule::Any _176117_def = _246d64436_getDef(&(*_self_), _174234_s.get()._field_Ident.get()._field_Kind,false);;
	_246d6191c_allowBuiltin(&(*_self_));
	(*_self_)._field_lookup=_175617_lookup;
	jule::Ptr<_246d5e398_Data> _176417_d = _246d6cc7a_evalDef(&(*_self_), jule::Any(_176117_def),_174234_s.get()._field_Ident);;
	return _176417_d;
}



inline jule::Ptr<_246d5e398_Data> _246d77988_evalStructLitExplicit(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_246142319_StructIns> _176845_s, jule::Slice<jule::Ptr<_24612a148_Expr>> _176913_exprs, jule::Ptr<_24496dc35_Token> _176933_errorToken) {
	jule::Bool _177013_ok = _246cec677_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_176845_s.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_176845_s.get()._field_Generics.len()),_176933_errorToken);;
	if ((!(_177013_ok))) {
		return nullptr;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _176845_s.get()._field_Decl))) {
		_246d61422_pushErr(_self_.ptr(), _176933_errorToken,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_176845_s.get()._field_Decl.get()._field_Ident)}));
	};
	_2130bc1d9_pushReference(_self_.ptr(), _176845_s);
	_246d6b185_checkDeprecated(_self_.ptr(), _176845_s.get()._field_Decl.get()._field_Directives,_176933_errorToken);
	_246d53788_structLitChecker _178317_slc = _246d53788_structLitChecker{._field_e=_self_, ._field_errorToken=_176933_errorToken, ._field_s=_176845_s, };;
	_246d54d2d_check(&_178317_slc, _176913_exprs);
	return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_176845_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca62ce_StructLitExprModel>(_246ca62ce_StructLitExprModel{._field_Strct=_176845_s, ._field_Args=_178317_slc._field_args})), });
}



inline jule::Ptr<_246d5e398_Data> _246d77c96_evalStructLit(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_246130307_StructLit> _180237_lit) {
	jule::Ptr<_246d94103_TypeSymbol> _180317_t = _246cad0e9_buildType(_180237_lit.get()._field_Kind);;
	jule::Bool _180413_ok = _246d01538_checkType(_self_.get()._field_s, _180317_t,_self_.get()._field_lookup);;
	if ((!(_180413_ok))) {
		return nullptr;
	};
	jule::Ptr<_246142319_StructIns> _180917_s = _246d9350e_Struct(_180317_t.get()._field_Kind.ptr());;
	if ((_180917_s == nullptr)) {
		if ((_246d92321_Sptr(_180317_t.get()._field_Kind.ptr()) != nullptr)) {
			_180917_s=_246d9350e_Struct(_246d92321_Sptr(_180317_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_180917_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_246d61422_pushErr(_self_.ptr(), _180237_lit.get()._field_Kind.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_eval:;
	jule::Ptr<_246d5e398_Data> _182217_d = _246d77988_evalStructLitExplicit(_self_, _180917_s,_180237_lit.get()._field_Exprs,_180237_lit.get()._field_Kind.get()._field_Token);;
	if ((_246d92321_Sptr(_180317_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_246ca62ce_StructLitExprModel> _182421_model = _182217_d.get()._field_Model.operator jule::Ptr<_246ca62ce_StructLitExprModel>();;
		_246d89ed9_makeStructLitAlloc(_182217_d,_182421_model);
	};
	return _182217_d;
}



inline _246d9d4c5_typeChecker _246d7800a_typeChecker(_246d60e16_Eval* _self_) {
	return _246d00427_typeChecker((*_self_)._field_s, (*_self_)._field_lookup,nullptr,nullptr);
}



inline jule::Ptr<_246d5e398_Data> _246d78318_evalType(_246d60e16_Eval* _self_, jule::Ptr<_246125b27_TypeDecl> _183431_t) {
	jule::Ptr<_246d94103_TypeSymbol> _183517_tk = _246cad0e9_buildType(_183431_t);;
	jule::Bool _183613_ok = _246d01538_checkType((*_self_)._field_s, _183517_tk,(*_self_)._field_lookup);;
	if ((!(_183613_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=_183517_tk.get()._field_Kind, ._field_Model=static_cast<jule::Any>(_183517_tk.get()._field_Kind), ._field_Decl=true, });
}



inline void _246d78637_callTypeFn(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_24612e12a_FnCallExpr>& _184735_fc, jule::Ptr<_246d5e398_Data>& _184757_d) {
	if ((_184735_fc.get()._field_Args.len() < 1LL)) {
		_246d61422_pushErr(_self_.ptr(), _184735_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
	} else if ((_184735_fc.get()._field_Args.len() > 1LL)) {
		_246d61422_pushErr(_self_.ptr(), _184735_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	} else if (_184735_fc.get()._field_IsCo) {
		_246d61422_pushErr(_self_.ptr(), _184735_fc.get()._field_Token,jule::Str("concurrent calls are not allowed for type-cast calls", 52),jule::Slice<jule::Any>());
		_184757_d=nullptr;
		return;;
	} else if ((_184735_fc.get()._field_Exception != nullptr)) {
		_246d61422_pushErr(_self_.ptr(), _184735_fc.get()._field_Token,jule::Str("exceptionals are not supported for type-cast call", 49),jule::Slice<jule::Any>());
		_184757_d=nullptr;
		return;;
	};
	if ((_184735_fc.get()._field_Args.len() > 0LL)) {
		jule::Ptr<_24612a148_Expr> _186321_arg = _184735_fc.get()._field_Args[0LL];;
		_184757_d=_246d76e1b_evalCastT(_self_, _184757_d.get()._field_Kind,_186321_arg,_186321_arg.get()._field_Token);
		return;;
	};
	if ((_184757_d != nullptr)) {
		_184757_d.get()._field_Decl=false;
	};
}



inline void _246d78956_callBuiltinFn(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_24612e12a_FnCallExpr>& _187338_fc, jule::Ptr<_246d5e398_Data>& _187360_d) {
	_187360_d=_246d9329a_Fn(_187360_d.get()._field_Kind.ptr()).get()._field_caller(_self_,_187338_fc,_187360_d);
	if ((_187360_d == nullptr)) {
		return;;
	};
	_187360_d.get()._field_Mutable=true;
}



inline void _246d78c97_checkFnOfConcurrentCall(_246d60e16_Eval* _self_, jule::Ptr<_246cabb42_FnIns>& _188143_f, jule::Ptr<_24496dc35_Token> _188154_errorToken) {
	if (_246d61d5c_isUnsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _188143_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_2131386b7:;
		if (it != expr.end()) {
			jule::Ptr<_246cab955_ParamIns> &_188516_p = *it;
			{
				if (_24617a220_IsSelf(_188516_p.get()._field_Decl.ptr())) {
					if ((!(_24617b4da_IsRef(_188516_p.get()._field_Decl.ptr())))) {
						_246d61422_pushErr(&(*_self_), _188154_errorToken,jule::Str("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97),jule::Slice<jule::Any>());
						_246d61741_pushSugggestion(&(*_self_), jule::Str("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99),jule::Slice<jule::Any>());
					};
				};
				if (_188516_p.get()._field_Decl.get()._field_Reference) {
					_246d61422_pushErr(&(*_self_), _188154_errorToken,jule::Str("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96),jule::Slice<jule::Any>());
					_246d61741_pushSugggestion(&(*_self_), jule::Str("use Unsafe Jule with unsafe {} scope to make concurrent call", 60),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_2131386b7:;
			++it;
			goto _iter_begin_2131386b7;
		}
		_iter_end_2131386b7:;
	};
}



inline void _246d79193_processExceptionalHandler(_246d60e16_Eval* _self_, jule::Ptr<_246cabb42_FnIns>& _190049_f, jule::Ptr<_24612e12a_FnCallExpr>& _190065_fc, jule::Ptr<_246d5e398_Data>& _190087_d) {
	jule::Bool _190113_resultNeeded = ((!(_24618a10e_IsVoid(_190049_f.get()._field_Decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_246cc8862_scopeChecker> _190217_csc = nullptr;;
	jule::Ptr<_246cc1c01_Scope> _190317_ch = nullptr;;
	jule::Ptr<_246ca6895_FnCallExprModel> _190517_model = _190087_d.get()._field_Model.operator jule::Ptr<_246ca6895_FnCallExprModel>();;
	jule::Ptr<_246cc8862_scopeChecker> _190917_sc = (*_self_)._field_lookup.operator jule::Ptr<_246cc8862_scopeChecker>();;
	_190217_csc=_246cd8894_newChildChecker(_190917_sc);
	if (_190113_resultNeeded) {
		_190217_csc.get()._field_result=_190049_f;
	};
	_190317_ch=_246ccd229_getChild(_190917_sc.ptr());
	_190065_fc.get()._field_Exception.get()._field_Parent=_190917_sc.get()._field_tree;
	_190217_csc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_190217_csc.get()._field_table.get()._field_Vars,1);_190217_csc.get()._field_table.get()._field_Vars.__push(_246d8a32a_buildErrorVar(_190317_ch,_190065_fc));;
	_246ccd5e2_checkChildSsc(_190917_sc, _190065_fc.get()._field_Exception,_190317_ch,_190217_csc);
	_190517_model.get()._field_Assigned=_190113_resultNeeded;
	_190517_model.get()._field_Except=_190317_ch;
	if ((_190113_resultNeeded && (_190217_csc.get()._field_result != nullptr))) {
		_246d61422_pushErr(&(*_self_), _190065_fc.get()._field_Token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _246d794c3_callFn(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_24612e12a_FnCallExpr>& _192731_fc, jule::Ptr<_246d5e398_Data>& _192753_d) {
	jule::Ptr<_246cabb42_FnIns> _192817_f = _246d9329a_Fn(_192753_d.get()._field_Kind.ptr());;
	if (_246cabd2e_IsBuiltin(_192817_f.ptr())) {
		_246d78956_callBuiltinFn(_self_, _192731_fc,_192753_d);
		return;;
	};
	if ((_246d620c1_isGlobal(_self_.ptr()) && _192817_f.get()._field_Decl.get()._field_Exceptional)) {
		_246d61422_pushErr(_self_.ptr(), _192731_fc.get()._field_Token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_246d61741_pushSugggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
		_192753_d=nullptr;
		return;;
	};
	if (((!(_24618a829_IsMethod(_192817_f.get()._field_Decl.ptr()))) && _246da6be8_hasDirective(_192817_f.get()._field_Decl.get()._field_Directives,jule::Str("test", 4)))) {
		_246d61422_pushErr(_self_.ptr(), _192731_fc.get()._field_Token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_192753_d=nullptr;
		return;;
	};
	if (((((!(_192753_d.get()._field_Mutable)) && _24618a829_IsMethod(_192817_f.get()._field_Decl.ptr())) && (!(_192817_f.get()._field_Decl.get()._field_Statically))) && _192817_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_246d61422_pushErr(_self_.ptr(), _192731_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_246d61d5c_isUnsafe(_self_.ptr()))) && _192817_f.get()._field_Decl.get()._field_Unsafety)) {
		_246d61422_pushErr(_self_.ptr(), _192731_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _195217_dynamicAnnotation = (((_192817_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_192817_f.get()._field_Generics.len() == 0LL)) && (_192817_f.get()._field_Params.len() > 0LL));;
	if (_195217_dynamicAnnotation) {
		_192817_f.get()._field_Generics=jule::Slice<jule::Ptr<_246d8d76d_InsGeneric>>::alloc(_192817_f.get()._field_Decl.get()._field_Generics.len(), _192817_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_192817_f.get()._field_Generics.len() != _192817_f.get()._field_Decl.get()._field_Generics.len())) {
		_246cec677_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_192817_f.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_192817_f.get()._field_Generics.len()),_192731_fc.get()._field_Token);
		_192753_d=nullptr;
		return;;
	};
	jule::Ptr<_246ce861d_Sema> _196117_old = _self_.get()._field_s;;
	if ((_192817_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_192817_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_196117_old != _self_.get()._field_s)) {
			_196117_old.get()._field_errors=jule::append(_196117_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_196117_old;
	});;
	if ((!(_195217_dynamicAnnotation))) {
		if ((!(_192817_f.get()._field_reloaded))) {
			jule::Bool _197621_ok = _246d053a5_reloadFnInsTypes(_self_.get()._field_s, _192817_f);;
			_192817_f.get()._field_reloaded=true;
			if ((!(_197621_ok))) {
				_192753_d=nullptr;
				return;;
			};
		};
		jule::Ptr<_246cabb42_FnIns> _198321_existInstance = _246179087_appendInstance(_192817_f.get()._field_Decl.ptr(), _192817_f);;
		if ((_198321_existInstance != nullptr)) {
			_192817_f=_198321_existInstance;
		};
	} else {
		_246d03c99_buildFnNonGenericTypeKinds(_self_.get()._field_s, _192817_f);
	};
	_246d50d7e_fnCallArgChecker _199117_fcac = _246d50d7e_fnCallArgChecker{._field_e=_self_, ._field_args=_192731_fc.get()._field_Args, ._field_errorToken=_192731_fc.get()._field_Token, ._field_f=_192817_f, ._field_dynamicAnnotation=_195217_dynamicAnnotation, };;
	jule::Bool _199817_ok = false;;
	if ((_192817_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		std::tie(_196117_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_196117_old);
		_199817_ok=_246d53249_check(&_199117_fcac);
		std::tie(_196117_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_196117_old);
	} else {
		_199817_ok=_246d53249_check(&_199117_fcac);
	};
	if (_195217_dynamicAnnotation) {
		if ((!(_199817_ok))) {
			_192753_d=nullptr;
			return;;
		};
		if ((!(_246d72213_checkGenericFn(_self_, _192817_f,_192731_fc.get()._field_Token,_192753_d.get()._field_Model)))) {
			_192753_d=nullptr;
			return;;
		};
	};
	jule::Any _201817_callModel = _192753_d.get()._field_Model;;
	if (_24618a10e_IsVoid(_192817_f.get()._field_Decl.ptr())) {
		_192753_d=_246d8b826_buildVoidData();
	} else {
		_192753_d.get()._field_Kind=_192817_f.get()._field_Result;
		_192753_d.get()._field_Lvalue=false;
	};
	jule::Ptr<_246ca6895_FnCallExprModel> _202717_model = jule::new_ptr<_246ca6895_FnCallExprModel>(_246ca6895_FnCallExprModel{._field_Token=_192731_fc.get()._field_Token, ._field_Func=_192817_f, ._field_IsCo=_192731_fc.get()._field_IsCo, ._field_Expr=_201817_callModel, ._field_Args=_199117_fcac._field_argModels, });;
	_192753_d.get()._field_Model=static_cast<jule::Any>(_202717_model);
	_192753_d.get()._field_Mutable=true;
	if (_192817_f.get()._field_Decl.get()._field_Exceptional) {
		if (_192731_fc.get()._field_IsCo) {
			_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _192731_fc.get()._field_Token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
			_246ceb5ee_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
		};
		{
			
			if (_24612e48d_Unhandled(_192731_fc.ptr())) {
				_case_begin_213157ebc:;
				{
					_246d61422_pushErr(_self_.ptr(), _192731_fc.get()._field_Token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_246d61741_pushSugggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_24612e702_Ignored(_192731_fc.ptr())) {
				_case_begin_213157b7b:;
				{
					goto _match_end_213156c02;
				}
			}
			else {
				_case_begin_213156c68:;
				{
					_246d79193_processExceptionalHandler(_self_.ptr(), _192817_f,_192731_fc,_192753_d);
				}
			}
			_match_end_213156c02:;
		};
	} else if ((!(_24612e48d_Unhandled(_192731_fc.ptr())))) {
		_246d61422_pushErr(_self_.ptr(), _192731_fc.get()._field_Token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
	if (_192731_fc.get()._field_IsCo) {
		_246d78c97_checkFnOfConcurrentCall(_self_.ptr(), _202717_model.get()._field_Func,_192731_fc.get()._field_Token);
	};
}



inline jule::Ptr<_246d5e398_Data> _246d797d1_evalFnCall(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_24612e12a_FnCallExpr> _206234_fc) {
	jule::Ptr<_246d8ee9a_TypeKind> _206317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_206317_prefix;
	});;
	{
		auto &_match_expr{ _206234_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_24612bd09_IdentExpr>>()) {
			_case_begin_21315b234:;
			{
				if ((_206234_fc.get()._field_Expr.get()._field_Token.get()._field_Kind == jule::Str("error", 5))) {
					return _246e4b243_builtinCallerError(_self_,_206234_fc);
				};
			}
		}
		_match_end_21315b1ce:;
	};
	jule::Ptr<_246d5e398_Data> _207617_d = _246d81079_evalExprKind(_self_, _206234_fc.get()._field_Expr.get()._field_Kind);;
	if ((_207617_d == nullptr)) {
		return nullptr;
	};
	if (_207617_d.get()._field_Decl) {
		_246d78637_callTypeFn(_self_, _206234_fc,_207617_d);
		return _207617_d;
	};
	if ((_246d9329a_Fn(_207617_d.get()._field_Kind.ptr()) == nullptr)) {
		_246d61422_pushErr(_self_.ptr(), _206234_fc.get()._field_Token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	};
	_246d794c3_callFn(_self_, _206234_fc,_207617_d);
	return _207617_d;
}



inline jule::Ptr<_246d5e398_Data> _246d79b88_evalEnumStatic(_246d60e16_Eval* _self_, jule::Ptr<_246cb60e1_Enum> _209537_enm, jule::Ptr<_24496dc35_Token> _209549_ident) {
	jule::Ptr<_246d5e398_Data> _209617_d = jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_209537_enm, 3)}), });;
	jule::Ptr<_246cb55eb_EnumItem> _210217_item = _246cb6ba2_FindItem(_209537_enm.ptr(), _209549_ident.get()._field_Kind);;
	if ((_210217_item == nullptr)) {
		_246d61422_pushErr(&(*_self_), _209549_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_209537_enm.get()._field_Ident),jule::Any(_209549_ident.get()._field_Kind)}));
	} else {
		_209617_d.get()._field_Constant=jule::new_ptr<_2461e4872_Const>((*(_210217_item.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_209617_d.get()._field_Model=static_cast<jule::Any>(_209617_d.get()._field_Constant);
		_246d8bda9_applyCastModelByEnum(_209617_d,_209537_enm);
	};
	return _209617_d;
}



inline jule::Ptr<_246d5e398_Data> _246d7a040_evalTypeEnumStatic(_246d60e16_Eval* _self_, jule::Ptr<_246cb76db_TypeEnum> _211441_enm, jule::Ptr<_24496dc35_Token> _211457_ident) {
	jule::Ptr<_246cb7125_TypeEnumItem> _211517_item = _246cb8225_FindItem(_211441_enm.ptr(), _211457_ident.get()._field_Kind);;
	if ((_211517_item == nullptr)) {
		_246d61422_pushErr(&(*_self_), _211457_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_211441_enm.get()._field_Ident),jule::Any(_211457_ident.get()._field_Kind)}));
		return nullptr;
	};
	{
		
		if ((_246d927e9_Enum(_211517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_213164d86:;
			{
				return _246d649b9__evalEnum(&(*_self_), _246d927e9_Enum(_211517_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else if ((_246d92a5d_TypeEnum(_211517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2131656e4:;
			{
				return _246d69edb__evalTypeEnum(&(*_self_), _246d92a5d_TypeEnum(_211517_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else if ((_246d9350e_Struct(_211517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_213164803:;
			{
				return _246d6a6a1__evalStruct(&(*_self_), _246d9350e_Struct(_211517_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else {
			_case_begin_213164737:;
			{
				jule::Ptr<_246d5e398_Data> _212821_d = jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=_211517_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_212821_d.get()._field_Model=static_cast<jule::Any>(_212821_d.get()._field_Kind);
				return _212821_d;
			}
		}
		_match_end_21316399a:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d7a3e7_evalStructStatic(_246d60e16_Eval* _self_, jule::Ptr<_246142319_StructIns> _213739_s, jule::Ptr<_24496dc35_Token> _213754_ident) {
	jule::Ptr<_246d5e398_Data> _213817_d = jule::new_ptr<_246d5e398_Data>();;
	;
	jule::Ptr<_246cab768_Fn> _214217_method = _24611b4ad_FindMethod(_213739_s.ptr(), _213754_ident.get()._field_Kind,true);;
	if ((_214217_method != nullptr)) {
		if ((!(_246ceb9a6_isAccessibleDefine((*_self_)._field_s.ptr(), _214217_method.get()._field_Public,_214217_method.get()._field_Token)))) {
			_246d61422_pushErr(&(*_self_), _213754_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_213754_ident.get()._field_Kind)}));
			_246d61741_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_246cabb42_FnIns> _214921_ins = _24618225a_instance(_214217_method);;
		_214921_ins.get()._field_Owner=_213739_s;
		_21300640e_pushReference(&(*_self_), _214921_ins);
		_213817_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca7d19_StructStaticIdentExprModel>(_246ca7d19_StructStaticIdentExprModel{._field_Structure=_213739_s, ._field_Expr=_213817_d.get()._field_Model, ._field_Method=_214921_ins}));
		_213817_d.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_214921_ins, 1)});
		return _213817_d;
	};
	jule::Ptr<_246d16372_Var> _216317_sttc = _2461202e7_FindStatic(_213739_s.ptr(), _213754_ident.get()._field_Kind);;
	if ((_216317_sttc != nullptr)) {
		return _246d6c51b_evalVar(&(*_self_), _216317_sttc,_213754_ident);
	};
	_246d61422_pushErr(&(*_self_), _213754_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_213739_s.get()._field_Decl.get()._field_Ident),jule::Any(_213754_ident.get()._field_Kind)}));
	return nullptr;
}



inline jule::Ptr<_246d5e398_Data> _246d7a848_evalTraitSubIdent(_246d60e16_Eval* _self_, jule::Ptr<_246d5e398_Data> _217240_d, jule::Ptr<_246cb3e9b_Trait> _217254_trt, jule::Ptr<_24496dc35_Token> _217271_ident) {
	jule::Ptr<_246cab768_Fn> _217317_f = _246cb4d26_FindMethod(_217254_trt.ptr(), _217271_ident.get()._field_Kind);;
	if ((_217317_f == nullptr)) {
		_246d61422_pushErr(&(*_self_), _217271_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_217254_trt.get()._field_Ident),jule::Any(_217271_ident.get()._field_Kind)}));
		return nullptr;
	};
	return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_24618225a_instance(_217317_f), 1)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca770e_TraitSubIdentExprModel>(_246ca770e_TraitSubIdentExprModel{._field_Token=_217271_ident, ._field_Expr=_217240_d.get()._field_Model, ._field_Method=_217317_f, ._field_Trt=_217254_trt})), });
}



inline jule::Ptr<_246d5e398_Data> _246d7ad43_evalStructSubIdent(_246d60e16_Eval* _self_, jule::Ptr<_246d5e398_Data> _219141_d, jule::Ptr<_246142319_StructIns> _219155_s, jule::Ptr<_24612d59c_SubIdentExpr> _219174_si, jule::Bool _219193_ref) {
	jule::Ptr<_24611d977_FieldIns> _219217_f = _24611c7cd_FindField(_219155_s.ptr(), _219174_si.get()._field_Ident.get()._field_Kind);;
	if ((_219217_f != nullptr)) {
		if ((!(_246ceb9a6_isAccessibleDefine((*_self_)._field_s.ptr(), _219217_f.get()._field_Decl.get()._field_Public,_219217_f.get()._field_Decl.get()._field_Token)))) {
			_246d61422_pushErr(&(*_self_), _219174_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_219217_f.get()._field_Decl.get()._field_Ident)}));
			_246d61741_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_246ca7b2c_StructSubIdentExprModel> _219921_model = jule::new_ptr<_246ca7b2c_StructSubIdentExprModel>(_246ca7b2c_StructSubIdentExprModel{._field_Token=_219174_si.get()._field_Ident, ._field_Expr=jule::new_ptr<_246d5e398_Data>((*(_219141_d))), ._field_ExprKind=_219141_d.get()._field_Kind, ._field_Field=_219217_f, ._field_Owner=_219155_s});;
		_219141_d.get()._field_Model=static_cast<jule::Any>(_219921_model);
		_219141_d.get()._field_Kind=_219217_f.get()._field_Kind;
		_219141_d.get()._field_Lvalue=true;
		if ((_219217_f.get()._field_Decl.get()._field_Mutable && (!(_219141_d.get()._field_Mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_246cc8862_scopeChecker>>()) {
					_case_begin_21317744d:;
					{
						jule::Ptr<_246cc8862_scopeChecker> _221425_scope = _246ccb975_getRoot((*_self_)._field_lookup.operator jule::Ptr<_246cc8862_scopeChecker>());;
						_219141_d.get()._field_Mutable=((_221425_scope.get()._field_owner != nullptr) && (_221425_scope.get()._field_owner.get()._field_Owner == _219155_s));
					}
				}
				_match_end_2131773e8:;
			};
		};
		return _219141_d;
	};
	;
	jule::Ptr<_246cab768_Fn> _222317_m = _24611b4ad_FindMethod(_219155_s.ptr(), _219174_si.get()._field_Ident.get()._field_Kind,false);;
	if ((_222317_m == nullptr)) {
		_246d61422_pushErr(&(*_self_), _219174_si.get()._field_Ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_219155_s.get()._field_Decl.get()._field_Ident),jule::Any(_219174_si.get()._field_Ident.get()._field_Kind)}));
		return nullptr;
	};
	if ((!(_246ceb9a6_isAccessibleDefine((*_self_)._field_s.ptr(), _222317_m.get()._field_Public,_222317_m.get()._field_Token)))) {
		_246d61422_pushErr(&(*_self_), _219174_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_222317_m.get()._field_Ident)}));
		_246d61741_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_24617b4da_IsRef(_222317_m.get()._field_Params[0LL].ptr()) && (!(_219193_ref)))) {
		_246d61422_pushErr(&(*_self_), _219174_si.get()._field_Ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_246d6b185_checkDeprecated(&(*_self_), _222317_m.get()._field_Directives,_219174_si.get()._field_Ident);
	jule::Ptr<_246cabb42_FnIns> _223917_ins = _24618225a_instance(_222317_m);;
	_223917_ins.get()._field_Owner=_219155_s;
	_21300640e_pushReference(&(*_self_), _223917_ins);
	jule::Ptr<_246d5e398_Data> _224217_model = jule::new_ptr<_246d5e398_Data>((*(_219141_d)));;
	_219141_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca7b2c_StructSubIdentExprModel>(_246ca7b2c_StructSubIdentExprModel{._field_Token=_219174_si.get()._field_Ident, ._field_Expr=_224217_model, ._field_ExprKind=_219141_d.get()._field_Kind, ._field_Method=_223917_ins, ._field_Owner=_219155_s}));
	_219141_d.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_223917_ins, 1)});
	return _219141_d;
}



inline jule::Ptr<_246d5e398_Data> _246d7b1ea_evalSliceSubIdent(_246d60e16_Eval* _self_, jule::Ptr<_246d5e398_Data> _225440_d, jule::Ptr<_24496dc35_Token> _225454_ident) {
	{
		auto &_match_expr{ _225454_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_2131818db:;
			{
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(jule::new_ptr<_246cabb42_FnIns>(_246cabb42_FnIns{._field_Params=jule::Slice<jule::Ptr<_246cab955_ParamIns>>::make({jule::new_ptr<_246cab955_ParamIns>(_246cab955_ParamIns{._field_Decl=jule::new_ptr<_246cab57b_Param>(_246cab57b_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_246cab955_ParamIns>(_246cab955_ParamIns{._field_Decl=jule::new_ptr<_246cab57b_Param>(_246cab57b_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_246d5e398_Data>(jule::Ptr<_246d60e16_Eval>&,jule::Ptr<_24612e12a_FnCallExpr>&,jule::Ptr<_246d5e398_Data>&)>(_246e4ae02_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_225440_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca83d0_CommonSubIdentExprModel>(_246ca83d0_CommonSubIdentExprModel{._field_ExprKind=_225440_d.get()._field_Kind, ._field_Expr=_225440_d.get()._field_Model, ._field_Token=_225454_ident, ._field_Ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_213181875:;
			{
				_246d61422_pushErr(&(*_self_), _225454_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_225440_d.get()._field_Kind.ptr())),jule::Any(_225454_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_21318180e:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d7b5a2_evalArraySubIdent(_246d60e16_Eval* _self_, jule::Ptr<_246d5e398_Data> _229140_d, jule::Ptr<_24496dc35_Token> _229154_ident) {
	{
		auto &_match_expr{ _229154_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_21042d51a:;
			{
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(jule::new_ptr<_246cabb42_FnIns>(_246cabb42_FnIns{._field_Params=jule::Slice<jule::Ptr<_246cab955_ParamIns>>::make({jule::new_ptr<_246cab955_ParamIns>(_246cab955_ParamIns{._field_Decl=jule::new_ptr<_246cab57b_Param>(_246cab57b_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_246cab955_ParamIns>(_246cab955_ParamIns{._field_Decl=jule::new_ptr<_246cab57b_Param>(_246cab57b_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_246d5e398_Data>(jule::Ptr<_246d60e16_Eval>&,jule::Ptr<_24612e12a_FnCallExpr>&,jule::Ptr<_246d5e398_Data>&)>(_246e4ae02_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_229140_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca83d0_CommonSubIdentExprModel>(_246ca83d0_CommonSubIdentExprModel{._field_ExprKind=_229140_d.get()._field_Kind, ._field_Expr=_229140_d.get()._field_Model, ._field_Token=_229154_ident, ._field_Ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_228ceb74e:;
			{
				_246d61422_pushErr(&(*_self_), _229154_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_229140_d.get()._field_Kind.ptr())),jule::Any(_229154_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_2478c8c47:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d7b8b0_evalIntTypeStatic(_246d60e16_Eval* _self_, jule::Ptr<_24496dc35_Token> _232836_ident) {
	;
	{
		auto &_match_expr{ _232836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_2478da8e6:;
			{
				jule::Ptr<_2461e4872_Const> _233221_c = static__246204db0_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2466648a2_Max(jule::Str("int", 3)))));;
				_233221_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_233221_c), ._field_Constant=_233221_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_2478d0831:;
			{
				jule::Ptr<_2461e4872_Const> _234021_c = static__246204db0_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24665ba75_Min(jule::Str("int", 3)))));;
				_234021_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_234021_c), ._field_Constant=_234021_c});
			}
		}
		else {
			_case_begin_21055d727:;
			{
				_246d61422_pushErr(&(*_self_), _232836_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3)),jule::Any(_232836_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_210575178:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d7bbbd_evalUintTypeStatic(_246d60e16_Eval* _self_, jule::Ptr<_24496dc35_Token> _235337_ident) {
	;
	{
		auto &_match_expr{ _235337_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_2478949e3:;
			{
				jule::Ptr<_2461e4872_Const> _235721_c = static__24621bde9_NewU64(static_cast<jule::U64>(static_cast<jule::U64>(_2466648a2_Max(jule::Str("uint", 4)))));;
				_235721_c.get()._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("uint", 4)), 6)}), ._field_Model=static_cast<jule::Any>(_235721_c), ._field_Constant=_235721_c});
			}
		}
		else {
			_case_begin_210641651:;
			{
				_246d61422_pushErr(&(*_self_), _235337_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4)),jule::Any(_235337_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_2105edc6d:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d7becb_evalI8TypeStatic(_246d60e16_Eval* _self_, jule::Ptr<_24496dc35_Token> _237035_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _237035_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_210447556:;
			{
				jule::Ptr<_2461e4872_Const> _237621_c = static__246204db0_NewI64(127LL);;
				_237621_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_237621_c), ._field_Constant=_237621_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_210647b30:;
			{
				jule::Ptr<_2461e4872_Const> _238421_c = static__246204db0_NewI64(-128LL);;
				_238421_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_238421_c), ._field_Constant=_238421_c});
			}
		}
		else {
			_case_begin_21054b57d:;
			{
				_246d61422_pushErr(&(*_self_), _237035_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2)),jule::Any(_237035_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_228d77e4b:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d7c2d9_evalI16TypeStatic(_246d60e16_Eval* _self_, jule::Ptr<_24496dc35_Token> _239736_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _239736_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_2106474ae:;
			{
				jule::Ptr<_2461e4872_Const> _240321_c = static__246204db0_NewI64(32767LL);;
				_240321_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_240321_c), ._field_Constant=_240321_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_210580716:;
			{
				jule::Ptr<_2461e4872_Const> _241121_c = static__246204db0_NewI64(-32768LL);;
				_241121_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_241121_c), ._field_Constant=_241121_c});
			}
		}
		else {
			_case_begin_21063c63b:;
			{
				_246d61422_pushErr(&(*_self_), _239736_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3)),jule::Any(_239736_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_2104458c8:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d7c5e7_evalI32TypeStatic(_246d60e16_Eval* _self_, jule::Ptr<_24496dc35_Token> _242436_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _242436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_2105e9d8a:;
			{
				jule::Ptr<_2461e4872_Const> _243021_c = static__246204db0_NewI64(2147483647LL);;
				_243021_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_243021_c), ._field_Constant=_243021_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_210408ea7:;
			{
				jule::Ptr<_2461e4872_Const> _243821_c = static__246204db0_NewI64(-2147483648LL);;
				_243821_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_243821_c), ._field_Constant=_243821_c});
			}
		}
		else {
			_case_begin_2478c9363:;
			{
				_246d61422_pushErr(&(*_self_), _242436_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3)),jule::Any(_242436_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_21064ceba:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d7c905_evalI64TypeStatic(_246d60e16_Eval* _self_, jule::Ptr<_24496dc35_Token> _245136_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _245136_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_21040901d:;
			{
				jule::Ptr<_2461e4872_Const> _245721_c = static__246204db0_NewI64(jule::MAX_I64);;
				_245721_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_245721_c), ._field_Constant=_245721_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_2104256dd:;
			{
				jule::Ptr<_2461e4872_Const> _246521_c = static__246204db0_NewI64(jule::MIN_I64);;
				_246521_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_246521_c), ._field_Constant=_246521_c});
			}
		}
		else {
			_case_begin_228d7be61:;
			{
				_246d61422_pushErr(&(*_self_), _245136_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3)),jule::Any(_245136_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_24790635c:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d7cc13_evalU8TypeStatic(_246d60e16_Eval* _self_, jule::Ptr<_24496dc35_Token> _247835_ident) {
	;
	;
	{
		auto &_match_expr{ _247835_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_21058097a:;
			{
				jule::Ptr<_2461e4872_Const> _248321_c = static__24621bde9_NewU64(255LLU);;
				_248321_c.get()._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("u8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_248321_c), ._field_Constant=_248321_c});
			}
		}
		else {
			_case_begin_210425754:;
			{
				_246d61422_pushErr(&(*_self_), _247835_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2)),jule::Any(_247835_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_228d88104:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d7d021_evalU16TypeStatic(_246d60e16_Eval* _self_, jule::Ptr<_24496dc35_Token> _249636_ident) {
	;
	;
	{
		auto &_match_expr{ _249636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_21047918c:;
			{
				jule::Ptr<_2461e4872_Const> _250121_c = static__24621bde9_NewU64(65535LLU);;
				_250121_c.get()._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("u16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_250121_c), ._field_Constant=_250121_c});
			}
		}
		else {
			_case_begin_210640a29:;
			{
				_246d61422_pushErr(&(*_self_), _249636_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3)),jule::Any(_249636_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_2105d69ae:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d7d32e_evalU32TypeStatic(_246d60e16_Eval* _self_, jule::Ptr<_24496dc35_Token> _251436_ident) {
	;
	;
	{
		auto &_match_expr{ _251436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_210545489:;
			{
				jule::Ptr<_2461e4872_Const> _251921_c = static__24621bde9_NewU64(4294967295LLU);;
				_251921_c.get()._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("u32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_251921_c), ._field_Constant=_251921_c});
			}
		}
		else {
			_case_begin_210580cdd:;
			{
				_246d61422_pushErr(&(*_self_), _251436_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3)),jule::Any(_251436_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_210543d5b:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d7d63c_evalU64TypeStatic(_246d60e16_Eval* _self_, jule::Ptr<_24496dc35_Token> _253236_ident) {
	;
	;
	{
		auto &_match_expr{ _253236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_21134ed42:;
			{
				jule::Ptr<_2461e4872_Const> _253721_c = static__24621bde9_NewU64(jule::MAX_U64);;
				_253721_c.get()._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("u64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_253721_c), ._field_Constant=_253721_c});
			}
		}
		else {
			_case_begin_2478945a3:;
			{
				_246d61422_pushErr(&(*_self_), _253236_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3)),jule::Any(_253236_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_21134eb44:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d7d94a_evalF32TypeStatic(_246d60e16_Eval* _self_, jule::Ptr<_24496dc35_Token> _255036_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _255036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_21135341c:;
			{
				jule::Ptr<_2461e4872_Const> _255721_c = static__2462397c9_NewF64(340282346638528860000000000000000000000.0);;
				_255721_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_255721_c), ._field_Constant=_255721_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_211353483:;
			{
				jule::Ptr<_2461e4872_Const> _256521_c = static__2462397c9_NewF64(-340282346638528860000000000000000000000.0);;
				_256521_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_256521_c), ._field_Constant=_256521_c});
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_2113534e9:;
			{
				jule::Ptr<_2461e4872_Const> _257321_c = static__2462397c9_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				_257321_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_257321_c), ._field_Constant=_257321_c});
			}
		}
		else {
			_case_begin_211353373:;
			{
				_246d61422_pushErr(&(*_self_), _255036_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3)),jule::Any(_255036_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_21135330c:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d7dc58_evalF64TypeStatic(_246d60e16_Eval* _self_, jule::Ptr<_24496dc35_Token> _258636_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _258636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_21135908d:;
			{
				jule::Ptr<_2461e4872_Const> _259321_c = static__2462397c9_NewF64(jule::MAX_F64);;
				_259321_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_259321_c), ._field_Constant=_259321_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_211359104:;
			{
				jule::Ptr<_2461e4872_Const> _260121_c = static__2462397c9_NewF64(jule::MIN_F64);;
				_260121_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_260121_c), ._field_Constant=_260121_c});
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_21135916a:;
			{
				jule::Ptr<_2461e4872_Const> _260921_c = static__2462397c9_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				_260921_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_260921_c), ._field_Constant=_260921_c});
			}
		}
		else {
			_case_begin_211358ee4:;
			{
				_246d61422_pushErr(&(*_self_), _258636_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3)),jule::Any(_258636_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_211358e7d:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d7e110_evalPrimStatic(_246d60e16_Eval* _self_, jule::Str _262233_kind, jule::Ptr<_24496dc35_Token> _262244_ident) {
	{
		auto &_match_expr{ _262233_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_21135dc41:;
			{
				return _246d7b8b0_evalIntTypeStatic(&(*_self_), _262244_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_21135dca7:;
			{
				return _246d7bbbd_evalUintTypeStatic(&(*_self_), _262244_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_21135e648:;
			{
				return _246d7becb_evalI8TypeStatic(&(*_self_), _262244_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_21135e6ae:;
			{
				return _246d7c2d9_evalI16TypeStatic(&(*_self_), _262244_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_21135e725:;
			{
				return _246d7c5e7_evalI32TypeStatic(&(*_self_), _262244_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_21135e78b:;
			{
				return _246d7c905_evalI64TypeStatic(&(*_self_), _262244_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_21135e813:;
			{
				return _246d7cc13_evalU8TypeStatic(&(*_self_), _262244_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_21135e88a:;
			{
				return _246d7d021_evalU16TypeStatic(&(*_self_), _262244_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_21135e945:;
			{
				return _246d7d32e_evalU32TypeStatic(&(*_self_), _262244_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_21135e9ab:;
			{
				return _246d7d63c_evalU64TypeStatic(&(*_self_), _262244_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_21135ea22:;
			{
				return _246d7d94a_evalF32TypeStatic(&(*_self_), _262244_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_21135ea88:;
			{
				return _246d7dc58_evalF64TypeStatic(&(*_self_), _262244_ident);
			}
		}
		else {
			_case_begin_21135da32:;
			{
				_246d61422_pushErr(&(*_self_), _262244_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_262233_kind),jule::Any(_262244_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_21135ad4d:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d7e4b7_evalTypeStatic(_246d60e16_Eval* _self_, jule::Ptr<_246d5e398_Data> _265437_d, jule::Ptr<_24612d59c_SubIdentExpr> _265451_si) {
	{
		
		if ((_246d920ac_Prim(_265437_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_21136472a:;
			{
				return _246d7e110_evalPrimStatic(&(*_self_), _246d94cd5_Str(_246d920ac_Prim(_265437_d.get()._field_Kind.ptr()).ptr()),_265451_si.get()._field_Ident);
			}
		}
		else if ((_246d927e9_Enum(_265437_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_211364791:;
			{
				return _246d79b88_evalEnumStatic(&(*_self_), _246d927e9_Enum(_265437_d.get()._field_Kind.ptr()),_265451_si.get()._field_Ident);
			}
		}
		else if ((_246d92a5d_TypeEnum(_265437_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_211364807:;
			{
				return _246d7a040_evalTypeEnumStatic(&(*_self_), _246d92a5d_TypeEnum(_265437_d.get()._field_Kind.ptr()),_265451_si.get()._field_Ident);
			}
		}
		else if ((_246d9350e_Struct(_265437_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_211365561:;
			{
				return _246d7a3e7_evalStructStatic(&(*_self_), _246d9350e_Struct(_265437_d.get()._field_Kind.ptr()),_265451_si.get()._field_Ident);
			}
		}
		else {
			_case_begin_21136465e:;
			{
				_246d61422_pushErr(&(*_self_), _265451_si.get()._field_Ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_265437_d.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_2113645a4:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d7e86e_evalObjSubIdent(_246d60e16_Eval* _self_, jule::Ptr<_246d5e398_Data> _267038_d, jule::Ptr<_24612d59c_SubIdentExpr> _267052_si) {
	if (_2449714c9_IsIgnoreIdent(_267052_si.get()._field_Ident.get()._field_Kind)) {
		_246d61422_pushErr(&(*_self_), _267052_si.get()._field_Ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_246d8ee9a_TypeKind> _267617_kind = _267038_d.get()._field_Kind;;
	{
		
		if ((_246d92585_Ptr(_267038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_21136abe8:;
			{
				jule::Ptr<_246d9b76a_Ptr> _267917_ptr = _246d92585_Ptr(_267038_d.get()._field_Kind.ptr());;
				if (_246d9c23d_IsUnsafe(_267917_ptr.ptr())) {
					goto _match_end_21136aa94;
				};
				if (((!(_267052_si.get()._field_IsSelf)) && (!(_246d61d5c_isUnsafe(&(*_self_)))))) {
					_246d61422_pushErr(&(*_self_), _267052_si.get()._field_Ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_267617_kind=_246d92585_Ptr(_267038_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_246d92321_Sptr(_267038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_21136ac5e:;
			{
				_267617_kind=_246d92321_Sptr(_267038_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_21136aa94:;
	};
	{
		
		if ((_246d93773_Trait(_267038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_21136d9a9:;
			{
				return _246d7a848_evalTraitSubIdent(&(*_self_), _267038_d,_246d93773_Trait(_267038_d.get()._field_Kind.ptr()),_267052_si.get()._field_Ident);
			}
		}
		else if ((_246d9350e_Struct(_267617_kind.ptr()) != nullptr)) {
			_case_begin_21136da31:;
			{
				jule::Ptr<_246142319_StructIns> _269517_s = _246d9350e_Struct(_267617_kind.ptr());;
				if (_246d8acba_isInstancedStruct(_269517_s)) {
					jule::Bool _269725_usedReferenceElem = (_246d92321_Sptr(_267038_d.get()._field_Kind.ptr()) != nullptr);;
					return _246d7ad43_evalStructSubIdent(&(*_self_), _267038_d,_246d9350e_Struct(_267617_kind.ptr()),_267052_si,_269725_usedReferenceElem);
				};
			}
		}
		else if ((_246d93036_Slc(_267617_kind.ptr()) != nullptr)) {
			_case_begin_21136daa8:;
			{
				return _246d7b1ea_evalSliceSubIdent(&(*_self_), _267038_d,_267052_si.get()._field_Ident);
			}
		}
		else if ((_246d92cc2_Arr(_267617_kind.ptr()) != nullptr)) {
			_case_begin_21136db30:;
			{
				return _246d7b5a2_evalArraySubIdent(&(*_self_), _267038_d,_267052_si.get()._field_Ident);
			}
		}
		_match_end_21136d8cc:;
	};
	_246d61422_pushErr(&(*_self_), _267052_si.get()._field_Ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_267038_d.get()._field_Kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_246d5e398_Data> _246d7eb7c_evalSubIdent(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_24612d59c_SubIdentExpr> _270936_si) {
	jule::Ptr<_246d8ee9a_TypeKind> _271017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_271017_prefix;
	});;
	jule::Ptr<_246d5e398_Data> _271417_d = _246d81079_evalExprKind(_self_, _270936_si.get()._field_Expr.get()._field_Kind);;
	if ((_271417_d == nullptr)) {
		return nullptr;
	};
	if (_271417_d.get()._field_Decl) {
		return _246d7e4b7_evalTypeStatic(_self_.ptr(), _271417_d,_270936_si);
	};
	return _246d7e86e_evalObjSubIdent(_self_.ptr(), _271417_d,_270936_si);
}



inline jule::Ptr<_246d5e398_Data> _246d7ee8a_evalTuple(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_24612acc5_TupleExpr> _272633_tup) {
	jule::Ptr<_246d996e1_Tuple> _272717_tupT = jule::new_ptr<_246d996e1_Tuple>();;
	_272717_tupT.get()._field_Types=jule::Slice<jule::Ptr<_246d8ee9a_TypeKind>>::alloc(0LL, _272633_tup.get()._field_Expr.len());
	jule::Ptr<_246ca85bc_TupleExprModel> _273017_model = jule::new_ptr<_246ca85bc_TupleExprModel>(_246ca85bc_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_246d5e398_Data>>::alloc(0LL, _272633_tup.get()._field_Expr.len())});;
	jule::Bool _273417_ok = true;;
	{
		auto &expr = _272633_tup.get()._field_Expr;
		auto it = expr.begin();
		_iter_begin_21137894d:;
		if (it != expr.end()) {
			jule::Ptr<_24612a148_Expr> _273521_expr = *it;
			{
				jule::Ptr<_246d5e398_Data> _273621_d = _246d81079_evalExprKind(_self_, _273521_expr.get()._field_Kind);;
				if ((_273621_d == nullptr)) {
					_273417_ok=false;
					goto _iter_next_21137894d;
				};
				_272717_tupT.get()._field_Types = jule::alloc_for_append(_272717_tupT.get()._field_Types,1);_272717_tupT.get()._field_Types.__push(_273621_d.get()._field_Kind);;
				_273017_model.get()._field_Datas = jule::alloc_for_append(_273017_model.get()._field_Datas,1);_273017_model.get()._field_Datas.__push(_273621_d);;
			}
			_iter_next_21137894d:;
			++it;
			goto _iter_begin_21137894d;
		}
		_iter_end_21137894d:;
	};
	if ((!(_273417_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_272717_tupT, 9)}), ._field_Model=static_cast<jule::Any>(_273017_model), });
}



inline jule::Ptr<_246d5e398_Data> _246d80342_evalMap(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_246d9a219_Map> _275531_m, jule::Ptr<_24613077a_BraceLit> _275544_lit) {
	jule::Ptr<_246ca7335_MapExprModel> _275617_model = jule::new_ptr<_246ca7335_MapExprModel>(_246ca7335_MapExprModel{._field_KeyKind=_275531_m.get()._field_Key, ._field_ValKind=_275531_m.get()._field_Val, });;
	{
		auto &expr = _275544_lit.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_21137be5c:;
		if (it != expr.end()) {
			jule::Ptr<_24612a148_Expr> _276121_expr = *it;
			{
				{
					auto &_match_expr{ _276121_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_246131050_KeyValPair>>()) {
						_case_begin_21137c9c9:;
						{
							goto _match_end_21137c7a9;
						}
					}
					else {
						_case_begin_21137c963:;
						{
							_246d61422_pushErr(_self_.ptr(), _275544_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_21137c7a9:;
				};
				jule::Ptr<_246131050_KeyValPair> _277121_pair = _276121_expr.get()._field_Kind.operator jule::Ptr<_246131050_KeyValPair>();;
				jule::Ptr<_246d5e398_Data> _277321_key = _246d81079_evalExprKind(_self_, _277121_pair.get()._field_Key.get()._field_Kind);;
				if ((_277321_key == nullptr)) {
					return nullptr;
				};
				jule::Ptr<_246d5e398_Data> _277821_val = _246d81079_evalExprKind(_self_, _277121_pair.get()._field_Val.get()._field_Kind);;
				if ((_277821_val == nullptr)) {
					return nullptr;
				};
				_246d031b6_checkAssignType(_self_.get()._field_s, false,_275531_m.get()._field_Key,_277321_key,_277121_pair.get()._field_Colon);
				_246d031b6_checkAssignType(_self_.get()._field_s, false,_275531_m.get()._field_Val,_277821_val,_277121_pair.get()._field_Colon);
				_275617_model.get()._field_Entries = jule::alloc_for_append(_275617_model.get()._field_Entries,1);_275617_model.get()._field_Entries.__push(jule::new_ptr<_246ca7148_KeyValPairExprModel>(_246ca7148_KeyValPairExprModel{._field_Key=_277321_key.get()._field_Model, ._field_Val=_277821_val.get()._field_Model}));;
			}
			_iter_next_21137be5c:;
			++it;
			goto _iter_begin_21137be5c;
		}
		_iter_end_21137be5c:;
	};
	return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_275531_m, 10)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_275617_model), });
}



inline jule::Ptr<_246d5e398_Data> _246d80650_evalBraceLit(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_24613077a_BraceLit> _279936_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_211382847:;
			{
				_246d61422_pushErr(_self_.ptr(), _279936_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_246d939d7_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_2113828ad:;
			{
				return _246d80342_evalMap(_self_, _246d939d7_Map(_self_.get()._field_prefix.ptr()),_279936_lit);
			}
		}
		else if ((_246d9350e_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_211382924:;
			{
				return _246d77988_evalStructLitExplicit(_self_, _246d9350e_Struct(_self_.get()._field_prefix.ptr()),_279936_lit.get()._field_Exprs,_279936_lit.get()._field_Token);
			}
		}
		else {
			_case_begin_21138278c:;
			{
				_246d61422_pushErr(_self_.ptr(), _279936_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_2113826d2:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d8095d_evalAnonFn(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_2461375a6_FnDecl> _281434_decl) {
	_246d9d4c5_typeChecker _281517_tc = _246d9d4c5_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_246cabb42_FnIns> _282017_ins = _246da4d17_buildFn(&_281517_tc, _281434_decl);;
	if ((_282017_ins == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_246cc8862_scopeChecker>>()) {
			_case_begin_211387b6b:;
			{
				jule::Ptr<_246cc8862_scopeChecker> _282621_sc = _self_.get()._field_lookup.operator jule::Ptr<_246cc8862_scopeChecker>();;
				jule::Ptr<_246cc8862_scopeChecker> _282721_scc = _246cd8894_newChildChecker(_282621_sc);;
				_282721_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_246cc75ca_scopeLabel>>>(nullptr);
				_282721_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_246cc7a4d_scopeGoto>>>(nullptr);
				_282721_scc.get()._field_owner=nullptr;
				_282721_scc.get()._field_childIndex=0LL;
				_282721_scc.get()._field_it=0LLU;
				_282721_scc.get()._field_cse=0LLU;
				_282721_scc.get()._field_owner=_282017_ins;
				_246d118bc_checkFnInsSc(_self_.get()._field_s.ptr(), _282017_ins,_282721_scc);
			}
		}
		else {
			_case_begin_211387363:;
			{
				_246d11e61_checkFnIns(_self_.get()._field_s, _282017_ins);
			}
		}
		_match_end_21138730d:;
	};
	return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_282017_ins, 1)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca6e5b_AnonFnExprModel>(_246ca6e5b_AnonFnExprModel{._field_Func=_282017_ins, ._field_Global=_246d620c1_isGlobal(_self_.ptr())})), });
}



inline jule::Ptr<_246d5e398_Data> _246d80c6b_evalBinop(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_24612da20_BinopExpr> _284933_op) {
	_246d838a6_binaryEval _285017_bs = static__246d83e6c_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_246d94972_Prim> _285317_prim = _246d920ac_Prim(_self_.get()._field_prefix.ptr());;
		if (((_285317_prim == nullptr) || (!(_246ca3c5a_IsNum(_246d94cd5_Str(_285317_prim.ptr())))))) {
			jule::Ptr<_246d8ee9a_TypeKind> _285525_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_285525_prefix;
			});;
			return _246d8924c_eval(&_285017_bs, _284933_op);
		};
	};
	return _246d8924c_eval(&_285017_bs, _284933_op);
}



inline jule::Ptr<_246d5e398_Data> _246d81079_evalExprKind(jule::Ptr<_246d60e16_Eval> _self_, jule::Any _286436_kind) {
	{
		auto &_match_expr{ _286436_kind };
		
		if (_match_expr.type_is<jule::Ptr<_24612a434_RangeExpr>>()) {
			_case_begin_21139016d:;
			{
				jule::Ptr<_24612a434_RangeExpr> _286721_e = _286436_kind.operator jule::Ptr<_24612a434_RangeExpr>();;
				return _246d81079_evalExprKind(_self_, _286721_e.get()._field_Expr.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24612b17c_LitExpr>>()) {
			_case_begin_211390338:;
			{
				return _246d63c71_evalLit(_self_.ptr(), _286436_kind.operator jule::Ptr<_24612b17c_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24612bd09_IdentExpr>>()) {
			_case_begin_21139039e:;
			{
				return _246d6d088_evalIdent(_self_.ptr(), _286436_kind.operator jule::Ptr<_24612bd09_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24612c513_UnaryExpr>>()) {
			_case_begin_211390415:;
			{
				return _246d6d396_evalUnary(_self_, _286436_kind.operator jule::Ptr<_24612c513_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24612c8ba_VariadicExpr>>()) {
			_case_begin_21139048c:;
			{
				return _246d6d6a4_evalVariadic(_self_, _286436_kind.operator jule::Ptr<_24612c8ba_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24612b886_UnsafeExpr>>()) {
			_case_begin_211390514:;
			{
				return _246d6d9b2_evalUnsafe(_self_, _286436_kind.operator jule::Ptr<_24612b886_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246131737_SliceExpr>>()) {
			_case_begin_21139058b:;
			{
				return _246d6e52e_evalSliceExpr(_self_, _286436_kind.operator jule::Ptr<_246131737_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2461320a6_IndexingExpr>>()) {
			_case_begin_211390646:;
			{
				return _246d72873_evalIndexing(_self_, _286436_kind.operator jule::Ptr<_2461320a6_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2461326b1_SlicingExpr>>()) {
			_case_begin_2113906ac:;
			{
				return _246d73a3e_evalSlicing(_self_, _286436_kind.operator jule::Ptr<_2461326b1_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24612cc72_CastExpr>>()) {
			_case_begin_211390723:;
			{
				return _246d77229_evalCast(_self_, _286436_kind.operator jule::Ptr<_24612cc72_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24612d129_NsSelectionExpr>>()) {
			_case_begin_211390789:;
			{
				return _246d77537_evalNsSelection(_self_.ptr(), _286436_kind.operator jule::Ptr<_24612d129_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246130307_StructLit>>()) {
			_case_begin_211390811:;
			{
				return _246d77c96_evalStructLit(_self_, _286436_kind.operator jule::Ptr<_246130307_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246125b27_TypeDecl>>()) {
			_case_begin_211390888:;
			{
				return _246d78318_evalType(_self_.ptr(), _286436_kind.operator jule::Ptr<_246125b27_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24612e12a_FnCallExpr>>()) {
			_case_begin_211390910:;
			{
				return _246d797d1_evalFnCall(_self_, _286436_kind.operator jule::Ptr<_24612e12a_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24612d59c_SubIdentExpr>>()) {
			_case_begin_211390987:;
			{
				return _246d7eb7c_evalSubIdent(_self_, _286436_kind.operator jule::Ptr<_24612d59c_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24612acc5_TupleExpr>>()) {
			_case_begin_211390a0e:;
			{
				return _246d7ee8a_evalTuple(_self_, _286436_kind.operator jule::Ptr<_24612acc5_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24613077a_BraceLit>>()) {
			_case_begin_211390a86:;
			{
				return _246d80650_evalBraceLit(_self_, _286436_kind.operator jule::Ptr<_24613077a_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2461375a6_FnDecl>>()) {
			_case_begin_211390b0d:;
			{
				return _246d8095d_evalAnonFn(_self_, _286436_kind.operator jule::Ptr<_2461375a6_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24612da20_BinopExpr>>()) {
			_case_begin_211390b85:;
			{
				return _246d80c6b_evalBinop(_self_, _286436_kind.operator jule::Ptr<_24612da20_BinopExpr>());
			}
		}
		else {
			_case_begin_21138edb5:;
			{
				return nullptr;
			}
		}
		_match_end_21138ecc7:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d81387_eval(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_24612a148_Expr> _291228_expr) {
	jule::Ptr<_246d5e398_Data> _291317_d = _246d81079_evalExprKind(_self_, _291228_expr.get()._field_Kind);;
	if (((_291317_d == nullptr) || (_291317_d.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	{
		
		if ((_246d9329a_Fn(_291317_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_21139b3ee:;
			{
				jule::Ptr<_246cabb42_FnIns> _292021_f = _246d9329a_Fn(_291317_d.get()._field_Kind.ptr());;
				if (_246cabd2e_IsBuiltin(_292021_f.ptr())) {
					goto _match_end_21139b278;
				};
				if ((_292021_f.get()._field_Generics.len() != _292021_f.get()._field_Decl.get()._field_Generics.len())) {
					_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _291228_expr.get()._field_Token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (((!(_292021_f.get()._field_Decl.get()._field_Statically)) && _24618a829_IsMethod(_292021_f.get()._field_Decl.ptr()))) {
					_246ceb2d0_pushErr(_self_.get()._field_s.ptr(), _291228_expr.get()._field_Token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_21139b278:;
	};
	return _291317_d;
}



inline jule::Ptr<_246d5e398_Data> _246d81695_evalExpr(jule::Ptr<_246d60e16_Eval> _self_, jule::Ptr<_24612a148_Expr> _293832_expr) {
	jule::Ptr<_246d5e398_Data> _293917_d = _246d81387_eval(_self_, _293832_expr);;
	{
		
		if ((_293917_d == nullptr)) {
			_case_begin_2113a049c:;
			{
				return nullptr;
			}
		}
		else if (_293917_d.get()._field_Decl) {
			_case_begin_2113a0524:;
			{
				_246d61422_pushErr(_self_.ptr(), _293832_expr.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_2113a0414:;
			{
				return _293917_d;
			}
		}
		_match_end_2113a039d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _246d60e16_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _246d81b18_unaryEval static__246d820be_new(jule::Ptr<_246d60e16_Eval> _295923_e) {
	return _246d81b18_unaryEval{._field_e=_295923_e, };
}



inline void _246d8229a_minus(_246d81b18_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_2113a227e:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_246d920ac_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2113a2735:;
			{
				if ((!(_246ca3c5a_IsNum(_246d90396_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_246d9350e_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2113a279b:;
			{
				if ((_246d9350e_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_2113a1dd8:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_2113a19ed:;
	};
	if (_246d5ec5b_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_24625698e_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_2113a5d87:;
				{
					_2462617ce_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_24624696d_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_2462570dd_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_2113a5e0e:;
				{
					_2462496a7_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_24623bb1c_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_2462069a5_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_2113a5e86:;
				{
					_2462496a7_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_24624782b_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_2113a5c55:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca5e05_UnaryExprModel>(_246ca5e05_UnaryExprModel{._field_Expr=jule::new_ptr<_246d5e398_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _246d82476_plus(_246d81b18_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_2113aabe4:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_246d920ac_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2113ab19a:;
			{
				if ((!(_246ca3c5a_IsNum(_246d90396_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_246d9350e_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2113ab211:;
			{
				if ((_246d9350e_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_2113aa84d:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_2113aa771:;
	};
	if (_246d5ec5b_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_24625698e_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_2113ae7ec:;
				{
					_2462617ce_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_24624696d_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_2462570dd_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_2113ae874:;
				{
					_2462496a7_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_24623bb1c_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_2462069a5_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_2113ae8eb:;
				{
					_2462496a7_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_24624782b_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_2113ae6ba:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca5e05_UnaryExprModel>(_246ca5e05_UnaryExprModel{._field_Expr=jule::new_ptr<_246d5e398_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _246d82652_caret(_246d81b18_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_2113b4637:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_246d920ac_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2113b4add:;
			{
				if ((!(_246ca39e6_IsInt(_246d90396_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_246d9350e_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2113b4b54:;
			{
				if ((_246d9350e_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_2113b4291:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_2113b41b4:;
	};
	if (_246d5ec5b_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_2462570dd_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_2113b822e:;
				{
					_2462496a7_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_24623bb1c_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_2462069a5_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_2113b82a6:;
				{
					_246257462_SetU64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_24623cd0a_ReadU64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_2113b810d:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca5e05_UnaryExprModel>(_246ca5e05_UnaryExprModel{._field_Expr=jule::new_ptr<_246d5e398_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _246d8282d_excl(_246d81b18_unaryEval* _self_) {
	jule::Ptr<_246d94972_Prim> _307813_t = _246d920ac_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
	if (((_307813_t == nullptr) || (!(_246d97942_IsBool(_307813_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_246d5ec5b_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_246208de7_IsBool((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_2113bd3bb:;
				{
					_246260217_SetBool((*_self_)._field_d.get()._field_Constant.ptr(), (!(_24623d558_ReadBool((*_self_)._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_2113bd2ab:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca5e05_UnaryExprModel>(_246ca5e05_UnaryExprModel{._field_Expr=jule::new_ptr<_246d5e398_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _246d82a09_star(_246d81b18_unaryEval* _self_) {
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca5e05_UnaryExprModel>(_246ca5e05_UnaryExprModel{._field_Expr=jule::new_ptr<_246d5e398_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
	{
		
		if ((_246d92585_Ptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2113c16bb:;
			{
				if ((!(_246d61d5c_isUnsafe((*_self_)._field_e.ptr())))) {
					_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_246d9b76a_Ptr> _311021_t = _246d92585_Ptr((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_246d9c23d_IsUnsafe(_311021_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_Kind=_311021_t.get()._field_Elem;
			}
		}
		else if ((_246d92321_Sptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2113c1b72:;
			{
				(*_self_)._field_d.get()._field_Kind=_246d92321_Sptr((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_2113c1325:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_2113c12ae:;
	};
	(*_self_)._field_d.get()._field_Constant=nullptr;
	(*_self_)._field_d.get()._field_Lvalue=true;
}



inline void _246d82bd5_amper(_246d81b18_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_246ca62ce_StructLitExprModel>>()) {
			_case_begin_2113c7914:;
			{
				jule::Ptr<_246ca62ce_StructLitExprModel> _313021_lit = (*_self_)._field_d.get()._field_Model.operator jule::Ptr<_246ca62ce_StructLitExprModel>();;
				_246d89ed9_makeStructLitAlloc((*_self_)._field_d,_313021_lit);
			}
		}
		else {
			_case_begin_2113c61a4:;
			{
				{
					
					if (_246da6e90_canGetPtr((*_self_)._field_d)) {
						_case_begin_2113c6d86:;
						{
							(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(jule::new_ptr<_246d9b76a_Ptr>(_246d9b76a_Ptr{._field_Elem=(*_self_)._field_d.get()._field_Kind}), 12)});
							(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca5e05_UnaryExprModel>(_246ca5e05_UnaryExprModel{._field_Expr=jule::new_ptr<_246d5e398_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
						}
					}
					else {
						_case_begin_2113c676a:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_2113c668d:;
				};
			}
		}
		_match_end_2113c614e:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_Constant=nullptr;
		(*_self_)._field_d.get()._field_Lvalue=false;
	};
}



inline void _246d82db1_typeDecl(_246d81b18_unaryEval* _self_) {
	_246d9d4c5_typeChecker _315417_tc = _246d9d4c5_typeChecker{._field_s=(*_self_)._field_e.get()._field_s, ._field_rootLookup=(*_self_)._field_e.get()._field_lookup, ._field_lookup=(*_self_)._field_e.get()._field_lookup, ._field_errorToken=(*_self_)._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_2113ccb6c:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da36a6_buildPtrFromType(&_315417_tc, (*_self_)._field_d.get()._field_Kind), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_2113ca351:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da308a_buildSptrFromType(&_315417_tc, (*_self_)._field_d.get()._field_Kind), 7)});
			}
		}
		else {
			_case_begin_2113cb4c8:;
			{
				_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind),jule::Any(_246d90396_Str((*_self_)._field_d.get()._field_Kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_2113cb473:;
	};
	(*_self_)._field_d.get()._field_Decl=true;
}



inline void _246d8308c_evalData(_246d81b18_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_2113d0697:;
			{
				jule::Ptr<_246d8ee9a_TypeKind> _317721_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_246d81079_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
				(*_self_)._field_e.get()._field_prefix=_317721_prefix;
			}
		}
		else {
			_case_begin_2113d0125:;
			{
				(*_self_)._field_d=_246d81079_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
			}
		}
		_match_end_2113d006a:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d83367_eval(_246d81b18_unaryEval* _self_, jule::Ptr<_24612c513_UnaryExpr> _318627_u) {
	(*_self_)._field_u=_318627_u;
	_246d8308c_evalData(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	};
	if ((*_self_)._field_d.get()._field_Decl) {
		_246d82db1_typeDecl(&(*_self_));
		return (*_self_)._field_d;
	};
	jule::Ptr<_246d8ee9a_TypeKind> _319713_kind = (*_self_)._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_2113d4c73:;
			{
				_246d8229a_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_2113d4e4e:;
			{
				_246d82476_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_2113d4932:;
			{
				_246d82652_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_2113d4998:;
			{
				_246d8282d_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_2113d4a0e:;
			{
				_246d82a09_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_2113d4a86:;
			{
				_246d82bd5_amper(&(*_self_));
			}
		}
		else {
			_case_begin_2113d48bb:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_2113d4866:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_2113d512a:;
			{
				_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind),jule::Any(_246d90396_Str(_319713_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_246d5ec5b_IsConst((*_self_)._field_d.ptr())) {
			_case_begin_2113d5a10:;
			{
				(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>((*_self_)._field_d.get()._field_Constant);
			}
		}
		_match_end_2113d7171:;
	};
	(*_self_)._field_d.get()._field_Mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _246d81b18_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _246d838a6_binaryEval static__246d83e6c_newPlain(jule::Ptr<_246d60e16_Eval> _323528_e) {
	return _246d838a6_binaryEval{._field_e=_323528_e, };
}



inline _246d838a6_binaryEval static__246d842ad_new(jule::Ptr<_246d60e16_Eval> _324123_e, jule::Ptr<_24496dc35_Token> _324137_op) {
	return _246d838a6_binaryEval{._field_e=_324123_e, ._field_op=_324137_op};
}



inline jule::Bool _246d84522_checkTypeCompatibility(_246d838a6_binaryEval* _self_) {
	return _246d03617_checkTypeCompatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_Kind,(*_self_)._field_r.get()._field_Kind,(*_self_)._field_op);
}



inline jule::Bool _246d847b9_checkStructCommonOperatorCompatibility(_246d838a6_binaryEval* _self_) {
	jule::Ptr<_246cabb42_FnIns> _325517_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_2113dc2db:;
			{
				_325517_overload=_246d9350e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_2113dc352:;
			{
				_325517_overload=_246d9350e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_2113dc3b8:;
			{
				_325517_overload=_246d9350e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_2113dc42e:;
			{
				_325517_overload=_246d9350e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_2113dd540:;
			{
				_325517_overload=_246d9350e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_2113dd5a6:;
			{
				_325517_overload=_246d9350e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_2113dd61c:;
			{
				_325517_overload=_246d9350e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_2113dd683:;
			{
				_325517_overload=_246d9350e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_2113dd870:;
			{
				_325517_overload=_246d9350e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_2113dd8d6:;
			{
				_325517_overload=_246d9350e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_2113dc275:;
			{
				_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_246d90396_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return false;
			}
		}
		_match_end_2113dc220:;
	};
	if ((_325517_overload == nullptr)) {
		_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_246d90396_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
		return false;
	};
	jule::Ptr<_246cab955_ParamIns> _328717_p = _325517_overload.get()._field_Params[1LL];;
	return _246d031b6_checkAssignType((*_self_)._field_e.get()._field_s, _328717_p.get()._field_Decl.get()._field_Reference,_328717_p.get()._field_Kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_246d5e398_Data> _246d84a61_evalNil(_246d838a6_binaryEval* _self_) {
	if ((!(_246d9160b_NilCompatible((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3)),jule::Any(_246d90396_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_213192314:;
			{
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_21319229d:;
			{
				_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_213192204:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d84cc5_evalEnum(_246d838a6_binaryEval* _self_) {
	jule::Ptr<_246cb60e1_Enum> _331217_enm = _246d927e9_Enum((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_21319479a:;
			{
				jule::Ptr<_246d8ee9a_TypeKind> _331621_rkind = (*_self_)._field_r.get()._field_Kind;;
				if ((_246d927e9_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_331621_rkind=_246d927e9_Enum((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_246d03617_checkTypeCompatibility((*_self_)._field_e.get()._field_s, _331217_enm.get()._field_Kind.get()._field_Kind,_331621_rkind,(*_self_)._field_op)))) {
					return nullptr;
				};
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_213194745:;
	};
	if (((_246d927e9_Enum((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr) || (_331217_enm != _246d927e9_Enum((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_331217_enm.get()._field_Ident),jule::Any(_246d90396_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_21319930a:;
			{
				if ((!(_246ca3c5a_IsNum(_246d90396_Str(_331217_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_331217_enm.get()._field_Ident)}));
					return nullptr;
				};
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_213199371:;
			{
				if (((_246d920ac_Prim(_331217_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_246ca39e6_IsInt(_246d94cd5_Str(_246d920ac_Prim(_331217_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_331217_enm.get()._field_Ident)}));
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_213199294:;
			{
				_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_331217_enm.get()._field_Ident)}));
				return nullptr;
			}
		}
		_match_end_2131991d9:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d85039_evalTypeEnum(_246d838a6_binaryEval* _self_) {
	jule::Ptr<_246cb76db_TypeEnum> _336317_enm = _246d92a5d_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr());;
	if ((!(_246d84522_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2131a0bb3:;
			{
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_2131a0355:;
			{
				_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_246cb7a1b_Str(_336317_enm.ptr()))}));
				return nullptr;
			}
		}
		_match_end_2131a0a3c:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d8529d_evalSptr(_246d838a6_binaryEval* _self_) {
	if ((!(_246d84522_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2131a2ee5:;
			{
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_2131a2be8:;
			{
				_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_246d90396_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_2131a2412:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d85512_evalPtr(_246d838a6_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_2131a513a:;
			{
				if ((!(_246d84522_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_2131a51a1:;
			{
				if ((_246d92585_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				};
				if (_246d9c23d_IsUnsafe(_246d92585_Ptr((*_self_)._field_l.get()._field_Kind.ptr()).ptr())) {
					_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_246d90396_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				};
				if ((!(_246d8b12d_isPtrArithmeticCompatible((*_self_)._field_l,(*_self_)._field_r)))) {
					_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_2131a48dc:;
			{
				_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_246d90396_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_2131a447a:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d85776_evalArr(_246d838a6_binaryEval* _self_) {
	if ((!(_246d84522_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2131abd34:;
			{
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_2131aba04:;
			{
				_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_246d90396_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_2131abc68:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d859da_evalSlc(_246d838a6_binaryEval* _self_) {
	if ((!(_246d84522_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2131ae353:;
			{
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_2131ae056:;
			{
				_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_246d90396_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_2131ad770:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d85c4e_evalFn(_246d838a6_binaryEval* _self_) {
	if ((!(_246d84522_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2131b1872:;
			{
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_2131b1575:;
			{
				_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_246d90396_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_2131b0c8e:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d85eb3_evalStruct(_246d838a6_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_2131b32d0:;
			{
				if ((_246d9350e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_246d90396_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_2131b3346:;
			{
				if ((_246d9350e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_246d90396_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_2131b39b7:;
			{
				if ((_246d9350e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_246d90396_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_2131b3a2d:;
			{
				if ((_246d9350e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_246d90396_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2131b3a94:;
			{
				if ((!(_246d84522_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_2131b2d07:;
	};
	if ((!(_246d847b9_checkStructCommonOperatorCompatibility(&(*_self_))))) {
		return nullptr;
	};
	return (*_self_)._field_l;
}



inline jule::Ptr<_246d5e398_Data> _246d86227_evalTrait(_246d838a6_binaryEval* _self_) {
	if ((!(_246d84522_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2131bdce1:;
			{
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_2131bd6d6:;
			{
				_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_246d90396_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_2131bdc25:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d8648b_evalAny(_246d838a6_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2131c0e36:;
			{
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_2131c06d8:;
			{
				_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_2131c0276:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d86700_evalBool(_246d838a6_binaryEval* _self_) {
	if ((!(_246d84522_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_2131c3059:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_2131c2c5c:;
			{
				_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_246d90396_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_2131c2476:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d86964_evalStr(_246d838a6_binaryEval* _self_) {
	jule::Str _360517_rk = _246d90396_Str((*_self_)._field_r.get()._field_Kind.ptr());;
	if ((_360517_rk != jule::Str("str", 3))) {
		_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_360517_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_2131c6667:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_2131c66cd:;
			{
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_2131c5578:;
			{
				_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_2131c6513:;
	};
}



inline void _246d86b40_setTypeToGreater(_246d838a6_binaryEval* _self_) {
	jule::Ptr<_246d94972_Prim> _363213_lp = _246d920ac_Prim((*_self_)._field_l.get()._field_Kind.ptr());;
	jule::Ptr<_246d94972_Prim> _363313_rp = _246d920ac_Prim((*_self_)._field_r.get()._field_Kind.ptr());;
	if (_246d5ec5b_IsConst((*_self_)._field_l.ptr())) {
		if ((!(_246d5ec5b_IsConst((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
			(*_self_)._field_l.get()._field_Constant.get()._field_Kind=_363313_rp.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_246d5ec5b_IsConst((*_self_)._field_r.ptr())) {
		(*_self_)._field_r.get()._field_Constant.get()._field_Kind=_363213_lp.get()._field_Kind;
		return;;
	};
	_julec_label_set:;
	if (((*_self_)._field_l.get()._field_untyped && (!((*_self_)._field_r.get()._field_untyped)))) {
		(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
		if (_246d5ec5b_IsConst((*_self_)._field_l.ptr())) {
			(*_self_)._field_l.get()._field_Constant.get()._field_Kind=_363313_rp.get()._field_Kind;
		};
		(*_self_)._field_l.get()._field_untyped=false;
		return;;
	} else if (((!((*_self_)._field_l.get()._field_untyped)) && (*_self_)._field_r.get()._field_untyped)) {
		return;;
	};
	if (_246ca3342_IsGreater(_363313_rp.get()._field_Kind,_363213_lp.get()._field_Kind)) {
		(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
		if (_246d5ec5b_IsConst((*_self_)._field_l.ptr())) {
			(*_self_)._field_l.get()._field_Constant.get()._field_Kind=_363313_rp.get()._field_Kind;
		};
	};
}



inline void _246d86d82_checkModData(_246d838a6_binaryEval* _self_, jule::Ptr<_246d5e398_Data>& _366536_d) {
	if ((!(_246d5ec5b_IsConst(_366536_d.ptr())))) {
		if (((_246d920ac_Prim(_366536_d.get()._field_Kind.ptr()) == nullptr) || (!(_246ca39e6_IsInt(_246d920ac_Prim(_366536_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_246d2ee18_sigAssignable(jule::Str("i64", 3),_366536_d)) {
			_case_begin_2131d31bd:;
			{
				_2462496a7_SetI64(_366536_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_24624782b_AsI64(_366536_d.get()._field_Constant.ptr())));
			}
		}
		else if (_246d46bcc_unsigAssignable(jule::Str("u64", 3),_366536_d)) {
			_case_begin_2131d308b:;
			{
				_246257462_SetU64(_366536_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_24623b974_AsU64(_366536_d.get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_2131d2c17:;
			{
				_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_2131d1386:;
	};
}



inline void _246d8705d_mod(_246d838a6_binaryEval* _self_) {
	_246d86d82_checkModData(&(*_self_), (*_self_)._field_l);
	_246d86d82_checkModData(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _246d87415_numbersAreCompatibile(_246d838a6_binaryEval* _self_, jule::Str& _368737_lk, jule::Str& _368747_rk) {
	if ((!(_246ca3c5a_IsNum(_368747_rk)))) {
		return false;
	};
	if ((_246d5ec5b_IsConst((*_self_)._field_l.ptr()) && (*_self_)._field_l.get()._field_untyped)) {
		return true;
	};
	if ((_368737_lk == jule::Str("f32", 3))) {
		if ((_246d5ec5b_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
			return true;
		};
		return (_368747_rk == jule::Str("f32", 3));
	};
	if ((_368737_lk == jule::Str("f64", 3))) {
		if ((_246d5ec5b_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
			return true;
		};
		return (_368747_rk == jule::Str("f64", 3));
	};
	if ((_246d5ec5b_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
		return true;
	};
	return (_368737_lk == _368747_rk);
}



inline jule::Ptr<_246d5e398_Data> _246d87679_evalFloat(_246d838a6_binaryEval* _self_) {
	jule::Str _371313_lk = _246d920ac_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _371413_rk = _246d920ac_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_246d87415_numbersAreCompatibile(&(*_self_), _371313_lk,_371413_rk)))) {
		_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_371313_lk),jule::Any(_371413_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_2131dc051:;
			{
				if (((!(_246d5ec5b_IsConst((*_self_)._field_l.ptr()))) || (!(_246d46d0e_intAssignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_371313_lk),jule::Any(_371413_rk)}));
					return nullptr;
				};
				if (((!(_246d5ec5b_IsConst((*_self_)._field_r.ptr()))) || (!(_246d46d0e_intAssignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_371313_lk),jule::Any(_371413_rk)}));
					return nullptr;
				};
				_2462496a7_SetI64((*_self_)._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_24624782b_AsI64((*_self_)._field_l.get()._field_Constant.ptr())));
				_246257462_SetU64((*_self_)._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_24623b974_AsU64((*_self_)._field_r.get()._field_Constant.ptr())));
				if ((!(_246d8a913_isOkForShifting((*_self_)._field_r)))) {
					_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_2131dbe63:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_2131e2133:;
			{
				_246d86b40_setTypeToGreater(&(*_self_));
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_2131e13c9:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_2131e2e03:;
			{
				_246d86b40_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_2131e2e69:;
			{
				if ((!(_246ca39e6_IsInt(_371413_rk)))) {
					_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_371313_lk),jule::Any(_371413_rk)}));
					return nullptr;
				};
				_246d8705d_mod(&(*_self_));
				_246d86b40_setTypeToGreater(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_2131e3695:;
			{
				_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_2131e3909:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d878dd_evalInt(_246d838a6_binaryEval* _self_) {
	jule::Str _377913_lk = _246d920ac_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _378013_rk = _246d920ac_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_2131e47d9:;
			{
				if (((!(_246ca39e6_IsInt(_377913_lk))) || (!(_246ca39e6_IsInt(_378013_rk))))) {
					_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_377913_lk),jule::Any(_378013_rk)}));
					return nullptr;
				};
				if ((!(_246d8a913_isOkForShifting((*_self_)._field_r)))) {
					_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_2131e7c93:;
	};
	if ((!(_246d87415_numbersAreCompatibile(&(*_self_), _377913_lk,_378013_rk)))) {
		_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_377913_lk),jule::Any(_378013_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_2131eb769:;
			{
				return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_2131eb626:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_2131ec21a:;
			{
				_246d86b40_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_2131ec281:;
			{
				_246d8705d_mod(&(*_self_));
				_246d86b40_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_2131ec517:;
			{
				_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_2131ec946:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d87b52_evalPrim(_246d838a6_binaryEval* _self_) {
	jule::Ptr<_246d94972_Prim> _383813_prim = _246d920ac_Prim((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		
		if (_246d97942_IsBool(_383813_prim.ptr())) {
			_case_begin_213200e11:;
			{
				return _246d86700_evalBool(&(*_self_));
			}
		}
		else if (_246d97ba6_IsStr(_383813_prim.ptr())) {
			_case_begin_213200e88:;
			{
				return _246d86964_evalStr(&(*_self_));
			}
		}
		_match_end_213200d56:;
	};
	if ((_246d920ac_Prim((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_246d94cd5_Str(_383813_prim.ptr())),jule::Any(_246d90396_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		
		if (_246ca3b28_IsFloat(_383813_prim.get()._field_Kind)) {
			_case_begin_213203b6c:;
			{
				return _246d87679_evalFloat(&(*_self_));
			}
		}
		else if (_246ca39e6_IsInt(_383813_prim.get()._field_Kind)) {
			_case_begin_2132034b8:;
			{
				return _246d878dd_evalInt(&(*_self_));
			}
		}
		else {
			_case_begin_213203452:;
			{
				return nullptr;
			}
		}
		_match_end_213203298:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246d87db6_evalOp(_246d838a6_binaryEval* _self_) {
	{
		
		if (_246d91133_Void((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_213203e69:;
			{
				_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if (((_246d920ac_Prim((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr) && _246d97e1a_IsAny(_246d920ac_Prim((*_self_)._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_213205476:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_2132051ac;
			}
		}
		else if (((_246d920ac_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr) && _246d97e1a_IsAny(_246d920ac_Prim((*_self_)._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_2132051ac:;
			{
				return _246d8648b_evalAny(&(*_self_));
			}
		}
		else if ((_246d92a5d_TypeEnum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_213205223:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_213205289;
			}
		}
		else if ((_246d92a5d_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_213205289:;
			{
				return _246d85039_evalTypeEnum(&(*_self_));
			}
		}
		else if (_246d90dbe_IsNil((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_213205300:;
			{
				return _246d84a61_evalNil(&(*_self_));
			}
		}
		else if ((_246d927e9_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_213205366:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_213205553;
			}
		}
		else if ((_246d927e9_Enum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_213205553:;
			{
				return _246d84cc5_evalEnum(&(*_self_));
			}
		}
		else if ((_246d92321_Sptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2132055b9:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_213205630;
			}
		}
		else if ((_246d92321_Sptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_213205630:;
			{
				return _246d8529d_evalSptr(&(*_self_));
			}
		}
		else if ((_246d92585_Ptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_213205696:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_21320571d;
			}
		}
		else if ((_246d92585_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_21320571d:;
			{
				return _246d85512_evalPtr(&(*_self_));
			}
		}
		else if ((_246d92cc2_Arr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_213205795:;
			{
				return _246d85776_evalArr(&(*_self_));
			}
		}
		else if ((_246d93036_Slc((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_21320581c:;
			{
				return _246d859da_evalSlc(&(*_self_));
			}
		}
		else if ((_246d9329a_Fn((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_213205894:;
			{
				return _246d85c4e_evalFn(&(*_self_));
			}
		}
		else if ((_246d93773_Trait((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_21320591b:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_213205993;
			}
		}
		else if ((_246d93773_Trait((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_213205993:;
			{
				return _246d86227_evalTrait(&(*_self_));
			}
		}
		else if ((_246d9350e_Struct((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_213205a1a:;
			{
				return _246d85eb3_evalStruct(&(*_self_));
			}
		}
		else if ((_246d920ac_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_213205a92:;
			{
				return _246d87b52_evalPrim(&(*_self_));
			}
		}
		else {
			_case_begin_213203c7c:;
			{
				return nullptr;
			}
		}
		_match_end_213204ae6:;
	};
}



inline void _246d8813b_evalConst(_246d838a6_binaryEval* _self_, jule::Ptr<_246d5e398_Data>& _391333_d) {
	{
		
		if ((_391333_d == nullptr)) {
			_case_begin_2132164dc:;
			{
				return;;
			}
		}
		else if ((!(_246d5ec5b_IsConst((*_self_)._field_l.ptr()))) || (!(_246d5ec5b_IsConst((*_self_)._field_r.ptr())))) {
			_case_begin_213216553:;
			{
				_391333_d.get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_213215cb1:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_213217c80:;
			{
				_391333_d.get()._field_Constant=static__246236793_NewBool(_246ca4497_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_213217ce6:;
			{
				_391333_d.get()._field_Constant=static__246236793_NewBool((!(_246ca4497_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_213217d5c:;
			{
				_391333_d.get()._field_Constant=static__246236793_NewBool(_246ca4365_Or((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_213217dc3:;
			{
				_391333_d.get()._field_Constant=static__246236793_NewBool(_246ca4233_And((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_213217e39:;
			{
				_391333_d.get()._field_Constant=static__246236793_NewBool(_246ca483d_Gt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_213217ea0:;
			{
				_391333_d.get()._field_Constant=static__246236793_NewBool(_246ca45c9_Lt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_213218016:;
			{
				_391333_d.get()._field_Constant=static__246236793_NewBool(_246ca4970_GtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_21321807c:;
			{
				_391333_d.get()._field_Constant=static__246236793_NewBool(_246ca470b_LtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_2132180e3:;
			{
				_246ca4aa2_Add((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_391333_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_21321816a:;
			{
				_246ca4bd4_Sub((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_391333_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_2132181e2:;
			{
				_246ca4d16_Mul((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_391333_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_213218269:;
			{
				jule::Bool _395017_ok = _246ca4e48_Div((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_395017_ok)) && (_2462487e9_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_391333_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
				jule::Ptr<_246d94972_Prim> _395521_prim = _246d920ac_Prim(_391333_d.get()._field_Kind.ptr());;
				{
					
					if (_246ca3782_IsSigInt(_395521_prim.get()._field_Kind)) {
						_case_begin_213226079:;
						{
							_2462496a7_SetI64(_391333_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_24624782b_AsI64(_391333_d.get()._field_Constant.ptr())));
						}
					}
					else if (_246ca38b4_IsUnsigInt(_395521_prim.get()._field_Kind)) {
						_case_begin_213226101:;
						{
							_246257462_SetU64(_391333_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_24623b974_AsU64(_391333_d.get()._field_Constant.ptr())));
						}
					}
					_match_end_213225ebe:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_2132182e1:;
			{
				jule::Bool _396317_ok = _246ca507a_Mod((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_396317_ok)) && (_2462487e9_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_391333_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_213218368:;
			{
				_246ca52de_BitwiseOr((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_391333_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_2132183e0:;
			{
				_246ca51ac_BitwiseAnd((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_391333_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_213218467:;
			{
				_246ca5421_Xor((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_391333_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_2132184de:;
			{
				_246ca5553_Lshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_391333_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_213218566:;
			{
				_246ca5685_Rshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_391333_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		_match_end_213217510:;
	};
	_391333_d.get()._field_Model=static_cast<jule::Any>(_391333_d.get()._field_Constant);
	_246d8bda9_applyCastModelByEnum(_391333_d,_246d927e9_Enum(_391333_d.get()._field_Kind.ptr()));
}



inline void _246d883b1_checkData(_246d838a6_binaryEval* _self_, jule::Ptr<_246d5e398_Data>& _398833_d) {
	jule::Ptr<_246cabb42_FnIns> _398913_f = _246d9329a_Fn(_398833_d.get()._field_Kind.ptr());;
	if ((((_398913_f != nullptr) && (_398913_f.get()._field_Decl != nullptr)) && _24618a829_IsMethod(_398913_f.get()._field_Decl.ptr()))) {
		_246d61422_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _246d8858c_checkDatas(_246d838a6_binaryEval* _self_) {
	_246d883b1_checkData(&(*_self_), (*_self_)._field_l);
	_246d883b1_checkData(&(*_self_), (*_self_)._field_r);
}



inline void _246d88812_setModel(_246d838a6_binaryEval* _self_, jule::Ptr<_246d5e398_Data>& _400032_d) {
	if (_246d5ec5b_IsConst(_400032_d.ptr())) {
		if ((_246d5ec5b_IsConst((*_self_)._field_l.ptr()) && _246d5ec5b_IsConst((*_self_)._field_r.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_246d5e398_Data> _400818_l = (*_self_)._field_l;;
	jule::Ptr<_246d5e398_Data> _400825_r = (*_self_)._field_r;;
	std::tie(_400818_l,_400825_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_246d60069_GoodOperand(_400818_l.ptr(), _400825_r)))) {
		std::tie(_400818_l,_400825_r) = std::make_tuple(_400825_r,_400818_l);
	};
	_400032_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca5c18_BinopExprModel>(_246ca5c18_BinopExprModel{._field_Left=jule::new_ptr<_246ca5a2b_OperandExprModel>(_246ca5a2b_OperandExprModel{._field_Kind=_400818_l.get()._field_Kind, ._field_Model=_400818_l.get()._field_Model}), ._field_Right=jule::new_ptr<_246ca5a2b_OperandExprModel>(_246ca5a2b_OperandExprModel{._field_Kind=_400825_r.get()._field_Kind, ._field_Model=_400825_r.get()._field_Model}), ._field_Op=(*_self_)._field_op}));
}



inline void _246d88a87_postEval(_246d838a6_binaryEval* _self_, jule::Ptr<_246d5e398_Data>& _402632_d) {
	_402632_d.get()._field_Lvalue=false;
	_246d88812_setModel(&(*_self_), _402632_d);
}



inline jule::Ptr<_246d5e398_Data> _246d88e3e_solveExplicit(_246d838a6_binaryEval* _self_, jule::Ptr<_246d5e398_Data>& _403137_l, jule::Ptr<_246d5e398_Data>& _403152_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_403137_l,_403152_r);
	_246d8858c_checkDatas(&(*_self_));
	jule::Ptr<_246d5e398_Data> _403617_d = _246d87db6_evalOp(&(*_self_));;
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_403137_l,_403152_r);
	_246d8813b_evalConst(&(*_self_), _403617_d);
	if ((_403617_d != nullptr)) {
		_403617_d.get()._field_Mutable=true;
		_246d88a87_postEval(&(*_self_), _403617_d);
	};
	return _403617_d;
}



inline jule::Ptr<_246d5e398_Data> _246d8924c_eval(_246d838a6_binaryEval* _self_, jule::Ptr<_24612da20_BinopExpr>& _405128_op) {
	if ((_405128_op.get()._field_Op.get()._field_Kind == jule::Str("=", 1))) {
		_246d61422_pushErr((*_self_)._field_e.ptr(), _405128_op.get()._field_Op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_246d61741_pushSugggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_246d5e398_Data> _405817_l = _246d81079_evalExprKind((*_self_)._field_e, _405128_op.get()._field_Left.get()._field_Kind);;
	if (((_405817_l == nullptr) || (_405817_l.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	jule::Ptr<_246d8ee9a_TypeKind> _406317_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_405817_l.get()._field_Kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_406317_prefix;
	});;
	jule::Ptr<_246d5e398_Data> _406617_r = _246d81079_evalExprKind((*_self_)._field_e, _405128_op.get()._field_Right.get()._field_Kind);;
	if (((_406617_r == nullptr) || (_406617_r.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	(*_self_)._field_op=_405128_op.get()._field_Op;
	jule::Ptr<_246d5e398_Data> _407317_d = _246d88e3e_solveExplicit(&(*_self_), _405817_l,_406617_r);;
	if ((((_407317_d != nullptr) && _405817_l.get()._field_IsRune) && _406617_r.get()._field_IsRune)) {
		_407317_d.get()._field_IsRune=true;
	};
	return _407317_d;
}







std::ostream &operator<<(std::ostream &_Stream, _246d838a6_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246d8d76d_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246d8e2a7_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _246d90396_Str(_246d8ee9a_TypeKind* _self_) {
	if (_246d90dbe_IsNil(&(*_self_))) {
		return jule::Str("nil", 3);
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*_self_)._field_Variadic) {
		_7417_kind+=jule::Str("...", 3);
	};
	if (_246d90b5a_CppLinked(&(*_self_))) {
		_7417_kind+=jule::Str("cpp.", 4);
		_7417_kind+=(*_self_)._field_CppIdent;
	} else {
		_7417_kind+=_246d8ea6b_Kind_mptr_data[((*_self_)._field_Kind).type_offset]._246d8e61a_Str((*_self_)._field_Kind);
	};
	return _7417_kind;
}



inline jule::Bool _246d906a4_Equals(jule::Ptr<_246d8ee9a_TypeKind> _self_, jule::Ptr<_246d8ee9a_TypeKind> _9022_other) {
	if (_246d90dbe_IsNil(_self_.ptr())) {
		return _246d90dbe_IsNil(_9022_other.ptr());
	};
	if (_246d90b5a_CppLinked(_self_.ptr())) {
		return (_246d90b5a_CppLinked(_9022_other.ptr()) && (_self_.get()._field_CppIdent == _9022_other.get()._field_CppIdent));
	};
	return _246d8ea6b_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._246d8e928_Equals(_self_.get()._field_Kind, _9022_other);
}



inline jule::Bool _246d90b5a_CppLinked(_246d8ee9a_TypeKind* _self_) {
	return ((*_self_)._field_CppIdent.len() != 0LL);
}



inline jule::Bool _246d90dbe_IsNil(_246d8ee9a_TypeKind* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}



inline jule::Bool _246d91133_Void(_246d8ee9a_TypeKind* _self_) {
	jule::Ptr<_246d94972_Prim> _11113_prim = _246d920ac_Prim(&(*_self_));;
	return ((_11113_prim != nullptr) && (_11113_prim.get()._field_Kind == jule::Str("void", 4)));
}



inline jule::Bool _246d91397_Mutable(_246d8ee9a_TypeKind* _self_) {
	{
		_246d8ee9a_TypeKind* _11821__self = (&((*_self_)));;
		if ((_246d9350e_Struct(_11821__self) != nullptr)) {
			return _246d9350e_Struct(_11821__self).get()._field_Mutable;
		};
		if ((_246d93773_Trait(_11821__self) != nullptr)) {
			return _246d93773_Trait(_11821__self).get()._field_Mutable;
		};
		if ((_246d920ac_Prim(_11821__self) != nullptr)) {
			jule::Ptr<_246d94972_Prim> _12721_p = _246d920ac_Prim(_11821__self);;
			return _246d97e1a_IsAny(_12721_p.ptr());
		};
		if ((_246d92cc2_Arr(_11821__self) != nullptr)) {
			return _246d91397_Mutable(_246d92cc2_Arr(_11821__self).get()._field_Elem.ptr());
		};
		return (((_246d93036_Slc(_11821__self) != nullptr) || (_246d92585_Ptr(_11821__self) != nullptr)) || (_246d92321_Sptr(_11821__self) != nullptr));
	};
}



inline jule::Bool _246d9160b_NilCompatible(_246d8ee9a_TypeKind* _self_) {
	{
		_246d8ee9a_TypeKind* _14221__self = (&((*_self_)));;
		jule::Ptr<_246d94972_Prim> _14417_prim = _246d920ac_Prim(_14221__self);;
		if (((_14417_prim != nullptr) && _246d97e1a_IsAny(_14417_prim.ptr()))) {
			return true;
		};
		return (((((((_246d90dbe_IsNil(_14221__self) || (_246d9329a_Fn(_14221__self) != nullptr)) || (_246d92321_Sptr(_14221__self) != nullptr)) || (_246d92585_Ptr(_14221__self) != nullptr)) || (_246d93773_Trait(_14221__self) != nullptr)) || (_246d93036_Slc(_14221__self) != nullptr)) || (_246d939d7_Map(_14221__self) != nullptr)) || (_246d92a5d_TypeEnum(_14221__self) != nullptr));
	};
}



inline jule::Bool _246d91870_PerformsRC(_246d8ee9a_TypeKind* _self_) {
	{
		_246d8ee9a_TypeKind* _16321__self = (&((*_self_)));;
		jule::Ptr<_246d94972_Prim> _16417_prim = _246d920ac_Prim(_16321__self);;
		if ((_16417_prim != nullptr)) {
			return _246d97e1a_IsAny(_16417_prim.ptr());
		};
		return (((_246d92321_Sptr(_16321__self) != nullptr) || (_246d93036_Slc(_16321__self) != nullptr)) || (_246d93773_Trait(_16321__self) != nullptr));
	};
}



inline jule::Bool _246d91ad4_SupportsCloning(_246d8ee9a_TypeKind* _self_) {
	{
		_246d8ee9a_TypeKind* _17521__self = (&((*_self_)));;
		{
			
			if ((_246d920ac_Prim(_17521__self) != nullptr)) {
				_case_begin_213267dce:;
				{
					return (!(_246d97e1a_IsAny(_246d920ac_Prim(_17521__self).ptr())));
				}
			}
			else if ((_246d927e9_Enum(_17521__self) != nullptr)) {
				_case_begin_213267e45:;
				{
					return true;
				}
			}
			else if ((_246d9329a_Fn(_17521__self) != nullptr)) {
				_case_begin_213267eab:;
				{
					return true;
				}
			}
			else if ((_246d92585_Ptr(_17521__self) != nullptr)) {
				_case_begin_213268022:;
				{
					return true;
				}
			}
			else if ((_246d93036_Slc(_17521__self) != nullptr)) {
				_case_begin_2132682ec:;
				{
					return _246d91ad4_SupportsCloning(_246d93036_Slc(_17521__self).get()._field_Elem.ptr());
				}
			}
			else if ((_246d939d7_Map(_17521__self) != nullptr)) {
				_case_begin_213268363:;
				{
					jule::Ptr<_246d9a219_Map> _18821_m = _246d939d7_Map(_17521__self);;
					return (_246d91ad4_SupportsCloning(_18821_m.get()._field_Key.ptr()) && _246d91ad4_SupportsCloning(_18821_m.get()._field_Val.ptr()));
				}
			}
			else if ((_246d92cc2_Arr(_17521__self) != nullptr)) {
				_case_begin_2132683c9:;
				{
					return _246d91ad4_SupportsCloning(_246d92cc2_Arr(_17521__self).get()._field_Elem.ptr());
				}
			}
			else if ((_246d92321_Sptr(_17521__self) != nullptr)) {
				_case_begin_213268440:;
				{
					return _246d91ad4_SupportsCloning(_246d92321_Sptr(_17521__self).get()._field_Elem.ptr());
				}
			}
			else if ((_246d9350e_Struct(_17521__self) != nullptr)) {
				_case_begin_2132684a6:;
				{
					jule::Ptr<_246142319_StructIns> _19525_s = _246d9350e_Struct(_17521__self);;
					return (((_19525_s.get()._field_Decl != nullptr) && (!(_19525_s.get()._field_Decl.get()._field_CppLinked))) && _246107ec2_IsDerives(_19525_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));
				}
			}
			else {
				_case_begin_213267d68:;
				{
					return false;
				}
			}
			_match_end_213267d02:;
		};
	};
}



inline jule::Bool _246d91d48_Variadicable(_246d8ee9a_TypeKind* _self_) {
	{
		_246d8ee9a_TypeKind* _20821__self = (&((*_self_)));;
		return (_246d93036_Slc(_20821__self) != nullptr);
	};
}



inline jule::Ptr<_246d94972_Prim> _246d920ac_Prim(_246d8ee9a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_246d94972_Prim>>()) {
			_case_begin_213271679:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_246d94972_Prim>();
			}
		}
		else {
			_case_begin_213270e5e:;
			{
				return nullptr;
			}
		}
		_match_end_21326ece8:;
	};
}



inline jule::Ptr<_246d98206_Sptr> _246d92321_Sptr(_246d8ee9a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_246d98206_Sptr>>()) {
			_case_begin_2132723b1:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_246d98206_Sptr>();
			}
		}
		else {
			_case_begin_213271dd8:;
			{
				return nullptr;
			}
		}
		_match_end_213271aec:;
	};
}



inline jule::Ptr<_246d9b76a_Ptr> _246d92585_Ptr(_246d8ee9a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_246d9b76a_Ptr>>()) {
			_case_begin_2132731c5:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_246d9b76a_Ptr>();
			}
		}
		else {
			_case_begin_213272933:;
			{
				return nullptr;
			}
		}
		_match_end_213272cb8:;
	};
}



inline jule::Ptr<_246cb60e1_Enum> _246d927e9_Enum(_246d8ee9a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_246cb60e1_Enum>>()) {
			_case_begin_213273eb7:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_246cb60e1_Enum>();
			}
		}
		else {
			_case_begin_2132739de:;
			{
				return nullptr;
			}
		}
		_match_end_213273703:;
	};
}



inline jule::Ptr<_246cb76db_TypeEnum> _246d92a5d_TypeEnum(_246d8ee9a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_246cb76db_TypeEnum>>()) {
			_case_begin_213274ccb:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_246cb76db_TypeEnum>();
			}
		}
		else {
			_case_begin_213274539:;
			{
				return nullptr;
			}
		}
		_match_end_2132748be:;
	};
}



inline jule::Ptr<_246d9ad0d_Arr> _246d92cc2_Arr(_246d8ee9a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_246d9ad0d_Arr>>()) {
			_case_begin_213275ae0:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_246d9ad0d_Arr>();
			}
		}
		else {
			_case_begin_21327534d:;
			{
				return nullptr;
			}
		}
		_match_end_2132756d3:;
	};
}



inline jule::Ptr<_246d98b63_Slc> _246d93036_Slc(_246d8ee9a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_246d98b63_Slc>>()) {
			_case_begin_213276904:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_246d98b63_Slc>();
			}
		}
		else {
			_case_begin_213276162:;
			{
				return nullptr;
			}
		}
		_match_end_2132764e7:;
	};
}



inline jule::Ptr<_246cabb42_FnIns> _246d9329a_Fn(_246d8ee9a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_246cabb42_FnIns>>()) {
			_case_begin_213277718:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_246cabb42_FnIns>();
			}
		}
		else {
			_case_begin_213276e76:;
			{
				return nullptr;
			}
		}
		_match_end_21327730b:;
	};
}



inline jule::Ptr<_246142319_StructIns> _246d9350e_Struct(_246d8ee9a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_246142319_StructIns>>()) {
			_case_begin_21327850a:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_246142319_StructIns>();
			}
		}
		else {
			_case_begin_213278032:;
			{
				return nullptr;
			}
		}
		_match_end_213277c46:;
	};
}



inline jule::Ptr<_246cb3e9b_Trait> _246d93773_Trait(_246d8ee9a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_246cb3e9b_Trait>>()) {
			_case_begin_21327931e:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_246cb3e9b_Trait>();
			}
		}
		else {
			_case_begin_213278a7c:;
			{
				return nullptr;
			}
		}
		_match_end_213278e12:;
	};
}



inline jule::Ptr<_246d9a219_Map> _246d939d7_Map(_246d8ee9a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_246d9a219_Map>>()) {
			_case_begin_21327a133:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_246d9a219_Map>();
			}
		}
		else {
			_case_begin_213279891:;
			{
				return nullptr;
			}
		}
		_match_end_213279c26:;
	};
}



inline jule::Ptr<_246d996e1_Tuple> _246d93c4b_Tup(_246d8ee9a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_246d996e1_Tuple>>()) {
			_case_begin_21327ae47:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_246d996e1_Tuple>();
			}
		}
		else {
			_case_begin_21327a6a5:;
			{
				return nullptr;
			}
		}
		_match_end_21327aa3a:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _246d8ee9a_TypeKind _Src) {
	_Stream << _246d90396_Str(&_Src);
	return _Stream;
}



inline jule::Bool _246d944aa_checked(_246d94103_TypeSymbol* _self_) {
	return ((*_self_)._field_Kind != nullptr);
}



inline void _246d94686_removeKind(_246d94103_TypeSymbol* _self_) {
	(*_self_)._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _246d94103_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _246d94cd5_Str(_246d94972_Prim* _self_) {
	return (*_self_)._field_Kind;
}



inline jule::Bool _246d950e3_Equals(jule::Ptr<_246d94972_Prim> _self_, jule::Ptr<_246d8ee9a_TypeKind> _36122_other) {
	jule::Ptr<_246d94972_Prim> _36213_prim = _246d920ac_Prim(_36122_other.ptr());;
	if ((_36213_prim == nullptr)) {
		return false;
	};
	return (_self_.get()._field_Kind == _36213_prim.get()._field_Kind);
}



inline jule::Bool _246d95566_IsConstraint(_246d94972_Prim* _self_) {
	return ((((!(_246d97ba6_IsStr(&(*_self_)))) && (!(_246d97e1a_IsAny(&(*_self_))))) && (!(_246d97942_IsBool(&(*_self_))))) && (!(_246ca3c5a_IsNum((*_self_)._field_Kind))));
}



inline jule::Bool _246d957ca_IsI8(_246d94972_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i8", 2));
}



inline jule::Bool _246d95a3e_IsI16(_246d94972_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i16", 3));
}



inline jule::Bool _246d95ca3_IsI32(_246d94972_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i32", 3));
}



inline jule::Bool _246d96017_IsI64(_246d94972_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i64", 3));
}



inline jule::Bool _246d9627b_IsU8(_246d94972_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u8", 2));
}



inline jule::Bool _246d964e0_IsU16(_246d94972_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u16", 3));
}



inline jule::Bool _246d96754_IsU32(_246d94972_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u32", 3));
}



inline jule::Bool _246d969b8_IsU64(_246d94972_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u64", 3));
}



inline jule::Bool _246d96c2c_IsF32(_246d94972_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f32", 3));
}



inline jule::Bool _246d96e91_IsF64(_246d94972_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f64", 3));
}



inline jule::Bool _246d97205_IsInt(_246d94972_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("int", 3));
}



inline jule::Bool _246d97469_IsUint(_246d94972_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uint", 4));
}



inline jule::Bool _246d976cd_IsUintptr(_246d94972_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uintptr", 7));
}



inline jule::Bool _246d97942_IsBool(_246d94972_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("bool", 4));
}



inline jule::Bool _246d97ba6_IsStr(_246d94972_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("str", 3));
}



inline jule::Bool _246d97e1a_IsAny(_246d94972_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _246d94972_Prim _Src) {
	_Stream << _246d94cd5_Str(&_Src);
	return _Stream;
}



inline jule::Str _246d98569_Str(_246d98206_Sptr* _self_) {
	return (jule::Str("&", 1) + _246d90396_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _246d98877_Equals(jule::Ptr<_246d98206_Sptr> _self_, jule::Ptr<_246d8ee9a_TypeKind> _43822_other) {
	jule::Ptr<_246d98206_Sptr> _43913_sptr = _246d92321_Sptr(_43822_other.ptr());;
	if ((_43913_sptr == nullptr)) {
		return false;
	};
	return _246d906a4_Equals(_self_.get()._field_Elem, _43913_sptr.get()._field_Elem);
}







std::ostream &operator<<(std::ostream &_Stream, _246d98206_Sptr _Src) {
	_Stream << _246d98569_Str(&_Src);
	return _Stream;
}



inline jule::Str _246d9916e_Str(_246d98b63_Slc* _self_) {
	return (jule::Str("[]", 2) + _246d90396_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _246d9947c_Equals(jule::Ptr<_246d98b63_Slc> _self_, jule::Ptr<_246d8ee9a_TypeKind> _45722_other) {
	jule::Ptr<_246d98b63_Slc> _45813_slc = _246d93036_Slc(_45722_other.ptr());;
	if ((_45813_slc == nullptr)) {
		return false;
	};
	return _246d906a4_Equals(_self_.get()._field_Elem, _45813_slc.get()._field_Elem);
}







std::ostream &operator<<(std::ostream &_Stream, _246d98b63_Slc _Src) {
	_Stream << _246d9916e_Str(&_Src);
	return _Stream;
}



inline jule::Str _246d99a54_Str(_246d996e1_Tuple* _self_) {
	jule::Str _47417_s = jule::Str("(", 1);;
	_47417_s+=_246d90396_Str((*_self_)._field_Types[0LL].ptr());
	{
		auto expr = (*_self_)._field_Types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_21328b4eb:;
		if (it != expr.end()) {
			jule::Ptr<_246d8ee9a_TypeKind> &_47616_t = *it;
			{
				_47417_s+=jule::Str(",", 1);
				_47417_s+=_246d90396_Str(_47616_t.ptr());
			}
			_iter_next_21328b4eb:;
			++it;
			goto _iter_begin_21328b4eb;
		}
		_iter_end_21328b4eb:;
	};
	_47417_s+=jule::Str(")", 1);
	return _47417_s;
}



inline jule::Bool _246d99d62_Equals(jule::Ptr<_246d996e1_Tuple> _self_, jule::Ptr<_246d8ee9a_TypeKind> _48522_other) {
	jule::Ptr<_246d996e1_Tuple> _48613_tup = _246d93c4b_Tup(_48522_other.ptr());;
	if ((_48613_tup == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_Types.len() != _48613_tup.get()._field_Types.len())) {
		return false;
	};
	jule::I64 _49317_i = 0LL;;
	for (; (_49317_i < _self_.get()._field_Types.len()); (_49317_i)++) {
		{
			if ((!(_246d906a4_Equals(_self_.get()._field_Types[_49317_i], _48613_tup.get()._field_Types[_49317_i])))) {
				return false;
			};
		}
	_iter_next_21328e2ce:;
	}
	_iter_end_21328e2ce:;;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _246d996e1_Tuple _Src) {
	_Stream << _246d99a54_Str(&_Src);
	return _Stream;
}



inline jule::Str _246d9a57c_Str(_246d9a219_Map* _self_) {
	jule::Str _51317_s = jule::Str("[", 1);;
	_51317_s+=_246d90396_Str((*_self_)._field_Key.ptr());
	_51317_s+=jule::Str(":", 1);
	_51317_s+=_246d90396_Str((*_self_)._field_Val.ptr());
	_51317_s+=jule::Str("]", 1);
	return _51317_s;
}



inline jule::Bool _246d9a88a_Equals(jule::Ptr<_246d9a219_Map> _self_, jule::Ptr<_246d8ee9a_TypeKind> _52222_other) {
	jule::Ptr<_246d9a219_Map> _52313_m = _246d939d7_Map(_52222_other.ptr());;
	if ((_52313_m == nullptr)) {
		return false;
	};
	return (_246d906a4_Equals(_self_.get()._field_Key, _52313_m.get()._field_Key) && _246d906a4_Equals(_self_.get()._field_Val, _52313_m.get()._field_Val));
}







std::ostream &operator<<(std::ostream &_Stream, _246d9a219_Map _Src) {
	_Stream << _246d9a57c_Str(&_Src);
	return _Stream;
}



inline jule::Str _246d9b171_Str(_246d9ad0d_Arr* _self_) {
	jule::Str _54117_s = jule::Str("[", 1);;
	_54117_s+=_246ca2011_Itoa((*_self_)._field_N);
	_54117_s+=jule::Str("]", 1);
	_54117_s+=_246d90396_Str((*_self_)._field_Elem.ptr());
	return _54117_s;
}



inline jule::Bool _246d9b47e_Equals(jule::Ptr<_246d9ad0d_Arr> _self_, jule::Ptr<_246d8ee9a_TypeKind> _54922_other) {
	jule::Ptr<_246d9ad0d_Arr> _55013_arr = _246d92cc2_Arr(_54922_other.ptr());;
	if ((_55013_arr == nullptr)) {
		return false;
	};
	return ((_self_.get()._field_N == _55013_arr.get()._field_N) && _246d906a4_Equals(_self_.get()._field_Elem, _55013_arr.get()._field_Elem));
}







std::ostream &operator<<(std::ostream &_Stream, _246d9ad0d_Arr _Src) {
	_Stream << _246d9b171_Str(&_Src);
	return _Stream;
}



inline jule::Str _246d9bacd_Str(_246d9b76a_Ptr* _self_) {
	if (_246d9c23d_IsUnsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	};
	return (jule::Str("*", 1) + _246d90396_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _246d9bddb_Equals(jule::Ptr<_246d9b76a_Ptr> _self_, jule::Ptr<_246d8ee9a_TypeKind> _57322_other) {
	jule::Ptr<_246d9b76a_Ptr> _57413_ptr = _246d92585_Ptr(_57322_other.ptr());;
	if ((_57413_ptr == nullptr)) {
		return false;
	};
	return _246d906a4_Equals(_self_.get()._field_Elem, _57413_ptr.get()._field_Elem);
}



inline jule::Bool _246d9c23d_IsUnsafe(_246d9b76a_Ptr* _self_) {
	return ((*_self_)._field_Elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _246d9b76a_Ptr _Src) {
	_Stream << _246d9bacd_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246d9c6b1_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _246d9dbce_pushErr(_246d9d4c5_typeChecker* _self_, jule::Ptr<_24496dc35_Token> _65626_token, jule::Str _65641_fmt, jule::Slice<jule::Any> _65654_args) {
	_246ceb2d0_pushErr((*_self_)._field_s.ptr(), _65626_token,_65641_fmt,jule::Any(_65654_args));
}



inline void _246d9ddaa_allowBuiltin(_246d9d4c5_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _246d9e086_disallowBuiltin(_246d9d4c5_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Ptr<_246d94972_Prim> _246d9e394_buildPrim(_246d9d4c5_typeChecker* _self_, jule::Ptr<_2461261dd_IdentTypeDecl>& _66829_decl) {
	if ((!(_246da848b_isPrim(_66829_decl.get()._field_Ident)))) {
		_246d9dbce_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_66829_decl.get()._field_Generics.len() > 0LL)) {
		_246d9dbce_pushErr(&(*_self_), _66829_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_66829_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _246da7e4c_buildPrimType(_66829_decl.get()._field_Ident);
}



inline void _21329e9e8_pushReference(_246d9d4c5_typeChecker* _self_, jule::Ptr<_246142319_StructIns>& _68240_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_2130bea16_Exist((*_self_)._field_refers.ptr(), _68240_t)) {
		return;;
	};
	_246cacb98_Push((*_self_)._field_refers.ptr(), jule::Any(_68240_t));
}

inline void _2132a2c4e_pushReference(_246d9d4c5_typeChecker* _self_, jule::Ptr<_246cb3e9b_Trait>& _68240_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_2132a4a75_Exist((*_self_)._field_refers.ptr(), _68240_t)) {
		return;;
	};
	_246cacb98_Push((*_self_)._field_refers.ptr(), jule::Any(_68240_t));
}



inline void _246d9e88e_pushReferenceByKind(_246d9d4c5_typeChecker* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _69243_k) {
	{
		
		if ((_246d9350e_Struct(_69243_k.ptr()) != nullptr)) {
			_case_begin_21329d5da:;
			{
				jule::Ptr<_246142319_StructIns> _69521_t = _246d9350e_Struct(_69243_k.ptr());;
				_21329e9e8_pushReference(&(*_self_), _69521_t);
			}
		}
		else if ((_246d93773_Trait(_69243_k.ptr()) != nullptr)) {
			_case_begin_21329d662:;
			{
				jule::Ptr<_246cb3e9b_Trait> _69821_t = _246d93773_Trait(_69243_k.ptr());;
				_2132a2c4e_pushReference(&(*_self_), _69821_t);
			}
		}
		_match_end_21329d4b9:;
	};
}



inline void _246d9ec57_pushCycleError(_246d9d4c5_typeChecker* _self_, jule::Any _70329_def1, jule::Any _70340_def2, jule::Str& _70356_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _70513_getIdent = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _70528_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _70528_def };
			
			if (_match_expr.type_is<jule::Ptr<_246d8e2a7_TypeAlias>>()) {
				_case_begin_2132a8590:;
				{
					return _70528_def.operator jule::Ptr<_246d8e2a7_TypeAlias>().get()._field_Ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_246117c3a_Struct>>()) {
				_case_begin_2132a7ea7:;
				{
					return _70528_def.operator jule::Ptr<_246117c3a_Struct>().get()._field_Ident;
				}
			}
			else {
				_case_begin_2132a7d64:;
				{
					return jule::Str();
				}
			}
			_match_end_2132a7c76:;
		};
	});;
	jule::Str _71513_def1Ident = _70513_getIdent(_70329_def1);;
	jule::Str _71613_def2Ident = _70513_getIdent(_70340_def2);;
	jule::Str _71713_refersTo = _2446412a9_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_71513_def1Ident),jule::Any(_71613_def2Ident)}));;
	(_70356_message).buffer.insert(0, (((_24459aab5_Repeat(jule::Str(" ", 1),4LL) + _71713_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _246da010e_checkCrossCycle(_246d9d4c5_typeChecker* _self_, jule::Any _72130_decl, jule::Str& _72146_message) {
	{
		auto &_match_expr{ _72130_decl };
		
		if (_match_expr.type_is<jule::Ptr<_246d8e2a7_TypeAlias>>()) {
			_case_begin_2132aaa48:;
			{
				jule::Ptr<_246d8e2a7_TypeAlias> _72417_ta = _72130_decl.operator jule::Ptr<_246d8e2a7_TypeAlias>();;
				{
					auto &expr = _72417_ta.get()._field_Refers;
					auto it = expr.begin();
					_iter_begin_213184b75:;
					if (it != expr.end()) {
						jule::Any &_72520_d = *it;
						{
							{
								
								if ((_72520_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_212819d33:;
									{
										_246d9ec57_pushCycleError(&(*_self_), jule::Any(_72417_ta),jule::Any(_72520_d),_72146_message);
										return false;
									}
								}
								else if ((!(_246da010e_checkCrossCycle(&(*_self_), jule::Any(_72520_d),_72146_message)))) {
									_case_begin_212819d99:;
									{
										_246d9ec57_pushCycleError(&(*_self_), jule::Any(_72417_ta),jule::Any(_72520_d),_72146_message);
										return false;
									}
								}
								_match_end_212822500:;
							};
						}
						_iter_next_213184b75:;
						++it;
						goto _iter_begin_213184b75;
					}
					_iter_end_213184b75:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246117c3a_Struct>>()) {
			_case_begin_2132aaaae:;
			{
				jule::Ptr<_246117c3a_Struct> _73617_s = _72130_decl.operator jule::Ptr<_246117c3a_Struct>();;
				{
					auto &expr = _73617_s.get()._field_Depends;
					auto it = expr.begin();
					_iter_begin_213184d73:;
					if (it != expr.end()) {
						jule::Ptr<_246117c3a_Struct> &_73720_d = *it;
						{
							{
								
								if (((*_self_)._field_referencer.get()._field_owner == _73720_d)) {
									_case_begin_213185549:;
									{
										_246d9ec57_pushCycleError(&(*_self_), jule::Any(_73617_s),jule::Any(_73720_d),_72146_message);
										return false;
									}
								}
								else if ((!(_246da010e_checkCrossCycle(&(*_self_), jule::Any(_73720_d),_72146_message)))) {
									_case_begin_2131855b0:;
									{
										_246d9ec57_pushCycleError(&(*_self_), jule::Any(_73617_s),jule::Any(_73720_d),_72146_message);
										return false;
									}
								}
								_match_end_21318548e:;
							};
						}
						_iter_next_213184d73:;
						++it;
						goto _iter_begin_213184d73;
					}
					_iter_end_213184d73:;
				};
			}
		}
		_match_end_2132aa9e3:;
	};
	return true;
}



inline jule::Bool _246da04b6_checkIllegalCycles(_246d9d4c5_typeChecker* _self_, jule::Ptr<_2461261dd_IdentTypeDecl>& _75538_ident, jule::Any _75565_decl) {
	jule::Bool _75578_ok = false;
	if (((*_self_)._field_referencer == nullptr)) {
		_75578_ok = true;
		return _75578_ok;
	};
	{
		auto &_match_expr{ _75565_decl };
		
		if (_match_expr.type_is<jule::Ptr<_246117c3a_Struct>>()) {
			_case_begin_213187480:;
			{
				if (((*_self_)._field_notPlain || _75565_decl.operator jule::Ptr<_246117c3a_Struct>().get()._field_CppLinked)) {
					_75578_ok = true;
					return _75578_ok;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246d8e2a7_TypeAlias>>()) {
			_case_begin_2131874e6:;
			{
				if (_75565_decl.operator jule::Ptr<_246d8e2a7_TypeAlias>().get()._field_CppLinked) {
					_75578_ok = true;
					return _75578_ok;
				};
			}
		}
		_match_end_2131876d3:;
	};
	if ((_75565_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_246d9dbce_pushErr(&(*_self_), _75538_ident.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_75578_ok = false;
		return _75578_ok;
	};
	jule::Str _77817_message = jule::Str();;
	if ((!(_246da010e_checkCrossCycle(&(*_self_), jule::Any(_75565_decl),_77817_message)))) {
		jule::Str _78121_errMsg = _77817_message;;
		_77817_message=jule::Str();
		_246d9ec57_pushCycleError(&(*_self_), jule::Any((*_self_)._field_referencer.get()._field_owner),jule::Any(_75565_decl),_77817_message);
		_78121_errMsg+=_77817_message;
		_246d9dbce_pushErr(&(*_self_), _75538_ident.get()._field_Token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_78121_errMsg)}));
		_75578_ok = false;
		return _75578_ok;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_246d8e2a7_TypeAlias>>()) {
			_case_begin_2132ecbab:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({jule::Any(_75565_decl)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246117c3a_Struct>>()) {
			_case_begin_2132ecd10:;
			{
				{
					auto &_match_expr{ _75565_decl };
					
					if (_match_expr.type_is<jule::Ptr<_246117c3a_Struct>>()) {
						_case_begin_2132ed5b3:;
						{
							jule::Ptr<_246117c3a_Struct> _79725_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_246117c3a_Struct>();;
							_79725_s.get()._field_Depends = jule::alloc_for_append(_79725_s.get()._field_Depends,1);_79725_s.get()._field_Depends.__push(_75565_decl.operator jule::Ptr<_246117c3a_Struct>());;
						}
					}
					_match_end_2132ed4b4:;
				};
			}
		}
		_match_end_2132ec936:;
	};
	_75578_ok = true;
	return _75578_ok;
}



inline jule::Trait<_246d8ea6b_Kind> _246da086d_fromTypeAlias(_246d9d4c5_typeChecker* _self_, jule::Ptr<_2461261dd_IdentTypeDecl>& _80533_decl, jule::Ptr<_246d8e2a7_TypeAlias>& _80560_ta) {
	if ((!(_246ceb9a6_isAccessibleDefine((*_self_)._field_s.ptr(), _80560_ta.get()._field_Public,_80560_ta.get()._field_Token)))) {
		_246d9dbce_pushErr(&(*_self_), _80533_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_80533_decl.get()._field_Ident)}));
		return nullptr;
	};
	_80560_ta.get()._field_Used=true;
	if ((_80533_decl.get()._field_Generics.len() > 0LL)) {
		_246d9dbce_pushErr(&(*_self_), _80533_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_80533_decl.get()._field_Ident)}));
		return nullptr;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_bannedGenerics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_213303475:;
			if (it != expr.end()) {
				jule::Ptr<_246d8e2a7_TypeAlias> _82220_bg = *it;
				{
					if (((_82220_bg == _80560_ta) || ((_80560_ta.get()._field_Kind.get()._field_Kind != nullptr) && _246d906a4_Equals(_80560_ta.get()._field_Kind.get()._field_Kind, _82220_bg.get()._field_Kind.get()._field_Kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_213303475;
					};
				}
				_iter_next_213303475:;
				++it;
				goto _iter_begin_213303475;
			}
			_iter_end_213303475:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_2133054cc:;
			if (it != expr.end()) {
				jule::Ptr<_246d8e2a7_TypeAlias> _83320_bg = *it;
				{
					if ((_83320_bg == _80560_ta)) {
						_246d9dbce_pushErr(&(*_self_), _80533_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_80533_decl.get()._field_Ident)}));
						return nullptr;
					};
					{
						auto &expr = _80560_ta.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_213305e6c:;
						if (it != expr.end()) {
							jule::Ptr<_246d8e2a7_TypeAlias> _83824_dg = *it;
							{
								if ((_83320_bg == _83824_dg)) {
									_246d9dbce_pushErr(&(*_self_), _80533_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_80533_decl.get()._field_Ident)}));
									return nullptr;
								};
							}
							_iter_next_213305e6c:;
							++it;
							goto _iter_begin_213305e6c;
						}
						_iter_end_213305e6c:;
					};
				}
				_iter_next_2133054cc:;
				++it;
				goto _iter_begin_2133054cc;
			}
			_iter_end_2133054cc:;
		};
	};
	jule::Bool _84717_ok = _246da04b6_checkIllegalCycles(&(*_self_), _80533_decl,jule::Any(_80560_ta));;
	if ((!(_84717_ok))) {
		return nullptr;
	};
	_84717_ok=_246d062b8_checkTypeAliasDeclKind((*_self_)._field_s, _80560_ta,(*_self_)._field_lookup);
	if ((!(_84717_ok))) {
		return nullptr;
	};
	if ((_80560_ta.get()._field_Generic && ((*_self_)._field_ownerAlias != nullptr))) {
		(*_self_)._field_ownerAlias.get()._field_Generics = jule::alloc_for_append((*_self_)._field_ownerAlias.get()._field_Generics,1);(*_self_)._field_ownerAlias.get()._field_Generics.__push(_80560_ta);;
	};
	jule::Ptr<_246d8ee9a_TypeKind> _86417_tk = jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Generic=_80560_ta.get()._field_Generic, ._field_Kind=_80560_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_246d9e88e_pushReferenceByKind(&(*_self_), _86417_tk);
	if (_80560_ta.get()._field_CppLinked) {
		_86417_tk.get()._field_CppIdent=_80560_ta.get()._field_Ident;
	} else {
		_86417_tk.get()._field_CppIdent=_80560_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
	};
	return jule::Trait<_246d8ea6b_Kind>(_86417_tk, 5);
}



inline jule::Ptr<_246cb60e1_Enum> _246da0c25_fromEnum(_246d9d4c5_typeChecker* _self_, jule::Ptr<_2461261dd_IdentTypeDecl>& _87728_decl, jule::Ptr<_246cb60e1_Enum>& _87755_e) {
	if ((!(_246ceb9a6_isAccessibleDefine((*_self_)._field_s.ptr(), _87755_e.get()._field_Public,_87755_e.get()._field_Token)))) {
		_246d9dbce_pushErr(&(*_self_), _87728_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_87728_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_87728_decl.get()._field_Generics.len() > 0LL)) {
		_246d9dbce_pushErr(&(*_self_), _87728_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_87728_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _87755_e;
}



inline jule::Ptr<_246cb76db_TypeEnum> _246da10cc_fromTypeEnum(_246d9d4c5_typeChecker* _self_, jule::Ptr<_2461261dd_IdentTypeDecl>& _88932_decl, jule::Ptr<_246cb76db_TypeEnum>& _88959_e) {
	if ((!(_246ceb9a6_isAccessibleDefine((*_self_)._field_s.ptr(), _88959_e.get()._field_Public,_88959_e.get()._field_Token)))) {
		_246d9dbce_pushErr(&(*_self_), _88932_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_88932_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_88932_decl.get()._field_Generics.len() > 0LL)) {
		_246d9dbce_pushErr(&(*_self_), _88932_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_88932_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _88959_e;
}



inline jule::Ptr<_246cb3e9b_Trait> _246da1484_fromTrait(_246d9d4c5_typeChecker* _self_, jule::Ptr<_2461261dd_IdentTypeDecl>& _90129_decl, jule::Ptr<_246cb3e9b_Trait>& _90156_t) {
	if ((!(_246ceb9a6_isAccessibleDefine((*_self_)._field_s.ptr(), _90156_t.get()._field_Public,_90156_t.get()._field_Token)))) {
		_246d9dbce_pushErr(&(*_self_), _90129_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_90129_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_90129_decl.get()._field_Generics.len() > 0LL)) {
		_246d9dbce_pushErr(&(*_self_), _90129_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_90129_decl.get()._field_Ident)}));
		return nullptr;
	};
	_2132a2c4e_pushReference(&(*_self_), _90156_t);
	return _90156_t;
}



inline jule::Bool _246da183b_checkStructIns(_246d9d4c5_typeChecker* _self_, jule::Ptr<_246142319_StructIns>& _91438_ins, jule::Ptr<_24496dc35_Token>& _91460_errorToken) {
	jule::Bool _91482_ok = false;
	if (_91438_ins.get()._field_Checked) {
		_91482_ok = true;
		return _91482_ok;
	};
	_91438_ins.get()._field_Checked=true;
	if ((((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == _91438_ins.get()._field_Decl))) {
		_91482_ok = true;
		return _91482_ok;
	};
	if ((!(_246d10448_precheckStructIns((*_self_)._field_s, _91438_ins,_91460_errorToken)))) {
		_91482_ok = false;
		return _91482_ok;
	};
	if ((_91438_ins.get()._field_Generics.len() > 0LL)) {
		_246d10db6_checkStructInsOperators((*_self_)._field_s, _91438_ins);
		_246d106bd_checkStructIns((*_self_)._field_s, _91438_ins);
	};
	_91482_ok = true;
	return _91482_ok;
}



inline void _246da1ad3_appendUsedStructReference(_246d9d4c5_typeChecker* _self_, jule::Ptr<_246117c3a_Struct>& _93549_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_246117c3a_Struct>>()) {
			_case_begin_213318688:;
			{
				jule::Ptr<_246117c3a_Struct> _94121_refS = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_246117c3a_Struct>();;
				if ((!(_2461072ac_IsUses(_94121_refS.ptr(), _93549_s)))) {
					_94121_refS.get()._field_Uses = jule::alloc_for_append(_94121_refS.get()._field_Uses,1);_94121_refS.get()._field_Uses.__push(_93549_s);;
				};
			}
		}
		_match_end_213318424:;
	};
}



inline jule::Ptr<_246142319_StructIns> _246da1e9b_buildStructInstance(_246d9d4c5_typeChecker* _self_, jule::Ptr<_2461261dd_IdentTypeDecl>& _94843_decl, jule::Ptr<_246117c3a_Struct>& _94870_s) {
	jule::Ptr<_246d9c6b1_referencer> _95017_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>> _95217_bannedGenerics = (*_self_)._field_bannedGenerics;;
	if (((*_self_)._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_246cc8862_scopeChecker>>()) {
				_case_begin_21331b5e2:;
				{
					jule::Ptr<_246cc8862_scopeChecker> _95925_sc = (*_self_)._field_lookup.operator jule::Ptr<_246cc8862_scopeChecker>();;
					jule::Ptr<_246cc8862_scopeChecker> _96025_hard = _246ccbbd9_getHardRoot(_95925_sc);;
					if (((_96025_hard.get()._field_owner.get()._field_Owner == nullptr) || (_96025_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != _94870_s))) {
						goto _match_end_21331a569;
					};
					jule::I64 _96421_n = (_96025_hard.get()._field_owner.get()._field_Generics.len() + _96025_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*_self_)._field_bannedGenerics=_96025_hard.get()._field_table.get()._field_TypeAliases.slice(0LL,_96421_n);
				}
			}
			_match_end_21331a569:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Trait<_246daaacb_Lookup> _97417_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=(*_self_)._field_rootLookup;
	jule::Ptr<_246142319_StructIns> _97817_ins = _2460e2a4a_instance(_94870_s);;
	_97817_ins.get()._field_Generics=jule::Slice<jule::Ptr<_246d8d76d_InsGeneric>>::alloc(0LL, _94843_decl.get()._field_Generics.len());
	{
		auto &expr = _94843_decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_213318bd8:;
		if (it != expr.end()) {
			jule::Ptr<_246125b27_TypeDecl> _98021_g = *it;
			{
				jule::Ptr<_246d8ee9a_TypeKind> _98121_kind = _246da5433_build(&(*_self_), _98021_g.get()._field_Kind);;
				if ((_98121_kind == nullptr)) {
					return nullptr;
				};
				_97817_ins.get()._field_Generics = jule::alloc_for_append(_97817_ins.get()._field_Generics,1);_97817_ins.get()._field_Generics.__push(jule::new_ptr<_246d8d76d_InsGeneric>(_246d8d76d_InsGeneric{._field_Kind=_98121_kind, }));;
			}
			_iter_next_213318bd8:;
			++it;
			goto _iter_begin_213318bd8;
		}
		_iter_end_213318bd8:;
	};
	(*_self_)._field_lookup=_97417_lookup;
	(*_self_)._field_bannedGenerics=_95217_bannedGenerics;
	(*_self_)._field_referencer=_95017_referencer;
	return _97817_ins;
}



inline jule::Ptr<_246142319_StructIns> _246da2353_fromStruct(_246d9d4c5_typeChecker* _self_, jule::Ptr<_2461261dd_IdentTypeDecl>& _99634_decl, jule::Ptr<_246117c3a_Struct>& _99661_s) {
	if ((!(_246ceb9a6_isAccessibleDefine((*_self_)._field_s.ptr(), _99661_s.get()._field_Public,_99661_s.get()._field_Token)))) {
		_246d9dbce_pushErr(&(*_self_), _99634_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_99634_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((*_self_)._field_selection) {
		if ((_99634_decl.get()._field_Generics.len() > 0LL)) {
			_246d9dbce_pushErr(&(*_self_), _99634_decl.get()._field_Token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		};
		return jule::new_ptr<_246142319_StructIns>(_246142319_StructIns{._field_Decl=_99661_s, });
	};
	jule::Bool _101417_ok = ((*_self_)._field_notPlain || _246da04b6_checkIllegalCycles(&(*_self_), _99634_decl,jule::Any(_99661_s)));;
	if ((!(_101417_ok))) {
		return nullptr;
	};
	_246da1ad3_appendUsedStructReference(&(*_self_), _99661_s);
	jule::Ptr<_246142319_StructIns> _102017_ins = _246da1e9b_buildStructInstance(&(*_self_), _99634_decl,_99661_s);;
	if ((_102017_ins == nullptr)) {
		return nullptr;
	};
	_101417_ok=_246cec677_checkGenericQuantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_102017_ins.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_102017_ins.get()._field_Generics.len()),_99634_decl.get()._field_Token);
	if ((!(_101417_ok))) {
		return nullptr;
	};
	jule::Ptr<_246142319_StructIns> _103017_existInstance = _2460e8b3e_appendInstance(_99661_s.ptr(), _102017_ins);;
	if ((_103017_existInstance != nullptr)) {
		if ((!(_246d0496a_checkConstraintsStruct((*_self_)._field_s, _102017_ins,_99634_decl.get()._field_Token,_103017_existInstance)))) {
			return nullptr;
		};
		_21329e9e8_pushReference(&(*_self_), _103017_existInstance);
		return _103017_existInstance;
	};
	if ((!(_246da183b_checkStructIns(&(*_self_), _102017_ins,_99634_decl.get()._field_Token)))) {
		return nullptr;
	};
	_21329e9e8_pushReference(&(*_self_), _102017_ins);
	return _102017_ins;
}



inline jule::Trait<_246d8ea6b_Kind> _246da2661_getDef(_246d9d4c5_typeChecker* _self_, jule::Ptr<_2461261dd_IdentTypeDecl>& _105430_decl) {
	{
		auto &expr = (*_self_)._field_ignoreGenerics;
		auto it = expr.begin();
		_iter_begin_21332b7bc:;
		if (it != expr.end()) {
			jule::Ptr<_246132e20_GenericDecl> _105516_g = *it;
			{
				if ((_105516_g.get()._field_Ident == _105430_decl.get()._field_Ident)) {
					return jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(_105516_g.get()._field_Ident), 6);
				};
			}
			_iter_next_21332b7bc:;
			++it;
			goto _iter_begin_21332b7bc;
		}
		_iter_end_21332b7bc:;
	};
	{
		auto &expr = (*_self_)._field_useGenerics;
		auto it = expr.begin();
		_iter_begin_21332c229:;
		if (it != expr.end()) {
			jule::Ptr<_246d8e2a7_TypeAlias> _106121_g = *it;
			{
				if ((_106121_g.get()._field_Ident == _105430_decl.get()._field_Ident)) {
					if ((_105430_decl.get()._field_Generics.len() > 0LL)) {
						_246d9dbce_pushErr(&(*_self_), _105430_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_105430_decl.get()._field_Ident)}));
						return nullptr;
					};
					jule::Ptr<_246142319_StructIns> _106725_st = _246d9350e_Struct(_106121_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_106725_st != nullptr)) {
						jule::Bool _106925_ok = _246da04b6_checkIllegalCycles(&(*_self_), _105430_decl,jule::Any(_106725_st.get()._field_Decl));;
						if ((!(_106925_ok))) {
							return nullptr;
						};
					};
					return _106121_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;
				};
			}
			_iter_next_21332c229:;
			++it;
			goto _iter_begin_21332c229;
		}
		_iter_end_21332c229:;
	};
	if ((!(_105430_decl.get()._field_CppLinked))) {
		jule::Ptr<_246cb60e1_Enum> _107921_e = _246daaacb_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._246daa67a_FindEnum((*_self_)._field_lookup, _105430_decl.get()._field_Ident);;
		if ((_107921_e != nullptr)) {
			return jule::Trait<_246d8ea6b_Kind>(_246da0c25_fromEnum(&(*_self_), _105430_decl,_107921_e), 3);
		};
		jule::Ptr<_246cb76db_TypeEnum> _108421_te = _246daaacb_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._246daa988_FindTypeEnum((*_self_)._field_lookup, _105430_decl.get()._field_Ident);;
		if ((_108421_te != nullptr)) {
			return jule::Trait<_246d8ea6b_Kind>(_246da10cc_fromTypeEnum(&(*_self_), _105430_decl,_108421_te), 4);
		};
		jule::Ptr<_246cb3e9b_Trait> _108921_t = _246daaacb_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._246daa36c_FindTrait((*_self_)._field_lookup, _105430_decl.get()._field_Ident);;
		if ((_108921_t != nullptr)) {
			return jule::Trait<_246d8ea6b_Kind>(_246da1484_fromTrait(&(*_self_), _105430_decl,_108921_t), 2);
		};
	} else if ((*_self_)._field_selection) {
		_246d9dbce_pushErr(&(*_self_), _105430_decl.get()._field_Token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_246117c3a_Struct> _109817_s = _246daaacb_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._246da9ba7_FindStruct((*_self_)._field_lookup, _105430_decl.get()._field_Ident,_105430_decl.get()._field_CppLinked);;
	if ((_109817_s != nullptr)) {
		return jule::Trait<_246d8ea6b_Kind>(_246da2353_fromStruct(&(*_self_), _105430_decl,_109817_s), 0);
	};
	jule::Ptr<_246d8e2a7_TypeAlias> _110317_ta = _246daaacb_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._246da9800_FindTypeAlias((*_self_)._field_lookup, _105430_decl.get()._field_Ident,_105430_decl.get()._field_CppLinked);;
	if (((_110317_ta == nullptr) && (!((*_self_)._field_disBuiltin)))) {
		_110317_ta=_246dba4c0_findBuiltinTypeAlias(_105430_decl.get()._field_Ident);
	};
	if ((_110317_ta != nullptr)) {
		return _246da086d_fromTypeAlias(&(*_self_), _105430_decl,_110317_ta);
	};
	_246d9dbce_pushErr(&(*_self_), _105430_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_105430_decl.get()._field_Ident)}));
	return nullptr;
}



inline jule::Trait<_246d8ea6b_Kind> _246da296e_buildIdent(_246d9d4c5_typeChecker* _self_, jule::Ptr<_2461261dd_IdentTypeDecl> _111533_decl) {
	{
		
		if (_246da848b_isPrim(_111533_decl.get()._field_Ident)) {
			_case_begin_213338741:;
			{
				return jule::Trait<_246d8ea6b_Kind>(_246d9e394_buildPrim(&(*_self_), _111533_decl), 6);
			}
		}
		else {
			_case_begin_213337ec1:;
			{
				return _246da2661_getDef(&(*_self_), _111533_decl);
			}
		}
		_match_end_213337de4:;
	};
}



inline jule::Trait<_246d8ea6b_Kind> _246da2c7c_buildSubIdent(_246d9d4c5_typeChecker* _self_, jule::Ptr<_24612683c_SubIdentTypeDecl> _112436_decl) {
	jule::Trait<_246d8ea6b_Kind> _112517_ident = _246da296e_buildIdent(&(*_self_), _112436_decl.get()._field_Idents[0LL]);;
	if ((_112517_ident == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _112517_ident };
		
		if (_match_expr.type_is<jule::Ptr<_246cb76db_TypeEnum>>()) {
			_case_begin_21333a996:;
			{
				goto _match_end_21333a105;
			}
		}
		else {
			_case_begin_21333a15a:;
			{
				_246d9dbce_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_21333a105:;
	};
	jule::Ptr<_246cb76db_TypeEnum> _113617_t = _112517_ident.operator jule::Ptr<_246cb76db_TypeEnum>();;
	jule::Slice<jule::Ptr<_2461261dd_IdentTypeDecl>> _113717_idents = _112436_decl.get()._field_Idents.slice(1LL);;
	{
		auto &expr = _113717_idents;
		auto it = expr.begin();
		_iter_begin_21333b8ba:;
		if (it != expr.end()) {
			jule::I64 _113813_i = it - expr.begin();
			jule::Ptr<_2461261dd_IdentTypeDecl> _113816_id = *it;
			{
				jule::Ptr<_246cb7125_TypeEnumItem> _113921_item = _246cb8225_FindItem(_113617_t.ptr(), _113816_id.get()._field_Ident);;
				if ((_113921_item == nullptr)) {
					_246d9dbce_pushErr(&(*_self_), _113816_id.get()._field_Token,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_113617_t.get()._field_Ident),jule::Any(_113816_id.get()._field_Ident)}));
					return nullptr;
				};
				if (((_113717_idents.len() - _113813_i) == 1LL)) {
					_246d9e88e_pushReferenceByKind(&(*_self_), _113921_item.get()._field_Kind.get()._field_Kind);
					return jule::Trait<_246d8ea6b_Kind>(_113921_item.get()._field_Kind.get()._field_Kind, 5);
				};
				_113617_t=_246d92a5d_TypeEnum(_113921_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_113617_t == nullptr)) {
					_246d9dbce_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
			_iter_next_21333b8ba:;
			++it;
			_113813_i++;
			goto _iter_begin_21333b8ba;
		}
		_iter_end_21333b8ba:;
	};
	return nullptr;
}



inline jule::Ptr<_246d98206_Sptr> _246da308a_buildSptrFromType(_246d9d4c5_typeChecker* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _115841_elem) {
	{
		
		if ((_115841_elem == nullptr)) {
			_case_begin_21333c3b0:;
			{
				return nullptr;
			}
		}
		else if ((_246d9350e_Struct(_115841_elem.ptr()) != nullptr)) {
			_case_begin_213340e0d:;
			{
				jule::Ptr<_246142319_StructIns> _116417_s = _246d9350e_Struct(_115841_elem.ptr());;
				if (((_116417_s.get()._field_Decl != nullptr) && _116417_s.get()._field_Decl.get()._field_CppLinked)) {
					_246d9dbce_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
		}
		else if (((_246d92cc2_Arr(_115841_elem.ptr()) != nullptr) && _246d92cc2_Arr(_115841_elem.ptr()).get()._field_Auto)) {
			_case_begin_213340e74:;
			{
				_246d9dbce_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_21333c27d:;
	};
	return jule::new_ptr<_246d98206_Sptr>(_246d98206_Sptr{._field_Elem=_115841_elem});
}



inline jule::Ptr<_246d98206_Sptr> _246da3398_buildSptr(_246d9d4c5_typeChecker* _self_, jule::Ptr<_246126ed0_SptrTypeDecl> _117832_decl) {
	jule::Bool _117913_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_117913_notPlain;
	});;
	jule::Ptr<_246d8ee9a_TypeKind> _118317_elem = _246da5741_checkDecl(&(*_self_), _117832_decl.get()._field_Elem);;
	return _246da308a_buildSptrFromType(&(*_self_), _118317_elem);
}



inline jule::Ptr<_246d9b76a_Ptr> _246da36a6_buildPtrFromType(_246d9d4c5_typeChecker* _self_, jule::Ptr<_246d8ee9a_TypeKind>& _118740_elem) {
	{
		
		if ((_118740_elem == nullptr)) {
			_case_begin_2133463ca:;
			{
				return nullptr;
			}
		}
		else if (((_246d92cc2_Arr(_118740_elem.ptr()) != nullptr) && _246d92cc2_Arr(_118740_elem.ptr()).get()._field_Auto)) {
			_case_begin_213346452:;
			{
				_246d9dbce_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_246d9b76a_Ptr>();
			}
		}
		_match_end_2133462a9:;
	};
	return jule::new_ptr<_246d9b76a_Ptr>(_246d9b76a_Ptr{._field_Elem=_118740_elem});
}



inline jule::Ptr<_246d9b76a_Ptr> _246da39b4_buildPtr(_246d9d4c5_typeChecker* _self_, jule::Ptr<_2461279a3_PtrTypeDecl> _120231_decl) {
	jule::Bool _120313_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_120313_notPlain;
	});;
	jule::Ptr<_246d8ee9a_TypeKind> _120717_elem = nullptr;;
	if ((!(_246127d05_IsUnsafe(_120231_decl.ptr())))) {
		_120717_elem=_246da5741_checkDecl(&(*_self_), _120231_decl.get()._field_Elem);
		return _246da36a6_buildPtrFromType(&(*_self_), _120717_elem);
	};
	return jule::new_ptr<_246d9b76a_Ptr>(_246d9b76a_Ptr{._field_Elem=_120717_elem});
}



inline jule::Ptr<_246d98b63_Slc> _246da3cc2_buildSlc(_246d9d4c5_typeChecker* _self_, jule::Ptr<_2461273cb_SlcTypeDecl> _121931_decl) {
	jule::Bool _122013_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_122013_notPlain;
	});;
	jule::Ptr<_246d8ee9a_TypeKind> _122417_elem = _246da5741_checkDecl(&(*_self_), _121931_decl.get()._field_Elem);;
	{
		
		if ((_122417_elem == nullptr)) {
			_case_begin_21334bb1c:;
			{
				return nullptr;
			}
		}
		else if (((_246d92cc2_Arr(_122417_elem.ptr()) != nullptr) && _246d92cc2_Arr(_122417_elem.ptr()).get()._field_Auto)) {
			_case_begin_21334bb94:;
			{
				_246d9dbce_pushErr(&(*_self_), _121931_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_21334ba62:;
	};
	return jule::new_ptr<_246d98b63_Slc>(_246d98b63_Slc{._field_Elem=_122417_elem});
}



inline jule::Ptr<_246d9ad0d_Arr> _246da40d0_buildArr(_246d9d4c5_typeChecker* _self_, jule::Ptr<_246128135_ArrTypeDecl> _124031_decl) {
	jule::Bool _124113_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_124113_notPlain;
	});;
	jule::I64 _124517_n = 0LL;;
	if ((!(_24612850e_AutoSized(_124031_decl.ptr())))) {
		jule::Ptr<_246d5e398_Data> _124821_size = _246d81695_evalExpr(_246d02bbb_eval((*_self_)._field_s, (*_self_)._field_lookup), _124031_decl.get()._field_Size);;
		if ((_124821_size == nullptr)) {
			return nullptr;
		};
		if ((!(_246d5ec5b_IsConst(_124821_size.ptr())))) {
			_246d9dbce_pushErr(&(*_self_), _124031_decl.get()._field_Size.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_246d920ac_Prim(_124821_size.get()._field_Kind.ptr()) == nullptr) || (!(_246ca39e6_IsInt(_246d920ac_Prim(_124821_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_246d9dbce_pushErr(&(*_self_), _124031_decl.get()._field_Size.get()._field_Token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		};
		_124517_n=static_cast<jule::I64>(static_cast<jule::I64>(_24624782b_AsI64(_124821_size.get()._field_Constant.ptr())));
		if ((_124517_n < 0LL)) {
			_246d9dbce_pushErr(&(*_self_), _124031_decl.get()._field_Elem.get()._field_Token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_246263061_BitSize != 64LL) && (static_cast<jule::F64>(_124517_n) > _2466648a2_Max(jule::Str("int", 3))))) {
			_246d9dbce_pushErr(&(*_self_), _124031_decl.get()._field_Size.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	jule::Ptr<_246d8ee9a_TypeKind> _127117_elem = _246da5741_checkDecl(&(*_self_), _124031_decl.get()._field_Elem);;
	{
		
		if ((_127117_elem == nullptr)) {
			_case_begin_2133560ee:;
			{
				return nullptr;
			}
		}
		else if (((_246d92cc2_Arr(_127117_elem.ptr()) != nullptr) && _246d92cc2_Arr(_127117_elem.ptr()).get()._field_Auto)) {
			_case_begin_213356165:;
			{
				_246d9dbce_pushErr(&(*_self_), _124031_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_213355d79:;
	};
	return jule::new_ptr<_246d9ad0d_Arr>(_246d9ad0d_Arr{._field_Auto=_24612850e_AutoSized(_124031_decl.ptr()), ._field_N=_124517_n, ._field_Elem=_127117_elem});
}



inline jule::Ptr<_246d9a219_Map> _246da43dd_buildMap(_246d9d4c5_typeChecker* _self_, jule::Ptr<_246128883_MapTypeDecl> _128931_decl) {
	jule::Bool _129013_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_129013_notPlain;
	});;
	jule::Ptr<_246d8ee9a_TypeKind> _129417_key = _246da5741_checkDecl(&(*_self_), _128931_decl.get()._field_Key);;
	if ((_129417_key == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_246d8ee9a_TypeKind> _129917_val = _246da5741_checkDecl(&(*_self_), _128931_decl.get()._field_Val);;
	if ((_129917_val == nullptr)) {
		return nullptr;
	};
	if ((_246d927e9_Enum(_129917_val.ptr()) != nullptr)) {
		_246d9dbce_pushErr(&(*_self_), _128931_decl.get()._field_Val.get()._field_Token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_246d9a219_Map>(_246d9a219_Map{._field_Key=_129417_key, ._field_Val=_129917_val});
}



inline jule::Ptr<_246d996e1_Tuple> _246da46eb_buildTuple(_246d9d4c5_typeChecker* _self_, jule::Ptr<_2461276b7_TupleTypeDecl> _131333_decl) {
	jule::Slice<jule::Ptr<_246d8ee9a_TypeKind>> _131417_types = jule::Slice<jule::Ptr<_246d8ee9a_TypeKind>>::alloc(0LL, _131333_decl.get()._field_Types.len());;
	{
		auto &expr = _131333_decl.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_21335bec3:;
		if (it != expr.end()) {
			jule::Ptr<_246125b27_TypeDecl> _131521_t = *it;
			{
				jule::Ptr<_246d8ee9a_TypeKind> _131621_kind = _246da5741_checkDecl(&(*_self_), _131521_t);;
				if ((_131621_kind == nullptr)) {
					return nullptr;
				};
				_131417_types = jule::alloc_for_append(_131417_types,1);_131417_types.__push(_131621_kind);;
			}
			_iter_next_21335bec3:;
			++it;
			goto _iter_begin_21335bec3;
		}
		_iter_end_21335bec3:;
	};
	return jule::new_ptr<_246d996e1_Tuple>(_246d996e1_Tuple{._field_Types=_131417_types});
}



inline jule::Bool _246da4a09_checkFnTypes(_246d9d4c5_typeChecker* _self_, jule::Ptr<_246cabb42_FnIns>& _132636_f) {
	jule::Bool _132649_ok = false;
	{
		auto &expr = _132636_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_21335de2b:;
		if (it != expr.end()) {
			jule::Ptr<_246cab955_ParamIns> _132721_p = *it;
			{
				_132721_p.get()._field_Kind=_246da5433_build(&(*_self_), _132721_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind);
				_132649_ok=(_132721_p.get()._field_Kind != nullptr);
				if ((!(_132649_ok))) {
					_132649_ok = false;
					return _132649_ok;
				};
				_246d05097_checkFnParamKind((*_self_)._field_s, _132721_p);
			}
			_iter_next_21335de2b:;
			++it;
			goto _iter_begin_21335de2b;
		}
		_iter_end_21335de2b:;
	};
	if ((!(_24618a10e_IsVoid(_132636_f.get()._field_Decl.ptr())))) {
		_132636_f.get()._field_Result=_246da5433_build(&(*_self_), _132636_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind);
		_132649_ok = (_132636_f.get()._field_Result != nullptr);
		return _132649_ok;
	};
	_132649_ok = true;
	return _132649_ok;
}



inline jule::Ptr<_246cabb42_FnIns> _246da4d17_buildFn(_246d9d4c5_typeChecker* _self_, jule::Ptr<_2461375a6_FnDecl> _134430_decl) {
	if ((_134430_decl.get()._field_Generics.len() > 0LL)) {
		_246d9dbce_pushErr(&(*_self_), _134430_decl.get()._field_Token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_246cab768_Fn> _135017_f = _246cadbcc_buildFn(_134430_decl);;
	jule::I64 _135213_n = (*_self_)._field_s.get()._field_errors.len();;
	_246d0beb1_checkFnDecl((*_self_)._field_s, _135017_f);
	if ((_135213_n != (*_self_)._field_s.get()._field_errors.len())) {
		return nullptr;
	};
	jule::Ptr<_246cabb42_FnIns> _135817_ins = _24618148a_instanceForce(_135017_f);;
	_135817_ins.get()._field_Anon=true;
	jule::Bool _136113_ok = _246da4a09_checkFnTypes(&(*_self_), _135817_ins);;
	if ((!(_136113_ok))) {
		return nullptr;
	};
	return _135817_ins;
}



inline jule::Trait<_246d8ea6b_Kind> _246da5125_buildByNamespace(_246d9d4c5_typeChecker* _self_, jule::Ptr<_246126be4_NamespaceTypeDecl> _136939_decl) {
	jule::Str _137013_path = _246da7a95_buildLinkPathByTokens(_136939_decl.get()._field_Idents);;
	jule::Ptr<_246ce04c2_ImportInfo> _137117_imp = _246daaacb_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._246da9091_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_246ce04c2_ImportInfo>)>([=](jule::Ptr<_246ce04c2_ImportInfo> _137152_imp) mutable -> jule::Bool {
		if (((_136939_decl.get()._field_Idents.len() == 1LL) && (_137152_imp.get()._field_Alias == _137013_path))) {
			return true;
		};
		return ((_137152_imp.get()._field_LinkPath == _137013_path) && _246ce312e_isAccessibleViaSelection(_137152_imp.ptr()));
	}));;
	if (((_137117_imp == nullptr) || (!(_246ce2a8a_isLookupable(_137117_imp.ptr(), jule::Str("self", 4)))))) {
		_246d9dbce_pushErr(&(*_self_), _136939_decl.get()._field_Idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_137013_path)}));
		return nullptr;
	};
	_246d9e086_disallowBuiltin(&(*_self_));
	jule::Trait<_246daaacb_Lookup> _138417_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_246daaacb_Lookup>(_137117_imp, 1);
	jule::Ptr<_246d8ee9a_TypeKind> _138617_kind = _246da5741_checkDecl(&(*_self_), _136939_decl.get()._field_Kind);;
	(*_self_)._field_lookup=_138417_lookup;
	_246d9ddaa_allowBuiltin(&(*_self_));
	return jule::Trait<_246d8ea6b_Kind>(_138617_kind, 5);
}



inline jule::Ptr<_246d8ee9a_TypeKind> _246da5433_build(_246d9d4c5_typeChecker* _self_, jule::Any& _139229_declKind) {
	jule::Trait<_246d8ea6b_Kind> _139317_kind = nullptr;;
	{
		auto &_match_expr{ _139229_declKind };
		
		if (_match_expr.type_is<jule::Ptr<_2461261dd_IdentTypeDecl>>()) {
			_case_begin_21336e799:;
			{
				jule::Trait<_246d8ea6b_Kind> _139621_t = _246da296e_buildIdent(&(*_self_), _139229_declKind.operator jule::Ptr<_2461261dd_IdentTypeDecl>());;
				if ((_139621_t != nullptr)) {
					_139317_kind=_139621_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24612683c_SubIdentTypeDecl>>()) {
			_case_begin_21336e9ec:;
			{
				jule::Trait<_246d8ea6b_Kind> _140121_t = _246da2c7c_buildSubIdent(&(*_self_), _139229_declKind.operator jule::Ptr<_24612683c_SubIdentTypeDecl>());;
				if ((_140121_t != nullptr)) {
					_139317_kind=_140121_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246126ed0_SptrTypeDecl>>()) {
			_case_begin_21336d4ac:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_246d98206_Sptr> _140721_t = _246da3398_buildSptr(&(*_self_), _139229_declKind.operator jule::Ptr<_246126ed0_SptrTypeDecl>());;
				if ((_140721_t != nullptr)) {
					_139317_kind=jule::Trait<_246d8ea6b_Kind>(_140721_t, 7);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2461279a3_PtrTypeDecl>>()) {
			_case_begin_21336e678:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_246d9b76a_Ptr> _141321_t = _246da39b4_buildPtr(&(*_self_), _139229_declKind.operator jule::Ptr<_2461279a3_PtrTypeDecl>());;
				if ((_141321_t != nullptr)) {
					_139317_kind=jule::Trait<_246d8ea6b_Kind>(_141321_t, 12);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2461273cb_SlcTypeDecl>>()) {
			_case_begin_21336c632:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_246d98b63_Slc> _141921_t = _246da3cc2_buildSlc(&(*_self_), _139229_declKind.operator jule::Ptr<_2461273cb_SlcTypeDecl>());;
				if ((_141921_t != nullptr)) {
					_139317_kind=jule::Trait<_246d8ea6b_Kind>(_141921_t, 8);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246128135_ArrTypeDecl>>()) {
			_case_begin_21336c698:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_246d9ad0d_Arr> _142521_t = _246da40d0_buildArr(&(*_self_), _139229_declKind.operator jule::Ptr<_246128135_ArrTypeDecl>());;
				if ((_142521_t != nullptr)) {
					_139317_kind=jule::Trait<_246d8ea6b_Kind>(_142521_t, 11);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246128883_MapTypeDecl>>()) {
			_case_begin_21336c70e:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_246d9a219_Map> _143121_t = _246da43dd_buildMap(&(*_self_), _139229_declKind.operator jule::Ptr<_246128883_MapTypeDecl>());;
				if ((_143121_t != nullptr)) {
					_139317_kind=jule::Trait<_246d8ea6b_Kind>(_143121_t, 10);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2461276b7_TupleTypeDecl>>()) {
			_case_begin_21336c775:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_246d996e1_Tuple> _143721_t = _246da46eb_buildTuple(&(*_self_), _139229_declKind.operator jule::Ptr<_2461276b7_TupleTypeDecl>());;
				if ((_143721_t != nullptr)) {
					_139317_kind=jule::Trait<_246d8ea6b_Kind>(_143721_t, 9);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2461375a6_FnDecl>>()) {
			_case_begin_21336e029:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_246cabb42_FnIns> _144321_t = _246da4d17_buildFn(&(*_self_), _139229_declKind.operator jule::Ptr<_2461375a6_FnDecl>());;
				if ((_144321_t != nullptr)) {
					_139317_kind=jule::Trait<_246d8ea6b_Kind>(_144321_t, 1);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246126be4_NamespaceTypeDecl>>()) {
			_case_begin_21336e090:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_246d8ea6b_Kind> _144921_t = _246da5125_buildByNamespace(&(*_self_), _139229_declKind.operator jule::Ptr<_246126be4_NamespaceTypeDecl>());;
				if ((_144921_t != nullptr)) {
					_139317_kind=_144921_t;
				};
			}
		}
		else {
			_case_begin_21336c489:;
			{
				jule::Any _145421_udeclKind = (*(((jule::Any*)((&(_139229_declKind))))));;
				{
					auto &_match_expr{ _145421_udeclKind };
					
					if (_match_expr.type_is<jule::Ptr<_246d98206_Sptr>>()) {
						_case_begin_21336d3be:;
						{
							_139317_kind=jule::Trait<_246d8ea6b_Kind>(_145421_udeclKind.operator jule::Ptr<_246d98206_Sptr>(), 7);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_246d9b76a_Ptr>>()) {
						_case_begin_21336d435:;
						{
							_139317_kind=jule::Trait<_246d8ea6b_Kind>(_145421_udeclKind.operator jule::Ptr<_246d9b76a_Ptr>(), 12);
						}
					}
					else {
						_case_begin_21336d248:;
						{
							_246d9dbce_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_21336d149:;
				};
			}
		}
		_match_end_21336c434:;
	};
	if ((_139317_kind == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _139317_kind };
		
		if (_match_expr.type_is<jule::Ptr<_246d8ee9a_TypeKind>>()) {
			_case_begin_21337bcc3:;
			{
				return _139317_kind.operator jule::Ptr<_246d8ee9a_TypeKind>();
			}
		}
		else {
			_case_begin_21337b50e:;
			{
				return jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=_139317_kind});
			}
		}
		_match_end_21337b4a9:;
	};
}



inline jule::Ptr<_246d8ee9a_TypeKind> _246da5741_checkDecl(_246d9d4c5_typeChecker* _self_, jule::Ptr<_246125b27_TypeDecl>& _147833_decl) {
	jule::Ptr<_24496dc35_Token> _148017_errorToken = (*_self_)._field_errorToken;;
	(*_self_)._field_errorToken=_147833_decl.get()._field_Token;
	jule::Ptr<_246d8ee9a_TypeKind> _148317_kind = _246da5433_build(&(*_self_), _147833_decl.get()._field_Kind);;
	(*_self_)._field_errorToken=_148017_errorToken;
	return _148317_kind;
}



inline void _246da59b6_check(_246d9d4c5_typeChecker* _self_, jule::Ptr<_246d94103_TypeSymbol>& _148929_t) {
	if ((_148929_t.get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_246d8ee9a_TypeKind> _149317_kind = _246da5741_checkDecl(&(*_self_), _148929_t.get()._field_Decl);;
	if ((_149317_kind == nullptr)) {
		_246d94686_removeKind(_148929_t.ptr());
		return;;
	};
	_148929_t.get()._field_Kind=_149317_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _246d9d4c5_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__246da6126_identTypeDecl(jule::Str& _150530_ident, jule::Ptr<_2461261dd_IdentTypeDecl> _150542_t) {
	if ((_150542_t.get()._field_Ident == _150530_ident)) {
		return true;
	};
	{
		auto &expr = _150542_t.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_21338090e:;
		if (it != expr.end()) {
			jule::Ptr<_246125b27_TypeDecl> &_150916_g = *it;
			{
				if (static__246da6467_exist(_150530_ident,_150916_g.get()._field_Kind)) {
					return true;
				};
			}
			_iter_next_21338090e:;
			++it;
			goto _iter_begin_21338090e;
		}
		_iter_end_21338090e:;
	};
	return false;
}



inline jule::Bool static__246da6467_exist(jule::Str& _151722_ident, jule::Any& _151735_k) {
	{
		auto &_match_expr{ _151735_k };
		
		if (_match_expr.type_is<jule::Ptr<_2461261dd_IdentTypeDecl>>()) {
			_case_begin_213381bb8:;
			{
				return static__246da6126_identTypeDecl(_151722_ident,_151735_k.operator jule::Ptr<_2461261dd_IdentTypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24612683c_SubIdentTypeDecl>>()) {
			_case_begin_213381c2e:;
			{
				jule::Ptr<_24612683c_SubIdentTypeDecl> _152217_sit = _151735_k.operator jule::Ptr<_24612683c_SubIdentTypeDecl>();;
				{
					auto &expr = _152217_sit.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_21338366a:;
					if (it != expr.end()) {
						jule::Ptr<_2461261dd_IdentTypeDecl> &_152320_id = *it;
						{
							if (static__246da6126_identTypeDecl(_151722_ident,_152320_id)) {
								return true;
							};
						}
						_iter_next_21338366a:;
						++it;
						goto _iter_begin_21338366a;
					}
					_iter_end_21338366a:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246126ed0_SptrTypeDecl>>()) {
			_case_begin_213381c95:;
			{
				jule::Ptr<_246126ed0_SptrTypeDecl> _153017_sptr = _151735_k.operator jule::Ptr<_246126ed0_SptrTypeDecl>();;
				return static__246da6467_exist(_151722_ident,_153017_sptr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2461279a3_PtrTypeDecl>>()) {
			_case_begin_213381d0b:;
			{
				jule::Ptr<_2461279a3_PtrTypeDecl> _153317_ptr = _151735_k.operator jule::Ptr<_2461279a3_PtrTypeDecl>();;
				return static__246da6467_exist(_151722_ident,_153317_ptr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2461273cb_SlcTypeDecl>>()) {
			_case_begin_213381ed7:;
			{
				jule::Ptr<_2461273cb_SlcTypeDecl> _153617_slc = _151735_k.operator jule::Ptr<_2461273cb_SlcTypeDecl>();;
				return static__246da6467_exist(_151722_ident,_153617_slc.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246128135_ArrTypeDecl>>()) {
			_case_begin_21338204d:;
			{
				jule::Ptr<_246128135_ArrTypeDecl> _153917_arr = _151735_k.operator jule::Ptr<_246128135_ArrTypeDecl>();;
				return static__246da6467_exist(_151722_ident,_153917_arr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246128883_MapTypeDecl>>()) {
			_case_begin_2133820b4:;
			{
				jule::Ptr<_246128883_MapTypeDecl> _154217_m = _151735_k.operator jule::Ptr<_246128883_MapTypeDecl>();;
				return (static__246da6467_exist(_151722_ident,_154217_m.get()._field_Key.get()._field_Kind) || static__246da6467_exist(_151722_ident,_154217_m.get()._field_Val.get()._field_Kind));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2461375a6_FnDecl>>()) {
			_case_begin_21338212a:;
			{
				jule::Ptr<_2461375a6_FnDecl> _154617_f = _151735_k.operator jule::Ptr<_2461375a6_FnDecl>();;
				{
					auto &expr = _154617_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_213388d24:;
					if (it != expr.end()) {
						jule::Ptr<_246136286_ParamDecl> &_154720_p = *it;
						{
							if (_2461365e9_IsSelf(_154720_p.ptr())) {
								goto _iter_next_213388d24;
							};
							if (static__246da6467_exist(_151722_ident,_154720_p.get()._field_Kind.get()._field_Kind)) {
								return true;
							};
						}
						_iter_next_213388d24:;
						++it;
						goto _iter_begin_213388d24;
					}
					_iter_end_213388d24:;
				};
				if ((_154617_f.get()._field_Result != nullptr)) {
					return static__246da6467_exist(_151722_ident,_154617_f.get()._field_Result.get()._field_Kind.get()._field_Kind);
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2461276b7_TupleTypeDecl>>()) {
			_case_begin_213382191:;
			{
				jule::Ptr<_2461276b7_TupleTypeDecl> _156017_tup = _151735_k.operator jule::Ptr<_2461276b7_TupleTypeDecl>();;
				{
					auto &expr = _156017_tup.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_21338b398:;
					if (it != expr.end()) {
						jule::Ptr<_246125b27_TypeDecl> &_156120_t = *it;
						{
							if (static__246da6467_exist(_151722_ident,_156120_t.get()._field_Kind)) {
								return true;
							};
						}
						_iter_next_21338b398:;
						++it;
						goto _iter_begin_21338b398;
					}
					_iter_end_21338b398:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246126be4_NamespaceTypeDecl>>()) {
			_case_begin_21338234a:;
			{
				jule::Ptr<_246126be4_NamespaceTypeDecl> _156817_ns = _151735_k.operator jule::Ptr<_246126be4_NamespaceTypeDecl>();;
				return static__246da6467_exist(_151722_ident,_156817_ns.get()._field_Kind.get()._field_Kind);
			}
		}
		else {
			_case_begin_213381a64:;
			{
				return false;
			}
		}
		_match_end_213381a0e:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _246da5bd6_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2475c5aba_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24762263e_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _2476235eb_stop(_247622e69_scopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _247623860_stopped(_247622e69_scopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _247623ac4_finished(_247622e69_scopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());
}



inline jule::Bool _247623d38_isLastSt(_247622e69_scopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());
}



inline void _247624157_pushErr(_247622e69_scopeParser* _self_, jule::Ptr<_24496dc35_Token> _19126_token, jule::Str _19141_fmt) {
	_24764001e_pushErr((*_self_)._field_p.ptr(), _19126_token,_19141_fmt,jule::Slice<jule::Any>());
}



inline void _247624476_pushSuggestion(_247622e69_scopeParser* _self_, jule::Str _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	_24764033d_pushSuggestion((*_self_)._field_p.ptr(), _19633_fmt,jule::Any(_19646_args));
}



inline void _2476246eb_insertAsNext(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _20036_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_24762263e_stmt>(_24762263e_stmt{._field_tokens=_20036_tokens, });
}



inline jule::Ptr<_24762263e_stmt> _247624960_next(_247622e69_scopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_246135ab0_ScopeTree> _247624d17_buildScope(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _21034_tokens, jule::Ptr<_24496dc35_Token> _21056_end) {
	jule::Ptr<_246135ab0_ScopeTree> _21117_s = _24762151c_newScope();;
	_21117_s.get()._field_Parent=(*_self_)._field_s;
	_21117_s.get()._field_End=_21056_end;
	_247622e69_scopeParser _21417_ssp = _247622e69_scopeParser{._field_p=(*_self_)._field_p, };;
	_24762da02_build(&_21417_ssp, _21034_tokens,_21117_s);
	return _21117_s;
}



inline jule::Ptr<_246138585_VarDecl> _247625125_buildVarSt(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _22134_tokens) {
	jule::Ptr<_246138585_VarDecl> _22217_v = _247642a5a_buildVar((*_self_)._field_p, _22134_tokens);;
	_22217_v.get()._field_Scope=(*_self_)._field_s;
	return _22217_v;
}



inline jule::Ptr<_24613893c_RetSt> _247625433_buildRetSt(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _22733_tokens) {
	jule::Ptr<_24613893c_RetSt> _22817_st = jule::new_ptr<_24613893c_RetSt>(_24613893c_RetSt{._field_Token=_22733_tokens[0LL], });;
	if ((_22733_tokens.len() > 1LL)) {
		_22733_tokens=_22733_tokens.slice(1LL);
		_22817_st.get()._field_Expr=_24764064b_buildExpr((*_self_)._field_p, _22733_tokens);
	};
	return _22817_st;
}



inline jule::Ptr<_24613909c_Iter> _247625741_buildWhileNextIter(_247622e69_scopeParser* _self_, jule::Ptr<_24762263e_stmt>& _23842_s) {
	jule::Ptr<_24613909c_Iter> _23917_it = jule::new_ptr<_24613909c_Iter>(_24613909c_Iter{._field_Token=_23842_s.get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _24217_tokens = _23842_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_246139872_WhileKind> _24317_kind = jule::new_ptr<_246139872_WhileKind>();;
	if ((_24217_tokens.len() > 0LL)) {
		_24317_kind.get()._field_Expr=_24764064b_buildExpr((*_self_)._field_p, _24217_tokens);
	};
	if (_247623d38_isLastSt(&(*_self_))) {
		_247624157_pushErr(&(*_self_), _23917_it.get()._field_Token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	_24217_tokens=_247624960_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _25517_stTokens = _247639755_getBlockExpr(_24217_tokens);;
	if ((_25517_stTokens.len() > 0LL)) {
		jule::Ptr<_24762263e_stmt> _25721_stmt = jule::new_ptr<_24762263e_stmt>(_24762263e_stmt{._field_tokens=_25517_stTokens, ._field_terminated=_23842_s.get()._field_terminated});;
		_24317_kind.get()._field_NextToken=_25517_stTokens[0LL];
		_24317_kind.get()._field_Next=_24762d6d3_buildSt(&(*_self_), _25721_stmt);
	};
	jule::I64 _26517_i = _25517_stTokens.len();;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _26617_blockTokens = _24763c824_range(_26517_i,jule::Str("{", 1),jule::Str("}", 1),_24217_tokens);;
	if ((_26617_blockTokens == nullptr)) {
		_2476235eb_stop(&(*_self_));
		_247624157_pushErr(&(*_self_), _23917_it.get()._field_Token,jule::Str("body is not exist", 17));
		_247624476_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_26517_i < _24217_tokens.len())) {
		_247624157_pushErr(&(*_self_), _24217_tokens[_26517_i],jule::Str("invalid syntax", 14));
	};
	_23917_it.get()._field_Scope=_247624d17_buildScope(&(*_self_), _26617_blockTokens,_24217_tokens[(_26517_i - 1LL)]);
	_23917_it.get()._field_Kind=static_cast<jule::Any>(_24317_kind);
	return _23917_it;
}



inline jule::Ptr<_246139872_WhileKind> _247625a4e_buildWhileIterKind(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _28342_tokens) {
	return jule::new_ptr<_246139872_WhileKind>(_246139872_WhileKind{._field_Expr=_24764064b_buildExpr((*_self_)._field_p, _28342_tokens), });
}



inline jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _247625d5c_getRangeKindKeysTokens(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _28946_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _29018_vars;;
	jule::Slice<_244640d69_Log> _29024_errs;;
	std::tie(_29018_vars,_29024_errs) = _24763d391_parts(_28946_toks,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_29024_errs);
	return _29018_vars;
}



inline jule::Ptr<_246138585_VarDecl> _24762616a_buildRangeKindKey(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _29541_tokens) {
	if ((_29541_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_246138585_VarDecl> _29917_key = jule::new_ptr<_246138585_VarDecl>(_246138585_VarDecl{._field_Token=_29541_tokens[0LL], });;
	if ((_29917_key.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_29917_key.get()._field_Mutable=true;
		if ((_29541_tokens.len() == 1LL)) {
			_247624157_pushErr(&(*_self_), _29917_key.get()._field_Token,jule::Str("invalid syntax", 14));
		};
		_29917_key.get()._field_Token=_29541_tokens[1LL];
	} else if ((_29541_tokens.len() > 1LL)) {
		_247624157_pushErr(&(*_self_), _29541_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_29917_key.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_247624157_pushErr(&(*_self_), _29917_key.get()._field_Token,jule::Str("invalid syntax", 14));
		_247624476_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_29917_key.get()._field_Ident=_29917_key.get()._field_Token.get()._field_Kind;
	return _29917_key;
}



inline jule::Slice<jule::Ptr<_246138585_VarDecl>> _247626478_buildRangeKindKeys(_247622e69_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>>& _32042_parts) {
	jule::Slice<jule::Ptr<_246138585_VarDecl>> _32117_keys = nullptr;;
	{
		auto &expr = _32042_parts;
		auto it = expr.begin();
		_iter_begin_21352e371:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_24496dc35_Token>> _32221_tokens = *it;
			{
				_32117_keys = jule::alloc_for_append(_32117_keys,1);_32117_keys.__push(_24762616a_buildRangeKindKey(&(*_self_), _32221_tokens));;
			}
			_iter_next_21352e371:;
			++it;
			goto _iter_begin_21352e371;
		}
		_iter_end_21352e371:;
	};
	return _32117_keys;
}



inline void _2476267b9_setupRangeKindKeysPlain(_247622e69_scopeParser* _self_, jule::Ptr<_24613a213_RangeKind>& _32847_rng, jule::Slice<jule::Ptr<_24496dc35_Token>>& _32869_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _32917_keyTokens = _247625d5c_getRangeKindKeysTokens(&(*_self_), _32869_tokens);;
	if ((_32917_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32917_keyTokens.len() > 2LL)) {
		_247624157_pushErr(&(*_self_), _32847_rng.get()._field_InToken,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_246138585_VarDecl>> _33617_keys = _247626478_buildRangeKindKeys(&(*_self_), _32917_keyTokens);;
	_32847_rng.get()._field_KeyA=_33617_keys[0LL];
	if ((_33617_keys.len() > 1LL)) {
		_32847_rng.get()._field_KeyB=_33617_keys[1LL];
	};
}



inline void _247626b1b_setupRangeKindKeysExplicit(_247622e69_scopeParser* _self_, jule::Ptr<_24613a213_RangeKind>& _34350_rng, jule::Slice<jule::Ptr<_24496dc35_Token>>& _34372_tokens) {
	jule::I64 _34417_i = 0LL;;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _34517_rang = _24763c824_range(_34417_i,jule::Str("(", 1),jule::Str(")", 1),_34372_tokens);;
	if ((_34417_i < _34372_tokens.len())) {
		_247624157_pushErr(&(*_self_), _34350_rng.get()._field_InToken,jule::Str("invalid syntax", 14));
	};
	_2476267b9_setupRangeKindKeysPlain(&(*_self_), _34350_rng,_34517_rang);
}



inline void _247626e4b_setupRangeKindKeys(_247622e69_scopeParser* _self_, jule::Ptr<_24613a213_RangeKind>& _35242_rng, jule::Slice<jule::Ptr<_24496dc35_Token>>& _35264_tokens) {
	if ((_35264_tokens[0LL].get()._field_Id == static_cast<jule::U64>(3LLU))) {
		if ((_35264_tokens[0LL].get()._field_Kind != jule::Str("(", 1))) {
			_247624157_pushErr(&(*_self_), _35264_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_247626b1b_setupRangeKindKeysExplicit(&(*_self_), _35242_rng,_35264_tokens);
		return;;
	};
	_2476267b9_setupRangeKindKeysPlain(&(*_self_), _35242_rng,_35264_tokens);
}



inline jule::Ptr<_24613a213_RangeKind> _24762739c_buildRangeIterKind(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _36442_var_tokens, jule::Slice<jule::Ptr<_24496dc35_Token>>& _36514_exprTokens, jule::Ptr<_24496dc35_Token>& _36541_inToken) {
	jule::Ptr<_24613a213_RangeKind> _36617_rng = jule::new_ptr<_24613a213_RangeKind>(_24613a213_RangeKind{._field_InToken=_36541_inToken, });;
	if ((_36514_exprTokens.len() == 0LL)) {
		_247624157_pushErr(&(*_self_), _36617_rng.get()._field_InToken,jule::Str("expression missing", 18));
		return _36617_rng;
	};
	_36617_rng.get()._field_Expr=_24764064b_buildExpr((*_self_)._field_p, _36514_exprTokens);
	if ((_36442_var_tokens.len() > 0LL)) {
		_247626e4b_setupRangeKindKeys(&(*_self_), _36617_rng,_36442_var_tokens);
	};
	return _36617_rng;
}



inline jule::Any _247627754_buildCommonIterKind(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _38043_tokens, jule::Ptr<_24496dc35_Token>& _38062_err_tok) {
	jule::I64 _38117_braceN = 0LL;;
	{
		auto &expr = _38043_tokens;
		auto it = expr.begin();
		_iter_begin_21353a932:;
		if (it != expr.end()) {
			jule::I64 _38214_i = it - expr.begin();
			jule::Ptr<_24496dc35_Token> _38221_tok = *it;
			{
				if ((_38221_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38221_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_21353b900:;
							{
								(_38117_braceN)++;
								goto _iter_next_21353a932;
							}
						}
						else {
							_case_begin_21353bbdb:;
							{
								(_38117_braceN)--;
							}
						}
						_match_end_21353b9bb:;
					};
				};
				if ((_38117_braceN != 0LL)) {
					goto _iter_next_21353a932;
				};
				{
					auto &_match_expr{ _38221_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_21353c9de:;
						{
							jule::Slice<jule::Ptr<_24496dc35_Token>> _39925_declTokens = _38043_tokens.slice(0LL,_38214_i);;
							jule::Slice<jule::Ptr<_24496dc35_Token>> _40025_exprTokens = _38043_tokens.slice((_38214_i + 1LL));;
							return static_cast<jule::Any>(_24762739c_buildRangeIterKind(&(*_self_), _39925_declTokens,_40025_exprTokens,_38221_tok));
						}
					}
					_match_end_21353b5e2:;
				};
			}
			_iter_next_21353a932:;
			++it;
			_38214_i++;
			goto _iter_begin_21353a932;
		}
		_iter_end_21353a932:;
	};
	return static_cast<jule::Any>(_247625a4e_buildWhileIterKind(&(*_self_), _38043_tokens));
}



inline jule::Ptr<_24613909c_Iter> _247627a62_buildCommonIter(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _40738_tokens) {
	jule::Ptr<_24613909c_Iter> _40817_it = jule::new_ptr<_24613909c_Iter>(_24613909c_Iter{._field_Token=_40738_tokens[0LL], });;
	_40738_tokens=_40738_tokens.slice(1LL);
	if ((_40738_tokens.len() == 0LL)) {
		_2476235eb_stop(&(*_self_));
		_247624157_pushErr(&(*_self_), _40817_it.get()._field_Token,jule::Str("body is not exist", 17));
		_247624476_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_24496dc35_Token>> _41817_exprTokens = _247639755_getBlockExpr(_40738_tokens);;
	if ((_41817_exprTokens.len() > 0LL)) {
		_40817_it.get()._field_Kind=_247627754_buildCommonIterKind(&(*_self_), _41817_exprTokens,_40817_it.get()._field_Token);
	};
	jule::I64 _42217_i = _41817_exprTokens.len();;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _42317_scopeTokens = _24763c824_range(_42217_i,jule::Str("{", 1),jule::Str("}", 1),_40738_tokens);;
	if ((_42317_scopeTokens == nullptr)) {
		_2476235eb_stop(&(*_self_));
		_247624157_pushErr(&(*_self_), _40817_it.get()._field_Token,jule::Str("body is not exist", 17));
		_247624476_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_42217_i < _40738_tokens.len())) {
		_247624157_pushErr(&(*_self_), _40738_tokens[_42217_i],jule::Str("invalid syntax", 14));
	};
	_40817_it.get()._field_Scope=_247624d17_buildScope(&(*_self_), _42317_scopeTokens,_40738_tokens[(_42217_i - 1LL)]);
	return _40817_it;
}



inline jule::Ptr<_24613909c_Iter> _247627d70_buildIterSt(_247622e69_scopeParser* _self_, jule::Ptr<_24762263e_stmt>& _43735_st) {
	if (_43735_st.get()._field_terminated) {
		return _247625741_buildWhileNextIter(&(*_self_), _43735_st);
	};
	return _247627a62_buildCommonIter(&(*_self_), _43735_st.get()._field_tokens);
}



inline jule::Ptr<_24613a5ba_BreakSt> _24762817d_buildBreakSt(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _44436_tokens) {
	jule::Ptr<_24613a5ba_BreakSt> _44517_brk = jule::new_ptr<_24613a5ba_BreakSt>(_24613a5ba_BreakSt{._field_Token=_44436_tokens[0LL], });;
	if ((_44436_tokens.len() > 1LL)) {
		if ((_44436_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_247624157_pushErr(&(*_self_), _44436_tokens[1LL],jule::Str("invalid syntax", 14));
			_247624476_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44517_brk.get()._field_Label=_44436_tokens[1LL];
			if ((_44436_tokens.len() > 2LL)) {
				_247624157_pushErr(&(*_self_), _44436_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44517_brk;
}



inline jule::Ptr<_24613a972_ContSt> _24762848b_buildContSt(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _46235_tokens) {
	jule::Ptr<_24613a972_ContSt> _46317_cont = jule::new_ptr<_24613a972_ContSt>(_24613a972_ContSt{._field_Token=_46235_tokens[0LL], });;
	if ((_46235_tokens.len() > 1LL)) {
		if ((_46235_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_247624157_pushErr(&(*_self_), _46235_tokens[1LL],jule::Str("invalid syntax", 14));
			_247624476_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46317_cont.get()._field_Label=_46235_tokens[1LL];
			if ((_46235_tokens.len() > 2LL)) {
				_247624157_pushErr(&(*_self_), _46235_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46317_cont;
}



inline jule::Ptr<_24613ade5_If> _247628799_buildIf(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _48031_tokens) {
	jule::Ptr<_24613ade5_If> _48117_model = jule::new_ptr<_24613ade5_If>(_24613ade5_If{._field_Token=_48031_tokens[0LL], });;
	_48031_tokens=_48031_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_24496dc35_Token>> _48517_exprTokens = _247639755_getBlockExpr(_48031_tokens);;
	jule::I64 _48617_i = 0LL;;
	if ((_48517_exprTokens.len() == 0LL)) {
		_247624157_pushErr(&(*_self_), _48117_model.get()._field_Token,jule::Str("expression missing", 18));
	} else {
		_48617_i=static_cast<jule::I64>(_48517_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_24496dc35_Token>> _49217_scopeTokens = _24763c824_range(_48617_i,jule::Str("{", 1),jule::Str("}", 1),_48031_tokens);;
	if ((_49217_scopeTokens == nullptr)) {
		_2476235eb_stop(&(*_self_));
		_247624157_pushErr(&(*_self_), _48117_model.get()._field_Token,jule::Str("body is not exist", 17));
		_247624476_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_24496dc35_Token> _49917_end = _48031_tokens[(_48617_i - 1LL)];;
	if ((_48617_i < _48031_tokens.len())) {
		if ((_48031_tokens[_48617_i].get()._field_Id == static_cast<jule::U64>(17LLU))) {
			_48031_tokens=_48031_tokens.slice(_48617_i);
		} else {
			_247624157_pushErr(&(*_self_), _48031_tokens[_48617_i],jule::Str("invalid syntax", 14));
			_48031_tokens=nullptr;
		};
	};
	_48117_model.get()._field_Expr=_24764064b_buildExpr((*_self_)._field_p, _48517_exprTokens);
	_48117_model.get()._field_Scope=_247624d17_buildScope(&(*_self_), _49217_scopeTokens,_49917_end);
	return _48117_model;
}



inline jule::Ptr<_24613b29c_Else> _247628aa7_buildElse(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _51333_tokens) {
	jule::Ptr<_24613b29c_Else> _51417_els = jule::new_ptr<_24613b29c_Else>(_24613b29c_Else{._field_Token=_51333_tokens[0LL], });;
	_51333_tokens=_51333_tokens.slice(1LL);
	jule::I64 _51817_i = 0LL;;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _51917_scopeTokens = _24763c824_range(_51817_i,jule::Str("{", 1),jule::Str("}", 1),_51333_tokens);;
	if ((_51917_scopeTokens == nullptr)) {
		if ((_51817_i < _51333_tokens.len())) {
			_247624157_pushErr(&(*_self_), _51417_els.get()._field_Token,jule::Str("else's cannot have any expression", 33));
		} else {
			_2476235eb_stop(&(*_self_));
			_247624157_pushErr(&(*_self_), _51417_els.get()._field_Token,jule::Str("body is not exist", 17));
			_247624476_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	if ((_51817_i < _51333_tokens.len())) {
		_247624157_pushErr(&(*_self_), _51333_tokens[_51817_i],jule::Str("invalid syntax", 14));
	};
	_51417_els.get()._field_Scope=_247624d17_buildScope(&(*_self_), _51917_scopeTokens,_51333_tokens[(_51817_i - 1LL)]);
	return _51417_els;
}



inline jule::Ptr<_24613b720_Conditional> _247628db5_buildIfElseChain(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _53739_tokens) {
	jule::Ptr<_24613b720_Conditional> _53817_chain = jule::new_ptr<_24613b720_Conditional>(_24613b720_Conditional{._field_Head=_247628799_buildIf(&(*_self_), _53739_tokens), });;
	if ((_53817_chain.get()._field_Head == nullptr)) {
		return nullptr;
	};
	while ((_53739_tokens.len() != 0LL)) {
		{
			if ((_53739_tokens[0LL].get()._field_Id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_21355a303;
			};
			if (((_53739_tokens.len() > 1LL) && (_53739_tokens[1LL].get()._field_Id == static_cast<jule::U64>(16LLU)))) {
				_53739_tokens=_53739_tokens.slice(1LL);
				jule::Ptr<_24613ade5_If> _55025_elif = _247628799_buildIf(&(*_self_), _53739_tokens);;
				_53817_chain.get()._field_Tail = jule::alloc_for_append(_53817_chain.get()._field_Tail,1);_53817_chain.get()._field_Tail.__push(_55025_elif);;
				goto _iter_next_21355a303;
			};
			_53817_chain.get()._field_Default=_247628aa7_buildElse(&(*_self_), _53739_tokens);
			goto _iter_end_21355a303;
		}
	_iter_next_21355a303:;
	}
	_iter_end_21355a303:;;
	return _53817_chain;
}



inline jule::Ptr<_24612a148_Expr> _2476291c3_buildCoCallSt(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _56036_tokens) {
	jule::Ptr<_24496dc35_Token> _56113_token = _56036_tokens[0LL];;
	_56036_tokens=_56036_tokens.slice(1LL);
	jule::Ptr<_24612a148_Expr> _56317_e = _24764064b_buildExpr((*_self_)._field_p, _56036_tokens);;
	if ((_56317_e == nullptr)) {
		return _56317_e;
	};
	{
		auto &_match_expr{ _56317_e.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_24612e12a_FnCallExpr>>()) {
			_case_begin_21355edc9:;
			{
				_56317_e.get()._field_Kind.operator jule::Ptr<_24612e12a_FnCallExpr>().get()._field_IsCo=true;
			}
		}
		else {
			_case_begin_21355e9bc:;
			{
				_247624157_pushErr(&(*_self_), _56113_token,jule::Str("statement must have function call expression", 44));
			}
		}
		_match_end_21355e857:;
	};
	return _56317_e;
}



inline jule::Ptr<_24613367e_GotoSt> _2476294d1_buildGotoSt(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _57635_tokens) {
	jule::Ptr<_24613367e_GotoSt> _57717_gt = jule::new_ptr<_24613367e_GotoSt>(_24613367e_GotoSt{._field_Token=_57635_tokens[0LL], });;
	if ((_57635_tokens.len() == 1LL)) {
		_247624157_pushErr(&(*_self_), _57717_gt.get()._field_Token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;
	} else if ((_57635_tokens.len() > 2LL)) {
		_247624157_pushErr(&(*_self_), _57635_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_24496dc35_Token> _58617_identToken = _57635_tokens[1LL];;
	if ((_58617_identToken.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_247624157_pushErr(&(*_self_), _58617_identToken,jule::Str("invalid syntax", 14));
		_247624476_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return _57717_gt;
	};
	_57717_gt.get()._field_Label=_58617_identToken;
	return _57717_gt;
}



inline jule::Ptr<_24613396a_FallSt> _2476297de_buildFallSt(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _59635_tokens) {
	jule::Ptr<_24613396a_FallSt> _59717_fll = jule::new_ptr<_24613396a_FallSt>(_24613396a_FallSt{._field_Token=_59635_tokens[0LL]});;
	if ((_59635_tokens.len() > 1LL)) {
		_247624157_pushErr(&(*_self_), _59635_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return _59717_fll;
}



inline jule::Ptr<_24613bde6_TypeAliasDecl> _247629aec_buildTypeAliasSt(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _60640_tokens) {
	jule::Ptr<_24613bde6_TypeAliasDecl> _60717_tad = _247641c46_buildTypeAliasDecl((*_self_)._field_p, _60640_tokens);;
	_60717_tad.get()._field_Scope=(*_self_)._field_s;
	return _60717_tad;
}



inline void _24762a05e_pushCaseExpr(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _61235_tokens, jule::Ptr<_24496dc35_Token> _61257_token, jule::Bool _6139_typeMatch, jule::Slice<jule::Ptr<_24612a148_Expr>>& _61331_exprs) {
	if ((_61235_tokens.len() == 0LL)) {
		return;;
	};
	if (_6139_typeMatch) {
		jule::I64 _61921_i = 0LL;;
		jule::Ptr<_246125b27_TypeDecl> _62022_t;;
		jule::Bool _62025_ok;;
		std::tie(_62022_t,_62025_ok) = _247641938_buildType((*_self_)._field_p, _61235_tokens,(&(_61921_i)),true);
		if (_62025_ok) {
			_61331_exprs = jule::alloc_for_append(_61331_exprs,1);_61331_exprs.__push(jule::new_ptr<_24612a148_Expr>(_24612a148_Expr{._field_Token=_61235_tokens[0LL], ._field_End=_61235_tokens[(_61235_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(_62022_t)}));;
			if ((_61921_i < _61235_tokens.len())) {
				_247624157_pushErr(&(*_self_), _61235_tokens[_61921_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_61331_exprs = jule::alloc_for_append(_61331_exprs,1);_61331_exprs.__push(_24764064b_buildExpr((*_self_)._field_p, _61235_tokens));;
}



inline jule::Slice<jule::Ptr<_24612a148_Expr>> _24762a4b0_buildCaseExprs(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _63638_tokens, jule::Ptr<_24496dc35_Token>& _63661_colon, jule::Bool _63676_typeMatch) {
	jule::Slice<jule::Ptr<_24612a148_Expr>> _63717_exprs = jule::Slice<jule::Ptr<_24612a148_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63917_braceN = 0LL;;
	jule::I64 _64017_j = 0LL;;
	{
		auto &expr = _63638_tokens;
		auto it = expr.begin();
		_iter_begin_21356c832:;
		if (it != expr.end()) {
			jule::I64 _64114_i = it - expr.begin();
			jule::Ptr<_24496dc35_Token> _64121_tok = *it;
			{
				if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _64121_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_21356d943:;
							{
								(_63917_braceN)++;
							}
						}
						else {
							_case_begin_21356dc2e:;
							{
								(_63917_braceN)--;
							}
						}
						_match_end_21356da0e:;
					};
					goto _iter_next_21356c832;
				} else if ((_63917_braceN != 0LL)) {
					goto _iter_next_21356c832;
				};
				{
					
					if (((_64121_tok.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_64121_tok.get()._field_Kind == jule::Str("|", 1)))) {
						_case_begin_21356e229:;
						{
							jule::Slice<jule::Ptr<_24496dc35_Token>> _65721_exprTokens = _63638_tokens.slice(_64017_j,_64114_i);;
							if ((_65721_exprTokens.len() == 0LL)) {
								_247624157_pushErr(&(*_self_), _64121_tok,jule::Str("expression missing", 18));
							} else {
								_24762a05e_pushCaseExpr(&(*_self_), _63638_tokens.slice(_64017_j,_64114_i),_64121_tok,_63676_typeMatch,_63717_exprs);
							};
							_64017_j=static_cast<jule::I64>((_64114_i + 1LL));
						}
					}
					else if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_case_begin_21356eacb:;
						{
							_63661_colon=_64121_tok;
							_24762a05e_pushCaseExpr(&(*_self_), _63638_tokens.slice(_64017_j,_64114_i),_64121_tok,_63676_typeMatch,_63717_exprs);
							_63638_tokens=_63638_tokens.slice((_64114_i + 1LL));
							return _63717_exprs;
						}
					}
					_match_end_21356d855:;
				};
			}
			_iter_next_21356c832:;
			++it;
			_64114_i++;
			goto _iter_begin_21356c832;
		}
		_iter_end_21356c832:;
	};
	_247624157_pushErr(&(*_self_), _63638_tokens[0LL],jule::Str("invalid syntax", 14));
	_63638_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_246135ab0_ScopeTree> _24762a7bd_buildCaseScope(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _67638_tokens) {
	jule::I64 _67717_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67921_i = 0LL;;
			jule::Slice<jule::Ptr<_24496dc35_Token>> _68022_next;;
			std::tie(_68022_next,std::ignore) = _247622342_skipSt(_67921_i,_67638_tokens.slice(_67717_n));
			if ((_68022_next.len() == 0LL)) {
				goto _iter_end_213573a14;
			};
			jule::Ptr<_24496dc35_Token> _68417_tok = _68022_next[0LL];;
			if (((_68417_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_68417_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_67717_n+=_67921_i;
				goto _iter_next_213573a14;
			};
			jule::Slice<jule::Ptr<_24496dc35_Token>> _68921_scopeTokens = _67638_tokens.slice(0LL,_67717_n);;
			jule::Ptr<_246135ab0_ScopeTree> _69021_scope = _247624d17_buildScope(&(*_self_), _68921_scopeTokens,_67638_tokens[_67717_n]);;
			_67638_tokens=_67638_tokens.slice(_67717_n);
			return _69021_scope;
		}
	_iter_next_213573a14:;
	}
	_iter_end_213573a14:;;
	jule::Ptr<_24496dc35_Token> _69417_end;;
	if ((_67638_tokens.len() > 0LL)) {
		_69417_end=_67638_tokens[(_67638_tokens.len() - 1LL)];
	};
	jule::Ptr<_246135ab0_ScopeTree> _69817_scope = _247624d17_buildScope(&(*_self_), _67638_tokens,_69417_end);;
	_67638_tokens=nullptr;
	return _69817_scope;
}



inline std::tuple<jule::Ptr<_24613c369_Case>,jule::Bool> _24762ab75_buildCase(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _70333_tokens, jule::Bool _70351_typeMatch) {
	jule::Ptr<_24613c369_Case> _70417_c = jule::new_ptr<_24613c369_Case>(_24613c369_Case{._field_Token=_70333_tokens[0LL], });;
	_70333_tokens=_70333_tokens.slice(1LL);
	jule::Ptr<_24496dc35_Token> _70817_colon = nullptr;;
	_70417_c.get()._field_Exprs=_24762a4b0_buildCaseExprs(&(*_self_), _70333_tokens,_70817_colon,_70351_typeMatch);
	_70417_c.get()._field_Scope=_24762a7bd_buildCaseScope(&(*_self_), _70333_tokens);
	if ((_70417_c.get()._field_Scope.get()._field_End == nullptr)) {
		_70417_c.get()._field_Scope.get()._field_End=_70817_colon;
	};
	jule::Bool _71413_isDefault = (_70417_c.get()._field_Exprs.len() == 0LL);;
	return std::make_tuple(_70417_c,_71413_isDefault);
}



inline std::tuple<jule::Slice<jule::Ptr<_24613c369_Case>>,jule::Ptr<_24613b29c_Else>> _24762b02c_buildCases(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _71833_tokens, jule::Bool _71851_typeMatch) {
	jule::Slice<jule::Ptr<_24613c369_Case>> _71917_cases = nullptr;;
	jule::Ptr<_24613b29c_Else> _72017_def = nullptr;;
	jule::Bool _72117_defNotLast = false;;
	while ((_71833_tokens.len() > 0LL)) {
		{
			jule::Ptr<_24496dc35_Token> _72321_tok = _71833_tokens[0LL];;
			if (((_72321_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_72321_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_247624157_pushErr(&(*_self_), _72321_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_21357cd81;
			};
			jule::Ptr<_24613c369_Case> _72822_c;;
			jule::Bool _72825_isDefault;;
			std::tie(_72822_c,_72825_isDefault) = _24762ab75_buildCase(&(*_self_), _71833_tokens,_71851_typeMatch);
			if (_72825_isDefault) {
				_72822_c.get()._field_Token=_72321_tok;
				if ((_72017_def == nullptr)) {
					_72017_def=jule::new_ptr<_24613b29c_Else>(_24613b29c_Else{._field_Token=_72822_c.get()._field_Token, ._field_Scope=_72822_c.get()._field_Scope});
				} else {
					_247624157_pushErr(&(*_self_), _72321_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_72117_defNotLast=(_72117_defNotLast || (_72017_def != nullptr));
				_71917_cases = jule::alloc_for_append(_71917_cases,1);_71917_cases.__push(_72822_c);;
			};
		}
	_iter_next_21357cd81:;
	}
	_iter_end_21357cd81:;;
	if (_72117_defNotLast) {
		_247624157_pushErr(&(*_self_), _72017_def.get()._field_Token,jule::Str("default case should be last case", 32));
	};
	return std::make_tuple(_71917_cases,_72017_def);
}



inline jule::Ptr<_24613ca40_MatchCase> _24762b33a_buildMatchCase(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _75237_tokens) {
	jule::Ptr<_24613ca40_MatchCase> _75317_m = jule::new_ptr<_24613ca40_MatchCase>(_24613ca40_MatchCase{._field_Token=_75237_tokens[0LL], });;
	_75237_tokens=_75237_tokens.slice(1LL);
	if (((_75237_tokens.len() > 0LL) && (_75237_tokens[0LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
		_75317_m.get()._field_TypeMatch=true;
		_75237_tokens=_75237_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_24496dc35_Token>> _76317_exprTokens = _247639755_getBlockExpr(_75237_tokens);;
	if ((_76317_exprTokens.len() > 0LL)) {
		_75317_m.get()._field_Expr=_24764064b_buildExpr((*_self_)._field_p, _76317_exprTokens);
	} else if (_75317_m.get()._field_TypeMatch) {
		_247624157_pushErr(&(*_self_), _75317_m.get()._field_Token,jule::Str("expression missing", 18));
	};
	jule::I64 _77017_i = _76317_exprTokens.len();;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _77117_blockToks = _24763c824_range(_77017_i,jule::Str("{", 1),jule::Str("}", 1),_75237_tokens);;
	if ((_77117_blockToks == nullptr)) {
		_2476235eb_stop(&(*_self_));
		_247624157_pushErr(&(*_self_), _75317_m.get()._field_Token,jule::Str("body is not exist", 17));
		_247624476_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_77017_i < _75237_tokens.len())) {
		_247624157_pushErr(&(*_self_), _75237_tokens[_77017_i],jule::Str("invalid syntax", 14));
	};
	_75317_m.get()._field_End=_75237_tokens[(_77017_i - 1LL)];
	std::tie(_75317_m.get()._field_Cases,_75317_m.get()._field_Default) = _24762b02c_buildCases(&(*_self_), _77117_blockToks,_75317_m.get()._field_TypeMatch);
	return _75317_m;
}



inline jule::Ptr<_246135ab0_ScopeTree> _24762b648_buildScopeSt(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _78535_tokens) {
	jule::Bool _78617_isUnsafe = false;;
	jule::Bool _78717_isDeferred = false;;
	jule::Ptr<_24496dc35_Token> _78817_token = _78535_tokens[0LL];;
	if ((_78817_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_78617_isUnsafe=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_247624157_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
		_78817_token=_78535_tokens[0LL];
		if ((_78817_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
			_78717_isDeferred=true;
			_78535_tokens=_78535_tokens.slice(1LL);
			if ((_78535_tokens.len() == 0LL)) {
				_247624157_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
				return nullptr;
			};
		};
	} else if ((_78817_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_78717_isDeferred=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_247624157_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
	};
	jule::I64 _81417_i = 0LL;;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _81517_scopeTokens = _24763c824_range(_81417_i,jule::Str("{", 1),jule::Str("}", 1),_78535_tokens);;
	if ((_81517_scopeTokens == nullptr)) {
		_247624157_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if ((_81417_i < _78535_tokens.len())) {
		_247624157_pushErr(&(*_self_), _78535_tokens[_81417_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_246135ab0_ScopeTree> _82217_scope = _247624d17_buildScope(&(*_self_), _81517_scopeTokens,_78535_tokens[(_81417_i - 1LL)]);;
	_82217_scope.get()._field_Unsafety=_78617_isUnsafe;
	_82217_scope.get()._field_Deferred=_78717_isDeferred;
	return _82217_scope;
}



inline jule::Ptr<_2461332c7_LabelSt> _24762b956_buildLabelSt(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _82836_tokens) {
	jule::Ptr<_2461332c7_LabelSt> _82917_lbl = jule::new_ptr<_2461332c7_LabelSt>(_2461332c7_LabelSt{._field_Token=_82836_tokens[0LL], ._field_Ident=_82836_tokens[0LL].get()._field_Kind});;
	if ((_82836_tokens.len() > 2LL)) {
		_82836_tokens=_82836_tokens.slice(2LL);
		_2476246eb_insertAsNext(&(*_self_), _82836_tokens);
	};
	return _82917_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _24762bc64_buildIdSt(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _84333_tokens) {
	jule::Bool _84363_ok = false;
	if ((_84333_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(nullptr),_84363_ok);
	};
	jule::Ptr<_24496dc35_Token> _84817_token = _84333_tokens[1LL];;
	{
		auto &_match_expr{ _84817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_2135950c9:;
			{
				_84363_ok = true;
				return std::make_tuple(static_cast<jule::Any>(_24762b956_buildLabelSt(&(*_self_), _84333_tokens)),_84363_ok);
			}
		}
		_match_end_213595cab:;
	};
	return std::make_tuple(jule::Any(nullptr),_84363_ok);
}



inline jule::Ptr<_24763ac84_assignInfo> _24762c072_buildAssignInfo(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _85739_tokens) {
	jule::Ptr<_24763ac84_assignInfo> _85817_info = jule::new_ptr<_24763ac84_assignInfo>(_24763ac84_assignInfo{._field_ok=true});;
	jule::I64 _86117_braceN = 0LL;;
	{
		auto &expr = _85739_tokens;
		auto it = expr.begin();
		_iter_begin_213597ce1:;
		if (it != expr.end()) {
			jule::I64 _86214_i = it - expr.begin();
			jule::Ptr<_24496dc35_Token> _86221_token = *it;
			{
				if ((_86221_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _86221_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_213598ce2:;
							{
								(_86117_braceN)++;
							}
						}
						else {
							_case_begin_2135990cd:;
							{
								(_86117_braceN)--;
							}
						}
						_match_end_213598dad:;
					};
				};
				{
					
					if ((_86117_braceN > 0LL)) {
						_case_begin_2135989d4:;
						{
							goto _iter_next_213597ce1;
						}
					}
					else if ((_86221_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_213598a4a:;
						{
							goto _iter_next_213597ce1;
						}
					}
					else if ((!(_24497381c_IsAssignOp(_86221_token.get()._field_Kind)))) {
						_case_begin_213598ab1:;
						{
							goto _iter_next_213597ce1;
						}
					}
					_match_end_2135995c8:;
				};
				_85817_info.get()._field_l=_85739_tokens.slice(0LL,_86214_i);
				if ((_85817_info.get()._field_l.len() == 0LL)) {
					_85817_info.get()._field_ok=false;
				};
				_85817_info.get()._field_setter=_86221_token;
				if (((_86214_i + 1LL) >= _85739_tokens.len())) {
					_85817_info.get()._field_r=nullptr;
					_85817_info.get()._field_ok=_244973575_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_213597ce1;
				};
				_85817_info.get()._field_r=_85739_tokens.slice((_86214_i + 1LL));
				if (_244973575_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind)) {
					if ((_85817_info.get()._field_r.len() > 0LL)) {
						_247624157_pushErr(&(*_self_), _85817_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_85817_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_213597ce1;
			}
			_iter_next_213597ce1:;
			++it;
			_86214_i++;
			goto _iter_begin_213597ce1;
		}
		_iter_end_213597ce1:;
	};
	return _85817_info;
}



inline jule::Ptr<_246134075_AssignLeft> _24762c380_buildAssignL(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _90536_tokens) {
	jule::Ptr<_246134075_AssignLeft> _90617_l = jule::new_ptr<_246134075_AssignLeft>(_246134075_AssignLeft{._field_Token=_90536_tokens[0LL], });;
	if ((_90536_tokens[0LL].get()._field_Id == static_cast<jule::U64>(2LLU))) {
		_90617_l.get()._field_Ident=_90617_l.get()._field_Token.get()._field_Kind;
	};
	_90617_l.get()._field_Expr=_24764064b_buildExpr((*_self_)._field_p, _90536_tokens);
	return _90617_l;
}



inline jule::Slice<jule::Ptr<_246134075_AssignLeft>> _24762c68d_buildAssignLs(_247622e69_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>>& _91637_parts) {
	jule::Slice<jule::Ptr<_246134075_AssignLeft>> _91717_lefts = nullptr;;
	{
		auto &expr = _91637_parts;
		auto it = expr.begin();
		_iter_begin_2135a1d83:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_24496dc35_Token>> _91821_part = *it;
			{
				jule::Ptr<_246134075_AssignLeft> _91921_l = _24762c380_buildAssignL(&(*_self_), _91821_part);;
				_91717_lefts = jule::alloc_for_append(_91717_lefts,1);_91717_lefts.__push(_91921_l);;
			}
			_iter_next_2135a1d83:;
			++it;
			goto _iter_begin_2135a1d83;
		}
		_iter_end_2135a1d83:;
	};
	return _91717_lefts;
}



inline std::tuple<jule::Ptr<_2461345b4_AssignSt>,jule::Bool> _24762c99b_buildPlainAssign(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _92640_tokens) {
	jule::Ptr<_24763ac84_assignInfo> _92717_info = _24762c072_buildAssignInfo(&(*_self_), _92640_tokens);;
	if ((!(_92717_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_2461345b4_AssignSt> _93217_assign = jule::new_ptr<_2461345b4_AssignSt>(_2461345b4_AssignSt{._field_Setter=_92717_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _93618_parts;;
	jule::Slice<_244640d69_Log> _93625_errs;;
	std::tie(_93618_parts,_93625_errs) = _24763d391_parts(_92717_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
	if ((_93625_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_93625_errs);
		return std::make_tuple(nullptr,false);
	};
	_93217_assign.get()._field_Left=_24762c68d_buildAssignLs(&(*_self_), _93618_parts);
	if ((_92717_info.get()._field_r != nullptr)) {
		_93217_assign.get()._field_Right=_24764064b_buildExpr((*_self_)._field_p, _92717_info.get()._field_r);
	};
	return std::make_tuple(_93217_assign,true);
}



inline std::tuple<jule::Ptr<_2461345b4_AssignSt>,jule::Bool> _24762cca9_buildDeclAssign(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _95038_tokens) {
	if ((_95038_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	};
	_95038_tokens=_95038_tokens.slice(1LL);
	jule::Ptr<_24496dc35_Token> _95617_token = _95038_tokens[0LL];;
	if (((_95617_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_95617_token.get()._field_Kind != jule::Str("(", 1)))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_2461345b4_AssignSt> _96117_assign = jule::new_ptr<_2461345b4_AssignSt>(_2461345b4_AssignSt{._field_Declarative=true, });;
	jule::I64 _96517_i = 0LL;;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _96617_rang = _24763c824_range(_96517_i,jule::Str("(", 1),jule::Str(")", 1),_95038_tokens);;
	if ((_96617_rang == nullptr)) {
		_247624157_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if (((_96517_i + 1LL) < _95038_tokens.len())) {
		_96117_assign.get()._field_Setter=_95038_tokens[_96517_i];
		(_96517_i)++;
		jule::Slice<jule::Ptr<_24496dc35_Token>> _97321_exprTokens = _95038_tokens.slice(_96517_i);;
		_96117_assign.get()._field_Right=_24764064b_buildExpr((*_self_)._field_p, _97321_exprTokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _97818_parts;;
	jule::Slice<_244640d69_Log> _97825_errs;;
	std::tie(_97818_parts,_97825_errs) = _24763d391_parts(_96617_rang,static_cast<jule::U64>(8LLU),true);
	if ((_97825_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_97825_errs);
		return std::make_tuple(nullptr,false);
	};
	{
		auto &expr = _97818_parts;
		auto it = expr.begin();
		_iter_begin_2135b4615:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_24496dc35_Token>> _98421_part = *it;
			{
				jule::Bool _98521_isMut = false;;
				jule::Bool _98621_isRef = false;;
				_95617_token=_98421_part[0LL];
				if ((_95617_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_98521_isMut=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_247624157_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
						goto _iter_next_2135b4615;
					};
				};
				if (((_98421_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_98421_part[0LL].get()._field_Kind == jule::Str("&", 1)))) {
					_98621_isRef=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_247624157_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
						goto _iter_next_2135b4615;
					};
				};
				if ((((_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(2LLU)) && (_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(3LLU))) && (_98421_part[0LL].get()._field_Kind != jule::Str("(", 1)))) {
					_247624157_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
					goto _iter_next_2135b4615;
				};
				jule::Ptr<_246134075_AssignLeft> _101421_l = _24762c380_buildAssignL(&(*_self_), _98421_part);;
				_101421_l.get()._field_Mutable=_98521_isMut;
				_101421_l.get()._field_Reference=_98621_isRef;
				_96117_assign.get()._field_Left = jule::alloc_for_append(_96117_assign.get()._field_Left,1);_96117_assign.get()._field_Left.__push(_101421_l);;
			}
			_iter_next_2135b4615:;
			++it;
			goto _iter_begin_2135b4615;
		}
		_iter_end_2135b4615:;
	};
	return std::make_tuple(_96117_assign,true);
}



inline std::tuple<jule::Ptr<_2461345b4_AssignSt>,jule::Bool> _24762d0b7_buildAssignSt(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _102337_tokens) {
	jule::Ptr<_2461345b4_AssignSt> _102357_st = jule::Ptr<_2461345b4_AssignSt>(nullptr);
	jule::Bool _102372_ok = false;
	if ((!(_24763b12a_checkAssignTokens(_102337_tokens)))) {
		_102357_st = nullptr;
		_102372_ok = false;
		return std::make_tuple(_102357_st,_102372_ok);
	};
	{
		auto &_match_expr{ _102337_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_2135bcd9e:;
			{
				std::tie(_102357_st,_102372_ok) = _24762cca9_buildDeclAssign(&(*_self_), _102337_tokens);
			}
		}
		else {
			_case_begin_2135bc970:;
			{
				std::tie(_102357_st,_102372_ok) = _24762c99b_buildPlainAssign(&(*_self_), _102337_tokens);
			}
		}
		_match_end_2135bc91a:;
	};
	return std::make_tuple(_102357_st,_102372_ok);
}



inline jule::Ptr<_24612a9d9_UseExpr> _24762d3c5_buildUseExpr(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _103836_tokens) {
	if ((_103836_tokens.len() == 1LL)) {
		_247624157_pushErr(&(*_self_), _103836_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;
	};
	jule::Ptr<_24612a9d9_UseExpr> _104317_ue = jule::new_ptr<_24612a9d9_UseExpr>(_24612a9d9_UseExpr{._field_Token=_103836_tokens[0LL], });;
	_103836_tokens=_103836_tokens.slice(1LL);
	_104317_ue.get()._field_Expr=_24764064b_buildExpr((*_self_)._field_p, _103836_tokens);
	return _104317_ue;
}



inline jule::Any _24762d6d3_buildSt(_247622e69_scopeParser* _self_, jule::Ptr<_24762263e_stmt>& _105131_st) {
	jule::Ptr<_24496dc35_Token> _105217_token = _105131_st.get()._field_tokens[0LL];;
	if ((_105217_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		jule::Any _105422_s;;
		jule::Bool _105425_ok;;
		std::tie(_105422_s,_105425_ok) = _24762bc64_buildIdSt(&(*_self_), _105131_st.get()._field_tokens);
		if (_105425_ok) {
			return _105422_s;
		};
	};
	jule::Ptr<_2461345b4_AssignSt> _106018_s;;
	jule::Bool _106021_ok;;
	std::tie(_106018_s,_106021_ok) = _24762d0b7_buildAssignSt(&(*_self_), _105131_st.get()._field_tokens);
	if (_106021_ok) {
		return static_cast<jule::Any>(_106018_s);
	};
	{
		auto &_match_expr{ _105217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_2135c3514:;
			{
				return static_cast<jule::Any>(_24762d3c5_buildUseExpr(&(*_self_), _105131_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_2135c326c:;
			{
				return static_cast<jule::Any>(_247625125_buildVarSt(&(*_self_), _105131_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_2135c3811:;
			{
				return static_cast<jule::Any>(_247625433_buildRetSt(&(*_self_), _105131_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_2135c3877:;
			{
				return static_cast<jule::Any>(_247627d70_buildIterSt(&(*_self_), _105131_st));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_2135c38dd:;
			{
				return static_cast<jule::Any>(_24762817d_buildBreakSt(&(*_self_), _105131_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_2135c3954:;
			{
				return static_cast<jule::Any>(_24762848b_buildContSt(&(*_self_), _105131_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_2135c39ba:;
			{
				return static_cast<jule::Any>(_247628db5_buildIfElseChain(&(*_self_), _105131_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_2135c3a31:;
			{
				return static_cast<jule::Any>(_2476291c3_buildCoCallSt(&(*_self_), _105131_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_2135c3a97:;
			{
				return static_cast<jule::Any>(_2476294d1_buildGotoSt(&(*_self_), _105131_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_2135c3b0d:;
			{
				return static_cast<jule::Any>(_2476297de_buildFallSt(&(*_self_), _105131_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_2135c3b74:;
			{
				return static_cast<jule::Any>(_247629aec_buildTypeAliasSt(&(*_self_), _105131_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_2135c3beb:;
			{
				return static_cast<jule::Any>(_24762b33a_buildMatchCase(&(*_self_), _105131_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_2135c3c73:;
			{
				return static_cast<jule::Any>(_24762b648_buildScopeSt(&(*_self_), _105131_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_2135c3cea:;
			{
				if ((_105217_token.get()._field_Kind == jule::Str("{", 1))) {
					return static_cast<jule::Any>(_24762b648_buildScopeSt(&(*_self_), _105131_st.get()._field_tokens));
				};
			}
		}
		_match_end_2135c338d:;
	};
	jule::Ptr<_24612a148_Expr> _110117_expr = _24764064b_buildExpr((*_self_)._field_p, _105131_st.get()._field_tokens);;
	if ((_110117_expr != nullptr)) {
		return static_cast<jule::Any>(_110117_expr);
	};
	_247624157_pushErr(&(*_self_), _105217_token,jule::Str("invalid syntax", 14));
	return nullptr;
}



inline void _24762da02_build(_247622e69_scopeParser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _110929_tokens, jule::Ptr<_246135ab0_ScopeTree>& _110952_s) {
	if ((_110952_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_2476229d5_splitStmts(_110929_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_110952_s;
	while (((!(_247623d38_isLastSt(&(*_self_)))) && (!(_247623ac4_finished(&(*_self_)))))) {
		{
			jule::Ptr<_24762263e_stmt> _111721_st = _247624960_next(&(*_self_));;
			jule::Any _111821_data = _24762d6d3_buildSt(&(*_self_), _111721_st);;
			if ((_111821_data != nullptr)) {
				(*_self_)._field_s.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_Stmts,1);(*_self_)._field_s.get()._field_Stmts.__push(_2461354a5_Stmt{._field_Token=_111721_st.get()._field_tokens[0LL], ._field_Data=_111821_data});;
			};
			if (_247623860_stopped(&(*_self_))) {
				goto _iter_end_2135ccc38;
			};
		}
	_iter_next_2135ccc38:;
	}
	_iter_end_2135ccc38:;;
}







std::ostream &operator<<(std::ostream &_Stream, _247622e69_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _24762ec23_pushErr(_24762e42b_exprBuilder* _self_, jule::Ptr<_24496dc35_Token> _4426_token, jule::Str _4441_fmt, jule::Slice<jule::Any> _4454_args) {
	_24764001e_pushErr((*_self_)._field_p.ptr(), _4426_token,_4441_fmt,jule::Any(_4454_args));
}



inline void _247630042_pushSuggestion(_24762e42b_exprBuilder* _self_, jule::Str _4933_fmt, jule::Slice<jule::Any> _4946_args) {
	_24764033d_pushSuggestion((*_self_)._field_p.ptr(), _4933_fmt,jule::Any(_4946_args));
}



inline jule::Ptr<_24612acc5_TupleExpr> _247630350_buildTuple(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>>& _5334_parts) {
	jule::Ptr<_24612acc5_TupleExpr> _5417_tuple = jule::new_ptr<_24612acc5_TupleExpr>(_24612acc5_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_24612a148_Expr>>::alloc(0LL, _5334_parts.len())});;
	{
		auto &expr = _5334_parts;
		auto it = expr.begin();
		_iter_begin_213600321:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_24496dc35_Token>> _5721_part = *it;
			{
				_5417_tuple.get()._field_Expr = jule::alloc_for_append(_5417_tuple.get()._field_Expr,1);_5417_tuple.get()._field_Expr.__push(_247638d70_buildFromTokens(&(*_self_), _5721_part));;
			}
			_iter_next_213600321:;
			++it;
			goto _iter_begin_213600321;
		}
		_iter_end_213600321:;
	};
	return _5417_tuple;
}



inline jule::Ptr<_24612b17c_LitExpr> _24763065d_buildLit(_24762e42b_exprBuilder* _self_, jule::Ptr<_24496dc35_Token> _6327_token) {
	return jule::new_ptr<_24612b17c_LitExpr>(_24612b17c_LitExpr{._field_Token=_6327_token, ._field_Value=_6327_token.get()._field_Kind});
}



inline jule::Ptr<_246125b27_TypeDecl> _24763096b_buildPrimitiveType(_24762e42b_exprBuilder* _self_, jule::Ptr<_24496dc35_Token>& _7038_token) {
	return _24764ed42_buildPrimType(_7038_token);
}



inline jule::Any _247630c79_buildSingle(_24762e42b_exprBuilder* _self_, jule::Ptr<_24496dc35_Token> _7434_token) {
	{
		auto &_match_expr{ _7434_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_21360218b:;
			{
				return static_cast<jule::Any>(_24763065d_buildLit(&(*_self_), _7434_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_213602202:;
			{
				if ((_7434_token.get()._field_Kind == jule::Str("...", 3))) {
					return static_cast<jule::Any>(jule::new_ptr<_24612c8ba_VariadicExpr>(_24612c8ba_VariadicExpr{._field_Token=_7434_token, }));
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(27LLU) || _match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_213602268:;
			{
				return static_cast<jule::Any>(_24763a129_buildIdentExpr(_7434_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_2136022ce:;
			{
				return static_cast<jule::Any>(_24763096b_buildPrimitiveType(&(*_self_), _7434_token));
			}
		}
		_match_end_2136010e1:;
	};
	_24762ec23_pushErr(&(*_self_), _7434_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_24612bd09_IdentExpr> _247631087_buildCppLinkedIdent(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _9543_tokens) {
	if ((_9543_tokens[0LL].get()._field_Id != static_cast<jule::U64>(30LLU))) {
		return nullptr;
	} else if ((_9543_tokens[1LL].get()._field_Id != static_cast<jule::U64>(20LLU))) {
		_24762ec23_pushErr(&(*_self_), _9543_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_247630042_pushSuggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_24496dc35_Token> _10317_token = _9543_tokens[2LL];;
	if ((_10317_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_24762ec23_pushErr(&(*_self_), _9543_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_247630042_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_24612bd09_IdentExpr> _10917_expr = _24763a129_buildIdentExpr(_10317_token);;
	_10917_expr.get()._field_CppLinked=true;
	return _10917_expr;
}



inline jule::Ptr<_24612c513_UnaryExpr> _247631395_buildUnary(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _11433_tokens) {
	jule::Ptr<_24496dc35_Token> _11517_op = _11433_tokens[0LL];;
	if ((_11433_tokens.len() == 1LL)) {
		_24762ec23_pushErr(&(*_self_), _11517_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_24496e43e_IsUnaryOp(_11517_op.get()._field_Kind)))) {
		_24762ec23_pushErr(&(*_self_), _11517_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>::make({jule::Any(_11517_op.get()._field_Kind)}));
		return nullptr;
	};
	_11433_tokens=_11433_tokens.slice(1LL);
	return jule::new_ptr<_24612c513_UnaryExpr>(_24612c513_UnaryExpr{._field_Op=_11517_op, ._field_Expr=_247638d70_buildFromTokens(&(*_self_), _11433_tokens)});
}



inline jule::Ptr<_24612d59c_SubIdentExpr> _2476316a3_buildObjSubIdent(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _13539_tokens) {
	jule::I64 _13617_i = (_13539_tokens.len() - 1LL);;
	jule::Ptr<_24496dc35_Token> _13717_identToken = _13539_tokens[_13617_i];;
	(_13617_i)--;
	_13539_tokens=_13539_tokens.slice(0LL,_13617_i);
	if ((_13539_tokens.len() == 0LL)) {
		_24762ec23_pushErr(&(*_self_), _13717_identToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_24612d59c_SubIdentExpr>(_24612d59c_SubIdentExpr{._field_Expr=_247638d70_buildFromTokens(&(*_self_), _13539_tokens), ._field_Ident=_13717_identToken});
}



inline jule::Ptr<_24612d129_NsSelectionExpr> _2476319b1_buildNsSubIdent(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _15039_tokens) {
	jule::Ptr<_24612d129_NsSelectionExpr> _15117_ns = jule::new_ptr<_24612d129_NsSelectionExpr>();;
	{
		auto &expr = _15039_tokens;
		auto it = expr.begin();
		_iter_begin_21360e52d:;
		if (it != expr.end()) {
			jule::I64 _15214_i = it - expr.begin();
			jule::Ptr<_24496dc35_Token> _15221_token = *it;
			{
				if (((_15214_i & 1LL) == 0LL)) {
					if ((_15221_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
						_24762ec23_pushErr(&(*_self_), _15221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_247630042_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_15117_ns.get()._field_Ns = jule::alloc_for_append(_15117_ns.get()._field_Ns,1);_15117_ns.get()._field_Ns.__push(_15221_token);;
				} else if ((_15221_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_24762ec23_pushErr(&(*_self_), _15221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_247630042_pushSuggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_21360e52d:;
			++it;
			_15214_i++;
			goto _iter_begin_21360e52d;
		}
		_iter_end_21360e52d:;
	};
	_15117_ns.get()._field_Ident=_15117_ns.get()._field_Ns[(_15117_ns.get()._field_Ns.len() - 1LL)];
	_15117_ns.get()._field_Ns=_15117_ns.get()._field_Ns.slice(0LL,(_15117_ns.get()._field_Ns.len() - 1LL));
	return _15117_ns;
}



inline jule::Ptr<_246125b27_TypeDecl> _247631cbe_buildType(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _16933_tokens) {
	jule::I64 _17017_i = 0LL;;
	jule::Ptr<_246125b27_TypeDecl> _17118_t;;
	jule::Bool _17121_ok;;
	std::tie(_17118_t,_17121_ok) = _247641938_buildType((*_self_)._field_p, _16933_tokens,(&(_17017_i)),false);
	if ((!(_17121_ok))) {
		_24762ec23_pushErr(&(*_self_), _16933_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_17017_i < _16933_tokens.len())) {
		_24762ec23_pushErr(&(*_self_), _16933_tokens[_17017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _17118_t;
}



inline jule::Any _2476320cc_buildSubIdent(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _18337_tokens) {
	jule::I64 _18413_i = (_18337_tokens.len() - 2LL);;
	jule::Ptr<_24496dc35_Token> _18513_token = _18337_tokens[_18413_i];;
	{
		auto &_match_expr{ _18513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_213617206:;
			{
				return static_cast<jule::Any>(_2476316a3_buildObjSubIdent(&(*_self_), _18337_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_213617778:;
			{
				return static_cast<jule::Any>(_2476319b1_buildNsSubIdent(&(*_self_), _18337_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_2136177de:;
			{
				if ((_18513_token.get()._field_Kind == jule::Str("]", 1))) {
					return static_cast<jule::Any>(_247631cbe_buildType(&(*_self_), _18337_tokens));
				};
			}
		}
		_match_end_2136175e1:;
	};
	_24762ec23_pushErr(&(*_self_), _18513_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_24612c8ba_VariadicExpr> _2476323da_buildVariadic(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _20136_tokens) {
	jule::Ptr<_24496dc35_Token> _20217_token = _20136_tokens[(_20136_tokens.len() - 1LL)];;
	_20136_tokens=_20136_tokens.slice(0LL,(_20136_tokens.len() - 1LL));
	return jule::new_ptr<_24612c8ba_VariadicExpr>(_24612c8ba_VariadicExpr{._field_Token=_20217_token, ._field_Expr=_247638d70_buildFromTokens(&(*_self_), _20136_tokens)});
}



inline jule::Any _2476326e8_buildOpRight(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _21036_tokens) {
	jule::Ptr<_24496dc35_Token> _21117_token = _21036_tokens[(_21036_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _21117_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_21361bd32:;
			{
				_21036_tokens=_21036_tokens.slice(0LL,(_21036_tokens.len() - 1LL));
				jule::Any _21521_d = _247638754_build(&(*_self_), _21036_tokens);;
				if ((_21521_d == nullptr)) {
					return nullptr;
				};
				{
					auto &_match_expr{ _21521_d };
					
					if (_match_expr.type_is<jule::Ptr<_24612e12a_FnCallExpr>>()) {
						_case_begin_21361d608:;
						{
							_21521_d.operator jule::Ptr<_24612e12a_FnCallExpr>().get()._field_Exception=jule::new_ptr<_246135ab0_ScopeTree>(_246135ab0_ScopeTree{._field_Deferred=true, });
							return _21521_d;
						}
					}
					_match_end_21361d570:;
				};
			}
		}
		_match_end_21361bcbb:;
	};
	_24762ec23_pushErr(&(*_self_), _21117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_24612a434_RangeExpr> _247632a28_buildBetweenParentheses(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _23146_tokens) {
	if ((_23146_tokens.len() == 2LL)) {
		_24762ec23_pushErr(&(*_self_), _23146_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_247630042_pushSuggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	};
	_23146_tokens=_23146_tokens.slice(1LL,(_23146_tokens.len() - 1LL));
	return jule::new_ptr<_24612a434_RangeExpr>(_24612a434_RangeExpr{._field_Expr=_247638d70_buildFromTokens(&(*_self_), _23146_tokens)});
}



inline jule::Ptr<_24612cc72_CastExpr> _247632d47_tryBuildCast(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _24336_tokens) {
	jule::I64 _24417_rangeN = 0LL;;
	{
		auto &expr = _24336_tokens;
		auto it = expr.begin();
		_iter_begin_213621dae:;
		if (it != expr.end()) {
			jule::I64 _24513_i = it - expr.begin();
			jule::Ptr<_24496dc35_Token> _24516_token = *it;
			{
				if ((_24516_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _24516_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_213622cd3:;
							{
								(_24417_rangeN)++;
								goto _iter_next_213621dae;
							}
						}
						else {
							_case_begin_2136230be:;
							{
								(_24417_rangeN)--;
							}
						}
						_match_end_213622d9e:;
					};
				};
				if ((_24417_rangeN > 0LL)) {
					goto _iter_next_213621dae;
				} else if (((_24513_i + 1LL) == _24336_tokens.len())) {
					return nullptr;
				};
				jule::Slice<jule::Ptr<_24496dc35_Token>> _26421_typeTokens = _24336_tokens.slice(0LL,(_24513_i + 1LL));;
				jule::Slice<jule::Ptr<_24496dc35_Token>> _26521_exprTokens = _24336_tokens.slice((_24513_i + 1LL));;
				if ((_26521_exprTokens.len() == 0LL)) {
					return nullptr;
				};
				jule::Ptr<_24496dc35_Token> _27217_tok = _26521_exprTokens[0LL];;
				if (((_27217_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_27217_tok.get()._field_Kind != jule::Str("(", 1)))) {
					return nullptr;
				};
				jule::Ptr<_24612cc72_CastExpr> _27721_cast = jule::new_ptr<_24612cc72_CastExpr>(_24612cc72_CastExpr{});;
				if ((_26521_exprTokens.len() == 2LL)) {
					_24762ec23_pushErr(&(*_self_), _26521_exprTokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_247630042_pushSuggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_26421_typeTokens.len() == 2LL)) {
					_24762ec23_pushErr(&(*_self_), _26421_typeTokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_247630042_pushSuggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_26421_typeTokens=_26421_typeTokens.slice(1LL,(_26421_typeTokens.len() - 1LL));
					jule::I64 _29125_typeIndex = 0LL;;
					jule::Ptr<_246125b27_TypeDecl> _29226_t;;
					jule::Bool _29229_ok;;
					std::tie(_29226_t,_29229_ok) = _247641938_buildType((*_self_)._field_p, _26421_typeTokens,(&(_29125_typeIndex)),true);
					if ((_29229_ok && (_29125_typeIndex < _26421_typeTokens.len()))) {
						_24762ec23_pushErr(&(*_self_), _26421_typeTokens[_29125_typeIndex],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_29229_ok))) {
						return _27721_cast;
					};
					_27721_cast.get()._field_Kind=_29226_t;
					if ((_26521_exprTokens.len() > 2LL)) {
						jule::I64 _30229_j = 0LL;;
						_24763c824_range(_30229_j,jule::Str("(", 1),jule::Str(")", 1),_26521_exprTokens);
						if ((_30229_j < _26521_exprTokens.len())) {
							return nullptr;
						};
						_26521_exprTokens=_26521_exprTokens.slice(0LL,_30229_j);
						_27721_cast.get()._field_Expr=_247638d70_buildFromTokens(&(*_self_), _26521_exprTokens);
					};
				};
				return _27721_cast;
			}
			_iter_next_213621dae:;
			++it;
			_24513_i++;
			goto _iter_begin_213621dae;
		}
		_iter_end_213621dae:;
	};
	return nullptr;
}



inline void _247633210_pushArg(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24612a148_Expr>>& _31731_args, jule::Slice<jule::Ptr<_24496dc35_Token>> _31750_tokens, jule::Ptr<_24496dc35_Token> _31768_err_token) {
	if ((_31750_tokens.len() == 0LL)) {
		_24762ec23_pushErr(&(*_self_), _31768_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_247630042_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_31731_args = jule::alloc_for_append(_31731_args,1);_31731_args.__push(_247638d70_buildFromTokens(&(*_self_), _31750_tokens));;
}



inline jule::Slice<jule::Ptr<_24612a148_Expr>> _24763351d_buildArgs(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _32632_tokens) {
	if ((_32632_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_24612a148_Expr>> _33217_args = nullptr;;
	jule::I64 _33317_last = 0LL;;
	jule::I64 _33417_rangeN = 0LL;;
	_32632_tokens=_32632_tokens.slice(1LL,(_32632_tokens.len() - 1LL));
	{
		auto &expr = _32632_tokens;
		auto it = expr.begin();
		_iter_begin_213631bd2:;
		if (it != expr.end()) {
			jule::I64 _33613_i = it - expr.begin();
			jule::Ptr<_24496dc35_Token> _33616_token = *it;
			{
				if ((_33616_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _33616_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_213633079:;
							{
								(_33417_rangeN)++;
							}
						}
						else {
							_case_begin_213633365:;
							{
								(_33417_rangeN)--;
							}
						}
						_match_end_213633145:;
					};
				};
				if (((_33417_rangeN > 0LL) || (_33616_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_213631bd2;
				};
				_247633210_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last,_33613_i),_33616_token);
				_33317_last=static_cast<jule::I64>((_33613_i + 1LL));
			}
			_iter_next_213631bd2:;
			++it;
			_33613_i++;
			goto _iter_begin_213631bd2;
		}
		_iter_end_213631bd2:;
	};
	if ((_33317_last < _32632_tokens.len())) {
		if ((_33317_last == 0LL)) {
			if ((_32632_tokens.len() > 0LL)) {
				_247633210_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last),_32632_tokens[_33317_last]);
			};
		} else {
			_247633210_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last),_32632_tokens[(_33317_last - 1LL)]);
		};
	};
	return _33217_args;
}



inline jule::Slice<jule::Ptr<_246125b27_TypeDecl>> _24763382b_buildCallGenerics(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _36840_tokens) {
	if ((_36840_tokens.len() == 0LL)) {
		return nullptr;
	};
	_36840_tokens=_36840_tokens.slice(1LL,(_36840_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _37418_parts;;
	jule::Slice<_244640d69_Log> _37425_errs;;
	std::tie(_37418_parts,_37425_errs) = _24763d391_parts(_36840_tokens,static_cast<jule::U64>(8LLU),true);
	jule::Slice<jule::Ptr<_246125b27_TypeDecl>> _37517_generics = jule::Slice<jule::Ptr<_246125b27_TypeDecl>>::alloc(0LL, _37418_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_37425_errs);
	{
		auto &expr = _37418_parts;
		auto it = expr.begin();
		_iter_begin_213636423:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_24496dc35_Token>> _37721_part = *it;
			{
				if ((_37721_part.len() == 0LL)) {
					goto _iter_next_213636423;
				};
				jule::I64 _38121_j = 0LL;;
				jule::Ptr<_246125b27_TypeDecl> _38222_generic;;
				std::tie(_38222_generic,std::ignore) = _247641938_buildType((*_self_)._field_p, _37721_part,(&(_38121_j)),true);
				if ((_38121_j < _37721_part.len())) {
					_24762ec23_pushErr(&(*_self_), _37721_part[_38121_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_37517_generics = jule::alloc_for_append(_37517_generics,1);_37517_generics.__push(_38222_generic);;
			}
			_iter_next_213636423:;
			++it;
			goto _iter_begin_213636423;
		}
		_iter_end_213636423:;
	};
	return _37517_generics;
}



inline jule::Ptr<_24612e12a_FnCallExpr> _247633c7c_buildFnCall(_24762e42b_exprBuilder* _self_, jule::Ptr<_24496dc35_Token>& _39235_token, jule::Slice<jule::Ptr<_24496dc35_Token>>& _39255_expr, jule::Slice<jule::Ptr<_24496dc35_Token>>& _39276_args) {
	return jule::new_ptr<_24612e12a_FnCallExpr>(_24612e12a_FnCallExpr{._field_Token=_39235_token, ._field_Expr=_247638d70_buildFromTokens(&(*_self_), _39255_expr), ._field_Args=_24763351d_buildArgs(&(*_self_), _39276_args), });
}



inline jule::Any _24763408a_buildParenthesesRange(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _40045_tokens) {
	jule::Ptr<_24496dc35_Token> _40117_token = _40045_tokens[0LL];;
	{
		auto &_match_expr{ _40117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_21363d392:;
			{
				{
					auto &_match_expr{ _40117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_21363dc55:;
						{
							jule::Ptr<_24612cc72_CastExpr> _40625_expr = _247632d47_tryBuildCast(&(*_self_), _40045_tokens);;
							if ((_40625_expr != nullptr)) {
								return static_cast<jule::Any>(_40625_expr);
							};
						}
					}
					_match_end_21363da68:;
				};
			}
		}
		_match_end_21363d33c:;
	};
	jule::Slice<jule::Ptr<_24496dc35_Token>> _41218_exprTokens;;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _41234_args_tokens;;
	std::tie(_41218_exprTokens,_41234_args_tokens) = _24763cabb_rangeLast(_40045_tokens);
	if ((_41218_exprTokens.len() == 0LL)) {
		return static_cast<jule::Any>(_247632a28_buildBetweenParentheses(&(*_self_), _41234_args_tokens));
	};
	return static_cast<jule::Any>(_247633c7c_buildFnCall(&(*_self_), _40117_token,_41218_exprTokens,_41234_args_tokens));
}



inline jule::Ptr<_24612b886_UnsafeExpr> _247634398_buildUnsafeExpr(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _42138_tokens) {
	jule::Ptr<_24496dc35_Token> _42217_token = _42138_tokens[0LL];;
	_42138_tokens=_42138_tokens.slice(1LL);
	jule::I64 _42417_i = 0LL;;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _42517_rangeTokens = _24763c824_range(_42417_i,jule::Str("{", 1),jule::Str("}", 1),_42138_tokens);;
	if ((_42517_rangeTokens.len() == 0LL)) {
		_24762ec23_pushErr(&(*_self_), _42138_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_24612b886_UnsafeExpr>(_24612b886_UnsafeExpr{._field_Token=_42217_token, ._field_Expr=_247638d70_buildFromTokens(&(*_self_), _42517_rangeTokens)});
}



inline jule::Ptr<_2461375a6_FnDecl> _2476346a6_buildAnonFn(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _43635_tokens) {
	jule::Ptr<_2461375a6_FnDecl> _43717_f = _247645a80_buildFn((*_self_)._field_p, _43635_tokens,false,false);;
	if ((!(_246137908_IsAnon(_43717_f.ptr())))) {
		_24762ec23_pushErr(&(*_self_), _43717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_247630042_pushSuggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _43717_f;
}



inline jule::Any _2476349b4_buildUnsafe(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _44535_tokens) {
	{
		auto &_match_expr{ _44535_tokens[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_2136457c8:;
			{
				return static_cast<jule::Any>(_2476346a6_buildAnonFn(&(*_self_), _44535_tokens));
			}
		}
		else {
			_case_begin_213645d28:;
			{
				return static_cast<jule::Any>(_247634398_buildUnsafeExpr(&(*_self_), _44535_tokens));
			}
		}
		_match_end_213645c4b:;
	};
}



inline void _247634d7c_pushRangeLitPart(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _45539_part, jule::Ptr<_24496dc35_Token> _4569_errorToken, jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>>& _45634_parts) {
	if ((_45539_part.len() == 0LL)) {
		_24762ec23_pushErr(&(*_self_), _4569_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_247630042_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_45634_parts = jule::alloc_for_append(_45634_parts,1);_45634_parts.__push(_45539_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _2476351ac_getBraceRangeLitExprParts(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _46648_tokens) {
	if ((_46648_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _47217_parts = nullptr;;
	jule::I64 _47417_last = 0LL;;
	jule::I64 _47517_rangeN = 0LL;;
	_46648_tokens=_46648_tokens.slice(1LL,(_46648_tokens.len() - 1LL));
	{
		auto &expr = _46648_tokens;
		auto it = expr.begin();
		_iter_begin_21364a28e:;
		if (it != expr.end()) {
			jule::I64 _47713_i = it - expr.begin();
			jule::Ptr<_24496dc35_Token> _47716_token = *it;
			{
				if ((_47716_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _47716_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_21364b636:;
							{
								(_47517_rangeN)++;
							}
						}
						else {
							_case_begin_21364b922:;
							{
								(_47517_rangeN)--;
							}
						}
						_match_end_21364b702:;
					};
				};
				if (((_47517_rangeN > 0LL) || (_47716_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_21364a28e;
				};
				_247634d7c_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last,_47713_i),_47716_token,_47217_parts);
				_47417_last=static_cast<jule::I64>((_47713_i + 1LL));
			}
			_iter_next_21364a28e:;
			++it;
			_47713_i++;
			goto _iter_begin_21364a28e;
		}
		_iter_end_21364a28e:;
	};
	if ((_47417_last < _46648_tokens.len())) {
		if ((_47417_last == 0LL)) {
			if ((_46648_tokens.len() > 0LL)) {
				_247634d7c_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last),_46648_tokens[_47417_last],_47217_parts);
			};
		} else {
			_247634d7c_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last),_46648_tokens[(_47417_last - 1LL)],_47217_parts);
		};
	};
	return _47217_parts;
}



inline jule::Ptr<_24612eaa9_FieldExprPair> _2476354cb_buildFieldExprPair(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _50841_tokens) {
	if (((_50841_tokens.len() - 2LL) == 0LL)) {
		_24762ec23_pushErr(&(*_self_), _50841_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_24612eaa9_FieldExprPair> _51317_pair = jule::new_ptr<_24612eaa9_FieldExprPair>(_24612eaa9_FieldExprPair{._field_Field=_50841_tokens[0LL], });;
	_50841_tokens=_50841_tokens.slice(2LL);
	_51317_pair.get()._field_Expr=_247638d70_buildFromTokens(&(*_self_), _50841_tokens);
	return _51317_pair;
}



inline jule::Ptr<_24612a148_Expr> _2476357d9_buildStructLitExpr(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _52142_tokens) {
	jule::Ptr<_24496dc35_Token> _52217_token = _52142_tokens[0LL];;
	if (((_52217_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && (_52142_tokens.len() > 1LL))) {
		_52217_token=_52142_tokens[1LL];
		if ((_52217_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_24612a148_Expr>(_24612a148_Expr{._field_Token=_52217_token, ._field_End=_52142_tokens[(_52142_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(_2476354cb_buildFieldExprPair(&(*_self_), _52142_tokens))});
		};
	};
	return _247638d70_buildFromTokens(&(*_self_), _52142_tokens);
}



inline jule::Slice<jule::Ptr<_24612a148_Expr>> _247635ae7_buildStructLitExprs(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _53643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _53717_parts = _2476351ac_getBraceRangeLitExprParts(&(*_self_), _53643_tokens);;
	if ((_53717_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_24612a148_Expr>> _54217_pairs = jule::Slice<jule::Ptr<_24612a148_Expr>>::alloc(0LL, _53717_parts.len());;
	{
		auto &expr = _53717_parts;
		auto it = expr.begin();
		_iter_begin_2136568a5:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_24496dc35_Token>> _54321_part = *it;
			{
				_54217_pairs = jule::alloc_for_append(_54217_pairs,1);_54217_pairs.__push(_2476357d9_buildStructLitExpr(&(*_self_), _54321_part));;
			}
			_iter_next_2136568a5:;
			++it;
			goto _iter_begin_2136568a5;
		}
		_iter_end_2136568a5:;
	};
	return _54217_pairs;
}



inline jule::Ptr<_246130307_StructLit> _247635e27_buildTypedStructLiteral(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _54946_tokens) {
	jule::I64 _55017_i = 0LL;;
	jule::Ptr<_246125b27_TypeDecl> _55118_t;;
	jule::Bool _55121_ok;;
	std::tie(_55118_t,_55121_ok) = _247641938_buildType((*_self_)._field_p, _54946_tokens,(&(_55017_i)),true);
	if ((!(_55121_ok))) {
		return nullptr;
	} else if ((_55017_i >= _54946_tokens.len())) {
		_24762ec23_pushErr(&(*_self_), _54946_tokens[_55017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_54946_tokens=_54946_tokens.slice(_55017_i);
	jule::Ptr<_24496dc35_Token> _56013_token = _54946_tokens[0LL];;
	if (((_56013_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_56013_token.get()._field_Kind != jule::Str("{", 1)))) {
		_24762ec23_pushErr(&(*_self_), _56013_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_246130307_StructLit>(_246130307_StructLit{._field_End=_54946_tokens[(_54946_tokens.len() - 1LL)], ._field_Kind=_55118_t, ._field_Exprs=_247635ae7_buildStructLitExprs(&(*_self_), _54946_tokens)});
}



inline jule::Ptr<_24612a148_Expr> _247636246_buildBraceLitPart(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _57341_tokens) {
	jule::Slice<jule::Ptr<_24496dc35_Token>> _57418_l;;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _57425_r;;
	std::tie(_57418_l,_57425_r) = _247639ada_splitDelim(_57341_tokens,static_cast<jule::U64>(11LLU));
	if ((_57418_l != nullptr)) {
		return jule::new_ptr<_24612a148_Expr>(_24612a148_Expr{._field_Token=_57341_tokens[0LL], ._field_End=_57341_tokens[(_57341_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_246131050_KeyValPair>(_246131050_KeyValPair{._field_Key=_247638d70_buildFromTokens(&(*_self_), _57418_l), ._field_Val=_247638d70_buildFromTokens(&(*_self_), _57425_r), ._field_Colon=_57341_tokens[_57418_l.len()]}))});
	};
	return _247638d70_buildFromTokens(&(*_self_), _57341_tokens);
}



inline jule::Ptr<_24613077a_BraceLit> _247636554_buildBraceLit(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _59037_tokens) {
	jule::Ptr<_24613077a_BraceLit> _59117_lit = jule::new_ptr<_24613077a_BraceLit>(_24613077a_BraceLit{._field_Token=_59037_tokens[0LL], ._field_End=_59037_tokens[(_59037_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _59617_parts = _2476351ac_getBraceRangeLitExprParts(&(*_self_), _59037_tokens);;
	if ((_59617_parts == nullptr)) {
		return _59117_lit;
	};
	_59117_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_24612a148_Expr>>::alloc(0LL, _59617_parts.len());
	{
		auto &expr = _59617_parts;
		auto it = expr.begin();
		_iter_begin_2136611b7:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_24496dc35_Token>> _60221_part = *it;
			{
				_59117_lit.get()._field_Exprs = jule::alloc_for_append(_59117_lit.get()._field_Exprs,1);_59117_lit.get()._field_Exprs.__push(_247636246_buildBraceLitPart(&(*_self_), _60221_part));;
			}
			_iter_next_2136611b7:;
			++it;
			goto _iter_begin_2136611b7;
		}
		_iter_end_2136611b7:;
	};
	return _59117_lit;
}



inline jule::Any _247636862_buildBraceRange(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _60939_tokens) {
	jule::Slice<jule::Ptr<_24496dc35_Token>> _61018_exprTokens;;
	jule::I64 _61030_rangeN;;
	std::tie(_61018_exprTokens,_61030_rangeN) = _24763a3c1_getRangeExprTokens(_60939_tokens);
	{
		
		if ((_61018_exprTokens.len() == 0LL)) {
			_case_begin_213662c8a:;
			{
				return static_cast<jule::Any>(_247636554_buildBraceLit(&(*_self_), _60939_tokens));
			}
		}
		else if ((_61030_rangeN > 0LL)) {
			_case_begin_213662d12:;
			{
				_24762ec23_pushErr(&(*_self_), _60939_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_213662bd0:;
	};
	jule::Ptr<_24496dc35_Token> _62113_elseToken = _61018_exprTokens[(_61018_exprTokens.len() - 1LL)];;
	if ((_61018_exprTokens[(_61018_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U64>(17LLU))) {
		_61018_exprTokens=_61018_exprTokens.slice(0LL,(_61018_exprTokens.len() - 1LL));
		jule::Any _62421_d = _247638754_build(&(*_self_), _61018_exprTokens);;
		if ((_62421_d == nullptr)) {
			return nullptr;
		};
		{
			auto &_match_expr{ _62421_d };
			
			if (_match_expr.type_is<jule::Ptr<_24612e12a_FnCallExpr>>()) {
				_case_begin_2136665c9:;
				{
					_60939_tokens=_60939_tokens.slice((_61018_exprTokens.len() + 1LL));
					jule::I64 _63125_i = 0LL;;
					jule::Slice<jule::Ptr<_24496dc35_Token>> _63225_rangeTokens = _24763c824_range(_63125_i,jule::Str("{", 1),jule::Str("}", 1),_60939_tokens);;
					jule::Ptr<_24612e12a_FnCallExpr> _63325_model = _62421_d.operator jule::Ptr<_24612e12a_FnCallExpr>();;
					if (_24612e702_Ignored(_63325_model.ptr())) {
						_24762ec23_pushErr(&(*_self_), _62113_elseToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_247630042_pushSuggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_63325_model.get()._field_Exception=_247641086_buildScope((*_self_)._field_p, _63225_rangeTokens,_60939_tokens[(_63125_i - 1LL)]);
					return _62421_d;
				}
			}
			else {
				_case_begin_2136662cc:;
				{
					_24762ec23_pushErr(&(*_self_), _61018_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
			_match_end_213666156:;
		};
	};
	{
		auto &_match_expr{ _61018_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_21366a996:;
			{
				return _2476349b4_buildUnsafe(&(*_self_), _60939_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_21366aa0c:;
			{
				return static_cast<jule::Any>(_2476346a6_buildAnonFn(&(*_self_), _60939_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_21366aa73:;
			{
				return static_cast<jule::Any>(_247635e27_buildTypedStructLiteral(&(*_self_), _60939_tokens));
			}
		}
		else {
			_case_begin_213668ab5:;
			{
				_24762ec23_pushErr(&(*_self_), _61018_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_21366a6dd:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _247636b70_getEnumerableParts(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _66141_tokens) {
	_66141_tokens=_66141_tokens.slice(1LL,(_66141_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _66318_parts;;
	jule::Slice<_244640d69_Log> _66325_errors;;
	std::tie(_66318_parts,_66325_errors) = _24763d391_parts(_66141_tokens,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_66325_errors);
	return _66318_parts;
}



inline jule::Ptr<_246131737_SliceExpr> _247636e7d_buildSlice(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _66833_tokens) {
	jule::Ptr<_246131737_SliceExpr> _66917_slc = jule::new_ptr<_246131737_SliceExpr>(_246131737_SliceExpr{._field_Token=_66833_tokens[0LL], ._field_End=_66833_tokens[(_66833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _67417_parts = _247636b70_getEnumerableParts(&(*_self_), _66833_tokens);;
	if ((_67417_parts.len() == 0LL)) {
		return _66917_slc;
	};
	_66917_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_24612a148_Expr>>::alloc(0LL, _67417_parts.len());
	{
		auto &expr = _67417_parts;
		auto it = expr.begin();
		_iter_begin_213671815:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_24496dc35_Token>> _68021_p = *it;
			{
				if ((_68021_p.len() == 0LL)) {
					goto _iter_next_213671815;
				};
				_66917_slc.get()._field_Exprs = jule::alloc_for_append(_66917_slc.get()._field_Exprs,1);_66917_slc.get()._field_Exprs.__push(_247638d70_buildFromTokens(&(*_self_), _68021_p));;
			}
			_iter_next_213671815:;
			++it;
			goto _iter_begin_213671815;
		}
		_iter_end_213671815:;
	};
	return _66917_slc;
}



inline jule::Ptr<_2461320a6_IndexingExpr> _2476373ce_buildIndexing(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _69036_exprTokens, jule::Slice<jule::Ptr<_24496dc35_Token>> _69113_tokens, jule::Ptr<_24496dc35_Token> _69135_errorToken) {
	jule::Ptr<_24496dc35_Token> _69217_end = _69113_tokens[(_69113_tokens.len() - 1LL)];;
	_69113_tokens=_69113_tokens.slice(1LL,(_69113_tokens.len() - 1LL));
	if ((_69113_tokens.len() == 0LL)) {
		_24762ec23_pushErr(&(*_self_), _69135_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_24612a148_Expr> _69817_expr = _247638d70_buildFromTokens(&(*_self_), _69036_exprTokens);;
	if ((_69817_expr == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_24612a148_Expr> _70217_index = _247638d70_buildFromTokens(&(*_self_), _69113_tokens);;
	if ((_70217_index == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_2461320a6_IndexingExpr>(_2461320a6_IndexingExpr{._field_Token=_69135_errorToken, ._field_End=_69217_end, ._field_Expr=_69817_expr, ._field_Index=_70217_index});
}



inline jule::Ptr<_2461326b1_SlicingExpr> _247637973_buildSlicing(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _71436_exprTokens, jule::Slice<jule::Ptr<_24496dc35_Token>>& _71463_start, jule::Slice<jule::Ptr<_24496dc35_Token>>& _71514_to, jule::Ptr<_24496dc35_Token>& _71533_errorToken, jule::Ptr<_24496dc35_Token> _71557_end) {
	jule::Ptr<_2461326b1_SlicingExpr> _71617_slc = jule::new_ptr<_2461326b1_SlicingExpr>(_2461326b1_SlicingExpr{._field_Token=_71533_errorToken, ._field_End=_71557_end, ._field_Expr=_247638d70_buildFromTokens(&(*_self_), _71436_exprTokens), });;
	if ((_71463_start.len() > 0LL)) {
		_71617_slc.get()._field_Start=_247638d70_buildFromTokens(&(*_self_), _71463_start);
	};
	if ((_71514_to.len() > 0LL)) {
		_71617_slc.get()._field_To=_247638d70_buildFromTokens(&(*_self_), _71514_to);
	};
	return _71617_slc;
}



inline jule::Any _247637c81_buildBracketRange(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _73040_tokens) {
	jule::Ptr<_24496dc35_Token> _73117_errorToken = _73040_tokens[0LL];;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _73218_exprTokens;;
	jule::I64 _73230_rangeN;;
	std::tie(_73218_exprTokens,_73230_rangeN) = _24763a3c1_getRangeExprTokens(_73040_tokens);
	if ((_73218_exprTokens.len() == 0LL)) {
		return static_cast<jule::Any>(_247636e7d_buildSlice(&(*_self_), _73040_tokens));
	} else if ((_73230_rangeN > 0LL)) {
		_24762ec23_pushErr(&(*_self_), _73117_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_73040_tokens=_73040_tokens.slice(_73218_exprTokens.len());
	jule::Slice<jule::Ptr<_24496dc35_Token>> _74717_splitTokens = _73040_tokens.slice(1LL,(_73040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _74818_start;;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _74829_to;;
	std::tie(_74818_start,_74829_to) = _247639ada_splitDelim(_74717_splitTokens,static_cast<jule::U64>(11LLU));
	if (((_74818_start != nullptr) || (_74829_to != nullptr))) {
		return static_cast<jule::Any>(_247637973_buildSlicing(&(*_self_), _73218_exprTokens,_74818_start,_74829_to,_73117_errorToken,_73040_tokens[(_73040_tokens.len() - 1LL)]));
	};
	return static_cast<jule::Any>(_2476373ce_buildIndexing(&(*_self_), _73218_exprTokens,_73040_tokens,_73117_errorToken));
}



inline jule::Any _24763808e_buildData(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _75533_tokens) {
	{
		auto _match_expr{ _75533_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_21367e23a:;
			{
				return nullptr;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_21367e2a1:;
			{
				return _247630c79_buildSingle(&(*_self_), _75533_tokens[0LL]);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_21367e317:;
			{
				if ((_75533_tokens[0LL].get()._field_Id == static_cast<jule::U64>(30LLU))) {
					return static_cast<jule::Any>(_247631087_buildCppLinkedIdent(&(*_self_), _75533_tokens));
				};
			}
		}
		_match_end_21367dea4:;
	};
	jule::Ptr<_24496dc35_Token> _76717_token = _75533_tokens[(_75533_tokens.len() - 1LL)];;
	if (((_76717_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_76717_token.get()._field_Kind == jule::Str("...", 3)))) {
		return static_cast<jule::Any>(_2476323da_buildVariadic(&(*_self_), _75533_tokens));
	};
	_76717_token=_75533_tokens[0LL];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_213682958:;
			{
				if (((_75533_tokens.len() > 1LL) && (_76717_token.get()._field_Kind == jule::Str("*", 1)))) {
					_76717_token=_75533_tokens[1LL];
					if (((_76717_token.get()._field_Id == static_cast<jule::U64>(1LLU)) || (_76717_token.get()._field_Id == static_cast<jule::U64>(34LLU)))) {
						return static_cast<jule::Any>(_247631cbe_buildType(&(*_self_), _75533_tokens));
					};
				};
				return static_cast<jule::Any>(_247631395_buildUnary(&(*_self_), _75533_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_2136829d0:;
			{
				if ((_75533_tokens.len() < 3LL)) {
					goto _match_end_2136828e2;
				};
				if ((_75533_tokens.len() > 3LL)) {
					jule::Ptr<_24496dc35_Token> _78921_t = _75533_tokens[(_75533_tokens.len() - 1LL)];;
					if (((_78921_t.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_78921_t.get()._field_Kind == jule::Str(")", 1)))) {
						goto _match_end_2136828e2;
					};
				};
				jule::Ptr<_24496dc35_Token> _79517_next = _75533_tokens[1LL];;
				if (((_79517_next.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_79517_next.get()._field_Kind != jule::Str("]", 1)))) {
					goto _match_end_2136828e2;
				};
				return static_cast<jule::Any>(_247631cbe_buildType(&(*_self_), _75533_tokens));
			}
		}
		_match_end_2136828e2:;
	};
	_76717_token=_75533_tokens[(_75533_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_213681c10:;
			{
				return _2476320cc_buildSubIdent(&(*_self_), _75533_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_213688b18:;
			{
				return static_cast<jule::Any>(_247631cbe_buildType(&(*_self_), _75533_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_213688b7e:;
			{
				return _2476326e8_buildOpRight(&(*_self_), _75533_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_213688be5:;
			{
				{
					auto &_match_expr{ _76717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_21368a6a8:;
						{
							return _24763408a_buildParenthesesRange(&(*_self_), _75533_tokens);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_21368a730:;
						{
							return _247636862_buildBraceRange(&(*_self_), _75533_tokens);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_21368a7a7:;
						{
							return _247637c81_buildBracketRange(&(*_self_), _75533_tokens);
						}
					}
					_match_end_21368a08c:;
				};
			}
		}
		_match_end_213683030:;
	};
	if ((_76717_token.get()._field_Id == static_cast<jule::U64>(32LLU))) {
		return static_cast<jule::Any>(_247631cbe_buildType(&(*_self_), _75533_tokens));
	};
	_24762ec23_pushErr(&(*_self_), _76717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Any _247638446_buildBinop(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _83134_tokens, jule::I64 _83152_i) {
	jule::Ptr<_24496dc35_Token> _83217_op = _83134_tokens[_83152_i];;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _83317_leftTokens = _83134_tokens.slice(0LL,_83152_i);;
	if ((_2476391c2_isTypeOp(_83217_op.get()._field_Kind) && _2476394ad_isTypeRange(_83317_leftTokens))) {
		return static_cast<jule::Any>(_247631cbe_buildType(&(*_self_), _83134_tokens));
	};
	jule::Slice<jule::Ptr<_24496dc35_Token>> _83817_rightTokens = _83134_tokens.slice((_83152_i + 1LL));;
	if ((_83317_leftTokens.len() == 0LL)) {
		_24762ec23_pushErr(&(*_self_), _83134_tokens[_83152_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_247630042_pushSuggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_83817_rightTokens.len() == 0LL)) {
		_24762ec23_pushErr(&(*_self_), _83134_tokens[_83152_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_247630042_pushSuggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	};
	return static_cast<jule::Any>(jule::new_ptr<_24612da20_BinopExpr>(_24612da20_BinopExpr{._field_Left=_247638d70_buildFromTokens(&(*_self_), _83317_leftTokens), ._field_Right=_247638d70_buildFromTokens(&(*_self_), _83817_rightTokens), ._field_Op=_83217_op}));
}



inline jule::Any _247638754_build(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _85629_tokens) {
	jule::I64 _85713_i = _247639d82_findLowestPrecOp(_85629_tokens);;
	if ((_85713_i == -1LL)) {
		return _24763808e_buildData(&(*_self_), _85629_tokens);
	};
	return _247638446_buildBinop(&(*_self_), _85629_tokens,_85713_i);
}



inline jule::Any _247638a62_buildKind(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _86433_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _86518_parts;;
	jule::Slice<_244640d69_Log> _86525_errors;;
	std::tie(_86518_parts,_86525_errors) = _24763d391_parts(_86433_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_86525_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_86525_errors);
		return nullptr;
	} else if ((_86518_parts.len() > 1LL)) {
		return static_cast<jule::Any>(_247630350_buildTuple(&(*_self_), _86518_parts));
	};
	return _247638754_build(&(*_self_), _86433_tokens);
}



inline jule::Ptr<_24612a148_Expr> _247638d70_buildFromTokens(_24762e42b_exprBuilder* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _87538_tokens) {
	if ((_87538_tokens.len() == 0LL)) {
		return nullptr;
	};
	return jule::new_ptr<_24612a148_Expr>(_24612a148_Expr{._field_Token=_87538_tokens[0LL], ._field_End=_87538_tokens[(_87538_tokens.len() - 1LL)], ._field_Kind=_247638a62_buildKind(&(*_self_), _87538_tokens)});
}







std::ostream &operator<<(std::ostream &_Stream, _24762e42b_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24763ac84_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _24763e8e2_stop(_24763e5b2_parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _24763eb56_stopped(_24763e5b2_parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _24764001e_pushErr(_24763e5b2_parser* _self_, jule::Ptr<_24496dc35_Token> _28126_token, jule::Str _28141_fmt, jule::Slice<jule::Any> _28154_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_24763da23_compilerErr(_28126_token,_28141_fmt,jule::Any(_28154_args)));;
}



inline void _24764033d_pushSuggestion(_24763e5b2_parser* _self_, jule::Str _28633_fmt, jule::Slice<jule::Any> _28646_args) {
	{
		_24763de52_pushSuggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_28633_fmt,jule::Any(_28646_args));
	};
}



inline jule::Ptr<_24612a148_Expr> _24764064b_buildExpr(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _29034_tokens) {
	jule::Ptr<_24762e42b_exprBuilder> _29117_ep = jule::new_ptr<_24762e42b_exprBuilder>(_24762e42b_exprBuilder{._field_p=_self_});;
	jule::Ptr<_24612a148_Expr> _29417_expr = _247638d70_buildFromTokens(_29117_ep.ptr(), _29034_tokens);;
	return _29417_expr;
}



inline jule::Ptr<_2460dc858_Directive> _247640959_buildDirective(_24763e5b2_parser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _29837_tokens) {
	if ((_29837_tokens.len() == 1LL)) {
		_24764001e_pushErr(&(*_self_), _29837_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_29837_tokens[1LL].get()._field_Column != (_29837_tokens[0LL].get()._field_Column + 1LL))) {
		_24764001e_pushErr(&(*_self_), _29837_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_2460dc858_Directive>(_2460dc858_Directive{._field_Tag=_29837_tokens[1LL], ._field_Args=_29837_tokens.slice(2LL)});
}



inline void _247640bce_pushDirective(_24763e5b2_parser* _self_, jule::Ptr<_2460dc858_Directive> _31336_d) {
	if ((_31336_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_2136c3504:;
		if (it != expr.end()) {
			jule::Ptr<_2460dc858_Directive> _31816_pd = *it;
			{
				if ((_31336_d.get()._field_Tag.get()._field_Kind == _31816_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_2136c3504:;
			++it;
			goto _iter_begin_2136c3504;
		}
		_iter_end_2136c3504:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_31336_d);;
}



inline jule::Ptr<_246135ab0_ScopeTree> _247641086_buildScope(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _32635_tokens, jule::Ptr<_24496dc35_Token> _32657_end) {
	jule::Ptr<_246135ab0_ScopeTree> _32717_s = _24762151c_newScope();;
	_32717_s.get()._field_End=_32657_end;
	_247622e69_scopeParser _32917_sp = _247622e69_scopeParser{._field_p=_self_, };;
	_24762da02_build(&_32917_sp, _32635_tokens,_32717_s);
	return _32717_s;
}



inline std::tuple<jule::Ptr<_246125b27_TypeDecl>,jule::Bool> _2476414d7__buildType(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _33642_tokens, jule::I64* _33713_i, jule::Bool _33722_err) {
	_2476502c6_typeBuilder _33817_tb = _2476502c6_typeBuilder{._field_p=_self_, ._field_tokens=_33642_tokens, ._field_i=_33713_i, ._field_err=_33722_err};;
	jule::Ptr<_246125b27_TypeDecl> _34418_decl;;
	jule::Bool _34424_ok;;
	std::tie(_34418_decl,_34424_ok) = _247653571_build(&_33817_tb);
	return std::make_tuple(_34418_decl,_34424_ok);
}



inline std::tuple<jule::Ptr<_246125b27_TypeDecl>,jule::Bool> _247641938_buildType(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _34941_tokens, jule::I64* _35013_i, jule::Bool _35022_err) {
	jule::Ptr<_24496dc35_Token> _35113_token = _34941_tokens[(*(_35013_i))];;
	jule::Ptr<_246125b27_TypeDecl> _35218_t;;
	jule::Bool _35221_ok;;
	std::tie(_35218_t,_35221_ok) = _2476414d7__buildType(_self_, _34941_tokens,_35013_i,_35022_err);
	if ((_35022_err && (!(_35221_ok)))) {
		_24764001e_pushErr(_self_.ptr(), _35113_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	return std::make_tuple(_35218_t,_35221_ok);
}



inline jule::Ptr<_24613bde6_TypeAliasDecl> _247641c46_buildTypeAliasDecl(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _35943_tokens) {
	jule::I64 _36017_i = 1LL;;
	if ((_36017_i >= _35943_tokens.len())) {
		_24764001e_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_24613bde6_TypeAliasDecl> _36517_tad = jule::new_ptr<_24613bde6_TypeAliasDecl>(_24613bde6_TypeAliasDecl{._field_Token=_35943_tokens[1LL], ._field_Ident=_35943_tokens[1LL].get()._field_Kind, });;
	jule::Ptr<_24496dc35_Token> _36917_token = _35943_tokens[_36017_i];;
	if ((_36917_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_24764001e_pushErr(_self_.ptr(), _36917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24764033d_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_36017_i)++;
	if ((_36017_i >= _35943_tokens.len())) {
		_24764001e_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _36517_tad;
	};
	_36917_token=_35943_tokens[_36017_i];
	if ((_36917_token.get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_24764001e_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24764033d_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _36517_tad;
	};
	(_36017_i)++;
	if ((_36017_i >= _35943_tokens.len())) {
		_24764001e_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _36517_tad;
	};
	jule::Ptr<_246125b27_TypeDecl> _39018_t;;
	jule::Bool _39021_ok;;
	std::tie(_39018_t,_39021_ok) = _247641938_buildType(_self_, _35943_tokens,(&(_36017_i)),true);
	_36517_tad.get()._field_Kind=_39018_t;
	if ((_39021_ok && (_36017_i < _35943_tokens.len()))) {
		_24764001e_pushErr(_self_.ptr(), _35943_tokens[_36017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_36517_tad.get()._field_Public=_24764e25e_isPub(_36517_tad.get()._field_Ident);
	return _36517_tad;
}



inline void _247642065_buildVarTypeAndExpr(jule::Ptr<_24763e5b2_parser> _self_, jule::Ptr<_246138585_VarDecl>& _39944_v, jule::Slice<jule::Ptr<_24496dc35_Token>>& _39962_tokens) {
	jule::I64 _40017_i = 0LL;;
	jule::Ptr<_24496dc35_Token> _40117_tok = _39962_tokens[_40017_i];;
	if ((_40117_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_40017_i)++;
		if (((_40017_i >= _39962_tokens.len()) || ((_39962_tokens[_40017_i].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_39962_tokens[_40017_i].get()._field_Kind == jule::Str("=", 1))))) {
			_24764001e_pushErr(_self_.ptr(), _40117_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_246125b27_TypeDecl> _40922_t;;
		jule::Bool _40925_ok;;
		std::tie(_40922_t,_40925_ok) = _247641938_buildType(_self_, _39962_tokens,(&(_40017_i)),true);
		if (_40925_ok) {
			_39944_v.get()._field_Kind=_40922_t;
			if ((_40017_i >= _39962_tokens.len())) {
				return;;
			};
			_40117_tok=_39962_tokens[_40017_i];
		};
	};
	if ((_40117_tok.get()._field_Id == static_cast<jule::U64>(7LLU))) {
		if ((_40117_tok.get()._field_Kind != jule::Str("=", 1))) {
			_24764001e_pushErr(_self_.ptr(), _40117_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_24496dc35_Token>> _42421_exprTokens = _39962_tokens.slice((_40017_i + 1LL));;
		if ((_42421_exprTokens.len() == 0LL)) {
			_24764001e_pushErr(_self_.ptr(), _40117_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_39944_v.get()._field_Expr=_24764064b_buildExpr(_self_, _42421_exprTokens);
	} else {
		_24764001e_pushErr(_self_.ptr(), _40117_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _247642384_buildVarCommon(jule::Ptr<_24763e5b2_parser> _self_, jule::Ptr<_246138585_VarDecl>& _43539_v, jule::Slice<jule::Ptr<_24496dc35_Token>> _43556_tokens) {
	_43539_v.get()._field_Token=_43556_tokens[0LL];
	if ((_43539_v.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_24764001e_pushErr(_self_.ptr(), _43539_v.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24764033d_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_43539_v.get()._field_Ident=_43539_v.get()._field_Token.get()._field_Kind;
	_43539_v.get()._field_Public=_24764e25e_isPub(_43539_v.get()._field_Ident);
	_43539_v.get()._field_Kind=nullptr;
	if ((_43556_tokens.len() > 1LL)) {
		_43556_tokens=_43556_tokens.slice(1LL);
		_247642065_buildVarTypeAndExpr(_self_, _43539_v,_43556_tokens);
	};
}



inline void _24764274c_buildVarBegin(_24763e5b2_parser* _self_, jule::Ptr<_246138585_VarDecl>& _45137_v, jule::I64& _45155_i, jule::Slice<jule::Ptr<_24496dc35_Token>>& _45164_tokens) {
	jule::Ptr<_24496dc35_Token> _45213_tok = _45164_tokens[_45155_i];;
	{
		auto &_match_expr{ _45213_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_2136e04bb:;
			{
				_45137_v.get()._field_Statically=true;
				goto _case_begin_2136e0532;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_2136e0532:;
			{
				(_45155_i)++;
				if ((_45155_i >= _45164_tokens.len())) {
					_24764001e_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_45164_tokens[_45155_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_45137_v.get()._field_Mutable=true;
					(_45155_i)++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_2136deb19:;
			{
				(_45155_i)++;
				_45137_v.get()._field_Constant=true;
			}
		}
		else {
			_case_begin_2136dea5e:;
			{
				_24764001e_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_2136de9e8:;
	};
	if ((_45155_i >= _45164_tokens.len())) {
		_24764001e_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_246138585_VarDecl> _247642a5a_buildVar(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _48132_tokens) {
	jule::I64 _48217_i = 0LL;;
	jule::Ptr<_246138585_VarDecl> _48317_v = jule::new_ptr<_246138585_VarDecl>(_246138585_VarDecl{._field_Token=_48132_tokens[0LL], });;
	_24764274c_buildVarBegin(_self_.ptr(), _48317_v,_48217_i,_48132_tokens);
	if ((_48217_i >= _48132_tokens.len())) {
		return nullptr;
	};
	_48132_tokens=_48132_tokens.slice(_48217_i);
	if (((_48132_tokens[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_48132_tokens[0LL].get()._field_Kind == jule::Str("&", 1)))) {
		_48317_v.get()._field_Reference=true;
		if ((_48132_tokens.len() == 1LL)) {
			return nullptr;
		};
		_48132_tokens=_48132_tokens.slice(1LL);
	};
	_247642384_buildVarCommon(_self_, _48317_v,_48132_tokens);
	return _48317_v;
}



inline jule::Ptr<_246132e20_GenericDecl> _247642d68_buildGeneric(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _50337_tokens) {
	jule::Ptr<_246132e20_GenericDecl> _50417_g = jule::new_ptr<_246132e20_GenericDecl>(_246132e20_GenericDecl{._field_Token=_50337_tokens[0LL], });;
	if ((_50417_g.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_24764001e_pushErr(_self_.ptr(), _50417_g.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24764033d_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_50417_g.get()._field_Ident=_50417_g.get()._field_Token.get()._field_Kind;
	if ((_50337_tokens.len() > 1LL)) {
		if ((_50337_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
			_24764001e_pushErr(_self_.ptr(), _50337_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		if ((_50337_tokens.len() == 2LL)) {
			_24764001e_pushErr(_self_.ptr(), _50337_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		jule::Slice<jule::Ptr<_24496dc35_Token>> _52121_constraintTokens = _50337_tokens.slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _52222_parts;;
		jule::Slice<_244640d69_Log> _52229_errors;;
		std::tie(_52222_parts,_52229_errors) = _24763cea6_partsKind(_52121_constraintTokens,jule::Str("|", 1),true);
		if ((_52229_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52229_errors);
			return nullptr;
		};
		_50417_g.get()._field_Constraint=jule::new_ptr<_24613299c_Constraint>(_24613299c_Constraint{._field_Mask=jule::Slice<jule::Ptr<_246125b27_TypeDecl>>::alloc(0LL, _52222_parts.len())});
		{
			auto &expr = _52222_parts;
			auto it = expr.begin();
			_iter_begin_2136ece57:;
			if (it != expr.end()) {
				jule::Slice<jule::Ptr<_24496dc35_Token>> _52825_part = *it;
				{
					jule::I64 _52925_i = 0LL;;
					jule::Ptr<_246125b27_TypeDecl> _53026_kind;;
					std::tie(_53026_kind,std::ignore) = _247641938_buildType(_self_, _52825_part,(&(_52925_i)),true);
					_50417_g.get()._field_Constraint.get()._field_Mask = jule::alloc_for_append(_50417_g.get()._field_Constraint.get()._field_Mask,1);_50417_g.get()._field_Constraint.get()._field_Mask.__push(_53026_kind);;
					if ((_52925_i < _52825_part.len())) {
						_24764001e_pushErr(_self_.ptr(), _52825_part[_52925_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				}
				_iter_next_2136ece57:;
				++it;
				goto _iter_begin_2136ece57;
			}
			_iter_end_2136ece57:;
		};
	};
	return _50417_g;
}



inline jule::Slice<jule::Ptr<_246132e20_GenericDecl>> _247643220_buildGenerics(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _54038_tokens, jule::Ptr<_24496dc35_Token>& _54057_errorToken) {
	if ((_54038_tokens.len() == 0LL)) {
		_24764001e_pushErr(_self_.ptr(), _54057_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _54618_parts;;
	jule::Slice<_244640d69_Log> _54625_errors;;
	std::tie(_54618_parts,_54625_errors) = _24763d391_parts(_54038_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_54625_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_54625_errors);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_246132e20_GenericDecl>> _55217_generics = jule::Slice<jule::Ptr<_246132e20_GenericDecl>>::alloc(0LL, _54618_parts.len());;
	{
		auto &expr = _54618_parts;
		auto it = expr.begin();
		_iter_begin_2137036bb:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_24496dc35_Token>> _55321_part = *it;
			{
				_55217_generics = jule::alloc_for_append(_55217_generics,1);_55217_generics.__push(_247642d68_buildGeneric(_self_, _55321_part));;
			}
			_iter_next_2137036bb:;
			++it;
			goto _iter_begin_2137036bb;
		}
		_iter_end_2137036bb:;
	};
	return _55217_generics;
}



inline jule::Ptr<_246136286_ParamDecl> _24764352d_buildSelfParam(_24763e5b2_parser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _56037_tokens) {
	if ((_56037_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_246136286_ParamDecl> _56517_param = jule::new_ptr<_246136286_ParamDecl>();;
	jule::I64 _56817_i = 0LL;;
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_56517_param.get()._field_Mutable=true;
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_24764001e_pushErr(&(*_self_), _56037_tokens[(_56817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Kind == jule::Str("&", 1))) {
		_56517_param.get()._field_Ident=jule::Str("&", 1);
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_24764001e_pushErr(&(*_self_), _56037_tokens[(_56817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U64>(27LLU))) {
		_56517_param.get()._field_Ident+=jule::Str("self", 4);
		_56517_param.get()._field_Token=_56037_tokens[_56817_i];
		(_56817_i)++;
		if ((_56817_i < _56037_tokens.len())) {
			_24764001e_pushErr(&(*_self_), _56037_tokens[_56817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _56517_param;
}



inline void _2476438e6_paramTypeBegin(_24763e5b2_parser* _self_, jule::Ptr<_246136286_ParamDecl>& _59938_param, jule::I64& _59962_i, jule::Slice<jule::Ptr<_24496dc35_Token>>& _59971_tokens) {
	for (; (_59962_i < _59971_tokens.len()); (_59962_i)++) {
		{
			jule::Ptr<_24496dc35_Token> _60117_token = _59971_tokens[_59962_i];;
			if ((_60117_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_60117_token.get()._field_Kind != jule::Str("...", 3))) {
				return;;
			};
			if (_59938_param.get()._field_Variadic) {
				_24764001e_pushErr(&(*_self_), _60117_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_21370a6a1;
			};
			_59938_param.get()._field_Variadic=true;
		}
	_iter_next_21370a6a1:;
	}
	_iter_end_21370a6a1:;;
}



inline void _247643c15_buildParamType(jule::Ptr<_24763e5b2_parser> _self_, jule::Ptr<_246136286_ParamDecl>& _61639_param, jule::Slice<jule::Ptr<_24496dc35_Token>>& _61663_tokens) {
	jule::I64 _61717_i = 0LL;;
	_2476438e6_paramTypeBegin(_self_.ptr(), _61639_param,_61717_i,_61663_tokens);
	if ((_61717_i >= _61663_tokens.len())) {
		return;;
	};
	std::tie(_61639_param.get()._field_Kind,std::ignore) = _247641938_buildType(_self_, _61663_tokens,(&(_61717_i)),true);
	if ((_61717_i < _61663_tokens.len())) {
		_24764001e_pushErr(_self_.ptr(), _61663_tokens[_61717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _247644034_buildParamBody(jule::Ptr<_24763e5b2_parser> _self_, jule::Ptr<_246136286_ParamDecl>& _62939_param, jule::Slice<jule::Ptr<_24496dc35_Token>> _62962_tokens) {
	jule::Ptr<_24496dc35_Token> _63017_tok = _62962_tokens[0LL];;
	_62939_param.get()._field_Ident=_63017_tok.get()._field_Kind;
	if ((_62962_tokens.len() == 1LL)) {
		return;;
	} else if ((_62962_tokens.len() < 3LL)) {
		_24764001e_pushErr(_self_.ptr(), _63017_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	if ((_62962_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_247643c15_buildParamType(_self_, _62939_param,_62962_tokens);
		return;;
	};
	_62962_tokens=_62962_tokens.slice(2LL);
	_247643c15_buildParamType(_self_, _62939_param,_62962_tokens);
}



inline jule::Ptr<_246136286_ParamDecl> _247644342_buildParam(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _64734_tokens) {
	jule::Ptr<_246136286_ParamDecl> _64817_param = jule::new_ptr<_246136286_ParamDecl>(_246136286_ParamDecl{._field_Token=_64734_tokens[0LL], });;
	if ((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_64817_param.get()._field_Mutable=true;
		if ((_64734_tokens.len() == 1LL)) {
			_24764001e_pushErr(_self_.ptr(), _64734_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_64734_tokens=_64734_tokens.slice(1LL);
		_64817_param.get()._field_Token=_64734_tokens[0LL];
	};
	if ((_64734_tokens.len() >= 3LL)) {
		if (((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_64817_param.get()._field_Token.get()._field_Kind == jule::Str("&", 1)))) {
			if ((_64734_tokens.len() == 1LL)) {
				_24764001e_pushErr(_self_.ptr(), _64734_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			};
			if (((_64734_tokens[1LL].get()._field_Id == static_cast<jule::U64>(2LLU)) && (_64734_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
				_64817_param.get()._field_Reference=true;
				_64734_tokens=_64734_tokens.slice(1LL);
				_64817_param.get()._field_Token=_64734_tokens[0LL];
			};
		};
	};
	if ((_64817_param.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_64817_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_247643c15_buildParamType(_self_, _64817_param,_64734_tokens);
	} else {
		_247644034_buildParamBody(_self_, _64817_param,_64734_tokens);
	};
	return _64817_param;
}



inline void _2476445b7_checkParams(_24763e5b2_parser* _self_, jule::Slice<jule::Ptr<_246136286_ParamDecl>>& _69035_params) {
	{
		auto &expr = _69035_params;
		auto it = expr.begin();
		_iter_begin_21372096e:;
		if (it != expr.end()) {
			jule::Ptr<_246136286_ParamDecl> _69121_param = *it;
			{
				if ((_2461365e9_IsSelf(_69121_param.ptr()) || (_69121_param.get()._field_Kind != nullptr))) {
					goto _iter_next_21372096e;
				};
				if ((_69121_param.get()._field_Token == nullptr)) {
					_24764001e_pushErr(&(*_self_), _69121_param.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_69121_param.get()._field_Kind=jule::new_ptr<_246125b27_TypeDecl>(_246125b27_TypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_2461261dd_IdentTypeDecl>(_2461261dd_IdentTypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Ident=_69121_param.get()._field_Token.get()._field_Kind, }))});
					_69121_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_21372096e:;
			++it;
			goto _iter_begin_21372096e;
		}
		_iter_end_21372096e:;
	};
}



inline jule::Slice<jule::Ptr<_246136286_ParamDecl>> _24764496e_buildParams(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _71036_tokens, jule::Bool _71054_method) {
	jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _71118_parts;;
	jule::Slice<_244640d69_Log> _71125_errs;;
	std::tie(_71118_parts,_71125_errs) = _24763d391_parts(_71036_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71125_errs);
	if ((_71118_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_246136286_ParamDecl>> _71717_params = nullptr;;
	if ((_71054_method && (_71118_parts.len() > 0LL))) {
		jule::Ptr<_246136286_ParamDecl> _71921_param = _24764352d_buildSelfParam(_self_.ptr(), _71118_parts[0LL]);;
		if (((_71921_param != nullptr) && _2461365e9_IsSelf(_71921_param.ptr()))) {
			_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_71921_param);;
			_71118_parts=_71118_parts.slice(1LL);
		};
	};
	{
		auto &expr = _71118_parts;
		auto it = expr.begin();
		_iter_begin_213726788:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_24496dc35_Token>> _72621_part = *it;
			{
				jule::Ptr<_246136286_ParamDecl> _72721_param = _247644342_buildParam(_self_, _72621_part);;
				if ((_72721_param != nullptr)) {
					_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_72721_param);;
				};
			}
			_iter_next_213726788:;
			++it;
			goto _iter_begin_213726788;
		}
		_iter_end_213726788:;
	};
	_2476445b7_checkParams(_self_.ptr(), _71717_params);
	return _71717_params;
}



inline std::tuple<jule::Ptr<_246128c3a_RetTypeDecl>,jule::Bool> _247644d26_buildMultiRetType(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _73742_tokens, jule::I64& _73765_i) {
	jule::Ptr<_246128c3a_RetTypeDecl> _73775_t = jule::Ptr<_246128c3a_RetTypeDecl>(nullptr);
	jule::Bool _73792_ok = false;
	_73775_t=jule::new_ptr<_246128c3a_RetTypeDecl>();
	(_73765_i)++;
	if ((_73765_i >= _73742_tokens.len())) {
		(_73765_i)--;
		std::tie(_73775_t.get()._field_Kind,_73792_ok) = _247641938_buildType(_self_, _73742_tokens,(&(_73765_i)),false);
		return std::make_tuple(_73775_t,_73792_ok);
	};
	(_73765_i)--;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _74717_rangeTokens = _24763c824_range(_73765_i,jule::Str("(", 1),jule::Str(")", 1),_73742_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _74918_parts;;
	jule::Slice<_244640d69_Log> _74925_errs;;
	std::tie(_74918_parts,_74925_errs) = _24763d391_parts(_74717_rangeTokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_74925_errs);
	if ((_74918_parts.len() == 0LL)) {
		return std::make_tuple(_73775_t,_73792_ok);
	};
	jule::Slice<jule::Ptr<_246125b27_TypeDecl>> _75517_types = jule::Slice<jule::Ptr<_246125b27_TypeDecl>>::alloc(0LL, _74918_parts.len());;
	_73775_t.get()._field_Idents=jule::Slice<jule::Ptr<_24496dc35_Token>>::alloc(0LL, _74918_parts.len());
	{
		auto &expr = _74918_parts;
		auto it = expr.begin();
		_iter_begin_21372bd87:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_24496dc35_Token>> _75721_part = *it;
			{
				jule::Ptr<_24496dc35_Token> _75821_token = _75721_part[0LL];;
				jule::I64 _75921_offset = 0LL;;
				if ((_75721_part.len() > 1LL)) {
					_75821_token=_75721_part[1LL];
					if ((_75821_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_75921_offset=2LL;
						if ((_75721_part.len() < 3LL)) {
							_24764001e_pushErr(_self_.ptr(), _75821_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_21372bd87;
						};
					};
				};
				_75821_token=_75721_part[0LL];
				if ((_75921_offset != 2LL)) {
					jule::Ptr<_24496dc35_Token> _77525_newToken = jule::new_ptr<_24496dc35_Token>((*(_75821_token)));;
					_77525_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					_73775_t.get()._field_Idents = jule::alloc_for_append(_73775_t.get()._field_Idents,1);_73775_t.get()._field_Idents.__push(_77525_newToken);;
				} else {
					_73775_t.get()._field_Idents = jule::alloc_for_append(_73775_t.get()._field_Idents,1);_73775_t.get()._field_Idents.__push(_75821_token);;
				};
				jule::Ptr<_246125b27_TypeDecl> _78222_tk;;
				std::tie(_78222_tk,std::ignore) = _247641938_buildType(_self_, _75721_part,(&(_75921_offset)),true);
				if ((_75921_offset < _75721_part.len())) {
					_24764001e_pushErr(_self_.ptr(), _75721_part[_75921_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_75517_types = jule::alloc_for_append(_75517_types,1);_75517_types.__push(_78222_tk);;
			}
			_iter_next_21372bd87:;
			++it;
			goto _iter_begin_21372bd87;
		}
		_iter_end_21372bd87:;
	};
	if ((_75517_types.len() > 1LL)) {
		_73775_t.get()._field_Kind=jule::new_ptr<_246125b27_TypeDecl>(_246125b27_TypeDecl{._field_Token=_73742_tokens[0LL], ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_2461276b7_TupleTypeDecl>(_2461276b7_TupleTypeDecl{._field_Types=_75517_types}))});
	} else {
		_73775_t.get()._field_Kind=_75517_types[0LL];
	};
	_73792_ok=true;
	return std::make_tuple(_73775_t,_73792_ok);
}



inline std::tuple<jule::Ptr<_246128c3a_RetTypeDecl>,jule::Bool> _2476451cd_buildRetType(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _80537_tokens, jule::I64& _80560_i) {
	jule::Ptr<_246128c3a_RetTypeDecl> _80570_t = jule::Ptr<_246128c3a_RetTypeDecl>(nullptr);
	jule::Bool _80587_ok = false;
	_80570_t=jule::new_ptr<_246128c3a_RetTypeDecl>();
	if ((_80560_i >= _80537_tokens.len())) {
		return std::make_tuple(_80570_t,_80587_ok);
	};
	jule::Ptr<_24496dc35_Token> _81117_token = _80537_tokens[_80560_i];;
	{
		auto &_match_expr{ _81117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_21373617c:;
			{
				if ((_81117_token.get()._field_Kind == jule::Str("{", 1))) {
					return std::make_tuple(_80570_t,_80587_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_213736512:;
			{
				if ((_81117_token.get()._field_Kind == jule::Str("=", 1))) {
					return std::make_tuple(_80570_t,_80587_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_213736589:;
			{
				if (((_80560_i + 1LL) >= _80537_tokens.len())) {
					_24764001e_pushErr(_self_.ptr(), _81117_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_80570_t,_80587_ok);
				};
				(_80560_i)++;
				_81117_token=_80537_tokens[_80560_i];
				if ((_81117_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _81117_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_213739317:;
							{
								std::tie(_80570_t,_80587_ok) = _247644d26_buildMultiRetType(_self_, _80537_tokens,_80560_i);
								return std::make_tuple(_80570_t,_80587_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_21373938e:;
							{
								_24764001e_pushErr(_self_.ptr(), _81117_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_80570_t,_80587_ok);
							}
						}
						_match_end_213739119:;
					};
				};
				std::tie(_80570_t.get()._field_Kind,_80587_ok) = _247641938_buildType(_self_, _80537_tokens,(&(_80560_i)),true);
				return std::make_tuple(_80570_t,_80587_ok);
			}
		}
		_match_end_2137357ec:;
	};
	(_80560_i)++;
	_24764001e_pushErr(_self_.ptr(), _81117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_80570_t,_80587_ok);
}



inline jule::Ptr<_2461375a6_FnDecl> _24764562e_buildFnPrototype(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _85041_tokens, jule::I64& _85064_i, jule::Bool _85072_method) {
	jule::Ptr<_2461375a6_FnDecl> _85117_f = jule::new_ptr<_2461375a6_FnDecl>(_2461375a6_FnDecl{._field_Token=_85041_tokens[_85064_i], });;
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		_85117_f.get()._field_Statically=true;
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_24764001e_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85117_f.get()._field_Token=_85041_tokens[_85064_i];
	};
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_85117_f.get()._field_Unsafety=true;
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_24764001e_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85117_f.get()._field_Token=_85041_tokens[_85064_i];
	};
	(_85064_i)++;
	if ((_85064_i >= _85041_tokens.len())) {
		_24764001e_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_24496dc35_Token> _88413_tok = _85041_tokens[_85064_i];;
	if ((_88413_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_24764001e_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85117_f.get()._field_Ident=_88413_tok.get()._field_Kind;
	} else {
		_85117_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_24496dc35_Token> _89613_errorToken = _85041_tokens[_85064_i];;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _89717_genericsTokens = _24763c824_range(_85064_i,jule::Str("[", 1),jule::Str("]", 1),_85041_tokens);;
	if ((_89717_genericsTokens != nullptr)) {
		_85117_f.get()._field_Generics=_247643220_buildGenerics(_self_, _89717_genericsTokens,_89613_errorToken);
	};
	if ((_85041_tokens[_85064_i].get()._field_Kind != jule::Str("(", 1))) {
		_24764001e_pushErr(_self_.ptr(), _85041_tokens[_85064_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_24496dc35_Token>> _90717_paramsToks = _24763c824_range(_85064_i,jule::Str("(", 1),jule::Str(")", 1),_85041_tokens);;
	if ((_90717_paramsToks.len() > 0LL)) {
		_85117_f.get()._field_Params=_24764496e_buildParams(_self_, _90717_paramsToks,_85072_method);
	};
	if ((_85064_i < _85041_tokens.len())) {
		jule::Ptr<_24496dc35_Token> _91317_token = _85041_tokens[_85064_i];;
		if (((_91317_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_91317_token.get()._field_Kind == jule::Str("!", 1)))) {
			_85117_f.get()._field_Exceptional=true;
			(_85064_i)++;
		};
	};
	_85117_f.get()._field_Public=_24764e25e_isPub(_85117_f.get()._field_Ident);
	std::tie(_85117_f.get()._field_Result,std::ignore) = _2476451cd_buildRetType(_self_, _85041_tokens,_85064_i);
	return _85117_f;
}



inline jule::Ptr<_2461375a6_FnDecl> _247645a80_buildFn(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _92732_tokens, jule::Bool _92750_method, jule::Bool _92764_prototype) {
	jule::I64 _92817_i = 0LL;;
	jule::Ptr<_2461375a6_FnDecl> _92917_f = _24764562e_buildFnPrototype(_self_, _92732_tokens,_92817_i,_92750_method);;
	if (_92764_prototype) {
		if ((_92817_i < _92732_tokens.len())) {
			_24764001e_pushErr(_self_.ptr(), _92732_tokens[(_92817_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _92917_f;
	} else if ((_92917_f == nullptr)) {
		return _92917_f;
	};
	if ((_92817_i >= _92732_tokens.len())) {
		_24763e8e2_stop(_self_.ptr());
		_24764001e_pushErr(_self_.ptr(), _92917_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_24764033d_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_24496dc35_Token>> _94517_blockTokens = _24763c824_range(_92817_i,jule::Str("{", 1),jule::Str("}", 1),_92732_tokens);;
	if ((_94517_blockTokens != nullptr)) {
		_92917_f.get()._field_Scope=_247641086_buildScope(_self_, _94517_blockTokens,_92732_tokens[(_92817_i - 1LL)]);
		_92917_f.get()._field_Scope.get()._field_Unsafety=_92917_f.get()._field_Unsafety;
		if ((_92817_i < _92732_tokens.len())) {
			_24764001e_pushErr(_self_.ptr(), _92732_tokens[_92817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_24763e8e2_stop(_self_.ptr());
		_24764001e_pushErr(_self_.ptr(), _92917_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_24764033d_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _92917_f;
}



inline jule::Slice<jule::Ptr<_24496dc35_Token>> _247645d8d_getUseDeclSelectors(_24763e5b2_parser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _96142_tokens) {
	jule::I64 _96217_i = 0LL;;
	_96142_tokens=_24763c824_range(_96217_i,jule::Str("{", 1),jule::Str("}", 1),_96142_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _96418_parts;;
	jule::Slice<_244640d69_Log> _96425_errs;;
	std::tie(_96418_parts,_96425_errs) = _24763d391_parts(_96142_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_96425_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_96425_errs);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_24496dc35_Token>> _97017_selectors = jule::Slice<jule::Ptr<_24496dc35_Token>>::alloc(0LL, _96418_parts.len());;
	{
		auto &expr = _96418_parts;
		auto it = expr.begin();
		_iter_begin_21375242e:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_24496dc35_Token>> _97121_part = *it;
			{
				if ((_97121_part.len() > 1LL)) {
					_24764001e_pushErr(&(*_self_), _97121_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_24496dc35_Token> _97521_tok = _97121_part[0LL];;
				if (((_97521_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) && (_97521_tok.get()._field_Id != static_cast<jule::U64>(27LLU)))) {
					_24764001e_pushErr(&(*_self_), _97521_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_24764033d_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_21375242e;
				};
				_97017_selectors = jule::alloc_for_append(_97017_selectors,1);_97017_selectors.__push(_97521_tok);;
			}
			_iter_next_21375242e:;
			++it;
			goto _iter_begin_21375242e;
		}
		_iter_end_21375242e:;
	};
	return _97017_selectors;
}



inline void _2476461ac_buildCppUseDecl(_24763e5b2_parser* _self_, jule::Ptr<_24613d2d2_UseDecl>& _98639_decl, jule::Slice<jule::Ptr<_24496dc35_Token>>& _98656_tokens) {
	if ((_98656_tokens.len() > 1LL)) {
		_24764001e_pushErr(&(*_self_), _98656_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_24496dc35_Token> _99013_token = _98656_tokens[0LL];;
	if (((_99013_token.get()._field_Id != static_cast<jule::U64>(6LLU)) || ((_99013_token.get()._field_Kind[0LL] != '`') && (_99013_token.get()._field_Kind[0LL] != '\"')))) {
		_24764001e_pushErr(&(*_self_), _99013_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_98639_decl.get()._field_CppLinked=true;
	_98639_decl.get()._field_LinkPath=_99013_token.get()._field_Kind.slice(1LL,(_99013_token.get()._field_Kind.len() - 1LL));
}



inline void _2476464cb_buildStdUseDecl(_24763e5b2_parser* _self_, jule::Ptr<_24613d2d2_UseDecl>& _99939_decl, jule::Slice<jule::Ptr<_24496dc35_Token>> _99959_tokens) {
	_99939_decl.get()._field_Std=true;
	jule::Ptr<_24496dc35_Token> _100217_token = _99959_tokens[0LL];;
	if ((_99959_tokens.len() < 3LL)) {
		_24764001e_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_99959_tokens=_99959_tokens.slice(2LL);
	_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_21375b999:;
			{
				_24764001e_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_21375ba21:;
			{
				if ((_100217_token.get()._field_Kind != jule::Str("}", 1))) {
					_24764001e_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_24496dc35_Token>> _101921_selectors = nullptr;;
				std::tie(_99959_tokens,_101921_selectors) = _24763cabb_rangeLast(_99959_tokens);
				_99939_decl.get()._field_Selected=_247645d8d_getUseDeclSelectors(&(*_self_), _101921_selectors);
				if ((_99959_tokens.len() == 0LL)) {
					_24764001e_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_24764001e_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_24764001e_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_21375ba98:;
			{
				if ((_100217_token.get()._field_Kind != jule::Str("*", 1))) {
					_24764001e_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_24764001e_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_24764001e_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_24764001e_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99939_decl.get()._field_Full=true;
			}
		}
		_match_end_21375b922:;
	};
	_99939_decl.get()._field_LinkPath=(jule::Str("std::", 5) + _24763e1e9_tokstoa(_99959_tokens));
}



inline void _2476467ea_buildIdentUseDecl(_24763e5b2_parser* _self_, jule::Ptr<_24613d2d2_UseDecl>& _106141_decl, jule::Slice<jule::Ptr<_24496dc35_Token>> _106161_tokens) {
	_106141_decl.get()._field_Std=false;
	jule::Ptr<_24496dc35_Token> _106417_token = _106161_tokens[(_106161_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _106417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_213766e5a:;
			{
				_24764001e_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_213767752:;
			{
				if ((_106417_token.get()._field_Kind != jule::Str("}", 1))) {
					_24764001e_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_24496dc35_Token>> _107521_selectors = nullptr;;
				std::tie(_106161_tokens,_107521_selectors) = _24763cabb_rangeLast(_106161_tokens);
				_106141_decl.get()._field_Selected=_247645d8d_getUseDeclSelectors(&(*_self_), _107521_selectors);
				if ((_106161_tokens.len() == 0LL)) {
					_24764001e_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_24764001e_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_24764001e_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_2137677b8:;
			{
				if ((_106417_token.get()._field_Kind != jule::Str("*", 1))) {
					_24764001e_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_24764001e_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_24764001e_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_24764001e_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106141_decl.get()._field_Full=true;
			}
		}
		_match_end_213767444:;
	};
	_106141_decl.get()._field_LinkPath=_24763e1e9_tokstoa(_106161_tokens);
}



inline void _247646b19_parseUseDecl(_24763e5b2_parser* _self_, jule::Ptr<_24613d2d2_UseDecl>& _112436_decl, jule::Slice<jule::Ptr<_24496dc35_Token>> _112456_tokens) {
	if (_112436_decl.get()._field_CppLinked) {
		_2476461ac_buildCppUseDecl(&(*_self_), _112436_decl,_112456_tokens);
		return;;
	};
	jule::Ptr<_24496dc35_Token> _113017_token = _112456_tokens[0LL];;
	if ((_113017_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_24764001e_pushErr(&(*_self_), _113017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24764033d_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_112456_tokens.len() > 2LL) && (_112456_tokens[1LL].get()._field_Id == static_cast<jule::U64>(12LLU)))) {
		_112436_decl.get()._field_Alias=_113017_token.get()._field_Kind;
		if ((_112456_tokens[2LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_24764001e_pushErr(&(*_self_), _113017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_24764033d_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_112456_tokens=_112456_tokens.slice(2LL);
		_113017_token=_112456_tokens[0LL];
	};
	;
	{
		
		if ((_113017_token.get()._field_Kind == jule::Str("std", 3))) {
			_case_begin_213774a7d:;
			{
				_2476464cb_buildStdUseDecl(&(*_self_), _112436_decl,_112456_tokens);
			}
		}
		else {
			_case_begin_213776e26:;
			{
				_2476467ea_buildIdentUseDecl(&(*_self_), _112436_decl,_112456_tokens);
			}
		}
		_match_end_213776db0:;
	};
}



inline jule::Ptr<_24613d2d2_UseDecl> _247646ec1_buildUseDecl(_24763e5b2_parser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _115835_tokens, jule::Bool _115853_cpp_linked) {
	jule::Ptr<_24613d2d2_UseDecl> _115917_decl = jule::new_ptr<_24613d2d2_UseDecl>(_24613d2d2_UseDecl{._field_Token=_115835_tokens[0LL], ._field_CppLinked=_115853_cpp_linked, });;
	if ((_115835_tokens.len() < 2LL)) {
		_24764001e_pushErr(&(*_self_), _115917_decl.get()._field_Token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	};
	_115835_tokens=_115835_tokens.slice(1LL);
	_247646b19_parseUseDecl(&(*_self_), _115917_decl,_115835_tokens);
	return _115917_decl;
}



inline jule::Ptr<_246125b27_TypeDecl> _247647378_buildTypeEnumItemKind(jule::Ptr<_24763e5b2_parser> _self_, jule::I64& _117246_i, jule::Slice<jule::Ptr<_24496dc35_Token>>& _117259_tokens) {
	jule::I64 _117317_braceN = 0LL;;
	jule::I64 _117413_exprStart = _117246_i;;
	for (; (_117246_i < _117259_tokens.len()); (_117246_i)++) {
		{
			jule::Ptr<_24496dc35_Token> _117617_t = _117259_tokens[_117246_i];;
			if ((_117617_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _117617_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_21377b766:;
						{
							(_117317_braceN)++;
							goto _iter_next_21377b0a1;
						}
					}
					else {
						_case_begin_21377c16d:;
						{
							(_117317_braceN)--;
						}
					}
					_match_end_21377be4d:;
				};
			};
			if ((_117317_braceN > 0LL)) {
				goto _iter_next_21377b0a1;
			};
			if (((_117617_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_117246_i + 1LL) >= _117259_tokens.len()))) {
				jule::Slice<jule::Ptr<_24496dc35_Token>> _119225_kindTokens = nullptr;;
				if ((_117617_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_119225_kindTokens=_117259_tokens.slice(_117413_exprStart,_117246_i);
				} else {
					_119225_kindTokens=_117259_tokens.slice(_117413_exprStart);
				};
				jule::I64 _119825_j = 0LL;;
				jule::Ptr<_246125b27_TypeDecl> _119926_kind;;
				std::tie(_119926_kind,std::ignore) = _247641938_buildType(_self_, _119225_kindTokens,(&(_119825_j)),true);
				if ((_119825_j < _119225_kindTokens.len())) {
					_24764001e_pushErr(_self_.ptr(), _119225_kindTokens[_119825_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				return _119926_kind;
			};
		}
	_iter_next_21377b0a1:;
	}
	_iter_end_21377b0a1:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_24613ec84_TypeEnumItemDecl>> _247647686_buildTypeEnumItems(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _120943_tokens) {
	jule::Slice<jule::Ptr<_24613ec84_TypeEnumItemDecl>> _121017_items = jule::Slice<jule::Ptr<_24613ec84_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _121117_i = 0LL;;
	for (; (_121117_i < _120943_tokens.len()); (_121117_i)++) {
		{
			jule::Ptr<_24496dc35_Token> _121321_t = _120943_tokens[_121117_i];;
			jule::Ptr<_24613ec84_TypeEnumItemDecl> _121421_item = jule::new_ptr<_24613ec84_TypeEnumItemDecl>();;
			_121421_item.get()._field_Token=_121321_t;
			if (((_121421_item.get()._field_Token.get()._field_Id == static_cast<jule::U64>(2LLU)) && ((_120943_tokens.len() - _121117_i) > 2LL))) {
				_121421_item.get()._field_Ident=_121421_item.get()._field_Token.get()._field_Kind;
				_121321_t=_120943_tokens[(_121117_i + 1LL)];
				if ((_121321_t.get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_121117_i+=2LL;
					if (((_121117_i >= _120943_tokens.len()) || (_120943_tokens[_121117_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
						_24764001e_pushErr(_self_.ptr(), _121321_t,jule::Str("type missing", 12),jule::Slice<jule::Any>());
						goto _iter_next_21378254c;
					};
				};
			};
			_121421_item.get()._field_Kind=_247647378_buildTypeEnumItemKind(_self_, _121117_i,_120943_tokens);
			_121017_items = jule::alloc_for_append(_121017_items,1);_121017_items.__push(_121421_item);;
		}
	_iter_next_21378254c:;
	}
	_iter_end_21378254c:;;
	return _121017_items;
}



inline jule::Ptr<_24614038e_TypeEnumDecl> _247647994_buildTypeEnumDecl(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _123342_tokens) {
	jule::I64 _123417_i = 1LL;;
	jule::Ptr<_24614038e_TypeEnumDecl> _123517_e = jule::new_ptr<_24614038e_TypeEnumDecl>(_24614038e_TypeEnumDecl{._field_Token=_123342_tokens[_123417_i], });;
	if ((_123517_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_24764001e_pushErr(_self_.ptr(), _123517_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24764033d_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Ident=_123517_e.get()._field_Token.get()._field_Kind;
	_123417_i+=3LL;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _124517_itemTokens = _24763c824_range(_123417_i,jule::Str("{", 1),jule::Str("}", 1),_123342_tokens);;
	if ((_124517_itemTokens == nullptr)) {
		_24763e8e2_stop(_self_.ptr());
		_24764001e_pushErr(_self_.ptr(), _123517_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_24764033d_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _123517_e;
	} else if ((_123417_i < _123342_tokens.len())) {
		_24764001e_pushErr(_self_.ptr(), _123342_tokens[_123417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Public=_24764e25e_isPub(_123517_e.get()._field_Ident);
	_123517_e.get()._field_End=_123342_tokens[(_123417_i - 1LL)];
	_123517_e.get()._field_Items=_247647686_buildTypeEnumItems(_self_, _124517_itemTokens);
	return _123517_e;
}



inline jule::Ptr<_24612a148_Expr> _247647d4b_buildEnumItemExpr(jule::Ptr<_24763e5b2_parser> _self_, jule::I64& _126042_i, jule::Slice<jule::Ptr<_24496dc35_Token>>& _126055_tokens) {
	jule::I64 _126117_braceN = 0LL;;
	jule::I64 _126213_exprStart = _126042_i;;
	for (; (_126042_i < _126055_tokens.len()); (_126042_i)++) {
		{
			jule::Ptr<_24496dc35_Token> _126417_t = _126055_tokens[_126042_i];;
			if ((_126417_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _126417_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_21378dc73:;
						{
							(_126117_braceN)++;
							goto _iter_next_21378d5ad;
						}
					}
					else {
						_case_begin_21378e67a:;
						{
							(_126117_braceN)--;
						}
					}
					_match_end_21378e45a:;
				};
			};
			if ((_126117_braceN > 0LL)) {
				goto _iter_next_21378d5ad;
			};
			if (((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_126042_i + 1LL) >= _126055_tokens.len()))) {
				jule::Slice<jule::Ptr<_24496dc35_Token>> _128025_exprTokens = nullptr;;
				if ((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_128025_exprTokens=_126055_tokens.slice(_126213_exprStart,_126042_i);
				} else {
					_128025_exprTokens=_126055_tokens.slice(_126213_exprStart);
				};
				return _24764064b_buildExpr(_self_, _128025_exprTokens);
			};
		}
	_iter_next_21378d5ad:;
	}
	_iter_end_21378d5ad:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_24613d755_EnumItemDecl>> _247648159_buildEnumItems(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _129239_tokens) {
	jule::Slice<jule::Ptr<_24613d755_EnumItemDecl>> _129317_items = jule::Slice<jule::Ptr<_24613d755_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _129417_i = 0LL;;
	for (; (_129417_i < _129239_tokens.len()); (_129417_i)++) {
		{
			jule::Ptr<_24496dc35_Token> _129621_t = _129239_tokens[_129417_i];;
			jule::Ptr<_24613d755_EnumItemDecl> _129721_item = jule::new_ptr<_24613d755_EnumItemDecl>();;
			_129721_item.get()._field_Token=_129621_t;
			if ((_129721_item.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
				_24764001e_pushErr(_self_.ptr(), _129721_item.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_24764033d_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_129721_item.get()._field_Ident=_129721_item.get()._field_Token.get()._field_Kind;
			if ((((_129417_i + 1LL) >= _129239_tokens.len()) || (_129239_tokens[(_129417_i + 1LL)].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				if (((_129417_i + 1LL) < _129239_tokens.len())) {
					(_129417_i)++;
				};
				_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
				goto _iter_next_213793492;
			};
			(_129417_i)++;
			_129621_t=_129239_tokens[_129417_i];
			(_129417_i)++;
			if ((_129621_t.get()._field_Id != static_cast<jule::U64>(11LLU))) {
				_24764001e_pushErr(_self_.ptr(), _129621_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_24764033d_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33),jule::Slice<jule::Any>());
				goto _iter_next_213793492;
			};
			if (((_129417_i >= _129239_tokens.len()) || (_129239_tokens[_129417_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				_24764001e_pushErr(_self_.ptr(), _129621_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_213793492;
			};
			_129721_item.get()._field_Expr=_247647d4b_buildEnumItemExpr(_self_, _129417_i,_129239_tokens);
			_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
		}
	_iter_next_213793492:;
	}
	_iter_end_213793492:;;
	return _129317_items;
}



inline jule::Ptr<_24613e27d_EnumDecl> _247648467_buildEnumDecl(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _132938_tokens) {
	if ((_132938_tokens.len() < 3LL)) {
		_24764001e_pushErr(_self_.ptr(), _132938_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_24613e27d_EnumDecl> _133417_e = jule::new_ptr<_24613e27d_EnumDecl>(_24613e27d_EnumDecl{._field_Token=_132938_tokens[1LL], });;
	if ((_133417_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_24764001e_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24764033d_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Ident=_133417_e.get()._field_Token.get()._field_Kind;
	jule::I64 _134217_i = 2LL;;
	if ((_132938_tokens[_134217_i].get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_134217_i)++;
		if ((_134217_i >= _132938_tokens.len())) {
			_24764001e_pushErr(_self_.ptr(), _132938_tokens[(_134217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _133417_e;
		};
		std::tie(_133417_e.get()._field_Kind,std::ignore) = _247641938_buildType(_self_, _132938_tokens,(&(_134217_i)),true);
		if ((_134217_i >= _132938_tokens.len())) {
			_24763e8e2_stop(_self_.ptr());
			_24764001e_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_24764033d_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _133417_e;
		};
	} else {
		_133417_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_24496dc35_Token>> _135917_itemTokens = _24763c824_range(_134217_i,jule::Str("{", 1),jule::Str("}", 1),_132938_tokens);;
	if ((_135917_itemTokens == nullptr)) {
		_24763e8e2_stop(_self_.ptr());
		_24764001e_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_24764033d_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _133417_e;
	} else if ((_134217_i < _132938_tokens.len())) {
		_24764001e_pushErr(_self_.ptr(), _132938_tokens[_134217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Public=_24764e25e_isPub(_133417_e.get()._field_Ident);
	_133417_e.get()._field_End=_132938_tokens[(_134217_i - 1LL)];
	_133417_e.get()._field_Items=_247648159_buildEnumItems(_self_, _135917_itemTokens);
	return _133417_e;
}



inline jule::Any _247648775_buildNodeEnumDecl(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _137442_tokens) {
	if (((_137442_tokens.len() > 3LL) && (_137442_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
		if ((_137442_tokens[3LL].get()._field_Id == static_cast<jule::U64>(10LLU))) {
			return static_cast<jule::Any>(_247647994_buildTypeEnumDecl(_self_, _137442_tokens));
		};
	};
	return static_cast<jule::Any>(_247648467_buildEnumDecl(_self_, _137442_tokens));
}



inline jule::Ptr<_24614058c_FieldDecl> _247648a83_buildField(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _138334_tokens) {
	jule::Ptr<_24614058c_FieldDecl> _138417_f = jule::new_ptr<_24614058c_FieldDecl>();;
	_138417_f.get()._field_Mutable=(_138334_tokens[0LL].get()._field_Id == static_cast<jule::U64>(35LLU));
	if (_138417_f.get()._field_Mutable) {
		if ((_138334_tokens.len() == 1LL)) {
			_24764001e_pushErr(_self_.ptr(), _138334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138334_tokens=_138334_tokens.slice(1LL);
	};
	_138417_f.get()._field_Token=_138334_tokens[0LL];
	if ((_138417_f.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_24764001e_pushErr(_self_.ptr(), _138417_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24764033d_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_138417_f.get()._field_Ident=_138417_f.get()._field_Token.get()._field_Kind;
	if ((_138334_tokens.len() == 1LL)) {
		_24764001e_pushErr(_self_.ptr(), _138334_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_138334_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_24764001e_pushErr(_self_.ptr(), _138334_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	_138334_tokens=_138334_tokens.slice(2LL);
	jule::I64 _141217_i = 0LL;;
	std::tie(_138417_f.get()._field_Kind,std::ignore) = _247641938_buildType(_self_, _138334_tokens,(&(_141217_i)),true);
	if ((_141217_i < _138334_tokens.len())) {
		jule::Ptr<_24496dc35_Token> _141517_token = _138334_tokens[_141217_i];;
		if (((_141517_token.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_141517_token.get()._field_Kind != jule::Str("=", 1)))) {
			_24764001e_pushErr(_self_.ptr(), _138334_tokens[_141217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_141217_i)++;
		if ((_141217_i >= _138334_tokens.len())) {
			_24764001e_pushErr(_self_.ptr(), _141517_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138334_tokens=_138334_tokens.slice(_141217_i);
		_138417_f.get()._field_Default=_24764064b_buildExpr(_self_, _138334_tokens);
	};
	_138417_f.get()._field_Public=_24764e25e_isPub(_138417_f.get()._field_Ident);
	return _138417_f;
}



inline jule::Slice<jule::Ptr<_24614058c_FieldDecl>> _247648d91_buildStructDeclFields(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _143245_tokens) {
	jule::Slice<jule::Ptr<_24614058c_FieldDecl>> _143317_fields = nullptr;;
	jule::Slice<jule::Ptr<_24762263e_stmt>> _143417_stmts = _2476229d5_splitStmts(_143245_tokens);;
	{
		auto &expr = _143417_stmts;
		auto it = expr.begin();
		_iter_begin_2137b246c:;
		if (it != expr.end()) {
			jule::Ptr<_24762263e_stmt> _143521_stmt = *it;
			{
				_143245_tokens=_143521_stmt.get()._field_tokens;
				jule::Ptr<_24614058c_FieldDecl> _143721_f = _247648a83_buildField(_self_, _143245_tokens);;
				_143317_fields = jule::alloc_for_append(_143317_fields,1);_143317_fields.__push(_143721_f);;
			}
			_iter_next_2137b246c:;
			++it;
			goto _iter_begin_2137b246c;
		}
		_iter_end_2137b246c:;
	};
	return _143317_fields;
}



inline jule::Ptr<_246140d40_StructDecl> _24764919e_buildStructDecl(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _144340_tokens) {
	if ((_144340_tokens.len() < 3LL)) {
		_24764001e_pushErr(_self_.ptr(), _144340_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _144917_i = 1LL;;
	jule::Ptr<_246140d40_StructDecl> _145017_s = jule::new_ptr<_246140d40_StructDecl>(_246140d40_StructDecl{._field_Token=_144340_tokens[_144917_i], });;
	if ((_145017_s.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_24764001e_pushErr(_self_.ptr(), _145017_s.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24764033d_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_144917_i)++;
	if ((_144917_i >= _144340_tokens.len())) {
		_24764001e_pushErr(_self_.ptr(), _144340_tokens[_144917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _145017_s;
	};
	_145017_s.get()._field_Ident=_145017_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_24496dc35_Token> _146413_errorToken = _144340_tokens[_144917_i];;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _146517_genericsTokens = _24763c824_range(_144917_i,jule::Str("[", 1),jule::Str("]", 1),_144340_tokens);;
	if ((_146517_genericsTokens != nullptr)) {
		_145017_s.get()._field_Generics=_247643220_buildGenerics(_self_, _146517_genericsTokens,_146413_errorToken);
	};
	if ((_144917_i >= _144340_tokens.len())) {
		_24764001e_pushErr(_self_.ptr(), _144340_tokens[(_144917_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_24764033d_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145017_s;
	};
	jule::Slice<jule::Ptr<_24496dc35_Token>> _147517_bodyTokens = _24763c824_range(_144917_i,jule::Str("{", 1),jule::Str("}", 1),_144340_tokens);;
	if ((_147517_bodyTokens == nullptr)) {
		_24763e8e2_stop(_self_.ptr());
		_24764001e_pushErr(_self_.ptr(), _145017_s.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_24764033d_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145017_s;
	};
	if ((_144917_i < _144340_tokens.len())) {
		_24764001e_pushErr(_self_.ptr(), _144340_tokens[_144917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_145017_s.get()._field_Public=_24764e25e_isPub(_145017_s.get()._field_Ident);
	_145017_s.get()._field_Fields=_247648d91_buildStructDeclFields(_self_, _147517_bodyTokens);
	_145017_s.get()._field_End=_144340_tokens[(_144917_i - 1LL)];
	return _145017_s;
}



inline void _247649424_checkMethodReceiver(_24763e5b2_parser* _self_, jule::Ptr<_2461375a6_FnDecl>& _149139_f) {
	if (_149139_f.get()._field_Statically) {
		if (((_149139_f.get()._field_Params.len() > 0LL) && _2461365e9_IsSelf(_149139_f.get()._field_Params[0LL].ptr()))) {
			_24764001e_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_149139_f.get()._field_Params.len() == 0LL)) {
		_24764001e_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_246136286_ParamDecl> _150313_param = _149139_f.get()._field_Params[0LL];;
	if ((!(_2461365e9_IsSelf(_150313_param.ptr())))) {
		_24764001e_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_2461375a6_FnDecl>> _247649732_buildTraitMethods(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _151041_tokens) {
	jule::Slice<jule::Ptr<_2461375a6_FnDecl>> _151117_methods = nullptr;;
	jule::Slice<jule::Ptr<_24762263e_stmt>> _151217_stmts = _2476229d5_splitStmts(_151041_tokens);;
	{
		auto &expr = _151217_stmts;
		auto it = expr.begin();
		_iter_begin_2137c2b20:;
		if (it != expr.end()) {
			jule::Ptr<_24762263e_stmt> _151321_stmt = *it;
			{
				_151041_tokens=_151321_stmt.get()._field_tokens;
				if ((_151041_tokens.len() == 0LL)) {
					goto _iter_next_2137c2b20;
				};
				jule::Ptr<_2461375a6_FnDecl> _151821_f = _247645a80_buildFn(_self_, _151041_tokens,true,true);;
				if ((_151821_f != nullptr)) {
					if (_246137908_IsAnon(_151821_f.ptr())) {
						_24764001e_pushErr(_self_.ptr(), _151821_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_247649424_checkMethodReceiver(_self_.ptr(), _151821_f);
					if ((_151821_f.get()._field_Generics.len() > 0LL)) {
						_24764001e_pushErr(_self_.ptr(), _151821_f.get()._field_Token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_151117_methods = jule::alloc_for_append(_151117_methods,1);_151117_methods.__push(_151821_f);;
				};
			}
			_iter_next_2137c2b20:;
			++it;
			goto _iter_begin_2137c2b20;
		}
		_iter_end_2137c2b20:;
	};
	return _151117_methods;
}



inline jule::Ptr<_24614144a_TraitDecl> _247649a40_buildTraitDecl(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _153339_tokens) {
	if ((_153339_tokens.len() < 3LL)) {
		_24764001e_pushErr(_self_.ptr(), _153339_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_24614144a_TraitDecl> _153817_t = jule::new_ptr<_24614144a_TraitDecl>(_24614144a_TraitDecl{._field_Token=_153339_tokens[1LL], });;
	if ((_153817_t.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_24764001e_pushErr(_self_.ptr(), _153817_t.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24764033d_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_153817_t.get()._field_Ident=_153817_t.get()._field_Token.get()._field_Kind;
	jule::I64 _154617_i = 2LL;;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _154717_bodyTokens = _24763c824_range(_154617_i,jule::Str("{", 1),jule::Str("}", 1),_153339_tokens);;
	if ((_154717_bodyTokens == nullptr)) {
		_24763e8e2_stop(_self_.ptr());
		_24764001e_pushErr(_self_.ptr(), _153817_t.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_24764033d_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_154617_i < _153339_tokens.len())) {
		_24764001e_pushErr(_self_.ptr(), _153339_tokens[_154617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_153817_t.get()._field_Public=_24764e25e_isPub(_153817_t.get()._field_Ident);
	_153817_t.get()._field_Methods=_247649732_buildTraitMethods(_self_, _154717_bodyTokens);
	_153817_t.get()._field_End=_153339_tokens[(_154617_i - 1LL)];
	return _153817_t;
}



inline jule::Ptr<_2461375a6_FnDecl> _247649d4d_buildCppLinkFn(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _156338_tokens) {
	_156338_tokens=_156338_tokens.slice(1LL);
	jule::Ptr<_2461375a6_FnDecl> _156517_f = _247645a80_buildFn(_self_, _156338_tokens,false,true);;
	if ((_156517_f != nullptr)) {
		if (_246137908_IsAnon(_156517_f.ptr())) {
			_24764001e_pushErr(_self_.ptr(), _156517_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_156517_f.get()._field_Public=false;
		_156517_f.get()._field_CppLinked=true;
	};
	return _156517_f;
}



inline jule::Ptr<_246138585_VarDecl> _24764a15b_buildCppLinkVar(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _157639_tokens) {
	_157639_tokens=_157639_tokens.slice(1LL);
	jule::Ptr<_246138585_VarDecl> _157817_v = _247642a5a_buildVar(_self_, _157639_tokens);;
	if ((_157817_v != nullptr)) {
		_157817_v.get()._field_Public=false;
		_157817_v.get()._field_CppLinked=true;
		if ((_157817_v.get()._field_Expr != nullptr)) {
			_24764001e_pushErr(_self_.ptr(), _157817_v.get()._field_Token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _157817_v;
}



inline jule::Ptr<_246140d40_StructDecl> _24764a469_buildCppLinkStruct(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _158942_tokens) {
	_158942_tokens=_158942_tokens.slice(1LL);
	jule::Ptr<_246140d40_StructDecl> _159117_s = _24764919e_buildStructDecl(_self_, _158942_tokens);;
	if ((_159117_s != nullptr)) {
		_159117_s.get()._field_Public=false;
		{
			auto &expr = _159117_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_2137d3856:;
			if (it != expr.end()) {
				jule::Ptr<_24614058c_FieldDecl> _159425_f = *it;
				{
					_159425_f.get()._field_Public=true;
				}
				_iter_next_2137d3856:;
				++it;
				goto _iter_begin_2137d3856;
			}
			_iter_end_2137d3856:;
		};
		_159117_s.get()._field_CppLinked=true;
	};
	return _159117_s;
}



inline jule::Ptr<_24613bde6_TypeAliasDecl> _24764a777_buildCppLinkTypeAlias(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _160345_tokens) {
	_160345_tokens=_160345_tokens.slice(1LL);
	jule::Ptr<_24613bde6_TypeAliasDecl> _160517_t = _247641c46_buildTypeAliasDecl(_self_, _160345_tokens);;
	if ((_160517_t != nullptr)) {
		_160517_t.get()._field_Public=false;
		_160517_t.get()._field_CppLinked=true;
	};
	return _160517_t;
}



inline jule::Ptr<_24613d2d2_UseDecl> _24764aa85_buildCppLinkUse(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _161339_tokens) {
	if ((_161339_tokens.len() == 1LL)) {
		_24764001e_pushErr(_self_.ptr(), _161339_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_161339_tokens=_161339_tokens.slice(1LL);
	;
	return _247646ec1_buildUseDecl(_self_.ptr(), _161339_tokens,true);
}



inline jule::Any _24764ad93_buildCppLink(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _162437_tokens) {
	jule::Ptr<_24496dc35_Token> _162517_token = _162437_tokens[0LL];;
	if ((_162437_tokens.len() == 1LL)) {
		_24764001e_pushErr(_self_.ptr(), _162517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_162517_token=_162437_tokens[1LL];
	{
		auto &_match_expr{ _162517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_2137d874b:;
			{
				return static_cast<jule::Any>(_247649d4d_buildCppLinkFn(_self_, _162437_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_2137d98d4:;
			{
				return static_cast<jule::Any>(_24764a15b_buildCppLinkVar(_self_, _162437_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_2137d994a:;
			{
				return static_cast<jule::Any>(_24764a469_buildCppLinkStruct(_self_, _162437_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_2137d99b1:;
			{
				return static_cast<jule::Any>(_24764a777_buildCppLinkTypeAlias(_self_, _162437_tokens));
			}
		}
		else {
			_case_begin_2137d9780:;
			{
				_24764001e_pushErr(_self_.ptr(), _162517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_2137d866e:;
	};
	return nullptr;
}



inline jule::Ptr<_2461375a6_FnDecl> _24764b1a1_getMethod(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _164834_tokens) {
	jule::I64 _164917_i = 0LL;;
	jule::Ptr<_24496dc35_Token> _165017_token = _164834_tokens[_164917_i];;
	if ((_165017_token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		if (((_164917_i + 1LL) >= _164834_tokens.len())) {
			_24764001e_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_164917_i)++;
		_165017_token=_164834_tokens[_164917_i];
	};
	if ((_165017_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_164917_i + 1LL) >= _164834_tokens.len())) {
			_24764001e_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_164917_i)++;
		_165017_token=_164834_tokens[_164917_i];
	};
	if ((_165017_token.get()._field_Id != static_cast<jule::U64>(32LLU))) {
		_24764001e_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_2461375a6_FnDecl> _167417_f = _247645a80_buildFn(_self_, _164834_tokens,true,false);;
	if (((_167417_f != nullptr) && _246137908_IsAnon(_167417_f.ptr()))) {
		_24764001e_pushErr(_self_.ptr(), _167417_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _167417_f;
}



inline void _24764b4c0_parseImplBody(jule::Ptr<_24763e5b2_parser> _self_, jule::Ptr<_246141a55_Impl>& _168138_ipl, jule::Slice<jule::Ptr<_24496dc35_Token>>& _168155_tokens) {
	jule::Slice<jule::Ptr<_24762263e_stmt>> _168217_stmts = _2476229d5_splitStmts(_168155_tokens);;
	{
		auto &expr = _168217_stmts;
		auto it = expr.begin();
		_iter_begin_2137e3547:;
		if (it != expr.end()) {
			jule::Ptr<_24762263e_stmt> _168321_stmt = *it;
			{
				_168155_tokens=_168321_stmt.get()._field_tokens;
				jule::Ptr<_24496dc35_Token> _168521_token = _168155_tokens[0LL];;
				{
					auto &_match_expr{ _168521_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(38LLU)) {
						_case_begin_2137e3da5:;
						{
							_247640bce_pushDirective(_self_.ptr(), _247640959_buildDirective(_self_.ptr(), _168155_tokens));
							goto _iter_next_2137e3547;
						}
					}
					_match_end_2137e4757:;
				};
				{
					auto &_match_expr{ _168521_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_2137e58e0:;
						{
							jule::Ptr<_246138585_VarDecl> _169425_v = _247642a5a_buildVar(_self_, _168155_tokens);;
							if ((_169425_v != nullptr)) {
								_168138_ipl.get()._field_Statics = jule::alloc_for_append(_168138_ipl.get()._field_Statics,1);_168138_ipl.get()._field_Statics.__push(_169425_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_2137e4955:;
						{
							jule::Ptr<_2461375a6_FnDecl> _170125_f = _24764b1a1_getMethod(_self_, _168155_tokens);;
							if ((_170125_f != nullptr)) {
								_247649424_checkMethodReceiver(_self_.ptr(), _170125_f);
								_24764bd61_applyFnMeta(_self_.ptr(), _170125_f);
								_168138_ipl.get()._field_Methods = jule::alloc_for_append(_168138_ipl.get()._field_Methods,1);_168138_ipl.get()._field_Methods.__push(_170125_f);;
							};
						}
					}
					else {
						_case_begin_2137e4ceb:;
						{
							_24764001e_pushErr(_self_.ptr(), _168521_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_2137e3547;
						}
					}
					_match_end_2137e4ed8:;
				};
			}
			_iter_next_2137e3547:;
			++it;
			goto _iter_begin_2137e3547;
		}
		_iter_end_2137e3547:;
	};
}



inline jule::Ptr<_246141a55_Impl> _24764b7cd_buildImpl(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _171433_tokens) {
	jule::Ptr<_24496dc35_Token> _171517_token = _171433_tokens[0LL];;
	if ((_171433_tokens.len() < 2LL)) {
		_24764001e_pushErr(_self_.ptr(), _171517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _172117_i = 1LL;;
	jule::Ptr<_246125b27_TypeDecl> _172318_base;;
	jule::Bool _172328_ok;;
	std::tie(_172318_base,_172328_ok) = _247641938_buildType(_self_, _171433_tokens,(&(_172117_i)),true);
	if ((!(_172328_ok))) {
		return nullptr;
	};
	if ((_172117_i >= _171433_tokens.len())) {
		_24764001e_pushErr(_self_.ptr(), _171517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_246141a55_Impl> _173217_ipl = jule::new_ptr<_246141a55_Impl>(_246141a55_Impl{._field_Base=_172318_base, });;
	_171517_token=_171433_tokens[_172117_i];
	if ((_171517_token.get()._field_Id != static_cast<jule::U64>(12LLU))) {
		if (((_171517_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_171517_token.get()._field_Kind == jule::Str("{", 1)))) {
			std::tie(_173217_ipl.get()._field_Base,_173217_ipl.get()._field_Dest) = std::make_tuple(_173217_ipl.get()._field_Dest,_173217_ipl.get()._field_Base);
			goto _julec_label_body;
		};
		_24763e8e2_stop(_self_.ptr());
		_24764001e_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_24764033d_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	(_172117_i)++;
	if ((_172117_i >= _171433_tokens.len())) {
		_24763e8e2_stop(_self_.ptr());
		_24764001e_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_24764033d_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	std::tie(_173217_ipl.get()._field_Dest,_172328_ok) = _247641938_buildType(_self_, _171433_tokens,(&(_172117_i)),true);
	if ((!(_172328_ok))) {
		return nullptr;
	};
	if ((_172117_i >= _171433_tokens.len())) {
		_24763e8e2_stop(_self_.ptr());
		_24764001e_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_24764033d_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _177017_bodyTokens = _24763c824_range(_172117_i,jule::Str("{", 1),jule::Str("}", 1),_171433_tokens);;
	if ((_177017_bodyTokens == nullptr)) {
		_24763e8e2_stop(_self_.ptr());
		_24764001e_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_24764033d_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_172117_i < _171433_tokens.len())) {
		_24764001e_pushErr(_self_.ptr(), _171433_tokens[_172117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_173217_ipl.get()._field_End=_171433_tokens[(_172117_i - 1LL)];
	_24764b4c0_parseImplBody(_self_, _173217_ipl,_177017_bodyTokens);
	return _173217_ipl;
}



inline jule::Any _24764badb_buildNodeData(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _178538_tokens) {
	jule::Ptr<_24496dc35_Token> _178617_token = _178538_tokens[0LL];;
	{
		auto &_match_expr{ _178617_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_213806e62:;
			{
				jule::Ptr<_2461375a6_FnDecl> _179021_f = _247645a80_buildFn(_self_, _178538_tokens,false,false);;
				if ((_179021_f != nullptr)) {
					_179021_f.get()._field_Global=true;
					if (_246137908_IsAnon(_179021_f.ptr())) {
						_24764001e_pushErr(_self_.ptr(), _179021_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return static_cast<jule::Any>(_179021_f);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_213806ec8:;
			{
				return static_cast<jule::Any>(_247642a5a_buildVar(_self_, _178538_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_21380703e:;
			{
				return static_cast<jule::Any>(_247641c46_buildTypeAliasDecl(_self_, _178538_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_21380776a:;
			{
				return _247648775_buildNodeEnumDecl(_self_, _178538_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_2138077d1:;
			{
				return static_cast<jule::Any>(_24764919e_buildStructDecl(_self_, _178538_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_213807847:;
			{
				return static_cast<jule::Any>(_247649a40_buildTraitDecl(_self_, _178538_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_2138078ad:;
			{
				return static_cast<jule::Any>(_24764b7cd_buildImpl(_self_, _178538_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_213807935:;
			{
				return _24764ad93_buildCppLink(_self_, _178538_tokens);
			}
		}
		else {
			_case_begin_213806d52:;
			{
				_24764001e_pushErr(_self_.ptr(), _178617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_213806cec:;
	};
}



inline void _24764bd61_applyFnMeta(_24763e5b2_parser* _self_, jule::Ptr<_2461375a6_FnDecl>& _182135_f) {
	_182135_f.get()._field_Directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _24764c0d6_applyMeta(_24763e5b2_parser* _self_, _2460dc45c_Node& _182633_node) {
	{
		auto &_match_expr{ _182633_node._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_246138585_VarDecl>>()) {
			_case_begin_21380dae5:;
			{
				jule::Ptr<_246138585_VarDecl> _182921_v = _182633_node._field_Data.operator jule::Ptr<_246138585_VarDecl>();;
				if ((_182921_v == nullptr)) {
					return;;
				};
				_182921_v.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2461375a6_FnDecl>>()) {
			_case_begin_21380db6c:;
			{
				jule::Ptr<_2461375a6_FnDecl> _183621_f = _182633_node._field_Data.operator jule::Ptr<_2461375a6_FnDecl>();;
				if ((_183621_f == nullptr)) {
					return;;
				};
				_24764bd61_applyFnMeta(&(*_self_), _183621_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246140d40_StructDecl>>()) {
			_case_begin_21380dbe4:;
			{
				jule::Ptr<_246140d40_StructDecl> _184221_sd = _182633_node._field_Data.operator jule::Ptr<_246140d40_StructDecl>();;
				if ((_184221_sd == nullptr)) {
					return;;
				};
				_184221_sd.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		_match_end_21380d8d6:;
	};
}



inline void _24764c35b_pushUseDecl(jule::Ptr<_24763e5b2_parser> _self_, jule::Ptr<_24613d2d2_UseDecl>& _185136_decl) {
	_self_.get()._field_ast.get()._field_UseDecls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_UseDecls,1);_self_.get()._field_ast.get()._field_UseDecls.__push(_185136_decl);;
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_24764001e_pushErr(_self_.ptr(), _185136_decl.get()._field_Token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_24764033d_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _24764c669_pushMetaNodes(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _185938_tokens) {
	{
		auto &_match_expr{ _185938_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_213814d82:;
			{
				;
				jule::Ptr<_24613d2d2_UseDecl> _186321_decl = _247646ec1_buildUseDecl(_self_.ptr(), _185938_tokens,false);;
				_24764c35b_pushUseDecl(_self_, _186321_decl);
				return true;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_213814e09:;
			{
				if (((_185938_tokens.len() > 1LL) && (_185938_tokens[1LL].get()._field_Id == static_cast<jule::U64>(19LLU)))) {
					jule::Ptr<_24613d2d2_UseDecl> _186825_decl = _24764aa85_buildCppLinkUse(_self_, _185938_tokens);;
					_24764c35b_pushUseDecl(_self_, _186825_decl);
					return true;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_213814e81:;
			{
				_247640bce_pushDirective(_self_.ptr(), _247640959_buildDirective(_self_.ptr(), _185938_tokens));
				return true;
			}
		}
		_match_end_213814c50:;
	};
	return false;
}



inline _2460dc45c_Node _24764c977_parseNode(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _187934_st) {
	_2460dc45c_Node _188017_node = _2460dc45c_Node{._field_Token=_187934_st[0LL], };;
	if (_24764c669_pushMetaNodes(_self_, _187934_st)) {
		return _188017_node;
	};
	jule::Any _188817_data = _24764badb_buildNodeData(_self_, _187934_st);;
	if ((_188817_data == nullptr)) {
		return _188017_node;
	};
	_188017_node._field_Data=_188817_data;
	_24764c0d6_applyMeta(_self_.ptr(), _188017_node);
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_24764001e_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _188017_node;
}



inline void _24764cbec_appendNode(jule::Ptr<_24763e5b2_parser> _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _190335_st) {
	if ((_190335_st.len() == 0LL)) {
		return;;
	};
	_2460dc45c_Node _190717_node = _24764c977_parseNode(_self_, _190335_st);;
	if (((_190717_node._field_Data == nullptr) || _24763eb56_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_Nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_Nodes,1);_self_.get()._field_ast.get()._field_Nodes.__push(_190717_node);;
}



inline void _24764d15e_removeRange(_24763e5b2_parser* _self_, jule::I64 _191430_i, jule::Str _191438_kind, jule::Slice<jule::Ptr<_24496dc35_Token>>& _191450_tokens, jule::Slice<jule::I64>& _191473_ranges) {
	jule::Str _191513_close = _24763d638_getCloseKindOfBrace(_191438_kind);;
	for (; (_191430_i >= 0LL); (_191430_i)--) {
		{
			jule::Ptr<_24496dc35_Token> _191717_tok = _191450_tokens[_191473_ranges[_191430_i]];;
			if ((_191717_tok.get()._field_Kind != _191513_close)) {
				goto _iter_next_213820266;
			};
			_191473_ranges=jule::append(_191473_ranges.slice(0LL,_191430_i),_191473_ranges.slice((_191430_i + 1LL)));
			goto _iter_end_213820266;
		}
	_iter_next_213820266:;
	}
	_iter_end_213820266:;;
}



inline void _24764d527_pushWrongOrderCloseErr(_24763e5b2_parser* _self_, jule::Ptr<_24496dc35_Token>& _192642_t, jule::Slice<jule::Ptr<_24496dc35_Token>>& _192654_tokens, jule::Slice<jule::I64>& _192673_ranges) {
	{
		auto &_match_expr{ _192654_tokens[_192673_ranges[(_192673_ranges.len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_2138225a9:;
			{
				_24764001e_pushErr(&(*_self_), _192642_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_213822631:;
			{
				_24764001e_pushErr(&(*_self_), _192642_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_2138226a8:;
			{
				_24764001e_pushErr(&(*_self_), _192642_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_213822477:;
	};
}



inline void _24764d989_pushRangeClose(_24763e5b2_parser* _self_, jule::Ptr<_24496dc35_Token> _193733_t, jule::Str _193744_left, jule::Slice<jule::Ptr<_24496dc35_Token>>& _193756_tokens, jule::Slice<jule::I64>& _193779_ranges) {
	jule::I64 _193813_n = _193779_ranges.len();;
	if ((_193813_n == 0LL)) {
		{
			auto &_match_expr{ _193733_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_2138254ad:;
				{
					_24764001e_pushErr(&(*_self_), _193733_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_213825535:;
				{
					_24764001e_pushErr(&(*_self_), _193733_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_2138255ac:;
				{
					_24764001e_pushErr(&(*_self_), _193733_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_213825403:;
		};
		return;;
	} else if ((_193756_tokens[_193779_ranges[(_193813_n - 1LL)]].get()._field_Kind != _193744_left)) {
		_24764d527_pushWrongOrderCloseErr(&(*_self_), _193733_t,_193756_tokens,_193779_ranges);
	};
	_24764d15e_removeRange(&(*_self_), static_cast<jule::I64>((_193813_n - 1LL)),_193733_t.get()._field_Kind,_193756_tokens,_193779_ranges);
}



inline void _24764dc0e_checkRanges(_24763e5b2_parser* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>>& _195531_tokens) {
	jule::Slice<jule::I64> _195617_ranges = nullptr;;
	{
		auto &expr = _195531_tokens;
		auto it = expr.begin();
		_iter_begin_213828b43:;
		if (it != expr.end()) {
			jule::I64 _195813_i = it - expr.begin();
			jule::Ptr<_24496dc35_Token> &_195816_token = *it;
			{
				if ((_195816_token.get()._field_Id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_213828b43;
				};
				{
					auto &_match_expr{ _195816_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_213829ddb:;
						{
							_195617_ranges = jule::alloc_for_append(_195617_ranges,1);_195617_ranges.__push(_195813_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_21382a051:;
						{
							_24764d989_pushRangeClose(&(*_self_), _195816_token,jule::Str("(", 1),_195531_tokens,_195617_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_21382a0b7:;
						{
							_24764d989_pushRangeClose(&(*_self_), _195816_token,jule::Str("{", 1),_195531_tokens,_195617_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_21382a12d:;
						{
							_24764d989_pushRangeClose(&(*_self_), _195816_token,jule::Str("[", 1),_195531_tokens,_195617_ranges);
						}
					}
					_match_end_213829ccb:;
				};
			}
			_iter_next_213828b43:;
			++it;
			_195813_i++;
			goto _iter_begin_213828b43;
		}
		_iter_end_213828b43:;
	};
	{
		auto &expr = _195617_ranges;
		auto it = expr.begin();
		_iter_begin_213828acc:;
		if (it != expr.end()) {
			jule::I64 _197616_i = *it;
			{
				jule::Ptr<_24496dc35_Token> _197717_token = _195531_tokens[_197616_i];;
				{
					auto &_match_expr{ _197717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_21382caae:;
						{
							_24764001e_pushErr(&(*_self_), _197717_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_21382cb25:;
						{
							_24764001e_pushErr(&(*_self_), _197717_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_21382cb8b:;
						{
							_24764001e_pushErr(&(*_self_), _197717_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_21382c84a:;
				};
			}
			_iter_next_213828acc:;
			++it;
			goto _iter_begin_213828acc;
		}
		_iter_end_213828acc:;
	};
}



inline void _24764de84_parse(jule::Ptr<_24763e5b2_parser> _self_, jule::Ptr<_2449740c0_File>& _198930_f) {
	_self_.get()._field_ast=jule::new_ptr<_2460db7ad_Ast>(_2460db7ad_Ast{._field_File=_198930_f, });
	_24764dc0e_checkRanges(_self_.ptr(), _198930_f.get()._field_Tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_24762263e_stmt>> _199917_stmts = _2476229d5_splitStmts(_198930_f.get()._field_Tokens);;
	jule::I64 _200217_i = 0LL;;
	for (; (_200217_i < _199917_stmts.len()); (_200217_i)++) {
		{
			jule::Ptr<_24762263e_stmt> _200421_stmt = _199917_stmts[_200217_i];;
			if ((_200421_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_200421_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U64>(38LLU))) {
				goto _iter_end_213831035;
			};
			if ((!(_244642c8e_IsTopDirective(_200421_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_213831035;
			};
			_self_.get()._field_ast.get()._field_TopDirectives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_TopDirectives,1);_self_.get()._field_ast.get()._field_TopDirectives.__push(_247640959_buildDirective(_self_.ptr(), _200421_stmt.get()._field_tokens));;
		}
	_iter_next_213831035:;
	}
	_iter_end_213831035:;;
	_self_.get()._field_errors=nullptr;
	for (; (_200217_i < _199917_stmts.len()); (_200217_i)++) {
		{
			jule::Ptr<_24762263e_stmt> _202121_stmt = _199917_stmts[_200217_i];;
			_24764cbec_appendNode(_self_, _202121_stmt.get()._field_tokens);
			if (_24763eb56_stopped(_self_.ptr())) {
				goto _iter_end_2138343ac;
			};
		}
	_iter_next_2138343ac:;
	}
	_iter_end_2138343ac:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_24764001e_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _24763e5b2_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _24765089d_pushErr(_2476502c6_typeBuilder* _self_, jule::Ptr<_24496dc35_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*_self_)._field_err) {
		_24764001e_pushErr((*_self_)._field_p.ptr(), _4126_token,_4141_fmt,jule::Slice<jule::Any>());
	};
}



inline void _247650bbc_pushSuggestion(_2476502c6_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*_self_)._field_err) {
		_24764033d_pushSuggestion((*_self_)._field_p.ptr(), _4833_fmt,jule::Any(_4846_args));
	};
}



inline jule::Ptr<_246125b27_TypeDecl> _247650e31_buildPrim(_2476502c6_typeBuilder* _self_) {
	jule::Ptr<_246125b27_TypeDecl> _5517_t = _24764ed42_buildPrimType((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _5517_t;
}



inline jule::Ptr<_246125b27_TypeDecl> _247651195_buildNamespace(_2476502c6_typeBuilder* _self_) {
	jule::Ptr<_246125b27_TypeDecl> _6117_t = jule::new_ptr<_246125b27_TypeDecl>(_246125b27_TypeDecl{._field_Token=(*_self_)._field_tokens[(*((*_self_)._field_i))], });;
	jule::Ptr<_246126be4_NamespaceTypeDecl> _6517_nst = jule::new_ptr<_246126be4_NamespaceTypeDecl>();;
	jule::I64 _6617_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_24496dc35_Token> _6821_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_6617_n & 1LL) == 0LL)) {
				if ((_6821_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
					_24765089d_pushErr(&(*_self_), _6821_token,jule::Str("invalid syntax", 14));
					_247650bbc_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_6517_nst.get()._field_Idents = jule::alloc_for_append(_6517_nst.get()._field_Idents,1);_6517_nst.get()._field_Idents.__push(_6821_token);;
			} else if ((_6821_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
				goto _iter_end_21383a803;
			};
			(_6617_n)++;
		}
	_iter_next_21383a803:;
	}
	_iter_end_21383a803:;;
	_6517_nst.get()._field_Idents=_6517_nst.get()._field_Idents.slice(0LL,(_6517_nst.get()._field_Idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_6517_nst.get()._field_Kind=_2476518d2_buildIdent(&(*_self_));
	_6117_t.get()._field_Kind=static_cast<jule::Any>(_6517_nst);
	return _6117_t;
}



inline jule::Slice<jule::Ptr<_246125b27_TypeDecl>> _247651409_buildGenerics(_2476502c6_typeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_24496dc35_Token> _9413_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_9413_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_9413_token.get()._field_Kind != jule::Str("[", 1)))) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _9917_parts = _24765166d_identGenerics(&(*_self_));;
	if ((_9917_parts.len() == 0LL)) {
		_24765089d_pushErr(&(*_self_), _9413_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_246125b27_TypeDecl>> _10517_types = jule::Slice<jule::Ptr<_246125b27_TypeDecl>>::alloc(0LL, _9917_parts.len());;
	{
		auto &expr = _9917_parts;
		auto it = expr.begin();
		_iter_begin_213843ad6:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_24496dc35_Token>> _10621_part = *it;
			{
				jule::I64 _10721_j = 0LL;;
				jule::Ptr<_246125b27_TypeDecl> _10822_t;;
				std::tie(_10822_t,std::ignore) = _247641938_buildType((*_self_)._field_p, _10621_part,(&(_10721_j)),true);
				if ((_10721_j < _10621_part.len())) {
					_24765089d_pushErr(&(*_self_), _10621_part[_10721_j],jule::Str("invalid syntax", 14));
				};
				_10517_types = jule::alloc_for_append(_10517_types,1);_10517_types.__push(_10822_t);;
			}
			_iter_next_213843ad6:;
			++it;
			goto _iter_begin_213843ad6;
		}
		_iter_end_213843ad6:;
	};
	return _10517_types;
}



inline jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _24765166d_identGenerics(_2476502c6_typeBuilder* _self_) {
	jule::I64 _11813_first = (*((*_self_)._field_i));;
	jule::I64 _11917_rangeN = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_24496dc35_Token> _12117_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_12117_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _12117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_213847c2d:;
						{
							(_11917_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_213847ca5:;
						{
							(_11917_rangeN)--;
						}
					}
					_match_end_2138479b9:;
				};
			};
			if ((_11917_rangeN == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_2138467cb;
			};
		}
	_iter_next_2138467cb:;
	}
	_iter_end_2138467cb:;;
	jule::Slice<jule::Ptr<_24496dc35_Token>> _13517_tokens = (*_self_)._field_tokens.slice((_11813_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _13618_parts;;
	jule::Slice<_244640d69_Log> _13625_errors;;
	std::tie(_13618_parts,_13625_errors) = _24763d391_parts(_13517_tokens,static_cast<jule::U64>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_13625_errors);
	};
	return _13618_parts;
}



inline jule::Ptr<_246125b27_TypeDecl> _2476518d2_buildIdent(_2476502c6_typeBuilder* _self_) {
	jule::Bool _14417_next = (((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len());;
	if ((_14417_next && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return _247651195_buildNamespace(&(*_self_));
	};
	jule::Ptr<_24496dc35_Token> _14817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_2461261dd_IdentTypeDecl> _14917_it = jule::new_ptr<_2461261dd_IdentTypeDecl>(_2461261dd_IdentTypeDecl{._field_Token=_14817_token, ._field_Ident=_14817_token.get()._field_Kind, ._field_CppLinked=false, });;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_246125b27_TypeDecl> _15517_itd = jule::new_ptr<_246125b27_TypeDecl>(_246125b27_TypeDecl{._field_Token=_14817_token, ._field_Kind=static_cast<jule::Any>(_14917_it)});;
	if (((!(_14417_next)) || ((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_14917_it.get()._field_Generics=_247651409_buildGenerics(&(*_self_));
		return _15517_itd;
	};
	if ((((*_self_)._field_tokens.len() - (*((*_self_)._field_i))) == 1LL)) {
		_24765089d_pushErr(&(*_self_), _14817_token,jule::Str("invalid syntax", 14));
		return _15517_itd;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_24765089d_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("invalid syntax", 14));
		return _15517_itd;
	};
	jule::Ptr<_24612683c_SubIdentTypeDecl> _17217_sit = jule::new_ptr<_24612683c_SubIdentTypeDecl>();;
	_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_14917_it);;
	jule::Ptr<_246125b27_TypeDecl> _17417_ident = _2476518d2_buildIdent(&(*_self_));;
	{
		auto &_match_expr{ _17417_ident.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_2461261dd_IdentTypeDecl>>()) {
			_case_begin_213853b3a:;
			{
				_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_17417_ident.get()._field_Kind.operator jule::Ptr<_2461261dd_IdentTypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24612683c_SubIdentTypeDecl>>()) {
			_case_begin_213853ba1:;
			{
				_17217_sit.get()._field_Idents=jule::append(_17217_sit.get()._field_Idents,_17417_ident.get()._field_Kind.operator jule::Ptr<_24612683c_SubIdentTypeDecl>().get()._field_Idents);
			}
		}
		_match_end_213853aa2:;
	};
	return jule::new_ptr<_246125b27_TypeDecl>(_246125b27_TypeDecl{._field_Token=_14817_token, ._field_Kind=static_cast<jule::Any>(_17217_sit)});
}



inline jule::Ptr<_246125b27_TypeDecl> _247651b46_buildCppLink(_2476502c6_typeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_24765089d_pushErr(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_246125b27_TypeDecl> _19317_t = _2476518d2_buildIdent(&(*_self_));;
	_19317_t.get()._field_Kind.operator jule::Ptr<_2461261dd_IdentTypeDecl>().get()._field_CppLinked=true;
	return _19317_t;
}



inline jule::Ptr<_246125b27_TypeDecl> _247651daa_buildFn(_2476502c6_typeBuilder* _self_) {
	jule::Ptr<_24496dc35_Token> _19917_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_2461375a6_FnDecl> _20017_f = _24764562e_buildFnPrototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_20017_f == nullptr)) {
		return nullptr;
	};
	if ((!(_246137908_IsAnon(_20017_f.ptr())))) {
		_24765089d_pushErr(&(*_self_), _20017_f.get()._field_Token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_246125b27_TypeDecl>(_246125b27_TypeDecl{._field_Token=_19917_token, ._field_Kind=static_cast<jule::Any>(_20017_f)});
}



inline jule::Ptr<_246125b27_TypeDecl> _24765211e_buildPtr(_2476502c6_typeBuilder* _self_) {
	jule::Ptr<_24496dc35_Token> _21417_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_24765089d_pushErr(&(*_self_), _21417_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id == static_cast<jule::U64>(34LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_246125b27_TypeDecl>(_246125b27_TypeDecl{._field_Token=_21417_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_2461279a3_PtrTypeDecl>(_2461279a3_PtrTypeDecl{._field_Elem=nullptr}))});
	};
	jule::Ptr<_246125b27_TypeDecl> _23117_elem = _24765330c_step(&(*_self_));;
	if ((_23117_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_246125b27_TypeDecl>(_246125b27_TypeDecl{._field_Token=_21417_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_2461279a3_PtrTypeDecl>(_2461279a3_PtrTypeDecl{._field_Elem=_23117_elem}))});
}



inline jule::Ptr<_246125b27_TypeDecl> _247652383_buildSptr(_2476502c6_typeBuilder* _self_) {
	jule::Ptr<_24496dc35_Token> _24517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_24765089d_pushErr(&(*_self_), _24517_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_246125b27_TypeDecl> _25217_elem = _24765330c_step(&(*_self_));;
	if ((_25217_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_246125b27_TypeDecl>(_246125b27_TypeDecl{._field_Token=_24517_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_246126ed0_SptrTypeDecl>(_246126ed0_SptrTypeDecl{._field_Elem=_25217_elem}))});
}



inline jule::Ptr<_246125b27_TypeDecl> _2476525e7_buildOp(_2476502c6_typeBuilder* _self_) {
	jule::Ptr<_24496dc35_Token> _26617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _26617_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_2138630de:;
			{
				return _24765211e_buildPtr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_213863155:;
			{
				return _247652383_buildSptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_2138631bb:;
			{
				return jule::new_ptr<_246125b27_TypeDecl>(_246125b27_TypeDecl{._field_Kind=static_cast<jule::Any>(jule::new_ptr<_246126ed0_SptrTypeDecl>(_246126ed0_SptrTypeDecl{._field_Elem=_247652383_buildSptr(&(*_self_))}))});
			}
		}
		else {
			_case_begin_213863034:;
			{
				_24765089d_pushErr(&(*_self_), _26617_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_213862ebd:;
	};
}



inline jule::Ptr<_246125b27_TypeDecl> _24765285b_buildSlc(_2476502c6_typeBuilder* _self_) {
	jule::Ptr<_24496dc35_Token> _28517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_246125b27_TypeDecl> _28717_elem = _24765330c_step(&(*_self_));;
	if ((_28717_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_246125b27_TypeDecl>(_246125b27_TypeDecl{._field_Token=_28517_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_2461273cb_SlcTypeDecl>(_2461273cb_SlcTypeDecl{._field_Elem=_28717_elem}))});
}



inline jule::Ptr<_246125b27_TypeDecl> _247652ac0_buildArr(_2476502c6_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_24496dc35_Token>> _30017_exprTokens = _24763c824_range((*((*_self_)._field_i)),jule::Str("[", 1),jule::Str("]", 1),(*_self_)._field_tokens);;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_24765089d_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Ptr<_246125b27_TypeDecl> _30617_elem = _24765330c_step(&(*_self_));;
	if ((_30617_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_246128135_ArrTypeDecl> _31117_arrt = jule::new_ptr<_246128135_ArrTypeDecl>(_246128135_ArrTypeDecl{._field_Elem=_30617_elem, });;
	jule::Ptr<_24496dc35_Token> _31517_token = _30017_exprTokens[0LL];;
	if ((((_30017_exprTokens.len() == 1LL) && (_31517_token.get()._field_Id == static_cast<jule::U64>(7LLU))) && (_31517_token.get()._field_Kind == jule::Str("...", 3)))) {
	} else {
		_31117_arrt.get()._field_Size=_24764064b_buildExpr((*_self_)._field_p, _30017_exprTokens);
	};
	return jule::new_ptr<_246125b27_TypeDecl>(_246125b27_TypeDecl{._field_Token=_31517_token, ._field_Kind=static_cast<jule::Any>(_31117_arrt)});
}



inline jule::Ptr<_246125b27_TypeDecl> _247652d34_buildMap(_2476502c6_typeBuilder* _self_) {
	jule::Ptr<_24496dc35_Token> _32917_mapToken = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_24765089d_pushErr(&(*_self_), _32917_mapToken,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_24496dc35_Token>> _33717_keyTokens = _24763c824_range((*((*_self_)._field_i)),jule::Str("[", 1),jule::Str("]", 1),(*_self_)._field_tokens);;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_24765089d_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	} else if ((_33717_keyTokens.len() == 0LL)) {
		_24765089d_pushErr(&(*_self_), _32917_mapToken,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Ptr<_246128883_MapTypeDecl> _34617_mapt = jule::new_ptr<_246128883_MapTypeDecl>();;
	jule::I64 _34717_j = 0LL;;
	jule::Ptr<_246125b27_TypeDecl> _34818_keyt;;
	jule::Bool _34828_ok;;
	std::tie(_34818_keyt,_34828_ok) = _247641938_buildType((*_self_)._field_p, _33717_keyTokens,(&(_34717_j)),(*_self_)._field_err);
	if ((!(_34828_ok))) {
		return nullptr;
	} else if ((_34717_j < _33717_keyTokens.len())) {
		_24765089d_pushErr(&(*_self_), _33717_keyTokens[_34717_j],jule::Str("invalid syntax", 14));
	};
	_34617_mapt.get()._field_Key=_34818_keyt;
	jule::Ptr<_246125b27_TypeDecl> _35618_valt;;
	std::tie(_35618_valt,_34828_ok) = _247641938_buildType((*_self_)._field_p, (*_self_)._field_tokens,(*_self_)._field_i,(*_self_)._field_err);
	if ((!(_34828_ok))) {
		return nullptr;
	};
	_34617_mapt.get()._field_Val=_35618_valt;
	return jule::new_ptr<_246125b27_TypeDecl>(_246125b27_TypeDecl{._field_Token=_32917_mapToken, ._field_Kind=static_cast<jule::Any>(_34617_mapt)});
}



inline jule::Ptr<_246125b27_TypeDecl> _247653098_buildEnumerable(_2476502c6_typeBuilder* _self_) {
	jule::Ptr<_24496dc35_Token> _36817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_36817_token.get()._field_Id != static_cast<jule::U64>(3LLU))) || (_36817_token.get()._field_Kind != jule::Str("[", 1)))) {
		_24765089d_pushErr(&(*_self_), _36817_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	_36817_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_36817_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_36817_token.get()._field_Kind == jule::Str("]", 1)))) {
		return _24765285b_buildSlc(&(*_self_));
	};
	((*((*_self_)._field_i)))--;
	return _247652ac0_buildArr(&(*_self_));
}



inline jule::Ptr<_246125b27_TypeDecl> _24765330c_step(_2476502c6_typeBuilder* _self_) {
	jule::Ptr<_24496dc35_Token> _38513_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _38513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_21387dd52:;
			{
				return _247650e31_buildPrim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_21387e35d:;
			{
				return _2476518d2_buildIdent(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_21387e3c4:;
			{
				return _247651b46_buildCppLink(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_21387e22b:;
			{
				return _247651daa_buildFn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_21387e292:;
			{
				return _2476525e7_buildOp(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_21387d626:;
			{
				return _247653098_buildEnumerable(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_21387d68c:;
			{
				return _247652d34_buildMap(&(*_self_));
			}
		}
		else {
			_case_begin_21387d5b0:;
			{
				((*((*_self_)._field_i)))++;
				_24765089d_pushErr(&(*_self_), _38513_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_21387d549:;
	};
}



inline std::tuple<jule::Ptr<_246125b27_TypeDecl>,jule::Bool> _247653571_build(_2476502c6_typeBuilder* _self_) {
	jule::Bool _41044_ok = false;
	jule::Ptr<_246125b27_TypeDecl> _41117_root = _24765330c_step(&(*_self_));;
	if ((_41117_root == nullptr)) {
		_41044_ok = false;
		return std::make_tuple(_24764eacd_buildVoidType(),_41044_ok);
	};
	_41044_ok = true;
	return std::make_tuple(_41117_root,_41044_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _2476502c6_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _246e7107b_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _246e7292e_pushErr(_246e723ce_directiveEval* _self_, jule::Ptr<_24496dc35_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_244640d69_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_2446412a9_Logf(_2137_fmt,jule::Any(_2150_args)), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _246e72cd6_splitOperans(_246e723ce_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_24496dc35_Token>>& _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_rangeN = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < (_3351_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_24496dc35_Token> _4017_b = _3351_tokens[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_2138a71bb:;
						{
							(_3717_rangeN)++;
							goto _iter_next_2138a6066;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_2138a7243:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_2138a7001:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_2138a6066;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_2138a6066:;
	}
	_iter_end_2138a6066:;;
	if ((_3817_last < _3351_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last));;
	} else {
		_246e7292e_pushErr(&(*_self_), _3351_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _3417_parts;
}



inline jule::Bool _246e730e4_evalDirectiveIdent(_246e723ce_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_2138aa60e:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7333_ident)) {
					return true;
				};
			}
			_iter_next_2138aa60e:;
			++it;
			goto _iter_begin_2138aa60e;
		}
		_iter_end_2138aa60e:;
	};
	return false;
}



inline jule::Bool _246e73402_evalDirectivePart(_246e723ce_directiveEval* _self_, jule::Slice<jule::Ptr<_24496dc35_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_8740_part[0LL].get()._field_Kind == jule::Str("!", 1)));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_246e7292e_pushErr(&(*_self_), _8740_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _9817_result = _246e730e4_evalDirectiveIdent(&(*_self_), _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;
}



inline jule::Bool _246e73666_eval(_246e723ce_directiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_Args.len() == 0LL)) {
		_246e7292e_pushErr(&(*_self_), (*_self_)._field_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _11317_logicalOrParts = _246e72cd6_splitOperans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_Args);;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;
	};
	{
		auto &expr = _11317_logicalOrParts;
		auto it = expr.begin();
		_iter_begin_2138b1dda:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_24496dc35_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _12021_logicalAndParts = _246e72cd6_splitOperans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;
				};
				{
					auto &expr = _12021_logicalAndParts;
					auto it = expr.begin();
					_iter_begin_2138b3914:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_24496dc35_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_24496dc35_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_Kind == jule::Str("(", 1)))) {
								jule::Ptr<_24496dc35_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_Kind != jule::Str(")", 1)))) {
									_246e7292e_pushErr(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								};
								_12525_andPart=_12525_andPart.slice(1LL,(_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _246e73402_evalDirectivePart(&(*_self_), _12525_andPart));
						}
						_iter_next_2138b3914:;
						++it;
						goto _iter_begin_2138b3914;
					}
					_iter_end_2138b3914:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_2138b1dda:;
			++it;
			goto _iter_begin_2138b1dda;
		}
		_iter_end_2138b1dda:;
	};
	return _11117_result;
}







std::ostream &operator<<(std::ostream &_Stream, _246e723ce_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2476aea83_JuleImporter> static__2476aeeb2_New(_246e7107b_CompileInfo _5819_info) {
	jule::Ptr<_2476aea83_JuleImporter> _5917_imp = jule::new_ptr<_2476aea83_JuleImporter>(_2476aea83_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_244679a95_PathStdlib}), });;
	_246e71895_initVars(_5917_imp.get()._field_vars,_5819_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_246ce04c2_ImportInfo>> _2476b0226_AllPackages(_2476aea83_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _2476b05de_SetModPath(_2476aea83_JuleImporter* _self_, jule::Str _7529_path) {
	(*_self_)._field_mod=_7529_path;
}



inline jule::Str _2476b0853_GetModPath(_2476aea83_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _2476b0b61_ModById(_2476aea83_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*_self_)._field_mods[_8322_id];
}



inline jule::Ptr<_246ce04c2_ImportInfo> _2476b0e6e_GetImport(_2476aea83_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_2138bb521:;
		if (it != expr.end()) {
			jule::Ptr<_246ce04c2_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;
				};
			}
			_iter_next_2138bb521:;
			++it;
			goto _iter_begin_2138bb521;
		}
		_iter_end_2138bb521:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_2460db7ad_Ast>>,jule::Slice<_244640d69_Log>> _2476b1326_ImportPackage(_2476aea83_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	jule::Slice<jule::Ptr<_2427516da_DirEntry>> _9717_dirents = ({
		auto except = static__24357b0a2_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_244640d69_Log>::make({_2476ae5ee_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))}));
		} jule::Slice<jule::Ptr<_2427516da_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _246e82664_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_newMod;
			jule::Slice<_244640d69_Log> _10525_errs = _246e828ea_CheckModuleFile((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			};
		};
	};
	jule::Slice<jule::Ptr<_2460db7ad_Ast>> _11217_asts = jule::Slice<jule::Ptr<_2460db7ad_Ast>>::alloc(0LL, _9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_2138c0c62:;
		if (it != expr.end()) {
			jule::Ptr<_2427516da_DirEntry> _11316_dirent = *it;
			{
				if ((_24275d98e_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_2445b445d_HasSuffix(_11316_dirent.get()._field_Name,jule::Str(".jule", 5)))))) {
					goto _iter_next_2138c0c62;
				};
				jule::Str _11917__path = _243624832_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_2449740c0_File> _12021_file = _2449755ee_NewFileSet(_11917__path);;
				_244974752_Fill(_12021_file.ptr(), _2476ae346_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_244640d69_Log> _12221_errors = _244981033_Lex(_12021_file,static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				};
				jule::Ptr<_2475c5aba_FileInfo> _12721_finfo = _2475c878d_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_Errors);
				};
				if ((!(_246e5646d_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_2138c0c62;
				};
				jule::Bool _13718_r;;
				jule::Slice<_244640d69_Log> _13725_logs;;
				std::tie(_13718_r,_13725_logs) = _2476b19db_isPassBuildDirectives(&(*_self_), _12721_finfo.get()._field_Ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				};
				if ((!(_13718_r))) {
					goto _iter_next_2138c0c62;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_Ast);;
			}
			_iter_next_2138c0c62:;
			++it;
			goto _iter_begin_2138c0c62;
		}
		_iter_end_2138c0c62:;
	};
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _2476b159b_Imported(_2476aea83_JuleImporter* _self_, jule::Ptr<_246ce04c2_ImportInfo> _15331_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_2138c467d:;
		if (it != expr.end()) {
			jule::Ptr<_246ce04c2_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_CppLinked == _15331_imp.get()._field_CppLinked) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_2138c467d:;
			++it;
			goto _iter_begin_2138c467d;
		}
		_iter_end_2138c467d:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_2138c8462:;
			if (it != expr.end()) {
				jule::I64 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_2138c8462:;
				++it;
				_16217_i++;
				goto _iter_begin_2138c8462;
			}
			_iter_end_2138c8462:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15331_imp);;
}



inline std::tuple<jule::Bool,jule::Slice<_244640d69_Log>> _2476b19db_isPassBuildDirectives(_2476aea83_JuleImporter* _self_, jule::Ptr<_2460db7ad_Ast>& _17945_file) {
	{
		auto &expr = _17945_file.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_2138cb971:;
		if (it != expr.end()) {
			jule::Ptr<_2460dc858_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_Tag.get()._field_Kind != jule::Str("build", 5))) {
					goto _iter_next_2138cb971;
				};
				_246e723ce_directiveEval _18421_de = _246e723ce_directiveEval{._field_d=_18021_td, ._field_vars=(*_self_)._field_vars};;
				jule::Bool _18817_result = _246e73666_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				};
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				};
			}
			_iter_next_2138cb971:;
			++it;
			goto _iter_begin_2138cb971;
		}
		_iter_end_2138cb971:;
	};
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _2476aea83_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2476b4846_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _213900214_isCommonOrdered(jule::Slice<jule::Ptr<_246117c3a_Struct>>& _1835_s, jule::Ptr<_246117c3a_Struct> _1844_t) {
	jule::Ptr<_246117c3a_Struct>* _1917_p = (&(_1844_t.get()._field_Depends[0LL]));;
	jule::Ptr<_246117c3a_Struct>* _2013_end = (_1917_p + _1844_t.get()._field_Depends.len());;
	{
		auto &expr = _1835_s;
		auto it = expr.begin();
		_iter_begin_213902e5e:;
		if (it != expr.end()) {
			jule::Ptr<_246117c3a_Struct> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1844_t)) {
						goto _iter_end_213902e5e;
					};
					if ((((*(_1917_p)).get()._field_CppLinked || ((*(_1917_p)).get()._field_Depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_213902e5e:;
			++it;
			goto _iter_begin_213902e5e;
		}
		_iter_end_213902e5e:;
	};
	return false;
}

inline jule::Bool _213908a25_isCommonOrdered(jule::Slice<jule::Ptr<_246d16372_Var>>& _1835_s, jule::Ptr<_246d16372_Var> _1844_t) {
	jule::Ptr<_246d16372_Var>* _1917_p = (&(_1844_t.get()._field_Depends[0LL]));;
	jule::Ptr<_246d16372_Var>* _2013_end = (_1917_p + _1844_t.get()._field_Depends.len());;
	{
		auto &expr = _1835_s;
		auto it = expr.begin();
		_iter_begin_21390b72b:;
		if (it != expr.end()) {
			jule::Ptr<_246d16372_Var> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1844_t)) {
						goto _iter_end_21390b72b;
					};
					if ((((*(_1917_p)).get()._field_CppLinked || ((*(_1917_p)).get()._field_Depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_21390b72b:;
			++it;
			goto _iter_begin_21390b72b;
		}
		_iter_end_21390b72b:;
	};
	return false;
}



inline void _2138eb1aa_orderCommon(jule::Slice<jule::Ptr<_246117c3a_Struct>>& _3935_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3935_s;
		auto it = expr.begin();
		_iter_begin_2138ec4ca:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_246117c3a_Struct> _4121_t = *it;
			{
				if ((_4121_t.get()._field_CppLinked || (_4121_t.get()._field_Depends.len() == 0LL))) {
					_3935_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_2138ec4ca:;
			++it;
			_4114_j++;
			goto _iter_begin_2138ec4ca;
		}
		_iter_end_2138ec4ca:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3935_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3935_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_213900214_isCommonOrdered(_3935_s,_3935_s[_5021_k])))) {
						_3935_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_2138eeb2b:;
			}
			_iter_end_2138eeb2b:;;
		}
	_iter_next_2138ec453:;
	}
	_iter_end_2138ec453:;;
}

inline void _2138ebc7c_orderCommon(jule::Slice<jule::Ptr<_246d16372_Var>>& _3935_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3935_s;
		auto it = expr.begin();
		_iter_begin_213905cdb:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_246d16372_Var> _4121_t = *it;
			{
				if ((_4121_t.get()._field_CppLinked || (_4121_t.get()._field_Depends.len() == 0LL))) {
					_3935_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_213905cdb:;
			++it;
			_4114_j++;
			goto _iter_begin_213905cdb;
		}
		_iter_end_213905cdb:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3935_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3935_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_213908a25_isCommonOrdered(_3935_s,_3935_s[_5021_k])))) {
						_3935_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_21390843c:;
			}
			_iter_end_21390843c:;;
		}
	_iter_next_213905c64:;
	}
	_iter_end_213905c64:;;
}



inline void static__2476b546d_orderStructures(jule::Slice<jule::Ptr<_246117c3a_Struct>>& _6136_structs) {
	_2138eb1aa_orderCommon(_6136_structs);
}



inline void static__2476b567c_orderVars(jule::Slice<jule::Ptr<_246d16372_Var>>& _6730_vars) {
	_2138ebc7c_orderCommon(_6730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _2476b4a99_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2477a8165_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _2477de982_optimizeChild(jule::Ptr<_2477de4a9_scopeDeadCode> _self_, jule::Ptr<_246cc1c01_Scope>& _3938_s) {
	jule::Ptr<_2477de4a9_scopeDeadCode> _4017_sdc = jule::new_ptr<_2477de4a9_scopeDeadCode>(_2477de4a9_scopeDeadCode{._field_parent=_self_, ._field_s=_3938_s, ._field_stmts=(&(_3938_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_2477e20c2_optimizeStmts(_4017_sdc);
	};
}



inline void _2477dec29_optimizeBodyChildExceptional(jule::Ptr<_2477de4a9_scopeDeadCode> _self_, jule::Ptr<_246cc1c01_Scope>& _5053_s) {
	jule::Ptr<_2477de4a9_scopeDeadCode> _5117_sdc = jule::new_ptr<_2477de4a9_scopeDeadCode>(_2477de4a9_scopeDeadCode{._field_s=_5053_s, ._field_stmts=(&(_5053_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_2477e20c2_optimizeStmts(_5117_sdc);
	};
}



inline void _2477deeb0_optimizeBodyChild(jule::Ptr<_2477de4a9_scopeDeadCode> _self_, jule::Ptr<_246cc1c01_Scope>& _6142_s) {
	jule::Ptr<_2477de4a9_scopeDeadCode> _6217_sdc = jule::new_ptr<_2477de4a9_scopeDeadCode>(_2477de4a9_scopeDeadCode{._field_s=_6142_s, ._field_stmts=(&(_6142_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_2477e20c2_optimizeStmts(_6217_sdc);
	};
}



inline void _2477e0235_optimizeExprModel(jule::Ptr<_2477de4a9_scopeDeadCode> _self_, jule::Any& _7142_model) {
	_2477e3414_exprDeadCode _7213_edc = static__2477e3a41_new(_self_);;
	_2477e975b_optimize(&_7213_edc, _7142_model);
}



inline void _2477e0411_eliminateFollowed(_2477de4a9_scopeDeadCode* _self_) {
	if (((*((*_self_)._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	};
	jule::Ptr<_2477de4a9_scopeDeadCode> _8317_parent = (*_self_)._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL,(_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_21398120c:;
	}
	_iter_end_21398120c:;;
}



inline void _2477e0686_pushGoto(jule::Ptr<_2477de4a9_scopeDeadCode> _self_, jule::Ptr<_246cc472b_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < (*(_self_.get()._field_labels)).len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_213983ece:;
	}
	_iter_end_213983ece:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_246cc472b_GotoSt>>::make({_9232_gt}));
}



inline void _2477e090b_pushLabel(jule::Ptr<_2477de4a9_scopeDeadCode> _self_, jule::Ptr<_246cc4440_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < (*(_self_.get()._field_gotos)).len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL,((*(_self_.get()._field_gotos)).len() - 1LL));
				goto _iter_next_213985970;
			};
			(_10317_i)++;
		}
	_iter_next_213985970:;
	}
	_iter_end_213985970:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_246cc4440_Label>>::make({_10233_l}));
}



inline void _2477e0b81_optimizeRangeIter(jule::Ptr<_2477de4a9_scopeDeadCode> _self_, jule::Ptr<_246cc38a1_RangeIter> _11541_it) {
	_2477e0235_optimizeExprModel(_self_, _11541_it.get()._field_Expr.get()._field_Model);
	_2477deeb0_optimizeBodyChild(_self_, _11541_it.get()._field_Scope);
}



inline void _2477e0e06_optimizeWhileIter(jule::Ptr<_2477de4a9_scopeDeadCode> _self_, jule::Ptr<_246cc2ebb_WhileIter> _12041_it) {
	_2477e0235_optimizeExprModel(_self_, _12041_it.get()._field_Expr);
	if ((_12041_it.get()._field_Next != nullptr)) {
		_2477e1de6_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_2477deeb0_optimizeBodyChild(_self_, _12041_it.get()._field_Scope);
}



inline void _2477e117b_optimizeInfIter(jule::Ptr<_2477de4a9_scopeDeadCode> _self_, jule::Ptr<_246cc2a48_InfIter> _12839_it) {
	_2477deeb0_optimizeBodyChild(_self_, _12839_it.get()._field_Scope);
}



inline void _2477e1401_optimizeConditional(jule::Ptr<_2477de4a9_scopeDeadCode> _self_, jule::Ptr<_246cc275c_Conditional> _13243_c) {
	{
		auto &expr = _13243_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_21398c35b:;
		if (it != expr.end()) {
			jule::Ptr<_246cc20ec_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_2477e0235_optimizeExprModel(_self_, _13321_case.get()._field_Expr);
					_2477deeb0_optimizeBodyChild(_self_, _13321_case.get()._field_Scope);
				};
			}
			_iter_next_21398c35b:;
			++it;
			goto _iter_begin_21398c35b;
		}
		_iter_end_21398c35b:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_2477de982_optimizeChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		} else {
			_2477deeb0_optimizeBodyChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _2477e1676_optimizeMatch(jule::Ptr<_2477de4a9_scopeDeadCode> _self_, jule::Ptr<_246cc594c_Match> _15037_m) {
	{
		auto &expr = _15037_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_213990282:;
		if (it != expr.end()) {
			jule::Ptr<_246cc6497_Case> _15121_case = *it;
			{
				{
					auto &expr = _15121_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_213990b56:;
					if (it != expr.end()) {
						jule::Ptr<_246d5e398_Data> _15225_expr = *it;
						{
							_2477e0235_optimizeExprModel(_self_, _15225_expr.get()._field_Model);
						}
						_iter_next_213990b56:;
						++it;
						goto _iter_begin_213990b56;
					}
					_iter_end_213990b56:;
				};
				_2477deeb0_optimizeBodyChild(_self_, _15121_case.get()._field_Scope);
			}
			_iter_next_213990282:;
			++it;
			goto _iter_begin_213990282;
		}
		_iter_end_213990282:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_2477de982_optimizeChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		} else {
			_2477deeb0_optimizeBodyChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _2477e18eb_optimizeAssign(jule::Ptr<_2477de4a9_scopeDeadCode> _self_, jule::Ptr<_246cc5056_Assign> _16838_assign) {
	_2477e0235_optimizeExprModel(_self_, _16838_assign.get()._field_L.get()._field_Model);
	_2477e0235_optimizeExprModel(_self_, _16838_assign.get()._field_R.get()._field_Model);
}



inline void _2477e1b71_optimizeMultiAssign(jule::Ptr<_2477de4a9_scopeDeadCode> _self_, jule::Ptr<_246cc540d_MultiAssign> _17343_assign) {
	{
		auto &expr = _17343_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_2139944d9:;
		if (it != expr.end()) {
			jule::Any _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_2477e0235_optimizeExprModel(_self_, _17421_l);
				};
			}
			_iter_next_2139944d9:;
			++it;
			goto _iter_begin_2139944d9;
		}
		_iter_end_2139944d9:;
	};
	_2477e0235_optimizeExprModel(_self_, _17343_assign.get()._field_R);
}



inline void _2477e1de6_optimizeStmt(jule::Ptr<_2477de4a9_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type_is<jule::Ptr<_246cc1c01_Scope>>()) {
			_case_begin_213995bd3:;
			{
				jule::Ptr<_246cc1c01_Scope> _18521_scope = _18236_st.operator jule::Ptr<_246cc1c01_Scope>();;
				if (_18521_scope.get()._field_Deferred) {
					_2477e23ad_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_2477de982_optimizeChild(_self_, _18521_scope);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc38a1_RangeIter>>()) {
			_case_begin_213995d48:;
			{
				_2477e0b81_optimizeRangeIter(_self_, _18236_st.operator jule::Ptr<_246cc38a1_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc2ebb_WhileIter>>()) {
			_case_begin_213995dae:;
			{
				_2477e0e06_optimizeWhileIter(_self_, _18236_st.operator jule::Ptr<_246cc2ebb_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc2a48_InfIter>>()) {
			_case_begin_213995e36:;
			{
				_2477e117b_optimizeInfIter(_self_, _18236_st.operator jule::Ptr<_246cc2a48_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc275c_Conditional>>()) {
			_case_begin_213995ead:;
			{
				_2477e1401_optimizeConditional(_self_, _18236_st.operator jule::Ptr<_246cc275c_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc594c_Match>>()) {
			_case_begin_213996035:;
			{
				_2477e1676_optimizeMatch(_self_, _18236_st.operator jule::Ptr<_246cc594c_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc5056_Assign>>()) {
			_case_begin_2139960ac:;
			{
				_2477e18eb_optimizeAssign(_self_, _18236_st.operator jule::Ptr<_246cc5056_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc540d_MultiAssign>>()) {
			_case_begin_213996134:;
			{
				_2477e1b71_optimizeMultiAssign(_self_, _18236_st.operator jule::Ptr<_246cc540d_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246d5e398_Data>>()) {
			_case_begin_2139961ab:;
			{
				jule::Ptr<_246d5e398_Data> _20621_d = _18236_st.operator jule::Ptr<_246d5e398_Data>();;
				if (_self_.get()._field_except) {
					goto _match_end_213995ce3;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_246caa349_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_246ca905c_BuiltinPanicCallExprModel>>()) {
						_case_begin_21399c404:;
						{
							_2477e0411_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_21399bb40:;
						{
							_2477e0235_optimizeExprModel(_self_, _20621_d.get()._field_Model);
						}
					}
					_match_end_21399bada:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc6ec0_RetSt>>()) {
			_case_begin_213996233:;
			{
				_2477e0411_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc472b_GotoSt>>()) {
			_case_begin_2139962aa:;
			{
				_2477e0686_pushGoto(_self_, _18236_st.operator jule::Ptr<_246cc472b_GotoSt>());
				_2477e0411_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc4440_Label>>()) {
			_case_begin_213996332:;
			{
				_2477e090b_pushLabel(_self_, _18236_st.operator jule::Ptr<_246cc4440_Label>());
			}
		}
		_match_end_213995ce3:;
	};
}



inline void _2477e20c2_optimizeStmts(jule::Ptr<_2477de4a9_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < (*(_self_.get()._field_stmts)).len()); (_self_.get()._field_i)++) {
		{
			_2477e1de6_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_21399e33a:;
	}
	_iter_end_21399e33a:;;
}







std::ostream &operator<<(std::ostream &_Stream, _2477de4a9_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _2477e3414_exprDeadCode static__2477e3a41_new(jule::Ptr<_2477de4a9_scopeDeadCode>& _5024_s) {
	return _2477e3414_exprDeadCode{._field_s=_5024_s};
}



inline void _2477e3cb6_binary(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca5c18_BinopExprModel> _5625_m) {
	_2477e975b_optimize(&(*_self_), _5625_m.get()._field_Left.get()._field_Model);
	_2477e975b_optimize(&(*_self_), _5625_m.get()._field_Right.get()._field_Model);
}



inline void _2477e403b_unary(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca5e05_UnaryExprModel> _6124_m) {
	_2477e975b_optimize(&(*_self_), _6124_m.get()._field_Expr.get()._field_Model);
}



inline void _2477e42b1_structureLit(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca62ce_StructLitExprModel> _6531_m) {
	{
		auto &expr = _6531_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_2139a28b0:;
		if (it != expr.end()) {
			jule::Ptr<_246ca60e2_StructArgExprModel> _6621_arg = *it;
			{
				_2477e975b_optimize(&(*_self_), _6621_arg.get()._field_Expr);
			}
			_iter_next_2139a28b0:;
			++it;
			goto _iter_begin_2139a28b0;
		}
		_iter_end_2139a28b0:;
	};
}



inline void _2477e4536_allocStructure(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca64bb_AllocStructLitExprModel> _7133_m) {
	_2477e42b1_structureLit(&(*_self_), _7133_m.get()._field_Lit);
}



inline void _2477e47ab_casting(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca66a8_CastingExprModel> _7526_m) {
	_2477e975b_optimize(&(*_self_), _7526_m.get()._field_Expr);
}



inline void _2477e4a31_args(_2477e3414_exprDeadCode* _self_, jule::Slice<jule::Any>& _7924_args) {
	{
		auto &expr = _7924_args;
		auto it = expr.begin();
		_iter_begin_2139a4c8b:;
		if (it != expr.end()) {
			jule::Any _8021_arg = *it;
			{
				_2477e975b_optimize(&(*_self_), _8021_arg);
			}
			_iter_next_2139a4c8b:;
			++it;
			goto _iter_begin_2139a4c8b;
		}
		_iter_end_2139a4c8b:;
	};
}



inline void _2477e4ca6_funcCall(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca6895_FnCallExprModel> _8527_m) {
	_2477e975b_optimize(&(*_self_), _8527_m.get()._field_Expr);
	_2477e4a31_args(&(*_self_), _8527_m.get()._field_Args);
	if ((_8527_m.get()._field_Except != nullptr)) {
		_2477dec29_optimizeBodyChildExceptional((*_self_)._field_s, _8527_m.get()._field_Except);
	};
}



inline void _2477e502b_slice(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca6a82_SliceExprModel> _9324_m) {
	_2477e4a31_args(&(*_self_), _9324_m.get()._field_Elems);
}



inline void _2477e52a1_array(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca8006_ArrayExprModel> _9724_m) {
	if (((_9724_m.get()._field_Elems.len() == 2LL) && (_9724_m.get()._field_Elems[1LL] == nullptr))) {
		_2477e975b_optimize(&(*_self_), _9724_m.get()._field_Elems[0LL]);
	};
	_2477e4a31_args(&(*_self_), _9724_m.get()._field_Elems);
}



inline void _2477e5526_indexing(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca6c6e_IndexingExprModel> _10427_m) {
	_2477e975b_optimize(&(*_self_), _10427_m.get()._field_Expr.get()._field_Model);
	_2477e975b_optimize(&(*_self_), _10427_m.get()._field_Index.get()._field_Model);
}



inline void _2477e579b_anonFunc(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca6e5b_AnonFnExprModel> _10927_m) {
	_2477e23ad_eliminateDeadCodeOfScope(_10927_m.get()._field_Func.get()._field_Scope);
}



inline void _2477e5a21_mapExpr(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca7335_MapExprModel> _11326_m) {
	{
		auto &expr = _11326_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_2139ab38b:;
		if (it != expr.end()) {
			jule::Ptr<_246ca7148_KeyValPairExprModel> _11421_pair = *it;
			{
				_2477e975b_optimize(&(*_self_), _11421_pair.get()._field_Key);
				_2477e975b_optimize(&(*_self_), _11421_pair.get()._field_Val);
			}
			_iter_next_2139ab38b:;
			++it;
			goto _iter_begin_2139ab38b;
		}
		_iter_end_2139ab38b:;
	};
}



inline void _2477e5c96_slicing(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca7522_SlicingExprModel> _12026_m) {
	_2477e975b_optimize(&(*_self_), _12026_m.get()._field_Expr);
	_2477e975b_optimize(&(*_self_), _12026_m.get()._field_Left);
	if ((_12026_m.get()._field_Right != nullptr)) {
		_2477e975b_optimize(&(*_self_), _12026_m.get()._field_Right);
	};
}



inline void _2477e601b_traitSub(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca770e_TraitSubIdentExprModel> _12827_m) {
	_2477e975b_optimize(&(*_self_), _12827_m.get()._field_Expr);
}



inline void _2477e6291_structureSub(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca7b2c_StructSubIdentExprModel> _13231_m) {
	_2477e975b_optimize(&(*_self_), _13231_m.get()._field_Expr.get()._field_Model);
}



inline void _2477e6516_commonSub(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca83d0_CommonSubIdentExprModel> _13628_m) {
	_2477e975b_optimize(&(*_self_), _13628_m.get()._field_Expr);
}



inline void _2477e678b_tuple(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca85bc_TupleExprModel> _14024_m) {
	{
		auto &expr = _14024_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_2139b0ca8:;
		if (it != expr.end()) {
			jule::Ptr<_246d5e398_Data> _14121_d = *it;
			{
				_2477e975b_optimize(&(*_self_), _14121_d.get()._field_Model);
			}
			_iter_next_2139b0ca8:;
			++it;
			goto _iter_begin_2139b0ca8;
		}
		_iter_end_2139b0ca8:;
	};
}



inline void _2477e6a11_newCall(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca8d70_BuiltinNewCallExprModel> _14626_m) {
	if ((_14626_m.get()._field_Init != nullptr)) {
		_2477e975b_optimize(&(*_self_), _14626_m.get()._field_Init);
	};
}



inline void _2477e6c86_outCall(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca87a9_BuiltinOutCallExprModel> _15226_m) {
	_2477e975b_optimize(&(*_self_), _15226_m.get()._field_Expr);
}



inline void _2477e700b_outlnCall(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca8996_BuiltinOutlnCallExprModel> _15628_m) {
	_2477e975b_optimize(&(*_self_), _15628_m.get()._field_Expr);
}



inline void _2477e7281_panicCall(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca905c_BuiltinPanicCallExprModel> _16028_m) {
	_2477e975b_optimize(&(*_self_), _16028_m.get()._field_Expr);
}



inline void _2477e7506_assertCall(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca9249_BuiltinAssertCallExprModel> _16429_m) {
	_2477e975b_optimize(&(*_self_), _16429_m.get()._field_Expr);
}



inline void _2477e777b_errorCall(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246caa349_BuiltinErrorCallExprModel> _16828_m) {
	_2477e975b_optimize(&(*_self_), _16828_m.get()._field_Err);
}



inline void _2477e7a01_makeCall(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca9436_BuiltinMakeCallExprModel> _17227_m) {
	if ((_17227_m.get()._field_Len != nullptr)) {
		_2477e975b_optimize(&(*_self_), _17227_m.get()._field_Len);
	};
	if ((_17227_m.get()._field_Cap != nullptr)) {
		_2477e975b_optimize(&(*_self_), _17227_m.get()._field_Cap);
	};
}



inline void _2477e7c76_appendCall(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca9623_BuiltinAppendCallExprModel> _18129_m) {
	_2477e975b_optimize(&(*_self_), _18129_m.get()._field_Dest);
	_2477e975b_optimize(&(*_self_), _18129_m.get()._field_Elements);
}



inline void _2477e7eeb_lenCall(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca9810_BuiltinLenCallExprModel> _18626_m) {
	_2477e975b_optimize(&(*_self_), _18626_m.get()._field_Expr.get()._field_Model);
}



inline void _2477e8271_capCall(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca99ec_BuiltinCapCallExprModel> _19026_m) {
	_2477e975b_optimize(&(*_self_), _19026_m.get()._field_Expr.get()._field_Model);
}



inline void _2477e84e6_cloneCall(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca8b83_BuiltinCloneCallExprModel> _19428_m) {
	_2477e975b_optimize(&(*_self_), _19428_m.get()._field_Expr);
}



inline void _2477e876b_deleteCall(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246ca78eb_BuiltinDeleteCallExprModel> _19829_m) {
	_2477e975b_optimize(&(*_self_), _19829_m.get()._field_Dest.get()._field_Model);
	if ((_19829_m.get()._field_Key != nullptr)) {
		_2477e975b_optimize(&(*_self_), _19829_m.get()._field_Key.get()._field_Model);
	};
}



inline void _2477e89e1_sizeof(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246caa536_SizeofExprModel> _20525_m) {
	_2477e975b_optimize(&(*_self_), _20525_m.get()._field_Expr);
}



inline void _2477e8c66_alignof(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246caa723_AlignofExprModel> _20926_m) {
	_2477e975b_optimize(&(*_self_), _20926_m.get()._field_Expr);
}



inline void _2477e8edb_integratedToStr(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246caaaec_IntegratedToStrExprModel> _21334_m) {
	_2477e975b_optimize(&(*_self_), _21334_m.get()._field_Expr);
}



inline void _2477e9261_free(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246caaec6_FreeExprModel> _21723_m) {
	_2477e975b_optimize(&(*_self_), _21723_m.get()._field_Expr);
}



inline void _2477e94d6_backendEmit(_2477e3414_exprDeadCode* _self_, jule::Ptr<_246caacd9_BackendEmitExprModel> _22130_m) {
	_2477e4a31_args(&(*_self_), _22130_m.get()._field_Exprs);
}



inline void _2477e975b_optimize(_2477e3414_exprDeadCode* _self_, jule::Any& _22528_model) {
	{
		auto &_match_expr{ _22528_model };
		
		if (_match_expr.type_is<jule::Ptr<_246ca5c18_BinopExprModel>>()) {
			_case_begin_2139be2c2:;
			{
				_2477e3cb6_binary(&(*_self_), _22528_model.operator jule::Ptr<_246ca5c18_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca5e05_UnaryExprModel>>()) {
			_case_begin_2139be349:;
			{
				_2477e403b_unary(&(*_self_), _22528_model.operator jule::Ptr<_246ca5e05_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca62ce_StructLitExprModel>>()) {
			_case_begin_2139be3c1:;
			{
				_2477e42b1_structureLit(&(*_self_), _22528_model.operator jule::Ptr<_246ca62ce_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca64bb_AllocStructLitExprModel>>()) {
			_case_begin_2139be789:;
			{
				_2477e4536_allocStructure(&(*_self_), _22528_model.operator jule::Ptr<_246ca64bb_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca66a8_CastingExprModel>>()) {
			_case_begin_2139be811:;
			{
				_2477e47ab_casting(&(*_self_), _22528_model.operator jule::Ptr<_246ca66a8_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca6895_FnCallExprModel>>()) {
			_case_begin_2139be888:;
			{
				_2477e4ca6_funcCall(&(*_self_), _22528_model.operator jule::Ptr<_246ca6895_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca6a82_SliceExprModel>>()) {
			_case_begin_2139be910:;
			{
				_2477e502b_slice(&(*_self_), _22528_model.operator jule::Ptr<_246ca6a82_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca8006_ArrayExprModel>>()) {
			_case_begin_2139be987:;
			{
				_2477e52a1_array(&(*_self_), _22528_model.operator jule::Ptr<_246ca8006_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca6c6e_IndexingExprModel>>()) {
			_case_begin_2139bea0e:;
			{
				_2477e5526_indexing(&(*_self_), _22528_model.operator jule::Ptr<_246ca6c6e_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca6e5b_AnonFnExprModel>>()) {
			_case_begin_2139bea86:;
			{
				_2477e579b_anonFunc(&(*_self_), _22528_model.operator jule::Ptr<_246ca6e5b_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca7335_MapExprModel>>()) {
			_case_begin_2139beb0d:;
			{
				_2477e5a21_mapExpr(&(*_self_), _22528_model.operator jule::Ptr<_246ca7335_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca7522_SlicingExprModel>>()) {
			_case_begin_2139beb85:;
			{
				_2477e5c96_slicing(&(*_self_), _22528_model.operator jule::Ptr<_246ca7522_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca770e_TraitSubIdentExprModel>>()) {
			_case_begin_2139bec0c:;
			{
				_2477e601b_traitSub(&(*_self_), _22528_model.operator jule::Ptr<_246ca770e_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca7b2c_StructSubIdentExprModel>>()) {
			_case_begin_2139bec84:;
			{
				_2477e6291_structureSub(&(*_self_), _22528_model.operator jule::Ptr<_246ca7b2c_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca83d0_CommonSubIdentExprModel>>()) {
			_case_begin_2139bed0b:;
			{
				_2477e6516_commonSub(&(*_self_), _22528_model.operator jule::Ptr<_246ca83d0_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca85bc_TupleExprModel>>()) {
			_case_begin_2139bed83:;
			{
				_2477e678b_tuple(&(*_self_), _22528_model.operator jule::Ptr<_246ca85bc_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca87a9_BuiltinOutCallExprModel>>()) {
			_case_begin_2139bee0a:;
			{
				_2477e6c86_outCall(&(*_self_), _22528_model.operator jule::Ptr<_246ca87a9_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca8996_BuiltinOutlnCallExprModel>>()) {
			_case_begin_2139bee82:;
			{
				_2477e700b_outlnCall(&(*_self_), _22528_model.operator jule::Ptr<_246ca8996_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca8d70_BuiltinNewCallExprModel>>()) {
			_case_begin_2139c0009:;
			{
				_2477e6a11_newCall(&(*_self_), _22528_model.operator jule::Ptr<_246ca8d70_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca905c_BuiltinPanicCallExprModel>>()) {
			_case_begin_2139c0081:;
			{
				_2477e7281_panicCall(&(*_self_), _22528_model.operator jule::Ptr<_246ca905c_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca9249_BuiltinAssertCallExprModel>>()) {
			_case_begin_2139c0108:;
			{
				_2477e7506_assertCall(&(*_self_), _22528_model.operator jule::Ptr<_246ca9249_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246caa349_BuiltinErrorCallExprModel>>()) {
			_case_begin_2139c0180:;
			{
				_2477e777b_errorCall(&(*_self_), _22528_model.operator jule::Ptr<_246caa349_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca9436_BuiltinMakeCallExprModel>>()) {
			_case_begin_2139c0207:;
			{
				_2477e7a01_makeCall(&(*_self_), _22528_model.operator jule::Ptr<_246ca9436_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca9623_BuiltinAppendCallExprModel>>()) {
			_case_begin_2139c027e:;
			{
				_2477e7c76_appendCall(&(*_self_), _22528_model.operator jule::Ptr<_246ca9623_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca9810_BuiltinLenCallExprModel>>()) {
			_case_begin_2139c0306:;
			{
				_2477e7eeb_lenCall(&(*_self_), _22528_model.operator jule::Ptr<_246ca9810_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca99ec_BuiltinCapCallExprModel>>()) {
			_case_begin_2139c037d:;
			{
				_2477e8271_capCall(&(*_self_), _22528_model.operator jule::Ptr<_246ca99ec_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca8b83_BuiltinCloneCallExprModel>>()) {
			_case_begin_2139c0405:;
			{
				_2477e84e6_cloneCall(&(*_self_), _22528_model.operator jule::Ptr<_246ca8b83_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca78eb_BuiltinDeleteCallExprModel>>()) {
			_case_begin_2139c047c:;
			{
				_2477e876b_deleteCall(&(*_self_), _22528_model.operator jule::Ptr<_246ca78eb_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246caa536_SizeofExprModel>>()) {
			_case_begin_2139c0504:;
			{
				_2477e89e1_sizeof(&(*_self_), _22528_model.operator jule::Ptr<_246caa536_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246caa723_AlignofExprModel>>()) {
			_case_begin_2139c057b:;
			{
				_2477e8c66_alignof(&(*_self_), _22528_model.operator jule::Ptr<_246caa723_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246caaaec_IntegratedToStrExprModel>>()) {
			_case_begin_2139c0603:;
			{
				_2477e8edb_integratedToStr(&(*_self_), _22528_model.operator jule::Ptr<_246caaaec_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246caaec6_FreeExprModel>>()) {
			_case_begin_2139c067a:;
			{
				_2477e9261_free(&(*_self_), _22528_model.operator jule::Ptr<_246caaec6_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246caacd9_BackendEmitExprModel>>()) {
			_case_begin_2139c0702:;
			{
				_2477e94d6_backendEmit(&(*_self_), _22528_model.operator jule::Ptr<_246caacd9_BackendEmitExprModel>());
			}
		}
		_match_end_2139be4c0:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2477e3414_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24499b37d_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2454bc9e7_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2458b100b_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _245d606b9_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2449dbc09_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_244ced504_scopeOptimizer> static__2449940ac_new(jule::Ptr<_246cc1c01_Scope> _4523_scope) {
	return jule::new_ptr<_244ced504_scopeOptimizer>(_244ced504_scopeOptimizer{._field_scope=_4523_scope});
}



inline void _2449ae14e_setCurrentStmt(_244ced504_scopeOptimizer* _self_, jule::Any _5137_stmt) {
	(*_self_)._field_scope.get()._field_Stmts[(*_self_)._field_i]=(*(((jule::Any*)((&(_5137_stmt))))));
}



inline void _2449bc06e_optimizeData(_244ced504_scopeOptimizer* _self_, jule::Ptr<_246d5e398_Data> _5535_d) {
	{
		auto &_match_expr{ _5535_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_246ca6895_FnCallExprModel>>()) {
			_case_begin_213a13b96:;
			{
				jule::Ptr<_246ca6895_FnCallExprModel> _5821_m = _5535_d.get()._field_Model.operator jule::Ptr<_246ca6895_FnCallExprModel>();;
				if (_24267eb8a_Production) {
					if (((!(_246cabd2e_IsBuiltin(_5821_m.get()._field_Func.ptr()))) && _244ad59c3_isStdPackage(_5821_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("debug", 5)))) {
						_2449ae14e_setCurrentStmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_213a13987:;
	};
	static__244b133d5_optimize(_5535_d.get()._field_Model);
}



inline void _2449bcc62_optimizeVar(_244ced504_scopeOptimizer* _self_, jule::Ptr<_246d16372_Var> _7034_v) {
	if ((_7034_v.get()._field_Value != nullptr)) {
		static__244b133d5_optimize(_7034_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _2449db18c_optimizeConditional(_244ced504_scopeOptimizer* _self_, jule::Ptr<_246cc275c_Conditional> _7642_c) {
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_213a1700c:;
		if (it != expr.end()) {
			jule::Ptr<_246cc20ec_If> _7721_elif = *it;
			{
				static__244b133d5_optimize(_7721_elif.get()._field_Expr);
				_244ad0803_optimizeChild(&(*_self_), _7721_elif.get()._field_Scope);
			}
			_iter_next_213a1700c:;
			++it;
			goto _iter_begin_213a1700c;
		}
		_iter_end_213a1700c:;
	};
	if ((_7642_c.get()._field_Default != nullptr)) {
		_244ad0803_optimizeChild(&(*_self_), _7642_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_2449dd0e5_Cond))) {
		return;;
	};
	jule::Bool _8917_constCase = false;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_213a19240:;
		if (it != expr.end()) {
			jule::I64 _9214_i = it - expr.begin();
			jule::Ptr<_246cc20ec_If> _9221_elif = *it;
			{
				if ((!(_244ad8652_isConstantValidConditionalCase(_9221_elif)))) {
					goto _iter_next_213a19240;
				};
				_8917_constCase=true;
				_7642_c.get()._field_Elifs=_7642_c.get()._field_Elifs.slice(0LL,_9214_i);
				_7642_c.get()._field_Default=jule::new_ptr<_246cc23d8_Else>(_246cc23d8_Else{._field_Scope=_9221_elif.get()._field_Scope});
				goto _iter_end_213a19240;
			}
			_iter_next_213a19240:;
			++it;
			_9214_i++;
			goto _iter_begin_213a19240;
		}
		_iter_end_213a19240:;
	};
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_246cc20ec_If>* _10917_i = (&(_7642_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_246cc20ec_If>* _11013_end = (&(_7642_c.get()._field_Elifs[(_7642_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_244addb41_isUnreachableConditionalCase((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_213a1c85e:;
	}
	_iter_end_213a1c85e:;;
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_constCase))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_213a1e1ce:;
		if (it != expr.end()) {
			jule::I64 _12913_j = it - expr.begin();
			jule::Ptr<_246cc20ec_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_213a1e1ce:;
			++it;
			_12913_j++;
			goto _iter_begin_213a1e1ce;
		}
		_iter_end_213a1e1ce:;
	};
	if ((_12817_only != -1LL)) {
		_2449ae14e_setCurrentStmt(&(*_self_), jule::Any(_7642_c.get()._field_Elifs[_12817_only].get()._field_Scope));
	};
}



inline void _2449e0d51_buildDefaultConstatTrueCase(_244ced504_scopeOptimizer* _self_, jule::Ptr<_246cc6497_Case> _14550_case, jule::I64& _14568_i, jule::Ptr<_246cc594c_Match>& _14581_m) {
	_14550_case.get()._field_Exprs=nullptr;
	jule::I64 _14713_start = _14568_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14550_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_213a21a94;
			};
			jule::Any &_15322_stmt = _14550_case.get()._field_Scope.get()._field_Stmts[(_14550_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type_is<jule::Ptr<_246cc6a4c_FallSt>>()) {
					_case_begin_213a22468:;
					{
						(_14568_i)++;
						if ((_14568_i >= _14581_m.get()._field_Cases.len())) {
							_15322_stmt=static_cast<jule::Any>(_14581_m.get()._field_Default.get()._field_Scope);
							goto _iter_end_213a21a94;
						};
						_14550_case=_14581_m.get()._field_Cases[_14568_i];
						_15322_stmt=static_cast<jule::Any>(_14550_case.get()._field_Scope);
					}
				}
				else {
					_case_begin_213a23b84:;
					{
						goto _iter_end_213a21a94;
					}
				}
				_match_end_213a23a85:;
			};
		}
	_iter_next_213a21a94:;
	}
	_iter_end_213a21a94:;;
	_14581_m.get()._field_Default=_14581_m.get()._field_Cases[_14713_start];
	_14581_m.get()._field_Cases=_14581_m.get()._field_Cases.slice(0LL,_14713_start);
}



inline void _2449e22e7_optimizeMatch(_244ced504_scopeOptimizer* _self_, jule::Ptr<_246cc594c_Match> _17136_m) {
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_213a25e2d:;
		if (it != expr.end()) {
			jule::Ptr<_246cc6497_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_213a26802:;
					if (it != expr.end()) {
						jule::Ptr<_246d5e398_Data> _17325_expr = *it;
						{
							static__244b133d5_optimize(_17325_expr.get()._field_Model);
						}
						_iter_next_213a26802:;
						++it;
						goto _iter_begin_213a26802;
					}
					_iter_end_213a26802:;
				};
				_244ad0803_optimizeChild(&(*_self_), _17221_case.get()._field_Scope);
			}
			_iter_next_213a25e2d:;
			++it;
			goto _iter_begin_213a25e2d;
		}
		_iter_end_213a25e2d:;
	};
	if ((_17136_m.get()._field_Default != nullptr)) {
		_244ad0803_optimizeChild(&(*_self_), _17136_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_2449dd0e5_Cond))) {
		return;;
	};
	jule::Bool _18617_constCase = false;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_213a2875a:;
		if (it != expr.end()) {
			jule::I64 _18918_i = it - expr.begin();
			jule::Ptr<_246cc6497_Case> _18925_case = *it;
			{
				if ((!(_244adc8dc_isConstantValidMatchCase(_18925_case)))) {
					goto _iter_next_213a2875a;
				};
				_18617_constCase=true;
				_2449e0d51_buildDefaultConstatTrueCase(&(*_self_), _18925_case,_18918_i,_17136_m);
				goto _iter_end_213a2875a;
			}
			_iter_next_213a2875a:;
			++it;
			_18918_i++;
			goto _iter_begin_213a2875a;
		}
		_iter_end_213a2875a:;
	};
	if ((_17136_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_246cc6497_Case>* _20317_i = (&(_17136_m.get()._field_Cases[0LL]));;
	jule::Ptr<_246cc6497_Case>* _20413_end = (&(_17136_m.get()._field_Cases[(_17136_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_244ae6a4a_isUnreachableMatchCase((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_213a2b87e:;
	}
	_iter_end_213a2b87e:;;
	if ((!(_18617_constCase))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_213a2cac2:;
		if (it != expr.end()) {
			jule::I64 _21913_j = it - expr.begin();
			jule::Ptr<_246cc6497_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_213a2cac2:;
			++it;
			_21913_j++;
			goto _iter_begin_213a2cac2;
		}
		_iter_end_213a2cac2:;
	};
	if ((_21817_only != -1LL)) {
		_2449ae14e_setCurrentStmt(&(*_self_), jule::Any(_17136_m.get()._field_Cases[_21817_only].get()._field_Scope));
	};
}



inline void _2449e3370_optimizeRangeIter(_244ced504_scopeOptimizer* _self_, jule::Ptr<_246cc38a1_RangeIter> _23540_it) {
	static__244b133d5_optimize(_23540_it.get()._field_Expr.get()._field_Model);
	_244ad0803_optimizeChild(&(*_self_), _23540_it.get()._field_Scope);
}



inline void _2449e37b0_optimizeWhileIter(_244ced504_scopeOptimizer* _self_, jule::Ptr<_246cc2ebb_WhileIter> _24040_it) {
	static__244b133d5_optimize(_24040_it.get()._field_Expr);
	_244acadd6_optimizeStmt(&(*_self_), _24040_it.get()._field_Next);
	_244ad0803_optimizeChild(&(*_self_), _24040_it.get()._field_Scope);
}



inline jule::Bool _244a26b56_substr(_244ced504_scopeOptimizer* _self_, jule::Ptr<_246cc5056_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_246ca7522_SlicingExprModel>>()) {
			_case_begin_213a32137:;
			{
				jule::Ptr<_246ca7522_SlicingExprModel> _24921_sem = _24629_a.get()._field_R.get()._field_Model.operator jule::Ptr<_246ca7522_SlicingExprModel>();;
				if ((_24921_sem.get()._field_Expr == _24629_a.get()._field_L.get()._field_Model)) {
					_2449ae14e_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_245d606b9_MutSlicingExprModel>(_245d606b9_MutSlicingExprModel{._field_Token=_24921_sem.get()._field_Token, ._field_Expr=_24921_sem.get()._field_Expr, ._field_Left=_24921_sem.get()._field_Left, ._field_Right=_24921_sem.get()._field_Right})));
					return true;
				};
			}
		}
		_match_end_213a320d2:;
	};
	return false;
}



inline jule::Bool _244a27508_strInsert(_244ced504_scopeOptimizer* _self_, jule::Ptr<_246cc5056_Assign> _26332_a) {
	{
		auto &_match_expr{ _26332_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_246ca5c18_BinopExprModel>>()) {
			_case_begin_213a347aa:;
			{
				jule::Ptr<_246ca5c18_BinopExprModel> _26621_m = _26332_a.get()._field_R.get()._field_Model.operator jule::Ptr<_246ca5c18_BinopExprModel>();;
				if ((_26621_m.get()._field_Right.get()._field_Model == _26332_a.get()._field_L.get()._field_Model)) {
					_2449ae14e_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_2449dbc09_StrInsertBeginExprModel>(_2449dbc09_StrInsertBeginExprModel{._field_Dest=_26332_a.get()._field_L.get()._field_Model, ._field_Expr=_26621_m.get()._field_Left.get()._field_Model})));
					return true;
				};
			}
		}
		_match_end_213a344e1:;
	};
	return false;
}



inline jule::Bool _244a3cb5b_strAssign(_244ced504_scopeOptimizer* _self_, jule::Ptr<_246cc5056_Assign> _27832_a) {
	if ((_27832_a.get()._field_Op.get()._field_Kind != jule::Str("=", 1))) {
		return false;
	};
	jule::Ptr<_246d94972_Prim> _28213_lp = _246d920ac_Prim(_27832_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_246d97ba6_IsStr(_28213_lp.ptr()))))) {
		return false;
	};
	{
		
		if (_244a26b56_substr(&(*_self_), _27832_a) || _244a27508_strInsert(&(*_self_), _27832_a)) {
			_case_begin_213a38616:;
			{
				return true;
			}
		}
		_match_end_213a3856c:;
	};
	return false;
}



inline void _244abd071_optimizeAssign(_244ced504_scopeOptimizer* _self_, jule::Ptr<_246cc5056_Assign> _29437_assign) {
	if ((_2449a74ee_Copy && _244a3cb5b_strAssign(&(*_self_), _29437_assign))) {
		return;;
	};
	static__244b133d5_optimize(_29437_assign.get()._field_L.get()._field_Model);
	static__244b133d5_optimize(_29437_assign.get()._field_R.get()._field_Model);
	{
		auto &_match_expr{ _29437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_213a3a849:;
			{
				if ((_2449d10d8_Math && (_246d9350e_Struct(_29437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_29437_assign.get()._field_Op.get()._field_Kind=_29437_assign.get()._field_Op.get()._field_Kind.slice(0LL,(_29437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _30725_model = static_cast<jule::Any>(jule::new_ptr<_246ca5c18_BinopExprModel>(_246ca5c18_BinopExprModel{._field_Left=_29437_assign.get()._field_L, ._field_Right=_29437_assign.get()._field_R, ._field_Op=_29437_assign.get()._field_Op}));;
					static__244b133d5_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type_is<jule::Ptr<_246ca5c18_BinopExprModel>>()) {
							_case_begin_213a3ccd0:;
							{
								_29437_assign.get()._field_R=jule::new_ptr<_246ca5a2b_OperandExprModel>((*(_29437_assign.get()._field_R)));
								_29437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_29437_assign.get()._field_R.get()._field_Model=_30725_model;
								return;;
							}
						}
						_match_end_213a3cbc0:;
					};
					_29437_assign.get()._field_Op.get()._field_Kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_213a3a7e4:;
	};
	if (_2449957b7_Append) {
		{
			auto &_match_expr{ _29437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_246ca9623_BuiltinAppendCallExprModel>>()) {
				_case_begin_213a3ed26:;
				{
					jule::Ptr<_246ca9623_BuiltinAppendCallExprModel> _32825_m = _29437_assign.get()._field_R.get()._field_Model.operator jule::Ptr<_246ca9623_BuiltinAppendCallExprModel>();;
					{
						auto &_match_expr{ _32825_m.get()._field_Elements };
						
						if (_match_expr.type_is<jule::Ptr<_246ca6a82_SliceExprModel>>()) {
							_case_begin_213a40e59:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_Dest };
									
									if (_match_expr.type_is<jule::Ptr<_246d16372_Var>>() || _match_expr.type_is<jule::Ptr<_246ca7b2c_StructSubIdentExprModel>>()) {
										_case_begin_213a417b7:;
										{
											_2449ae14e_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_2458b100b_PushToSliceExprModel>(_2458b100b_PushToSliceExprModel{._field_Dest=_32825_m.get()._field_Dest, ._field_Elems=_32825_m.get()._field_Elements.operator jule::Ptr<_246ca6a82_SliceExprModel>()})));
										}
									}
									_match_end_213a41751:;
								};
							}
						}
						_match_end_213a40c4a:;
					};
				}
			}
			_match_end_213a3b42c:;
		};
	};
}



inline void _244ac6376_optimizeMultiAssign(_244ced504_scopeOptimizer* _self_, jule::Ptr<_246cc540d_MultiAssign> _34442_assign) {
	{
		auto &expr = _34442_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_213a3acbc:;
		if (it != expr.end()) {
			jule::I64 _34514_i = it - expr.begin();
			jule::Any _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__244b133d5_optimize(_34521_l);
					_34442_assign.get()._field_L[_34514_i]=_34521_l;
				};
			}
			_iter_next_213a3acbc:;
			++it;
			_34514_i++;
			goto _iter_begin_213a3acbc;
		}
		_iter_end_213a3acbc:;
	};
	static__244b133d5_optimize(_34442_assign.get()._field_R);
}



inline void _244ac95bb_optimizeRet(_244ced504_scopeOptimizer* _self_, jule::Ptr<_246cc6ec0_RetSt> _35434_r) {
	static__244b133d5_optimize(_35434_r.get()._field_Expr);
}



inline void _244acadd6_optimizeStmt(_244ced504_scopeOptimizer* _self_, jule::Any _35835_stmt) {
	{
		auto &_match_expr{ _35835_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_246cc1c01_Scope>>()) {
			_case_begin_213a445de:;
			{
				_244ad0803_optimizeChild(&(*_self_), _35835_stmt.operator jule::Ptr<_246cc1c01_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246d5e398_Data>>()) {
			_case_begin_213a44655:;
			{
				_2449bc06e_optimizeData(&(*_self_), _35835_stmt.operator jule::Ptr<_246d5e398_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246d16372_Var>>()) {
			_case_begin_213a446bb:;
			{
				_2449bcc62_optimizeVar(&(*_self_), _35835_stmt.operator jule::Ptr<_246d16372_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc275c_Conditional>>()) {
			_case_begin_213a44743:;
			{
				_2449db18c_optimizeConditional(&(*_self_), _35835_stmt.operator jule::Ptr<_246cc275c_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc38a1_RangeIter>>()) {
			_case_begin_213a447ba:;
			{
				_2449e3370_optimizeRangeIter(&(*_self_), _35835_stmt.operator jule::Ptr<_246cc38a1_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc2ebb_WhileIter>>()) {
			_case_begin_213a44842:;
			{
				_2449e37b0_optimizeWhileIter(&(*_self_), _35835_stmt.operator jule::Ptr<_246cc2ebb_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc2a48_InfIter>>()) {
			_case_begin_213a448b9:;
			{
				_244ad0803_optimizeChild(&(*_self_), _35835_stmt.operator jule::Ptr<_246cc2a48_InfIter>().get()._field_Scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc5056_Assign>>()) {
			_case_begin_213a44941:;
			{
				_244abd071_optimizeAssign(&(*_self_), _35835_stmt.operator jule::Ptr<_246cc5056_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc540d_MultiAssign>>()) {
			_case_begin_213a449b8:;
			{
				_244ac6376_optimizeMultiAssign(&(*_self_), _35835_stmt.operator jule::Ptr<_246cc540d_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc594c_Match>>()) {
			_case_begin_213a44a40:;
			{
				_2449e22e7_optimizeMatch(&(*_self_), _35835_stmt.operator jule::Ptr<_246cc594c_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc6ec0_RetSt>>()) {
			_case_begin_213a44ab7:;
			{
				_244ac95bb_optimizeRet(&(*_self_), _35835_stmt.operator jule::Ptr<_246cc6ec0_RetSt>());
			}
		}
		_match_end_213a43016:;
	};
}



inline void _244ad0803_optimizeChild(_244ced504_scopeOptimizer* _self_, jule::Ptr<_246cc1c01_Scope> _38536_child) {
	jule::Ptr<_244ced504_scopeOptimizer> _38617_so = static__2449940ac_new(_38536_child);;
	_244ac60ce_optimize(_38617_so.ptr());
}



inline void _244ac60ce_optimize(_244ced504_scopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_213a4ad76:;
		if (it != expr.end()) {
			jule::I64 _39214_i = it - expr.begin();
			jule::Any _39221_stmt = *it;
			{
				(*_self_)._field_i=_39214_i;
				_244acadd6_optimizeStmt(&(*_self_), _39221_stmt);
			}
			_iter_next_213a4ad76:;
			++it;
			_39214_i++;
			goto _iter_begin_213a4ad76;
		}
		_iter_end_213a4ad76:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _244ced504_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__244b133d5_optimize(jule::Any& _5829_model) {
	if (_2476e4c1c_exprEnabled) {
		jule::Ptr<_24535c1b1_exprOptimizer> _6121_exop = jule::new_ptr<_24535c1b1_exprOptimizer>(_24535c1b1_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&(_5829_model))))});;
		_244ecc76b_do(_6121_exop.ptr());
	};
}



inline jule::Bool _244b16b36_strCond(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca5c18_BinopExprModel> _6826_m) {
	jule::Ptr<_246d94972_Prim> _6913_lp = _246d920ac_Prim(_6826_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6913_lp == nullptr) || (!(_246d97ba6_IsStr(_6913_lp.ptr()))))) {
		return false;
	};
	if (((_6826_m.get()._field_Op.get()._field_Kind != jule::Str("==", 2)) && (_6826_m.get()._field_Op.get()._field_Kind != jule::Str("!=", 2)))) {
		return false;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_2461e4872_Const>>()) {
			_case_begin_213a55c60:;
			{
				std::tie(_6826_m.get()._field_Left,_6826_m.get()._field_Right) = std::make_tuple(_6826_m.get()._field_Right,_6826_m.get()._field_Left);
				goto _julec_label_opt;
			}
		}
		_match_end_213a55c0a:;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_2461e4872_Const>>()) {
			_case_begin_213a57547:;
			{
				goto _match_end_213a56964;
			}
		}
		else {
			_case_begin_213a56db5:;
			{
				return true;
			}
		}
		_match_end_213a56964:;
	};
	_julec_label_opt:;
	jule::Ptr<_2461e4872_Const> _8813_c = _6826_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_2461e4872_Const>();;
	if ((!(_246245de0_ReadStr(_8813_c.ptr()).empty()))) {
		return false;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_213a587bd:;
			{
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_246ca83d0_CommonSubIdentExprModel>(_246ca83d0_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_213a58834:;
			{
				jule::Ptr<_24496dc35_Token> _10021_op = _6826_m.get()._field_Op;;
				_10021_op.get()._field_Kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_246ca5e05_UnaryExprModel>(_246ca5e05_UnaryExprModel{._field_Expr=jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca83d0_CommonSubIdentExprModel>(_246ca83d0_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)})), }), ._field_Op=_10021_op}));
			}
		}
		_match_end_213a58009:;
	};
	return true;
}



inline void _244b174e9_binary(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca5c18_BinopExprModel> _11625_m) {
	static__244b133d5_optimize(_11625_m.get()._field_Left.get()._field_Model);
	static__244b133d5_optimize(_11625_m.get()._field_Right.get()._field_Model);
	{
		auto &_match_expr{ _11625_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_2461e4872_Const>>()) {
			_case_begin_213a54cc5:;
			{
				goto _match_end_213a5c64b;
			}
		}
		else {
			_case_begin_213a5c78e:;
			{
				return;;
			}
		}
		_match_end_213a5c64b:;
	};
	if ((_2449dd0e5_Cond && _244b16b36_strCond(&(*_self_), _11625_m))) {
		return;;
	};
	if ((!(_2449d10d8_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _11625_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_213a5d95a:;
			{
				jule::Bool _13618_ok;;
				jule::U64 _13622_x;;
				std::tie(_13618_ok,_13622_x) = _245192601_checkForBitShiftOpt(_11625_m.get()._field_Left,_11625_m.get()._field_Right);
				if (_13618_ok) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_2461e4872_Const> _13925_c = _11625_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_2461e4872_Const>();;
					_246257462_SetU64(_13925_c.ptr(), _13622_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_213a5d9d2:;
			{
				jule::Bool _14418_ok;;
				jule::U64 _14422_x;;
				std::tie(_14418_ok,_14422_x) = _245192601_checkForBitShiftOpt(_11625_m.get()._field_Left,_11625_m.get()._field_Right);
				if (_14418_ok) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_2461e4872_Const> _14725_c = _11625_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_2461e4872_Const>();;
					_246257462_SetU64(_14725_c.ptr(), _14422_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_213a5da59:;
			{
				jule::Ptr<_2461e4872_Const> _15221_c = _11625_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_2461e4872_Const>();;
				jule::F64 _15317_d = _2462487e9_AsF64(_15221_c.ptr());;
				if ((_15317_d == 2LL)) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_2462496a7_SetI64(_15221_c.ptr(), 1LL);
				};
			}
		}
		_match_end_213a5d77e:;
	};
	jule::Any _15917_model = jule::Any(jule::new_ptr<_24499b37d_UnsafeBinopExprModel>(_24499b37d_UnsafeBinopExprModel{._field_Node=_11625_m}));;
	(*((*_self_)._field_model))=(*(((jule::Any*)((&(_15917_model))))));
}



inline void _244b1e37a_unary(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca5e05_UnaryExprModel> _16324_m) {
	static__244b133d5_optimize(_16324_m.get()._field_Expr.get()._field_Model);
	if ((_2449dc6ee_Ptr && (_16324_m.get()._field_Op.get()._field_Kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16324_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_246ca5e05_UnaryExprModel>>()) {
				_case_begin_213a66424:;
				{
					jule::Ptr<_246ca5e05_UnaryExprModel> _16825_um = _16324_m.get()._field_Expr.get()._field_Model.operator jule::Ptr<_246ca5e05_UnaryExprModel>();;
					if ((_16825_um.get()._field_Op.get()._field_Kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=_16825_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_213a663be:;
		};
	};
}



inline void _244b26c56_structureLit(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca62ce_StructLitExprModel> _17631_m) {
	{
		auto &expr = _17631_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_213a68190:;
		if (it != expr.end()) {
			jule::Ptr<_246ca60e2_StructArgExprModel> _17721_arg = *it;
			{
				static__244b133d5_optimize(_17721_arg.get()._field_Expr);
			}
			_iter_next_213a68190:;
			++it;
			goto _iter_begin_213a68190;
		}
		_iter_end_213a68190:;
	};
}



inline void _244b28450_allocStructure(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca64bb_AllocStructLitExprModel> _18233_m) {
	_244b26c56_structureLit(&(*_self_), _18233_m.get()._field_Lit);
}



inline void _244b358d0_casting(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca66a8_CastingExprModel> _18626_m) {
	static__244b133d5_optimize(_18626_m.get()._field_Expr);
}



inline void _244b4797a_args(_24535c1b1_exprOptimizer* _self_, jule::Slice<jule::Any>& _19024_args) {
	{
		auto &expr = _19024_args;
		auto it = expr.begin();
		_iter_begin_213a69d1d:;
		if (it != expr.end()) {
			jule::I64 _19114_i = it - expr.begin();
			jule::Any _19121_arg = *it;
			{
				static__244b133d5_optimize(_19121_arg);
				_19024_args[_19114_i]=_19121_arg;
			}
			_iter_next_213a69d1d:;
			++it;
			_19114_i++;
			goto _iter_begin_213a69d1d;
		}
		_iter_end_213a69d1d:;
	};
}



inline void _244b7c31c_scope(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246cc1c01_Scope>& _19725_s) {
	jule::Ptr<_244ced504_scopeOptimizer> _19817_scopt = static__2449940ac_new(_19725_s);;
	_244ac60ce_optimize(_19817_scopt.ptr());
}



inline void _244b80d04_funcCall(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca6895_FnCallExprModel> _20227_m) {
	static__244b133d5_optimize(_20227_m.get()._field_Expr);
	_244b4797a_args(&(*_self_), _20227_m.get()._field_Args);
	if ((_20227_m.get()._field_Except != nullptr)) {
		_244b7c31c_scope(&(*_self_), _20227_m.get()._field_Except);
	};
}



inline void _244b8a11b_slice(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca6a82_SliceExprModel> _21024_m) {
	_244b4797a_args(&(*_self_), _21024_m.get()._field_Elems);
}



inline void _244cc5be6_array(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca8006_ArrayExprModel> _21424_m) {
	if (((_21424_m.get()._field_Elems.len() == 2LL) && (_21424_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _21621_elem = _21424_m.get()._field_Elems[0LL];;
		static__244b133d5_optimize(_21621_elem);
		_21424_m.get()._field_Elems[0LL]=_21621_elem;
	};
	_244b4797a_args(&(*_self_), _21424_m.get()._field_Elems);
}



inline void _244cd9c1b_indexing(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca6c6e_IndexingExprModel> _22327_m) {
	static__244b133d5_optimize(_22327_m.get()._field_Expr.get()._field_Model);
	static__244b133d5_optimize(_22327_m.get()._field_Index.get()._field_Model);
	if ((!(_2449d9311_Access))) {
		return;;
	};
	jule::Bool _22913_array = (_246d92cc2_Arr(_22327_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_22913_array && _246d5ec5b_IsConst(_22327_m.get()._field_Index.ptr()))) {
		jule::Any _23221_model = jule::Any(jule::new_ptr<_2454bc9e7_UnsafeIndexingExprModel>(_2454bc9e7_UnsafeIndexingExprModel{._field_Node=_22327_m}));;
		(*((*_self_)._field_model))=(*(((jule::Any*)((&(_23221_model))))));
		return;;
	};
	{
		auto &_match_expr{ _22327_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_246d16372_Var>>()) {
			_case_begin_213a741ac:;
			{
				jule::Ptr<_246d16372_Var> _23817_i = _22327_m.get()._field_Index.get()._field_Model.operator jule::Ptr<_246d16372_Var>();;
				if ((_23817_i.get()._field_Mutable || (_23817_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_213a74157;
				};
				{
					auto &_match_expr{ _22327_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_246d16372_Var>>()) {
						_case_begin_213a75ab5:;
						{
							jule::Ptr<_246d16372_Var> _24421_r = _22327_m.get()._field_Expr.get()._field_Model.operator jule::Ptr<_246d16372_Var>();;
							if ((_23817_i.get()._field_IterRelation.get()._field_Range == _24421_r)) {
								jule::Any _24729_model = jule::Any(jule::new_ptr<_2454bc9e7_UnsafeIndexingExprModel>(_2454bc9e7_UnsafeIndexingExprModel{._field_Node=_22327_m}));;
								(*((*_self_)._field_model))=(*(((jule::Any*)((&(_24729_model))))));
							};
						}
					}
					_match_end_213a75a60:;
				};
			}
		}
		_match_end_213a74157:;
	};
}



inline void _244ce3e01_anonFunc(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca6e5b_AnonFnExprModel> _25427_m) {
	_244b7c31c_scope(&(*_self_), _25427_m.get()._field_Func.get()._field_Scope);
}



inline void _244ce9d80_mapExpr(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca7335_MapExprModel> _25826_m) {
	{
		auto &expr = _25826_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_213a78425:;
		if (it != expr.end()) {
			jule::Ptr<_246ca7148_KeyValPairExprModel> _25921_pair = *it;
			{
				static__244b133d5_optimize(_25921_pair.get()._field_Key);
				static__244b133d5_optimize(_25921_pair.get()._field_Val);
			}
			_iter_next_213a78425:;
			++it;
			goto _iter_begin_213a78425;
		}
		_iter_end_213a78425:;
	};
}



inline void _244ceae08_slicing(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca7522_SlicingExprModel> _26526_m) {
	static__244b133d5_optimize(_26526_m.get()._field_Expr);
	static__244b133d5_optimize(_26526_m.get()._field_Left);
	if ((_26526_m.get()._field_Right != nullptr)) {
		static__244b133d5_optimize(_26526_m.get()._field_Right);
	};
}



inline void _244cd9655_traitSub(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca770e_TraitSubIdentExprModel> _27327_m) {
	static__244b133d5_optimize(_27327_m.get()._field_Expr);
}



inline void _244ceeca8_structureSub(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca7b2c_StructSubIdentExprModel> _27731_m) {
	static__244b133d5_optimize(_27731_m.get()._field_Expr.get()._field_Model);
}



inline void _244d12051_commonSub(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca83d0_CommonSubIdentExprModel> _28128_m) {
	static__244b133d5_optimize(_28128_m.get()._field_Expr);
}



inline void _244d16b5a_tuple(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca85bc_TupleExprModel> _28524_m) {
	{
		auto &expr = _28524_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_213a7bd30:;
		if (it != expr.end()) {
			jule::Ptr<_246d5e398_Data> _28621_d = *it;
			{
				static__244b133d5_optimize(_28621_d.get()._field_Model);
			}
			_iter_next_213a7bd30:;
			++it;
			goto _iter_begin_213a7bd30;
		}
		_iter_end_213a7bd30:;
	};
}



inline void _244d1c29d_newCall(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca8d70_BuiltinNewCallExprModel> _29126_m) {
	if ((_29126_m.get()._field_Init != nullptr)) {
		static__244b133d5_optimize(_29126_m.get()._field_Init);
	};
}



inline void _244d1d6ab_outCall(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca87a9_BuiltinOutCallExprModel> _29726_m) {
	static__244b133d5_optimize(_29726_m.get()._field_Expr);
}



inline void _244d1e965_outlnCall(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca8996_BuiltinOutlnCallExprModel> _30128_m) {
	static__244b133d5_optimize(_30128_m.get()._field_Expr);
}



inline void _244d21208_panicCall(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca905c_BuiltinPanicCallExprModel> _30528_m) {
	static__244b133d5_optimize(_30528_m.get()._field_Expr);
}



inline void _244d24c45_assertCall(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca9249_BuiltinAssertCallExprModel> _30929_m) {
	static__244b133d5_optimize(_30929_m.get()._field_Expr);
}



inline void _244d31a98_errorCall(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246caa349_BuiltinErrorCallExprModel> _31328_m) {
	static__244b133d5_optimize(_31328_m.get()._field_Err);
}



inline void _244d3d4cd_makeCall(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca9436_BuiltinMakeCallExprModel> _31727_m) {
	if ((_31727_m.get()._field_Len != nullptr)) {
		static__244b133d5_optimize(_31727_m.get()._field_Len);
	};
	if ((_31727_m.get()._field_Cap != nullptr)) {
		static__244b133d5_optimize(_31727_m.get()._field_Cap);
	};
}



inline void _244d4388a_appendCall(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca9623_BuiltinAppendCallExprModel> _32629_m) {
	static__244b133d5_optimize(_32629_m.get()._field_Dest);
	static__244b133d5_optimize(_32629_m.get()._field_Elements);
}



inline void _244d64955_lenCall(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca9810_BuiltinLenCallExprModel> _33126_m) {
	static__244b133d5_optimize(_33126_m.get()._field_Expr.get()._field_Model);
}



inline void _244d6743b_capCall(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca99ec_BuiltinCapCallExprModel> _33526_m) {
	static__244b133d5_optimize(_33526_m.get()._field_Expr.get()._field_Model);
}



inline void _244d6ba4a_cloneCall(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca8b83_BuiltinCloneCallExprModel> _33928_m) {
	static__244b133d5_optimize(_33928_m.get()._field_Expr);
}



inline void _244d79b68_deleteCall(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246ca78eb_BuiltinDeleteCallExprModel> _34329_m) {
	static__244b133d5_optimize(_34329_m.get()._field_Dest.get()._field_Model);
	if ((_34329_m.get()._field_Key != nullptr)) {
		static__244b133d5_optimize(_34329_m.get()._field_Key.get()._field_Model);
	};
}



inline void _244d8d077_sizeof(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246caa536_SizeofExprModel> _35025_m) {
	static__244b133d5_optimize(_35025_m.get()._field_Expr);
}



inline void _244dc62be_alignof(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246caa723_AlignofExprModel> _35426_m) {
	static__244b133d5_optimize(_35426_m.get()._field_Expr);
}



inline void _244e20192_integratedToStr(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246caaaec_IntegratedToStrExprModel> _35834_m) {
	static__244b133d5_optimize(_35834_m.get()._field_Expr);
}



inline void _244ec2c17_free(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246caaec6_FreeExprModel> _36223_m) {
	static__244b133d5_optimize(_36223_m.get()._field_Expr);
}



inline void _244ec5bc6_backendEmit(_24535c1b1_exprOptimizer* _self_, jule::Ptr<_246caacd9_BackendEmitExprModel> _36630_m) {
	_244b4797a_args(&(*_self_), _36630_m.get()._field_Exprs);
}



inline void _244ecc76b_do(_24535c1b1_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_246ca5c18_BinopExprModel>>()) {
			_case_begin_213a86ce6:;
			{
				_244b174e9_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca5c18_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca5e05_UnaryExprModel>>()) {
			_case_begin_213a86d5c:;
			{
				_244b1e37a_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca5e05_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca62ce_StructLitExprModel>>()) {
			_case_begin_213a86dc3:;
			{
				_244b26c56_structureLit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca62ce_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca64bb_AllocStructLitExprModel>>()) {
			_case_begin_213a86e39:;
			{
				_244b28450_allocStructure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca64bb_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca66a8_CastingExprModel>>()) {
			_case_begin_213a86ea0:;
			{
				_244b358d0_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca66a8_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca6895_FnCallExprModel>>()) {
			_case_begin_213a87016:;
			{
				_244b80d04_funcCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca6895_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca6a82_SliceExprModel>>()) {
			_case_begin_213a8707c:;
			{
				_244b8a11b_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca6a82_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca8006_ArrayExprModel>>()) {
			_case_begin_213a87104:;
			{
				_244cc5be6_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca8006_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca6c6e_IndexingExprModel>>()) {
			_case_begin_213a8717b:;
			{
				_244cd9c1b_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca6c6e_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca6e5b_AnonFnExprModel>>()) {
			_case_begin_213a87203:;
			{
				_244ce3e01_anonFunc(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca6e5b_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca7335_MapExprModel>>()) {
			_case_begin_213a8727a:;
			{
				_244ce9d80_mapExpr(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca7335_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca7522_SlicingExprModel>>()) {
			_case_begin_213a87302:;
			{
				_244ceae08_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca7522_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca770e_TraitSubIdentExprModel>>()) {
			_case_begin_213a87379:;
			{
				_244cd9655_traitSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca770e_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca7b2c_StructSubIdentExprModel>>()) {
			_case_begin_213a87401:;
			{
				_244ceeca8_structureSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca7b2c_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca83d0_CommonSubIdentExprModel>>()) {
			_case_begin_213a87478:;
			{
				_244d12051_commonSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca83d0_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca85bc_TupleExprModel>>()) {
			_case_begin_213a87500:;
			{
				_244d16b5a_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca85bc_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca87a9_BuiltinOutCallExprModel>>()) {
			_case_begin_213a87577:;
			{
				_244d1d6ab_outCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca87a9_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca8996_BuiltinOutlnCallExprModel>>()) {
			_case_begin_213a875ee:;
			{
				_244d1e965_outlnCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca8996_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca8d70_BuiltinNewCallExprModel>>()) {
			_case_begin_213a87676:;
			{
				_244d1c29d_newCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca8d70_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca905c_BuiltinPanicCallExprModel>>()) {
			_case_begin_213a876ed:;
			{
				_244d21208_panicCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca905c_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca9249_BuiltinAssertCallExprModel>>()) {
			_case_begin_213a87775:;
			{
				_244d24c45_assertCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca9249_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246caa349_BuiltinErrorCallExprModel>>()) {
			_case_begin_213a877ec:;
			{
				_244d31a98_errorCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246caa349_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca9436_BuiltinMakeCallExprModel>>()) {
			_case_begin_213a87874:;
			{
				_244d3d4cd_makeCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca9436_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca9623_BuiltinAppendCallExprModel>>()) {
			_case_begin_213a878eb:;
			{
				_244d4388a_appendCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca9623_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca9810_BuiltinLenCallExprModel>>()) {
			_case_begin_213a87973:;
			{
				_244d64955_lenCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca9810_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca99ec_BuiltinCapCallExprModel>>()) {
			_case_begin_213a879ea:;
			{
				_244d6743b_capCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca99ec_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca8b83_BuiltinCloneCallExprModel>>()) {
			_case_begin_213a87a72:;
			{
				_244d6ba4a_cloneCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca8b83_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca78eb_BuiltinDeleteCallExprModel>>()) {
			_case_begin_213a87ae9:;
			{
				_244d79b68_deleteCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246ca78eb_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246caa536_SizeofExprModel>>()) {
			_case_begin_213a87b71:;
			{
				_244d8d077_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246caa536_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246caa723_AlignofExprModel>>()) {
			_case_begin_213a87be8:;
			{
				_244dc62be_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246caa723_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246caaaec_IntegratedToStrExprModel>>()) {
			_case_begin_213a87c70:;
			{
				_244e20192_integratedToStr(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246caaaec_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246caaec6_FreeExprModel>>()) {
			_case_begin_213a87ce7:;
			{
				_244ec2c17_free(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246caaec6_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246caacd9_BackendEmitExprModel>>()) {
			_case_begin_213a87d6e:;
			{
				_244ec5bc6_backendEmit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_246caacd9_BackendEmitExprModel>());
			}
		}
		_match_end_213a869d8:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _24535c1b1_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2477b3835_Optimizer> static__2477132ac_New(jule::Ptr<_2476b22e4_IR>& _2524_ir) {
	return jule::new_ptr<_2477b3835_Optimizer>(_2477b3835_Optimizer{._field_ir=_2524_ir});
}



inline void _247713ba3_optimizeGlobal(_2477b3835_Optimizer* _self_, jule::Ptr<_246d16372_Var>& _3138_v) {
	if ((!(_3138_v.get()._field_CppLinked))) {
		static__244b133d5_optimize(_3138_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _247722310_optimizeFunction(_2477b3835_Optimizer* _self_, jule::Ptr<_246cab768_Fn>& _3740_func) {
	if (_3740_func.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _3740_func.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_213aa1a58:;
		if (it != expr.end()) {
			jule::Ptr<_246cabb42_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_244ced504_scopeOptimizer> _4221_so = static__2449940ac_new(_4121_ins.get()._field_Scope);;
				_244ac60ce_optimize(_4221_so.ptr());
			}
			_iter_next_213aa1a58:;
			++it;
			goto _iter_begin_213aa1a58;
		}
		_iter_end_213aa1a58:;
	};
}



inline void _2476e5415_optimizeStruct(_2477b3835_Optimizer* _self_, jule::Ptr<_246117c3a_Struct>& _4738_s) {
	if (_4738_s.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _4738_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_213aa2dbc:;
		if (it != expr.end()) {
			jule::Ptr<_246142319_StructIns> _5121_ins = *it;
			{
				{
					auto &expr = _5121_ins.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_213aa3708:;
					if (it != expr.end()) {
						jule::Ptr<_24611d977_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__244b133d5_optimize(_5225_f.get()._field_Default.get()._field_Model);
							};
						}
						_iter_next_213aa3708:;
						++it;
						goto _iter_begin_213aa3708;
					}
					_iter_end_213aa3708:;
				};
				{
					auto &expr = _5121_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_213aa4a8e:;
					if (it != expr.end()) {
						jule::Ptr<_246cab768_Fn> _5725_m = *it;
						{
							_247722310_optimizeFunction(&(*_self_), _5725_m);
						}
						_iter_next_213aa4a8e:;
						++it;
						goto _iter_begin_213aa4a8e;
					}
					_iter_end_213aa4a8e:;
				};
			}
			_iter_next_213aa2dbc:;
			++it;
			goto _iter_begin_213aa2dbc;
		}
		_iter_end_213aa2dbc:;
	};
}



inline void _247751482_optimizeGlobals(_2477b3835_Optimizer* _self_, jule::Ptr<_246ce342b_Package>& _6339_p) {
	{
		auto &expr = _6339_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_213aa4d25:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _6421_f = *it;
			{
				{
					auto &expr = _6421_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_213aa5ae5:;
					if (it != expr.end()) {
						jule::Ptr<_246d16372_Var> _6525_v = *it;
						{
							_247713ba3_optimizeGlobal(&(*_self_), _6525_v);
						}
						_iter_next_213aa5ae5:;
						++it;
						goto _iter_begin_213aa5ae5;
					}
					_iter_end_213aa5ae5:;
				};
			}
			_iter_next_213aa4d25:;
			++it;
			goto _iter_begin_213aa4d25;
		}
		_iter_end_213aa4d25:;
	};
}



inline void _247751839_optimizeFunctions(_2477b3835_Optimizer* _self_, jule::Ptr<_246ce342b_Package>& _7141_p) {
	{
		auto &expr = _7141_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_213aa6266:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _7221_f = *it;
			{
				{
					auto &expr = _7221_f.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_213aa7047:;
					if (it != expr.end()) {
						jule::Ptr<_246cab768_Fn> _7325_func = *it;
						{
							_247722310_optimizeFunction(&(*_self_), _7325_func);
						}
						_iter_next_213aa7047:;
						++it;
						goto _iter_begin_213aa7047;
					}
					_iter_end_213aa7047:;
				};
			}
			_iter_next_213aa6266:;
			++it;
			goto _iter_begin_213aa6266;
		}
		_iter_end_213aa6266:;
	};
}



inline void _2477532b9_optimizeStructs(_2477b3835_Optimizer* _self_, jule::Ptr<_246ce342b_Package>& _7939_p) {
	{
		auto &expr = _7939_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_213aa76b8:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_213aa8499:;
					if (it != expr.end()) {
						jule::Ptr<_246117c3a_Struct> _8125_s = *it;
						{
							_2476e5415_optimizeStruct(&(*_self_), _8125_s);
						}
						_iter_next_213aa8499:;
						++it;
						goto _iter_begin_213aa8499;
					}
					_iter_end_213aa8499:;
				};
			}
			_iter_next_213aa76b8:;
			++it;
			goto _iter_begin_213aa76b8;
		}
		_iter_end_213aa76b8:;
	};
}



inline void _2477595cd_optimizePackage(_2477b3835_Optimizer* _self_, jule::Ptr<_246ce342b_Package>& _8739_p) {
	_247751482_optimizeGlobals(&(*_self_), _8739_p);
	_247751839_optimizeFunctions(&(*_self_), _8739_p);
	_2477532b9_optimizeStructs(&(*_self_), _8739_p);
}



inline void _247760e53_Optimize(_2477b3835_Optimizer* _self_) {
	_247769302_detectEnabled();
	if (_2449aba31_Deadcode) {
		_2477dd08a_EliminateDefines((*_self_)._field_ir);
	};
	if ((_2476e5d72_scopeEnabled || _2476e4c1c_exprEnabled)) {
		{
			auto &expr = (*_self_)._field_ir.get()._field_Used;
			auto it = expr.begin();
			_iter_begin_213aaa06c:;
			if (it != expr.end()) {
				jule::Ptr<_246ce04c2_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_CppLinked))) {
						_2477595cd_optimizePackage(&(*_self_), _10325_u.get()._field_Package);
					};
				}
				_iter_next_213aaa06c:;
				++it;
				goto _iter_begin_213aaa06c;
			}
			_iter_end_213aaa06c:;
		};
		_2477595cd_optimizePackage(&(*_self_), (*_self_)._field_ir.get()._field_Main);
	};
	if (_2449aba31_Deadcode) {
		_2477e2d3c_EliminateScopes((*_self_)._field_ir);
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2477b3835_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__24780c8e5_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__24780dbb0_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__24780c8e5_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _24780d9c3_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__247810365_LogFlat(_244640d69_Log& _1424_l) {
	jule::outln(_1424_l._field_Text);
}



inline void static__247810574_LogError(_244640d69_Log& _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1925_l._field_Text);
	static__24780c8e5_Reset();
	if ((_1925_l._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1925_l._field_Path);
	};
	if (((_1925_l._field_Row != 0LL) && (_1925_l._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_246ca2011_Itoa(_1925_l._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_246ca2011_Itoa(_1925_l._field_Column));
	};
	if ((_1925_l._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _2445bac8e_TrimLeft(_1925_l._field_Line,jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = ((_1925_l._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_2445bac8e_TrimLeft(_3621_line,jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _246ca2011_Itoa(_1925_l._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_24459aab5_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_24459aab5_Repeat(jule::Str(" ", 1),static_cast<jule::I64>((_1925_l._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1925_l._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_24459aab5_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__24780dbb0_Print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1925_l._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__247810783_Log(_244640d69_Log& _6520_l) {
	{
		auto &_match_expr{ _6520_l._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_213abbb2d:;
			{
				static__247810365_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_213abbb94:;
			{
				static__247810574_LogError(_6520_l);
			}
		}
		_match_end_213abb6bb:;
	};
}



inline void static__247810992_PrintLogs(jule::Slice<_244640d69_Log>& _7526_logs) {
	{
		auto &expr = _7526_logs;
		auto it = expr.begin();
		_iter_begin_213ab0e30:;
		if (it != expr.end()) {
			_244640d69_Log &_7616_l = *it;
			{
				static__247810783_Log(_7616_l);
			}
			_iter_next_213ab0e30:;
			++it;
			goto _iter_begin_213ab0e30;
		}
		_iter_end_213ab0e30:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_246ca2011_Itoa(static_cast<jule::I64>(_7526_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _2478100ac_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _211339da4_Unix(_2113399ec_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _21133c439_unixYearToSeconds(_5717_y,_5617_leap);;
	_6817_t+=_21133c7be_unixMonthToSeconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_Hour);
	_6817_t+=(60LLU * (*_self_)._field_Minute);
	_6817_t+=(*_self_)._field_Second;
	return _6817_t;
}







std::ostream &operator<<(std::ostream &_Stream, _2113399ec_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _21133a190_Time static__21133a536_Unix(jule::U64 _9120_sec) {
	return _21133a190_Time{._field_sec=_9120_sec};
}



inline _21133a190_Time static__21133a734_Now(void) {
	return static__21133a536_Unix(static_cast<jule::U64>(_21133c12b_unix()));
}



inline jule::U64 _21133ab85_Unix(_21133a190_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _21133ade9_Day(_21133a190_Time* _self_) {
	return _21133bd73_Abs(&(*_self_))._field_Day;
}



inline jule::U64 _21133b15d_Month(_21133a190_Time* _self_) {
	return _21133bd73_Abs(&(*_self_))._field_Month;
}



inline jule::U64 _21133b3c2_Year(_21133a190_Time* _self_) {
	return _21133bd73_Abs(&(*_self_))._field_Year;
}



inline jule::U64 _21133b636_Second(_21133a190_Time* _self_) {
	return _21133bd73_Abs(&(*_self_))._field_Second;
}



inline jule::U64 _21133b89a_Minute(_21133a190_Time* _self_) {
	return _21133bd73_Abs(&(*_self_))._field_Minute;
}



inline jule::U64 _21133bb0e_Hour(_21133a190_Time* _self_) {
	return _21133bd73_Abs(&(*_self_))._field_Hour;
}



inline _2113399ec_AbsTime _21133bd73_Abs(_21133a190_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_211339090_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_211339090_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_213b00a96:;
	}
	_iter_end_213b00a96:;;
	_2113399ec_AbsTime _17417_t = _2113399ec_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;
}







std::ostream &operator<<(std::ostream &_Stream, _21133a190_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_210674871_scopeCoder> static__210674c8e_new(jule::Ptr<_2113423d9_ObjectCoder>& _5524_oc) {
	return jule::new_ptr<_210674871_scopeCoder>(_210674871_scopeCoder{._field_oc=_5524_oc});
}



inline void _210674e15_rangeIndexIter(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc38a1_RangeIter>& _6139_it) {
	jule::Str _6213_begin = static__2112a2558_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it)));;
	jule::Str _6313_next = static__2112a2a97_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it)));;
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_211319ba8_addIndent(_self_.get()._field_oc);
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_2449a74ee_Copy && _210679d4e_isCopyOptimizable(_6139_it.get()._field_Expr))) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_21129895b_model(_self_.get()._field_oc.get()._field_ec, _6139_it.get()._field_Expr.get()._field_Model);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, _6213_begin);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_211319ba8_addIndent(_self_.get()._field_oc);
	_2112a75d5_indent(_self_.get()._field_oc);
	if ((_6139_it.get()._field_KeyA != nullptr)) {
		_211343a39_varInitExpr(_self_.get()._field_oc, _6139_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_2112a75d5_indent(_self_.get()._field_oc);
	};
	if ((_6139_it.get()._field_KeyB != nullptr)) {
		if (_2449a74ee_Copy) {
			_6139_it.get()._field_KeyB.get()._field_Reference=_21067a1d4_isIterCopyOptimizable(_6139_it.get()._field_Expr,_6139_it.get()._field_KeyB);
		};
		_211343a39_varInitExpr(_self_.get()._field_oc, _6139_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_2112a75d5_indent(_self_.get()._field_oc);
	};
	_210679777_scope(_self_, _6139_it.get()._field_Scope);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, _6313_next);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_2112a75d5_indent(_self_.get()._field_oc);
	if ((_6139_it.get()._field_KeyA != nullptr)) {
		_2112d6c0d_write(_self_.get()._field_oc, static__2112a22b1_var(_6139_it.get()._field_KeyA));
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_2112a75d5_indent(_self_.get()._field_oc);
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_2112d6c0d_write(_self_.get()._field_oc, _6213_begin);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_21131a58d_doneIndent(_self_.get()._field_oc);
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, static__2112a2800_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it))));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_21131a58d_doneIndent(_self_.get()._field_oc);
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _21067518a_rangeHashmapIter(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc38a1_RangeIter>& _12941_it) {
	jule::Str _13013_begin = static__2112a2558_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it)));;
	jule::Str _13113_next = static__2112a2a97_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it)));;
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_211319ba8_addIndent(_self_.get()._field_oc);
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_2449a74ee_Copy && _210679d4e_isCopyOptimizable(_12941_it.get()._field_Expr))) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_21129895b_model(_self_.get()._field_oc.get()._field_ec, _12941_it.get()._field_Expr.get()._field_Model);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, _13013_begin);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_211319ba8_addIndent(_self_.get()._field_oc);
	_2112a75d5_indent(_self_.get()._field_oc);
	if ((_12941_it.get()._field_KeyA != nullptr)) {
		if (_2449a74ee_Copy) {
			_12941_it.get()._field_KeyA.get()._field_Reference=_21067a1d4_isIterCopyOptimizable(_12941_it.get()._field_Expr,_12941_it.get()._field_KeyA);
		};
		_211343a39_varInitExpr(_self_.get()._field_oc, _12941_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_2112a75d5_indent(_self_.get()._field_oc);
	};
	if ((_12941_it.get()._field_KeyB != nullptr)) {
		if (_2449a74ee_Copy) {
			_12941_it.get()._field_KeyB.get()._field_Reference=_21067a1d4_isIterCopyOptimizable(_12941_it.get()._field_Expr,_12941_it.get()._field_KeyB);
		};
		_211343a39_varInitExpr(_self_.get()._field_oc, _12941_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_2112a75d5_indent(_self_.get()._field_oc);
	};
	_210679777_scope(_self_, _12941_it.get()._field_Scope);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, _13113_next);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_2112d6c0d_write(_self_.get()._field_oc, _13013_begin);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_21131a58d_doneIndent(_self_.get()._field_oc);
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, static__2112a2800_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it))));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_21131a58d_doneIndent(_self_.get()._field_oc);
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _210675410_ifCase(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc20ec_If> _19530_i) {
	if ((_19530_i.get()._field_Expr != nullptr)) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_211298bd1_expr(_self_.get()._field_oc.get()._field_ec, _19530_i.get()._field_Expr);
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_210679777_scope(_self_, _19530_i.get()._field_Scope);
}



inline void _210675685_conditional(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc275c_Conditional> _20435_c) {
	jule::Bool _20517_writed = false;;
	{
		auto &expr = _20435_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_213bb70e1:;
		if (it != expr.end()) {
			jule::Ptr<_246cc20ec_If> _20621_elif = *it;
			{
				if ((_20621_elif == nullptr)) {
					goto _iter_next_213bb70e1;
				};
				if (_20517_writed) {
					_2112d6c0d_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_20517_writed=true;
				_210675410_ifCase(_self_, _20621_elif);
			}
			_iter_next_213bb70e1:;
			++it;
			goto _iter_begin_213bb70e1;
		}
		_iter_end_213bb70e1:;
	};
	if ((_20435_c.get()._field_Default != nullptr)) {
		if (_20517_writed) {
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_210679777_scope(_self_, _20435_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _21067590a_infIter(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc2a48_InfIter> _22431_it) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_211319ba8_addIndent(_self_.get()._field_oc);
	_2112a75d5_indent(_self_.get()._field_oc);
	_210679777_scope(_self_, _22431_it.get()._field_Scope);
	_21131a58d_doneIndent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, static__2112a2a97_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22431_it))));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, static__2112a2800_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22431_it))));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _210675b80_whileIter(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc2ebb_WhileIter> _24133_it) {
	if (((_24133_it.get()._field_Expr != nullptr) && (_24133_it.get()._field_Next == nullptr))) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_211298bd1_expr(_self_.get()._field_oc.get()._field_ec, _24133_it.get()._field_Expr);
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_24133_it.get()._field_Expr != nullptr)) {
			_211298bd1_expr(_self_.get()._field_oc.get()._field_ec, _24133_it.get()._field_Expr);
		};
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_24133_it.get()._field_Next != nullptr)) {
			_21067927c_st(_self_, _24133_it.get()._field_Next);
		};
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_211319ba8_addIndent(_self_.get()._field_oc);
	_2112a75d5_indent(_self_.get()._field_oc);
	_210679777_scope(_self_, _24133_it.get()._field_Scope);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_21131a58d_doneIndent(_self_.get()._field_oc);
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, static__2112a2a97_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24133_it))));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, static__2112a2800_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24133_it))));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _210675e05_rangeIter(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc38a1_RangeIter> _27433_it) {
	{
		
		if ((_246d93036_Slc(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_213bc89e8:;
			{
				_210674e15_rangeIndexIter(_self_, _27433_it);
			}
		}
		else if ((_246d92cc2_Arr(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_213bc86b8:;
			{
				_210674e15_rangeIndexIter(_self_, _27433_it);
			}
		}
		else if ((_246d939d7_Map(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_213bc872e:;
			{
				_21067518a_rangeHashmapIter(_self_, _27433_it);
			}
		}
		else {
			_case_begin_213bc8652:;
			{
				_210674e15_rangeIndexIter(_self_, _27433_it);
			}
		}
		_match_end_213bc8575:;
	};
}



inline void _21067617a_cont(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc3c9c_ContSt> _28724_c) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_2112d6c0d_write(_self_.get()._field_oc, static__2112a2a97_iterNext(_28724_c.get()._field_It));
}



inline void _210676400_label(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc4440_Label> _29225_l) {
	_2112d6c0d_write(_self_.get()._field_oc, static__2112a2d3e_label(_29225_l.get()._field_Ident));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _210676675_gotoSt(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc472b_GotoSt> _29726_gt) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_2112d6c0d_write(_self_.get()._field_oc, static__2112a2d3e_label(_29726_gt.get()._field_Ident));
}



inline void _2106768ea_postfix(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc4ad3_Postfix> _30231_p) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(", 1));
	_211298bd1_expr(_self_.get()._field_oc.get()._field_ec, _30231_p.get()._field_Expr);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
	_2112d6c0d_write(_self_.get()._field_oc, _30231_p.get()._field_Op);
}



inline void _210676b70_assign(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc5056_Assign> _30930_a) {
	_211298bd1_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_L.get()._field_Model);
	_2112d6c0d_write(_self_.get()._field_oc, _30930_a.get()._field_Op.get()._field_Kind);
	_211298bd1_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_R.get()._field_Model);
}



inline void _210676de5_mapLookupAssign(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc540d_MultiAssign>& _31540_a) {
	jule::Ptr<_246ca6c6e_IndexingExprModel> _31617_iem = _31540_a.get()._field_R.operator jule::Ptr<_246ca6c6e_IndexingExprModel>();;
	_211298bd1_expr(_self_.get()._field_oc.get()._field_ec, _31617_iem.get()._field_Expr.get()._field_Model);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(".lookup(", 8));
	_211298bd1_expr(_self_.get()._field_oc.get()._field_ec, _31617_iem.get()._field_Index.get()._field_Model);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if ((_31540_a.get()._field_L[0LL] != nullptr)) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_211298bd1_expr(_self_.get()._field_oc.get()._field_ec, _31540_a.get()._field_L[0LL]);
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("), ", 3));
	} else {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("nullptr, ", 9));
	};
	if ((_31540_a.get()._field_L[1LL] != nullptr)) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_211298bd1_expr(_self_.get()._field_oc.get()._field_ec, _31540_a.get()._field_L[1LL]);
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _21067716a_multiAssign(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc540d_MultiAssign> _33835_a) {
	{
		auto &_match_expr{ _33835_a.get()._field_R };
		
		if (_match_expr.type_is<jule::Ptr<_246ca6c6e_IndexingExprModel>>()) {
			_case_begin_213bda6a8:;
			{
				_210676de5_mapLookupAssign(_self_, _33835_a);
				return;;
			}
		}
		_match_end_213bda499:;
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("std::tie(", 9));
	{
		auto &expr = _33835_a.get()._field_L;
		auto it = expr.begin();
		_iter_begin_213bdabc5:;
		if (it != expr.end()) {
			jule::I64 _34714_i = it - expr.begin();
			jule::Any _34721_l = *it;
			{
				if ((_34721_l == nullptr)) {
					_2112d6c0d_write(_self_.get()._field_oc, jule::Str("std::ignore", 11));
				} else {
					_211298bd1_expr(_self_.get()._field_oc.get()._field_ec, _34721_l);
				};
				if (((_33835_a.get()._field_L.len() - _34714_i) > 1LL)) {
					_2112d6c0d_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_213bdabc5:;
			++it;
			_34714_i++;
			goto _iter_begin_213bdabc5;
		}
		_iter_end_213bdabc5:;
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(") = ", 4));
	_211298bd1_expr(_self_.get()._field_oc.get()._field_ec, _33835_a.get()._field_R);
}



inline jule::Fn<void(void)> _210677478_matchExpr(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc594c_Match> _36133_m) {
	if ((!(_246d5ec5b_IsConst(_36133_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});
	};
	if (((!(_246208de7_IsBool(_36133_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_24623d558_ReadBool(_36133_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_21129895b_model(_self_.get()._field_oc.get()._field_ec, _36133_m.get()._field_Expr.get()._field_Model);
		});
	};
	return nullptr;
}



inline void _210677797_case(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc594c_Match> _37128_m, jule::Ptr<_246cc6497_Case> _37143_c) {
	if (((_37143_c.get()._field_Exprs.len() != 0LL) && (!(_246cc5e58_IsGenericTypeMatch(_37128_m.ptr()))))) {
		if (((_37128_m.get()._field_Cases.len() > 0LL) && (_37128_m.get()._field_Cases[0LL] == _37143_c))) {
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _37143_c.get()._field_Exprs;
			auto it = expr.begin();
			_iter_begin_213be3e0e:;
			if (it != expr.end()) {
				jule::I64 _37818_i = it - expr.begin();
				jule::Ptr<_246d5e398_Data> _37825_expr = *it;
				{
					{
						
						if ((!(_37128_m.get()._field_TypeMatch))) {
							_case_begin_213be5e88:;
							{
								jule::Fn<void(void)> _38125_caseExpr = _210677478_matchExpr(_self_, _37128_m);;
								if (_246d60069_GoodOperand(_37128_m.get()._field_Expr.ptr(), _37825_expr)) {
									if ((_38125_caseExpr != nullptr)) {
										_38125_caseExpr();
										_2112d6c0d_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_211298bd1_expr(_self_.get()._field_oc.get()._field_ec, _37825_expr.get()._field_Model);
								} else {
									_211298bd1_expr(_self_.get()._field_oc.get()._field_ec, _37825_expr.get()._field_Model);
									if ((_38125_caseExpr != nullptr)) {
										_2112d6c0d_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_38125_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_213be59b0:;
							{
								_2112d6c0d_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								_2112d6c0d_write(_self_.get()._field_oc, jule::Str(".type_is<", 9));
								_211298bd1_expr(_self_.get()._field_oc.get()._field_ec, _37825_expr.get()._field_Model);
								_2112d6c0d_write(_self_.get()._field_oc, jule::Str(">()", 3));
							}
						}
						_match_end_213be58d3:;
					};
					if (((_37143_c.get()._field_Exprs.len() - _37818_i) > 1LL)) {
						_2112d6c0d_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_213be3e0e:;
				++it;
				_37818_i++;
				goto _iter_begin_213be3e0e;
			}
			_iter_end_213be3e0e:;
		};
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_37128_m.get()._field_Default == _37143_c) && (_37128_m.get()._field_Cases.len() != 0LL))) {
		_2112a75d5_indent(_self_.get()._field_oc);
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_211319ba8_addIndent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, static__2112a337d_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37143_c))));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_37143_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_2112a75d5_indent(_self_.get()._field_oc);
		_210679777_scope(_self_, _37143_c.get()._field_Scope);
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_21131a58d_doneIndent(_self_.get()._field_oc);
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _210677a1c_matchSt(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc594c_Match> _43031_m) {
	if (((_43031_m.get()._field_Cases.len() == 0LL) && (_43031_m.get()._field_Default == nullptr))) {
		return;;
	};
	jule::Bool _43513_genericTypeMatch = _246cc5e58_IsGenericTypeMatch(_43031_m.ptr());;
	if ((_43513_genericTypeMatch && ((_43031_m.get()._field_Default == nullptr) || (_43031_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_211319ba8_addIndent(_self_.get()._field_oc);
	_2112a75d5_indent(_self_.get()._field_oc);
	if (((!(_43513_genericTypeMatch)) && (!(_246d5ec5b_IsConst(_43031_m.get()._field_Expr.ptr()))))) {
		if ((_2449a74ee_Copy && _210679d4e_isCopyOptimizable(_43031_m.get()._field_Expr))) {
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_211298bd1_expr(_self_.get()._field_oc.get()._field_ec, _43031_m.get()._field_Expr.get()._field_Model);
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_2112a75d5_indent(_self_.get()._field_oc);
	};
	if ((_43031_m.get()._field_Cases.len() > 0LL)) {
		{
			auto &expr = _43031_m.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_213c08044:;
			if (it != expr.end()) {
				jule::Ptr<_246cc6497_Case> _45925_c = *it;
				{
					if ((_45925_c == nullptr)) {
						goto _iter_next_213c08044;
					};
					_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_2112a75d5_indent(_self_.get()._field_oc);
					_210677797_case(_self_, _43031_m,_45925_c);
				}
				_iter_next_213c08044:;
				++it;
				goto _iter_begin_213c08044;
			}
			_iter_end_213c08044:;
		};
	};
	if ((_43031_m.get()._field_Default != nullptr)) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_210677797_case(_self_, _43031_m,_43031_m.get()._field_Default);
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, static__2112a30d6_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43031_m))));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_21131a58d_doneIndent(_self_.get()._field_oc);
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _210677c92_fallSt(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc6a4c_FallSt> _48626_f) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_2112d6c0d_write(_self_.get()._field_oc, static__2112a337d_caseBegin(_48626_f.get()._field_DestCase));
}



inline void _210678017_breakSt(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc4154_BreakSt> _49127_b) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_49127_b.get()._field_It != 0LLU)) {
		_2112d6c0d_write(_self_.get()._field_oc, static__2112a2800_iterEnd(_49127_b.get()._field_It));
	} else {
		_2112d6c0d_write(_self_.get()._field_oc, static__2112a30d6_matchEnd(_49127_b.get()._field_Mtch));
	};
}



inline void _21067828c_retWithVars(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc6ec0_RetSt> _50035_r) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_50035_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_2112d6c0d_write(_self_.get()._field_oc, static__21134b24a_kind(_50035_r.get()._field_Func.get()._field_Result));
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
	};
	if ((_50035_r.get()._field_Vars.len() > 1LL)) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	};
	{
		auto &expr = _50035_r.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_213c138ce:;
		if (it != expr.end()) {
			jule::I64 _51014_i = it - expr.begin();
			jule::Ptr<_246d16372_Var> _51021_v = *it;
			{
				if (_2449714c9_IsIgnoreIdent(_51021_v.get()._field_Ident)) {
					_2112991cb_initExpr(_self_.get()._field_oc.get()._field_ec, _51021_v.get()._field_Kind.get()._field_Kind);
				} else {
					_2112d6c0d_write(_self_.get()._field_oc, static__2112a22b1_var(_51021_v));
				};
				if (((_50035_r.get()._field_Vars.len() - _51014_i) > 1LL)) {
					_2112d6c0d_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_213c138ce:;
			++it;
			_51014_i++;
			goto _iter_begin_213c138ce;
		}
		_iter_end_213c138ce:;
	};
	if ((_50035_r.get()._field_Vars.len() > 1LL)) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	if (_50035_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _210678512_retTuple(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc6ec0_RetSt> _53032_r) {
	jule::Slice<jule::Ptr<_246d5e398_Data>> _53117_datas = _53032_r.get()._field_Expr.operator jule::Ptr<_246ca85bc_TupleExprModel>().get()._field_Datas;;
	{
		auto &expr = _53032_r.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_213c18e56:;
		if (it != expr.end()) {
			jule::I64 _53214_i = it - expr.begin();
			jule::Ptr<_246d16372_Var> _53221_v = *it;
			{
				if (_2449714c9_IsIgnoreIdent(_53221_v.get()._field_Ident)) {
					goto _iter_next_213c18e56;
				};
				jule::Any _53621_model = _53117_datas[_53214_i].get()._field_Model;;
				if ((_53621_model == _53221_v)) {
					goto _iter_next_213c18e56;
				};
				_2112d6c0d_write(_self_.get()._field_oc, static__2112a22b1_var(_53221_v));
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_211298bd1_expr(_self_.get()._field_oc.get()._field_ec, _53621_model);
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_2112a75d5_indent(_self_.get()._field_oc);
			}
			_iter_next_213c18e56:;
			++it;
			_53214_i++;
			goto _iter_begin_213c18e56;
		}
		_iter_end_213c18e56:;
	};
	if (_53032_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_2112d6c0d_write(_self_.get()._field_oc, static__21134b24a_kind(_53032_r.get()._field_Func.get()._field_Result));
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
	} else {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("return ", 7));
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _53117_datas;
		auto it = expr.begin();
		_iter_begin_213c1dda1:;
		if (it != expr.end()) {
			jule::I64 _55714_i = it - expr.begin();
			jule::Ptr<_246d5e398_Data> _55721_d = *it;
			{
				jule::Ptr<_246d16372_Var> _55821_v = _53032_r.get()._field_Vars[_55714_i];;
				if (_2449714c9_IsIgnoreIdent(_55821_v.get()._field_Ident)) {
					_211298bd1_expr(_self_.get()._field_oc.get()._field_ec, _55721_d.get()._field_Model);
				} else {
					_2112d6c0d_write(_self_.get()._field_oc, static__2112a22b1_var(_55821_v));
				};
				if (((_53117_datas.len() - _55714_i) > 1LL)) {
					_2112d6c0d_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_213c1dda1:;
			++it;
			_55714_i++;
			goto _iter_begin_213c1dda1;
		}
		_iter_end_213c1dda1:;
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_53032_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _210678787_retWithExprs(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc6ec0_RetSt> _57536_r) {
	if ((_57536_r.get()._field_Vars.len() > 1LL)) {
		_210678512_retTuple(_self_, _57536_r);
		return;;
	};
	if ((_57536_r.get()._field_Vars.len() > 0LL)) {
		jule::Ptr<_246d16372_Var> _58321_v = _57536_r.get()._field_Vars[0LL];;
		if (((!(_2449714c9_IsIgnoreIdent(_58321_v.get()._field_Ident))) && (_57536_r.get()._field_Expr != _58321_v))) {
			jule::Str _58521_ident = static__2112a22b1_var(_58321_v);;
			_2112d6c0d_write(_self_.get()._field_oc, _58521_ident);
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str(" = ", 3));
			_211298bd1_expr(_self_.get()._field_oc.get()._field_ec, _57536_r.get()._field_Expr);
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			_2112a75d5_indent(_self_.get()._field_oc);
			if (_57536_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
				_2112d6c0d_write(_self_.get()._field_oc, static__21134b24a_kind(_57536_r.get()._field_Func.get()._field_Result));
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
				_2112d6c0d_write(_self_.get()._field_oc, _58521_ident);
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
			} else {
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("return ", 7));
				_2112d6c0d_write(_self_.get()._field_oc, _58521_ident);
			};
			return;;
		};
	};
	if (_57536_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_2112d6c0d_write(_self_.get()._field_oc, static__21134b24a_kind(_57536_r.get()._field_Func.get()._field_Result));
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
		_211298bd1_expr(_self_.get()._field_oc.get()._field_ec, _57536_r.get()._field_Expr);
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("return ", 7));
	_211298bd1_expr(_self_.get()._field_oc.get()._field_ec, _57536_r.get()._field_Expr);
	return;;
}



inline void _210678a0c_retSt(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc6ec0_RetSt> _61929_r) {
	if (((_61929_r.get()._field_Expr == nullptr) && (_61929_r.get()._field_Vars.len() == 0LL))) {
		if (_61929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	};
	if ((_61929_r.get()._field_Expr == nullptr)) {
		_21067828c_retWithVars(_self_, _61929_r);
		return;;
	};
	_210678787_retWithExprs(_self_, _61929_r);
}



inline void _210679007_var(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246d16372_Var> _65427_v) {
	if ((!(_65427_v.get()._field_Constant))) {
		_211343b6b_var(_self_.get()._field_oc, _65427_v);
	};
}



inline void _21067927c_st(jule::Ptr<_210674871_scopeCoder> _self_, jule::Any _66126_st) {
	if ((_66126_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _66126_st };
		
		if (_match_expr.type_is<jule::Ptr<_246cc1c01_Scope>>()) {
			_case_begin_213c3755c:;
			{
				_210679777_scope(_self_, _66126_st.operator jule::Ptr<_246cc1c01_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246d16372_Var>>()) {
			_case_begin_213c37051:;
			{
				_210679007_var(_self_, _66126_st.operator jule::Ptr<_246d16372_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246d5e398_Data>>()) {
			_case_begin_213c37a8a:;
			{
				_211298bd1_expr(_self_.get()._field_oc.get()._field_ec, _66126_st.operator jule::Ptr<_246d5e398_Data>().get()._field_Model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc275c_Conditional>>()) {
			_case_begin_213c37b01:;
			{
				_210675685_conditional(_self_, _66126_st.operator jule::Ptr<_246cc275c_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc2a48_InfIter>>()) {
			_case_begin_213c37b67:;
			{
				_21067590a_infIter(_self_, _66126_st.operator jule::Ptr<_246cc2a48_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc2ebb_WhileIter>>()) {
			_case_begin_213c37bcd:;
			{
				_210675b80_whileIter(_self_, _66126_st.operator jule::Ptr<_246cc2ebb_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc38a1_RangeIter>>()) {
			_case_begin_213c37c44:;
			{
				_210675e05_rangeIter(_self_, _66126_st.operator jule::Ptr<_246cc38a1_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc3c9c_ContSt>>()) {
			_case_begin_213c37caa:;
			{
				_21067617a_cont(_self_, _66126_st.operator jule::Ptr<_246cc3c9c_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc4440_Label>>()) {
			_case_begin_213c37d21:;
			{
				_210676400_label(_self_, _66126_st.operator jule::Ptr<_246cc4440_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc472b_GotoSt>>()) {
			_case_begin_213c37d87:;
			{
				_210676675_gotoSt(_self_, _66126_st.operator jule::Ptr<_246cc472b_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc4ad3_Postfix>>()) {
			_case_begin_213c37ded:;
			{
				_2106768ea_postfix(_self_, _66126_st.operator jule::Ptr<_246cc4ad3_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc5056_Assign>>()) {
			_case_begin_213c37e64:;
			{
				_210676b70_assign(_self_, _66126_st.operator jule::Ptr<_246cc5056_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc540d_MultiAssign>>()) {
			_case_begin_213c37eca:;
			{
				_21067716a_multiAssign(_self_, _66126_st.operator jule::Ptr<_246cc540d_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc594c_Match>>()) {
			_case_begin_213c38052:;
			{
				_210677a1c_matchSt(_self_, _66126_st.operator jule::Ptr<_246cc594c_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc6a4c_FallSt>>()) {
			_case_begin_213c380c9:;
			{
				_210677c92_fallSt(_self_, _66126_st.operator jule::Ptr<_246cc6a4c_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc4154_BreakSt>>()) {
			_case_begin_213c38151:;
			{
				_210678017_breakSt(_self_, _66126_st.operator jule::Ptr<_246cc4154_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc6ec0_RetSt>>()) {
			_case_begin_213c381c8:;
			{
				_210678a0c_retSt(_self_, _66126_st.operator jule::Ptr<_246cc6ec0_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2458b100b_PushToSliceExprModel>>()) {
			_case_begin_213c38250:;
			{
				_2112968e3_pushToSlice(_self_.get()._field_oc.get()._field_ec, _66126_st.operator jule::Ptr<_2458b100b_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_245d606b9_MutSlicingExprModel>>()) {
			_case_begin_213c382c7:;
			{
				_211298461_mutSlicing(_self_.get()._field_oc.get()._field_ec, _66126_st.operator jule::Ptr<_245d606b9_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2449dbc09_StrInsertBeginExprModel>>()) {
			_case_begin_213c3834e:;
			{
				_2112986d6_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _66126_st.operator jule::Ptr<_2449dbc09_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_213c36c32:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_213c3723d:;
	};
}



inline void _210679502_scopeStmts(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc1c01_Scope>& _71135_s) {
	{
		auto &expr = _71135_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_213c439b9:;
		if (it != expr.end()) {
			jule::Any _71221_st = *it;
			{
				_2112a75d5_indent(_self_.get()._field_oc);
				_21067927c_st(_self_, _71221_st);
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_213c439b9:;
			++it;
			goto _iter_begin_213c439b9;
		}
		_iter_end_213c439b9:;
	};
}



inline void _210679777_scope(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cc1c01_Scope> _72029_s) {
	_211319ba8_addIndent(_self_.get()._field_oc);
	if (_72029_s.get()._field_Deferred) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_210679502_scopeStmts(_self_, _72029_s);
	_21131a58d_doneIndent(_self_.get()._field_oc);
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_72029_s.get()._field_Deferred) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _2106799ec_funcScope(jule::Ptr<_210674871_scopeCoder> _self_, jule::Ptr<_246cabb42_FnIns> _73633_f) {
	if ((_73633_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_211319ba8_addIndent(_self_.get()._field_oc);
	if ((!(_24618a10e_IsVoid(_73633_f.get()._field_Decl.ptr())))) {
		jule::Slice<jule::Ptr<_246d8ee9a_TypeKind>> _74321_types = _2461a97e3_Types(_73633_f.ptr());;
		{
			auto &expr = _73633_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
			auto it = expr.begin();
			_iter_begin_213c49e32:;
			if (it != expr.end()) {
				jule::I64 _74417_i = it - expr.begin();
				jule::Ptr<_24496dc35_Token> _74420_ident = *it;
				{
					if ((_2449714c9_IsIgnoreIdent(_74420_ident.get()._field_Kind) || _244971771_IsAnonIdent(_74420_ident.get()._field_Kind))) {
						goto _iter_next_213c49e32;
					};
					_2112a75d5_indent(_self_.get()._field_oc);
					_2112d6c0d_write(_self_.get()._field_oc, static__21134b24a_kind(_74321_types[_74417_i]));
					_2112d6c0d_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_2112d6c0d_write(_self_.get()._field_oc, static__2112a0ba5_toLocal(_74420_ident.get()._field_Row,_74420_ident.get()._field_Column,_74420_ident.get()._field_Kind));
					_2112d6c0d_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_2112991cb_initExpr(_self_.get()._field_oc.get()._field_ec, _74321_types[_74417_i]);
					_2112d6c0d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				}
				_iter_next_213c49e32:;
				++it;
				_74417_i++;
				goto _iter_begin_213c49e32;
			}
			_iter_end_213c49e32:;
		};
	};
	_210679502_scopeStmts(_self_, _73633_f.get()._field_Scope);
	if ((_73633_f.get()._field_Decl.get()._field_Exceptional && _24618a10e_IsVoid(_73633_f.get()._field_Decl.ptr()))) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(" return jule::VoidExceptional();\n", 33));
	};
	_21131a58d_doneIndent(_self_.get()._field_oc);
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _210674871_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21067c527_exprCoder> static__21067c923_new(jule::Ptr<_2113423d9_ObjectCoder>& _10324_oc) {
	return jule::new_ptr<_21067c527_exprCoder>(_21067c527_exprCoder{._field_oc=_10324_oc});
}



inline void _21067cb98_string(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_2461e4872_Const>& _10927_c) {
	jule::Str _11013_content = _246245de0_ReadStr(_10927_c.ptr());;
	if ((_11013_content.len() == 0LL)) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _11513_bytes = static_cast<jule::Slice<jule::U8>>(_11013_content);;
	jule::Str _11613_len = _246ca1dce_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_11513_bytes.len())),10LL);;
	jule::Str _11713_lit = _211299dd0_cstrLit(_11513_bytes);;
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(", 1));
	_2112d6c0d_write(_self_.get()._field_oc, _11713_lit);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_2112d6c0d_write(_self_.get()._field_oc, _11613_len);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _21067ce1d_boolean(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_2461e4872_Const>& _12628_c) {
	if (_24623d558_ReadBool(_12628_c.ptr())) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("true", 4));
		return;;
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("false", 5));
}



inline void _21067d0e9_nilLit(jule::Ptr<_21067c527_exprCoder> _self_) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _21067d407_ftoaSpecialCases(jule::Ptr<_21067c527_exprCoder> _self_, jule::F64& _13837_x) {
	{
		
		if (_246be7132_IsNaN(_13837_x)) {
			_case_begin_213c6ce00:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_246bee436_IsInf(_13837_x,1LL)) {
			_case_begin_213c6c691:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_246bee436_IsInf(_13837_x,-1LL)) {
			_case_begin_213c6c707:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_213c6c62a:;
			{
				return false;
			}
		}
		_match_end_213c6c54d:;
	};
	return true;
}



inline void _21067d67c_float32(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_2461e4872_Const>& _15228_c) {
	jule::F64 _15313_x = _2462487e9_AsF64(_15228_c.ptr());;
	if (_21067d407_ftoaSpecialCases(_self_, _15313_x)) {
		return;;
	};
	{
		
		if ((_15313_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_213c713dc:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_15313_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_213c70cc1:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_213c705ea:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, _21129a1dd_ftoa(_15313_x,32LL));
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_213c70595:;
	};
}



inline void _21067d902_float64(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_2461e4872_Const>& _17128_c) {
	jule::F64 _17213_x = _2462487e9_AsF64(_17128_c.ptr());;
	if (_21067d407_ftoaSpecialCases(_self_, _17213_x)) {
		return;;
	};
	{
		
		if ((_17213_x == jule::MAX_F64)) {
			_case_begin_213c74005:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_17213_x == jule::MIN_F64)) {
			_case_begin_213c7470e:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_213c73961:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, _21129a1dd_ftoa(_17213_x,64LL));
			}
		}
		_match_end_213c7390b:;
	};
}



inline void _21067db77_constant(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_2461e4872_Const> _18932_c) {
	{
		
		if (_2462456a3_IsStr(_18932_c.ptr())) {
			_case_begin_213c763d1:;
			{
				_21067cb98_string(_self_, _18932_c);
			}
		}
		else if (_246208de7_IsBool(_18932_c.ptr())) {
			_case_begin_213c75e6e:;
			{
				_21067ce1d_boolean(_self_, _18932_c);
			}
		}
		else if (_24625698e_IsF64(_18932_c.ptr())) {
			_case_begin_213c75ed5:;
			{
				{
					
					if ((_18932_c.get()._field_Kind == jule::Str("f32", 3))) {
						_case_begin_213c78438:;
						{
							_21067d67c_float32(_self_, _18932_c);
						}
					}
					else {
						_case_begin_213c78092:;
						{
							_21067d902_float64(_self_, _18932_c);
						}
					}
					_match_end_213c77eb5:;
				};
			}
		}
		else if (_2462570dd_IsI64(_18932_c.ptr())) {
			_case_begin_213c7604b:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, _21129a485_itoa(static_cast<jule::I64>(_24623bb1c_ReadI64(_18932_c.ptr()))));
			}
		}
		else if (_2462069a5_IsU64(_18932_c.ptr())) {
			_case_begin_213c760b2:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, _21129a72c_utoa(static_cast<jule::U64>(_24623cd0a_ReadU64(_18932_c.ptr()))));
			}
		}
		else if (_246ca3ebe_IsNil(_18932_c.ptr())) {
			_case_begin_213c769ca:;
			{
				_21067d0e9_nilLit(_self_);
			}
		}
		else {
			_case_begin_213c75e08:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_213c75d2b:;
	};
}



inline void _21067e040_divByZeroBinary(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_24496dc35_Token>& _21336_op, jule::Ptr<_246ca5a2b_OperandExprModel>& _21353_l, jule::Ptr<_246ca5a2b_OperandExprModel>& _21380_r) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _21336_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_213c7bbcd:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_213c7bc44:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_213c7bb01:;
	};
	if ((!(_24267eb8a_Production))) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_211317238_locInfo(_self_.get()._field_oc, _21336_op);
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_211298bd1_expr(_self_, _21353_l.get()._field_Model);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(",", 1));
	_211298bd1_expr(_self_, _21380_r.get()._field_Model);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _21067e2b5_unsafeBinary(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca5c18_BinopExprModel> _23536_m) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(", 1));
	_21129895b_model(_self_, _23536_m.get()._field_Left.get()._field_Model);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_2112d6c0d_write(_self_.get()._field_oc, _23536_m.get()._field_Op.get()._field_Kind);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_21129895b_model(_self_, _23536_m.get()._field_Right.get()._field_Model);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _21067e53a_binary(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca5c18_BinopExprModel> _24530_m) {
	{
		auto &_match_expr{ _24530_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_213c83c7e:;
			{
				if ((_246d9350e_Struct(_24530_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_21067e040_divByZeroBinary(_self_, _24530_m.get()._field_Op,_24530_m.get()._field_Left,_24530_m.get()._field_Right);
					return;;
				};
			}
		}
		_match_end_213c83bb3:;
	};
	_21067e2b5_unsafeBinary(_self_, _24530_m);
}



inline void _21128edd6_var(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246d16372_Var> _25727_m) {
	if (_25727_m.get()._field_CppLinked) {
		jule::Ptr<_2460dc858_Directive> _25917_d = _21134daaa_findDirective(_25727_m.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_25917_d != nullptr)) {
			_2112d6c0d_write(_self_.get()._field_oc, _211345684_concatAllParts(_25917_d.get()._field_Args));
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_2112d6c0d_write(_self_.get()._field_oc, static__2112a22b1_var(_25727_m));
}



inline void _21129014a_structureIns(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246142319_StructIns> _26836_m) {
	_2112d6c0d_write(_self_.get()._field_oc, static__211349b3e_structureIns(_26836_m));
}



inline void _2112903c0_unary(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca5e05_UnaryExprModel> _27229_m) {
	{
		auto &_match_expr{ _27229_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_213c88d1c:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_211298bd1_expr(_self_, _27229_m.get()._field_Expr.get()._field_Model);
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_213c88d94:;
			{
				if ((_24267eb8a_Production || (_246d92321_Sptr(_27229_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_213c88c40;
				};
				_211298bd1_expr(_self_, _27229_m.get()._field_Expr.get()._field_Model);
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_211317238_locInfo(_self_.get()._field_oc, _27229_m.get()._field_Op);
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_213c88c40:;
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(", 1));
	_2112d6c0d_write(_self_.get()._field_oc, _27229_m.get()._field_Op.get()._field_Kind);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(", 1));
	_211298bd1_expr(_self_, _27229_m.get()._field_Expr.get()._field_Model);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _211290645_structureLit(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca62ce_StructLitExprModel> _29636_m) {
	if (_29636_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_2112d6c0d_write(_self_.get()._field_oc, static__2112a1c72_structureIns(_29636_m.get()._field_Strct));
	if (_29636_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_29636_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _29636_m.get()._field_Strct.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_213c91cd1:;
			if (it != expr.end()) {
				jule::I64 _30917_i = it - expr.begin();
				jule::Ptr<_24611d977_FieldIns> _30920_f = *it;
				{
					{
						auto &expr = _29636_m.get()._field_Args;
						auto it = expr.begin();
						_iter_begin_213c92ac3:;
						if (it != expr.end()) {
							jule::Ptr<_246ca60e2_StructArgExprModel> _31029_arg = *it;
							{
								if ((_31029_arg.get()._field_Field == _30920_f)) {
									_2112d6c0d_write(_self_.get()._field_oc, jule::Str(".", 1));
									_2112d6c0d_write(_self_.get()._field_oc, static__2112a2019_field(_31029_arg.get()._field_Field.get()._field_Decl));
									_2112d6c0d_write(_self_.get()._field_oc, jule::Str("=", 1));
									_211298bd1_expr(_self_, _31029_arg.get()._field_Expr);
									if (((_29636_m.get()._field_Strct.get()._field_Fields.len() - _30917_i) > 1LL)) {
										_2112d6c0d_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_213c91cd1;
								};
							}
							_iter_next_213c92ac3:;
							++it;
							goto _iter_begin_213c92ac3;
						}
						_iter_end_213c92ac3:;
					};
				}
				_iter_next_213c91cd1:;
				++it;
				_30917_i++;
				goto _iter_begin_213c91cd1;
			}
			_iter_end_213c91cd1:;
		};
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _2112908ba_allocStructure(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca64bb_AllocStructLitExprModel> _32738_m) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_2112d6c0d_write(_self_.get()._field_oc, static__2112a1c72_structureIns(_32738_m.get()._field_Lit.get()._field_Strct));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_211290645_structureLit(_self_, _32738_m.get()._field_Lit);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _211290b40_casting(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca66a8_CastingExprModel> _33531_m) {
	{
		
		if (((_246d920ac_Prim(_33531_m.get()._field_Kind.ptr()) != nullptr) && _246d97e1a_IsAny(_246d920ac_Prim(_33531_m.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_213c9e162:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, static__21134b24a_kind(_33531_m.get()._field_Kind));
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(", 1));
				_21129895b_model(_self_, _33531_m.get()._field_Expr);
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_246d92585_Ptr(_33531_m.get()._field_ExprKind.ptr()) != nullptr) || (_246d92585_Ptr(_33531_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_213c9e030:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("((", 2));
				_2112d6c0d_write(_self_.get()._field_oc, static__21134b24a_kind(_33531_m.get()._field_Kind));
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_211298bd1_expr(_self_, _33531_m.get()._field_Expr);
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_246d93773_Trait(_33531_m.get()._field_ExprKind.ptr()) != nullptr) || ((_246d920ac_Prim(_33531_m.get()._field_ExprKind.ptr()) != nullptr) && _246d97e1a_IsAny(_246d920ac_Prim(_33531_m.get()._field_ExprKind.ptr()).ptr())) || (_246d92a5d_TypeEnum(_33531_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_213c9dc00:;
			{
				_21129895b_model(_self_, _33531_m.get()._field_Expr);
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(".", 1));
				if (_24267eb8a_Production) {
					_2112d6c0d_write(_self_.get()._field_oc, jule::Str("operator ", 9));
					_2112d6c0d_write(_self_.get()._field_oc, static__21134b24a_kind(_33531_m.get()._field_Kind));
					_2112d6c0d_write(_self_.get()._field_oc, jule::Str("()", 2));
				} else {
					if ((_246d92321_Sptr(_33531_m.get()._field_Kind.ptr()) != nullptr)) {
						_2112d6c0d_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
						_2112d6c0d_write(_self_.get()._field_oc, static__21134b24a_kind(_246d92321_Sptr(_33531_m.get()._field_Kind.ptr()).get()._field_Elem));
					} else {
						_2112d6c0d_write(_self_.get()._field_oc, jule::Str("cast<", 5));
						_2112d6c0d_write(_self_.get()._field_oc, static__21134b24a_kind(_33531_m.get()._field_Kind));
					};
					_2112d6c0d_write(_self_.get()._field_oc, jule::Str(">(\"", 3));
					_211317238_locInfo(_self_.get()._field_oc, _33531_m.get()._field_Token);
					_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\")", 2));
				};
			}
		}
		else if ((_246d93773_Trait(_33531_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_213c9dc66:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, static__21134b24a_kind(_33531_m.get()._field_Kind));
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(", 1));
				_211298bd1_expr(_self_, _33531_m.get()._field_Expr);
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_2112d6c0d_write(_self_.get()._field_oc, _246ca2011_Itoa(static_cast<jule::I64>(_2112c7a34_findTypeOffset(_self_.get()._field_oc.ptr(), _246d93773_Trait(_33531_m.get()._field_Kind.ptr()),_33531_m.get()._field_ExprKind))));
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_213c9db89:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_2112d6c0d_write(_self_.get()._field_oc, static__21134b24a_kind(_33531_m.get()._field_Kind));
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_211298bd1_expr(_self_, _33531_m.get()._field_Expr);
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_213c9daac:;
	};
}



inline void _211290db5_args(jule::Ptr<_21067c527_exprCoder> _self_, jule::Slice<jule::Any> _38628_args) {
	if ((_38628_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _38628_args;
		auto it = expr.begin();
		_iter_begin_213cb0abe:;
		if (it != expr.end()) {
			jule::I64 _39014_i = it - expr.begin();
			jule::Any _39021_a = *it;
			{
				_211298bd1_expr(_self_, _39021_a);
				if (((_38628_args.len() - _39014_i) > 1LL)) {
					_2112d6c0d_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_213cb0abe:;
			++it;
			_39014_i++;
			goto _iter_begin_213cb0abe;
		}
		_iter_end_213cb0abe:;
	};
}



inline void _21129113a_modelForCall(jule::Ptr<_21067c527_exprCoder> _self_, jule::Any _39836_expr) {
	{
		auto &_match_expr{ _39836_expr };
		
		if (_match_expr.type_is<jule::Ptr<_246cabb42_FnIns>>()) {
			_case_begin_213cb2d57:;
			{
				_211294193_funcIns(_self_, _39836_expr.operator jule::Ptr<_246cabb42_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca7b2c_StructSubIdentExprModel>>()) {
			_case_begin_213cb2dce:;
			{
				jule::Ptr<_246ca7b2c_StructSubIdentExprModel> _40421_ssie = _39836_expr.operator jule::Ptr<_246ca7b2c_StructSubIdentExprModel>();;
				if ((_40421_ssie.get()._field_Method != nullptr)) {
					_211294193_funcIns(_self_, _40421_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_213cb2c47:;
	};
	_21129895b_model(_self_, _39836_expr);
}



inline void _2112913b0_pushCallInf(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca6895_FnCallExprModel>& _41332_m) {
	if ((_24267eb8a_Production || ((!(_41332_m.get()._field_Func.get()._field_Anon)) && (!(_21129ad9d_isBuiltinCallHasDebuginf(_41332_m)))))) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_41332_m.get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ _41332_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_246ca7b2c_StructSubIdentExprModel>>()) {
				_case_begin_213cb6ad6:;
				{
					if (_41332_m.get()._field_Expr.operator jule::Ptr<_246ca7b2c_StructSubIdentExprModel>().get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_CppLinked) {
						_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_213cb671d;
				}
			}
			else {
				_case_begin_213cb671d:;
				{
					_2112d6c0d_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_213cb6685:;
		};
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_211317238_locInfo(_self_.get()._field_oc, _41332_m.get()._field_Token);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_41332_m.get()._field_Args.len() != 0LL)) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _2112916bd_isWrapped(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca6895_FnCallExprModel>& _43834_m) {
	if ((((!(_246cabd2e_IsBuiltin(_43834_m.get()._field_Func.ptr()))) && (_43834_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _24617a220_IsSelf(_43834_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _43834_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_246ca7b2c_StructSubIdentExprModel>>()) {
				_case_begin_213cba69a:;
				{
					jule::Ptr<_246ca7b2c_StructSubIdentExprModel> _44225_ssie = _43834_m.get()._field_Expr.operator jule::Ptr<_246ca7b2c_StructSubIdentExprModel>();;
					{
						
						if (_24617b4da_IsRef(_43834_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_246d92321_Sptr(_44225_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_213cbbd61:;
							{
								goto _match_end_213cbb613;
							}
						}
						else {
							_case_begin_213cbb679:;
							{
								if ((_246d9350e_Struct(_44225_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_44225_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_2112d6c0d_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_21129895b_model(_self_, _44225_ssie.get()._field_Expr.get()._field_Model);
										_2112d6c0d_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;
									};
								};
							}
						}
						_match_end_213cbb613:;
					};
				}
			}
			_match_end_213cba48b:;
		};
	};
	return false;
}



inline void _211291943_pureFuncCall(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca6895_FnCallExprModel>& _46237_m) {
	jule::Bool _46313_wrapped = _2112916bd_isWrapped(_self_, _46237_m);;
	_21129113a_modelForCall(_self_, _46237_m.get()._field_Expr);
	if ((!(_246cabd2e_IsBuiltin(_46237_m.get()._field_Func.ptr())))) {
		if ((_46237_m.get()._field_Func.get()._field_Decl.get()._field_CppLinked && (_46237_m.get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_21134de40_hasDirective(_46237_m.get()._field_Func.get()._field_Decl.get()._field_Directives,jule::Str("cdef", 4))))) {
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _46237_m.get()._field_Func.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_213cc27c3:;
					if (it != expr.end()) {
						jule::I64 _46926_i = it - expr.begin();
						jule::Ptr<_246d8d76d_InsGeneric> _46933_g = *it;
						{
							_2112d6c0d_write(_self_.get()._field_oc, static__21134b24a_kind(_46933_g.get()._field_Kind));
							if (((_46237_m.get()._field_Func.get()._field_Generics.len() - _46926_i) > 1LL)) {
								_2112d6c0d_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_213cc27c3:;
						++it;
						_46926_i++;
						goto _iter_begin_213cc27c3;
					}
					_iter_end_213cc27c3:;
				};
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_2112913b0_pushCallInf(_self_, _46237_m);
	jule::Bool _48017_locinfo = false;;
	if ((((!(_246cabd2e_IsBuiltin(_46237_m.get()._field_Func.ptr()))) && (_46237_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _24617a220_IsSelf(_46237_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _46237_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_246ca7b2c_StructSubIdentExprModel>>()) {
				_case_begin_213cc673e:;
				{
					jule::Ptr<_246ca7b2c_StructSubIdentExprModel> _48425_ssie = _46237_m.get()._field_Expr.operator jule::Ptr<_246ca7b2c_StructSubIdentExprModel>();;
					{
						
						if (_24617b4da_IsRef(_46237_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_213cc9357:;
							{
								_21129895b_model(_self_, _48425_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_246d92321_Sptr(_48425_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_213cc93bd:;
							{
								_21129895b_model(_self_, _48425_ssie.get()._field_Expr.get()._field_Model);
								_2112d6c0d_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_24267eb8a_Production))) {
									_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_211317238_locInfo(_self_.get()._field_oc, _46237_m.get()._field_Token);
									_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_213cc77a6:;
							{
								if ((_246d9350e_Struct(_48425_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_2112d6c0d_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_46313_wrapped) {
									_2112d6c0d_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_21129895b_model(_self_, _48425_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_213cc7740:;
					};
					if ((_46237_m.get()._field_Args.len() > 0LL)) {
						_2112d6c0d_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_246ca770e_TraitSubIdentExprModel>>()) {
				_case_begin_213cc67a5:;
				{
					_21129895b_model(_self_, _46237_m.get()._field_Expr.operator jule::Ptr<_246ca770e_TraitSubIdentExprModel>().get()._field_Expr);
					if ((!(_24267eb8a_Production))) {
						_48017_locinfo=true;
					};
					if ((_46237_m.get()._field_Args.len() > 0LL)) {
						_2112d6c0d_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_213cc6530:;
		};
	};
	_211290db5_args(_self_, _46237_m.get()._field_Args);
	if (_48017_locinfo) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_211317238_locInfo(_self_.get()._field_oc, _46237_m.get()._field_Token);
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_46313_wrapped) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
}



inline void _211291bb8_coFuncCall(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca6895_FnCallExprModel>& _53435_m) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_211319ba8_addIndent(_self_.get()._field_oc);
	jule::Str _53717_head = jule::Str("std::thread([", 13);;
	if ((_53435_m.get()._field_Func.get()._field_Owner != nullptr)) {
		_53717_head+=jule::Str("_self_", 6);
		if ((_53435_m.get()._field_Args.len() > 0LL)) {
			_53717_head+=jule::Str(", ", 2);
		};
	};
	{
		auto &expr = _53435_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_213cd5e13:;
		if (it != expr.end()) {
			jule::I64 _54413_i = it - expr.begin();
			jule::Any _54416_arg = *it;
			{
				if ((_54413_i > 0LL)) {
					_53717_head+=jule::Str(", ", 2);
				};
				{
					auto &_match_expr{ _54416_arg };
					
					if (_match_expr.type_is<jule::Ptr<_246d16372_Var>>()) {
						_case_begin_213cd6c16:;
						{
							jule::Ptr<_246d16372_Var> _55025_v = _54416_arg.operator jule::Ptr<_246d16372_Var>();;
							_53717_head+=static__2112a22b1_var(_55025_v);
							goto _iter_next_213cd5e13;
						}
					}
					_match_end_213cd68c5:;
				};
				jule::Str _55417_name = (jule::Str("_co_arg_", 8) + _246ca2011_Itoa(_54413_i));;
				_53717_head+=_55417_name;
				_2112a75d5_indent(_self_.get()._field_oc);
				_2112d6c0d_write(_self_.get()._field_oc, static__21134b24a_kind(_53435_m.get()._field_Func.get()._field_Params[_54413_i].get()._field_Kind));
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(" ", 1));
				if (_53435_m.get()._field_Func.get()._field_Params[_54413_i].get()._field_Decl.get()._field_Reference) {
					_2112d6c0d_write(_self_.get()._field_oc, jule::Str("&", 1));
				};
				_2112d6c0d_write(_self_.get()._field_oc, _55417_name);
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_211298bd1_expr(_self_, _54416_arg);
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				jule::Any _56617_argS = jule::Any(_55417_name);;
				_53435_m.get()._field_Args[_54413_i]=(*(((jule::Any*)((&(_56617_argS))))));
			}
			_iter_next_213cd5e13:;
			++it;
			_54413_i++;
			goto _iter_begin_213cd5e13;
		}
		_iter_end_213cd5e13:;
	};
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, _53717_head);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("](void) mutable -> void {\n", 26));
	_211319ba8_addIndent(_self_.get()._field_oc);
	_2112a75d5_indent(_self_.get()._field_oc);
	_211291943_pureFuncCall(_self_, _53435_m);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_21131a58d_doneIndent(_self_.get()._field_oc);
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("}).detach();\n", 13));
	_21131a58d_doneIndent(_self_.get()._field_oc);
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _211291e3d_funcCall(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca6895_FnCallExprModel> _58432_m) {
	if (_58432_m.get()._field_IsCo) {
		_211291bb8_coFuncCall(_self_, _58432_m);
		return;;
	};
	if (((_246cabd2e_IsBuiltin(_58432_m.get()._field_Func.ptr()) || (!(_58432_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_58432_m.get()._field_Except != nullptr) && (_58432_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_211291943_pureFuncCall(_self_, _58432_m);
		return;;
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_211319ba8_addIndent(_self_.get()._field_oc);
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_211291943_pureFuncCall(_self_, _58432_m);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_2112a75d5_indent(_self_.get()._field_oc);
	if ((_58432_m.get()._field_Except != nullptr)) {
		if (((_58432_m.get()._field_Func.get()._field_Result == nullptr) || (!(_58432_m.get()._field_Assigned)))) {
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_210679777_scope(_self_.get()._field_oc.get()._field_sc, _58432_m.get()._field_Except);
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _61021_forwarded = _21129aad4_isForwarded(_58432_m.get()._field_Except);;
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_61021_forwarded) {
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			_210679777_scope(_self_.get()._field_oc.get()._field_sc, _58432_m.get()._field_Except);
			if (_61021_forwarded) {
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_2112991cb_initExpr(_self_, _58432_m.get()._field_Func.get()._field_Result);
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_21131a58d_doneIndent(_self_.get()._field_oc);
	} else {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_211317238_locInfo(_self_.get()._field_oc, _58432_m.get()._field_Token);
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_24618a10e_IsVoid(_58432_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_2112a75d5_indent(_self_.get()._field_oc);
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_21131a58d_doneIndent(_self_.get()._field_oc);
	};
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _2112921b3_slice(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca6a82_SliceExprModel> _63929_m) {
	if ((_63929_m.get()._field_Elems.len() == 0LL)) {
		_2112d6c0d_write(_self_.get()._field_oc, static__211348a72_asSlice(_63929_m.get()._field_ElemKind));
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_2112d6c0d_write(_self_.get()._field_oc, static__211348a72_asSlice(_63929_m.get()._field_ElemKind));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_211290db5_args(_self_, _63929_m.get()._field_Elems);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _211292438_indexing(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca6c6e_IndexingExprModel> _65132_m) {
	_21129895b_model(_self_, _65132_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_24267eb8a_Production || (_246d92585_Ptr(_65132_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_246d939d7_Map(_65132_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _21129b0ce_isExprComesFromBind(_65132_m.get()._field_Expr)) {
			_case_begin_213d02eda:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("[", 1));
				_211298bd1_expr(_self_, _65132_m.get()._field_Index.get()._field_Model);
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_213d02a9a:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_211317238_locInfo(_self_.get()._field_oc, _65132_m.get()._field_Token);
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_211298bd1_expr(_self_, _65132_m.get()._field_Index.get()._field_Model);
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_213d02a34:;
	};
}



inline void _2112926ad_unsafeIndexing(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_2454bc9e7_UnsafeIndexingExprModel> _67138_m) {
	_21129895b_model(_self_, _67138_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_24267eb8a_Production || (_246d92585_Ptr(_67138_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_246d939d7_Map(_67138_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_213d07dd0:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("[", 1));
				_211298bd1_expr(_self_, _67138_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_213d07990:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_211298bd1_expr(_self_, _67138_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_213d07929:;
	};
}



inline void _211292933_anonFunc(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca6e5b_AnonFnExprModel> _68832_m) {
	_2112d6c0d_write(_self_.get()._field_oc, static__21134aea3_func(_68832_m.get()._field_Func));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_211343907_paramsIns(_self_.get()._field_oc, _68832_m.get()._field_Func.get()._field_Params);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_2112d6c0d_write(_self_.get()._field_oc, static__21134a964_funcInsResult(_68832_m.get()._field_Func));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_2106799ec_funcScope(_self_.get()._field_oc.get()._field_sc, _68832_m.get()._field_Func);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _211292ba8_mapExpr(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca7335_MapExprModel> _69931_m) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_2112d6c0d_write(_self_.get()._field_oc, static__21134b24a_kind(_69931_m.get()._field_KeyKind));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(",", 1));
	_2112d6c0d_write(_self_.get()._field_oc, static__21134b24a_kind(_69931_m.get()._field_ValKind));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_69931_m.get()._field_Entries.len() > 0LL)) {
		{
			auto &expr = _69931_m.get()._field_Entries;
			auto it = expr.begin();
			_iter_begin_213d12318:;
			if (it != expr.end()) {
				jule::I64 _70618_i = it - expr.begin();
				jule::Ptr<_246ca7148_KeyValPairExprModel> _70625_pair = *it;
				{
					_2112d6c0d_write(_self_.get()._field_oc, jule::Str("{", 1));
					_211298bd1_expr(_self_, _70625_pair.get()._field_Key);
					_2112d6c0d_write(_self_.get()._field_oc, jule::Str(",", 1));
					_211298bd1_expr(_self_, _70625_pair.get()._field_Val);
					_2112d6c0d_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_69931_m.get()._field_Entries.len() - _70618_i) > 1LL)) {
						_2112d6c0d_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_213d12318:;
				++it;
				_70618_i++;
				goto _iter_begin_213d12318;
			}
			_iter_end_213d12318:;
		};
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _211292e2d_slicing(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca7522_SlicingExprModel> _72031_m) {
	_21129895b_model(_self_, _72031_m.get()._field_Expr);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_24267eb8a_Production))) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_211317238_locInfo(_self_.get()._field_oc, _72031_m.get()._field_Token);
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_211298bd1_expr(_self_, _72031_m.get()._field_Left);
	if ((_72031_m.get()._field_Right != nullptr)) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(",", 1));
		_211298bd1_expr(_self_, _72031_m.get()._field_Right);
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _2112931a3_traitSub(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca770e_TraitSubIdentExprModel> _73632_m) {
	_2112d6c0d_write(_self_.get()._field_oc, static__2112a148b_traitDecl(_73632_m.get()._field_Trt));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_21129895b_model(_self_, _73632_m.get()._field_Expr);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_2112d6c0d_write(_self_.get()._field_oc, static__2112a0e4c_func(_73632_m.get()._field_Method));
}



inline void _211293428_structureSub(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca7b2c_StructSubIdentExprModel> _74536_m) {
	_21129895b_model(_self_, _74536_m.get()._field_Expr.get()._field_Model);
	if ((_74536_m.get()._field_Field != nullptr)) {
		if ((_246d92585_Ptr(_74536_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_246d92321_Sptr(_74536_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_24267eb8a_Production))) {
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_211317238_locInfo(_self_.get()._field_oc, _74536_m.get()._field_Token);
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_2112d6c0d_write(_self_.get()._field_oc, static__2112a2019_field(_74536_m.get()._field_Field.get()._field_Decl));
	};
}



inline void _21129369d_commonIdent(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca81e3_CommonIdentExprModel> _76531_m) {
	_2112d6c0d_write(_self_.get()._field_oc, _76531_m.get()._field_Ident);
}



inline void _211293923_commonSub(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca83d0_CommonSubIdentExprModel> _76933_m) {
	_21129895b_model(_self_, _76933_m.get()._field_Expr);
	{
		
		if ((_246d92585_Ptr(_76933_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_213d23527:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_246d92321_Sptr(_76933_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_213d22889:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_24267eb8a_Production))) {
					_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_211317238_locInfo(_self_.get()._field_oc, _76933_m.get()._field_Token);
					_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_213d230d7:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_213d23071:;
	};
	_2112d6c0d_write(_self_.get()._field_oc, _76933_m.get()._field_Ident);
}



inline void _211293b98_array(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca8006_ArrayExprModel> _78829_m) {
	_2112d6c0d_write(_self_.get()._field_oc, static__211349dd6_array(_78829_m.get()._field_Kind));
	if ((_78829_m.get()._field_Elems.len() == 0LL)) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_78829_m.get()._field_Elems.len() == 2LL) && (_78829_m.get()._field_Elems[1LL] == nullptr))) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(", 1));
		_211298bd1_expr(_self_, _78829_m.get()._field_Elems[0LL]);
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("({", 2));
	_211290db5_args(_self_, _78829_m.get()._field_Elems);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _211293e1d_funcInsCommon(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246cabb42_FnIns> _81137_m) {
	_2112d6c0d_write(_self_.get()._field_oc, static__21134aea3_func(_81137_m));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(", 1));
	_211294193_funcIns(_self_, _81137_m);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _211294193_funcIns(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246cabb42_FnIns> _81831_m) {
	if (((_81831_m.get()._field_Decl != nullptr) && _81831_m.get()._field_Decl.get()._field_CppLinked)) {
		jule::Ptr<_2460dc858_Directive> _82017_d = _21134daaa_findDirective(_81831_m.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_82017_d != nullptr)) {
			_2112d6c0d_write(_self_.get()._field_oc, _211345684_concatAllParts(_82017_d.get()._field_Args));
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_2112d6c0d_write(_self_.get()._field_oc, static__2112a11e4_funcIns(_81831_m));
}



inline void _211294418_tuple(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca85bc_TupleExprModel> _82929_m) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _82929_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_213d31920:;
		if (it != expr.end()) {
			jule::I64 _83114_i = it - expr.begin();
			jule::Ptr<_246d5e398_Data> _83121_d = *it;
			{
				_211298bd1_expr(_self_, _83121_d.get()._field_Model);
				if (((_82929_m.get()._field_Datas.len() - _83114_i) > 1LL)) {
					_2112d6c0d_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_213d31920:;
			++it;
			_83114_i++;
			goto _iter_begin_213d31920;
		}
		_iter_end_213d31920:;
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _21129468d_newCall(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca8d70_BuiltinNewCallExprModel> _84031_m) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_2112d6c0d_write(_self_.get()._field_oc, static__21134b24a_kind(_84031_m.get()._field_Kind));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_84031_m.get()._field_Init != nullptr)) {
		_211298bd1_expr(_self_, _84031_m.get()._field_Init);
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _211294913_outCall(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca87a9_BuiltinOutCallExprModel> _85031_m) {
	if ((_85031_m.get()._field_Debug && _24267eb8a_Production)) {
		return;;
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_211298bd1_expr(_self_, _85031_m.get()._field_Expr);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _211294b88_outlnCall(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca8996_BuiltinOutlnCallExprModel> _85933_m) {
	if ((_85933_m.get()._field_Debug && _24267eb8a_Production)) {
		return;;
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_211298bd1_expr(_self_, _85933_m.get()._field_Expr);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _211294e0d_panicCall(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca905c_BuiltinPanicCallExprModel> _86833_m) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_211298bd1_expr(_self_, _86833_m.get()._field_Expr);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_211317238_locInfo(_self_.get()._field_oc, _86833_m.get()._field_Token);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _211295183_assertCall(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca9249_BuiltinAssertCallExprModel> _87634_m) {
	if (_24267eb8a_Production) {
		return;;
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_211298bd1_expr(_self_, _87634_m.get()._field_Expr);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_2112d6c0d_write(_self_.get()._field_oc, _211299dd0_cstrLit(static_cast<jule::Slice<jule::U8>>(_87634_m.get()._field_Log)));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_211317238_locInfo(_self_.get()._field_oc, _87634_m.get()._field_Token);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _211295408_errorCall(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246caa349_BuiltinErrorCallExprModel> _88933_m) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_24618a10e_IsVoid(_88933_m.get()._field_Func.get()._field_Decl.ptr())) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(", 22));
	} else {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_2112d6c0d_write(_self_.get()._field_oc, static__21134b24a_kind(_88933_m.get()._field_Func.get()._field_Result));
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(">(", 2));
	};
	_211298bd1_expr(_self_, _88933_m.get()._field_Err);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _21129567d_copyCall(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246caa15c_BuiltinCopyCallExprModel> _90232_m) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_21129895b_model(_self_, _90232_m.get()._field_Dest.get()._field_Model);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_246d920ac_Prim(_90232_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_21129895b_model(_self_, _90232_m.get()._field_Src.get()._field_Model);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_246d920ac_Prim(_90232_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _211295903_lenCall(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca9810_BuiltinLenCallExprModel> _91831_m) {
	_21129895b_model(_self_, _91831_m.get()._field_Expr.get()._field_Model);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(".len()", 6));
}



inline void _211295b78_capCall(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca99ec_BuiltinCapCallExprModel> _92331_m) {
	_21129895b_model(_self_, _92331_m.get()._field_Expr.get()._field_Model);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(".cap()", 6));
}



inline void _211295ded_deleteCall(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca78eb_BuiltinDeleteCallExprModel> _92834_m) {
	_21129895b_model(_self_, _92834_m.get()._field_Dest.get()._field_Model);
	if ((_92834_m.get()._field_Key != nullptr)) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(".del(", 5));
		_21129895b_model(_self_, _92834_m.get()._field_Key.get()._field_Model);
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _211296173_makeCallSlice(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca9436_BuiltinMakeCallExprModel>& _93938_m) {
	jule::Ptr<_246d98b63_Slc> _94017_slice = _246d93036_Slc(_93938_m.get()._field_Kind.ptr());;
	_2112d6c0d_write(_self_.get()._field_oc, static__21134b24a_kind(_93938_m.get()._field_Kind));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_211298bd1_expr(_self_, _93938_m.get()._field_Len);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if ((_93938_m.get()._field_Cap != nullptr)) {
		_211298bd1_expr(_self_, _93938_m.get()._field_Cap);
	} else {
		_211298bd1_expr(_self_, _93938_m.get()._field_Len);
	};
	if (_21134e1d7_shouldInitialized(_94017_slice.get()._field_Elem)) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_2112991cb_initExpr(_self_, _94017_slice.get()._field_Elem);
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _2112963e8_makeCallStr(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca9436_BuiltinMakeCallExprModel>& _95736_m) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_211298bd1_expr(_self_, _95736_m.get()._field_Len);
	if ((_95736_m.get()._field_Cap != nullptr)) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_211298bd1_expr(_self_, _95736_m.get()._field_Cap);
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _21129666d_makeCall(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca9436_BuiltinMakeCallExprModel> _96832_m) {
	if ((_246d93036_Slc(_96832_m.get()._field_Kind.ptr()) != nullptr)) {
		_211296173_makeCallSlice(_self_, _96832_m);
		return;;
	};
	_2112963e8_makeCallStr(_self_, _96832_m);
}



inline void _2112968e3_pushToSlice(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_2458b100b_PushToSliceExprModel> _97635_m) {
	jule::I64 _97713_n = _self_.get()._field_oc.get()._field_Obj.len();;
	_21129895b_model(_self_, _97635_m.get()._field_Dest);
	jule::Str _97913_dest = _self_.get()._field_oc.get()._field_Obj.slice(_97713_n);;
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_2112d6c0d_write(_self_.get()._field_oc, _97913_dest);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(",", 1));
	_2112d6c0d_write(_self_.get()._field_oc, _246ca2011_Itoa(static_cast<jule::I64>(_97635_m.get()._field_Elems.get()._field_Elems.len())));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _97635_m.get()._field_Elems.get()._field_Elems;
		auto it = expr.begin();
		_iter_begin_213d58161:;
		if (it != expr.end()) {
			jule::Any _98621_e = *it;
			{
				_2112d6c0d_write(_self_.get()._field_oc, _97913_dest);
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_21129895b_model(_self_, _98621_e);
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_213d58161:;
			++it;
			goto _iter_begin_213d58161;
		}
		_iter_end_213d58161:;
	};
}



inline void _211296b68_appendCall(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca9623_BuiltinAppendCallExprModel> _99534_m) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_21129895b_model(_self_, _99534_m.get()._field_Dest);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(",", 1));
	_21129895b_model(_self_, _99534_m.get()._field_Elements);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _211296ddd_cloneCall(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca8b83_BuiltinCloneCallExprModel> _100333_m) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_21129895b_model(_self_, _100333_m.get()._field_Expr);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _211297163_sizeof(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246caa536_SizeofExprModel> _100930_m) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_21129895b_model(_self_, _100930_m.get()._field_Expr);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _2112973d8_alignof(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246caa723_AlignofExprModel> _101531_m) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_21129895b_model(_self_, _101531_m.get()._field_Expr);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _2112976e6_runeLit(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246caa910_RuneExprModel> _102127_m) {
	if ((_102127_m.get()._field_Code <= 127LL)) {
		jule::Str _102321_b = _211299819_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_102127_m.get()._field_Code)));;
		if ((_102321_b == jule::Str("'", 1))) {
			_102321_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _102321_b) + jule::Str("'", 1));
	};
	return _21129a485_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_102127_m.get()._field_Code)));
}



inline void _21129796b_structureStatic(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246ca7d19_StructStaticIdentExprModel> _103239_m) {
	_2112d6c0d_write(_self_.get()._field_oc, static__2112a11e4_funcIns(_103239_m.get()._field_Method));
}



inline void _211297be1_integratedToStr(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246caaaec_IntegratedToStrExprModel> _103639_m) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_21129895b_model(_self_, _103639_m.get()._field_Expr);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _211297e66_backendEmit(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246caacd9_BackendEmitExprModel> _104235_m) {
	if ((_104235_m.get()._field_Exprs.len() == 0LL)) {
		_2112d6c0d_write(_self_.get()._field_oc, _104235_m.get()._field_Code);
		return;;
	};
	jule::I64 _104713_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _104817_args = jule::Slice<jule::Any>::alloc(_104235_m.get()._field_Exprs.len(), _104235_m.get()._field_Exprs.len());;
	{
		auto &expr = _104235_m.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_213d66ba8:;
		if (it != expr.end()) {
			jule::I64 _104914_i = it - expr.begin();
			jule::Any _104921_expr = *it;
			{
				_211298bd1_expr(_self_, _104921_expr);
				_104817_args[_104914_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_104713_n));
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL,_104713_n);
			}
			_iter_next_213d66ba8:;
			++it;
			_104914_i++;
			goto _iter_begin_213d66ba8;
		}
		_iter_end_213d66ba8:;
	};
	_2112d6c0d_write(_self_.get()._field_oc, _246e4a4c8_Format(_104235_m.get()._field_Code,jule::Any(_104817_args)));
}



inline void _2112981db_free(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246caaec6_FreeExprModel> _105728_m) {
	_211298bd1_expr(_self_, _105728_m.get()._field_Expr);
	if (_24267e45e_RC) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _211298461_mutSlicing(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_245d606b9_MutSlicingExprModel> _106634_m) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(", 1));
	_21129895b_model(_self_, _106634_m.get()._field_Expr);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_24267eb8a_Production))) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_211317238_locInfo(_self_.get()._field_oc, _106634_m.get()._field_Token);
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_211298bd1_expr(_self_, _106634_m.get()._field_Left);
	if ((_106634_m.get()._field_Right != nullptr)) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(",", 1));
		_211298bd1_expr(_self_, _106634_m.get()._field_Right);
	};
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _2112986d6_strInsertBegin(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_2449dbc09_StrInsertBeginExprModel> _108338_m) {
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(", 1));
	_21129895b_model(_self_, _108338_m.get()._field_Dest);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_21129895b_model(_self_, _108338_m.get()._field_Expr);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _21129895b_model(jule::Ptr<_21067c527_exprCoder> _self_, jule::Any _109129_m) {
	{
		auto &_match_expr{ _109129_m };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_213d71c6d:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, _109129_m.operator jule::Str());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246d8ee9a_TypeKind>>()) {
			_case_begin_213d71696:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, static__21134b24a_kind(_109129_m.operator jule::Ptr<_246d8ee9a_TypeKind>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2461e4872_Const>>()) {
			_case_begin_213d71971:;
			{
				_21067db77_constant(_self_, _109129_m.operator jule::Ptr<_2461e4872_Const>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246d16372_Var>>()) {
			_case_begin_213d719d7:;
			{
				_21128edd6_var(_self_, _109129_m.operator jule::Ptr<_246d16372_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246142319_StructIns>>()) {
			_case_begin_213d71a4d:;
			{
				_21129014a_structureIns(_self_, _109129_m.operator jule::Ptr<_246142319_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cabb42_FnIns>>()) {
			_case_begin_213d71ab4:;
			{
				_211293e1d_funcInsCommon(_self_, _109129_m.operator jule::Ptr<_246cabb42_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24499b37d_UnsafeBinopExprModel>>()) {
			_case_begin_213d726b9:;
			{
				_21067e2b5_unsafeBinary(_self_, _109129_m.operator jule::Ptr<_24499b37d_UnsafeBinopExprModel>().get()._field_Node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca5c18_BinopExprModel>>()) {
			_case_begin_213d72730:;
			{
				_21067e53a_binary(_self_, _109129_m.operator jule::Ptr<_246ca5c18_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca5e05_UnaryExprModel>>()) {
			_case_begin_213d72796:;
			{
				_2112903c0_unary(_self_, _109129_m.operator jule::Ptr<_246ca5e05_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca62ce_StructLitExprModel>>()) {
			_case_begin_213d7280c:;
			{
				_211290645_structureLit(_self_, _109129_m.operator jule::Ptr<_246ca62ce_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca64bb_AllocStructLitExprModel>>()) {
			_case_begin_213d72873:;
			{
				_2112908ba_allocStructure(_self_, _109129_m.operator jule::Ptr<_246ca64bb_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca66a8_CastingExprModel>>()) {
			_case_begin_213d728d9:;
			{
				_211290b40_casting(_self_, _109129_m.operator jule::Ptr<_246ca66a8_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca6895_FnCallExprModel>>()) {
			_case_begin_213d72950:;
			{
				_211291e3d_funcCall(_self_, _109129_m.operator jule::Ptr<_246ca6895_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca6a82_SliceExprModel>>()) {
			_case_begin_213d729b6:;
			{
				_2112921b3_slice(_self_, _109129_m.operator jule::Ptr<_246ca6a82_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca8006_ArrayExprModel>>()) {
			_case_begin_213d72a2c:;
			{
				_211293b98_array(_self_, _109129_m.operator jule::Ptr<_246ca8006_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2454bc9e7_UnsafeIndexingExprModel>>()) {
			_case_begin_213d72aa4:;
			{
				_2112926ad_unsafeIndexing(_self_, _109129_m.operator jule::Ptr<_2454bc9e7_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca6c6e_IndexingExprModel>>()) {
			_case_begin_213d72b2b:;
			{
				_211292438_indexing(_self_, _109129_m.operator jule::Ptr<_246ca6c6e_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca6e5b_AnonFnExprModel>>()) {
			_case_begin_213d72ba3:;
			{
				_211292933_anonFunc(_self_, _109129_m.operator jule::Ptr<_246ca6e5b_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca7335_MapExprModel>>()) {
			_case_begin_213d72c2a:;
			{
				_211292ba8_mapExpr(_self_, _109129_m.operator jule::Ptr<_246ca7335_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca7522_SlicingExprModel>>()) {
			_case_begin_213d72ca2:;
			{
				_211292e2d_slicing(_self_, _109129_m.operator jule::Ptr<_246ca7522_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca770e_TraitSubIdentExprModel>>()) {
			_case_begin_213d72d29:;
			{
				_2112931a3_traitSub(_self_, _109129_m.operator jule::Ptr<_246ca770e_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca7b2c_StructSubIdentExprModel>>()) {
			_case_begin_213d72da1:;
			{
				_211293428_structureSub(_self_, _109129_m.operator jule::Ptr<_246ca7b2c_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca81e3_CommonIdentExprModel>>()) {
			_case_begin_213d72e28:;
			{
				_21129369d_commonIdent(_self_, _109129_m.operator jule::Ptr<_246ca81e3_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca83d0_CommonSubIdentExprModel>>()) {
			_case_begin_213d72ea0:;
			{
				_211293923_commonSub(_self_, _109129_m.operator jule::Ptr<_246ca83d0_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca85bc_TupleExprModel>>()) {
			_case_begin_213d73027:;
			{
				_211294418_tuple(_self_, _109129_m.operator jule::Ptr<_246ca85bc_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca87a9_BuiltinOutCallExprModel>>()) {
			_case_begin_213d7309e:;
			{
				_211294913_outCall(_self_, _109129_m.operator jule::Ptr<_246ca87a9_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca8996_BuiltinOutlnCallExprModel>>()) {
			_case_begin_213d73126:;
			{
				_211294b88_outlnCall(_self_, _109129_m.operator jule::Ptr<_246ca8996_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca8d70_BuiltinNewCallExprModel>>()) {
			_case_begin_213d7319d:;
			{
				_21129468d_newCall(_self_, _109129_m.operator jule::Ptr<_246ca8d70_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca905c_BuiltinPanicCallExprModel>>()) {
			_case_begin_213d73225:;
			{
				_211294e0d_panicCall(_self_, _109129_m.operator jule::Ptr<_246ca905c_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca9249_BuiltinAssertCallExprModel>>()) {
			_case_begin_213d7329c:;
			{
				_211295183_assertCall(_self_, _109129_m.operator jule::Ptr<_246ca9249_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246caa349_BuiltinErrorCallExprModel>>()) {
			_case_begin_213d73324:;
			{
				_211295408_errorCall(_self_, _109129_m.operator jule::Ptr<_246caa349_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca9436_BuiltinMakeCallExprModel>>()) {
			_case_begin_213d7339b:;
			{
				_21129666d_makeCall(_self_, _109129_m.operator jule::Ptr<_246ca9436_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca9623_BuiltinAppendCallExprModel>>()) {
			_case_begin_213d73423:;
			{
				_211296b68_appendCall(_self_, _109129_m.operator jule::Ptr<_246ca9623_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca8b83_BuiltinCloneCallExprModel>>()) {
			_case_begin_213d7349a:;
			{
				_211296ddd_cloneCall(_self_, _109129_m.operator jule::Ptr<_246ca8b83_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246caa15c_BuiltinCopyCallExprModel>>()) {
			_case_begin_213d73522:;
			{
				_21129567d_copyCall(_self_, _109129_m.operator jule::Ptr<_246caa15c_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca9810_BuiltinLenCallExprModel>>()) {
			_case_begin_213d73599:;
			{
				_211295903_lenCall(_self_, _109129_m.operator jule::Ptr<_246ca9810_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca99ec_BuiltinCapCallExprModel>>()) {
			_case_begin_213d73621:;
			{
				_211295b78_capCall(_self_, _109129_m.operator jule::Ptr<_246ca99ec_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca78eb_BuiltinDeleteCallExprModel>>()) {
			_case_begin_213d73698:;
			{
				_211295ded_deleteCall(_self_, _109129_m.operator jule::Ptr<_246ca78eb_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246caa536_SizeofExprModel>>()) {
			_case_begin_213d73720:;
			{
				_211297163_sizeof(_self_, _109129_m.operator jule::Ptr<_246caa536_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246caa723_AlignofExprModel>>()) {
			_case_begin_213d73797:;
			{
				_2112973d8_alignof(_self_, _109129_m.operator jule::Ptr<_246caa723_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246caa910_RuneExprModel>>()) {
			_case_begin_213d7381e:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, _2112976e6_runeLit(_self_, _109129_m.operator jule::Ptr<_246caa910_RuneExprModel>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca7d19_StructStaticIdentExprModel>>()) {
			_case_begin_213d73896:;
			{
				_21129796b_structureStatic(_self_, _109129_m.operator jule::Ptr<_246ca7d19_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246caaaec_IntegratedToStrExprModel>>()) {
			_case_begin_213d7391d:;
			{
				_211297be1_integratedToStr(_self_, _109129_m.operator jule::Ptr<_246caaaec_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246caacd9_BackendEmitExprModel>>()) {
			_case_begin_213d73995:;
			{
				_211297e66_backendEmit(_self_, _109129_m.operator jule::Ptr<_246caacd9_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246caaec6_FreeExprModel>>()) {
			_case_begin_213d73a1c:;
			{
				_2112981db_free(_self_, _109129_m.operator jule::Ptr<_246caaec6_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_245d606b9_MutSlicingExprModel>>()) {
			_case_begin_213d73a94:;
			{
				_211298461_mutSlicing(_self_, _109129_m.operator jule::Ptr<_245d606b9_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2449dbc09_StrInsertBeginExprModel>>()) {
			_case_begin_213d73b1b:;
			{
				_2112986d6_strInsertBegin(_self_, _109129_m.operator jule::Ptr<_2449dbc09_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_213d7182d:;
			{
				_2112d6c0d_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_213d71740:;
	};
}



inline void _211298bd1_expr(jule::Ptr<_21067c527_exprCoder> _self_, jule::Any _119228_e) {
	_21129895b_model(_self_, _119228_e);
}



inline void _211298e56_val(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246d60421_Value> _119627_v) {
	if (_246d5ec5b_IsConst(_119627_v.get()._field_Data.ptr())) {
		_21067db77_constant(_self_, _119627_v.get()._field_Data.get()._field_Constant);
		return;;
	};
	_211298bd1_expr(_self_, _119627_v.get()._field_Data.get()._field_Model);
}



inline void _2112991cb_initExpr(jule::Ptr<_21067c527_exprCoder> _self_, jule::Ptr<_246d8ee9a_TypeKind> _120432_t) {
	if (_246d9160b_NilCompatible(_120432_t.ptr())) {
		if ((_246d92585_Ptr(_120432_t.ptr()) != nullptr)) {
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		} else {
			_2112d6c0d_write(_self_.get()._field_oc, static__21134b24a_kind(_120432_t));
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_246cb60e1_Enum> _121417_enm = _246d927e9_Enum(_120432_t.ptr());;
	if ((_121417_enm != nullptr)) {
		_211298e56_val(_self_, _121417_enm.get()._field_Items[0LL].get()._field_Value);
		return;;
	};
	jule::Ptr<_246d94972_Prim> _121913_prim = _246d920ac_Prim(_120432_t.ptr());;
	if ((_121913_prim != nullptr)) {
		if (_246ca3c5a_IsNum(_121913_prim.get()._field_Kind)) {
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str("0", 1));
		} else if (_246d97942_IsBool(_121913_prim.ptr())) {
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str("false", 5));
		} else if (_246d97ba6_IsStr(_121913_prim.ptr())) {
			_2112d6c0d_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		};
		return;;
	};
	if ((_246d92cc2_Arr(_120432_t.ptr()) != nullptr)) {
		jule::Ptr<_246d9ad0d_Arr> _123121_arr = _246d92cc2_Arr(_120432_t.ptr());;
		_2112d6c0d_write(_self_.get()._field_oc, static__21134b24a_kind(_120432_t));
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(", 1));
		_2112991cb_initExpr(_self_, _123121_arr.get()._field_Elem);
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	jule::Ptr<_246142319_StructIns> _123817_s = _246d9350e_Struct(_120432_t.ptr());;
	if ((((_123817_s != nullptr) && _123817_s.get()._field_Decl.get()._field_CppLinked) && (_21134daaa_findDirective(_123817_s.get()._field_Decl.get()._field_Directives,jule::Str("typedef", 7)) == nullptr))) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(", 1));
		_2112d6c0d_write(_self_.get()._field_oc, static__21134b24a_kind(_120432_t));
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("){}", 3));
		return;;
	};
	_2112d6c0d_write(_self_.get()._field_oc, static__21134b24a_kind(_120432_t));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _21067c527_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__21129b9d6_cloneFuncDecl(jule::Ptr<_246117c3a_Struct>& _1030_s) {
	jule::Str _1117_obj = static__211349897_structure(_1030_s);;
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__21129bc7d_cloneFuncDef(jule::Ptr<_246117c3a_Struct>& _1629_s) {
	jule::Str _1717_obj = static__211349897_structure(_1629_s);;
	_1717_obj+=(jule::Str(" ", 1) + _1717_obj);
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _21129b6d9_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21129cb5d_TestCoder> static__21129d0d1_New(jule::Ptr<_2113423d9_ObjectCoder>& _2824_oc) {
	return jule::new_ptr<_21129cb5d_TestCoder>(_21129cb5d_TestCoder{._field_oc=_2824_oc});
}



inline jule::Ptr<_246ce04c2_ImportInfo> _21129d345_findTestingPackage(jule::Ptr<_21129cb5d_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_213d9b2e7:;
		if (it != expr.end()) {
			jule::Ptr<_246ce04c2_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_LinkPath == jule::Str("std::testing", 12))) {
					return _3521_imp;
				};
			}
			_iter_next_213d9b2e7:;
			++it;
			goto _iter_begin_213d9b2e7;
		}
		_iter_end_213d9b2e7:;
	};
	return nullptr;
}



inline void _21129d5ba_appendTest(jule::Ptr<_21129cb5d_TestCoder> _self_, jule::Ptr<_246cabb42_FnIns> _4334_f) {
	_2112a75d5_indent(_self_.get()._field_oc);
	_21129dc80_callTmReset(_self_);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_2112d6c0d_write(_self_.get()._field_oc, _211299dd0_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, static__2112a11e4_funcIns(_4334_f));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _21129d840_appendPackageTests(jule::Ptr<_21129cb5d_TestCoder> _self_, jule::Ptr<_246ce342b_Package>& _6043_p) {
	{
		auto &expr = _6043_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_213da283c:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_213da3211:;
					if (it != expr.end()) {
						jule::Ptr<_246cab768_Fn> _6225_f = *it;
						{
							if (_21134de40_hasDirective(_6225_f.get()._field_Directives,jule::Str("test", 4))) {
								_21129d5ba_appendTest(_self_, _6225_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_213da3211:;
						++it;
						goto _iter_begin_213da3211;
					}
					_iter_end_213da3211:;
				};
			}
			_iter_next_213da283c:;
			++it;
			goto _iter_begin_213da283c;
		}
		_iter_end_213da283c:;
	};
}



inline jule::Bool _21129daa4_readyTestingPackage(jule::Ptr<_21129cb5d_TestCoder> _self_) {
	jule::Ptr<_246ce04c2_ImportInfo> _7117_p = _21129d345_findTestingPackage(_self_);;
	if ((_7117_p == nullptr)) {
		return false;
	};
	_self_.get()._field_t=_246ce1913_FindStruct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_24611b4ad_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tmFailed=_24611b4ad_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6),false);
	_self_.get()._field_tmSkipped=_24611b4ad_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7),false);
	return true;
}



inline void _21129dc80_callTmReset(jule::Ptr<_21129cb5d_TestCoder> _self_) {
	_2112d6c0d_write(_self_.get()._field_oc, static__2112a0e4c_func(_self_.get()._field_tmReset));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _21129de5b_callTmFailed(jule::Ptr<_21129cb5d_TestCoder> _self_) {
	_2112d6c0d_write(_self_.get()._field_oc, static__2112a0e4c_func(_self_.get()._field_tmFailed));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _21129e137_callTmSkipped(jule::Ptr<_21129cb5d_TestCoder> _self_) {
	_2112d6c0d_write(_self_.get()._field_oc, static__2112a0e4c_func(_self_.get()._field_tmSkipped));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _21129e313_Serialize(jule::Ptr<_21129cb5d_TestCoder> _self_) {
	_2113450bd_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_211344e8b_end(_self_.get()._field_oc);
	});;
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_211319ba8_addIndent(_self_.get()._field_oc);
	_2112a75d5_indent(_self_.get()._field_oc);
	if ((!(_21129daa4_readyTestingPackage(_self_)))) {
		_2112d6c0d_write(_self_.get()._field_oc, jule::Str("}", 1));
		_21131a58d_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_2112d6c0d_write(_self_.get()._field_oc, static__2113479a5_asSptr(static__211349b3e_structureIns(_self_.get()._field_t)));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_2112d6c0d_write(_self_.get()._field_oc, static__211349b3e_structureIns(_self_.get()._field_t));
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_211319ba8_addIndent(_self_.get()._field_oc);
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_21129de5b_callTmFailed(_self_);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_21129e137_callTmSkipped(_self_);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_21131a58d_doneIndent(_self_.get()._field_oc);
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_21129d840_appendPackageTests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_Main);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_21131a58d_doneIndent(_self_.get()._field_oc);
	_2112a75d5_indent(_self_.get()._field_oc);
	_2112d6c0d_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _21129cb5d_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__2112a07ba_toOut(jule::Str& _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(0LL, 40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_246ca1c9c_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)),15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_3322_ident;
		return _3521_obj;
	};
	jule::Str _4217_obj = jule::Str::alloc(0LL, (_3322_ident.len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=_3322_ident;
	return _4217_obj;
}



inline jule::Str static__2112a0ba5_toLocal(jule::I64 _5423_row, jule::I64 _5433_col, jule::Str& _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(0LL, 40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_246ca2011_Itoa(_5423_row);
	_5517_obj+=_246ca2011_Itoa(_5433_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_5444_ident;
	return _5517_obj;
}



inline jule::Str static__2112a0e4c_func(jule::Ptr<_246cab768_Fn>& _6521_f) {
	{
		
		if (_6521_f.get()._field_CppLinked) {
			_case_begin_213dbc56b:;
			{
				return _6521_f.get()._field_Ident;
			}
		}
		else if ((_6521_f.get()._field_Ident == jule::Str("main", 4))) {
			_case_begin_213dbc989:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_24618a829_IsMethod(_6521_f.ptr())) {
			_case_begin_213dbca00:;
			{
				jule::Str _7221_obj = static__2112a07ba_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
				if (_6521_f.get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;
				};
				return _7221_obj;
			}
		}
		else {
			_case_begin_213dbbca7:;
			{
				return static__2112a07ba_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));
			}
		}
		_match_end_213dbbba8:;
	};
}



inline jule::Str static__2112a11e4_funcIns(jule::Ptr<_246cabb42_FnIns>& _8424_f) {
	if (_246cabd2e_IsBuiltin(_8424_f.ptr())) {
		return (jule::Str("jule::", 6) + _8424_f.get()._field_Decl.get()._field_Ident);
	};
	if ((_8424_f.get()._field_Decl.get()._field_CppLinked || (_8424_f.get()._field_Generics.len() == 0LL))) {
		return static__2112a0e4c_func(_8424_f.get()._field_Decl);
	};
	return static__2112a07ba_toOut(_8424_f.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_8424_f)));
}



inline jule::Str static__2112a148b_traitDecl(jule::Ptr<_246cb3e9b_Trait> _9525_t) {
	if (_246cb4a18_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);
	};
	return static__2112a07ba_toOut(_9525_t.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));
}



inline jule::Str static__2112a1733_param(jule::Ptr<_246cab57b_Param>& _10322_p) {
	if ((_244971771_IsAnonIdent(_10322_p.get()._field_Ident) || _2449714c9_IsIgnoreIdent(_10322_p.get()._field_Ident))) {
		return jule::Str();
	};
	if (_24617a220_IsSelf(_10322_p.ptr())) {
		return jule::Str("_self_", 6);
	};
	if ((_10322_p.get()._field_Token == nullptr)) {
		return static__2112a0ba5_toLocal(0LL,0LL,_10322_p.get()._field_Ident);
	};
	return static__2112a0ba5_toLocal(_10322_p.get()._field_Token.get()._field_Row,_10322_p.get()._field_Token.get()._field_Column,_10322_p.get()._field_Ident);
}



inline jule::Str static__2112a19ca_structure(jule::Ptr<_246117c3a_Struct>& _11726_s) {
	if (_11726_s.get()._field_CppLinked) {
		if (_21134de40_hasDirective(_11726_s.get()._field_Directives,jule::Str("typedef", 7))) {
			return _11726_s.get()._field_Ident;
		};
		return (jule::Str("struct ", 7) + _11726_s.get()._field_Ident);
	};
	return static__2112a07ba_toOut(_11726_s.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11726_s)));
}



inline jule::Str static__2112a1c72_structureIns(jule::Ptr<_246142319_StructIns>& _12829_s) {
	if ((_12829_s.get()._field_Decl.get()._field_CppLinked || (_12829_s.get()._field_Generics.len() == 0LL))) {
		return static__2112a19ca_structure(_12829_s.get()._field_Decl);
	};
	return static__2112a07ba_toOut(_12829_s.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12829_s)));
}



inline jule::Str static__2112a2019_field(jule::Ptr<_246108841_Field>& _13622_f) {
	if (_13622_f.get()._field_Owner.get()._field_CppLinked) {
		return _13622_f.get()._field_Ident;
	};
	return (jule::Str("_field_", 7) + _13622_f.get()._field_Ident);
}



inline jule::Str static__2112a22b1_var(jule::Ptr<_246d16372_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_CppLinked) {
			_case_begin_213dc8302:;
			{
				return _14423_v.get()._field_Ident;
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("error", 5))) {
			_case_begin_213dc8720:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("self", 4))) {
			_case_begin_213dc8786:;
			{
				if ((_246d92321_Sptr(_14423_v.get()._field_Kind.get()._field_Kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				};
				return jule::Str("_self_", 6);
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_213dc7a3d:;
			{
				return static__2112a0ba5_toLocal(_14423_v.get()._field_Token.get()._field_Row,_14423_v.get()._field_Token.get()._field_Column,_14423_v.get()._field_Ident);
			}
		}
		else {
			_case_begin_213dc79c7:;
			{
				return static__2112a07ba_toOut(_14423_v.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));
			}
		}
		_match_end_213dc78ea:;
	};
}



inline jule::Str static__2112a2558_iterBegin(jule::Uintptr _16325_it) {
	jule::Str _16417_obj = jule::Str::alloc(0LL, 30LL);;
	_16417_obj+=jule::Str("_iter_begin_", 12);
	_16417_obj+=_246ca1c9c_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16325_it)),15LL);
	return _16417_obj;
}



inline jule::Str static__2112a2800_iterEnd(jule::Uintptr _17123_it) {
	jule::Str _17217_obj = jule::Str::alloc(0LL, 30LL);;
	_17217_obj+=jule::Str("_iter_end_", 10);
	_17217_obj+=_246ca1c9c_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17123_it)),15LL);
	return _17217_obj;
}



inline jule::Str static__2112a2a97_iterNext(jule::Uintptr _17924_it) {
	jule::Str _18017_obj = jule::Str::alloc(0LL, 30LL);;
	_18017_obj+=jule::Str("_iter_next_", 11);
	_18017_obj+=_246ca1c9c_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17924_it)),15LL);
	return _18017_obj;
}



inline jule::Str static__2112a2d3e_label(jule::Str& _18722_ident) {
	jule::Str _18817_obj = jule::Str::alloc(0LL, 30LL);;
	_18817_obj+=jule::Str("_julec_label_", 13);
	_18817_obj+=_18722_ident;
	return _18817_obj;
}



inline jule::Str static__2112a30d6_matchEnd(jule::Uintptr _19524_m) {
	jule::Str _19617_obj = jule::Str::alloc(0LL, 30LL);;
	_19617_obj+=jule::Str("_match_end_", 11);
	_19617_obj+=_246ca1c9c_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19524_m)),15LL);
	return _19617_obj;
}



inline jule::Str static__2112a337d_caseBegin(jule::Uintptr _20325_c) {
	jule::Str _20417_obj = jule::Str::alloc(0LL, 30LL);;
	_20417_obj+=jule::Str("_case_begin_", 12);
	_20417_obj+=_246ca1c9c_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20325_c)),15LL);
	return _20417_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _2112a02ae_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2112a810d_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2113421ec_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _211346663_Str(_211346399_customType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _211346971_Equals(jule::Ptr<_211346399_customType> _self_, jule::Ptr<_246d8ee9a_TypeKind> _3922_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _211346399_customType _Src) {
	_Stream << _211346663_Str(&_Src);
	return _Stream;
}



inline jule::Str static__2113471be_toType(jule::Str _6026_id) {
	if ((_6026_id != jule::Str("uintptr", 7))) {
		_6026_id=_2462d20d0_RealKindOf(_6026_id);
	};
	if (((97LL <= _6026_id[0LL]) && (_6026_id[0LL] <= 122LLU))) {
		_6026_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6026_id);
}



inline jule::Str static__211347466_prim(jule::Ptr<_246d94972_Prim> _7120_p) {
	return static__2113471be_toType(_246d94cd5_Str(_7120_p.ptr()));
}



inline jule::Str static__21134770d_tuple(jule::Ptr<_246d996e1_Tuple> _7625_t) {
	jule::Str _7717_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _7625_t.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_213ebe4e7:;
		if (it != expr.end()) {
			jule::Ptr<_246d8ee9a_TypeKind> _7821_tk = *it;
			{
				_7717_obj+=static__21134b24a_kind(_7821_tk);
				_7717_obj+=jule::Str(",", 1);
			}
			_iter_next_213ebe4e7:;
			++it;
			goto _iter_begin_213ebe4e7;
		}
		_iter_end_213ebe4e7:;
	};
	(_7717_obj).mut_slice(0LL,(_7717_obj.len() - 1LL));;
	_7717_obj+=jule::Str(">", 1);
	return _7717_obj;
}



inline jule::Str static__2113479a5_asSptr(jule::Str _8822_elem) {
	jule::Str _8917_obj = jule::Str("jule::Ptr<", 10);;
	_8917_obj+=_8822_elem;
	_8917_obj+=jule::Str(">", 1);
	return _8917_obj;
}



inline jule::Str static__211347c4c_asPtr(jule::Str _9621_elem) {
	return (_9621_elem + jule::Str("*", 1));
}



inline jule::Str static__211347ee4_sptr(jule::Ptr<_246d98206_Sptr> _10124_sptr) {
	return static__2113479a5_asSptr(static__21134b24a_kind(_10124_sptr.get()._field_Elem));
}



inline jule::Str static__21134828b_ptr(jule::Ptr<_246d9b76a_Ptr> _10623_p) {
	;
	if (_246d9c23d_IsUnsafe(_10623_p.ptr())) {
		return jule::Str("void*", 5);
	};
	jule::Str _11117_elem = static__21134b24a_kind(_10623_p.get()._field_Elem);;
	_11117_elem+=jule::Str("*", 1);
	return _11117_elem;
}



inline jule::Str static__211348533_enumDecl(jule::Ptr<_246cb60e1_Enum> _11728_e) {
	return static__21134b24a_kind(_11728_e.get()._field_Kind.get()._field_Kind);
}



inline jule::Str static__2113487ca_typeEnumDecl(jule::Ptr<_246cb76db_TypeEnum> _12232_e) {
	return jule::Str("jule::Any", 9);
}



inline jule::Str static__211348a72_asSlice(jule::Ptr<_246d8ee9a_TypeKind> _12627_elem) {
	jule::Str _12717_obj = jule::Str("jule::Slice<", 12);;
	_12717_obj+=static__21134b24a_kind(_12627_elem);
	_12717_obj+=jule::Str(">", 1);
	return _12717_obj;
}



inline jule::Str static__211348d19_slice(jule::Ptr<_246d98b63_Slc> _13425_s) {
	return static__211348a72_asSlice(_13425_s.get()._field_Elem);
}



inline jule::Str static__2113490b1_mapType(jule::Ptr<_246d9a219_Map> _13927_m) {
	jule::Str _14017_obj = jule::Str("jule::Map<", 10);;
	_14017_obj+=static__21134b24a_kind(_13927_m.get()._field_Key);
	_14017_obj+=jule::Str(",", 1);
	_14017_obj+=static__21134b24a_kind(_13927_m.get()._field_Val);
	_14017_obj+=jule::Str(">", 1);
	return _14017_obj;
}



inline jule::Str static__211349358_traitIdent(jule::Str _14826_ident) {
	jule::Str _14917_obj = jule::Str("jule::Trait<", 12);;
	_14917_obj+=_14826_ident;
	_14917_obj+=jule::Str(">", 1);
	return _14917_obj;
}



inline jule::Str static__211349600_traitDecl(jule::Ptr<_246cb3e9b_Trait> _15625_t) {
	return static__211349358_traitIdent(static__2112a148b_traitDecl(_15625_t));
}



inline jule::Str static__211349897_structure(jule::Ptr<_246117c3a_Struct> _16125_s) {
	jule::Str _16217_rep = jule::Str();;
	if ((_16125_s.get()._field_CppLinked && (!(_21134de40_hasDirective(_16125_s.get()._field_Directives,jule::Str("typedef", 7)))))) {
		_16217_rep+=jule::Str("struct ", 7);
	};
	_16217_rep+=static__2112a19ca_structure(_16125_s);
	return _16217_rep;
}



inline jule::Str static__211349b3e_structureIns(jule::Ptr<_246142319_StructIns> _17132_s) {
	if (_17132_s.get()._field_Decl.get()._field_CppLinked) {
		jule::Str _17321_ident = static__2112a1c72_structureIns(_17132_s);;
		if ((_17132_s.get()._field_Generics.len() > 0LL)) {
			_17321_ident+=jule::Str("<", 1);
			{
				auto &expr = _17132_s.get()._field_Generics;
				auto it = expr.begin();
				_iter_begin_213eca008:;
				if (it != expr.end()) {
					jule::Ptr<_246d8d76d_InsGeneric> _17629_g = *it;
					{
						_17321_ident+=static__21134b24a_kind(_17629_g.get()._field_Kind);
						_17321_ident+=jule::Str(",", 1);
					}
					_iter_next_213eca008:;
					++it;
					goto _iter_begin_213eca008;
				}
				_iter_end_213eca008:;
			};
			(_17321_ident).mut_slice(0LL,(_17321_ident.len() - 1LL));;
			_17321_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_2460dc858_Directive> _18317_d = _21134daaa_findDirective(_17132_s.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_18317_d != nullptr)) {
			(_17321_ident).buffer.insert(0, ((_211345684_concatAllParts(_18317_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _17321_ident;
	};
	return static__2112a1c72_structureIns(_17132_s);
}



inline jule::Str static__211349dd6_array(jule::Ptr<_246d9ad0d_Arr> _19325_a) {
	jule::Str _19417_obj = jule::Str("jule::Array<", 12);;
	_19417_obj+=static__21134b24a_kind(_19325_a.get()._field_Elem);
	_19417_obj+=jule::Str(",", 1);
	_19417_obj+=_246ca2011_Itoa(_19325_a.get()._field_N);
	_19417_obj+=jule::Str(">", 1);
	return _19417_obj;
}



inline jule::Str static__21134a425_paramIns(jule::Ptr<_246cab955_ParamIns>& _21929_p) {
	jule::Str _22017_obj = jule::Str();;
	if (_21929_p.get()._field_Decl.get()._field_Variadic) {
		_22017_obj+=jule::Str("jule::Slice<", 12);
		_22017_obj+=static__21134b24a_kind(_21929_p.get()._field_Kind);
		_22017_obj+=jule::Str(">", 1);
	} else {
		_22017_obj+=static__21134b24a_kind(_21929_p.get()._field_Kind);
	};
	if (_21929_p.get()._field_Decl.get()._field_Reference) {
		_22017_obj+=jule::Str("&", 1);
	};
	return _22017_obj;
}



inline jule::Str static__21134a964_funcInsResult(jule::Ptr<_246cabb42_FnIns>& _24934_f) {
	if (_24618a10e_IsVoid(_24934_f.get()._field_Decl.ptr())) {
		if (_24934_f.get()._field_Decl.get()._field_Exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		};
		return jule::Str("void", 4);
	};
	if (_24934_f.get()._field_Decl.get()._field_Exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__21134b24a_kind(_24934_f.get()._field_Result)) + jule::Str(">", 1));
	};
	return static__21134b24a_kind(_24934_f.get()._field_Result);
}



inline jule::Str static__21134ac0b_anonFunc(jule::Ptr<_246cabb42_FnIns> _26228_f) {
	jule::Str _26317_decl = static__21134a964_funcInsResult(_26228_f);;
	_26317_decl+=jule::Str("(", 1);
	if ((_26228_f.get()._field_Params.len() > 0LL)) {
		{
			auto &expr = _26228_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_213ed73ab:;
			if (it != expr.end()) {
				jule::Ptr<_246cab955_ParamIns> _26625_param = *it;
				{
					if (_24617a220_IsSelf(_26625_param.get()._field_Decl.ptr())) {
						goto _iter_next_213ed73ab;
					};
					_26317_decl+=static__21134a425_paramIns(_26625_param);
					_26317_decl+=jule::Str(",", 1);
				}
				_iter_next_213ed73ab:;
				++it;
				goto _iter_begin_213ed73ab;
			}
			_iter_end_213ed73ab:;
		};
		(_26317_decl).mut_slice(0LL,(_26317_decl.len() - 1LL));;
	} else {
		_26317_decl+=jule::Str("void", 4);
	};
	_26317_decl+=jule::Str(")", 1);
	return _26317_decl;
}



inline jule::Str static__21134aea3_func(jule::Ptr<_246cabb42_FnIns> _28224_f) {
	jule::Str _28317_obj = jule::Str("jule::Fn<", 9);;
	_28317_obj+=static__21134ac0b_anonFunc(_28224_f);
	_28317_obj+=jule::Str(">", 1);
	return _28317_obj;
}



inline jule::Str static__21134b24a_kind(jule::Ptr<_246d8ee9a_TypeKind> _29024_k) {
	{
		
		if (_246d90b5a_CppLinked(_29024_k.ptr())) {
			_case_begin_213eda29e:;
			{
				return _29024_k.get()._field_CppIdent;
			}
		}
		else if ((_246d920ac_Prim(_29024_k.ptr()) != nullptr)) {
			_case_begin_213eda315:;
			{
				return static__211347466_prim(_246d920ac_Prim(_29024_k.ptr()));
			}
		}
		else if ((_246d93c4b_Tup(_29024_k.ptr()) != nullptr)) {
			_case_begin_213eda37b:;
			{
				return static__21134770d_tuple(_246d93c4b_Tup(_29024_k.ptr()));
			}
		}
		else if ((_246d92321_Sptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_213eda403:;
			{
				return static__211347ee4_sptr(_246d92321_Sptr(_29024_k.ptr()));
			}
		}
		else if ((_246d92585_Ptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_213eda47a:;
			{
				return static__21134828b_ptr(_246d92585_Ptr(_29024_k.ptr()));
			}
		}
		else if ((_246d927e9_Enum(_29024_k.ptr()) != nullptr)) {
			_case_begin_213eda502:;
			{
				return static__211348533_enumDecl(_246d927e9_Enum(_29024_k.ptr()));
			}
		}
		else if ((_246d92a5d_TypeEnum(_29024_k.ptr()) != nullptr)) {
			_case_begin_213eda579:;
			{
				return static__2113487ca_typeEnumDecl(_246d92a5d_TypeEnum(_29024_k.ptr()));
			}
		}
		else if ((_246d93036_Slc(_29024_k.ptr()) != nullptr)) {
			_case_begin_213eda601:;
			{
				return static__211348d19_slice(_246d93036_Slc(_29024_k.ptr()));
			}
		}
		else if ((_246d939d7_Map(_29024_k.ptr()) != nullptr)) {
			_case_begin_213eda678:;
			{
				return static__2113490b1_mapType(_246d939d7_Map(_29024_k.ptr()));
			}
		}
		else if ((_246d93773_Trait(_29024_k.ptr()) != nullptr)) {
			_case_begin_213eda700:;
			{
				return static__211349600_traitDecl(_246d93773_Trait(_29024_k.ptr()));
			}
		}
		else if ((_246d9350e_Struct(_29024_k.ptr()) != nullptr)) {
			_case_begin_213eda777:;
			{
				return static__211349b3e_structureIns(_246d9350e_Struct(_29024_k.ptr()));
			}
		}
		else if ((_246d92cc2_Arr(_29024_k.ptr()) != nullptr)) {
			_case_begin_213eda7ee:;
			{
				return static__211349dd6_array(_246d92cc2_Arr(_29024_k.ptr()));
			}
		}
		else if ((_246d9329a_Fn(_29024_k.ptr()) != nullptr)) {
			_case_begin_213eda876:;
			{
				return static__21134aea3_func(_246d9329a_Fn(_29024_k.ptr()));
			}
		}
		_match_end_213eda090:;
	};
	{
		auto &_match_expr{ _29024_k.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_211346399_customType>>()) {
			_case_begin_213ee3461:;
			{
				return _29024_k.get()._field_Kind.operator jule::Ptr<_211346399_customType>().get()._field_kind;
			}
		}
		else {
			_case_begin_213ee3609:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_213ee36d6:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _211346b91_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _213c9aee9_Name(_213ee4583_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _213c9b12b_What(_213ee4583_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _213ee49b2_Reset(_213ee4583_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _213ee4ae4_Short(_213ee4583_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _213ee4583_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _213ee7de4_Name(_213ee83cd_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _213ee86b9_What(_213ee83cd_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _213ee87eb_Reset(_213ee83cd_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _213ee892d_Short(_213ee83cd_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _213ee83cd_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _213eeba30_Name(_213eec019_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _213eec305_What(_213eec019_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _213eec437_Reset(_213eec019_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _213eec569_Short(_213eec019_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _213eec019_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _2140006b0_Name(_214000b99_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _214000e85_What(_214000b99_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _2140010b7_Reset(_214000b99_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _2140011e9_Short(_214000b99_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _214000b99_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _2140042eb_Name(_2140047d5_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _214004ac1_What(_2140047d5_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _214004c03_Reset(_2140047d5_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _214004d35_Short(_2140047d5_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _2140047d5_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_247666919_FlagSet> static__247666c05_New(void) {
	return jule::new_ptr<_247666919_FlagSet>(_247666919_FlagSet{._field_flags=jule::Slice<jule::Trait<_24766550b_CommonFlag>>::alloc(0LL, 20LL)});
}



inline jule::Trait<_24766550b_CommonFlag> _247667189_FindFlag(_247666919_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_214010736:;
		if (it != expr.end()) {
			jule::Trait<_24766550b_CommonFlag> _7221_flag = *it;
			{
				if ((_24766550b_CommonFlag_mptr_data[(_7221_flag).type_offset]._2476645d7_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;
				};
			}
			_iter_next_214010736:;
			++it;
			goto _iter_begin_214010736;
		}
		_iter_end_214010736:;
	};
	return nullptr;
}



inline jule::Trait<_24766550b_CommonFlag> _247667497_FindFlagShort(_247666919_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_214010b87:;
		if (it != expr.end()) {
			jule::Trait<_24766550b_CommonFlag> _8221_flag = *it;
			{
				if ((_24766550b_CommonFlag_mptr_data[(_8221_flag).type_offset]._247665165_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;
				};
			}
			_iter_next_214010b87:;
			++it;
			goto _iter_begin_214010b87;
		}
		_iter_end_214010b87:;
	};
	return nullptr;
}



inline jule::Slice<jule::Trait<_24766550b_CommonFlag>> _24766770b_Flags(_247666919_FlagSet* _self_) {
	return (*_self_)._field_flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _247667a19_Parse(_247666919_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_2476690e2_argParser _11617_ap = _2476690e2_argParser{._field_set=(*_self_), ._field_args=_11524_args, };;
	({
		auto except = _24766a4cd_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11617_ap._field_content);
}



inline void _247667be5_Reset(_247666919_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_2140133b5:;
		if (it != expr.end()) {
			jule::Trait<_24766550b_CommonFlag> _12616_f = *it;
			{
				_24766550b_CommonFlag_mptr_data[(_12616_f).type_offset]._2476653c9_Reset(_12616_f);
			}
			_iter_next_2140133b5:;
			++it;
			goto _iter_begin_2140133b5;
		}
		_iter_end_2140133b5:;
	};
}



inline jule::Ptr<_2140047d5_Flag> _214083699_addFlagCommon(_247666919_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_2140851d4:;
			{
				goto _match_end_21408513a;
			}
		}
		_match_end_21408513a:;
	};
	if ((_247667189_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_247667497_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_2140047d5_Flag> _14817_flag = jule::new_ptr<_2140047d5_Flag>(_2140047d5_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_24766550b_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;
}

inline jule::Ptr<_214000b99_Flag> _21408c7d5_addFlagCommon(_247666919_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_21408e3b9:;
			{
				goto _match_end_21408e320;
			}
		}
		_match_end_21408e320:;
	};
	if ((_247667189_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_247667497_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_214000b99_Flag> _14817_flag = jule::new_ptr<_214000b99_Flag>(_214000b99_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_24766550b_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;
}



inline void _214081950_AddVar(_247666919_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_2140047d5_Flag> _17617_flag = _214083699_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _21408aa9c_AddVar(_247666919_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_214000b99_Flag> _17617_flag = _21408c7d5_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _247666919_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_2476b22e4_IR>,jule::Slice<_244640d69_Log>> static__2476b2778_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	jule::Ptr<_2476aea83_JuleImporter> _2817_importer = static__2476aeeb2_New(_2476b4093_buildCompileInfo());;
	jule::Slice<jule::Ptr<_2460db7ad_Ast>> _2918_files;;
	jule::Slice<_244640d69_Log> _2929_logs;;
	std::tie(_2918_files,_2929_logs) = _2476b1326_ImportPackage(_2817_importer.ptr(), _2721_path,true);
	if ((_2929_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_2929_logs);
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_246ce342b_Package> _3918_pkg;;
	std::tie(_3918_pkg,_2929_logs) = _246dac0c7_AnalyzePackage(_2918_files,jule::Trait<_246cdc854_Importer>(_2817_importer, 0),_2732_flags);
	if ((_2929_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_2929_logs);
	};
	jule::Ptr<_2476b22e4_IR> _4417_ir = jule::new_ptr<_2476b22e4_IR>(_2476b22e4_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_2476b0226_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_2476b3d95_getAllUniquePasses(_4417_ir.get()._field_Main,_4417_ir.get()._field_Used);
	return std::make_tuple(_4417_ir,nullptr);
}



inline void _2476b2bc9_appendStructs(_2476b22e4_IR* _self_, jule::Ptr<_246ce342b_Package>& _5633_p, jule::Slice<jule::Ptr<_246117c3a_Struct>>& _5657_buffer) {
	{
		auto &expr = _5633_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_2138e2dc7:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _5721_f = *it;
			{
				{
					auto &expr = _5721_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_2138e35c0:;
					if (it != expr.end()) {
						jule::Ptr<_246117c3a_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_CppLinked))) {
								_5657_buffer = jule::alloc_for_append(_5657_buffer,1);_5657_buffer.__push(_5825_s);;
							};
						}
						_iter_next_2138e35c0:;
						++it;
						goto _iter_begin_2138e35c0;
					}
					_iter_end_2138e35c0:;
				};
			}
			_iter_next_2138e2dc7:;
			++it;
			goto _iter_begin_2138e2dc7;
		}
		_iter_end_2138e2dc7:;
	};
}



inline jule::Slice<jule::Ptr<_246117c3a_Struct>> _2476b2e3d_GetAllStructures(_2476b22e4_IR* _self_) {
	jule::Slice<jule::Ptr<_246117c3a_Struct>> _6917_buffer = nullptr;;
	_2476b2bc9_appendStructs(&(*_self_), (*_self_)._field_Main,_6917_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_2138e346b:;
		if (it != expr.end()) {
			jule::Ptr<_246ce04c2_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_CppLinked))) {
					_2476b2bc9_appendStructs(&(*_self_), _7121_u.get()._field_Package,_6917_buffer);
				};
			}
			_iter_next_2138e346b:;
			++it;
			goto _iter_begin_2138e346b;
		}
		_iter_end_2138e346b:;
	};
	return _6917_buffer;
}



inline void _2476b325c_appendGlobals(_2476b22e4_IR* _self_, jule::Ptr<_246ce342b_Package>& _7933_p, jule::Slice<jule::Ptr<_246d16372_Var>>& _7957_buffer) {
	{
		auto &expr = _7933_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_2138e6260:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_2138e6947:;
					if (it != expr.end()) {
						jule::Ptr<_246d16372_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_CppLinked))) && (!(_8125_v.get()._field_Constant)))) {
								_7957_buffer = jule::alloc_for_append(_7957_buffer,1);_7957_buffer.__push(_8125_v);;
							};
						}
						_iter_next_2138e6947:;
						++it;
						goto _iter_begin_2138e6947;
					}
					_iter_end_2138e6947:;
				};
			}
			_iter_next_2138e6260:;
			++it;
			goto _iter_begin_2138e6260;
		}
		_iter_end_2138e6260:;
	};
}



inline jule::Slice<jule::Ptr<_246d16372_Var>> _2476b34c1_GetAllGlobals(_2476b22e4_IR* _self_) {
	jule::Slice<jule::Ptr<_246d16372_Var>> _9217_buffer = nullptr;;
	_2476b325c_appendGlobals(&(*_self_), (*_self_)._field_Main,_9217_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_2138e8240:;
		if (it != expr.end()) {
			jule::Ptr<_246ce04c2_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_CppLinked))) {
					_2476b325c_appendGlobals(&(*_self_), _9421_u.get()._field_Package,_9217_buffer);
				};
			}
			_iter_next_2138e8240:;
			++it;
			goto _iter_begin_2138e8240;
		}
		_iter_end_2138e8240:;
	};
	return _9217_buffer;
}



inline void _2476b369c_Order(_2476b22e4_IR* _self_) {
	(*_self_)._field_Ordered._field_Structs=_2476b2e3d_GetAllStructures(&(*_self_));
	(*_self_)._field_Ordered._field_Globals=_2476b34c1_GetAllGlobals(&(*_self_));
	static__2476b546d_orderStructures((*_self_)._field_Ordered._field_Structs);
	static__2476b567c_orderVars((*_self_)._field_Ordered._field_Globals);
}







std::ostream &operator<<(std::ostream &_Stream, _2476b22e4_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _24610b965_Str(_246142319_StructIns* _self_) {
	jule::Str _24917_kind = jule::Str();;
	_24917_kind+=(*_self_)._field_Decl.get()._field_Ident;
	if (((*_self_)._field_Generics.len() > 0LL)) {
		_24917_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_Generics;
			auto it = expr.begin();
			_iter_begin_212857205:;
			if (it != expr.end()) {
				jule::Ptr<_246d8d76d_InsGeneric> &_25320_g = *it;
				{
					_24917_kind+=_246d90396_Str(_25320_g.get()._field_Kind.ptr());
					_24917_kind+=jule::Str(",", 1);
				}
				_iter_next_212857205:;
				++it;
				goto _iter_begin_212857205;
			}
			_iter_end_212857205:;
		};
		(_24917_kind).mut_slice(0LL,(_24917_kind.len() - 1LL));;
		_24917_kind+=jule::Str("]", 1);
	};
	return _24917_kind;
}



inline jule::Bool _246117ee3_Equals(jule::Ptr<_246142319_StructIns> _self_, jule::Ptr<_246d8ee9a_TypeKind> _26422_other) {
	jule::Ptr<_246142319_StructIns> _26513_s = _246d9350e_Struct(_26422_other.ptr());;
	if ((_26513_s == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_Decl != _26513_s.get()._field_Decl)) {
		return false;
	};
	if ((_self_.get()._field_Generics.len() != _26513_s.get()._field_Generics.len())) {
		return false;
	};
	jule::I64 _27817_i = 0LL;;
	for (; (_27817_i < _self_.get()._field_Generics.len()); (_27817_i)++) {
		{
			if ((!(_246d906a4_Equals(_self_.get()._field_Generics[_27817_i].get()._field_Kind, _26513_s.get()._field_Generics[_27817_i].get()._field_Kind)))) {
				return false;
			};
		}
	_iter_next_21285acb9:;
	}
	_iter_end_21285acb9:;;
	return true;
}



inline jule::Bool _246119159_Same(_246142319_StructIns* _self_, jule::Ptr<_246142319_StructIns> _29219_s) {
	if ((((*_self_)._field_Decl != _29219_s.get()._field_Decl) || (_29219_s.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_21285d52a:;
		if (it != expr.end()) {
			jule::I64 _29613_i = it - expr.begin();
			jule::Ptr<_246d8d76d_InsGeneric> &_29616_g = *it;
			{
				if ((!(_246d906a4_Equals(_29616_g.get()._field_Kind, _29219_s.get()._field_Generics[_29613_i].get()._field_Kind)))) {
					return false;
				};
			}
			_iter_next_21285d52a:;
			++it;
			_29613_i++;
			goto _iter_begin_21285d52a;
		}
		_iter_end_21285d52a:;
	};
	return true;
}



inline jule::Ptr<_246cab768_Fn> _24611b4ad_FindMethod(_246142319_StructIns* _self_, jule::Str _30629_ident, jule::Bool _30641_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_212860340:;
		if (it != expr.end()) {
			jule::Ptr<_246cab768_Fn> _30721_f = *it;
			{
				if (((_30721_f.get()._field_Statically == _30641_statically) && (_30721_f.get()._field_Ident == _30629_ident))) {
					return _30721_f;
				};
			}
			_iter_next_212860340:;
			++it;
			goto _iter_begin_212860340;
		}
		_iter_end_212860340:;
	};
	return nullptr;
}



inline jule::Ptr<_24611d977_FieldIns> _24611c7cd_FindField(_246142319_StructIns* _self_, jule::Str _31728_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_212861682:;
		if (it != expr.end()) {
			jule::Ptr<_24611d977_FieldIns> _31821_f = *it;
			{
				if ((_31821_f.get()._field_Decl.get()._field_Ident == _31728_ident)) {
					return _31821_f;
				};
			}
			_iter_next_212861682:;
			++it;
			goto _iter_begin_212861682;
		}
		_iter_end_212861682:;
	};
	return nullptr;
}



inline jule::Ptr<_246d16372_Var> _2461202e7_FindStatic(_246142319_StructIns* _self_, jule::Str _32829_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_212861c26:;
		if (it != expr.end()) {
			jule::Ptr<_246d16372_Var> _32921_v = *it;
			{
				if ((_32921_v.get()._field_Ident == _32829_ident)) {
					return _32921_v;
				};
			}
			_iter_next_212861c26:;
			++it;
			goto _iter_begin_212861c26;
		}
		_iter_end_212861c26:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _246142319_StructIns _Src) {
	_Stream << _24610b965_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_2477a84ea_ObjectDeadCode> static__2477a89c3_new(jule::Ptr<_2476b22e4_IR>& _3424_ir) {
	return jule::new_ptr<_2477a84ea_ObjectDeadCode>(_2477a84ea_ObjectDeadCode{._field_ir=_3424_ir});
}



inline jule::Bool _21393537b_isLive(jule::Ptr<_2477a84ea_ObjectDeadCode> _self_, jule::Ptr<_246cb3e9b_Trait>& _4030_t) {
	jule::Slice<jule::Ptr<_246cb3e9b_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_21393749e:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_2139373c2:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_213937515:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_213937515:;
			++it;
			_5213_i++;
			goto _iter_begin_213937515;
		}
		_iter_end_213937515:;
	};
	return false;
}

inline jule::Bool _21393a815_isLive(jule::Ptr<_2477a84ea_ObjectDeadCode> _self_, jule::Ptr<_246cabb42_FnIns>& _4030_t) {
	jule::Slice<jule::Ptr<_246cabb42_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_21393cd12:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_21393ce66:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_21393ccac:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_21393ccac:;
			++it;
			_5213_i++;
			goto _iter_begin_21393ccac;
		}
		_iter_end_21393ccac:;
	};
	return false;
}

inline jule::Bool _2139450c2_isLive(jule::Ptr<_2477a84ea_ObjectDeadCode> _self_, jule::Ptr<_246142319_StructIns>& _4030_t) {
	jule::Slice<jule::Ptr<_246142319_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_2139471e5:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_21394717e:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_213947910:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_213947910:;
			++it;
			_5213_i++;
			goto _iter_begin_213947910;
		}
		_iter_end_213947910:;
	};
	return false;
}

inline jule::Bool _213949d30_isLive(jule::Ptr<_2477a84ea_ObjectDeadCode> _self_, jule::Ptr<_246d16372_Var>& _4030_t) {
	jule::Slice<jule::Ptr<_246d16372_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_21394bc44:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_21394bd32:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_21394bb78:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_21394bb78:;
			++it;
			_5213_i++;
			goto _iter_begin_21394bb78;
		}
		_iter_end_21394bb78:;
	};
	return false;
}



inline void _213935964_pushLive(jule::Ptr<_2477a84ea_ObjectDeadCode> _self_, jule::Ptr<_246cb3e9b_Trait> _6035_t) {
	{
		
{
			_case_begin_2139397e2:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6035_t);;
			}
		}
		_match_end_2139396b0:;
	};
}

inline void _21393ebe3_pushLive(jule::Ptr<_2477a84ea_ObjectDeadCode> _self_, jule::Ptr<_246cabb42_FnIns> _6035_t) {
	{
		
{
			_case_begin_213940908:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6035_t);;
			}
		}
		_match_end_2139408a3:;
	};
}

inline void _213943037_pushLive(jule::Ptr<_2477a84ea_ObjectDeadCode> _self_, jule::Ptr<_246142319_StructIns> _6035_t) {
	{
		
{
			_case_begin_2139447ec:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6035_t);;
			}
		}
		_match_end_213944731:;
	};
}

inline void _21394d87d_pushLive(jule::Ptr<_2477a84ea_ObjectDeadCode> _self_, jule::Ptr<_246d16372_Var> _6035_t) {
	{
		
{
			_case_begin_21394e40b:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6035_t);;
			}
		}
		_match_end_21394e53d:;
	};
}



inline void _2477db253_setReferencesAsLive(jule::Ptr<_2477a84ea_ObjectDeadCode> _self_, jule::Ptr<_246cac615_ReferenceStack>& _7344_rs) {
	if ((_7344_rs == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _246cac934_Len(_7344_rs.ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _246caca66_At(_7344_rs.ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type_is<jule::Ptr<_246cb3e9b_Trait>>()) {
					_case_begin_213934336:;
					{
						jule::Ptr<_246cb3e9b_Trait> _8225_t = _7921_ref.operator jule::Ptr<_246cb3e9b_Trait>();;
						if (_21393537b_isLive(_self_, _8225_t)) {
							goto _iter_next_213933676;
						};
						_213935964_pushLive(_self_, _8225_t);
						{
							auto &expr = _8225_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_213939072:;
							if (it != expr.end()) {
								jule::Ptr<_246cab768_Fn> _8729_ins = *it;
								{
									{
										auto &expr = _8729_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_2139395c2:;
										if (it != expr.end()) {
											jule::Ptr<_246cabb42_FnIns> _8833_mins = *it;
											{
												if (_21393a815_isLive(_self_, _8833_mins)) {
													goto _iter_next_2139395c2;
												};
												_21393ebe3_pushLive(_self_, _8833_mins);
												_2477db253_setReferencesAsLive(_self_, _8833_mins.get()._field_Refers);
											}
											_iter_next_2139395c2:;
											++it;
											goto _iter_begin_2139395c2;
										}
										_iter_end_2139395c2:;
									};
								}
								_iter_next_213939072:;
								++it;
								goto _iter_begin_213939072;
							}
							_iter_end_213939072:;
						};
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_246cabb42_FnIns>>()) {
					_case_begin_21393439c:;
					{
						jule::Ptr<_246cabb42_FnIns> _9725_f = _7921_ref.operator jule::Ptr<_246cabb42_FnIns>();;
						if (_21393a815_isLive(_self_, _9725_f)) {
							goto _match_end_21393427b;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_2139450c2_isLive(_self_, _9725_f.get()._field_Owner)))) {
								_213943037_pushLive(_self_, _9725_f.get()._field_Owner);
								_2477db253_setReferencesAsLive(_self_, _9725_f.get()._field_Owner.get()._field_Refers);
							};
						};
						_21393ebe3_pushLive(_self_, _9725_f);
						_2477db253_setReferencesAsLive(_self_, _9725_f.get()._field_Refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_246d16372_Var>>()) {
					_case_begin_213934523:;
					{
						jule::Ptr<_246d16372_Var> _11025_v = _7921_ref.operator jule::Ptr<_246d16372_Var>();;
						if (_213949d30_isLive(_self_, _11025_v)) {
							goto _match_end_21393427b;
						};
						_21394d87d_pushLive(_self_, _11025_v);
						_2477db253_setReferencesAsLive(_self_, _11025_v.get()._field_Refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_246142319_StructIns>>()) {
					_case_begin_213934589:;
					{
						jule::Ptr<_246142319_StructIns> _11725_s = _7921_ref.operator jule::Ptr<_246142319_StructIns>();;
						if (_2139450c2_isLive(_self_, _11725_s)) {
							goto _match_end_21393427b;
						};
						_213943037_pushLive(_self_, _11725_s);
						_2477db253_setReferencesAsLive(_self_, _11725_s.get()._field_Refers);
						{
							auto &expr = _11725_s.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_21395294d:;
							if (it != expr.end()) {
								jule::Ptr<_246cab768_Fn> _12329_ins = *it;
								{
									{
										auto &expr = _12329_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_2139534ed:;
										if (it != expr.end()) {
											jule::Ptr<_246cabb42_FnIns> _12433_mins = *it;
											{
												if (_21393a815_isLive(_self_, _12433_mins)) {
													goto _iter_next_2139534ed;
												};
												_21393ebe3_pushLive(_self_, _12433_mins);
												_2477db253_setReferencesAsLive(_self_, _12433_mins.get()._field_Refers);
											}
											_iter_next_2139534ed:;
											++it;
											goto _iter_begin_2139534ed;
										}
										_iter_end_2139534ed:;
									};
								}
								_iter_next_21395294d:;
								++it;
								goto _iter_begin_21395294d;
							}
							_iter_end_21395294d:;
						};
					}
				}
				_match_end_21393427b:;
			};
		}
	_iter_next_213933676:;
	}
	_iter_end_213933676:;;
}



inline void _2477db4c8_inits(jule::Ptr<_2477a84ea_ObjectDeadCode> _self_, jule::Ptr<_246ce342b_Package>& _13630_pkg) {
	{
		auto &expr = _13630_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_213933aa5:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _13721_file = *it;
			{
				{
					auto &expr = _13721_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_213955c81:;
					if (it != expr.end()) {
						jule::Ptr<_246cab768_Fn> _13825_f = *it;
						{
							if ((_13825_f.get()._field_Ident == jule::Str("init", 4))) {
								jule::Ptr<_246cabb42_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_2477db253_setReferencesAsLive(_self_, _14029_ins.get()._field_Refers);
							};
						}
						_iter_next_213955c81:;
						++it;
						goto _iter_begin_213955c81;
					}
					_iter_end_213955c81:;
				};
			}
			_iter_next_213933aa5:;
			++it;
			goto _iter_begin_213933aa5;
		}
		_iter_end_213933aa5:;
	};
}



inline void _2477db74d_collectLivePackage(jule::Ptr<_2477a84ea_ObjectDeadCode> _self_, jule::Ptr<_246ce342b_Package>& _14843_pkg) {
	_2477db4c8_inits(_self_, _14843_pkg);
	if (_24267e162_Test) {
		{
			auto &expr = _14843_pkg.get()._field_Files;
			auto it = expr.begin();
			_iter_begin_21395849d:;
			if (it != expr.end()) {
				jule::Ptr<_246d5956e_SymbolTable> _15425_file = *it;
				{
					{
						auto &expr = _15425_file.get()._field_Funcs;
						auto it = expr.begin();
						_iter_begin_213958d72:;
						if (it != expr.end()) {
							jule::Ptr<_246cab768_Fn> _15529_f = *it;
							{
								if (_2477dd761_hasDirective(_15529_f.get()._field_Directives,jule::Str("test", 4))) {
									jule::Ptr<_246cabb42_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_2477db253_setReferencesAsLive(_self_, _15733_ins.get()._field_Refers);
								};
							}
							_iter_next_213958d72:;
							++it;
							goto _iter_begin_213958d72;
						}
						_iter_end_213958d72:;
					};
				}
				_iter_next_21395849d:;
				++it;
				goto _iter_begin_21395849d;
			}
			_iter_end_21395849d:;
		};
	};
}



inline void _2477db929_collectLive(jule::Ptr<_2477a84ea_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_2139581a1:;
		if (it != expr.end()) {
			jule::Ptr<_246ce04c2_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_CppLinked))) {
					_2477db74d_collectLivePackage(_self_, _16721_used.get()._field_Package);
				};
			}
			_iter_next_2139581a1:;
			++it;
			goto _iter_begin_2139581a1;
		}
		_iter_end_2139581a1:;
	};
	_2477db74d_collectLivePackage(_self_, _self_.get()._field_ir.get()._field_Main);
	jule::Ptr<_246cab768_Fn> _17517_main = _246ce4bd0_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
	jule::Ptr<_246cabb42_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_2477db253_setReferencesAsLive(_self_, _17617_ins.get()._field_Refers);
}



inline void _2477dbb9e_removeDeadGlobals(jule::Ptr<_2477a84ea_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_246d16372_Var>>& _18142_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < _18142_vars.len())) {
		{
			jule::Ptr<_246d16372_Var> _18417_v = _18142_vars[_18217_i];;
			if (_213949d30_isLive(_self_, _18417_v)) {
				(_18217_i)++;
				goto _iter_next_21395e251;
			};
			_18142_vars=jule::append(_18142_vars.slice(0LL,_18217_i),_18142_vars.slice((_18217_i + 1LL)));
		}
	_iter_next_21395e251:;
	}
	_iter_end_21395e251:;;
}



inline void _2477dbe24_removeDeadFns(jule::Ptr<_2477a84ea_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_246cab768_Fn>>& _19338_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < _19338_funcs.len())) {
		{
			jule::Ptr<_246cab768_Fn> _19621_f = _19338_funcs[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_246cabb42_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_21393a815_isLive(_self_, _19921_ins)) {
						(_19721_j)++;
						goto _iter_next_213962a29;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL,_19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_213962a29:;
			}
			_iter_end_213962a29:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				_19338_funcs=jule::append(_19338_funcs.slice(0LL,_19417_i),_19338_funcs.slice((_19417_i + 1LL)));
				goto _iter_next_21395e75c;
			};
			(_19417_i)++;
		}
	_iter_next_21395e75c:;
	}
	_iter_end_21395e75c:;;
}



inline void _2477dc199_removeDeadStructs(jule::Ptr<_2477a84ea_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_246117c3a_Struct>>& _21442_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < _21442_structs.len())) {
		{
			jule::Ptr<_246117c3a_Struct> _21721_s = _21442_structs[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_246142319_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_2477dbe24_removeDeadFns(_self_, _22025_ins.get()._field_Methods);
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _2139450c2_isLive(_self_, _22025_ins))) {
						(_21821_j)++;
						goto _iter_next_21396706c;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL,_21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_21396706c:;
			}
			_iter_end_21396706c:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				_21442_structs=jule::append(_21442_structs.slice(0LL,_21517_i),_21442_structs.slice((_21517_i + 1LL)));
				goto _iter_next_213965d18;
			};
			(_21517_i)++;
		}
	_iter_next_213965d18:;
	}
	_iter_end_213965d18:;;
}



inline void _2477dc41e_removeDeadTraits(jule::Ptr<_2477a84ea_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_246cb3e9b_Trait>>& _23641_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < _23641_traits.len())) {
		{
			jule::Ptr<_246cb3e9b_Trait> _23921_t = _23641_traits[_23717_i];;
			if ((!(_21393537b_isLive(_self_, _23921_t)))) {
				_23641_traits=jule::append(_23641_traits.slice(0LL,_23717_i),_23641_traits.slice((_23717_i + 1LL)));
				goto _iter_next_21396ad62;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_246117c3a_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_21396ba33;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL,_24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_21396ba33:;
			}
			_iter_end_21396ba33:;;
			(_23717_i)++;
		}
	_iter_next_21396ad62:;
	}
	_iter_end_21396ad62:;;
}



inline void _2477dc694_removeDeadsFile(jule::Ptr<_2477a84ea_ObjectDeadCode> _self_, jule::Ptr<_246d5956e_SymbolTable>& _25740_file) {
	_2477dbe24_removeDeadFns(_self_, _25740_file.get()._field_Funcs);
	_2477dc199_removeDeadStructs(_self_, _25740_file.get()._field_Structs);
	_2477dc41e_removeDeadTraits(_self_, _25740_file.get()._field_Traits);
	_2477dbb9e_removeDeadGlobals(_self_, _25740_file.get()._field_Vars);
}



inline void _2477dc919_removeDeadsPackage(jule::Ptr<_2477a84ea_ObjectDeadCode> _self_, jule::Ptr<_246ce342b_Package>& _26443_pkg) {
	{
		auto &expr = _26443_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_213971a5a:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _26521_file = *it;
			{
				_2477dc694_removeDeadsFile(_self_, _26521_file);
			}
			_iter_next_213971a5a:;
			++it;
			goto _iter_begin_213971a5a;
		}
		_iter_end_213971a5a:;
	};
}



inline void _2477dcae5_removeDeads(jule::Ptr<_2477a84ea_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_213972275:;
		if (it != expr.end()) {
			jule::Ptr<_246ce04c2_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_CppLinked))) {
					_2477dc919_removeDeadsPackage(_self_, _27121_used.get()._field_Package);
				};
			}
			_iter_next_213972275:;
			++it;
			goto _iter_begin_213972275;
		}
		_iter_end_213972275:;
	};
	_2477dc919_removeDeadsPackage(_self_, _self_.get()._field_ir.get()._field_Main);
}



inline void _2477dccc1_elimanate(jule::Ptr<_2477a84ea_ObjectDeadCode> _self_) {
	_2477db929_collectLive(_self_);
	_2477dcae5_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _2477a84ea_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2113423d9_ObjectCoder> static__2112d25aa_New(jule::Ptr<_2476b22e4_IR>& _7224_ir, _2112a810d_SerializationInfo _7233_info) {
	jule::Ptr<_2113423d9_ObjectCoder> _7317_oc = jule::new_ptr<_2113423d9_ObjectCoder>(_2113423d9_ObjectCoder{._field_ir=_7224_ir, ._field_info=_7233_info, });;
	_7317_oc.get()._field_ec=static__21067c923_new(_7317_oc);
	_7317_oc.get()._field_sc=static__210674c8e_new(_7317_oc);
	return _7317_oc;
}



inline void _2112d6c0d_write(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Str _8225_s) {
	_self_.get()._field_Obj+=_8225_s;
}



inline void _211319ba8_addIndent(jule::Ptr<_2113423d9_ObjectCoder> _self_) {
	;
	_self_.get()._field_indentBuffer+=jule::Str("\t", 1);
}



inline void _21131a58d_doneIndent(jule::Ptr<_2113423d9_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL,(_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _2112a75d5_indent(jule::Ptr<_2113423d9_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I64 _2112c7a34_findTypeOffset(_2113423d9_ObjectCoder* _self_, jule::Ptr<_246cb3e9b_Trait> _10229_t, jule::Ptr<_246d8ee9a_TypeKind> _10244_k) {
	if ((_10229_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;
	};
	jule::Ptr<_246142319_StructIns> _10617_s = nullptr;;
	if ((_246d92321_Sptr(_10244_k.ptr()) != nullptr)) {
		_10244_k=_246d92321_Sptr(_10244_k.ptr()).get()._field_Elem;
	};
	if ((_246d9350e_Struct(_10244_k.ptr()) == nullptr)) {
		return -1LL;
	};
	_10617_s=_246d9350e_Struct(_10244_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_213dde538:;
		if (it != expr.end()) {
			jule::Ptr<_2113421ec_traitHash> &_11416_hash = *it;
			{
				if (((_11416_hash.get()._field_t == _10229_t) && (_11416_hash.get()._field_s == _10617_s))) {
					return _11416_hash.get()._field_i;
				};
			}
			_iter_next_213dde538:;
			++it;
			goto _iter_begin_213dde538;
		}
		_iter_end_213dde538:;
	};
	return -1LL;
}



inline void _211317238_locInfo(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Ptr<_24496dc35_Token>& _12328_t) {
	jule::Str &_12414_loc = _12328_t.get()._field_File.get()._field_Path;;
	if (_24267eb8a_Production) {
		{
			
			if (_2445b3e96_HasPrefix(_12414_loc,_244679a95_PathStdlib)) {
				_case_begin_213de1d54:;
				{
					_2112d6c0d_write(_self_, _211299ab1_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_243611a3e_Dir(_244679a95_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_2445b3e96_HasPrefix(_12414_loc,_self_.get()._field_ir.get()._field_Root)) {
				_case_begin_213de1b23:;
				{
					_2112d6c0d_write(_self_, _211299ab1_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_243611a3e_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_213de176b:;
				{
					_2112d6c0d_write(_self_, _211299ab1_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
				}
			}
			_match_end_213de168e:;
		};
	} else {
		_2112d6c0d_write(_self_, _211299ab1_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
	};
	_2112d6c0d_write(_self_, jule::Str(":", 1));
	_2112d6c0d_write(_self_, _246ca2011_Itoa(_12328_t.get()._field_Row));
	_2112d6c0d_write(_self_, jule::Str(":", 1));
	_2112d6c0d_write(_self_, _246ca2011_Itoa(_12328_t.get()._field_Column));
}



inline void _211317766_head(jule::Ptr<_2113423d9_ObjectCoder> _self_) {
	_21133a190_Time _15013_time = static__21133a734_Now();;
	_2113399ec_AbsTime _15113_abs = _21133bd73_Abs(&_15013_time);;
	_2112d6c0d_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_2112d6c0d_write(_self_, jule::Str("// JuleC version: ", 18));
	_2112d6c0d_write(_self_, jule::Str("jule0.0.12 @master", 18));
	_2112d6c0d_write(_self_, jule::Str("\n", 1));
	_2112d6c0d_write(_self_, jule::Str("// Date: ", 9));
	_2112d6c0d_write(_self_, _246ca1c9c_FmtUint(_15113_abs._field_Day,10LL));
	_2112d6c0d_write(_self_, jule::Str("/", 1));
	_2112d6c0d_write(_self_, _246ca1c9c_FmtUint(_15113_abs._field_Month,10LL));
	_2112d6c0d_write(_self_, jule::Str("/", 1));
	_2112d6c0d_write(_self_, _246ca1c9c_FmtUint(_15113_abs._field_Year,10LL));
	_2112d6c0d_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_2112d6c0d_write(_self_, _self_.get()._field_info._field_Compiler);
	_2112d6c0d_write(_self_, jule::Str(" ", 1));
	_2112d6c0d_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_2112d6c0d_write(_self_, jule::Str("\n\n", 2));
	if (_24267eb8a_Production) {
		_2112d6c0d_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_24267e45e_RC))) {
		_2112d6c0d_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_24267e87c_Safety))) {
		_2112d6c0d_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_2112a82ea_links(_self_);
	_2112d6c0d_write(_self_, jule::Str("\n\n#include \"", 12));
	_2112d6c0d_write(_self_, _244689951_PathApi);
	_2112d6c0d_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _2112a82ea_links(jule::Ptr<_2113423d9_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_213deda20:;
		if (it != expr.end()) {
			jule::Ptr<_246ce04c2_ImportInfo> _18816_used = *it;
			{
				{
					
					if ((!(_18816_used.get()._field_CppLinked))) {
						_case_begin_213deed51:;
						{
							goto _iter_next_213deda20;
						}
					}
					else if (_244633e5b_IsStdHeaderPath(_18816_used.get()._field_Path)) {
						_case_begin_213dee9aa:;
						{
							_2112d6c0d_write(_self_, jule::Str("#include ", 9));
							_2112d6c0d_write(_self_, _18816_used.get()._field_Path);
							_2112d6c0d_write(_self_, jule::Str("\n", 1));
						}
					}
					else {
						_case_begin_213dee614:;
						{
							_2112d6c0d_write(_self_, jule::Str("#include \"", 10));
							_2112d6c0d_write(_self_, _18816_used.get()._field_Path);
							_2112d6c0d_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_213dee537:;
				};
			}
			_iter_next_213deda20:;
			++it;
			goto _iter_begin_213deda20;
		}
		_iter_end_213deda20:;
	};
}



inline void _2112cb362_prepareStructures(jule::Ptr<_2113423d9_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_213dee2b2:;
		if (it != expr.end()) {
			jule::Ptr<_246117c3a_Struct> _20521_s = *it;
			{
				if ((_20521_s.get()._field_Token != nullptr)) {
					_211345464_prepareStructure(_20521_s);
				};
			}
			_iter_next_213dee2b2:;
			++it;
			goto _iter_begin_213dee2b2;
		}
		_iter_end_213dee2b2:;
	};
}



inline void _2112d319e_iterPackages(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_246ce342b_Package>&)> _21232_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_213e07e9c:;
		if (it != expr.end()) {
			jule::Ptr<_246ce04c2_ImportInfo> _21321_used = *it;
			{
				if ((!(_21321_used.get()._field_CppLinked))) {
					_21232_f(_21321_used.get()._field_Package);
				};
			}
			_iter_next_213e07e9c:;
			++it;
			goto _iter_begin_213e07e9c;
		}
		_iter_end_213e07e9c:;
	};
	_21232_f(_self_.get()._field_ir.get()._field_Main);
}



inline void _2112d3732_buildTraitMap(jule::Ptr<_2113423d9_ObjectCoder> _self_) {
	_2112d319e_iterPackages(_self_, jule::Fn<void(jule::Ptr<_246ce342b_Package>&)>([=](jule::Ptr<_246ce342b_Package>& _22235_pkg) mutable -> void {
		_211345332_iterFiles(_22235_pkg,jule::Fn<void(jule::Ptr<_246d5956e_SymbolTable>&)>([=](jule::Ptr<_246d5956e_SymbolTable>& _22336_file) mutable -> void {
			{
				auto &expr = _22336_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_213e0b533:;
				if (it != expr.end()) {
					jule::Ptr<_246cb3e9b_Trait> _22429_t = *it;
					{
						if ((_22429_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_22429_t.get()._field_Implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_2113421ec_traitHash>(_2113421ec_traitHash{._field_t=_22429_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_213e0b533;
						};
						jule::I64 _23629_i = 0LL;;
						{
							auto &expr = _22429_t.get()._field_Implemented;
							auto it = expr.begin();
							_iter_begin_213e0d7aa:;
							if (it != expr.end()) {
								jule::Ptr<_246117c3a_Struct> _23733_s = *it;
								{
									{
										auto &expr = _23733_s.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_213e0e06e:;
										if (it != expr.end()) {
											jule::Ptr<_246142319_StructIns> _23837_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_2113421ec_traitHash>(_2113421ec_traitHash{._field_t=_22429_t, ._field_s=_23837_ins, ._field_i=_23629_i}));;
												(_23629_i)++;
											}
											_iter_next_213e0e06e:;
											++it;
											goto _iter_begin_213e0e06e;
										}
										_iter_end_213e0e06e:;
									};
								}
								_iter_next_213e0d7aa:;
								++it;
								goto _iter_begin_213e0d7aa;
							}
							_iter_end_213e0d7aa:;
						};
					}
					_iter_next_213e0b533:;
					++it;
					goto _iter_begin_213e0b533;
				}
				_iter_end_213e0b533:;
			};
		}));
	}));
}



inline void _2112d4601_traitDecls(jule::Ptr<_2113423d9_ObjectCoder> _self_) {
	_2112d319e_iterPackages(_self_, jule::Fn<void(jule::Ptr<_246ce342b_Package>&)>([=](jule::Ptr<_246ce342b_Package>& _25335_pkg) mutable -> void {
		_211345332_iterFiles(_25335_pkg,jule::Fn<void(jule::Ptr<_246d5956e_SymbolTable>&)>([=](jule::Ptr<_246d5956e_SymbolTable>& _25436_file) mutable -> void {
			{
				auto &expr = _25436_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_213e113d4:;
				if (it != expr.end()) {
					jule::Ptr<_246cb3e9b_Trait> _25529_t = *it;
					{
						if ((_25529_t.get()._field_Token == nullptr)) {
							return;;
						};
						_2112a75d5_indent(_self_);
						_2112d6c0d_write(_self_, jule::Str("struct ", 7));
						_2112d6c0d_write(_self_, static__2112a148b_traitDecl(_25529_t));
						_2112d6c0d_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_213e113d4:;
					++it;
					goto _iter_begin_213e113d4;
				}
				_iter_end_213e113d4:;
			};
		}));
	}));
}



inline void _2112d4cb6_structurePlainDecl(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Ptr<_246117c3a_Struct>& _26843_s) {
	{
		auto &expr = _26843_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_213e10e72:;
		if (it != expr.end()) {
			jule::Ptr<_246142319_StructIns> _26921_ins = *it;
			{
				_2112d6c0d_write(_self_, jule::Str("struct ", 7));
				_2112d6c0d_write(_self_, static__2112a1c72_structureIns(_26921_ins));
				_2112d6c0d_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_213e10e72:;
			++it;
			goto _iter_begin_213e10e72;
		}
		_iter_end_213e10e72:;
	};
}



inline void _2112d547b_structurePlainDecls(jule::Ptr<_2113423d9_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_213e14849:;
		if (it != expr.end()) {
			jule::Ptr<_246117c3a_Struct> _27721_s = *it;
			{
				if ((_27721_s.get()._field_Token != nullptr)) {
					_2112d4cb6_structurePlainDecl(_self_, _27721_s);
				};
			}
			_iter_next_213e14849:;
			++it;
			goto _iter_begin_213e14849;
		}
		_iter_end_213e14849:;
	};
}



inline void _211320a38_fieldDecl(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Ptr<_24611d977_FieldIns>& _28434_f) {
	_2112d6c0d_write(_self_, static__21134b24a_kind(_28434_f.get()._field_Kind));
	_2112d6c0d_write(_self_, jule::Str(" ", 1));
	_2112d6c0d_write(_self_, static__2112a2019_field(_28434_f.get()._field_Decl));
	if ((_28434_f.get()._field_Default == nullptr)) {
		if (_21134e1d7_shouldInitialized(_28434_f.get()._field_Kind)) {
			_2112d6c0d_write(_self_, jule::Str(" = ", 3));
			_2112991cb_initExpr(_self_.get()._field_ec, _28434_f.get()._field_Kind);
		};
	} else {
		_2112d6c0d_write(_self_, jule::Str(" = ", 3));
		_211298bd1_expr(_self_.get()._field_ec, _28434_f.get()._field_Default.get()._field_Model);
	};
	_2112d6c0d_write(_self_, jule::Str(";", 1));
}



inline void _2112d5b41_structureDestructor(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Ptr<_246142319_StructIns>& _30244_s) {
	;
	jule::Ptr<_246cab768_Fn> _30513_disposeMethod = _24611b4ad_FindMethod(_30244_s.ptr(), jule::Str("Dispose", 7),false);;
	jule::Bool _30617_disposed = static__246d17791_Dispose(_30513_disposeMethod);;
	if ((!(_30617_disposed))) {
		return;;
	};
	_2112d6c0d_write(_self_, jule::Str("~", 1));
	_2112d6c0d_write(_self_, static__2112a1c72_structureIns(_30244_s));
	_2112d6c0d_write(_self_, jule::Str("(void) { ", 9));
	_2112d6c0d_write(_self_, static__2112a0e4c_func(_30513_disposeMethod));
	_2112d6c0d_write(_self_, jule::Str("(this); }", 9));
}



inline void _211319713_structureDeriveDefsDecls(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Ptr<_246142319_StructIns>& _31845_s) {
	if (_246107ec2_IsDerives(_31845_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_2112a75d5_indent(_self_);
		_2112d6c0d_write(_self_, static__21129b9d6_cloneFuncDecl(_31845_s.get()._field_Decl));
		_2112d6c0d_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _2112cc72b_structureOperatorEq(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Str& _32640_ident, jule::Ptr<_246142319_StructIns>& _32657_s) {
	if ((_32657_s.get()._field_Operators._field_Eq != nullptr)) {
		_211342ab0_structureOperator(_self_, _32640_ident,_32657_s.get()._field_Operators._field_Eq,jule::Str("==", 2));
		return;;
	};
	_2112a75d5_indent(_self_);
	if (_2449dc2d1_Inline) {
		_2112d6c0d_write(_self_, jule::Str("inline ", 7));
	};
	_2112d6c0d_write(_self_, jule::Str("bool operator==(", 16));
	_2112d6c0d_write(_self_, _32640_ident);
	_2112d6c0d_write(_self_, jule::Str(" _other) {", 10));
	if ((_32657_s.get()._field_Fields.len() > 0LL)) {
		_211319ba8_addIndent(_self_);
		_2112d6c0d_write(_self_, jule::Str("\n", 1));
		_2112a75d5_indent(_self_);
		_2112d6c0d_write(_self_, jule::Str("return ", 7));
		_211319ba8_addIndent(_self_);
		jule::Bool _34621_writed = false;;
		{
			auto &expr = _32657_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_213e2343a:;
			if (it != expr.end()) {
				jule::Ptr<_24611d977_FieldIns> _34725_f = *it;
				{
					jule::Ptr<_246142319_StructIns> _34921_strct = _246d9350e_Struct(_34725_f.get()._field_Kind.ptr());;
					if ((((_34921_strct != nullptr) && (_34921_strct.get()._field_Decl != nullptr)) && _34921_strct.get()._field_Decl.get()._field_CppLinked)) {
						goto _iter_next_213e2343a;
					};
					if (_34621_writed) {
						_2112d6c0d_write(_self_, jule::Str(" &&", 3));
					};
					_34621_writed=true;
					_2112d6c0d_write(_self_, jule::Str("\n", 1));
					_2112a75d5_indent(_self_);
					_2112d6c0d_write(_self_, jule::Str("this->", 6));
					jule::Str _36121_fIdent = static__2112a2019_field(_34725_f.get()._field_Decl);;
					_2112d6c0d_write(_self_, _36121_fIdent);
					_2112d6c0d_write(_self_, jule::Str(" == _other.", 11));
					_2112d6c0d_write(_self_, _36121_fIdent);
				}
				_iter_next_213e2343a:;
				++it;
				goto _iter_begin_213e2343a;
			}
			_iter_end_213e2343a:;
		};
		_21131a58d_doneIndent(_self_);
		if ((!(_34621_writed))) {
			_2112d6c0d_write(_self_, jule::Str("true", 4));
		};
		_2112d6c0d_write(_self_, jule::Str(";\n", 2));
		_21131a58d_doneIndent(_self_);
		_2112a75d5_indent(_self_);
		_2112d6c0d_write(_self_, jule::Str("}", 1));
	} else {
		_2112d6c0d_write(_self_, jule::Str(" return true; }", 15));
	};
	_2112d6c0d_write(_self_, jule::Str("\n\n", 2));
}



inline void _21134297d_structureOperatorNotEq(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Str& _38043_ident, jule::Ptr<_246142319_StructIns>& _38060_s) {
	_2112a75d5_indent(_self_);
	if (_2449dc2d1_Inline) {
		_2112d6c0d_write(_self_, jule::Str("inline ", 7));
	};
	_2112d6c0d_write(_self_, jule::Str("bool operator!=(", 16));
	_2112d6c0d_write(_self_, _38043_ident);
	_2112d6c0d_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _211342ab0_structureOperator(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Str& _39138_ident, jule::Ptr<_246cabb42_FnIns>& _39155_f, jule::Str _39166_op) {
	if ((_39155_f == nullptr)) {
		return;;
	};
	jule::Bool _39613_unary = (_39155_f.get()._field_Params.len() == 1LL);;
	jule::Bool _39713_assignment = _24618a10e_IsVoid(_39155_f.get()._field_Decl.ptr());;
	_2112a75d5_indent(_self_);
	if (_2449dc2d1_Inline) {
		_2112d6c0d_write(_self_, jule::Str("inline ", 7));
	};
	if (_39713_assignment) {
		_2112d6c0d_write(_self_, _39138_ident);
		_2112d6c0d_write(_self_, jule::Str("&", 1));
	} else {
		if ((_246d920ac_Prim(_39155_f.get()._field_Result.ptr()) == nullptr)) {
			_2112d6c0d_write(_self_, _39138_ident);
		} else {
			_2112d6c0d_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_2112d6c0d_write(_self_, jule::Str(" operator", 9));
	_2112d6c0d_write(_self_, _39166_op);
	_2112d6c0d_write(_self_, jule::Str("(", 1));
	if ((!(_39613_unary))) {
		jule::Ptr<_246cab955_ParamIns> _41921_p = _39155_f.get()._field_Params[1LL];;
		_2112d6c0d_write(_self_, static__21134a425_paramIns(_41921_p));
		_2112d6c0d_write(_self_, jule::Str(" _other", 7));
	};
	_2112d6c0d_write(_self_, jule::Str(") { ", 4));
	if ((!(_39713_assignment))) {
		_2112d6c0d_write(_self_, jule::Str("return ", 7));
	};
	_2112d6c0d_write(_self_, static__2112a11e4_funcIns(_39155_f));
	if ((!(_39613_unary))) {
		_2112d6c0d_write(_self_, jule::Str("(this, _other); ", 16));
		if (_39713_assignment) {
			_2112d6c0d_write(_self_, jule::Str("return *this; ", 14));
		};
		_2112d6c0d_write(_self_, jule::Str("}", 1));
	} else {
		_2112d6c0d_write(_self_, jule::Str("(this); }", 9));
	};
	_2112d6c0d_write(_self_, jule::Str("\n\n", 2));
}



inline void _211342be2_structureOperators(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Ptr<_246142319_StructIns>& _44043_s) {
	jule::Str _44113_ident = static__2112a1c72_structureIns(_44043_s);;
	_2112cc72b_structureOperatorEq(_self_, _44113_ident,_44043_s);
	_21134297d_structureOperatorNotEq(_self_, _44113_ident,_44043_s);
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_Gt,jule::Str(">", 1));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_GtEq,jule::Str(">=", 2));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_Lt,jule::Str("<", 1));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_LtEq,jule::Str("<=", 2));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_Shl,jule::Str("<<", 2));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_Shr,jule::Str(">>", 2));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_Add,jule::Str("+", 1));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_Sub,jule::Str("-", 1));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_Div,jule::Str("/", 1));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_Mul,jule::Str("*", 1));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_Mod,jule::Str("%", 1));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_BitAnd,jule::Str("&", 1));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_BitOr,jule::Str("|", 1));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_BitXor,jule::Str("^", 1));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_Neg,jule::Str("-", 1));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_Pos,jule::Str("+", 1));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_BitNot,jule::Str("~", 1));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_AddAssign,jule::Str("+=", 2));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_SubAssign,jule::Str("-=", 2));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_DivAssign,jule::Str("/=", 2));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_MulAssign,jule::Str("*=", 2));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_ModAssign,jule::Str("%=", 2));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_ShlAssign,jule::Str("<<=", 3));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_ShrAssign,jule::Str(">>=", 3));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_BitOrAssign,jule::Str("|=", 2));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_BitAndAssign,jule::Str("&=", 2));
	_211342ab0_structureOperator(_self_, _44113_ident,_44043_s.get()._field_Operators._field_BitXorAssign,jule::Str("^=", 2));
}



inline void _211342d24_structureInsDecl(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Ptr<_246142319_StructIns>& _47941_s) {
	if ((_47941_s.get()._field_Methods.len() > 0LL)) {
		{
			auto &expr = _47941_s.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_213e437bd:;
			if (it != expr.end()) {
				jule::Ptr<_246cab768_Fn> _48125_m = *it;
				{
					_21134342e_funcDecl(_self_, _48125_m,false);
				}
				_iter_next_213e437bd:;
				++it;
				goto _iter_begin_213e437bd;
			}
			_iter_end_213e437bd:;
		};
	};
	_2112d6c0d_write(_self_, jule::Str("struct ", 7));
	jule::Str _48713_outIdent = static__2112a1c72_structureIns(_47941_s);;
	_2112d6c0d_write(_self_, _48713_outIdent);
	_2112d6c0d_write(_self_, jule::Str(" {\n", 3));
	_211319ba8_addIndent(_self_);
	{
		auto &expr = _47941_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_213e45380:;
		if (it != expr.end()) {
			jule::Ptr<_24611d977_FieldIns> _49321_f = *it;
			{
				_2112a75d5_indent(_self_);
				_211320a38_fieldDecl(_self_, _49321_f);
				_2112d6c0d_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_213e45380:;
			++it;
			goto _iter_begin_213e45380;
		}
		_iter_end_213e45380:;
	};
	_2112a75d5_indent(_self_);
	_2112d5b41_structureDestructor(_self_, _47941_s);
	_2112d6c0d_write(_self_, jule::Str("\n\n", 2));
	_2112a75d5_indent(_self_);
	_2112d6c0d_write(_self_, _48713_outIdent);
	_2112d6c0d_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_211319713_structureDeriveDefsDecls(_self_, _47941_s);
	_211342be2_structureOperators(_self_, _47941_s);
	_2112d6c0d_write(_self_, jule::Str("\n", 1));
	_21131a58d_doneIndent(_self_);
	_2112a75d5_indent(_self_);
	_2112d6c0d_write(_self_, jule::Str("};", 2));
}



inline void _211342e56_structureDecl(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Ptr<_246117c3a_Struct>& _51838_s) {
	{
		auto &expr = _51838_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_213e49ebc:;
		if (it != expr.end()) {
			jule::Ptr<_246142319_StructIns> _51921_ins = *it;
			{
				_211342d24_structureInsDecl(_self_, _51921_ins);
			}
			_iter_next_213e49ebc:;
			++it;
			goto _iter_begin_213e49ebc;
		}
		_iter_end_213e49ebc:;
	};
}



inline void _211343088_structureDecls(jule::Ptr<_2113423d9_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_213e4a6d7:;
		if (it != expr.end()) {
			jule::Ptr<_246117c3a_Struct> _52521_s = *it;
			{
				if ((_52521_s.get()._field_Token != nullptr)) {
					_211342e56_structureDecl(_self_, _52521_s);
					_2112d6c0d_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_213e4a6d7:;
			++it;
			goto _iter_begin_213e4a6d7;
		}
		_iter_end_213e4a6d7:;
	};
}



inline void _2113431ba_paramsDecls(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Slice<jule::Ptr<_246cab955_ParamIns>>& _53336_params) {
	if ((_53336_params.len() == 0LL)) {
		_2112d6c0d_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_2112d6c0d_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _53336_params;
		auto it = expr.begin();
		_iter_begin_213e4d2de:;
		if (it != expr.end()) {
			jule::I64 _54014_i = it - expr.begin();
			jule::Ptr<_246cab955_ParamIns> _54021_p = *it;
			{
				_2112d6c0d_write(_self_, static__21134a425_paramIns(_54021_p));
				if (((_53336_params.len() - _54014_i) > 1LL)) {
					_2112d6c0d_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_213e4d2de:;
			++it;
			_54014_i++;
			goto _iter_begin_213e4d2de;
		}
		_iter_end_213e4d2de:;
	};
	_2112d6c0d_write(_self_, jule::Str(")", 1));
}



inline void _2113432ec_funcHead(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Ptr<_246cabb42_FnIns>& _55033_f, jule::Bool _55044_ptr) {
	if ((((!(_55044_ptr)) && _2449dc2d1_Inline) && (!(_24618b044_IsEntryPoint(_55033_f.get()._field_Decl.ptr()))))) {
		_2112d6c0d_write(_self_, jule::Str("inline ", 7));
	};
	_2112d6c0d_write(_self_, static__21134a964_funcInsResult(_55033_f));
	if (_55044_ptr) {
		_2112d6c0d_write(_self_, jule::Str("(*", 2));
		_2112d6c0d_write(_self_, static__2112a11e4_funcIns(_55033_f));
		_2112d6c0d_write(_self_, jule::Str(")", 1));
	} else {
		_2112d6c0d_write(_self_, jule::Str(" ", 1));
		_2112d6c0d_write(_self_, static__2112a11e4_funcIns(_55033_f));
	};
}



inline void _21134342e_funcDecl(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Ptr<_246cab768_Fn>& _56533_f, jule::Bool _56541_ptr) {
	{
		auto &expr = _56533_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_213e53aec:;
		if (it != expr.end()) {
			jule::Ptr<_246cabb42_FnIns> _56621_c = *it;
			{
				_2112a75d5_indent(_self_);
				_2113432ec_funcHead(_self_, _56621_c,_56541_ptr);
				_2113431ba_paramsDecls(_self_, _56621_c.get()._field_Params);
				_2112d6c0d_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_213e53aec:;
			++it;
			goto _iter_begin_213e53aec;
		}
		_iter_end_213e53aec:;
	};
}



inline void _211343561_funcDecls(jule::Ptr<_2113423d9_ObjectCoder> _self_) {
	_2112d319e_iterPackages(_self_, jule::Fn<void(jule::Ptr<_246ce342b_Package>&)>([=](jule::Ptr<_246ce342b_Package>& _57535_pkg) mutable -> void {
		_211345332_iterFiles(_57535_pkg,jule::Fn<void(jule::Ptr<_246d5956e_SymbolTable>&)>([=](jule::Ptr<_246d5956e_SymbolTable>& _57636_file) mutable -> void {
			{
				auto &expr = _57636_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_213e57408:;
				if (it != expr.end()) {
					jule::Ptr<_246cab768_Fn> _57729_f = *it;
					{
						if (((!(_57729_f.get()._field_CppLinked)) && (_57729_f.get()._field_Token != nullptr))) {
							_21134342e_funcDecl(_self_, _57729_f,false);
						};
					}
					_iter_next_213e57408:;
					++it;
					goto _iter_begin_213e57408;
				}
				_iter_end_213e57408:;
			};
		}));
	}));
}



inline void _211343693_traitDataTypes(jule::Ptr<_2113423d9_ObjectCoder> _self_) {
	_2112d319e_iterPackages(_self_, jule::Fn<void(jule::Ptr<_246ce342b_Package>&)>([=](jule::Ptr<_246ce342b_Package>& _58735_pkg) mutable -> void {
		_211345332_iterFiles(_58735_pkg,jule::Fn<void(jule::Ptr<_246d5956e_SymbolTable>&)>([=](jule::Ptr<_246d5956e_SymbolTable>& _58836_file) mutable -> void {
			{
				auto &expr = _58836_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_213e5a373:;
				if (it != expr.end()) {
					jule::Ptr<_246cb3e9b_Trait> _58929_t = *it;
					{
						if ((_58929_t.get()._field_Token == nullptr)) {
							return;;
						};
						_2112d6c0d_write(_self_, jule::Str("struct ", 7));
						_2112d6c0d_write(_self_, static__2112a148b_traitDecl(_58929_t));
						_2112d6c0d_write(_self_, jule::Str("MptrData", 8));
						_2112d6c0d_write(_self_, jule::Str(" {\n", 3));
						_211319ba8_addIndent(_self_);
						{
							auto &expr = _58929_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_213e5c4b8:;
							if (it != expr.end()) {
								jule::Ptr<_246cab768_Fn> _59833_m = *it;
								{
									jule::Ptr<_246cabb42_FnIns> _59933_ins = _59833_m.get()._field_Instances[0LL];;
									jule::Ptr<_246cab955_ParamIns> _60033_p = _59933_ins.get()._field_Params[0LL];;
									_60033_p.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_58929_t, 2)});
									{
										auto expr = _59933_ins.get()._field_Params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_213e5e7b7:;
										if (it != expr.end()) {
											jule::I64 _60430_i = it - expr.begin();
											jule::Ptr<_246cab955_ParamIns> _60437_ip = *it;
											{
												if (_244971771_IsAnonIdent(_60437_ip.get()._field_Decl.get()._field_Ident)) {
													_60437_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _246ca2011_Itoa(_60430_i));
												};
											}
											_iter_next_213e5e7b7:;
											++it;
											_60430_i++;
											goto _iter_begin_213e5e7b7;
										}
										_iter_end_213e5e7b7:;
									};
									if ((!(_24267eb8a_Production))) {
										_59933_ins.get()._field_Params = jule::alloc_for_append(_59933_ins.get()._field_Params,1);_59933_ins.get()._field_Params.__push(jule::new_ptr<_246cab955_ParamIns>(_246cab955_ParamIns{._field_Decl=jule::new_ptr<_246cab57b_Param>(_246cab57b_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(jule::new_ptr<_211346399_customType>(_211346399_customType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_21134342e_funcDecl(_self_, _59833_m,true);
								}
								_iter_next_213e5c4b8:;
								++it;
								goto _iter_begin_213e5c4b8;
							}
							_iter_end_213e5c4b8:;
						};
						_21131a58d_doneIndent(_self_);
						_2112a75d5_indent(_self_);
						_2112d6c0d_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_213e5a373:;
					++it;
					goto _iter_begin_213e5a373;
				}
				_iter_end_213e5a373:;
			};
		}));
	}));
}



inline void _2113437c5_paramIns(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Ptr<_246cab955_ParamIns>& _63133_p) {
	_2112d6c0d_write(_self_, static__21134a425_paramIns(_63133_p));
	_2112d6c0d_write(_self_, jule::Str(" ", 1));
	_2112d6c0d_write(_self_, static__2112a1733_param(_63133_p.get()._field_Decl));
}



inline void _211343907_paramsIns(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Slice<jule::Ptr<_246cab955_ParamIns>>& _63734_params) {
	if ((_63734_params.len() == 0LL)) {
		_2112d6c0d_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_2112d6c0d_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _63734_params;
		auto it = expr.begin();
		_iter_begin_213e64646:;
		if (it != expr.end()) {
			jule::I64 _64314_i = it - expr.begin();
			jule::Ptr<_246cab955_ParamIns> _64321_p = *it;
			{
				_2113437c5_paramIns(_self_, _64321_p);
				if (((_63734_params.len() - _64314_i) > 1LL)) {
					_2112d6c0d_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_213e64646:;
			++it;
			_64314_i++;
			goto _iter_begin_213e64646;
		}
		_iter_end_213e64646:;
	};
	_2112d6c0d_write(_self_, jule::Str(")", 1));
}



inline void _211343a39_varInitExpr(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Ptr<_246d16372_Var>& _65236_v, jule::Fn<void(void)> _65245_init) {
	if (_65236_v.get()._field_Statically) {
		_2112d6c0d_write(_self_, jule::Str("static ", 7));
	};
	_2112d6c0d_write(_self_, static__21134b24a_kind(_65236_v.get()._field_Kind.get()._field_Kind));
	_2112d6c0d_write(_self_, jule::Str(" ", 1));
	if (_65236_v.get()._field_Reference) {
		_2112d6c0d_write(_self_, jule::Str("&", 1));
	};
	_2112d6c0d_write(_self_, static__2112a22b1_var(_65236_v));
	if ((_65245_init != nullptr)) {
		_2112d6c0d_write(_self_, jule::Str(" = ", 3));
		_65245_init();
	};
	_2112d6c0d_write(_self_, jule::Str(";", 1));
}



inline void _211343b6b_var(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Ptr<_246d16372_Var> _67027_v) {
	if (_2449714c9_IsIgnoreIdent(_67027_v.get()._field_Ident)) {
		return;;
	};
	if (((_67027_v.get()._field_Value != nullptr) && (_67027_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_67027_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			_211343a39_varInitExpr(_self_, _67027_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_211298e56_val(_self_.get()._field_ec, _67027_v.get()._field_Value);
			}));
			return;;
		};
		_211343a39_varInitExpr(_self_, _67027_v,nullptr);
		return;;
	};
	if (_21134e1d7_shouldInitialized(_67027_v.get()._field_Kind.get()._field_Kind)) {
		_211343a39_varInitExpr(_self_, _67027_v,jule::Fn<void(void)>([=](void) mutable -> void {
			_2112991cb_initExpr(_self_.get()._field_ec, _67027_v.get()._field_Kind.get()._field_Kind);
		}));
		return;;
	};
	_211343a39_varInitExpr(_self_, _67027_v,nullptr);
}



inline void _211343c9d_func(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Ptr<_246cab768_Fn>& _68929_f) {
	{
		auto &expr = _68929_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_213e6e794:;
		if (it != expr.end()) {
			jule::Ptr<_246cabb42_FnIns> _69021_ins = *it;
			{
				_2113432ec_funcHead(_self_, _69021_ins,false);
				_211343907_paramsIns(_self_, _69021_ins.get()._field_Params);
				_2112d6c0d_write(_self_, jule::Str(" ", 1));
				_2106799ec_funcScope(_self_.get()._field_sc, _69021_ins);
				if ((_69021_ins.get()._field_Scope != nullptr)) {
					_2112d6c0d_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_213e6e794:;
			++it;
			goto _iter_begin_213e6e794;
		}
		_iter_end_213e6e794:;
	};
}



inline void _211343dd0_traitWrappers(jule::Ptr<_2113423d9_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_213e6edb0:;
		if (it != expr.end()) {
			jule::Ptr<_2113421ec_traitHash> _70221_hash = *it;
			{
				{
					auto &expr = _70221_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_213e72555:;
					if (it != expr.end()) {
						jule::Ptr<_246cab768_Fn> _70325_m = *it;
						{
							jule::Str _70421_ident = _70325_m.get()._field_Ident;;
							_70325_m.get()._field_Instances[0LL].get()._field_Scope=nullptr;
							_70325_m.get()._field_Ident=((_70421_ident + jule::Str("_", 1)) + _246ca2011_Itoa(_70221_hash.get()._field_i));
							_211343c9d_func(_self_, _70325_m);
							_70325_m.get()._field_Ident=_70421_ident;
							if ((_70221_hash.get()._field_s == nullptr)) {
								if (_24267eb8a_Production) {
									_2112d6c0d_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_2112d6c0d_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_213e72555;
							};
							jule::Bool _72021_ptr = (!(_24617b4da_IsRef(_70325_m.get()._field_Params[0LL].ptr())));;
							jule::Ptr<_246cab768_Fn> _72225_sm = _24611b4ad_FindMethod(_70221_hash.get()._field_s.ptr(), _70325_m.get()._field_Ident,false);;
							if (((_72225_sm == nullptr) || (_72225_sm.get()._field_Instances.len() == 0LL))) {
								goto _iter_next_213e72555;
							};
							_211319ba8_addIndent(_self_);
							_2112d6c0d_write(_self_, jule::Str("{\n", 2));
							_2112a75d5_indent(_self_);
							if ((_72225_sm.get()._field_Exceptional || (!(_24618a10e_IsVoid(_72225_sm.ptr()))))) {
								_2112d6c0d_write(_self_, jule::Str("return ", 7));
							};
							_2112d6c0d_write(_self_, static__2112a0e4c_func(_72225_sm));
							_2112d6c0d_write(_self_, jule::Str("(", 1));
							if (_72021_ptr) {
								_2112d6c0d_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_2112d6c0d_write(_self_, static__211349b3e_structureIns(_70221_hash.get()._field_s));
								_2112d6c0d_write(_self_, jule::Str(">(", 2));
								if ((!(_24267eb8a_Production))) {
									_2112d6c0d_write(_self_, jule::Str("_00___file", 10));
								};
								_2112d6c0d_write(_self_, jule::Str(")", 1));
							} else {
								_2112d6c0d_write(_self_, jule::Str("_self_.data.as<", 15));
								_2112d6c0d_write(_self_, static__211349897_structure(_72225_sm.get()._field_Owner));
								_2112d6c0d_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _70325_m.get()._field_Params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_213e7658c:;
								if (it != expr.end()) {
									jule::Ptr<_246cab57b_Param> _74824_mp = *it;
									{
										_2112d6c0d_write(_self_, jule::Str(", ", 2));
										_2112d6c0d_write(_self_, static__2112a1733_param(_74824_mp));
									}
									_iter_next_213e7658c:;
									++it;
									goto _iter_begin_213e7658c;
								}
								_iter_end_213e7658c:;
							};
							_2112d6c0d_write(_self_, jule::Str(");\n}\n", 5));
							_21131a58d_doneIndent(_self_);
						}
						_iter_next_213e72555:;
						++it;
						goto _iter_begin_213e72555;
					}
					_iter_end_213e72555:;
				};
			}
			_iter_next_213e6edb0:;
			++it;
			goto _iter_begin_213e6edb0;
		}
		_iter_end_213e6edb0:;
	};
}



inline void _211344012_traitDatas(jule::Ptr<_2113423d9_ObjectCoder> _self_) {
	jule::Ptr<_246cb3e9b_Trait> _75917_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_213e7e09a:;
		if (it != expr.end()) {
			jule::Ptr<_2113421ec_traitHash> _76021_hash = *it;
			{
				jule::Str _76117_ident = static__2112a148b_traitDecl(_76021_hash.get()._field_t);;
				if ((_76021_hash.get()._field_t != _75917_old)) {
					if ((_75917_old != nullptr)) {
						_21131a58d_doneIndent(_self_);
						_2112a75d5_indent(_self_);
						_2112d6c0d_write(_self_, jule::Str("};\n", 3));
					};
					_2112d6c0d_write(_self_, jule::Str("static ", 7));
					_2112d6c0d_write(_self_, _76117_ident);
					_2112d6c0d_write(_self_, jule::Str("MptrData ", 9));
					_2112d6c0d_write(_self_, _76117_ident);
					_2112d6c0d_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_75917_old=_76021_hash.get()._field_t;
					_211319ba8_addIndent(_self_);
				};
				_2112a75d5_indent(_self_);
				_2112d6c0d_write(_self_, jule::Str("{\n", 2));
				_211319ba8_addIndent(_self_);
				{
					auto &expr = _76021_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_213e832e1:;
					if (it != expr.end()) {
						jule::Ptr<_246cab768_Fn> _77925_m = *it;
						{
							jule::Str _78021_mIdent = static__2112a0e4c_func(_77925_m);;
							_2112a75d5_indent(_self_);
							_2112d6c0d_write(_self_, jule::Str(".", 1));
							_2112d6c0d_write(_self_, _78021_mIdent);
							_2112d6c0d_write(_self_, jule::Str("=", 1));
							_2112d6c0d_write(_self_, _78021_mIdent);
							_2112d6c0d_write(_self_, jule::Str("_", 1));
							_2112d6c0d_write(_self_, _246ca2011_Itoa(_76021_hash.get()._field_i));
							_2112d6c0d_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_213e832e1:;
						++it;
						goto _iter_begin_213e832e1;
					}
					_iter_end_213e832e1:;
				};
				_21131a58d_doneIndent(_self_);
				_2112a75d5_indent(_self_);
				_2112d6c0d_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_213e7e09a:;
			++it;
			goto _iter_begin_213e7e09a;
		}
		_iter_end_213e7e09a:;
	};
	if ((_75917_old != nullptr)) {
		_21131a58d_doneIndent(_self_);
		_2112a75d5_indent(_self_);
		_2112d6c0d_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _211344144_globals(jule::Ptr<_2113423d9_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Globals;
		auto it = expr.begin();
		_iter_begin_213e8800a:;
		if (it != expr.end()) {
			jule::Ptr<_246d16372_Var> _80221_v = *it;
			{
				_2112d6c0d_write(_self_, static__21134b24a_kind(_80221_v.get()._field_Kind.get()._field_Kind));
				_2112d6c0d_write(_self_, jule::Str(" ", 1));
				if (_80221_v.get()._field_Reference) {
					_2112d6c0d_write(_self_, jule::Str("&", 1));
				};
				_2112d6c0d_write(_self_, static__2112a22b1_var(_80221_v));
				_2112d6c0d_write(_self_, jule::Str(" = ", 3));
				_211298e56_val(_self_.get()._field_ec, _80221_v.get()._field_Value);
				_2112d6c0d_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_213e8800a:;
			++it;
			goto _iter_begin_213e8800a;
		}
		_iter_end_213e8800a:;
	};
}



inline void _211344276_decls(jule::Ptr<_2113423d9_ObjectCoder> _self_) {
	_2112d4601_traitDecls(_self_);
	_2112d547b_structurePlainDecls(_self_);
	_211343088_structureDecls(_self_);
	_211343561_funcDecls(_self_);
	_2112d6c0d_write(_self_, jule::Str("\n\n", 2));
	_211343693_traitDataTypes(_self_);
	_2112d6c0d_write(_self_, jule::Str("\n\n", 2));
	_211343dd0_traitWrappers(_self_);
	_2112d6c0d_write(_self_, jule::Str("\n\n", 2));
	_211344012_traitDatas(_self_);
	_2112d6c0d_write(_self_, jule::Str("\n\n", 2));
	_211344144_globals(_self_);
}



inline void _2113443a8_structureMethods(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Ptr<_246142319_StructIns>& _83041_s) {
	{
		auto &expr = _83041_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_213e8e275:;
		if (it != expr.end()) {
			jule::Ptr<_246cab768_Fn> _83121_f = *it;
			{
				_211343c9d_func(_self_, _83121_f);
				_2112d6c0d_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_213e8e275:;
			++it;
			goto _iter_begin_213e8e275;
		}
		_iter_end_213e8e275:;
	};
}



inline void _2113444da_structureDeriveDefs(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Ptr<_246142319_StructIns>& _83744_s) {
	if (_246107ec2_IsDerives(_83744_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_2112d6c0d_write(_self_, static__21129bc7d_cloneFuncDef(_83744_s.get()._field_Decl));
		_2112d6c0d_write(_self_, jule::Str("{\n", 2));
		_211319ba8_addIndent(_self_);
		_2112a75d5_indent(_self_);
		_2112d6c0d_write(_self_, static__211349b3e_structureIns(_83744_s));
		_2112d6c0d_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _83744_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_213e920e1:;
			if (it != expr.end()) {
				jule::Ptr<_24611d977_FieldIns> _84520_f = *it;
				{
					jule::Str _84621_ident = static__2112a2019_field(_84520_f.get()._field_Decl);;
					_2112a75d5_indent(_self_);
					_2112d6c0d_write(_self_, jule::Str("clone.", 6));
					_2112d6c0d_write(_self_, _84621_ident);
					_2112d6c0d_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_2112d6c0d_write(_self_, _84621_ident);
					_2112d6c0d_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_213e920e1:;
				++it;
				goto _iter_begin_213e920e1;
			}
			_iter_end_213e920e1:;
		};
		_2112a75d5_indent(_self_);
		_2112d6c0d_write(_self_, jule::Str("return clone;\n", 14));
		_21131a58d_doneIndent(_self_);
		_2112d6c0d_write(_self_, jule::Str("}", 1));
	};
}



inline void _21134461c_structureOstream(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Ptr<_246142319_StructIns>& _86141_s) {
	_2112a75d5_indent(_self_);
	_2112d6c0d_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_2112d6c0d_write(_self_, static__2112a1c72_structureIns(_86141_s));
	_2112d6c0d_write(_self_, jule::Str(" _Src) {\n", 9));
	_211319ba8_addIndent(_self_);
	_2112a75d5_indent(_self_);
	jule::Ptr<_246cab768_Fn> _86917_fts = _24611b4ad_FindMethod(_86141_s.ptr(), jule::Str("Str", 3),false);;
	if (static__246d17a38_Str(_86917_fts)) {
		_2112d6c0d_write(_self_, jule::Str("_Stream << ", 11));
		_2112d6c0d_write(_self_, static__2112a0e4c_func(_86917_fts));
		_2112d6c0d_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_2112d6c0d_write(_self_, jule::Str("_Stream << \"", 12));
		_2112d6c0d_write(_self_, _86141_s.get()._field_Decl.get()._field_Ident);
		_2112d6c0d_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _86141_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_213e99ec8:;
			if (it != expr.end()) {
				jule::I64 _87918_i = it - expr.begin();
				jule::Ptr<_24611d977_FieldIns> _87925_f = *it;
				{
					_2112a75d5_indent(_self_);
					_2112d6c0d_write(_self_, jule::Str("_Stream << \"", 12));
					_2112d6c0d_write(_self_, _87925_f.get()._field_Decl.get()._field_Ident);
					_2112d6c0d_write(_self_, jule::Str(":", 1));
					jule::Ptr<_246142319_StructIns> _88621_strct = _246d9350e_Struct(_87925_f.get()._field_Kind.ptr());;
					if ((((_88621_strct != nullptr) && (_88621_strct.get()._field_Decl != nullptr)) && _88621_strct.get()._field_Decl.get()._field_CppLinked)) {
						_2112d6c0d_write(_self_, jule::Str(" cpp.", 5));
						_2112d6c0d_write(_self_, static__2112a2019_field(_87925_f.get()._field_Decl));
						_2112d6c0d_write(_self_, jule::Str("\"", 1));
					} else {
						_2112d6c0d_write(_self_, jule::Str("\" << _Src.", 10));
						_2112d6c0d_write(_self_, static__2112a2019_field(_87925_f.get()._field_Decl));
					};
					if (((_87918_i + 1LL) < _86141_s.get()._field_Fields.len())) {
						_2112d6c0d_write(_self_, jule::Str(" << \", \"", 8));
					};
					_2112d6c0d_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_213e99ec8:;
				++it;
				_87918_i++;
				goto _iter_begin_213e99ec8;
			}
			_iter_end_213e99ec8:;
		};
		_2112a75d5_indent(_self_);
		_2112d6c0d_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_2112a75d5_indent(_self_);
	_2112d6c0d_write(_self_, jule::Str("return _Stream;\n", 16));
	_21131a58d_doneIndent(_self_);
	_2112d6c0d_write(_self_, jule::Str("}", 1));
}



inline void _21134474e_structureIns(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Ptr<_246142319_StructIns>& _91237_s) {
	_2113443a8_structureMethods(_self_, _91237_s);
	_2112d6c0d_write(_self_, jule::Str("\n\n", 2));
	_2113444da_structureDeriveDefs(_self_, _91237_s);
	_2112d6c0d_write(_self_, jule::Str("\n\n", 2));
	_21134461c_structureOstream(_self_, _91237_s);
}



inline void _211344881_structure(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Ptr<_246117c3a_Struct>& _92034_s) {
	{
		auto &expr = _92034_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_213ea3d4a:;
		if (it != expr.end()) {
			jule::Ptr<_246142319_StructIns> _92121_ins = *it;
			{
				_21134474e_structureIns(_self_, _92121_ins);
				_2112d6c0d_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_213ea3d4a:;
			++it;
			goto _iter_begin_213ea3d4a;
		}
		_iter_end_213ea3d4a:;
	};
}



inline void _2113449b3_structures(jule::Ptr<_2113423d9_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_213ea5005:;
		if (it != expr.end()) {
			jule::Ptr<_246117c3a_Struct> _92821_s = *it;
			{
				if ((_92821_s.get()._field_Token != nullptr)) {
					_211344881_structure(_self_, _92821_s);
					_2112d6c0d_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_213ea5005:;
			++it;
			goto _iter_begin_213ea5005;
		}
		_iter_end_213ea5005:;
	};
}



inline void _211344ae5_funcs(jule::Ptr<_2113423d9_ObjectCoder> _self_) {
	_2112d319e_iterPackages(_self_, jule::Fn<void(jule::Ptr<_246ce342b_Package>&)>([=](jule::Ptr<_246ce342b_Package>& _93735_pkg) mutable -> void {
		_211345332_iterFiles(_93735_pkg,jule::Fn<void(jule::Ptr<_246d5956e_SymbolTable>&)>([=](jule::Ptr<_246d5956e_SymbolTable>& _93836_file) mutable -> void {
			{
				auto &expr = _93836_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_213ea8624:;
				if (it != expr.end()) {
					jule::Ptr<_246cab768_Fn> _93929_f = *it;
					{
						if (((!(_24267e162_Test)) && _21134de40_hasDirective(_93929_f.get()._field_Directives,jule::Str("test", 4)))) {
							goto _iter_next_213ea8624;
						};
						if (((!(_93929_f.get()._field_CppLinked)) && (_93929_f.get()._field_Token != nullptr))) {
							_211343c9d_func(_self_, _93929_f);
							_2112d6c0d_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_213ea8624:;
					++it;
					goto _iter_begin_213ea8624;
				}
				_iter_end_213ea8624:;
			};
		}));
	}));
}



inline void _211344c27_pushInit(jule::Ptr<_2113423d9_ObjectCoder> _self_, jule::Ptr<_246ce342b_Package>& _95233_pkg) {
	_211345332_iterFiles(_95233_pkg,jule::Fn<void(jule::Ptr<_246d5956e_SymbolTable>&)>([=](jule::Ptr<_246d5956e_SymbolTable>& _95332_file) mutable -> void {
		{
			auto &expr = _95332_file.get()._field_Funcs;
			auto it = expr.begin();
			_iter_begin_213eab1b5:;
			if (it != expr.end()) {
				jule::Ptr<_246cab768_Fn> _95420_f = *it;
				{
					if ((_95420_f.get()._field_Ident == jule::Str("init", 4))) {
						_2112a75d5_indent(_self_);
						_2112d6c0d_write(_self_, static__2112a0e4c_func(_95420_f));
						_2112d6c0d_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_213eab1b5:;
				++it;
				goto _iter_begin_213eab1b5;
			}
			_iter_end_213eab1b5:;
		};
	}));
}



inline void _211344d59_initCaller(jule::Ptr<_2113423d9_ObjectCoder> _self_) {
	_2112d6c0d_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_211319ba8_addIndent(_self_);
	_2112d319e_iterPackages(_self_, jule::Fn<void(jule::Ptr<_246ce342b_Package>&)>([=](jule::Ptr<_246ce342b_Package>& _96735_pkg) mutable -> void {
		_211344c27_pushInit(_self_, _96735_pkg);
	}));
	_21131a58d_doneIndent(_self_);
	_2112d6c0d_write(_self_, jule::Str("\n}", 2));
}



inline void _211344e8b_end(jule::Ptr<_2113423d9_ObjectCoder> _self_) {
	_2112d6c0d_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_24267e162_Test) {
		_2112d6c0d_write(_self_, jule::Str("test_point();", 13));
	} else {
		_2112d6c0d_write(_self_, jule::Str("entry_point();", 14));
	};
	_2112d6c0d_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _2113450bd_serializeHead(jule::Ptr<_2113423d9_ObjectCoder> _self_) {
	_2112cb362_prepareStructures(_self_);
	_2112d3732_buildTraitMap(_self_);
	_211317766_head(_self_);
	_2112d6c0d_write(_self_, jule::Str("\n", 1));
	_211344276_decls(_self_);
	_2112d6c0d_write(_self_, jule::Str("\n", 1));
	_2113449b3_structures(_self_);
	_211344ae5_funcs(_self_);
	_211344d59_initCaller(_self_);
	_2112d6c0d_write(_self_, jule::Str("\n\n", 2));
}



inline void _211345200_Serialize(jule::Ptr<_2113423d9_ObjectCoder> _self_) {
	_2113450bd_serializeHead(_self_);
	_211344e8b_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _2113423d9_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _214019234_parseInteger(_2476690e2_argParser* _self_, jule::Str& _19031_s, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)> _19039_parser) {
	jule::I64 _19083_x = 0;
	jule::Bool _19089_ok = false;
	{
		
		if (_19031_s.empty()) {
			_case_begin_21401beb2:;
			{
				_19083_x = 0LL;
				_19089_ok = false;
				return std::make_tuple(_19083_x,_19089_ok);
			}
		}
		else if (_2445b3e96_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_21401c05b:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),16LL);
			}
		}
		else if (_2445b3e96_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_21401bd6e:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),2LL);
			}
		}
		else if (_2445b3e96_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_21401c435:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),8LL);
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_21401c512:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_21401b9c8:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s,10LL);
			}
		}
		_match_end_21401b8eb:;
	};
	return std::make_tuple(_19083_x,_19089_ok);
}

inline std::tuple<jule::U64,jule::Bool> _214022858_parseInteger(_2476690e2_argParser* _self_, jule::Str& _19031_s, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)> _19039_parser) {
	jule::U64 _19083_x = 0;
	jule::Bool _19089_ok = false;
	{
		
		if (_19031_s.empty()) {
			_case_begin_214025592:;
			{
				_19083_x = 0LLU;
				_19089_ok = false;
				return std::make_tuple(_19083_x,_19089_ok);
			}
		}
		else if (_2445b3e96_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_21402563b:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),16LL);
			}
		}
		else if (_2445b3e96_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_21402544e:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),2LL);
			}
		}
		else if (_2445b3e96_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_214025a15:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),8LL);
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_214025ae2:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_2140250a8:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s,10LL);
			}
		}
		_match_end_214024ecb:;
	};
	return std::make_tuple(_19083_x,_19089_ok);
}



inline jule::Str _2476698d9_getData(_2476690e2_argParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _247669b2b_processFlag(_2476690e2_argParser* _self_, jule::Trait<_24766550b_CommonFlag>& _21735_flag) {
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is<jule::Ptr<_214000b99_Flag>>()) {
			_case_begin_214016099:;
			{
				jule::Ptr<_214000b99_Flag> _22021_bf = _21735_flag.operator jule::Ptr<_214000b99_Flag>();;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_214016022:;
	};
	jule::Str _22513_data = _2476698d9_getData(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _24766550b_CommonFlag_mptr_data[(_21735_flag).type_offset]._2476645d7_Name(_21735_flag)) + jule::Str(": expression missing", 20)));
	};
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is<jule::Ptr<_213ee4583_Flag>>()) {
			_case_begin_21401781a:;
			{
				jule::Ptr<_213ee4583_Flag> _23221_intf = _21735_flag.operator jule::Ptr<_213ee4583_Flag>();;
				jule::Bool _23332_ok;;
				std::tie((*(_23221_intf.get()._field_data)),_23332_ok) = _214019234_parseInteger(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _23370_s, jule::I64 _23378_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _2469aabb5_ParseInt(_23370_s,_23378_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
						} 0;});
					})),true);
				}));
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _24766550b_CommonFlag_mptr_data[(_21735_flag).type_offset]._2476645d7_Name(_21735_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_213ee83cd_Flag>>()) {
			_case_begin_2140182cc:;
			{
				jule::Ptr<_213ee83cd_Flag> _24021_uintf = _21735_flag.operator jule::Ptr<_213ee83cd_Flag>();;
				jule::Bool _24133_ok;;
				std::tie((*(_24021_uintf.get()._field_data)),_24133_ok) = _214022858_parseInteger(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _24171_s, jule::I64 _24179_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _2469291c7_ParseUint(_24171_s,_24179_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
						} 0;});
					})),true);
				}));
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _24766550b_CommonFlag_mptr_data[(_21735_flag).type_offset]._2476645d7_Name(_21735_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_213eec019_Flag>>()) {
			_case_begin_214018343:;
			{
				jule::Ptr<_213eec019_Flag> _24821_ff = _21735_flag.operator jule::Ptr<_213eec019_Flag>();;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _246b19670_ParseFloat(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _24766550b_CommonFlag_mptr_data[(_21735_flag).type_offset]._2476645d7_Name(_21735_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2140047d5_Flag>>()) {
			_case_begin_2140183a9:;
			{
				(*(_21735_flag.operator jule::Ptr<_2140047d5_Flag>().get()._field_data))=_22513_data;
			}
		}
		_match_end_2140181ab:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _247669da1_singleDash(_2476690e2_argParser* _self_, jule::Str& _25730_arg) {
	if ((_25730_arg.len() == 1LL)) {
		return jule::VoidExceptional((_25730_arg + jule::Str(": missing argument", 18)));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25730_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_21402d1e3:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_24766550b_CommonFlag> _26321_flag = _247667497_FindFlagShort(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(((_25730_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)));
				};
				({
					auto except = _247669b2b_processFlag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_21402d1e3:;
			++it;
			goto _iter_begin_21402d1e3;
		}
		_iter_end_21402d1e3:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _24766a126_doubleDash(_2476690e2_argParser* _self_, jule::Str& _27230_arg) {
	if ((_27230_arg.len() == 2LL)) {
		return jule::VoidExceptional((_27230_arg + jule::Str(": missing argument", 18)));
	};
	jule::Trait<_24766550b_CommonFlag> _27617_flag = _247667189_FindFlag(&(*_self_)._field_set, _27230_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional((_27230_arg + jule::Str(": flag is not exist", 19)));
	};
	({
		auto except = _247669b2b_processFlag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _24766a302_tryArg(_2476690e2_argParser* _self_) {
	jule::Str _28413_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _24766a126_doubleDash(&(*_self_), _28413_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _247669da1_singleDash(&(*_self_), _28413_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28413_arg);;
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _24766a4cd_parse(_2476690e2_argParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _24766a302_tryArg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_21403686c:;
	}
	_iter_end_21403686c:;;
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _2476690e2_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _2434b48c0_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _2434de059_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();
	};
	{
		return static_cast<jule::Str>(_6924_s);
	};
}



inline jule::I64 _242713317_GetLastErrno(void) {
	return errno;
}



inline jule::I64 _2434e788c_Stat(jule::U8* _4816_path, struct stat* _4833_stat) {
	return static_cast<jule::I64>(stat(((char*)(_4816_path)), _4833_stat));
}



inline jule::I64 _2434e7c77_Open(jule::U8* _5316_path, jule::I64 _5329_flag, jule::I64 _5340_mode) {
	return static_cast<jule::I64>(open(((char*)(_5316_path)),_5329_flag,_5340_mode));
}



inline jule::U8* _2434e80b8_Getcwd(jule::U8* _5918_buff, jule::U64 _5931_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5918_buff)),_5931_bufflen)));
}



inline DIR* _2434e8591_Opendir(jule::U8* _6419_path) {
	return opendir(((char*)(_6419_path)));
}



inline struct dirent* _2434e8838_Readdir(DIR* _6723_dir) {
	return readdir(_6723_dir);
}



inline jule::I64 _2434e8ad0_Closedir(DIR* _7024_dir) {
	return static_cast<jule::I64>(closedir(_7024_dir));
}



inline jule::I64 _2434e9460_Mkdir(jule::U8* _7917_path, jule::I64 _7930_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_7917_path)),_7930_mode));
}



inline jule::I64 _2434e9707_Rmdir(jule::U8* _8417_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_8417_path))));
}



inline jule::I64 _2434e999e_Unlink(jule::U8* _8718_path) {
	return static_cast<jule::I64>(unlink(((char*)(_8718_path))));
}



inline jule::I64 _2435176e2_Seek(jule::I64 _269_handle, jule::I64 _2622_offset, jule::I64 _2635_origin) {
	return static_cast<jule::I64>(lseek(_269_handle,_2622_offset,_2635_origin));
}



inline jule::I64 _243517acc_Read(jule::I64 _3116_handle, void* _3133_buff, jule::U64 _3148_n) {
	return static_cast<jule::I64>(read(_3116_handle,_3133_buff,_3148_n));
}



inline jule::I64 _243517e51_Close(jule::I64 _3610_handle) {
	return static_cast<jule::I64>(close(_3610_handle));
}



inline jule::I64 _24351833b_Write(jule::I64 _3917_handle, void* _3930_buff, jule::U64 _3945_n) {
	return static_cast<jule::I64>(write(_3917_handle,_3930_buff,_3945_n));
}



inline void _24351854a_Exit(jule::I64 _449_code) {
	exit(_449_code);
}



inline jule::I64 _2435ad2e3_getLastOsError(void) {
	jule::I64 _309_err = _242713317_GetLastErrno();;
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_211442088:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_2114418d4:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_21144195b:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_2114419d3:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_211441c69:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_211441cd0:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_211441d46:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else {
			_case_begin_21144173b:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_2114416d6:;
	};
}



inline jule::Slice<jule::Str> _2435adcc7_Args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _2435ae24a_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _2435b0191_getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _2435b0191_getwd(void) {
	jule::U8* _1113_buff = _2434e80b8_Getcwd(nullptr,0LLU);;
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(_2435ad2e3_getLastOsError());
	};
	jule::Str _159_pwd = _2434de059_BytePtrToStr(_1113_buff);;
	{
		_2434b48c0_Free(_1113_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(),_159_pwd);
}



inline jule::Bool _244459534_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_2444c887d__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);
	};
	return _2444d2337_isExcludingLatin(_2444644a6_Letter,_7613_r);
}



inline jule::Bool _2444d1754_is16(jule::Slice<_2444ceb92_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_211b0ee92:;
			if (it != expr.end()) {
				jule::I64 _19313_i = it - expr.begin();
				{
					_2444ceb92_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));
						};
					};
				}
				_iter_next_211b0ee92:;
				++it;
				_19313_i++;
				goto _iter_begin_211b0ee92;
			}
			_iter_end_211b0ee92:;
		};
		return false;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_2444ceb92_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_211b0e6bc:;
	}
	_iter_end_211b0e6bc:;;
	return false;
}



inline jule::Bool _2444d1a95_is32(jule::Slice<_2444d0115_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_211b1355b:;
			if (it != expr.end()) {
				jule::I64 _23013_i = it - expr.begin();
				{
					_2444d0115_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));
						};
					};
				}
				_iter_next_211b1355b:;
				++it;
				_23013_i++;
				goto _iter_begin_211b1355b;
			}
			_iter_end_211b1355b:;
		};
		return false;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_2444d0115_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_211b14815:;
	}
	_iter_end_211b14815:;;
	return false;
}



inline jule::Bool _2444d2337_isExcludingLatin(jule::Ptr<_2444d0588_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_2444ceb92_Range16> &_28014_R16 = _27821_rangeTab.get()._field_R16;;
		jule::I64 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if (((_28014_R16.len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>(_28014_R16[(_28014_R16.len() - 1LL)]._field_Hi)))) {
			return _2444d1754_is16(_28014_R16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));
		};
	};
	jule::Slice<_2444d0115_Range32> &_28710_R32 = _27821_rangeTab.get()._field_R32;;
	if (((_28710_R32.len() > 0LL) && (_27844_r >= static_cast<jule::I32>(_28710_R32[0LL]._field_Lo)))) {
		return _2444d1a95_is32(_28710_R32,static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));
	};
	return false;
}



inline jule::Bool _2444d25ce_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_2444c887d__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);
	};
	return _2444d2337_isExcludingLatin(_24446b546_Upper,_29512_r);
}



inline std::tuple<jule::I32,jule::I64> _244593849_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	jule::I32 _18228_r = 0;
	jule::I64 _18237_size = 0;
	if ((_18215_p.len() < 1LL)) {
		_18228_r = 65533LL;
		_18237_size = 0LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _2445926e4_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		_18228_r = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_244592c66_acceptRange _1969_accept = _2445930c9_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	if ((_1959_sz <= 2LL)) {
		_18228_r = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		_18237_size = 2LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	if ((_1959_sz <= 3LL)) {
		_18228_r = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		_18237_size = 3LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	_18228_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	_18237_size = 4LL;
	return std::make_tuple(_18228_r,_18237_size);
}



inline std::tuple<jule::I32,jule::I64> _244593b68_DecodeRuneStr(jule::Str _22918_s) {
	jule::I32 _22928_r = 0;
	jule::I64 _22937_size = 0;
	if ((_22918_s.len() < 1LL)) {
		_22928_r = 65533LL;
		_22937_size = 0LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _2445926e4_first[static_cast<jule::I64>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		_22928_r = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::I64 _2429_sz = static_cast<jule::I64>((_2349_x & 7LLU));;
	_244592c66_acceptRange _2439_accept = _2445930c9_acceptRanges[static_cast<jule::I64>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	if ((_2429_sz <= 2LL)) {
		_22928_r = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		_22937_size = 2LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	if ((_2429_sz <= 3LL)) {
		_22928_r = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		_22937_size = 3LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	_22928_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	_22937_size = 4LL;
	return std::make_tuple(_22928_r,_22937_size);
}



inline std::tuple<jule::I32,jule::I64> _244593e10_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	jule::I32 _27632_r = 0;
	jule::I64 _27641_size = 0;
	if ((_27619_p.len() == 0LL)) {
		_27632_r = 65533LL;
		_27641_size = 0LL;
		return std::make_tuple(_27632_r,_27641_size);
	};
	jule::I64 _2809_end = _27619_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	_27632_r=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((_27632_r < 128LL)) {
		_27641_size = 1LL;
		return std::make_tuple(_27632_r,_27641_size);
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_2445957d5_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_211b643d1;
			};
		}
	_iter_next_211b643d1:;
	}
	_iter_end_211b643d1:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	std::tie(_27632_r,_27641_size) = _244593849_DecodeRune(_27619_p.slice(_28113_start,_2809_end));
	if (((_28113_start + _27641_size) != _2809_end)) {
		_27632_r = 65533LL;
		_27641_size = 1LL;
		return std::make_tuple(_27632_r,_27641_size);
	};
	return std::make_tuple(_27632_r,_27641_size);
}



inline jule::Slice<jule::U8> _244594bad_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));
	};
	return _244594eee_appendRuneNonASCII(_40519_p,_40530_r);
}



inline jule::Slice<jule::U8> _244594eee_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_211b7a969:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_211b7accc:;
			{
				_41242_r=128LL;
				goto _case_begin_211b792b4;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_211b792b4:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		else {
			_case_begin_211b787d0:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		_match_end_211b7877a:;
	};
}



inline jule::I64 _24459553d_RuneCountStr(jule::Str _47317_s) {
	jule::I64 _47327_n = 0;
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (_47327_n)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_211b85336;
			};
			jule::U8 _48213_x = _2445926e4_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_211b85336;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_211b85336;
			};
			_244592c66_acceptRange _49213_accept = _2445930c9_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_211b85336:;
	}
	_iter_end_211b85336:;;
	return _47327_n;
}



inline jule::Bool _2445957d5_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);
}



inline jule::Slice<jule::U8> _2445b32c5_Stobs(jule::Str& _911_s) {
	return _911_s.fake_slice();
}



inline void _2445b3924_PushToStrBuffer(jule::Str& _2825_s, jule::Slice<jule::U8> _2833_b) {
	{
		(_2825_s).buffer.append((_2833_b).begin(), (_2833_b).end());
	};
}



inline jule::I64 _2445b2703_FindLastByte(jule::Slice<jule::U8> _2617_s, jule::U8 _2628_b) {
	jule::U8* _279_first = (&(_2617_s[0LL]));;
	jule::U8* _2813_it = (&(_2617_s[(_2617_s.len() - 1LL)]));;
	for (; (_2813_it >= _279_first); (_2813_it)--) {
		{
			{
				if (((*(_2813_it)) == _2628_b)) {
					return static_cast<jule::I64>(((jule::I64)((_2813_it - _279_first))));
				};
			};
		}
	_iter_next_211bad309:;
	}
	_iter_end_211bad309:;;
	return -1LL;
}



inline jule::I64 _2445b3d31_FindLastByteStr(jule::Str& _4521_s, jule::U8 _4529_b) {
	return static_cast<jule::I64>(_2445b2703_FindLastByte(_2445b32c5_Stobs(_4521_s),_4529_b));
}



inline jule::Str _24459aab5_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	jule::Str _2013_ss = jule::Str::alloc(0LL, (_1211_s.len() * _1223_n));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2013_ss+=_1211_s;
		}
	_iter_next_211bc3363:;
	}
	_iter_end_211bc3363:;;
	return _2013_ss;
}



inline jule::Bool _244596ebd_hasPrefix(jule::Str& _2715_s, jule::Str& _2724_sub, jule::I64 _2738_start) {
	if (((_2724_sub.len() == 0LL) || ((_2715_s.len() - _2738_start) < _2724_sub.len()))) {
		return false;
	};
	jule::I64 _3213_i = 0LL;;
	for (; (_3213_i < _2724_sub.len()); std::tie(_3213_i,_2738_start) = std::make_tuple(static_cast<jule::I64>((_3213_i + 1LL)),static_cast<jule::I64>((_2738_start + 1LL)))) {
		{
			if ((_2715_s[_2738_start] != _2724_sub[_3213_i])) {
				return false;
			};
		}
	_iter_next_211bc66eb:;
	}
	_iter_end_211bc66eb:;;
	return true;
}



inline jule::Bool _2445b3e96_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _244596ebd_hasPrefix(_4214_s,_4222_sub,0LL);
}



inline jule::Bool _2445b4150_hasSuffix(jule::Str& _4615_s, jule::Str& _4624_sub, jule::I64 _4638_start) {
	if (((_4624_sub.len() == 0LL) || ((_4615_s.len() - _4638_start) < _4624_sub.len()))) {
		return false;
	};
	_4638_start=static_cast<jule::I64>((_4615_s.len() - _4638_start));
	jule::I64 _5213_i = 0LL;;
	for (; (_5213_i < _4624_sub.len()); (_5213_i)++) {
		{
			if ((_4615_s[((_4638_start - _5213_i) - 1LL)] != _4624_sub[((_4624_sub.len() - _5213_i) - 1LL)])) {
				return false;
			};
		}
	_iter_next_211bc88a7:;
	}
	_iter_end_211bc88a7:;;
	return true;
}



inline jule::Bool _2445b445d_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _2445b4150_hasSuffix(_6214_s,_6222_sub,0LL);
}



inline jule::I64 _2445b4848_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I64 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_244596ebd_hasPrefix(_7011_s,_7019_sub,_7033_i)) {
				return _7033_i;
			};
		}
	_iter_next_211bccdea:;
	}
	_iter_end_211bccdea:;;
	return -1LL;
}



inline jule::I64 _2445b5184_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I64 _9333_i) {
	jule::I64 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;
	};
	_julec_label_loop:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I64 _10017_k = _9413_j;;
			jule::I64 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); std::tie(_10017_k,_10117_z) = std::make_tuple(static_cast<jule::I64>((_10017_k + 1LL)),static_cast<jule::I64>((_10117_z + 1LL)))) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_211bcea23;
					};
				}
			_iter_next_211bd20b9:;
			}
			_iter_end_211bd20b9:;;
			return _9413_j;
		}
	_iter_next_211bcea23:;
	}
	_iter_end_211bcea23:;;
	return -1LL;
}



inline jule::I64 _2445b54c5_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I64>(_2445b5184_FindLastAt(_11513_s,_11521_sub,static_cast<jule::I64>((_11513_s.len() - 1LL))));
}



inline jule::I64 _2445b676d_findRune(jule::Slice<jule::U8>& _17114_s, jule::I32 _17125_r) {
	jule::I64 _17213_i = 0LL;;
	while ((_17213_i < _17114_s.len())) {
		{
			jule::I32 _17414_br;;
			jule::I64 _17418_n;;
			std::tie(_17414_br,_17418_n) = _244593849_DecodeRune(_17114_s.slice(_17213_i));
			if ((_17125_r == _17414_br)) {
				return _17213_i;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_211bda039:;
	}
	_iter_end_211bda039:;;
	return -1LL;
}



inline jule::I64 _2445b70a9_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I64>(_2445b3d31_FindLastByteStr(_19317_s,_19325_b));
}



inline jule::I64 _2445b7dbd_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _2445b32c5_Stobs(_22812_s);;
	jule::Slice<jule::U8> _23013_rb = _2445b32c5_Stobs(_22820_runes);;
	jule::I64 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r;;
			jule::I64 _23317_n;;
			std::tie(_23314_r,_23317_n) = _244593849_DecodeRune(_2299_sb.slice(_23113_i));
			if ((_2445b676d_findRune(_23013_rb,_23314_r) != -1LL)) {
				return _23113_i;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_211be12c6:;
	}
	_iter_end_211be12c6:;;
	return -1LL;
}



inline jule::Slice<jule::Str> _2445b85e9_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I64 _26232_n) {
	jule::I64 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL, _26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I64>(_26210_s.len());
	};
	jule::I64 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I64 _27613_j = _2445b4848_FindAt(_26210_s,_26218_sub,_27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_211be82de;
			};
			_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i,_27613_j));;
			_27413_i=static_cast<jule::I64>((_27613_j + _26218_sub.len()));
		}
	_iter_next_211be82de:;
	}
	_iter_end_211be82de:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i));;
	};
	return _26713_parts;
}



inline jule::Bool _2445b893a_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_2445b4848_FindAt(_29013_s,_29021_sub,0LL) != -1LL);
}



inline jule::Bool _2445b940d_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_2445b7dbd_FindAny(_30616_s,_30624_runes) != -1LL);
}



inline jule::I64 _2445b974e_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;
	};
	jule::I64 _31613_n = 0LL;;
	jule::I64 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _31913_j = _2445b4848_FindAt(_31210_s,_31218_sub,_31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_211bee02b;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I64>((_31913_j + _31218_sub.len()));
		}
	_iter_next_211bee02b:;
	}
	_iter_end_211bee02b:;;
	return _31613_n;
}



inline jule::Str _2445b9bd3_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I64 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;
	};
	jule::I64 _3379_m = _2445b974e_Count(_33212_s,_33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	jule::Str _34513_ss = jule::Str::alloc(0LL, (_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len()))));;
	jule::I64 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I64 _34813_j = _2445b4848_FindAt(_33212_s,_33220_sub,_34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_211c01490;
			};
			_34513_ss+=_33212_s.slice(_34613_i,_34813_j);
			_34513_ss+=_33230_new;
			_34613_i=static_cast<jule::I64>((_34813_j + _33220_sub.len()));
		}
	_iter_next_211c01490:;
	}
	_iter_end_211c01490:;;
	_34513_ss+=_33212_s.slice(_34613_i);
	return _34513_ss;
}



inline void _2445b6c46_trimLeft(jule::Slice<jule::U8>& _38818_s, jule::Slice<jule::U8>& _38830_cutset) {
	jule::I64 _38913_i = 0LL;;
	while ((_38913_i < _38818_s.len())) {
		{
			jule::I32 _39114_r;;
			jule::I64 _39117_n;;
			std::tie(_39114_r,_39117_n) = _244593849_DecodeRune(_38818_s.slice(_38913_i));
			if ((_2445b676d_findRune(_38830_cutset,_39114_r) == -1LL)) {
				_38818_s=_38818_s.slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_211c08398:;
	}
	_iter_end_211c08398:;;
	_38818_s=nullptr;
}



inline jule::Str _2445bac8e_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _2445b32c5_Stobs(_40313_s);;
	jule::Slice<jule::U8> _4059_bcutset = _2445b32c5_Stobs(_40321_cutset);;
	_2445b6c46_trimLeft(_40413_bytes,_4059_bcutset);
	return static_cast<jule::Str>(_40413_bytes);
}



inline void _2445bb047_trimRight(jule::Slice<jule::U8>& _41019_s, jule::Slice<jule::U8>& _41031_cutset) {
	jule::I64 _41113_i = _41019_s.len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r;;
			jule::I64 _41317_n;;
			std::tie(_41314_r,_41317_n) = _244593e10_DecodeLastRune(_41019_s.slice(0LL,_41113_i));
			if ((_2445b676d_findRune(_41031_cutset,_41314_r) == -1LL)) {
				_41019_s=_41019_s.slice(0LL,_41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_211c0b654:;
	}
	_iter_end_211c0b654:;;
	_41019_s=nullptr;
}



inline jule::Str _2445bb6c9_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _2445b32c5_Stobs(_4349_s);;
	jule::Slice<jule::U8> _4369_bcutset = _2445b32c5_Stobs(_43417_cutset);;
	_2445b6c46_trimLeft(_43513_bytes,_4369_bcutset);
	_2445bb047_trimRight(_43513_bytes,_4369_bcutset);
	return static_cast<jule::Str>(_43513_bytes);
}



inline jule::Str _2445bba1a_Join(jule::Slice<jule::Str> _4449_parts, jule::Str _44423_sep) {
	{
		auto _match_expr{ _4449_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_211c11093:;
			{
				return jule::Str();
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_211c11109:;
			{
				return _4449_parts[0LL];
			}
		}
		_match_end_211c10d73:;
	};
	jule::Str _45113_s = _4449_parts[0LL];;
	{
		auto expr = _4449_parts.slice(1LL);
		auto it = expr.begin();
		_iter_begin_211c0eee8:;
		if (it != expr.end()) {
			jule::Str &_45212_part = *it;
			{
				_45113_s+=_44423_sep;
				_45113_s+=_45212_part;
			}
			_iter_next_211c0eee8:;
			++it;
			goto _iter_begin_211c0eee8;
		}
		_iter_end_211c0eee8:;
	};
	return _45113_s;
}



inline jule::Str _24361b62b_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I64 _1109_volLen = _243614503_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _24363e484_IsPathSep(_1099_originalPath[0LL])) && _24363e484_IsPathSep(_1099_originalPath[1LL]))) {
			return _24361ed9e_FromSlash(_1099_originalPath);
		};
		return (_1099_originalPath + jule::Str(".", 1));
	};
	jule::Bool _1199_rooted = _24363e484_IsPathSep(_10814_path[0LL]);;
	jule::I64 _1269_n = _10814_path.len();;
	_2435ec530_lazyBuff _12713_out = _2435ec530_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I64 _13214_r = 0LL;;
	jule::I64 _13221_dotdot = 0LL;;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_2436044b0_append(&_12713_out, 47LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_24363e484_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_211c243a3:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _24363e484_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_211c21cda:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _24363e484_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_211c24d87:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_211c27ebc:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_24363e484_IsPathSep(static_cast<jule::U8>(_243603ca6_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_211c28a4a:;
									}
									_iter_end_211c28a4a:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_211c28033:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_2436044b0_append(&_12713_out, 47LLU);
									};
									_2436044b0_append(&_12713_out, '.');
									_2436044b0_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_211c27e01:;
						};
					}
				}
				else {
					_case_begin_211c1e469:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_2436044b0_append(&_12713_out, 47LLU);
						};
						;
						for (; ((_13214_r < _1269_n) && (!(_24363e484_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_2436044b0_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_211c235b1:;
						}
						_iter_end_211c235b1:;;
					}
				}
				_match_end_211c1e38c:;
			};
		}
	_iter_next_211c1ecc7:;
	}
	_iter_end_211c1ecc7:;;
	if ((_12713_out._field_w == 0LL)) {
		_2436044b0_append(&_12713_out, '.');
	};
	return _24361ed9e_FromSlash(_243607738_string(&_12713_out));
}



inline jule::Str _24361ed9e_FromSlash(jule::Str _21114_path) {
	{
		return _21114_path;
	};
}



inline jule::Str _243624832_Join(jule::Slice<jule::Str> _2259_elem) {
	return _24361ae99_join(_2259_elem);
}



inline jule::Str _24362c30c_Ext(jule::Str _2308_path) {
	jule::I64 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_24363e484_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);
			};
		}
	_iter_next_211c2d137:;
	}
	_iter_end_211c2d137:;;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _24362dd25_Abs(jule::Str _2458_path) {
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok;;
	std::tie(_24610_abs_path,_24620_ok) = _2436181e9_abs(_2458_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _24360ba28_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);
	};
	while (((_25413_path.len() > 0LL) && _24363e484_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL,(_25413_path.len() - 1LL));;
		}
	_iter_next_211c30700:;
	}
	_iter_end_211c30700:;;
	(_25413_path).mut_slice(_24361549e_VolumeName(_25413_path).len());;
	jule::I64 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_24363e484_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_211c32009:;
	}
	_iter_end_211c32009:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return static_cast<jule::Str>(47LL);
	};
	return _25413_path;
}



inline jule::Str _243611a3e_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _24361549e_VolumeName(_2858_path);;
	jule::I64 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_24363e484_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_211c3447e:;
	}
	_iter_end_211c3447e:;;
	jule::Str _2919_dir = _24361b62b_Clean(_2858_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;
	};
	return (_2869_vol + _2919_dir);
}



inline jule::Str _24361549e_VolumeName(jule::Str _30315_path) {
	return _24361ed9e_FromSlash(_30315_path.slice(0LL,_243614503_volumeNameLen(_30315_path)));
}



inline jule::Bool _24363e484_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);
}



inline jule::Bool _24364309d_IsAbs(jule::Str _5310_path) {
	return _2445b3e96_HasPrefix(_5310_path,jule::Str("/", 1));
}



inline jule::I64 _243614503_volumeNameLen(jule::Str _5918_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _2436181e9_abs(jule::Str _638_path) {
	jule::Bool _6326_ok = false;
	if (_24364309d_IsAbs(_638_path)) {
		_6326_ok = true;
		return std::make_tuple(_24361b62b_Clean(_638_path),_6326_ok);
	};
	jule::Str _679_wd = ({
		auto except = _2435ae24a_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			_6326_ok = false;
			return std::make_tuple(jule::Str(),_6326_ok);
		} jule::Str();});
	});;
	_6326_ok = true;
	return std::make_tuple(_24361ae99_join(jule::Slice<jule::Str>::make({_679_wd,_638_path})),_6326_ok);
}



inline jule::Str _24361ae99_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto &expr = _739_elem;
		auto it = expr.begin();
		_iter_begin_211c44cec:;
		if (it != expr.end()) {
			jule::I64 _749_i = it - expr.begin();
			jule::Str &_7412_e = *it;
			{
				if ((!(_7412_e.empty()))) {
					return _24361b62b_Clean(_2445bba1a_Join(_739_elem.slice(_749_i),static_cast<jule::Str>(47LL)));
				};
			}
			_iter_next_211c44cec:;
			++it;
			_749_i++;
			goto _iter_begin_211c44cec;
		}
		_iter_end_211c44cec:;
	};
	return jule::Str();
}



inline jule::I64 _242735988_getLastFsError(void) {
	jule::I64 _729_err = _242713317_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_211c53855:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_211c52c0b:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_211c53745:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_211c531a1:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_211c53217:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_211c5327d:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 84LL) {
			_case_begin_211c532e4:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_211c53998:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_211c53a0e:;
			{
				return static_cast<jule::I64>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_211c53a86:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_211c53b0d:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_211c53b85:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_211c53c0c:;
			{
				return static_cast<jule::I64>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_211c53c84:;
			{
				return static_cast<jule::I64>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_211c53d0b:;
			{
				return static_cast<jule::I64>(14LL);
			}
		}
		else if (_match_expr == 98LL) {
			_case_begin_211c53d83:;
			{
				return static_cast<jule::I64>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_211c53e0a:;
			{
				return static_cast<jule::I64>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_211c53e82:;
			{
				return static_cast<jule::I64>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_211c54009:;
			{
				return static_cast<jule::I64>(18LL);
			}
		}
		else if (_match_expr == 35LL) {
			_case_begin_211c54081:;
			{
				return static_cast<jule::I64>(19LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_211c54108:;
			{
				return static_cast<jule::I64>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_211c54180:;
			{
				return static_cast<jule::I64>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_211c54207:;
			{
				return static_cast<jule::I64>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_211c5427e:;
			{
				return static_cast<jule::I64>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_211c54306:;
			{
				return static_cast<jule::I64>(24LL);
			}
		}
		else if (_match_expr == 55LL) {
			_case_begin_211c5437d:;
			{
				return static_cast<jule::I64>(25LL);
			}
		}
		else if (_match_expr == 94LL) {
			_case_begin_211c54405:;
			{
				return static_cast<jule::I64>(26LL);
			}
		}
		else if (_match_expr == 66LL) {
			_case_begin_211c5447c:;
			{
				return static_cast<jule::I64>(27LL);
			}
		}
		else {
			_case_begin_211c53008:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_211c52ea3:;
	};
}



inline jule::I64 _24468ad70_getLastProcessError(void) {
	jule::I64 _429_err = _242713317_GetLastErrno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_211c7cc8b:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_211c7c142:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_211c7c5d7:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_211c7c64d:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_211c7c6c5:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_211c7c74c:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_211c7c97d:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_211c7ca05:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_211c7ca7c:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 97LL) {
			_case_begin_211c7cb04:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_211c7cb7b:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else {
			_case_begin_211c7c43e:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_211c7c3d9:;
	};
}



inline jule::Slice<char*> _24468e0c6_strSliceToCstrSlice(jule::Slice<jule::Str> _2024_s) {
	jule::Slice<char*> _2113_cs = jule::Slice<char*>::alloc(0LL, (_2024_s.len() + 1LL), nullptr);;
	{
		auto &expr = _2024_s;
		auto it = expr.begin();
		_iter_begin_211c89cdc:;
		if (it != expr.end()) {
			jule::I64 _229_i = it - expr.begin();
			{
				_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(((char*)((&(_2024_s[_229_i][0LL])))));;
			}
			_iter_next_211c89cdc:;
			++it;
			_229_i++;
			goto _iter_begin_211c89cdc;
		}
		_iter_end_211c89cdc:;
	};
	_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(nullptr);;
	return _2113_cs;
}



inline jule::I64 _24468e527_execvp(jule::Str _2911_file, jule::Slice<jule::Str> _2922_argv) {
	jule::Slice<char*> _309_cargv = _24468e0c6_strSliceToCstrSlice(_2922_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&(_2911_file[0LL])))), (char*const*)(&(_309_cargv[0LL]))));
	};
}



inline jule::I64 _24468e912_execve(jule::Str _3611_file, jule::Slice<jule::Str> _3622_argv, jule::Slice<jule::Str> _3635_env) {
	jule::Slice<char*> _379_cargv = _24468e0c6_strSliceToCstrSlice(_3622_argv);;
	jule::Slice<char*> _389_cenv = _24468e0c6_strSliceToCstrSlice(_3635_env);;
	{
		return static_cast<jule::I64>(execve(((char*)((&(_3611_file[0LL])))), (char*const*)(&(_379_cargv[0LL])), (char*const*)((&(_389_cenv[0LL])))));
	};
}



inline void _244690528_Exit(jule::I64 _129_code) {
	_24351854a_Exit(_129_code);
}



inline jule::Str _244690726_Executable(void) {
	return jule::executable();
}



inline jule::Bool _244633e5b_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));
}



inline jule::Bool _24463408d_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto &expr = _242688611_CppHeaderExts;
		auto it = expr.begin();
		_iter_begin_211cc3bb1:;
		if (it != expr.end()) {
			jule::Str &_3212_valid_ext = *it;
			{
				if ((_3121_ext == _3212_valid_ext)) {
					return true;
				};
			}
			_iter_next_211cc3bb1:;
			++it;
			goto _iter_begin_211cc3bb1;
		}
		_iter_end_211cc3bb1:;
	};
	return false;
}



inline jule::Bool _2446342e1_IsValidCppExt(jule::Str _4218_ext) {
	if ((_4218_ext == jule::Str(".c", 2))) {
		return true;
	};
	{
		auto &expr = _24463283e_CppExts;
		auto it = expr.begin();
		_iter_begin_211cc5d5b:;
		if (it != expr.end()) {
			jule::Str &_4612_e = *it;
			{
				if ((_4218_ext == _4612_e)) {
					return true;
				};
			}
			_iter_next_211cc5d5b:;
			++it;
			goto _iter_begin_211cc5d5b;
		}
		_iter_end_211cc5d5b:;
	};
	{
		auto &expr = _244633d6d_ObjectiveCppExts;
		auto it = expr.begin();
		_iter_begin_211cc6026:;
		if (it != expr.end()) {
			jule::Str &_5112_e = *it;
			{
				if ((_4218_ext == _5112_e)) {
					return true;
				};
			}
			_iter_next_211cc6026:;
			++it;
			goto _iter_begin_211cc6026;
		}
		_iter_end_211cc6026:;
	};
	return false;
}



inline jule::Str _2446412a9_Logf(jule::Str _2999_fmt, jule::Slice<jule::Any> _29922_args) {
	return _244641bc2_applyFmt(_2999_fmt,jule::Any(_29922_args));
}



inline jule::Str _244641595_argToStr(jule::Any _30313_arg) {
	{
		auto &_match_expr{ _30313_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_211cc83ad:;
			{
				return _30313_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_211cc7d08:;
			{
				return static_cast<jule::Str>(_30313_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_211cc7d6e:;
			{
				return static_cast<jule::Str>(_30313_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_211cc7c92:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_211cc7c3c:;
	};
}



inline jule::I64 _24464183c_findNextFmt(jule::Str _31616_fmt) {
	{
		auto &expr = _31616_fmt;
		auto it = expr.begin();
		_iter_begin_211cc8941:;
		if (it != expr.end()) {
			jule::I64 _3179_i = it - expr.begin();
			jule::U8 &_31712_b = *it;
			{
				if ((_31712_b == '@')) {
					return _3179_i;
				};
			}
			_iter_next_211cc8941:;
			++it;
			_3179_i++;
			goto _iter_begin_211cc8941;
		}
		_iter_end_211cc8941:;
	};
	return -1LL;
}



inline jule::Str _244641bc2_applyFmt(jule::Str _32517_fmt, jule::Slice<jule::Any> _32527_args) {
	jule::Str _32613_s = jule::Str();;
	{
		auto &expr = _32527_args;
		auto it = expr.begin();
		_iter_begin_211ccaadb:;
		if (it != expr.end()) {
			jule::Any &_32712_arg = *it;
			{
				jule::I64 _32813_i = _24464183c_findNextFmt(_32517_fmt);;
				if ((_32813_i == -1LL)) {
					goto _iter_end_211ccaadb;
				};
				_32613_s+=_32517_fmt.slice(0LL,_32813_i);
				_32613_s+=_244641595_argToStr(jule::Any(_32712_arg));
				(_32517_fmt).mut_slice((_32813_i + 1LL));;
			}
			_iter_next_211ccaadb:;
			++it;
			goto _iter_begin_211ccaadb;
		}
		_iter_end_211ccaadb:;
	};
	_32613_s+=_32517_fmt;
	return _32613_s;
}



inline jule::Bool _244642c8e_IsTopDirective(jule::Str _2819_directive) {
	return ((_2819_directive == jule::Str("pass", 4)) || (_2819_directive == jule::Str("build", 5)));
}



inline jule::Bool _2446441be_IsWindows(jule::Str _3714_os) {
	return (_3714_os == jule::Str("windows", 7));
}



inline jule::Bool _244644477_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == jule::Str("darwin", 6));
}



inline jule::Bool _24464471e_IsLinux(jule::Str _4312_os) {
	return (_4312_os == jule::Str("linux", 5));
}



inline jule::Bool _244644a3d_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == jule::Str("i386", 4));
}



inline jule::Bool _244644cd5_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == jule::Str("amd64", 5));
}



inline jule::Bool _24464507c_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == jule::Str("arm64", 5));
}



inline jule::Bool _244645324_IsUnix(jule::Str _5511_os) {
	return (_244644477_IsDarwin(_5511_os) || _24464471e_IsLinux(_5511_os));
}



inline jule::Bool _244645698_Is32Bit(jule::Str _5812_arch) {
	return _244644a3d_IsI386(_5812_arch);
}



inline jule::Bool _244645940_Is64Bit(jule::Str _6112_arch) {
	return (_244644cd5_IsAmd64(_6112_arch) || _24464507c_IsArm64(_6112_arch));
}



inline void _244652a5c_init(void) {
	jule::Str _2513_path = _244690726_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_24467e1c6_PathWd=({
			auto except = _2435ae24a_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_24467b954_PathExec=_243611a3e_Dir(_2513_path);
		_244679a95_PathStdlib=_243624832_Join(jule::Slice<jule::Str>::make({_24467b954_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_244689951_PathApi=_243624832_Join(jule::Slice<jule::Str>::make({_24467b954_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _24496e43e_IsUnaryOp(jule::Str _31214_kind) {
	{
		auto &expr = _2448bb9eb_UnaryOps;
		auto it = expr.begin();
		_iter_begin_211d2919a:;
		if (it != expr.end()) {
			jule::Str &_31312_op = *it;
			{
				if ((_31214_kind == _31312_op)) {
					return true;
				};
			}
			_iter_next_211d2919a:;
			++it;
			goto _iter_begin_211d2919a;
		}
		_iter_end_211d2919a:;
	};
	return false;
}



inline jule::Bool _24496e72a_IsBinOp(jule::Str _32212_kind) {
	{
		auto &expr = _2448bbd3c_BinOps;
		auto it = expr.begin();
		_iter_begin_211d29ad5:;
		if (it != expr.end()) {
			jule::Str &_32312_op = *it;
			{
				if ((_32212_kind == _32312_op)) {
					return true;
				};
			}
			_iter_next_211d29ad5:;
			++it;
			goto _iter_begin_211d29ad5;
		}
		_iter_end_211d29ad5:;
	};
	return false;
}



inline jule::Bool _24496ece1_IsStr(jule::Str _34210_k) {
	return ((!(_34210_k.empty())) && ((_34210_k[0LL] == '\"') || _244970088_IsRawStr(_34210_k)));
}



inline jule::Bool _244970088_IsRawStr(jule::Str _34513_k) {
	return ((!(_34513_k.empty())) && (_34513_k[0LL] == '`'));
}



inline jule::Bool _244970330_IsRune(jule::Str _34911_k) {
	return ((!(_34911_k.empty())) && (_34911_k[0LL] == '\''));
}



inline jule::Bool _24497094b_IsBool(jule::Str _35511_k) {
	return ((_35511_k == jule::Str("true", 4)) || (_35511_k == jule::Str("false", 5)));
}



inline jule::Bool _244970be3_IsFloat(jule::Str _35812_k) {
	if (_2445b3e96_HasPrefix(_35812_k,jule::Str("0x", 2))) {
		return _2445b940d_ContainsAny(_35812_k,jule::Str(".pP", 3));
	};
	return _2445b940d_ContainsAny(_35812_k,jule::Str(".eE", 3));
}



inline jule::Bool _244970e8a_IsNum(jule::Str _36610_k) {
	if (_36610_k.empty()) {
		return false;
	};
	jule::U8 _3719_b = _36610_k[0LL];;
	return ((_3719_b == '.') || (('0' <= _3719_b) && (_3719_b <= '9')));
}



inline jule::Bool _2449714c9_IsIgnoreIdent(jule::Str _38118_ident) {
	return (_38118_ident == jule::Str("_", 1));
}



inline jule::Bool _244971771_IsAnonIdent(jule::Str _38416_ident) {
	return (_38416_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _244971cb0_IsSpace(jule::I32 _39712_r) {
	{
		auto &expr = _2448bb787_Spaces;
		auto it = expr.begin();
		_iter_begin_211d33ec9:;
		if (it != expr.end()) {
			jule::I32 &_39812_cr = *it;
			{
				if ((_39712_r == _39812_cr)) {
					return true;
				};
			}
			_iter_next_211d33ec9:;
			++it;
			goto _iter_begin_211d33ec9;
		}
		_iter_end_211d33ec9:;
	};
	return false;
}



inline jule::Bool _244972211_IsLetter(jule::I32 _40713_r) {
	return _244459534_IsLetter(_40713_r);
}



inline jule::Bool _244972750_IsDecimal(jule::U8 _42714_b) {
	return (('0' <= _42714_b) && (_42714_b <= '9'));
}



inline jule::Bool _2449729e7_IsBinary(jule::U8 _43013_b) {
	return ((_43013_b == '0') || (_43013_b == '1'));
}



inline jule::Bool _244972c8e_IsOctal(jule::U8 _43312_b) {
	return (('0' <= _43312_b) && (_43312_b <= '7'));
}



inline jule::Bool _244973036_IsHex(jule::U8 _43610_b) {
	{
		
		if ((('0' <= _43610_b) && (_43610_b <= '9'))) {
			_case_begin_211d39056:;
			{
				return true;
			}
		}
		else if ((('a' <= _43610_b) && (_43610_b <= 'f'))) {
			_case_begin_211d3884c:;
			{
				return true;
			}
		}
		else if ((('A' <= _43610_b) && (_43610_b <= 'F'))) {
			_case_begin_211d388b3:;
			{
				return true;
			}
		}
		else {
			_case_begin_211d387d6:;
			{
				return false;
			}
		}
		_match_end_211d3872b:;
	};
}



inline jule::Bool _2449732cd_IsAssign(jule::U64 _45113_id) {
	return (((((((_45113_id == static_cast<jule::U64>(2LLU)) || (_45113_id == static_cast<jule::U64>(30LLU))) || (_45113_id == static_cast<jule::U64>(33LLU))) || (_45113_id == static_cast<jule::U64>(20LLU))) || (_45113_id == static_cast<jule::U64>(27LLU))) || (_45113_id == static_cast<jule::U64>(3LLU))) || (_45113_id == static_cast<jule::U64>(7LLU)));
}



inline jule::Bool _244973575_IsPostfixOp(jule::Str _46216_kind) {
	{
		auto &expr = _244968207_PostfixOps;
		auto it = expr.begin();
		_iter_begin_211d3a750:;
		if (it != expr.end()) {
			jule::Str &_46312_op = *it;
			{
				if ((_46216_kind == _46312_op)) {
					return true;
				};
			}
			_iter_next_211d3a750:;
			++it;
			goto _iter_begin_211d3a750;
		}
		_iter_end_211d3a750:;
	};
	return false;
}



inline jule::Bool _24497381c_IsAssignOp(jule::Str _47215_kind) {
	if (_244973575_IsPostfixOp(_47215_kind)) {
		return true;
	};
	{
		auto &expr = _244968548_AssignOps;
		auto it = expr.begin();
		_iter_begin_211d3d940:;
		if (it != expr.end()) {
			jule::Str &_47612_op = *it;
			{
				if ((_47215_kind == _47612_op)) {
					return true;
				};
			}
			_iter_next_211d3d940:;
			++it;
			goto _iter_begin_211d3d940;
		}
		_iter_end_211d3d940:;
	};
	return false;
}



inline jule::Ptr<_2449740c0_File> _2449755ee_NewFileSet(jule::Str _6315_path) {
	return jule::new_ptr<_2449740c0_File>(_2449740c0_File{._field_Path=_6315_path, });
}



inline _244640d69_Log _244976e2a_makeErr(jule::I64 _11112_row, jule::I64 _11122_col, jule::Ptr<_2449740c0_File>& _11133_f, jule::Str _11143_fmt, jule::Slice<jule::Any> _11156_args) {
	return _244640d69_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_11112_row, ._field_Column=_11122_col, ._field_Path=_11133_f.get()._field_Path, ._field_Text=_2446412a9_Logf(_11143_fmt,jule::Any(_11156_args)), };
}



inline jule::Bool _2449772b0_bytesHasPrefix(jule::Slice<jule::U8>& _12120_bytes, jule::Str _12135_prefix) {
	if ((_12120_bytes.len() < _12135_prefix.len())) {
		return false;
	};
	{
		auto &expr = _12135_prefix;
		auto it = expr.begin();
		_iter_begin_211d491ba:;
		if (it != expr.end()) {
			jule::I64 _1259_i = it - expr.begin();
			{
				if ((_12120_bytes[_1259_i] != _12135_prefix[_1259_i])) {
					return false;
				};
			}
			_iter_next_211d491ba:;
			++it;
			_1259_i++;
			goto _iter_begin_211d491ba;
		}
		_iter_end_211d491ba:;
	};
	return true;
}



inline jule::Str _244977601_floatFmtE(jule::Slice<jule::U8>& _13315_txt, jule::I64 _13332_i) {
	jule::Str _13342_lit = jule::Str();
	(_13332_i)++;
	if ((_13332_i >= _13315_txt.len())) {
		return _13342_lit;
	};
	jule::U8 _13913_b = _13315_txt[_13332_i];;
	if ((_13913_b == '_')) {
		return _13342_lit;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13332_i)++;
		if ((_13332_i >= _13315_txt.len())) {
			return _13342_lit;
		};
		if ((_13315_txt[_13332_i] == '_')) {
			return _13342_lit;
		};
	};
	jule::I64 _1539_first = _13332_i;;
	for (; (_13332_i < _13315_txt.len()); (_13332_i)++) {
		{
			_13913_b=_13315_txt[_13332_i];
			if (((_13913_b != '_') && (!(_244972750_IsDecimal(_13913_b))))) {
				goto _iter_end_211d4d28a;
			};
		}
	_iter_next_211d4d28a:;
	}
	_iter_end_211d4d28a:;;
	if ((_13332_i == _1539_first)) {
		_13342_lit = jule::Str();
		return _13342_lit;
	};
	_13342_lit = static_cast<jule::Str>(_13315_txt.slice(0LL,_13332_i));
	return _13342_lit;
}



inline jule::Str _244977986_floatFmtP(jule::Slice<jule::U8>& _16715_txt, jule::I64 _16728_i) {
	return _244977601_floatFmtE(_16715_txt,_16728_i);
}



inline jule::Str _244977cc7_floatFmtDotnp(jule::Slice<jule::U8>& _17119_txt, jule::I64 _17136_i) {
	if ((_17119_txt[_17136_i] != '.')) {
		return jule::Str();
	};
	(_17136_i)++;
	_julec_label_loop:;
	for (; (_17136_i < _17119_txt.len()); (_17136_i)++) {
		{
			jule::U8 _17913_b = _17119_txt[_17136_i];;
			{
				
				if ((_17913_b == '_') || _244972750_IsDecimal(_17913_b)) {
					_case_begin_211d51711:;
					{
						goto _iter_next_211d50248;
					}
				}
				else if (_24497957b_isFloatFmtP(_17913_b,_17136_i)) {
					_case_begin_211d51777:;
					{
						return _244977986_floatFmtP(_17119_txt,_17136_i);
					}
				}
				else {
					_case_begin_211d5169a:;
					{
						goto _iter_end_211d50248;
					}
				}
				_match_end_211d51634:;
			};
		}
	_iter_next_211d50248:;
	}
	_iter_end_211d50248:;;
	return jule::Str();
}



inline jule::Str _244978118_floatFmtDotfp(jule::Slice<jule::U8>& _19219_txt, jule::I64 _19236_i) {
	_19236_i+=2LL;
	return _244977601_floatFmtE(_19219_txt,_19236_i);
}



inline jule::Str _244978459_floatFmtDotp(jule::Slice<jule::U8>& _19718_txt, jule::I64 _19735_i) {
	(_19735_i)++;
	return _244977601_floatFmtE(_19718_txt,_19735_i);
}



inline jule::Str _2449788aa_floatNum(jule::Slice<jule::U8>& _20214_txt, jule::I64 _20231_i) {
	jule::Str _20241_lit = jule::Str();
	(_20231_i)++;
	if ((_20231_i >= _20214_txt.len())) {
		_20241_lit = static_cast<jule::Str>(_20214_txt);
		return _20241_lit;
	};
	if ((_20214_txt[_20231_i] == '_')) {
		(_20231_i)--;
		_20241_lit = static_cast<jule::Str>(_20214_txt.slice(0LL,_20231_i));
		return _20241_lit;
	};
	for (; (_20231_i < _20214_txt.len()); (_20231_i)++) {
		{
			jule::U8 _21213_b = _20214_txt[_20231_i];;
			if (((_20231_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				_20241_lit = _244977601_floatFmtE(_20214_txt,_20231_i);
				return _20241_lit;
			};
			if (((_21213_b != '_') && (!(_244972750_IsDecimal(_21213_b))))) {
				goto _iter_end_211d55061;
			};
		}
	_iter_next_211d55061:;
	}
	_iter_end_211d55061:;;
	if ((_20231_i == 1LL)) {
		return _20241_lit;
	};
	_20241_lit = static_cast<jule::Str>(_20214_txt.slice(0LL,_20231_i));
	return _20241_lit;
}



inline jule::Str _244978b52_commonNum(jule::Slice<jule::U8>& _22715_txt) {
	jule::Str _22730_lit = jule::Str();
	jule::I64 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < _22715_txt.len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = _22715_txt[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_211d58a9d:;
					{
						_22730_lit = _2449788aa_floatNum(_22715_txt,_22813_i);
						return _22730_lit;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_211d58b25:;
					{
						goto _iter_next_211d57cbc;
					}
				}
				else if (_24497923a_isFloatFmtE(_23113_b,_22813_i)) {
					_case_begin_211d58b9c:;
					{
						_22730_lit = _244977601_floatFmtE(_22715_txt,_22813_i);
						return _22730_lit;
					}
				}
				else if ((!(_244972750_IsDecimal(_23113_b)))) {
					_case_begin_211d58c24:;
					{
						goto _iter_end_211d57cbc;
					}
				}
				_match_end_211d589c1:;
			};
		}
	_iter_next_211d57cbc:;
	}
	_iter_end_211d57cbc:;;
	if ((_22813_i == 0LL)) {
		return _22730_lit;
	};
	_22730_lit = static_cast<jule::Str>(_22715_txt.slice(0LL,_22813_i));
	return _22730_lit;
}



inline jule::Str _244978de9_binaryNum(jule::Slice<jule::U8>& _25015_txt) {
	jule::Str _25030_lit = jule::Str();
	if ((!(_2449772b0_bytesHasPrefix(_25015_txt,jule::Str("0b", 2))))) {
		_25030_lit = jule::Str();
		return _25030_lit;
	};
	if ((_25015_txt.len() < 2LL)) {
		return _25030_lit;
	};
	;
	jule::I64 _25913_i = 2LL;;
	for (; (_25913_i < _25015_txt.len()); (_25913_i)++) {
		{
			if (((_25015_txt[_25913_i] != '_') && (!(_2449729e7_IsBinary(_25015_txt[_25913_i]))))) {
				goto _iter_end_211d5c563;
			};
		}
	_iter_next_211d5c563:;
	}
	_iter_end_211d5c563:;;
	if ((_25913_i == 2LL)) {
		return _25030_lit;
	};
	_25030_lit = static_cast<jule::Str>(_25015_txt.slice(0LL,_25913_i));
	return _25030_lit;
}



inline jule::Bool _24497923a_isFloatFmtE(jule::U8 _27216_b, jule::I64 _27225_i) {
	return ((_27225_i > 0LL) && ((_27216_b == 'e') || (_27216_b == 'E')));
}



inline jule::Bool _24497957b_isFloatFmtP(jule::U8 _27616_b, jule::I64 _27625_i) {
	return ((_27625_i > 0LL) && ((_27616_b == 'p') || (_27616_b == 'P')));
}



inline jule::Bool _2449798bc_isFloatFmtDotnp(jule::Slice<jule::U8>& _28021_txt, jule::I64 _28038_i) {
	if ((_28021_txt[_28038_i] != '.')) {
		return false;
	};
	(_28038_i)++;
	_julec_label_loop:;
	for (; (_28038_i < _28021_txt.len()); (_28038_i)++) {
		{
			jule::U8 _28713_b = _28021_txt[_28038_i];;
			{
				
				if ((_28713_b == '_') || _244972750_IsDecimal(_28713_b)) {
					_case_begin_211d62139:;
					{
						goto _iter_next_211d60b4e;
					}
				}
				else if (_24497957b_isFloatFmtP(_28713_b,_28038_i)) {
					_case_begin_211d621a0:;
					{
						return true;
					}
				}
				else {
					_case_begin_211d620c3:;
					{
						goto _iter_end_211d60b4e;
					}
				}
				_match_end_211d6205c:;
			};
		}
	_iter_next_211d60b4e:;
	}
	_iter_end_211d60b4e:;;
	return false;
}



inline jule::Bool _244979c0d_isFloatFmtDotp(jule::Slice<jule::U8>& _30120_txt, jule::I64 _30133_i) {
	{
		
		if ((_30120_txt.len() < 3LL)) {
			_case_begin_211d6405e:;
			{
				goto _case_begin_211d63800;
			}
		}
		else if ((_30120_txt[_30133_i] != '.')) {
			_case_begin_211d63800:;
			{
				goto _case_begin_211d63866;
			}
		}
		else if (((_30120_txt[(_30133_i + 1LL)] != 'p') && (_30120_txt[(_30133_i + 1LL)] != 'P'))) {
			_case_begin_211d63866:;
			{
				return false;
			}
		}
		else {
			_case_begin_211d63789:;
			{
				return true;
			}
		}
		_match_end_211d636ac:;
	};
}



inline jule::Bool _24497a04e_isFloatFmtDotfp(jule::Slice<jule::U8>& _31421_txt, jule::I64 _31434_i) {
	{
		
		if ((_31421_txt.len() < 4LL)) {
			_case_begin_211d6654a:;
			{
				goto _case_begin_211d65d1e;
			}
		}
		else if ((_31421_txt[_31434_i] != '.')) {
			_case_begin_211d65d1e:;
			{
				goto _case_begin_211d65d85;
			}
		}
		else if (((_31421_txt[(_31434_i + 1LL)] != 'f') && (_31421_txt[(_31434_i + 1LL)] != 'F'))) {
			_case_begin_211d65d85:;
			{
				goto _case_begin_211d65deb;
			}
		}
		else if (((_31421_txt[(_31434_i + 2LL)] != 'p') && (_31421_txt[(_31434_i + 1LL)] != 'P'))) {
			_case_begin_211d65deb:;
			{
				return false;
			}
		}
		else {
			_case_begin_211d65846:;
			{
				return true;
			}
		}
		_match_end_211d65769:;
	};
}



inline jule::Str _24497a4a0_octalNum(jule::Slice<jule::U8>& _32914_txt) {
	jule::Str _32929_lit = jule::Str();
	if ((_32914_txt[0LL] != '0')) {
		_32929_lit = jule::Str();
		return _32929_lit;
	};
	if ((_32914_txt.len() < 2LL)) {
		return _32929_lit;
	};
	jule::I64 _33713_octalStart = 1LL;;
	jule::Bool _33913_o = false;;
	if ((_32914_txt[1LL] == 'o')) {
		if ((_32914_txt.len() < 3LL)) {
			return _32929_lit;
		};
		(_33713_octalStart)++;
		_33913_o=true;
	};
	jule::I64 _34813_i = _33713_octalStart;;
	for (; (_34813_i < _32914_txt.len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = _32914_txt[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					_32929_lit = jule::Str();
					return _32929_lit;
				};
				_32929_lit = _2449788aa_floatNum(_32914_txt,_34813_i);
				return _32929_lit;
			};
			if (_24497923a_isFloatFmtE(_35013_b,_34813_i)) {
				_32929_lit = _244977601_floatFmtE(_32914_txt,_34813_i);
				return _32929_lit;
			};
			if (((_35013_b != '_') && (!(_244972c8e_IsOctal(_35013_b))))) {
				goto _iter_end_211d6baa0;
			};
		}
	_iter_next_211d6baa0:;
	}
	_iter_end_211d6baa0:;;
	if ((_34813_i == _33713_octalStart)) {
		return _32929_lit;
	};
	_32929_lit = static_cast<jule::Str>(_32914_txt.slice(0LL,_34813_i));
	return _32929_lit;
}



inline jule::Str _24497a747_hexNum(jule::Slice<jule::U8>& _37112_txt) {
	jule::Str _37127_lit = jule::Str();
	if ((_37112_txt.len() < 3LL)) {
		return _37127_lit;
	};
	if (((_37112_txt[0LL] != '0') || ((_37112_txt[1LL] != 'x') && (_37112_txt[1LL] != 'X')))) {
		return _37127_lit;
	};
	;
	jule::I64 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < _37112_txt.len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = _37112_txt[_38013_i];;
			{
				
				if (_244979c0d_isFloatFmtDotp(_37112_txt,_38013_i)) {
					_case_begin_211d726aa:;
					{
						_37127_lit = _244978459_floatFmtDotp(_37112_txt,_38013_i);
						return _37127_lit;
					}
				}
				else if (_24497a04e_isFloatFmtDotfp(_37112_txt,_38013_i)) {
					_case_begin_211d72732:;
					{
						_37127_lit = _244978118_floatFmtDotfp(_37112_txt,_38013_i);
						return _37127_lit;
					}
				}
				else if (_24497957b_isFloatFmtP(_38313_b,_38013_i)) {
					_case_begin_211d727a9:;
					{
						_37127_lit = _244977986_floatFmtP(_37112_txt,_38013_i);
						return _37127_lit;
					}
				}
				else if (_2449798bc_isFloatFmtDotnp(_37112_txt,_38013_i)) {
					_case_begin_211d72831:;
					{
						_37127_lit = _244977cc7_floatFmtDotnp(_37112_txt,_38013_i);
						return _37127_lit;
					}
				}
				else if (((_38313_b != '_') && (!(_244973036_IsHex(_38313_b))))) {
					_case_begin_211d728a8:;
					{
						goto _iter_end_211d7181e;
					}
				}
				_match_end_211d725bc:;
			};
		}
	_iter_next_211d7181e:;
	}
	_iter_end_211d7181e:;;
	if ((_38013_i == 2LL)) {
		return _37127_lit;
	};
	_37127_lit = static_cast<jule::Str>(_37112_txt.slice(0LL,_38013_i));
	return _37127_lit;
}



inline jule::Str _24497aa88_hexEscape(jule::Slice<jule::U8>& _40415_txt, jule::I64 _40428_n) {
	jule::Str _40438_seq = jule::Str();
	if ((_40415_txt.len() < _40428_n)) {
		return _40438_seq;
	};
	;
	jule::I64 _41013_i = 2LL;;
	for (; (_41013_i < _40428_n); (_41013_i)++) {
		{
			if ((!(_244973036_IsHex(_40415_txt[_41013_i])))) {
				return _40438_seq;
			};
		}
	_iter_next_211d755d1:;
	}
	_iter_end_211d755d1:;;
	_40438_seq=static_cast<jule::Str>(_40415_txt.slice(0LL,_40428_n));
	return _40438_seq;
}



inline jule::Str _24497ad30_bigUnicodePointEscape(jule::Slice<jule::U8>& _42227_txt) {
	return _24497aa88_hexEscape(_42227_txt,10LL);
}



inline jule::Str _24497b0e9_littleUnicodePointEscape(jule::Slice<jule::U8>& _42730_txt) {
	return _24497aa88_hexEscape(_42730_txt,6LL);
}



inline jule::Str _24497b2a3_hexByteEscape(jule::Slice<jule::U8>& _43219_txt) {
	return _24497aa88_hexEscape(_43219_txt,4LL);
}



inline jule::Str _24497b539_byteEscape(jule::Slice<jule::U8>& _43716_txt) {
	jule::Str _43731_seq = jule::Str();
	if ((_43716_txt.len() < 4LL)) {
		return _43731_seq;
	};
	if ((((!(_244972c8e_IsOctal(_43716_txt[1LL]))) || (!(_244972c8e_IsOctal(_43716_txt[2LL])))) || (!(_244972c8e_IsOctal(_43716_txt[3LL]))))) {
		return _43731_seq;
	};
	_43731_seq = static_cast<jule::Str>(_43716_txt.slice(0LL,4LL));
	return _43731_seq;
}



inline jule::Slice<_244640d69_Log> _244981033_Lex(jule::Ptr<_2449740c0_File> _82612_f, jule::I64 _82622_mode) {
	if ((_82612_f == nullptr)) {
		return nullptr;
	};
	_24497bc21_lex _83113_lex = _24497bc21_lex{._field_mode=_82622_mode, ._field_file=_82612_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_24497e7b2_newLine(&_83113_lex);
	_24497c7b0_lex(&_83113_lex);
	if ((_83113_lex._field_errors.len() > 0LL)) {
		return _83113_lex._field_errors;
	};
	_82612_f.get()._field_Tokens=_83113_lex._field_tokens;
	return nullptr;
}



inline jule::I64 _246c5e52e_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _246c66c40_Len64(_6119_x)));
}



inline jule::I64 _246c60585_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_246c61223_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));
}



inline jule::I64 _246c60e7b_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_246c5ebd3__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I64 _246c61223_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_246c60332__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I64 _246c66998_Len32(jule::U32 _35214_x) {
	jule::I64 _35224_n = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		_35224_n=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		_35224_n+=8LL;
	};
	_35224_n = static_cast<jule::I64>((_35224_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return _35224_n;
}



inline jule::I64 _246c66c40_Len64(jule::U64 _36614_x) {
	jule::I64 _36624_n = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		_36624_n=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		_36624_n+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		_36624_n+=8LL;
	};
	_36624_n = static_cast<jule::I64>((_36624_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return _36624_n;
}



inline std::tuple<jule::U64,jule::U64> _246c67900_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	jule::U64 _41540_sum = 0;
	jule::U64 _41550_carryout = 0;
	_41540_sum=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	_41550_carryout=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(_41540_sum)))) >> 63LLU));
	return std::make_tuple(_41540_sum,_41550_carryout);
}



inline std::tuple<jule::U64,jule::U64> _246c69083_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	jule::U64 _49928_hi = 0;
	jule::U64 _49937_lo = 0;
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	_49928_hi=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	_49937_lo=static_cast<jule::U64>((_49910_x * _49918_y));
	return std::make_tuple(_49928_hi,_49937_lo);
}



inline jule::U32 _246b8590b_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));
}



inline jule::F32 _246b85be7_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));
}



inline jule::U64 _246b85e8e_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));
}



inline jule::F64 _246b862ad_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));
}



inline std::tuple<jule::F64,jule::I64> _246b888ba_Frexp(jule::F64 _4714_f) {
	jule::F64 _4724_frac = 0;
	jule::I64 _4735_exp = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_21201ea66:;
			{
				_4724_frac = _4714_f;
				_4735_exp = 0LL;
				return std::make_tuple(_4724_frac,_4735_exp);
			}
		}
		else if (_246bee436_IsInf(_4714_f,0LL) || _246be7132_IsNaN(_4714_f)) {
			_case_begin_21201eadd:;
			{
				_4724_frac = _4714_f;
				_4735_exp = 0LL;
				return std::make_tuple(_4724_frac,_4735_exp);
			}
		}
		_match_end_21201e978:;
	};
	std::tie(_4714_f,_4735_exp) = _246c00a42_normalize(_4714_f);
	jule::U64 _5613_x = _246b85e8e_F64Bits(_4714_f);;
	_4735_exp+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4724_frac=static_cast<jule::F64>(_246b862ad_F64FromBits(_5613_x));
	return std::make_tuple(_4724_frac,_4735_exp);
}



inline jule::F64 _246be61ec_NaN(void) {
	return static_cast<jule::F64>(_246b862ad_F64FromBits(9221120237041090561LLU));
}



inline jule::Bool _246be7132_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);
}



inline jule::F64 _246be8ac3_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_246b862ad_F64FromBits(9218868437227405312LLU));
	};
	return static_cast<jule::F64>(_246b862ad_F64FromBits(18442240474082181120LLU));
}



inline jule::Bool _246bee436_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));
}



inline std::tuple<jule::F64,jule::I64> _246c00a42_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = 0;
	jule::I64 _8232_exp = 0;
	;
	if ((_246c1c4dc_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	};
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _246c15a68_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_246be7132_IsNaN(_1118_x) || _246bee436_IsInf(_1118_x,1LL)) {
			_case_begin_212065bde:;
			{
				return _1118_x;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_212065c66:;
			{
				return static_cast<jule::F64>(_246be61ec_NaN());
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_212065cdd:;
			{
				return static_cast<jule::F64>(_246be8ac3_Inf(-1LL));
			}
		}
		_match_end_212065b23:;
	};
	jule::F64 _13314_f1;;
	jule::I64 _13322_ki;;
	std::tie(_13314_f1,_13322_ki) = _246b888ba_Frexp(_1118_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));
}



inline jule::F64 _246c1c4dc_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_246b862ad_F64FromBits(static_cast<jule::U64>((_246b85e8e_F64Bits(_438_x) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _246c7292c_Modf(jule::F64 _449_f) {
	jule::F64 _4419_integer = 0;
	jule::F64 _4433_frac = 0;
	;
	jule::F64 _469_absF = _246c1c4dc_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_2120d804c:;
		}
		_iter_end_2120d804c:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	_4419_integer = _4713_i;
	_4433_frac = static_cast<jule::F64>((_449_f - _4713_i));
	return std::make_tuple(_4419_integer,_4433_frac);
}



inline jule::F64 _246c731e1_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac;;
	jule::I64 _4516_exp;;
	std::tie(_4510_frac,_4516_exp) = _246b888ba_Frexp(_449_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	};
	return static_cast<jule::F64>(((_246c15a68_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));
}



inline jule::Str _2466d22b0_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_2466e6967_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _24687ae70_max(static_cast<jule::I64>((_7832_prec + 4LL)),24LL), 0),_7813_f,_7821_fmt,_7832_prec,_7843_bit_size));
}



inline jule::Slice<jule::U8> _2466e6967_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_246874a3a_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_2123210dc:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_246b8590b_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_246874a3a_floatInfo>)((&(_2466c2239_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_21232088e:;
			{
				_8313_bits=static_cast<jule::U64>(_246b85e8e_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_246874a3a_floatInfo>)((&(_2466c76c3_f64info))));
			}
		}
		else {
			_case_begin_21232077e:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_212320a48:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_212325443:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_212327258:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_212327423:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_212326202:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));
						}
					}
					_match_end_212326125:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_212320c57:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_212321252:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_212324ad5:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _2467888e9_fmtB(_8220_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _24685230e_fmtX(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	;
	_2435aa246_decimalSlice _13213_digs = _2435aa246_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_2468a2958_ryuFtoaShortest(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_21232b603:;
				{
					_8258_prec=static_cast<jule::I64>(_24687ae70_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_21232b6ad:;
				{
					_8258_prec=static_cast<jule::I64>(_24687ae70_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_21232b724:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_21232a8aa:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_21232dea7:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_21232d43a:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_21232d99b:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_21232d946:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_246b77777_ryuFtoaFixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_24673c67d_ryuFtoaFixed64(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _24674e5e6_bigFtoa(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	return _246775ee1_fmtDigits(_8220_dst,_1359_shortest,_969_neg,_13213_digs,_8258_prec,_8243_fmt);
}



inline jule::Slice<jule::U8> _24674e5e6_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _246874a3a_floatInfo& _18327_flt) {
	_246ca01da_decimal _18413_d = _246ca01da_decimal{};;
	_246ca03c7_assign(&_18413_d, _1835_mant);
	_246ca0509_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>(_18327_flt._field_mantbits))));
	_2435aa246_decimalSlice _18713_digs = _2435aa246_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_2467781ad_roundShortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_2435aa246_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_2123340bc:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_212336a92:;
				{
					_18233_prec=static_cast<jule::I64>(_24687ae70_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_212336b08:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_2123369c6:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_2123384cd:;
				{
					_246ca08a0_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_212338544:;
				{
					_246ca08a0_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_2123385aa:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_246ca08a0_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_212338423:;
		};
		_18713_digs=_2435aa246_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _246775ee1_fmtDigits(_18216_dst,_1889_shortest,_18255_neg,_18713_digs,_18233_prec,_18244_fmt);
}



inline jule::Slice<jule::U8> _246775ee1_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _2435aa246_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_21233c180:;
			{
				return _2467872aa_fmtE(_21918_dst,_21947_neg,_2205_digs,_22029_prec,_22040_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_21233c1e6:;
			{
				return _24678795e_fmtF(_21918_dst,_21947_neg,_2205_digs,_22029_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_21233c25c:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _2467872aa_fmtE(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _24678795e_fmtF(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>(_24687ae70_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)),0LL)));
			}
		}
		_match_end_21233c04d:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));
}



inline void _2467781ad_roundShortest(_246ca01da_decimal& _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _246874a3a_floatInfo& _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		_25723_d._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = (_25757_flt._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * (_25723_d._field_dp - _25723_d._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)))))) {
		return;;
	};
	_246ca01da_decimal _28713_upper = _246ca01da_decimal{};;
	_246ca03c7_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_246ca0509_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << _25757_flt._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_246ca01da_decimal _30613_lower = _246ca01da_decimal{};;
	_246ca03c7_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_246ca0509_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25723_d._field_dp);;
			if ((_33513_mi >= _25723_d._field_nd)) {
				goto _iter_end_21234abb6;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25723_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_212351381:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_212351408:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_212351480:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_2123512b5:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_212354829:;
					{
						_246ca08a0_round(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_2123548a1:;
					{
						_246ca063b_roundDown(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_212354928:;
					{
						_246ca076d_roundUp(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_212354780:;
			};
		}
	_iter_next_21234abb6:;
	}
	_iter_end_21234abb6:;;
}



inline jule::Slice<jule::U8> _2467872aa_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _2435aa246_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	if ((_39654_prec > 0LL)) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _246875a91_min(_39637_d._field_nd,static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39613_dst=jule::append(_39613_dst,_39637_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('0');;
			}
		_iter_next_21235a06b:;
		}
		_iter_end_21235a06b:;;
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_39665_fmt);;
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_21235c139:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push('0');_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_21235d613:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_21235c0c3:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,3);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_21235be19:;
	};
	return _39613_dst;
}



inline jule::Slice<jule::U8> _24678795e_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _2435aa246_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('-');;
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _246875a91_min(_45137_d._field_nd,_45137_d._field_dp);;
		_45113_dst=jule::append(_45113_dst,_45137_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
			}
		_iter_next_2123617ae:;
		}
		_iter_end_2123617ae:;;
	} else {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
	};
	if ((_45154_prec > 0LL)) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push(_47221_ch);;
			}
		_iter_next_212362cee:;
		}
		_iter_end_212362cee:;;
	};
	return _45113_dst;
}



inline jule::Slice<jule::U8> _2467888e9_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _246874a3a_floatInfo& _48463_flt) {
	if (_48426_neg) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('-');;
	};
	std::tie(_48413_dst,std::ignore) = _246ca23a7_fmtBits(_48413_dst,_48437_mant,10LL,false,true);
	_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('p');;
	_48452_exp-=static_cast<jule::I64>(_48463_flt._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('+');;
	};
	std::tie(_48413_dst,std::ignore) = _246ca23a7_fmtBits(_48413_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)),10LL,(_48452_exp < 0LL),true);
	return _48413_dst;
}



inline jule::Slice<jule::U8> _24685230e_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _246874a3a_floatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_2123687a5:;
	}
	_iter_end_2123687a5:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('-');;
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push('0');_50613_dst.__push(_50637_fmt);_50613_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_21236e58b:;
		}
		_iter_end_21236e58b:;;
	} else if ((_50626_prec > 0LL)) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_2123710a4:;
		}
		_iter_end_2123710a4:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _2468d6be0_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_212373a02:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,2);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_2123738c0:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_212373cbb:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,4);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_212372814:;
	};
	return _50613_dst;
}



inline jule::I64 _246875a91_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;
	};
	return _59116_b;
}



inline jule::I64 _24687ae70_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;
	};
	return _59816_b;
}



inline jule::U8 _2468d6be0_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));
}



inline std::tuple<jule::U64,jule::I64> _246906b33_parseUint(jule::Str _5118_s, jule::I64 _5130_base, jule::I64 _5145_bitSize) {
	if (_5118_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_21237b213:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_21237b0ae:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_2468d6be0_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_21237d0d3:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_2468d6be0_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_21237cde6:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_2468d6be0_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_21237ce5c:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_21237ca50:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_21237c973:;
					};
				};
			}
		}
		else {
			_case_begin_21237a29a:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I64>(3LL));
			}
		}
		_match_end_21237a245:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(4LL));
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_21238336e:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_212383292:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_212382b54:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_2123829bc:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_212382c0e:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_2123844e6:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_212384491:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5118_s;
		auto it = expr.begin();
		_iter_begin_21238563a:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_212387065:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _2468d6be0_lower(_10912_c)) && (_2468d6be0_lower(_10912_c) <= 'z'))) {
						_case_begin_212386bd0:;
						{
							_11017_d=static_cast<jule::U8>(((_2468d6be0_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_212386c46:;
						{
							goto _iter_next_21238563a;
						}
					}
					else {
						_case_begin_21238674b:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
						}
					}
					_match_end_2123866d5:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
				};
				if ((_10813_n >= _9013_cutoff)) {
					return std::make_tuple(_10013_maxVal,static_cast<jule::I64>(1LL));
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					return std::make_tuple(_10013_maxVal,static_cast<jule::I64>(1LL));
				};
				_10813_n=_13213_n1;
			}
			_iter_next_21238563a:;
			++it;
			goto _iter_begin_21238563a;
		}
		_iter_end_21238563a:;
	};
	return std::make_tuple(_10813_n,static_cast<jule::I64>(0LL));
}



inline jule::Exceptional<jule::U64> _2469291c7_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _14710_un;;
	jule::I64 _14714_err;;
	std::tie(_14710_un,_14714_err) = _246906b33_parseUint(_14618_s,_14630_base,_14645_bit_size);
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(_14714_err);
	};
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _2469aabb5_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(2LL));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un;;
	jule::I64 _18718_err;;
	std::tie(_18714_un,_18718_err) = _246906b33_parseUint(_17217_s,_17225_base,_17240_bitSize);
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _246a75d6d_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	jule::F64 _4157_f = 0;
	jule::Bool _4165_ok = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			_4157_f=static_cast<jule::F64>(_246b862ad_F64FromBits(9223372036854775808LLU));
		};
		_4165_ok = true;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	jule::I64 _579_clz = _246c5e52e_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi;;
	jule::U64 _6323_xLo;;
	std::tie(_6314_xHi,_6323_xLo) = _246c69083_Mul64(_4122_man,_2467625c6_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi;;
		jule::U64 _6719_yLo;;
		std::tie(_6714_yHi,_6719_yLo) = _246c69083_Mul64(_4122_man,_2467625c6_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
		jule::U64 _6818_mergedHi = _6314_xHi;;
		jule::U64 _6828_mergedLo = (_6323_xLo + _6714_yHi);;
		std::tie(_6818_mergedHi,_6828_mergedLo) = std::make_tuple(_6314_xHi,(_6323_xLo + _6714_yHi));
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			_4157_f = 0LL;
			_4165_ok = false;
			return std::make_tuple(_4157_f,_4165_ok);
		};
		std::tie(_6314_xHi,_6323_xLo) = std::make_tuple(_6818_mergedHi,_6828_mergedLo);
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	_4157_f = static_cast<jule::F64>(_246b862ad_F64FromBits(_10313_retBits));
	_4165_ok = true;
	return std::make_tuple(_4157_f,_4165_ok);
}



inline std::tuple<jule::F32,jule::Bool> _246ab9169_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	jule::F32 _11057_f = 0;
	jule::Bool _11065_ok = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			_11057_f=static_cast<jule::F32>(_246b85be7_F32FromBits(2147483648LLU));
		};
		_11065_ok = true;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		_11057_f = 0.0f;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	jule::I64 _1329_clz = _246c5e52e_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi;;
	jule::U64 _13824_x_lo;;
	std::tie(_13814_x_hi,_13824_x_lo) = _246c69083_Mul64(_11022_man,_2467625c6_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi;;
		jule::U64 _14220_y_lo;;
		std::tie(_14214_y_hi,_14220_y_lo) = _246c69083_Mul64(_11022_man,_2467625c6_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;;
		jule::U64 _14329_merged_lo = (_13824_x_lo + _14214_y_hi);;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,(_13824_x_lo + _14214_y_hi));
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			_11057_f = 0.0f;
			_11065_ok = false;
			return std::make_tuple(_11057_f,_11065_ok);
		};
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		_11057_f = 0.0f;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		_11057_f = 0.0f;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	_11057_f = static_cast<jule::F32>(_246b85be7_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	_11065_ok = true;
	return std::make_tuple(_11057_f,_11065_ok);
}



inline jule::I64 _246885c9e_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I64 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I64>(_4530_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=32LL;
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;
			};
		}
	_iter_next_2123b108e:;
	}
	_iter_end_2123b108e:;;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I64,jule::Bool> _2466c3317_special(jule::Str _6816_s) {
	jule::F64 _6826_f = 0;
	jule::I64 _6834_n = 0;
	jule::Bool _6842_ok = false;
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_2123b5956:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_2123b59cd;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_2123b59cd:;
			{
				jule::I64 _8317_caseN = _246885c9e_commonPrefixLenIgnoreCase(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					_6826_f = static_cast<jule::F64>(_246be8ac3_Inf(_7213_sign));
					_6834_n = static_cast<jule::I64>((_7313_nsign + _6834_n));
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_2123b5a55:;
			{
				if ((_246885c9e_commonPrefixLenIgnoreCase(_6816_s,jule::Str("NaN", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_246be61ec_NaN());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		_match_end_2123b588a:;
	};
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _246b179d1_readFloat(jule::Str _10314_s) {
	jule::U64 _10324_mantissa = 0;
	jule::I64 _10339_exp = 0;
	jule::Bool _10349_neg = false;
	jule::Bool _10360_trunc = false;
	jule::Bool _10373_hex = false;
	jule::I64 _10384_i = 0;
	jule::Bool _10392_ok = false;
	if ((_10384_i >= _10314_s.len())) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	{
		
		if ((_10314_s[_10384_i] == '+')) {
			_case_begin_2123bc243:;
			{
				(_10384_i)++;
			}
		}
		else if ((_10314_s[_10384_i] == '-')) {
			_case_begin_2123bc2a9:;
			{
				_10349_neg=true;
				(_10384_i)++;
			}
		}
		_match_end_2123bc012:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((_10384_i + 2LL) < _10314_s.len()) && (_10314_s[_10384_i] == '0')) && (_2468d6be0_lower(_10314_s[(_10384_i + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		_10384_i+=2LL;
		_11913_expChar='p';
		_10373_hex=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_ndMant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (_10384_i < _10314_s.len()); (_10384_i)++) {
		{
			jule::U8 _13313_c = _10314_s[_10384_i];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_2123c3a96:;
					{
						goto _iter_next_2123c2e2a;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_2123c3b1d:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_2123c2e2a;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_2123c3b95:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_2123c2e2a;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							_10324_mantissa*=_11713_base;
							_10324_mantissa+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							_10360_trunc=true;
						};
						goto _iter_next_2123c2e2a;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _2468d6be0_lower(_13313_c))) && (_2468d6be0_lower(_13313_c) <= 'f'))) {
					_case_begin_2123c3c1c:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							_10324_mantissa*=16LLU;
							_10324_mantissa+=static_cast<jule::U64>(((_2468d6be0_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							_10360_trunc=true;
						};
						goto _iter_next_2123c2e2a;
					}
				}
				_match_end_2123c39b9:;
			};
			goto _iter_end_2123c2e2a;
		}
	_iter_next_2123c2e2a:;
	}
	_iter_end_2123c2e2a:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((_10384_i < _10314_s.len()) && (_2468d6be0_lower(_10314_s[_10384_i]) == _11913_expChar))) {
		(_10384_i)++;
		if ((_10384_i >= _10314_s.len())) {
			return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10314_s[_10384_i] == '+')) {
			(_10384_i)++;
		} else if ((_10314_s[_10384_i] == '-')) {
			(_10384_i)++;
			_19617_esign=-1LL;
		};
		if ((((_10384_i >= _10314_s.len()) || (_10314_s[_10384_i] < '0')) || (_10314_s[_10384_i] > '9'))) {
			return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((_10384_i < _10314_s.len()) && ((('0' <= _10314_s[_10384_i]) && (_10314_s[_10384_i] <= '9')) || (_10314_s[_10384_i] == '_'))); (_10384_i)++) {
			{
				if ((_10314_s[_10384_i] == '_')) {
					goto _iter_next_2123cda6d;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10314_s[_10384_i])) - '0'));
				};
			}
		_iter_next_2123cda6d:;
		}
		_iter_end_2123cda6d:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	if ((_10324_mantissa != 0LLU)) {
		_10339_exp=static_cast<jule::I64>((_13113_dp - _13013_ndMant));
	};
	_10392_ok=true;
	return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
}



inline std::tuple<jule::F64,jule::Bool> _24675c79c_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	jule::F64 _48158_f = 0;
	jule::Bool _48166_ok = false;
	if (((_48116_mantissa >> _2466c76c3_f64info._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48158_f,_48166_ok);
	};
	_48158_f=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		_48158_f=static_cast<jule::F64>((-(_48158_f)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_2123d9914:;
			{
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_2123d998b:;
			{
				if ((_48135_exp > 22LL)) {
					_48158_f*=_2467b587c_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((_48158_f > 1000000000000000LL) || (_48158_f < -1000000000000000LL))) {
					return std::make_tuple(_48158_f,_48166_ok);
				};
				_48158_f = static_cast<jule::F64>((_48158_f * _2467b587c_f64pow10[_48135_exp]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_2123d9a13:;
			{
				_48158_f = static_cast<jule::F64>(jule::div(_48158_f,_2467b587c_f64pow10[(-(_48135_exp))]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		_match_end_2123d9859:;
	};
	return std::make_tuple(_48158_f,_48166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _2467ac2e1_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	jule::F32 _51562_f = 0;
	jule::Bool _51570_ok = false;
	if (((_51516_mantissa >> _2466c2239_f32info._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51562_f,_51570_ok);
	};
	_51562_f=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		_51562_f=static_cast<jule::F32>((-(_51562_f)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_2123dee25:;
			{
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_2123dee9c:;
			{
				if ((_51535_exp > 10LL)) {
					_51562_f*=_2467cc5ec_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((_51562_f > 10000000.0f) || (_51562_f < -10000000.0f))) {
					return std::make_tuple(_51562_f,_51570_ok);
				};
				_51562_f = static_cast<jule::F32>((_51562_f * _2467cc5ec_f32pow10[_51535_exp]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_2123e0024:;
			{
				_51562_f = static_cast<jule::F32>(jule::div(_51562_f,_2467cc5ec_f32pow10[(-(_51535_exp))]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		_match_end_2123ded6a:;
	};
	return std::make_tuple(_51562_f,_51570_ok);
}



inline std::tuple<jule::F64,jule::I64> _2469308b5_atofHex(jule::Str _55112_s, _246874a3a_floatInfo& _55121_flt, jule::U64 _55141_mantissa, jule::I64 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	jule::I64 _5529_maxExp = ((static_cast<jule::I64>((1LL << _55121_flt._field_expbits)) + _55121_flt._field_bias) - 2LL);;
	jule::I64 _5539_minExp = (_55121_flt._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I64>(_55121_flt._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> (_55121_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_2123e5502:;
	}
	_iter_end_2123e5502:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + _55121_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_2123e7537:;
	}
	_iter_end_2123e7537:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_2123e7713:;
	}
	_iter_end_2123e7713:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + _55121_flt._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> _55121_flt._field_mantbits) == 0LLU)) {
		_55160_exp=_55121_flt._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55121_flt._field_mantbits)));
		_55160_exp=static_cast<jule::I64>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << _55121_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - _55121_flt._field_bias) & static_cast<jule::I64>(((1LL << _55121_flt._field_expbits) - 1LL)))) << _55121_flt._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << _55121_flt._field_mantbits) << _55121_flt._field_expbits);
	};
	if ((_55121_flt == _2466c2239_f32info)) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_246b85be7_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits))))),_59813_err);
	};
	return std::make_tuple(static_cast<jule::F64>(_246b862ad_F64FromBits(_60513_bits)),_59813_err);
}



inline std::tuple<jule::F32,jule::I64,jule::I64> _2469ab2d1_atof32(jule::Str _61611_s) {
	jule::F32 _61621_f = 0;
	jule::I64 _61629_n = 0;
	jule::I64 _61637_err = 0LL;
	{
		jule::F64 _61814_val;;
		jule::I64 _61819__n;;
		jule::Bool _61823_ok;;
		std::tie(_61814_val,_61819__n,_61823_ok) = _2466c3317_special(_61611_s);
		if (_61823_ok) {
			_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			_61629_n = _61819__n;
			_61637_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_61621_f,_61629_n,_61637_err);
		};
	};
	jule::U64 _62410_mantissa;;
	jule::I64 _62420_exp;;
	jule::Bool _62425_neg;;
	jule::Bool _62430_trunc;;
	jule::Bool _62437_hex;;
	jule::I64 _62442__n;;
	jule::Bool _62450_ok;;
	std::tie(_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc,_62437_hex,_62442__n,_62450_ok) = _246b179d1_readFloat(_61611_s);
	_61629_n=_62442__n;
	if ((!(_62450_ok))) {
		_61621_f = 0.0f;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		std::tie(_63117_ff,_61637_err) = _2469308b5_atofHex(_61611_s.slice(0LL,_61629_n),_2466c2239_f32info,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
		_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	{
		if ((!(_62430_trunc))) {
			std::tie(_61621_f,_62450_ok) = _2467ac2e1_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
			if (_62450_ok) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
		std::tie(_61621_f,_62450_ok) = _246ab9169_eiselLemire32(_62410_mantissa,_62420_exp,_62425_neg);
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
			jule::F32 _65321_fUp = 0.0f;;
			std::tie(_65321_fUp,_62450_ok) = _246ab9169_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
			if ((_62450_ok && (_61621_f == _65321_fUp))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
	};
	_246ca01da_decimal _66213_d = _246ca01da_decimal{};;
	if ((!(_246786a90_set(&_66213_d, _61611_s.slice(0LL,_61629_n))))) {
		_61621_f = 0.0f;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	jule::U64 _66610_b;;
	jule::Bool _66613_ovf;;
	std::tie(_66610_b,_66613_ovf) = _2466e7506_floatBits(&_66213_d, _2466c2239_f32info);
	_61621_f=static_cast<jule::F32>(_246b85be7_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		_61637_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_61621_f,_61629_n,_61637_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _246a06c00_atof64(jule::Str _67411_s) {
	jule::F64 _67421_f = 0;
	jule::I64 _67429_n = 0;
	jule::I64 _67437_err = 0LL;
	{
		jule::F64 _67614_val;;
		jule::I64 _67619__n;;
		jule::Bool _67623_ok;;
		std::tie(_67614_val,_67619__n,_67623_ok) = _2466c3317_special(_67411_s);
		if (_67623_ok) {
			_67421_f = _67614_val;
			_67429_n = _67619__n;
			_67437_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_67421_f,_67429_n,_67437_err);
		};
	};
	jule::U64 _68210_mantissa;;
	jule::I64 _68220_exp;;
	jule::Bool _68225_neg;;
	jule::Bool _68230_trunc;;
	jule::Bool _68237_hex;;
	jule::I64 _68242__n;;
	jule::Bool _68250_ok;;
	std::tie(_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc,_68237_hex,_68242__n,_68250_ok) = _246b179d1_readFloat(_67411_s);
	_67429_n=_68242__n;
	if ((!(_68250_ok))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	if (_68237_hex) {
		std::tie(_67421_f,_67437_err) = _2469308b5_atofHex(_67411_s.slice(0LL,_67429_n),_2466c76c3_f64info,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	{
		if ((!(_68230_trunc))) {
			std::tie(_67421_f,_68250_ok) = _24675c79c_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
			if (_68250_ok) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
		std::tie(_67421_f,_68250_ok) = _246a75d6d_eiselLemire64(_68210_mantissa,_68220_exp,_68225_neg);
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
			jule::F64 _71021_fUp = 0LL;;
			std::tie(_71021_fUp,_68250_ok) = _246a75d6d_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
			if ((_68250_ok && (_67421_f == _71021_fUp))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
	};
	_246ca01da_decimal _71913_d = _246ca01da_decimal{};;
	if ((!(_246786a90_set(&_71913_d, _67411_s.slice(0LL,_67429_n))))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	jule::U64 _72310_b;;
	jule::Bool _72313_ovf;;
	std::tie(_72310_b,_72313_ovf) = _2466e7506_floatBits(&_71913_d, _2466c76c3_f64info);
	_67421_f=static_cast<jule::F64>(_246b862ad_F64FromBits(_72310_b));
	if (_72313_ovf) {
		_67437_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_67421_f,_67429_n,_67437_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _246a44974_parseFloatPrefix(jule::Str _73121_s, jule::I64 _73129_bit_size) {
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f;;
		jule::I64 _73317_n;;
		jule::I64 _73320_err;;
		std::tie(_73314_f,_73317_n,_73320_err) = _2469ab2d1_atof32(_73121_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73314_f)),_73317_n,_73320_err);
	};
	jule::F64 _73710_f;;
	jule::I64 _73713_n;;
	jule::I64 _73716_err;;
	std::tie(_73710_f,_73713_n,_73716_err) = _246a06c00_atof64(_73121_s);
	return std::make_tuple(_73710_f,_73713_n,_73716_err);
}



inline jule::Exceptional<jule::F64> _246b19670_ParseFloat(jule::Str _76515_s, jule::I64 _76523_bit_size) {
	jule::F64 _76610_f;;
	jule::I64 _76613_n;;
	jule::I64 _76616_err;;
	std::tie(_76610_f,_76613_n,_76616_err) = _246a44974_parseFloatPrefix(_76515_s,_76523_bit_size);
	if (((_76613_n != _76515_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I64>(2LL));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(_76616_err);
	};
	return jule::Exceptional<jule::F64>(jule::Any(),_76610_f);
}



inline void _246b77777_ryuFtoaFixed32(_2435aa246_decimalSlice& _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		std::tie(_4924_d._field_nd,_4924_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _246c66998_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_246c9dbab_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di;;
	jule::I64 _8118_dexp2;;
	jule::Bool _8129_d0;;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _246c9e3c6_mult64bitPow10(_4945_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _246c9e63a_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)),static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>((_8114_di >> _949_extra)),static_cast<jule::U32>((_8114_di & _959_extraMask)));
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_2468257aa_formatDecimal(_4924_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_roundUp,_4966_prec);
	_4924_d._field_dp-=_749_q;
}



inline void _24673c67d_ryuFtoaFixed64(_2435aa246_decimalSlice& _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		std::tie(_12124_d._field_nd,_12124_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _246c66c40_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_246c9dbab_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di;;
	jule::I64 _15318_dexp2;;
	jule::Bool _15329_d0;;
	std::tie(_15314_di,_15318_dexp2,_15329_d0) = _246c9e508_mult128bitPow10(_12145_mant,_13113_e2,_1469_q);
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _246c9e63a_divisibleByPow5(_12145_mant,static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	std::tie(_15314_di,_16913_dfrac) = std::make_tuple(static_cast<jule::U64>((_15314_di >> _1669_extra)),static_cast<jule::U64>((_15314_di & _1679_extraMask)));
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_2468257aa_formatDecimal(_12124_d,_15314_di,(!(_15329_d0)),_17113_roundUp,_12166_prec);
	_12124_d._field_dp-=_1469_q;
}



inline void _2468257aa_formatDecimal(_2435aa246_decimalSlice& _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _246875024_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = (_20044_m / 10LLU);;
			jule::U64 _20417_b = (_20044_m % 10LL);;
			std::tie(_20414_a,_20417_b) = std::make_tuple((_20044_m / 10LLU),(_20044_m % 10LL));
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_2124380b1:;
	}
	_iter_end_2124380b1:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	_20023_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL))));
			} else {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>((_23113_v / 100LLU)),static_cast<jule::U64>((_23113_v % 100LL)));
			};
			_22913_n-=2LLU;
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_21243bd40:;
	}
	_iter_end_21243bd40:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while ((_20023_d._field_d[(_20023_d._field_nd - 1LL)] == '0')) {
		{
			(_20023_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_212442791:;
	}
	_iter_end_212442791:;;
	_20023_d._field_dp=static_cast<jule::I64>((_20023_d._field_nd + _20213_trimmed));
}



inline void _2468a2958_ryuFtoaShortest(_2435aa246_decimalSlice& _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _246874a3a_floatInfo& _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		std::tie(_26125_d._field_nd,_26125_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	if (((_26157_exp <= 0LL) && (_246c61223_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_246c9e162_ryuDigits(_26125_d,_26146_mant,_26146_mant,_26146_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml;;
	jule::U64 _27314_mc;;
	jule::U64 _27318_mu;;
	jule::I64 _27326_e2;;
	std::tie(_27310_ml,_27314_mc,_27318_mu,_27326_e2) = _246c9de20_computeBounds(_26146_mant,_26157_exp,_26168_flt);
	if ((_27326_e2 == 0LL)) {
		_246c9e162_ryuDigits(_26125_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I64 _2799_q = (_246c9dbab_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26168_flt == _2466c2239_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		std::tie(_29017_dl32,std::ignore,_28613_dl0) = _246c9e3c6_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
		std::tie(_29117_dc32,std::ignore,_28713_dc0) = _246c9e3c6_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
		std::tie(_29217_du32,_27326_e2,_28813_du0) = _246c9e3c6_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
		std::tie(_28313_dl,_28413_dc,_28513_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32)));
	} else {
		std::tie(_28313_dl,std::ignore,_28613_dl0) = _246c9e508_mult128bitPow10(_27310_ml,_27326_e2,_2799_q);
		std::tie(_28413_dc,std::ignore,_28713_dc0) = _246c9e508_mult128bitPow10(_27314_mc,_27326_e2,_2799_q);
		std::tie(_28513_du,_27326_e2,_28813_du0) = _246c9e508_mult128bitPow10(_27318_mu,_27326_e2,_2799_q);
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		std::tie(_28613_dl0,_28713_dc0,_28813_du0) = std::make_tuple(false,false,false);
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_246c9e63a_divisibleByPow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_246c9e63a_divisibleByPow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_246c9e63a_divisibleByPow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	std::tie(_28313_dl,_32813_fracl) = std::make_tuple(static_cast<jule::U64>((_28313_dl >> _3259_extra)),static_cast<jule::U64>((_28313_dl & _3269_extraMask)));
	jule::U64 _33013_fracc = 0LLU;;
	std::tie(_28413_dc,_33013_fracc) = std::make_tuple(static_cast<jule::U64>((_28413_dc >> _3259_extra)),static_cast<jule::U64>((_28413_dc & _3269_extraMask)));
	jule::U64 _33213_fracu = 0LLU;;
	std::tie(_28513_du,_33213_fracu) = std::make_tuple(static_cast<jule::U64>((_28513_du >> _3259_extra)),static_cast<jule::U64>((_28513_du & _3269_extraMask)));
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_246c9e162_ryuDigits(_26125_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26125_d._field_dp-=_2799_q;
}



inline jule::I64 _246c9dbab_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));
}



inline jule::I64 _246c9dcdd_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _246c9de20_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _246874a3a_floatInfo& _3966_flt) {
	jule::U64 _39624_lower = 0;
	jule::U64 _39636_central = 0;
	jule::U64 _39650_upper = 0;
	jule::I64 _39662_e2 = 0;
	if (((_39518_mant != (1LLU << _3966_flt._field_mantbits)) || (_39529_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I64>(_3966_flt._field_mantbits))))) {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU)),static_cast<jule::U64>((2LL * _39518_mant)),static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU)));
		_39662_e2=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU)),static_cast<jule::U64>((4LL * _39518_mant)),static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU)));
		_39662_e2=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return std::make_tuple(_39624_lower,_39636_central,_39650_upper,_39662_e2);
}



inline void _246c9e162_ryuDigits(_2435aa246_decimalSlice& _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi;;
	jule::U32 _41019_llo;;
	std::tie(_41014_lhi,_41019_llo) = _246c9e76c_divmod1e9(_40936_lower);
	jule::U32 _41110_chi;;
	jule::U32 _41115_clo;;
	std::tie(_41110_chi,_41115_clo) = _246c9e76c_divmod1e9(_40948_central);
	jule::U32 _41210_uhi;;
	jule::U32 _41215_ulo;;
	std::tie(_41210_uhi,_41215_ulo) = _246c9e76c_divmod1e9(_40962_upper);
	if ((_41210_uhi == 0LLU)) {
		_246c9e294_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_246c9e294_ryuDigits32(_40919_d,_41014_lhi,_41110_chi,_41210_uhi,_40978_c0,_40992_cup,8LL);
		_40919_d._field_dp+=9LL;
	} else {
		_40919_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = (_42917_v / 10LLU);;
				jule::U32 _43122_v2 = (_42917_v % 10LL);;
				std::tie(_43118_v1,_43122_v2) = std::make_tuple((_42917_v / 10LLU),(_42917_v % 10LL));
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40919_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_21246464d:;
		}
		_iter_end_21246464d:;;
		_40919_d._field_d=_40919_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40919_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_246c9e294_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,static_cast<jule::I64>((_40919_d._field_nd + 8LL)));
	};
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[(_40919_d._field_nd - 1LL)] == '0'))) {
		{
			(_40919_d._field_nd)--;
		}
	_iter_next_2124672aa:;
	}
	_iter_end_2124672aa:;;
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[0LL] == '0'))) {
		{
			(_40919_d._field_nd)--;
			(_40919_d._field_dp)--;
			_40919_d._field_d=_40919_d._field_d.slice(1LL);
		}
	_iter_next_212464351:;
	}
	_iter_end_212464351:;;
}



inline void _246c9e294_ryuDigits32(_2435aa246_decimalSlice& _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45421_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = (_45458_central / 10LLU);;
			jule::U32 _47125_cdigit = (_45458_central % 10LL);;
			std::tie(_47118_c,_47125_cdigit) = std::make_tuple((_45458_central / 10LLU),(_45458_central % 10LL));
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_21246a7db;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			std::tie(_45442_lower,_45458_central,_4559_upper) = std::make_tuple(_47013_l,_47118_c,_47213_u);
		}
	_iter_next_21246a7db:;
	}
	_iter_end_21246a7db:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > _45421_d._field_nd)) {
		{
			jule::U32 _51214_v1 = (_50913_v / 100LLU);;
			jule::U32 _51218_v2 = (_50913_v % 100LL);;
			std::tie(_51214_v1,_51218_v2) = std::make_tuple((_50913_v / 100LLU),(_50913_v % 100LL));
			_45421_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45421_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_21247243b:;
	}
	_iter_end_21247243b:;;
	if ((_51013_n == _45421_d._field_nd)) {
		_45421_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45421_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45421_d._field_dp=static_cast<jule::I64>((_45421_d._field_nd + _46013_trimmed));
}



inline std::tuple<jule::U32,jule::I64,jule::Bool> _246c9e3c6_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	jule::U32 _53450_resM = 0;
	jule::I64 _53461_resE = 0;
	jule::Bool _53472_exact = false;
	if ((_53440_q == 0LL)) {
		_53450_resM = static_cast<jule::U32>((_53419_m << 6LLU));
		_53461_resE = static_cast<jule::I64>((_53431_e2 - 6LL));
		_53472_exact = true;
		return std::make_tuple(_53450_resM,_53461_resE,_53472_exact);
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _2467625c6_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi;;
	jule::U64 _54814_lo;;
	std::tie(_54810_hi,_54814_lo) = _246c69083_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)),_54313_pow);
	_53431_e2+=((_246c9dcdd_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	_53450_resM = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	_53461_resE = _53431_e2;
	_53472_exact = ((_54814_lo << 7LLU) == 0LLU);
	return std::make_tuple(_53450_resM,_53461_resE,_53472_exact);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool> _246c9e508_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	jule::U64 _56251_resM = 0;
	jule::I64 _56262_resE = 0;
	jule::Bool _56273_exact = false;
	if ((_56241_q == 0LL)) {
		_56251_resM = static_cast<jule::U64>((_56220_m << 8LLU));
		_56262_resE = static_cast<jule::I64>((_56232_e2 - 8LL));
		_56273_exact = true;
		return std::make_tuple(_56251_resM,_56262_resE,_56273_exact);
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _2467625c6_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_246c9dcdd_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1;;
	jule::U64 _57914_l0;;
	std::tie(_57910_l1,_57914_l0) = _246c69083_Mul64(_56220_m,_57113_pow[0LL]);
	jule::U64 _58014_h1;;
	jule::U64 _58018_h0;;
	std::tie(_58014_h1,_58018_h0) = _246c69083_Mul64(_56220_m,_57113_pow[1LL]);
	jule::U64 _58110_mid;;
	jule::U64 _58115_carry;;
	std::tie(_58110_mid,_58115_carry) = _246c67900_Add64(_57910_l1,_58018_h0,0LLU);
	_58014_h1+=_58115_carry;
	_56251_resM = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	_56262_resE = _56232_e2;
	_56273_exact = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return std::make_tuple(_56251_resM,_56262_resE,_56273_exact);
}



inline jule::Bool _246c9e63a_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;
			};
			_58624_m/=5LLU;
		}
	_iter_next_2124836e4:;
	}
	_iter_end_2124836e4:;;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _246c9e76c_divmod1e9(jule::U64 _60214_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL))));
	};
}



inline void _246ca0c46_trim(_246ca01da_decimal& _45314_a) {
	while (((_45314_a._field_nd > 0LL) && (_45314_a._field_d[(_45314_a._field_nd - 1LL)] == '0'))) {
		{
			(_45314_a._field_nd)--;
		}
	_iter_next_212487462:;
	}
	_iter_end_212487462:;;
	if ((_45314_a._field_nd == 0LL)) {
		_45314_a._field_dp=0LL;
	};
}



inline void _246ca0d78_rightShift(_246ca01da_decimal& _46320_a, jule::U64 _46332_k) {
	jule::I64 _46413_r = 0LL;;
	jule::I64 _46513_w = 0LL;;
	jule::U64 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= _46320_a._field_nd)) {
				if ((_46813_n == 0LLU)) {
					_46320_a._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_21248ad5b:;
				}
				_iter_end_21248ad5b:;;
				goto _iter_end_212489860;
			};
			jule::U64 _48213_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_212489860:;
	}
	_iter_end_212489860:;;
	_46320_a._field_dp-=(_46413_r - 1LL);
	jule::U64 _4879_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < _46320_a._field_nd); (_46413_r)++) {
		{
			jule::U64 _49113_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			jule::U64 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_21248a7c8:;
	}
	_iter_end_21248a7c8:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U64 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				_46320_a._field_trunc=true;
			};
			_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
		}
	_iter_next_21248ece9:;
	}
	_iter_end_21248ece9:;;
	_46320_a._field_nd=_46513_w;
	_246ca0c46_trim(_46320_a);
}



inline jule::Bool _246ca0eaa_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I64 _51735_end, jule::Str _51745_s) {
	jule::I64 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);
			};
		}
	_iter_next_21249369e:;
	}
	_iter_end_21249369e:;;
	return false;
}



inline void _246ca10dc_leftShift(_246ca01da_decimal& _53119_a, jule::U64 _53131_k) {
	jule::I64 _53213_delta = _246876a5e_leftCheats[static_cast<jule::I64>(_53131_k)]._field_delta;;
	if (_246ca0eaa_prefixIsLessThan(_53119_a._field_d,_53119_a._field_nd,_246876a5e_leftCheats[static_cast<jule::I64>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I64 _53713_r = _53119_a._field_nd;;
	jule::I64 _53813_w = (_53119_a._field_nd + _53213_delta);;
	jule::U64 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U64>(_53119_a._field_d[_53713_r]) - '0') << _53131_k);
			jule::U64 _54513_quo = (_54113_n / 10LLU);;
			jule::U64 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_212497230:;
	}
	_iter_end_212497230:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U64 _55813_quo = (_54113_n / 10LLU);;
			jule::U64 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_212499b17:;
	}
	_iter_end_212499b17:;;
	_53119_a._field_nd+=_53213_delta;
	if ((_53119_a._field_nd >= 800LL)) {
		_53119_a._field_nd=800LL;
	};
	_53119_a._field_dp+=_53213_delta;
	_246ca0c46_trim(_53119_a);
}



inline jule::Bool _246ca121e_shouldRoundUp(_246ca01da_decimal& _57819_a, jule::I64 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= _57819_a._field_nd))) {
		return false;
	};
	if (((_57819_a._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == _57819_a._field_nd))) {
		if (_57819_a._field_trunc) {
			return true;
		};
		return ((_57831_nd > 0LL) && (((_57819_a._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));
	};
	return (_57819_a._field_d[_57831_nd] >= '5');
}



inline jule::Str _246ca1c9c_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _246ca2143_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));
	};
	jule::Str _6413_s;;
	std::tie(std::ignore,_6413_s) = _246ca23a7_fmtBits(nullptr,_6012_i,_6020_base,false,false);
	return _6413_s;
}



inline jule::Str _246ca1dce_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _246ca2143_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));
	};
	jule::Str _7513_s;;
	std::tie(std::ignore,_7513_s) = _246ca23a7_fmtBits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)),_7119_base,(_7111_i < 0LL),false);
	return _7513_s;
}



inline jule::Str _246ca2011_Itoa(jule::I64 _809_i) {
	return _246ca1dce_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)),10LL);
}



inline jule::Str _246ca2143_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));
}



inline jule::Bool _246ca2275_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _246ca23a7_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	jule::Slice<jule::U8> _10180_d = jule::Slice<jule::U8>(nullptr);
	jule::Str _10191_s = jule::Str();
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_2124dbe9a:;
		}
		_iter_end_2124dbe9a:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_246ca2275_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_246c60585_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_2124db74c:;
		}
		_iter_end_2124db74c:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_2124e90b7:;
		}
		_iter_end_2124e90b7:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		_10180_d=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return std::make_tuple(_10180_d,_10191_s);
	};
	_10191_s=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return std::make_tuple(_10180_d,_10191_s);
}



inline jule::Str _2462d20d0_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_212511d38:;
			{
				return _2462b018a_SysInt;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_2125156dd:;
			{
				return _2462b06b8_SysUint;
			}
		}
		else {
			_case_begin_212513ca2:;
			{
				return _4515_kind;
			}
		}
		_match_end_2125125db:;
	};
}



inline jule::I64 _2462d8812_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_21251716d:;
			{
				return 8LLU;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_2125168ed:;
			{
				return 16LLU;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_212516964:;
			{
				return 32LLU;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_2125169ca:;
			{
				return 64LLU;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_212516a41:;
			{
				return _246263061_BitSize;
			}
		}
		else {
			_case_begin_212516887:;
			{
				return -1LL;
			}
		}
		_match_end_212516744:;
	};
}



inline jule::Str _24630ca9a_IntFromBits(jule::I64 _8616_bits) {
	{
		auto &_match_expr{ _8616_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_2125194c2:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_212518856:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_2125188bc:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_212518933:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_2125187e0:;
			{
				return jule::Str();
			}
		}
		_match_end_212518dc8:;
	};
}



inline jule::Str _24631e9ad_UintFromBits(jule::I64 _10417_bits) {
	{
		auto &_match_expr{ _10417_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_21251abbb:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_21251a4a1:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_21251a517:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_21251a57d:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_21251a34c:;
			{
				return jule::Str();
			}
		}
		_match_end_21251a1e8:;
	};
}



inline jule::Str _246348e49_FloatFromBits(jule::I64 _12218_bits) {
	{
		auto &_match_expr{ _12218_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_21251c393:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_21251bb9a:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_21251ba46:;
			{
				return jule::Str();
			}
		}
		_match_end_21251b8e2:;
	};
}



inline jule::Bool _2464d5701_CheckBitFloat(jule::Str _15018_val, jule::I64 _15028_bit) {
	({
		auto except = _246b19670_ParseFloat(_15018_val,_15028_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
		} 0;});
	});
	return true;
}



inline jule::I64 _2465053e1_BitsizeOfFloat(jule::F64 _16019_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16019_x) && (_16019_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_212522981:;
			{
				return 32LLU;
			}
		}
		else {
			_case_begin_2125219a2:;
			{
				return 64LLU;
			}
		}
		_match_end_2125218e7:;
	};
}



inline jule::I64 _2465ab91a_BitsizeOfInt(jule::I64 _17617_x) {
	{
		
		if (((-128LL <= _17617_x) && (_17617_x <= 127LL))) {
			_case_begin_212523025:;
			{
				return 8LLU;
			}
		}
		else if (((-32768LL <= _17617_x) && (_17617_x <= 32767LL))) {
			_case_begin_21252308b:;
			{
				return 16LLU;
			}
		}
		else if (((-2147483648LL <= _17617_x) && (_17617_x <= 2147483647LL))) {
			_case_begin_212523102:;
			{
				return 32LLU;
			}
		}
		else {
			_case_begin_212522d49:;
			{
				return 64LLU;
			}
		}
		_match_end_212522c6c:;
	};
}



inline jule::I64 _2465c46ad_BitsizeOfUint(jule::U64 _19618_x) {
	{
		
		if ((_19618_x <= 255LLU)) {
			_case_begin_212525b82:;
			{
				return 8LLU;
			}
		}
		else if ((_19618_x <= 65535LLU)) {
			_case_begin_212525be8:;
			{
				return 16LLU;
			}
		}
		else if ((_19618_x <= 4294967295LLU)) {
			_case_begin_212525c5e:;
			{
				return 32LLU;
			}
		}
		else {
			_case_begin_212525016:;
			{
				return 64LLU;
			}
		}
		_match_end_2125256cb:;
	};
}



inline void _2465c4dd9_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _244679710_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_212526bc7:;
				{
					_246263061_BitSize=64LLU;
					_2462b018a_SysInt=jule::Str("i64", 3);
					_2462b06b8_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_212526c3d:;
				{
					_246263061_BitSize=32LLU;
					_2462b018a_SysInt=jule::Str("i32", 3);
					_2462b06b8_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_212526b1c:;
		};
	};
}



inline void _2465d249b_init(void) {
	_2465c4dd9_UpdateTarget();
}



inline jule::F64 _24665ba75_Min(jule::Str _6112_k) {
	_6112_k=_2462d20d0_RealKindOf(_6112_k);
	{
		auto &_match_expr{ _6112_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_21252959d:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_212529614:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_21252967a:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_2125296e1:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_212529856:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_2125298bc:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_2125271e4:;
			{
				return 0LL;
			}
		}
		_match_end_212527403:;
	};
}



inline jule::F64 _2466648a2_Max(jule::Str _8312_k) {
	_8312_k=_2462d20d0_RealKindOf(_8312_k);
	{
		auto &_match_expr{ _8312_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_21252b54a:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_21252b5b1:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_21252b627:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_21252b68d:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_21252b913:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_21252b979:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_21252b9e0:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_21252ba56:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_21252babc:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_21252bb33:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_21252b3d5:;
			{
				return 0LL;
			}
		}
		_match_end_21252b209:;
	};
}



inline jule::Bool _2466714d5_IsI8Compatible(jule::Str _623_k) {
	return (_623_k == jule::Str("i8", 2));
}



inline jule::Bool _246682a79_IsI16Compatible(jule::Str _1124_k) {
	return ((_1124_k == jule::Str("i8", 2)) || (_1124_k == jule::Str("i16", 3)));
}



inline jule::Bool _2466a3182_IsI32Compatible(jule::Str _1724_k) {
	return ((((_1724_k == jule::Str("i8", 2)) || (_1724_k == jule::Str("i16", 3))) || (_1724_k == jule::Str("i32", 3))) || (_1724_k == jule::Str("u8", 2)));
}



inline jule::Bool _2466a974e_IsI64Compatible(jule::Str _2524_k) {
	return ((((_2524_k == jule::Str("i8", 2)) || (_2524_k == jule::Str("i16", 3))) || (_2524_k == jule::Str("i32", 3))) || (_2524_k == jule::Str("i64", 3)));
}



inline jule::Bool _2462ae365_IsU8Compatible(jule::Str _3323_k) {
	return (_3323_k == jule::Str("u8", 2));
}



inline jule::Bool _246265470_IsU16Compatible(jule::Str _3824_k) {
	return ((_3824_k == jule::Str("u8", 2)) || (_3824_k == jule::Str("u16", 3)));
}



inline jule::Bool _24633680a_IsU32Compatible(jule::Str _4324_k) {
	return (((_4324_k == jule::Str("u8", 2)) || (_4324_k == jule::Str("u16", 3))) || (_4324_k == jule::Str("u32", 3)));
}



inline jule::Bool _246337377_IsU64Compatible(jule::Str _5024_k) {
	return ((((_5024_k == jule::Str("u8", 2)) || (_5024_k == jule::Str("u16", 3))) || (_5024_k == jule::Str("u32", 3))) || (_5024_k == jule::Str("u64", 3)));
}



inline jule::Bool _24652bc31_IsF32Compatible(jule::Str _5824_k) {
	return (_5824_k == jule::Str("f32", 3));
}



inline jule::Bool _24652cd64_IsF64Compatible(jule::Str _6324_k) {
	return (_6324_k == jule::Str("f64", 3));
}



inline jule::Bool _246532ebd_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_2125358b7:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_212535d7e:;
			{
				return (_7036_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_212535de5:;
			{
				return (_7036_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_212535b2b:;
			{
				return (_7036_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_212535b92:;
			{
				return _2466714d5_IsI8Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_212535c08:;
			{
				return _246682a79_IsI16Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_212535c6e:;
			{
				return _2466a3182_IsI32Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_212535e6c:;
			{
				return _2466a974e_IsI64Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_212535ed3:;
			{
				return _2462ae365_IsU8Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_212536049:;
			{
				return _246265470_IsU16Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_2125360b0:;
			{
				return _24633680a_IsU32Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_212536126:;
			{
				return _246337377_IsU64Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_21253618c:;
			{
				return _24652bc31_IsF32Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_212536203:;
			{
				return _24652cd64_IsF64Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_212536269:;
			{
				return (_7036_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_2125362d0:;
			{
				return (_7036_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_2125356b9:;
			{
				return false;
			}
		}
		_match_end_212534e9e:;
	};
}



inline jule::Bool _246538127_IsI16Greater(jule::Str _11021_k) {
	return (_11021_k == jule::Str("i8", 2));
}



inline jule::Bool _2466a35e4_IsI32Greater(jule::Str _11521_k) {
	return ((_11521_k == jule::Str("i8", 2)) || (_11521_k == jule::Str("i16", 3)));
}



inline jule::Bool _2462b1411_IsI64Greater(jule::Str _12021_k) {
	return (((_12021_k == jule::Str("i8", 2)) || (_12021_k == jule::Str("i16", 3))) || (_12021_k == jule::Str("i32", 3)));
}



inline jule::Bool _2464d505d_IsU16Greater(jule::Str _12721_k) {
	return (_12721_k == jule::Str("u8", 2));
}



inline jule::Bool _246ca2d69_IsU32Greater(jule::Str _13221_k) {
	return ((_13221_k == jule::Str("u8", 2)) || (_13221_k == jule::Str("u16", 3)));
}



inline jule::Bool _246ca2e9b_IsU64Greater(jule::Str _13821_k) {
	return (((_13821_k == jule::Str("u8", 2)) || (_13821_k == jule::Str("u16", 3))) || (_13821_k == jule::Str("u32", 3)));
}



inline jule::Bool _246ca30cd_IsF32Greater(jule::Str _14517_k) {
	return (_14517_k != jule::Str("f64", 3));
}



inline jule::Bool _246ca3210_IsF64Greater(jule::Str _15017_k) {
	return true;
}



inline jule::Bool _246ca3342_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_21253e78e:;
			{
				return _246ca3782_IsSigInt(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_21253e805:;
			{
				return _246ca38b4_IsUnsigInt(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_21253e86b:;
			{
				return _246ca38b4_IsUnsigInt(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_21253e8d2:;
			{
				return _246538127_IsI16Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_21253eb46:;
			{
				return _2466a35e4_IsI32Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_21253ebac:;
			{
				return _2462b1411_IsI64Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_21253ec23:;
			{
				return _2464d505d_IsU16Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_21253ec89:;
			{
				return _246ca2d69_IsU32Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_21253ed11:;
			{
				return _246ca2e9b_IsU64Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_21253eeba:;
			{
				return _246ca30cd_IsF32Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_212540042:;
			{
				return _246ca3210_IsF64Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_2125400b9:;
			{
				return true;
			}
		}
		else {
			_case_begin_21253e728:;
			{
				return false;
			}
		}
		_match_end_21253e66d:;
	};
}



inline jule::Bool _246ca3782_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == jule::Str("i8", 2)) || (_2717_k == jule::Str("i16", 3))) || (_2717_k == jule::Str("i32", 3))) || (_2717_k == jule::Str("i64", 3))) || (_2717_k == jule::Str("int", 3)));
}



inline jule::Bool _246ca38b4_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == jule::Str("u8", 2)) || (_3619_k == jule::Str("u16", 3))) || (_3619_k == jule::Str("u32", 3))) || (_3619_k == jule::Str("u64", 3))) || (_3619_k == jule::Str("uint", 4))) || (_3619_k == jule::Str("uintptr", 7)));
}



inline jule::Bool _246ca39e6_IsInt(jule::Str _4610_k) {
	return (_246ca3782_IsSigInt(_4610_k) || _246ca38b4_IsUnsigInt(_4610_k));
}



inline jule::Bool _246ca3b28_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == jule::Str("f32", 3)) || (_5112_k == jule::Str("f64", 3)));
}



inline jule::Bool _246ca3c5a_IsNum(jule::Str _5610_k) {
	return (_246ca39e6_IsInt(_5610_k) || _246ca3b28_IsFloat(_5610_k));
}



inline jule::Bool _246ca3d8c_IsSigNum(jule::Str _6113_k) {
	return (_246ca3782_IsSigInt(_6113_k) || _246ca3b28_IsFloat(_6113_k));
}



inline void _246ca57b7_lshiftUnsig(_2461e4872_Const& _59021_c, _2461e4872_Const& _59032_x) {
	jule::U64 _5919_l = _24623b974_AsU64(&_59021_c);;
	jule::U64 _5929_r = _24623b974_AsU64(&_59032_x);;
	_246257462_SetU64(&_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _246ca58e9_rshiftUnsig(_2461e4872_Const& _59621_c, _2461e4872_Const& _59632_x) {
	jule::U64 _5979_l = _24623b974_AsU64(&_59621_c);;
	jule::U64 _5989_r = _24623b974_AsU64(&_59632_x);;
	_246257462_SetU64(&_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _246d2e8b8_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);
}



inline jule::I32 _246d2e9ea_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_246d47848_runeFromEsqSeq(_1811_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _244593849_DecodeRune(_1811_bytes);
	};
	return _2313_r;
}



inline jule::Str _246d46eda_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);
}



inline jule::Str _246d47293_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_246d47b89_strEsqSeq(_4210_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;;
				jule::I64 _5421_size;;
				std::tie(_5418_r,_5421_size) = _244593849_DecodeRune(_4210_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_244594bad_AppendRune(_4713_s,_5418_r);
			};
		}
	_iter_next_2125b99e5:;
	}
	_iter_end_2125b99e5:;;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _246d4753a_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	jule::U8 _6238_seq = 0;
	jule::Bool _6249_ok = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return std::make_tuple(_6238_seq,_6249_ok);
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_2125be852:;
			{
				_6238_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_2125be8c9:;
			{
				_6238_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_2125be951:;
			{
				_6238_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_2125be9c8:;
			{
				_6238_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_2125bea50:;
			{
				_6238_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_2125beac7:;
			{
				_6238_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_2125beb4e:;
			{
				_6238_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_2125bebc6:;
			{
				_6238_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_2125bec4d:;
			{
				_6238_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_2125becc5:;
			{
				_6238_seq='\v';
			}
		}
		_match_end_2125be731:;
	};
	_6249_ok=(_6238_seq != 0LLU);
	return std::make_tuple(_6238_seq,_6249_ok);
}



inline jule::I32 _246d47848_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64& _9239_i) {
	jule::U8 _9310_b;;
	jule::Bool _9313_ok;;
	std::tie(_9310_b,_9313_ok) = _246d4753a_tryBtoaCommonEsq(_9219_bytes.slice(_9239_i));
	(_9239_i)++;
	if (_9313_ok) {
		(_9239_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));
	};
	{
		auto &_match_expr{ _9219_bytes[_9239_i] };
		
		if (_match_expr == 'u') {
			_case_begin_2125c5913:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _2469291c7_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				_9239_i+=5LL;
				return _10313_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_2125c424c:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _2469291c7_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				_9239_i+=9LL;
				return _10813_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_2125c598a:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice((_9239_i + 1LL),(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _2469291c7_ParseUint(static_cast<jule::Str>(_11313_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_2125c477a:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice(_9239_i,(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _2469291c7_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));
			}
		}
		_match_end_2125c466a:;
	};
}



inline jule::Slice<jule::U8> _246d47b89_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64& _12434_i) {
	jule::I32 _1259_r = _246d47848_runeFromEsqSeq(_12414_bytes,_12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1259_r));
}



inline jule::I64 _246e4324b_findFormatPrefix(jule::Slice<jule::U8>& _1022_bytes, jule::I64& _1038_start) {
	jule::I64 _1113_i = _1038_start;;
	while ((_1113_i < _1022_bytes.len())) {
		{
			jule::I32 _1314_r;;
			jule::I64 _1317_size;;
			std::tie(_1314_r,_1317_size) = _244593849_DecodeRune(_1022_bytes.slice(_1113_i));
			if ((_1314_r == '{')) {
				return _1113_i;
			};
			_1113_i+=_1317_size;
		}
	_iter_next_21260e96e:;
	}
	_iter_end_21260e96e:;;
	return -1LL;
}



inline jule::Slice<jule::U8> _246e49043_getFormatRange(jule::I64& _2724_i, jule::Slice<jule::U8>& _2737_bytes) {
	jule::I64 _289_start = _2724_i;;
	jule::I64 _2913_braces = 0LL;;
	while ((_2724_i < _2737_bytes.len())) {
		{
			jule::I32 _3114_r;;
			jule::I64 _3117_size;;
			std::tie(_3114_r,_3117_size) = _244593849_DecodeRune(_2737_bytes.slice(_2724_i));
			_2724_i+=_3117_size;
			{
				auto &_match_expr{ _3114_r };
				
				if (_match_expr == '{') {
					_case_begin_212612752:;
					{
						(_2913_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_2126127b8:;
					{
						(_2913_braces)--;
						if ((_2913_braces == 0LL)) {
							return _2737_bytes.slice(_289_start,_2724_i);
						};
					}
				}
				_match_end_2126123ab:;
			};
		}
	_iter_next_2126118c7:;
	}
	_iter_end_2126118c7:;;
	return nullptr;
}



inline void _246e492eb_FmtByDefault(jule::Str& _4722_buf, jule::Any& _4733_arg) {
	if ((_4733_arg == nullptr)) {
		_4722_buf+=jule::Str("<nil>", 5);
		return;;
	};
	{
		auto &_match_expr{ _4733_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_212614479:;
			{
				_4722_buf+=_2466d22b0_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>(_4733_arg.operator jule::F32())),'g',-1LL,32LL);
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_2126147ed:;
			{
				_4722_buf+=_2466d22b0_FmtFloat(static_cast<jule::F64>(_4733_arg.operator jule::F64()),'g',-1LL,64LL);
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_212614633:;
			{
				_4722_buf+=_246ca1dce_FmtInt(static_cast<jule::I64>(_4733_arg.operator jule::I8()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_2126148ca:;
			{
				_4722_buf+=_246ca1dce_FmtInt(static_cast<jule::I64>(_4733_arg.operator jule::I16()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_212612bc5:;
			{
				_4722_buf+=_246ca1dce_FmtInt(static_cast<jule::I64>(_4733_arg.operator jule::I32()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_212614347:;
			{
				_4722_buf+=_246ca1dce_FmtInt(static_cast<jule::I64>(_4733_arg.operator jule::I64()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_2126143ad:;
			{
				_4722_buf+=_246ca1c9c_FmtUint(static_cast<jule::U64>(_4733_arg.operator jule::U8()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_212614952:;
			{
				_4722_buf+=_246ca1c9c_FmtUint(static_cast<jule::U64>(_4733_arg.operator jule::U16()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_2126149b8:;
			{
				_4722_buf+=_246ca1c9c_FmtUint(static_cast<jule::U64>(_4733_arg.operator jule::U32()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_212614a2e:;
			{
				_4722_buf+=_246ca1c9c_FmtUint(static_cast<jule::U64>(_4733_arg.operator jule::U64()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_212614a95:;
			{
				_4722_buf+=_4733_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_212614b0b:;
			{
				if (_4733_arg.operator jule::Bool()) {
					_4722_buf+=jule::Str("true", 4);
				} else {
					_4722_buf+=jule::Str("false", 5);
				};
			}
		}
		else {
			_case_begin_2126137db:;
			{
				_4722_buf+=jule::to_str(_4733_arg);
			}
		}
		_match_end_212613786:;
	};
}



inline void _246e496c5_applyFmtByDefault(jule::Str& _8627_buf, jule::I64& _8642_j, jule::Slice<jule::Any>& _8651_args) {
	jule::Any _879_arg = _8651_args[_8642_j];;
	(_8642_j)++;
	_246e492eb_FmtByDefault(_8627_buf,_879_arg);
}



inline void _246e49ac1_applyFmt(jule::Slice<jule::U8>& _9418_fmt, jule::Str& _9436_buf, jule::I64& _9451_j, jule::Slice<jule::Any>& _9460_args) {
	if ((_9418_fmt.len() == 2LL)) {
		_246e496c5_applyFmtByDefault(_9436_buf,_9451_j,_9460_args);
		return;;
	};
	if (((_9418_fmt.len() == 4LL) && (_9418_fmt == jule::Slice<jule::U8>::make({'{','{','}','}'})))) {
		_9436_buf+=jule::Str("{}", 2);
		return;;
	};
	_2445b3924_PushToStrBuffer(_9436_buf,_9418_fmt);
}



inline jule::Str _246e49dce_Format(jule::Str& _10912_fmt, jule::Slice<jule::Any> _10922_args) {
	if ((_10922_args.len() == 0LL)) {
		return _10912_fmt;
	};
	jule::Slice<jule::U8> _11313_fmtBytes = _2445b32c5_Stobs(_10912_fmt);;
	jule::Str _11413_buf = jule::Str::alloc(0LL, _10912_fmt.len());;
	jule::I64 _11513_j = 0LL;;
	jule::I64 _11613_last = 0LL;;
	jule::I64 _11713_i = _246e4324b_findFormatPrefix(_11313_fmtBytes,_11613_last);;
	for (; (_11713_i != -1LL); _11713_i=static_cast<jule::I64>(_246e4324b_findFormatPrefix(_11313_fmtBytes,_11713_i))) {
		{
			_2445b3924_PushToStrBuffer(_11413_buf,_11313_fmtBytes.slice(_11613_last,_11713_i));
			jule::Slice<jule::U8> _12017_format = _246e49043_getFormatRange(_11713_i,_11313_fmtBytes);;
			if ((_12017_format == nullptr)) {
				goto _iter_next_21262082b;
			};
			_246e49ac1_applyFmt(_12017_format,_11413_buf,_11513_j,_10922_args);
			if ((_11513_j >= _10922_args.len())) {
				_2445b3924_PushToStrBuffer(_11413_buf,_11313_fmtBytes.slice(_11713_i));
				_11613_last=static_cast<jule::I64>(_11313_fmtBytes.len());
				goto _iter_end_21262082b;
			};
			_11613_last=_11713_i;
		}
	_iter_next_21262082b:;
	}
	_iter_end_21262082b:;;
	if ((_11613_last < _11313_fmtBytes.len())) {
		_2445b3924_PushToStrBuffer(_11413_buf,_11313_fmtBytes.slice(_11613_last));
	};
	return _11413_buf;
}



inline jule::Str _246e4a4c8_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _246e49dce_Format(_3011_fmt,jule::Any(_3021_args));
}



inline jule::Bool _246cac307_parameterUsesGenerics(jule::Ptr<_246cab57b_Param>& _37427_p, jule::Slice<jule::Ptr<_246132e20_GenericDecl>>& _37439_generics) {
	if (_24617a220_IsSelf(_37427_p.ptr())) {
		return false;
	};
	return _246da6863_kindUsesGenerics(_37427_p.get()._field_Kind.get()._field_Decl.get()._field_Kind,_37439_generics);
}



inline jule::Ptr<_246d94103_TypeSymbol> _246cad0e9_buildType(jule::Ptr<_246125b27_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_246d94103_TypeSymbol>(_246d94103_TypeSymbol{._field_Decl=_9418_t, });
}



inline jule::Ptr<_246d60421_Value> _246cad22b_buildExpr(jule::Ptr<_24612a148_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_246d60421_Value>(_246d60421_Value{._field_Expr=_10318_expr, });
}



inline jule::Ptr<_246d8e2a7_TypeAlias> _246cad35d_buildTypeAlias(jule::Ptr<_24613bde6_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_246d8e2a7_TypeAlias>(_246d8e2a7_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_CppLinked=_11223_decl.get()._field_CppLinked, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_246cad0e9_buildType(_11223_decl.get()._field_Kind), });
}



inline jule::Ptr<_246108841_Field> _246cad490_buildField(jule::Ptr<_24614058c_FieldDecl> _12319_decl) {
	return jule::new_ptr<_246108841_Field>(_246108841_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_246cad0e9_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});
}



inline jule::Slice<jule::Ptr<_246108841_Field>> _246cad5c2_buildFields(jule::Slice<jule::Ptr<_24614058c_FieldDecl>>& _13421_decls) {
	jule::Slice<jule::Ptr<_246108841_Field>> _13513_fields = jule::Slice<jule::Ptr<_246108841_Field>>::alloc(0LL, _13421_decls.len());;
	{
		auto &expr = _13421_decls;
		auto it = expr.begin();
		_iter_begin_21289154c:;
		if (it != expr.end()) {
			jule::Ptr<_24614058c_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_246cad490_buildField(_13617_decl));;
			}
			_iter_next_21289154c:;
			++it;
			goto _iter_begin_21289154c;
		}
		_iter_end_21289154c:;
	};
	return _13513_fields;
}



inline jule::Ptr<_246117c3a_Struct> _246cad704_buildStruct(jule::Ptr<_246140d40_StructDecl> _14220_decl) {
	return jule::new_ptr<_246117c3a_Struct>(_246117c3a_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_246cad5c2_buildFields(_14220_decl.get()._field_Fields), ._field_Public=_14220_decl.get()._field_Public, ._field_CppLinked=_14220_decl.get()._field_CppLinked, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });
}



inline jule::Ptr<_246cab57b_Param> _246cad836_buildParam(jule::Ptr<_246136286_ParamDecl> _15419_decl) {
	return jule::new_ptr<_246cab57b_Param>(_246cab57b_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_246cad0e9_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});
}



inline jule::Slice<jule::Ptr<_246cab57b_Param>> _246cad968_buildParams(jule::Slice<jule::Ptr<_246136286_ParamDecl>>& _16521_decls) {
	jule::Slice<jule::Ptr<_246cab57b_Param>> _16613_params = jule::Slice<jule::Ptr<_246cab57b_Param>>::alloc(0LL, _16521_decls.len());;
	{
		auto &expr = _16521_decls;
		auto it = expr.begin();
		_iter_begin_2128945b6:;
		if (it != expr.end()) {
			jule::Ptr<_246136286_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_246cad836_buildParam(_16717_decl));;
			}
			_iter_next_2128945b6:;
			++it;
			goto _iter_begin_2128945b6;
		}
		_iter_end_2128945b6:;
	};
	return _16613_params;
}



inline jule::Ptr<_246cab38e_RetType> _246cada9a_buildRetType(jule::Ptr<_246128c3a_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	return jule::new_ptr<_246cab38e_RetType>(_246cab38e_RetType{._field_Kind=_246cad0e9_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});
}



inline jule::Ptr<_246cab768_Fn> _246cadbcc_buildFn(jule::Ptr<_2461375a6_FnDecl> _18316_decl) {
	return jule::new_ptr<_246cab768_Fn>(_246cab768_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_CppLinked=_18316_decl.get()._field_CppLinked, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_246cada9a_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_246cad968_buildParams(_18316_decl.get()._field_Params), });
}



inline jule::Slice<jule::Ptr<_246cab768_Fn>> _246cadd0e_buildMethods(jule::Slice<jule::Ptr<_2461375a6_FnDecl>>& _20122_decls) {
	jule::Slice<jule::Ptr<_246cab768_Fn>> _20213_methods = jule::Slice<jule::Ptr<_246cab768_Fn>>::alloc(0LL, _20122_decls.len());;
	{
		auto &expr = _20122_decls;
		auto it = expr.begin();
		_iter_begin_212898477:;
		if (it != expr.end()) {
			jule::Ptr<_2461375a6_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_246cadbcc_buildFn(_20317_decl));;
			}
			_iter_next_212898477:;
			++it;
			goto _iter_begin_212898477;
		}
		_iter_end_212898477:;
	};
	return _20213_methods;
}



inline jule::Ptr<_246cb3e9b_Trait> _246cade41_buildTrait(jule::Ptr<_24614144a_TraitDecl> _20919_decl) {
	return jule::new_ptr<_246cb3e9b_Trait>(_246cb3e9b_Trait{._field_Token=_20919_decl.get()._field_Token, ._field_Ident=_20919_decl.get()._field_Ident, ._field_Public=_20919_decl.get()._field_Public, ._field_Methods=_246cadd0e_buildMethods(_20919_decl.get()._field_Methods), });
}



inline jule::Ptr<_246cb55eb_EnumItem> _246cae073_buildEnumItem(jule::Ptr<_24613d755_EnumItemDecl> _21822_decl) {
	return jule::new_ptr<_246cb55eb_EnumItem>(_246cb55eb_EnumItem{._field_Token=_21822_decl.get()._field_Token, ._field_Ident=_21822_decl.get()._field_Ident, ._field_Value=_246cad22b_buildExpr(_21822_decl.get()._field_Expr)});
}



inline jule::Slice<jule::Ptr<_246cb55eb_EnumItem>> _246cae1a5_buildEnumItems(jule::Slice<jule::Ptr<_24613d755_EnumItemDecl>>& _22624_decls) {
	jule::Slice<jule::Ptr<_246cb55eb_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_246cb55eb_EnumItem>>::alloc(0LL, _22624_decls.len());;
	{
		auto &expr = _22624_decls;
		auto it = expr.begin();
		_iter_begin_21289aba5:;
		if (it != expr.end()) {
			jule::Ptr<_24613d755_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_246cae073_buildEnumItem(_22817_decl));;
			}
			_iter_next_21289aba5:;
			++it;
			goto _iter_begin_21289aba5;
		}
		_iter_end_21289aba5:;
	};
	return _22713_items;
}



inline jule::Ptr<_246cb60e1_Enum> _246cae2d7_buildEnum(jule::Ptr<_24613e27d_EnumDecl> _23418_decl) {
	return jule::new_ptr<_246cb60e1_Enum>(_246cb60e1_Enum{._field_Token=_23418_decl.get()._field_Token, ._field_Public=_23418_decl.get()._field_Public, ._field_Ident=_23418_decl.get()._field_Ident, ._field_Kind=_246cad0e9_buildType(_23418_decl.get()._field_Kind), ._field_Items=_246cae1a5_buildEnumItems(_23418_decl.get()._field_Items)});
}



inline jule::Ptr<_246cb7125_TypeEnumItem> _246cae64a_buildTypeEnumItem(jule::Ptr<_24613ec84_TypeEnumItemDecl> _24426_decl) {
	return jule::new_ptr<_246cb7125_TypeEnumItem>(_246cb7125_TypeEnumItem{._field_Token=_24426_decl.get()._field_Token, ._field_Ident=_24426_decl.get()._field_Ident, ._field_Kind=_246cad0e9_buildType(_24426_decl.get()._field_Kind)});
}



inline jule::Slice<jule::Ptr<_246cb7125_TypeEnumItem>> _246cae77c_buildTypeEnumItems(jule::Slice<jule::Ptr<_24613ec84_TypeEnumItemDecl>>& _25228_decls) {
	jule::Slice<jule::Ptr<_246cb7125_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_246cb7125_TypeEnumItem>>::alloc(0LL, _25228_decls.len());;
	{
		auto &expr = _25228_decls;
		auto it = expr.begin();
		_iter_begin_21289d647:;
		if (it != expr.end()) {
			jule::Ptr<_24613ec84_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_246cae64a_buildTypeEnumItem(_25417_decl));;
			}
			_iter_next_21289d647:;
			++it;
			goto _iter_begin_21289d647;
		}
		_iter_end_21289d647:;
	};
	return _25313_items;
}



inline jule::Ptr<_246cb76db_TypeEnum> _246cae8ae_buildTypeEnum(jule::Ptr<_24614038e_TypeEnumDecl> _26022_decl) {
	return jule::new_ptr<_246cb76db_TypeEnum>(_246cb76db_TypeEnum{._field_Token=_26022_decl.get()._field_Token, ._field_Public=_26022_decl.get()._field_Public, ._field_Ident=_26022_decl.get()._field_Ident, ._field_Items=_246cae77c_buildTypeEnumItems(_26022_decl.get()._field_Items)});
}



inline jule::Ptr<_246d16372_Var> _246cae9e1_buildVar(jule::Ptr<_246138585_VarDecl> _26917_decl) {
	return jule::new_ptr<_246d16372_Var>(_246d16372_Var{._field_Token=_26917_decl.get()._field_Token, ._field_Ident=_26917_decl.get()._field_Ident, ._field_CppLinked=_26917_decl.get()._field_CppLinked, ._field_Constant=_26917_decl.get()._field_Constant, ._field_Mutable=_26917_decl.get()._field_Mutable, ._field_Public=_26917_decl.get()._field_Public, ._field_Statically=_26917_decl.get()._field_Statically, ._field_Reference=_26917_decl.get()._field_Reference, ._field_Kind=_246cad0e9_buildType(_26917_decl.get()._field_Kind), ._field_Value=_246cad22b_buildExpr(_26917_decl.get()._field_Expr), ._field_Refers=static__246cac802_new(), ._field_Directives=_26917_decl.get()._field_Directives, });
}



inline jule::Slice<jule::Ptr<_246d16372_Var>> _246caeb23_buildVars(jule::Slice<jule::Ptr<_246138585_VarDecl>> _28618_decls) {
	jule::Slice<jule::Ptr<_246d16372_Var>> _28713_vars = jule::Slice<jule::Ptr<_246d16372_Var>>::alloc(0LL, _28618_decls.len());;
	{
		auto &expr = _28618_decls;
		auto it = expr.begin();
		_iter_begin_2128a1bbc:;
		if (it != expr.end()) {
			jule::Ptr<_246138585_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_246cae9e1_buildVar(_28817_decl));;
			}
			_iter_next_2128a1bbc:;
			++it;
			goto _iter_begin_2128a1bbc;
		}
		_iter_end_2128a1bbc:;
	};
	return _28713_vars;
}



inline jule::Ptr<_246cbbb96_Impl> _246caec55_buildImpl(jule::Ptr<_246141a55_Impl> _29418_decl) {
	return jule::new_ptr<_246cbbb96_Impl>(_246cbbb96_Impl{._field_Base=_29418_decl.get()._field_Base, ._field_Dest=_29418_decl.get()._field_Dest, ._field_Methods=_246cadd0e_buildMethods(_29418_decl.get()._field_Methods), ._field_Statics=_246caeb23_buildVars(_29418_decl.get()._field_Statics)});
}



inline jule::Bool _246cbb03b_matchConstraint(jule::Str& _14221_c, jule::Ptr<_246d8ee9a_TypeKind>& _14234_g) {
	{
		auto &_match_expr{ _14221_c };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_212912227:;
			{
				jule::Ptr<_246d94972_Prim> _14513_prim = _246d920ac_Prim(_14234_g.ptr());;
				if ((_14513_prim == nullptr)) {
					return false;
				};
				return _246ca3d8c_IsSigNum(_14513_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_21291228d:;
			{
				jule::Ptr<_246d94972_Prim> _15113_prim = _246d920ac_Prim(_14234_g.ptr());;
				if ((_15113_prim == nullptr)) {
					return false;
				};
				return _246ca38b4_IsUnsigInt(_15113_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_212912304:;
			{
				jule::Ptr<_246d94972_Prim> _15713_prim = _246d920ac_Prim(_14234_g.ptr());;
				if ((_15713_prim == nullptr)) {
					return false;
				};
				return _246ca3b28_IsFloat(_15713_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_21291236a:;
			{
				jule::Ptr<_246d94972_Prim> _16313_prim = _246d920ac_Prim(_14234_g.ptr());;
				if ((_16313_prim == nullptr)) {
					return false;
				};
				return _246ca3c5a_IsNum(_16313_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_2129124e1:;
			{
				return _246d91397_Mutable(_14234_g.ptr());
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_212912557:;
			{
				return (!(_246d91397_Mutable(_14234_g.ptr())));
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_2129125bd:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_212912634:;
			{
				jule::Ptr<_246d94972_Prim> _17513_prim = _246d920ac_Prim(_14234_g.ptr());;
				if ((_17513_prim != nullptr)) {
					return (_246ca3c5a_IsNum(_17513_prim.get()._field_Kind) || _246d97ba6_IsStr(_17513_prim.ptr()));
				};
				if ((_246d92585_Ptr(_14234_g.ptr()) != nullptr)) {
					return true;
				};
				jule::Ptr<_246142319_StructIns> _18213_s = _246d9350e_Struct(_14234_g.ptr());;
				if ((_18213_s != nullptr)) {
					return ((((_18213_s.get()._field_Operators._field_Gt != nullptr) && (_18213_s.get()._field_Operators._field_GtEq != nullptr)) && (_18213_s.get()._field_Operators._field_Lt != nullptr)) && (_18213_s.get()._field_Operators._field_LtEq != nullptr));
				};
				jule::Ptr<_246cb60e1_Enum> _18913_enm = _246d927e9_Enum(_14234_g.ptr());;
				if ((_18913_enm != nullptr)) {
					return _246ca3c5a_IsNum(_246d90396_Str(_18913_enm.get()._field_Kind.get()._field_Kind.ptr()));
				};
				return false;
			}
		}
		else {
			_case_begin_2129115bc:;
			{
				return false;
			}
		}
		_match_end_212911468:;
	};
}



inline jule::Bool _246cbb327_isBuiltinConstraint(jule::Str& _19925_ident) {
	{
		auto &expr = _246cb94ac_builtinConstraints;
		auto it = expr.begin();
		_iter_begin_21291c09a:;
		if (it != expr.end()) {
			jule::Str &_20012_bc = *it;
			{
				if ((_19925_ident == _20012_bc)) {
					return true;
				};
			}
			_iter_next_21291c09a:;
			++it;
			goto _iter_begin_21291c09a;
		}
		_iter_end_21291c09a:;
	};
	return false;
}



inline jule::Ptr<_246cc8862_scopeChecker> _246cbdc31_newScopeCheckerBase(jule::Ptr<_246ce861d_Sema>& _5829_s, jule::Ptr<_246cabb42_FnIns> _5843_owner) {
	return jule::new_ptr<_246cc8862_scopeChecker>(_246cc8862_scopeChecker{._field_s=_5829_s, ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_246d5956e_SymbolTable>(), });
}



inline jule::Ptr<_246cc8862_scopeChecker> _246cbe0b6_newScopeChecker(jule::Ptr<_246ce861d_Sema>& _6625_s, jule::Ptr<_246cabb42_FnIns> _6639_owner) {
	jule::Ptr<_246cc8862_scopeChecker> _6713_base = _246cbdc31_newScopeCheckerBase(_6625_s,_6639_owner);;
	_6713_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_246cc75ca_scopeLabel>>>(nullptr);
	_6713_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_246cc7a4d_scopeGoto>>>(nullptr);
	return _6713_base;
}



inline jule::Ptr<_246cc75ca_scopeLabel> _246cbe407_findLabelParent(jule::Str _7620_ident, jule::Ptr<_246cc8862_scopeChecker> _7636_scope) {
	jule::Ptr<_246cc75ca_scopeLabel> _7713_label = _246ccc305_findLabelScope(_7636_scope, _7620_ident);;
	while ((_7713_label == nullptr)) {
		{
			if (((_7636_scope.get()._field_parent == nullptr) || (_7636_scope.get()._field_owner != nullptr))) {
				return nullptr;
			};
			_7636_scope=_7636_scope.get()._field_parent;
			_7713_label=_246ccc305_findLabelScope(_7636_scope, _7620_ident);
		}
	_iter_next_212933b2d:;
	}
	_iter_end_212933b2d:;;
	return _7713_label;
}



inline jule::Bool _246cbe78c_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_246cc1c01_Scope>& _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type_is<jule::Ptr<_246ca6895_FnCallExprModel>>()) {
			_case_begin_21293547b:;
			{
				jule::Ptr<_246ca6895_FnCallExprModel> _9313_fcem = _9021_Model.operator jule::Ptr<_246ca6895_FnCallExprModel>();;
				if ((_9313_fcem.get()._field_Except == _9034_sc)) {
					return true;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246d5e398_Data>>()) {
			_case_begin_212935503:;
			{
				jule::Ptr<_246d5e398_Data> _9813_d = _9021_Model.operator jule::Ptr<_246d5e398_Data>();;
				return _246cbe78c_modelIsGotoScope(jule::Any(_9813_d.get()._field_Model),_9034_sc);
			}
		}
		_match_end_212933e5d:;
	};
	return false;
}



inline jule::Bool _246cbeacd_stmtIsGotoScope(jule::Any& _10421_stmt, jule::Ptr<_246cc1c01_Scope>& _10434_sc) {
	{
		auto &_match_expr{ _10421_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_246cc1c01_Scope>>()) {
			_case_begin_2129376c0:;
			{
				return (_10421_stmt.operator jule::Ptr<_246cc1c01_Scope>() == _10434_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc2a48_InfIter>>()) {
			_case_begin_212937736:;
			{
				return (_10421_stmt.operator jule::Ptr<_246cc2a48_InfIter>().get()._field_Scope == _10434_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc38a1_RangeIter>>()) {
			_case_begin_21293779c:;
			{
				jule::Ptr<_246cc38a1_RangeIter> _11113_it = _10421_stmt.operator jule::Ptr<_246cc38a1_RangeIter>();;
				return ((_11113_it.get()._field_Scope == _10434_sc) || _246cbe78c_modelIsGotoScope(jule::Any(_11113_it.get()._field_Expr.get()._field_Model),_10434_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc2ebb_WhileIter>>()) {
			_case_begin_212937813:;
			{
				jule::Ptr<_246cc2ebb_WhileIter> _11413_it = _10421_stmt.operator jule::Ptr<_246cc2ebb_WhileIter>();;
				return (((_11413_it.get()._field_Scope == _10434_sc) || _246cbe78c_modelIsGotoScope(jule::Any(_11413_it.get()._field_Expr),_10434_sc)) || _246cbe78c_modelIsGotoScope(jule::Any(_11413_it.get()._field_Next),_10434_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc594c_Match>>()) {
			_case_begin_212937989:;
			{
				jule::Ptr<_246cc594c_Match> _11913_m = _10421_stmt.operator jule::Ptr<_246cc594c_Match>();;
				{
					auto &expr = _11913_m.get()._field_Cases;
					auto it = expr.begin();
					_iter_begin_21293b76d:;
					if (it != expr.end()) {
						jule::Ptr<_246cc6497_Case> &_12016_c = *it;
						{
							if ((_12016_c.get()._field_Scope == _10434_sc)) {
								return true;
							};
							{
								auto &expr = _12016_c.get()._field_Exprs;
								auto it = expr.begin();
								_iter_begin_21293c61a:;
								if (it != expr.end()) {
									jule::Ptr<_246d5e398_Data> &_12420_expr = *it;
									{
										if (_246cbe78c_modelIsGotoScope(jule::Any(_12420_expr.get()._field_Model),_10434_sc)) {
											return true;
										};
									}
									_iter_next_21293c61a:;
									++it;
									goto _iter_begin_21293c61a;
								}
								_iter_end_21293c61a:;
							};
						}
						_iter_next_21293b76d:;
						++it;
						goto _iter_begin_21293b76d;
					}
					_iter_end_21293b76d:;
				};
				return ((_11913_m.get()._field_Default != nullptr) && (_11913_m.get()._field_Default.get()._field_Scope == _10434_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246cc275c_Conditional>>()) {
			_case_begin_212937a00:;
			{
				jule::Ptr<_246cc275c_Conditional> _13213_c = _10421_stmt.operator jule::Ptr<_246cc275c_Conditional>();;
				{
					auto &expr = _13213_c.get()._field_Elifs;
					auto it = expr.begin();
					_iter_begin_21293dece:;
					if (it != expr.end()) {
						jule::Ptr<_246cc20ec_If> &_13316_elif = *it;
						{
							if (((_13316_elif.get()._field_Scope == _10434_sc) || _246cbe78c_modelIsGotoScope(jule::Any(_13316_elif.get()._field_Expr),_10434_sc))) {
								return true;
							};
						}
						_iter_next_21293dece:;
						++it;
						goto _iter_begin_21293dece;
					}
					_iter_end_21293dece:;
				};
				return ((_13213_c.get()._field_Default != nullptr) && (_13213_c.get()._field_Default.get()._field_Scope == _10434_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246d5e398_Data>>()) {
			_case_begin_212937a66:;
			{
				jule::Ptr<_246d5e398_Data> _14013_d = _10421_stmt.operator jule::Ptr<_246d5e398_Data>();;
				return _246cbe78c_modelIsGotoScope(jule::Any(_14013_d.get()._field_Model),_10434_sc);
			}
		}
		else {
			_case_begin_212935987:;
			{
				return false;
			}
		}
		_match_end_212935888:;
	};
}



inline jule::I64 _246cbee1e_countMatchType(jule::Ptr<_246cc594c_Match>& _14720_m, jule::Ptr<_246d8ee9a_TypeKind>& _14732_t) {
	jule::I64 _14813_n = 0LL;;
	jule::Str _1499_kind = _246d90396_Str(_14732_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _14720_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_21294183e:;
		if (it != expr.end()) {
			jule::Ptr<_246cc6497_Case> &_15112_c = *it;
			{
				if ((_15112_c == nullptr)) {
					goto _iter_next_21294183e;
				};
				{
					auto &expr = _15112_c.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_212942dc3:;
					if (it != expr.end()) {
						jule::Ptr<_246d5e398_Data> &_15616_expr = *it;
						{
							if ((_15616_expr == nullptr)) {
								goto _iter_end_21294183e;
							};
							if ((_1499_kind == _246d90396_Str(_15616_expr.get()._field_Model.operator jule::Ptr<_246d8ee9a_TypeKind>().ptr()))) {
								(_14813_n)++;
							};
						}
						_iter_next_212942dc3:;
						++it;
						goto _iter_begin_212942dc3;
					}
					_iter_end_212942dc3:;
				};
			}
			_iter_next_21294183e:;
			++it;
			goto _iter_begin_21294183e;
		}
		_iter_end_21294183e:;
	};
	return _14813_n;
}



inline jule::Slice<jule::Ptr<_246d5e398_Data>> _246cc01b6_getDatasFromTupleData(jule::Ptr<_246d5e398_Data>& _17131_d) {
	if ((_246d93c4b_Tup(_17131_d.get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _17131_d.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_246ca85bc_TupleExprModel>>()) {
				_case_begin_212946d61:;
				{
					return _17131_d.get()._field_Model.operator jule::Ptr<_246ca85bc_TupleExprModel>().get()._field_Datas;
				}
			}
			else {
				_case_begin_212944688:;
				{
					jule::Ptr<_246d996e1_Tuple> _17721_t = _246d93c4b_Tup(_17131_d.get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_246d5e398_Data>> _17821_r = jule::Slice<jule::Ptr<_246d5e398_Data>>::alloc(0LL, _17721_t.get()._field_Types.len());;
					{
						auto &expr = _17721_t.get()._field_Types;
						auto it = expr.begin();
						_iter_begin_2129457bb:;
						if (it != expr.end()) {
							jule::Ptr<_246d8ee9a_TypeKind> _17925_kind = *it;
							{
								_17821_r = jule::alloc_for_append(_17821_r,1);_17821_r.__push(jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=_17925_kind, ._field_Mutable=true, }));;
							}
							_iter_next_2129457bb:;
							++it;
							goto _iter_begin_2129457bb;
						}
						_iter_end_2129457bb:;
					};
					return _17821_r;
				}
			}
			_match_end_212944864:;
		};
	} else {
		return jule::Slice<jule::Ptr<_246d5e398_Data>>::make({_17131_d});
	};
}



inline jule::Bool _246cc0a02_checkMut(jule::Ptr<_246ce861d_Sema>& _20618_s, jule::Ptr<_246d5e398_Data>& _20629_left, jule::Ptr<_246d5e398_Data> _20646_right, jule::Ptr<_24496dc35_Token> _20660_op) {
	jule::Bool _20674_ok = false;
	{
		
		if ((!(_20629_left.get()._field_Mutable))) {
			_case_begin_21294a53a:;
			{
				_246ceb2d0_pushErr(_20618_s.ptr(), _20660_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_20674_ok = false;
				return _20674_ok;
			}
		}
		else if ((((_20646_right != nullptr) && (!(_20646_right.get()._field_Mutable))) && _246d91397_Mutable(_20646_right.get()._field_Kind.ptr()))) {
			_case_begin_21294a66c:;
			{
				if (((_20660_op.get()._field_Kind != jule::Str("=", 1)) && (_246d9350e_Struct(_20646_right.get()._field_Kind.ptr()) != nullptr))) {
					_20674_ok = true;
					return _20674_ok;
				};
				_246ceb2d0_pushErr(_20618_s.ptr(), _20660_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_20646_right.get()._field_Kind.ptr()))}));
				_20674_ok = false;
				return _20674_ok;
			}
		}
		else {
			_case_begin_212949e0d:;
			{
				_20674_ok = true;
				return _20674_ok;
			}
		}
		_match_end_212949d31:;
	};
}



inline jule::Bool _246cc0e86_checkAssign(jule::Ptr<_246ce861d_Sema>& _22521_s, jule::Ptr<_246d5e398_Data>& _22536_left, jule::Ptr<_246d5e398_Data> _22553_right, jule::Ptr<_24496dc35_Token> _22567_op) {
	jule::Bool _22581_ok = false;
	jule::Ptr<_246cabb42_FnIns> _2269_f = _246d9329a_Fn(_22536_left.get()._field_Kind.ptr());;
	if ((((_2269_f != nullptr) && (_2269_f.get()._field_Decl != nullptr)) && _2269_f.get()._field_Decl.get()._field_Global)) {
		_246ceb2d0_pushErr(_22521_s.ptr(), _22567_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_22581_ok = false;
		return _22581_ok;
	};
	{
		
		if (_246d5ec5b_IsConst(_22536_left.ptr())) {
			_case_begin_212950ab2:;
			{
				_246ceb2d0_pushErr(_22521_s.ptr(), _22567_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_246ceb5ee_pushSugggestion(_22521_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_22581_ok = false;
				return _22581_ok;
			}
		}
		else if ((!(_22536_left.get()._field_Lvalue))) {
			_case_begin_212950bb1:;
			{
				_246ceb2d0_pushErr(_22521_s.ptr(), _22567_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_22581_ok = false;
				return _22581_ok;
			}
		}
		else if ((!(_246cc0a02_checkMut(_22521_s,_22536_left,_22553_right,_22567_op)))) {
			_case_begin_212950c38:;
			{
				_22581_ok = false;
				return _22581_ok;
			}
		}
		else {
			_case_begin_212950463:;
			{
				_22581_ok = true;
				return _22581_ok;
			}
		}
		_match_end_21295030e:;
	};
}



inline jule::Bool _246cc122d_isValidAstStForNextSt(jule::Any& _24731_n) {
	{
		auto &_match_expr{ _24731_n };
		
		if (_match_expr.type_is<jule::Ptr<_2461345b4_AssignSt>>()) {
			_case_begin_212953125:;
			{
				return (!(_24731_n.operator jule::Ptr<_2461345b4_AssignSt>().get()._field_Declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24612a148_Expr>>()) {
			_case_begin_21295318b:;
			{
				return true;
			}
		}
		else {
			_case_begin_212952762:;
			{
				return false;
			}
		}
		_match_end_212952c6d:;
	};
}



inline jule::Bool _246cc14c5_isValidStForNextSt(jule::Any& _25824_st) {
	{
		auto &_match_expr{ _25824_st };
		
		if (_match_expr.type_is<jule::Ptr<_246cc4ad3_Postfix>>() || _match_expr.type_is<jule::Ptr<_246cc5056_Assign>>() || _match_expr.type_is<jule::Ptr<_246cc540d_MultiAssign>>()) {
			_case_begin_21295428b:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246d5e398_Data>>()) {
			_case_begin_212954302:;
			{
				{
					auto &_match_expr{ _25824_st.operator jule::Ptr<_246d5e398_Data>().get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_246ca6895_FnCallExprModel>>()) {
						_case_begin_212955699:;
						{
							return true;
						}
					}
					else {
						_case_begin_212954eb2:;
						{
							return false;
						}
					}
					_match_end_212954c70:;
				};
			}
		}
		else {
			_case_begin_2129533cd:;
			{
				return false;
			}
		}
		_match_end_212953367:;
	};
}



inline jule::Bool _246cc176c_stmtIsDef(jule::Any& _27615_st) {
	{
		auto &_match_expr{ _27615_st };
		
		if (_match_expr.type_is<jule::Ptr<_246d16372_Var>>()) {
			_case_begin_212955c60:;
			{
				return true;
			}
		}
		else {
			_case_begin_212954643:;
			{
				return false;
			}
		}
		_match_end_2129545dd:;
	};
}



inline jule::Ptr<_246d16372_Var> _246cdcbd9_findVarInPackage(jule::Slice<jule::Ptr<_246d5956e_SymbolTable>>& _4626_files, jule::Str _4649_ident, jule::Bool _4661_cpp_linked) {
	{
		auto &expr = _4626_files;
		auto it = expr.begin();
		_iter_begin_212abb964:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_246d16372_Var> _4817_v = _246d5a251_FindVar(_4717_f.ptr(), _4649_ident,_4661_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;
				};
			}
			_iter_next_212abb964:;
			++it;
			goto _iter_begin_212abb964;
		}
		_iter_end_212abb964:;
	};
	return nullptr;
}



inline jule::Ptr<_246d8e2a7_TypeAlias> _246cdd118_findTypeAliasInPackage(jule::Slice<jule::Ptr<_246d5956e_SymbolTable>>& _5832_files, jule::Str _5855_ident, jule::Bool _5867_cpp_linked) {
	{
		auto &expr = _5832_files;
		auto it = expr.begin();
		_iter_begin_212abc8cc:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_246d8e2a7_TypeAlias> _6017_ta = _246d5a608_FindTypeAlias(_5917_f.ptr(), _5855_ident,_5867_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;
				};
			}
			_iter_next_212abc8cc:;
			++it;
			goto _iter_begin_212abc8cc;
		}
		_iter_end_212abc8cc:;
	};
	return nullptr;
}



inline jule::Ptr<_246117c3a_Struct> _246cdd503_findStructInPackage(jule::Slice<jule::Ptr<_246d5956e_SymbolTable>>& _7029_files, jule::Str _7052_ident, jule::Bool _7064_cpp_linked) {
	{
		auto &expr = _7029_files;
		auto it = expr.begin();
		_iter_begin_212abe03d:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_246117c3a_Struct> _7217_s = _246d5a9b0_FindStruct(_7117_f.ptr(), _7052_ident,_7064_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;
				};
			}
			_iter_next_212abe03d:;
			++it;
			goto _iter_begin_212abe03d;
		}
		_iter_end_212abe03d:;
	};
	return nullptr;
}



inline jule::Ptr<_246cab768_Fn> _246cdd965_findFnInPackage(jule::Slice<jule::Ptr<_246d5956e_SymbolTable>>& _8225_files, jule::Str _8248_ident, jule::Bool _8260_cpp_linked) {
	{
		auto &expr = _8225_files;
		auto it = expr.begin();
		_iter_begin_212ac069e:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_246cab768_Fn> _8417_f = _246d5ad67_FindFn(_8317_file.ptr(), _8248_ident,_8260_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;
				};
			}
			_iter_next_212ac069e:;
			++it;
			goto _iter_begin_212ac069e;
		}
		_iter_end_212ac069e:;
	};
	return nullptr;
}



inline jule::Ptr<_246cb3e9b_Trait> _246cddc73_findTraitInPackage(jule::Slice<jule::Ptr<_246d5956e_SymbolTable>>& _9428_files, jule::Str _9451_ident) {
	{
		auto &expr = _9428_files;
		auto it = expr.begin();
		_iter_begin_212ac1518:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_246cb3e9b_Trait> _9617_t = _246d5b175_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;
				};
			}
			_iter_next_212ac1518:;
			++it;
			goto _iter_begin_212ac1518;
		}
		_iter_end_212ac1518:;
	};
	return nullptr;
}



inline jule::Ptr<_246cb60e1_Enum> _246cde0b4_findEnumInPackage(jule::Slice<jule::Ptr<_246d5956e_SymbolTable>>& _10627_files, jule::Str _10650_ident) {
	{
		auto &expr = _10627_files;
		auto it = expr.begin();
		_iter_begin_212ac375c:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_246cb60e1_Enum> _10817_e = _246d5b483_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;
				};
			}
			_iter_next_212ac375c:;
			++it;
			goto _iter_begin_212ac375c;
		}
		_iter_end_212ac375c:;
	};
	return nullptr;
}



inline jule::Ptr<_246cb76db_TypeEnum> _246cde405_findTypeEnumInPackage(jule::Slice<jule::Ptr<_246d5956e_SymbolTable>>& _11831_files, jule::Str _11854_ident) {
	{
		auto &expr = _11831_files;
		auto it = expr.begin();
		_iter_begin_212ac4bd1:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_246cb76db_TypeEnum> _12017_e = _246d5b791_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;
				};
			}
			_iter_next_212ac4bd1:;
			++it;
			goto _iter_begin_212ac4bd1;
		}
		_iter_end_212ac4bd1:;
	};
	return nullptr;
}



inline jule::Any _246cde900_defByIdentPackage(jule::Slice<jule::Ptr<_246d5956e_SymbolTable>>& _12927_files, jule::Str& _12951_ident, jule::Bool _12963_cppLinked) {
	{
		auto &expr = _12927_files;
		auto it = expr.begin();
		_iter_begin_212ac6375:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _246d5c61b_defByIdent(_13017_file.ptr(), _12951_ident,_12963_cppLinked);;
				if ((_13117_def != nullptr)) {
					return jule::Any(_13117_def);
				};
			}
			_iter_next_212ac6375:;
			++it;
			goto _iter_begin_212ac6375;
		}
		_iter_end_212ac6375:;
	};
	return nullptr;
}



inline jule::Bool _246ce5a05_isStdPackage(jule::Str _36117_f, jule::Str _36125_p) {
	return _2445b3e96_HasPrefix(_36117_f,_243624832_Join(jule::Slice<jule::Str>::make({_244679a95_PathStdlib,_36125_p})));
}



inline jule::Bool _246ce675e_isValidModelForRef(jule::Any& _1228_m) {
	{
		auto &_match_expr{ _1228_m };
		
		if (_match_expr.type_is<jule::Ptr<_246d16372_Var>>()) {
			_case_begin_212ad8c5b:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca7b2c_StructSubIdentExprModel>>()) {
			_case_begin_212ad86b7:;
			{
				jule::Ptr<_246ca7b2c_StructSubIdentExprModel> _1717_model = _1228_m.operator jule::Ptr<_246ca7b2c_StructSubIdentExprModel>();;
				return _246ce675e_isValidModelForRef(_1717_model.get()._field_Expr.get()._field_Model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca770e_TraitSubIdentExprModel>>()) {
			_case_begin_212ad872d:;
			{
				jule::Ptr<_246ca770e_TraitSubIdentExprModel> _2017_model = _1228_m.operator jule::Ptr<_246ca770e_TraitSubIdentExprModel>();;
				return _246ce675e_isValidModelForRef(_2017_model.get()._field_Expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca5e05_UnaryExprModel>>()) {
			_case_begin_212ad8794:;
			{
				jule::Ptr<_246ca5e05_UnaryExprModel> _2317_unary = _1228_m.operator jule::Ptr<_246ca5e05_UnaryExprModel>();;
				if ((_2317_unary.get()._field_Op.get()._field_Kind != jule::Str("*", 1))) {
					return false;
				};
				if ((_246d92585_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;
				};
				if ((_246d92321_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;
				};
				return _246ce675e_isValidModelForRef(_2317_unary.get()._field_Expr.get()._field_Model);
			}
		}
		else {
			_case_begin_212ad7ee1:;
			{
				return false;
			}
		}
		_match_end_212ad82aa:;
	};
}



inline _244640d69_Log _246ce6c04_compilerErr(jule::Ptr<_24496dc35_Token>& _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_244640d69_Log _4213_log = _244640d69_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_4117_token.get()._field_Row, ._field_Column=_4117_token.get()._field_Column, ._field_Path=_4117_token.get()._field_File.get()._field_Path, ._field_Text=_2446412a9_Logf(_4144_fmt,jule::Any(_4157_args)), };;
	if (_4132_line) {
		_4213_log._field_Line=_24497529c_GetRow(_4117_token.get()._field_File.ptr(), _4117_token.get()._field_Row);
	};
	return _4213_log;
}



inline jule::Bool _246ce7045_impIsLookupable(jule::Ptr<_246ce04c2_ImportInfo>& _5521_i, jule::Str _5537_ident) {
	if (_5521_i.get()._field_CppLinked) {
		return false;
	};
	if ((!(_5521_i.get()._field_ImportAll))) {
		if ((_5521_i.get()._field_Selected.len() > 0LL)) {
			return _246ce2d98_existIdent(_5521_i.ptr(), _5537_ident);
		};
	};
	return _5521_i.get()._field_ImportAll;
}



inline void _246ce7342_appendRetVars(jule::Slice<jule::Ptr<_246d16372_Var>>& _6723_dest, jule::Ptr<_246cabb42_FnIns>& _6742_f) {
	if ((_24618a10e_IsVoid(_6742_f.get()._field_Decl.ptr()) || (_6742_f.get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_246d8ee9a_TypeKind>> _7213_types = _2461a97e3_Types(_6742_f.ptr());;
	{
		auto &expr = _6742_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_212ae246d:;
		if (it != expr.end()) {
			jule::I64 _7310_i = it - expr.begin();
			jule::Ptr<_24496dc35_Token> _7317_ident = *it;
			{
				if ((_2449714c9_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _244971771_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_212ae246d;
				};
				_6723_dest = jule::alloc_for_append(_6723_dest,1);_6723_dest.__push(jule::new_ptr<_246d16372_Var>(_246d16372_Var{._field_Scope=_6742_f.get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_246d94103_TypeSymbol>(_246d94103_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_246d60421_Value>(_246d60421_Value{._field_Data=jule::new_ptr<_246d5e398_Data>()}), }));;
			}
			_iter_next_212ae246d:;
			++it;
			_7310_i++;
			goto _iter_begin_212ae246d;
		}
		_iter_end_212ae246d:;
	};
}



inline void _246ce75ea_appendParamVars(jule::Slice<jule::Ptr<_246d16372_Var>>& _9325_dest, jule::Ptr<_246cabb42_FnIns>& _9344_f) {
	if ((_9344_f.get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9344_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_212ae4096:;
		if (it != expr.end()) {
			jule::Ptr<_246cab955_ParamIns> _9817_p = *it;
			{
				if ((_2449714c9_IsIgnoreIdent(_9817_p.get()._field_Decl.get()._field_Ident) || _244971771_IsAnonIdent(_9817_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_212ae4096;
				};
				jule::Ptr<_246d16372_Var> _10317_v = jule::new_ptr<_246d16372_Var>(_246d16372_Var{._field_Scope=_9344_f.get()._field_Scope, ._field_Token=_9817_p.get()._field_Decl.get()._field_Token, ._field_Ident=_9817_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_9817_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_9817_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_246d94103_TypeSymbol>(), ._field_Value=jule::new_ptr<_246d60421_Value>(_246d60421_Value{._field_Data=jule::new_ptr<_246d5e398_Data>()}), });;
				{
					
					if (_24617a220_IsSelf(_9817_p.get()._field_Decl.ptr())) {
						_case_begin_212ae83a8:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_246d8ea6b_Kind>(_9344_f.get()._field_Owner, 0)});
							_10317_v.get()._field_Reference=(!(_24617b4da_IsRef(_9817_p.get()._field_Decl.ptr())));
							if (_24617b4da_IsRef(_9817_p.get()._field_Decl.ptr())) {
								_10317_v.get()._field_Ident=_10317_v.get()._field_Ident.slice(1LL);
								_10317_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_246d8ea6b_Kind>(jule::new_ptr<_246d98206_Sptr>(_246d98206_Sptr{._field_Elem=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_CppIdent=_10317_v.get()._field_Kind.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10317_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 7);
							};
						}
					}
					else if (_9817_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_212ae85ea:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_246d8ea6b_Kind>(jule::new_ptr<_246d98b63_Slc>(_246d98b63_Slc{._field_Elem=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_CppIdent=_9817_p.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_9817_p.get()._field_Kind.get()._field_Kind})}), 8)});
						}
					}
					else {
						_case_begin_212ae5be1:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=_9817_p.get()._field_Kind;
						}
					}
					_match_end_212ae7d14:;
				};
				_9325_dest = jule::alloc_for_append(_9325_dest,1);_9325_dest.__push(_10317_v);;
			}
			_iter_next_212ae4096:;
			++it;
			goto _iter_begin_212ae4096;
		}
		_iter_end_212ae4096:;
	};
}



inline void _246ce78c5_appendGenericTypeAliases(jule::Slice<jule::Ptr<_246d8e2a7_TypeAlias>>& _15334_dest, jule::Ptr<_246cabb42_FnIns>& _15359_f) {
	jule::I64 _15413_size = _15359_f.get()._field_Generics.len();;
	if ((_15359_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_15413_size+=_15359_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15413_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15359_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_212aed875:;
		if (it != expr.end()) {
			jule::I64 _16310_i = it - expr.begin();
			jule::Ptr<_246d8d76d_InsGeneric> _16317_g = *it;
			{
				jule::Ptr<_246132e20_GenericDecl> _16417_decl = _15359_f.get()._field_Decl.get()._field_Generics[_16310_i];;
				_15334_dest = jule::alloc_for_append(_15334_dest,1);_15334_dest.__push(jule::new_ptr<_246d8e2a7_TypeAlias>(_246d8e2a7_TypeAlias{._field_Scope=_15359_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16417_decl.get()._field_Token, ._field_Ident=_16417_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_246d94103_TypeSymbol>(_246d94103_TypeSymbol{._field_Kind=_16317_g.get()._field_Kind}), }));;
			}
			_iter_next_212aed875:;
			++it;
			_16310_i++;
			goto _iter_begin_212aed875;
		}
		_iter_end_212aed875:;
	};
	if ((_15359_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_246142319_StructIns> _17617_owner = _15359_f.get()._field_Owner;;
		{
			auto &expr = _17617_owner.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_212b00459:;
			if (it != expr.end()) {
				jule::I64 _17714_i = it - expr.begin();
				jule::Ptr<_246d8d76d_InsGeneric> _17721_g = *it;
				{
					jule::Ptr<_246132e20_GenericDecl> _17821_decl = _17617_owner.get()._field_Decl.get()._field_Generics[_17714_i];;
					_15334_dest = jule::alloc_for_append(_15334_dest,1);_15334_dest.__push(jule::new_ptr<_246d8e2a7_TypeAlias>(_246d8e2a7_TypeAlias{._field_Scope=_15359_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_17821_decl.get()._field_Token, ._field_Ident=_17821_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_246d94103_TypeSymbol>(_246d94103_TypeSymbol{._field_Kind=_17721_g.get()._field_Kind}), }));;
				}
				_iter_next_212b00459:;
				++it;
				_17714_i++;
				goto _iter_begin_212b00459;
			}
			_iter_end_212b00459:;
		};
	};
}



inline jule::Ptr<_246d5956e_SymbolTable> _246ce7c27_findFile(jule::Slice<jule::Ptr<_246d5956e_SymbolTable>>& _19118_files, jule::Ptr<_2449740c0_File>& _19142_handler) {
	{
		auto &expr = _19118_files;
		auto it = expr.begin();
		_iter_begin_212b01cb8:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _19217_fl = *it;
			{
				if ((_19217_fl.get()._field_File == _19142_handler)) {
					return _19217_fl;
				};
			}
			_iter_next_212b01cb8:;
			++it;
			goto _iter_begin_212b01cb8;
		}
		_iter_end_212b01cb8:;
	};
	return nullptr;
}



inline void _246ce8189_pushSugggestion(_244640d69_Log* _20031_log, jule::Str _20042_fmt, jule::Slice<jule::Any> _20055_args) {
	_20031_log->_field_Suggestion=_2446412a9_Logf(_20042_fmt,jule::Any(_20055_args));
}



inline jule::Bool _246d38361_traitHasReferenceReceiver(jule::Ptr<_246cb3e9b_Trait>& _2631_t) {
	{
		auto &expr = _2631_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_212d4ee4a:;
		if (it != expr.end()) {
			jule::Ptr<_246cab768_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_Statically) {
					goto _iter_next_212d4ee4a;
				};
				jule::Ptr<_246cab57b_Param> _3313_p = _2712_f.get()._field_Params[0LL];;
				if ((_24617b4da_IsRef(_3313_p.ptr()) && _24617a220_IsSelf(_3313_p.ptr()))) {
					return true;
				};
			}
			_iter_next_212d4ee4a:;
			++it;
			goto _iter_begin_212d4ee4a;
		}
		_iter_end_212d4ee4a:;
	};
	return false;
}



inline jule::Bool _246d2ecd6_floatAssignable(jule::Str _4120_kind, jule::Ptr<_246d5e398_Data>& _4132_d) {
	jule::Str _429_value = _2466d22b0_FmtFloat(static_cast<jule::F64>(_2462487e9_AsF64(_4132_d.get()._field_Constant.ptr())),'g',-1LL,64LL);;
	return _2464d5701_CheckBitFloat(_429_value,static_cast<jule::I64>(_2462d8812_BitsizeOf(_4120_kind)));
}



inline jule::Bool _246d2ee18_sigAssignable(jule::Str _4618_kind, jule::Ptr<_246d5e398_Data>& _4630_d) {
	jule::F64 _479_min = _24665ba75_Min(_4618_kind);;
	jule::F64 _489_max = _2466648a2_Max(_4618_kind);;
	{
		
		if (_24625698e_IsF64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_212d541c4:;
			{
				jule::F64 _5113_x = _24624696d_ReadF64(_4630_d.get()._field_Constant.ptr());;
				jule::F64 _5214_i;;
				jule::F64 _5217_frac;;
				std::tie(_5214_i,_5217_frac) = _246c7292c_Modf(_5113_x);
				if ((_5217_frac != 0LL)) {
					return false;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));
			}
		}
		else if (_2462069a5_IsU64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_212d5423a:;
			{
				jule::F64 _5813_x = _2462487e9_AsF64(_4630_d.get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;
				};
			}
		}
		else if (_2462570dd_IsI64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_212d542a1:;
			{
				jule::F64 _6313_x = _2462487e9_AsF64(_4630_d.get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));
			}
		}
		_match_end_212d54081:;
	};
	return false;
}



inline jule::Bool _246d46bcc_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_246d5e398_Data>& _6932_d) {
	jule::F64 _709_max = _2466648a2_Max(_6920_kind);;
	if ((_6932_d.get()._field_IsRune && (_6920_kind == jule::Str("u8", 2)))) {
		return _246d2e8b8_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_24623bb1c_ReadI64(_6932_d.get()._field_Constant.ptr()))));
	};
	{
		
		if (_24625698e_IsF64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_212d5977e:;
			{
				jule::F64 _7713_x = _24624696d_ReadF64(_6932_d.get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;
				};
				jule::F64 _8114_i;;
				jule::F64 _8117_frac;;
				std::tie(_8114_i,_8117_frac) = _246c7292c_Modf(_7713_x);
				if ((_8117_frac != 0LL)) {
					return false;
				};
				return (_8114_i <= _709_max);
			}
		}
		else if (_2462069a5_IsU64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_212d59806:;
			{
				jule::F64 _8713_x = _2462487e9_AsF64(_6932_d.get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;
				};
			}
		}
		else if (_2462570dd_IsI64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_212d5987d:;
			{
				jule::F64 _9213_x = _2462487e9_AsF64(_6932_d.get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));
			}
		}
		_match_end_212d595d6:;
	};
	return false;
}



inline jule::Bool _246d46d0e_intAssignable(jule::Str _9818_kind, jule::Ptr<_246d5e398_Data>& _9830_d) {
	{
		
		if (_246ca3782_IsSigInt(_9818_kind)) {
			_case_begin_212d5e71d:;
			{
				return _246d2ee18_sigAssignable(_9818_kind,_9830_d);
			}
		}
		else if (_246ca38b4_IsUnsigInt(_9818_kind)) {
			_case_begin_212d5dec0:;
			{
				return _246d46bcc_unsigAssignable(_9818_kind,_9830_d);
			}
		}
		else {
			_case_begin_212d5a087:;
			{
				return false;
			}
		}
		_match_end_212d59eaa:;
	};
}



inline jule::Ptr<_246d8ee9a_TypeKind> _246d585e5_lenKind(void) {
	return jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("int", 3)), 6)});
}



inline jule::Ptr<_2460dc858_Directive> _246d89648_findDirective(jule::Slice<jule::Ptr<_2460dc858_Directive>>& _408523_directives, jule::Str _408554_d) {
	{
		auto &expr = _408523_directives;
		auto it = expr.begin();
		_iter_begin_212e89183:;
		if (it != expr.end()) {
			jule::Ptr<_2460dc858_Directive> _408617_dr = *it;
			{
				if ((_408617_dr.get()._field_Tag.get()._field_Kind == _408554_d)) {
					return _408617_dr;
				};
			}
			_iter_next_212e89183:;
			++it;
			goto _iter_begin_212e89183;
		}
		_iter_end_212e89183:;
	};
	return nullptr;
}



inline jule::Any _246d899cd_findBuiltinsImport(jule::Str _409423_ident, jule::Ptr<_246ce04c2_ImportInfo> _409435_imp) {
	return jule::Any(_246dbdbbb_findPackageBuiltinDef(_409435_imp.get()._field_LinkPath,_409423_ident));
}



inline void _246d89bdc_fitBitsize(jule::Ptr<_246d5e398_Data>& _410120_d) {
	jule::Ptr<_246d94972_Prim> _410213_prim = _246d920ac_Prim(_410120_d.get()._field_Kind.ptr());;
	jule::I64 _41039_z = _2462d8812_BitsizeOf(_246d94cd5_Str(_410213_prim.ptr()));;
	if ((_41039_z == 64LLU)) {
		return;;
	};
	jule::I64 _410813_k = 0LL;;
	{
		
		if (_2462570dd_IsI64(_410120_d.get()._field_Constant.ptr())) {
			_case_begin_212e8c20d:;
			{
				_410813_k=static_cast<jule::I64>(_2465ab91a_BitsizeOfInt(static_cast<jule::I64>(_24623bb1c_ReadI64(_410120_d.get()._field_Constant.ptr()))));
				if ((_410813_k > _41039_z)) {
					_410213_prim.get()._field_Kind=_24630ca9a_IntFromBits(_410813_k);
				};
			}
		}
		else if (_2462069a5_IsU64(_410120_d.get()._field_Constant.ptr())) {
			_case_begin_212e8c285:;
			{
				_410813_k=static_cast<jule::I64>(_2465c46ad_BitsizeOfUint(static_cast<jule::U64>(_24623cd0a_ReadU64(_410120_d.get()._field_Constant.ptr()))));
				if ((_410813_k > _41039_z)) {
					_410213_prim.get()._field_Kind=_24631e9ad_UintFromBits(_410813_k);
				};
			}
		}
		else if (_24625698e_IsF64(_410120_d.get()._field_Constant.ptr())) {
			_case_begin_212e8c30c:;
			{
				_410813_k=static_cast<jule::I64>(_2465053e1_BitsizeOfFloat(static_cast<jule::F64>(_24624696d_ReadF64(_410120_d.get()._field_Constant.ptr()))));
				if ((_410813_k > _41039_z)) {
					_410213_prim.get()._field_Kind=_246348e49_FloatFromBits(_410813_k);
				};
			}
		}
		_match_end_212e8c142:;
	};
}



inline void _246d89ed9_makeStructLitAlloc(jule::Ptr<_246d5e398_Data>& _412828_d, jule::Ptr<_246ca62ce_StructLitExprModel>& _412843_lit) {
	_412828_d.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(jule::new_ptr<_246d98206_Sptr>(_246d98206_Sptr{._field_Elem=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_412843_lit.get()._field_Strct, 0)})}), 7)});
	_412828_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca64bb_AllocStructLitExprModel>(_246ca64bb_AllocStructLitExprModel{._field_Lit=_412843_lit}));
}



inline jule::Ptr<_246d16372_Var> _246d8a32a_buildErrorVar(jule::Ptr<_246cc1c01_Scope>& _413923_s, jule::Ptr<_24612e12a_FnCallExpr>& _413939_fc) {
	return jule::new_ptr<_246d16372_Var>(_246d16372_Var{._field_Scope=_413923_s, ._field_Token=_413939_fc.get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=jule::new_ptr<_246d94103_TypeSymbol>(_246d94103_TypeSymbol{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("any", 3)), 6)})}), ._field_Value=jule::new_ptr<_246d60421_Value>(_246d60421_Value{._field_Data=jule::new_ptr<_246d5e398_Data>()}), });
}



inline jule::Any _246d8a66b_findBuiltinsSema(jule::Str _415821_ident, jule::Ptr<_246ce861d_Sema> _415837_s) {
	{
		auto &expr = _415837_s.get()._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_212e91e7c:;
		if (it != expr.end()) {
			jule::Ptr<_246ce04c2_ImportInfo> _415917_imp = *it;
			{
				if ((_415917_imp.get()._field_ImportAll || _246ce2d98_existIdent(_415917_imp.ptr(), _415821_ident))) {
					jule::Any _416121_def = _246d899cd_findBuiltinsImport(_415821_ident,_415917_imp);;
					if ((_416121_def != nullptr)) {
						return jule::Any(_416121_def);
					};
				};
			}
			_iter_next_212e91e7c:;
			++it;
			goto _iter_begin_212e91e7c;
		}
		_iter_end_212e91e7c:;
	};
	jule::Str _416913_ppath = _2449749b6_Dir(_415837_s.get()._field_file.get()._field_File.ptr());;
	if (_2445b3e96_HasPrefix(_416913_ppath,_244679a95_PathStdlib)) {
		(_416913_ppath).mut_slice(_244679a95_PathStdlib.len());;
		_416913_ppath=(jule::Str("std", 3) + _2445b9bd3_Replace(_416913_ppath,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
		return jule::Any(_246dbdbbb_findPackageBuiltinDef(_416913_ppath,_415821_ident));
	};
	return nullptr;
}



inline jule::Bool _246d8a913_isOkForShifting(jule::Ptr<_246d5e398_Data>& _418325_d) {
	if (_246d5ec5b_IsConst(_418325_d.ptr())) {
		{
			
			if (_2462570dd_IsI64(_418325_d.get()._field_Constant.ptr())) {
				_case_begin_212e970a3:;
				{
					return (_24623bb1c_ReadI64(_418325_d.get()._field_Constant.ptr()) >= 0LL);
				}
			}
			else if (_2462069a5_IsU64(_418325_d.get()._field_Constant.ptr())) {
				_case_begin_212e96844:;
				{
					return true;
				}
			}
			else if (_24625698e_IsF64(_418325_d.get()._field_Constant.ptr())) {
				_case_begin_212e968aa:;
				{
					return (_24624696d_ReadF64(_418325_d.get()._field_Constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_212e967cd:;
				{
					return false;
				}
			}
			_match_end_212e96701:;
		};
	};
	jule::Ptr<_246d94972_Prim> _41969_prim = _246d920ac_Prim(_418325_d.get()._field_Kind.ptr());;
	return ((_41969_prim != nullptr) && _246ca39e6_IsInt(_246d94cd5_Str(_41969_prim.ptr())));
}



inline jule::Bool _246d8acba_isInstancedStruct(jule::Ptr<_246142319_StructIns> _420022_s) {
	return (_420022_s.get()._field_Decl.get()._field_Generics.len() == _420022_s.get()._field_Generics.len());
}



inline jule::Bool _246d8b12d_isPtrArithmeticCompatible(jule::Ptr<_246d5e398_Data>& _420435_l, jule::Ptr<_246d5e398_Data>& _420450_r) {
	jule::Ptr<_246d9b76a_Ptr> _42059_ptr = _246d92585_Ptr(_420450_r.get()._field_Kind.ptr());;
	if ((_42059_ptr != nullptr)) {
		return _246d906a4_Equals(_246d92585_Ptr(_420435_l.get()._field_Kind.ptr()).get()._field_Elem, _42059_ptr.get()._field_Elem);
	};
	if (_246d5ec5b_IsConst(_420450_r.ptr())) {
		return _246d46d0e_intAssignable(jule::Str("int", 3),_420450_r);
	};
	_246d48041_typeCompatibilityChecker _421213_tcc = _246d48041_typeCompatibilityChecker{._field_dest=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("int", 3)), 6)}), ._field_src=_420450_r.get()._field_Kind, };;
	return _246d4962a_check(&_421213_tcc);
}



inline void _246d8b370_applyCastKindModel(jule::Ptr<_246d5e398_Data>& _422128_d, jule::Ptr<_246d8ee9a_TypeKind>& _422143_t) {
	_422128_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca66a8_CastingExprModel>(_246ca66a8_CastingExprModel{._field_Expr=_422128_d.get()._field_Model, ._field_Kind=_422143_t, ._field_ExprKind=_422128_d.get()._field_Kind}));
}



inline void _246d8b628_applyCastKind(jule::Ptr<_246d5e398_Data>& _422923_d, jule::Ptr<_246d8ee9a_TypeKind>& _422938_t) {
	_246d8b370_applyCastKindModel(_422923_d,_422938_t);
	_422923_d.get()._field_Kind=_422938_t;
}



inline jule::Ptr<_246d5e398_Data> _246d8b826_buildVoidData(void) {
	return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("void", 4)), 6)}), });
}



inline jule::Str _246d8bae0_checkDataForIntegerIndexing(jule::Ptr<_246d5e398_Data>& _424237_d) {
	jule::Str _424249_err_fmt = jule::Str();
	if ((_424237_d == nullptr)) {
		_424249_err_fmt = jule::Str();
		return _424249_err_fmt;
	};
	{
		
		if ((_246d920ac_Prim(_424237_d.get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_212e9ec15:;
			{
				_424249_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _424249_err_fmt;
			}
		}
		else if ((!(_246ca39e6_IsInt(_246d94cd5_Str(_246d920ac_Prim(_424237_d.get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_212e9ec7b:;
			{
				_424249_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _424249_err_fmt;
			}
		}
		else if (_246d5ec5b_IsConst(_424237_d.ptr())) {
			_case_begin_212e9ed03:;
			{
				if ((_2462487e9_AsF64(_424237_d.get()._field_Constant.ptr()) < 0LL)) {
					_424249_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _424249_err_fmt;
				};
			}
		}
		else if ((_246d920ac_Prim(_424237_d.get()._field_Kind.ptr()) == nullptr) || _246d5ec5b_IsConst(_424237_d.ptr()) || (_2462d20d0_RealKindOf(_246d94cd5_Str(_246d920ac_Prim(_424237_d.get()._field_Kind.ptr()).ptr())) != _2462d20d0_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_212e9ed7a:;
			{
				jule::Ptr<_246d8ee9a_TypeKind> _425917_t = jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("int", 3)), 6)});;
				_246d8b628_applyCastKind(_424237_d,_425917_t);
			}
		}
		_match_end_212e9e6d7:;
	};
	_424249_err_fmt = jule::Str();
	return _424249_err_fmt;
}



inline void _246d8bda9_applyCastModelByEnum(jule::Ptr<_246d5e398_Data>& _426830_d, jule::Ptr<_246cb60e1_Enum> _426844_e) {
	if ((_426844_e == nullptr)) {
		return;;
	};
	jule::Ptr<_246d94972_Prim> _42729_p = _246d920ac_Prim(_426844_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_246d97ba6_IsStr(_42729_p.ptr())) {
		return;;
	};
	_246d8b370_applyCastKindModel(_426830_d,_426844_e.get()._field_Kind.get()._field_Kind);
}



inline void _246d8c162_castConstByType(jule::Str& _427921_t, jule::Ptr<_246d5e398_Data>& _427934_d) {
	{
		
		if (_246ca3782_IsSigInt(_427921_t)) {
			_case_begin_212ea5b72:;
			{
				{
					auto _match_expr{ _2462d8812_BitsizeOf(_2462d20d0_RealKindOf(_427921_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_212ea6898:;
						{
							_2462496a7_SetI64(_427934_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_24624782b_AsI64(_427934_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_212ea690e:;
						{
							_2462496a7_SetI64(_427934_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_24624782b_AsI64(_427934_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_212ea6975:;
						{
							_2462496a7_SetI64(_427934_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_24624782b_AsI64(_427934_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_212ea69db:;
						{
							_2462496a7_SetI64(_427934_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_24624782b_AsI64(_427934_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_212ea5e08:;
				};
			}
		}
		else if (_246ca38b4_IsUnsigInt(_427921_t)) {
			_case_begin_212ea5be9:;
			{
				{
					auto _match_expr{ _2462d8812_BitsizeOf(_2462d20d0_RealKindOf(_427921_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_212eaa35d:;
						{
							_246257462_SetU64(_427934_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_24623b974_AsU64(_427934_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_212eaa3c4:;
						{
							_246257462_SetU64(_427934_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_24623b974_AsU64(_427934_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_212eaa43a:;
						{
							_246257462_SetU64(_427934_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_24623b974_AsU64(_427934_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_212eaa4a1:;
						{
							_246257462_SetU64(_427934_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_24623b974_AsU64(_427934_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_212ea8724:;
				};
			}
		}
		else if (_246ca3b28_IsFloat(_427921_t)) {
			_case_begin_212ea5c71:;
			{
				{
					auto _match_expr{ _2462d8812_BitsizeOf(_2462d20d0_RealKindOf(_427921_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_212eab628:;
						{
							_2462617ce_SetF64(_427934_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_2462487e9_AsF64(_427934_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_212eadd23:;
						{
							_2462617ce_SetF64(_427934_d.get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_2462487e9_AsF64(_427934_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_212eac1d9:;
				};
			}
		}
		_match_end_212ea5a40:;
	};
}



inline void _246d8c66d_updateModelToGenericIns(jule::Any& _431333_m, jule::Ptr<_246cabb42_FnIns>& _431352_f) {
	{
		auto &_match_expr{ _431333_m };
		
		if (_match_expr.type_is<jule::Ptr<_246cabb42_FnIns>>()) {
			_case_begin_212eaee78:;
			{
				_431333_m=static_cast<jule::Any>(_431352_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca7b2c_StructSubIdentExprModel>>()) {
			_case_begin_212eaeede:;
			{
				_431333_m.operator jule::Ptr<_246ca7b2c_StructSubIdentExprModel>().get()._field_Method=_431352_f;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca7d19_StructStaticIdentExprModel>>()) {
			_case_begin_212eb0055:;
			{
				_431333_m.operator jule::Ptr<_246ca7d19_StructStaticIdentExprModel>().get()._field_Method=_431352_f;
			}
		}
		_match_end_212ea7b63:;
	};
}



inline jule::Bool _246d8c8b0_pushSubIdentFromExpr(jule::Any _432429_expr, jule::Ptr<_24612683c_SubIdentTypeDecl>& _432450_t) {
	{
		auto &_match_expr{ _432429_expr };
		
		if (_match_expr.type_is<jule::Ptr<_24612bd09_IdentExpr>>()) {
			_case_begin_212eb282c:;
			{
				jule::Ptr<_24612bd09_IdentExpr> _432717_e = _432429_expr.operator jule::Ptr<_24612bd09_IdentExpr>();;
				_432450_t.get()._field_Idents = jule::alloc_for_append(_432450_t.get()._field_Idents,1);_432450_t.get()._field_Idents.__push(jule::new_ptr<_2461261dd_IdentTypeDecl>(_2461261dd_IdentTypeDecl{._field_Token=_432717_e.get()._field_Token, ._field_Ident=_432717_e.get()._field_Ident, }));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24612d59c_SubIdentExpr>>()) {
			_case_begin_212eb2893:;
			{
				jule::Ptr<_24612d59c_SubIdentExpr> _433317_e = _432429_expr.operator jule::Ptr<_24612d59c_SubIdentExpr>();;
				if ((!(_246d8c8b0_pushSubIdentFromExpr(_433317_e.get()._field_Expr.get()._field_Kind,_432450_t)))) {
					return false;
				};
				_432450_t.get()._field_Idents = jule::alloc_for_append(_432450_t.get()._field_Idents,1);_432450_t.get()._field_Idents.__push(jule::new_ptr<_2461261dd_IdentTypeDecl>(_2461261dd_IdentTypeDecl{._field_Token=_433317_e.get()._field_Ident, ._field_Ident=_433317_e.get()._field_Ident.get()._field_Kind, }));;
			}
		}
		else {
			_case_begin_212eb2178:;
			{
				return false;
			}
		}
		_match_end_212eb1430:;
	};
	return true;
}



inline jule::Bool _246da6863_kindUsesGenerics(jule::Any& _157622_k, jule::Slice<jule::Ptr<_246132e20_GenericDecl>>& _157640_generics) {
	{
		auto &expr = _157640_generics;
		auto it = expr.begin();
		_iter_begin_21323ecc9:;
		if (it != expr.end()) {
			jule::Ptr<_246132e20_GenericDecl> &_157712_g = *it;
			{
				if (static__246da6467_exist(_157712_g.get()._field_Ident,_157622_k)) {
					return true;
				};
			}
			_iter_next_21323ecc9:;
			++it;
			goto _iter_begin_21323ecc9;
		}
		_iter_end_21323ecc9:;
	};
	return false;
}



inline jule::Bool _246da6be8_hasDirective(jule::Slice<jule::Ptr<_2460dc858_Directive>>& _158622_directives, jule::Str _158653_tag) {
	{
		auto &expr = _158622_directives;
		auto it = expr.begin();
		_iter_begin_21324036d:;
		if (it != expr.end()) {
			jule::Ptr<_2460dc858_Directive> _158717_dr = *it;
			{
				if ((_158717_dr.get()._field_Tag.get()._field_Kind == _158653_tag)) {
					return true;
				};
			}
			_iter_next_21324036d:;
			++it;
			goto _iter_begin_21324036d;
		}
		_iter_end_21324036d:;
	};
	return false;
}



inline jule::Bool _246da6e90_canGetPtr(jule::Ptr<_246d5e398_Data>& _159519_d) {
	if (((!(_159519_d.get()._field_Lvalue)) || _246d5ec5b_IsConst(_159519_d.ptr()))) {
		return false;
	};
	{
		
		if (((_246d9329a_Fn(_159519_d.get()._field_Kind.ptr()) != nullptr) || (_246d927e9_Enum(_159519_d.get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_213242c77:;
			{
				return false;
			}
		}
		else {
			_case_begin_2132424c4:;
			{
				return true;
			}
		}
		_match_end_21324246e:;
	};
}



inline jule::Bool _246da72ae_isValidForSptrType(jule::Ptr<_246d8ee9a_TypeKind>& _160828_t) {
	jule::Ptr<_246142319_StructIns> _160913_s = _246d9350e_Struct(_160828_t.ptr());;
	if ((((_160913_s != nullptr) && (_160913_s.get()._field_Decl != nullptr)) && _160913_s.get()._field_Decl.get()._field_CppLinked)) {
		return false;
	};
	return true;
}



inline jule::Bool _246da7556_isValidForRef(jule::Ptr<_246d8ee9a_TypeKind>& _161723_t) {
	return (_246d9329a_Fn(_161723_t.ptr()) == nullptr);
}



inline jule::Bool _246da7820_isBuiltinStrConvertable(jule::Ptr<_246d8ee9a_TypeKind>& _162033_t) {
	return (((!(_246d91133_Void(_162033_t.ptr()))) && (_246d9329a_Fn(_162033_t.ptr()) == nullptr)) && (_246d93c4b_Tup(_162033_t.ptr()) == nullptr));
}



inline jule::Str _246da7a95_buildLinkPathByTokens(jule::Slice<jule::Ptr<_24496dc35_Token>>& _162427_tokens) {
	jule::Str _162513_s = _162427_tokens[0LL].get()._field_Kind;;
	{
		auto expr = _162427_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_213246e8a:;
		if (it != expr.end()) {
			jule::Ptr<_24496dc35_Token> &_162612_token = *it;
			{
				_162513_s+=jule::Str("::", 2);
				_162513_s+=_162612_token.get()._field_Kind;
			}
			_iter_next_213246e8a:;
			++it;
			goto _iter_begin_213246e8a;
		}
		_iter_end_213246e8a:;
	};
	return _162513_s;
}



inline jule::Ptr<_246d94972_Prim> _246da7e4c_buildPrimType(jule::Str _163318_kind) {
	return jule::new_ptr<_246d94972_Prim>(_246d94972_Prim{._field_Kind=_163318_kind});
}



inline jule::Ptr<_246117c3a_Struct> _246da81e4_getStructFromKind(jule::Ptr<_246d8ee9a_TypeKind> _163926_k) {
	{
		
		if ((_163926_k == nullptr)) {
			_case_begin_213248299:;
			{
				return nullptr;
			}
		}
		else if ((_246d9350e_Struct(_163926_k.ptr()) != nullptr)) {
			_case_begin_213248310:;
			{
				return _246d9350e_Struct(_163926_k.ptr()).get()._field_Decl;
			}
		}
		else if ((_246d92321_Sptr(_163926_k.ptr()) != nullptr)) {
			_case_begin_213248376:;
			{
				return _246da81e4_getStructFromKind(_246d92321_Sptr(_163926_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_246d93036_Slc(_163926_k.ptr()) != nullptr)) {
			_case_begin_2132483dc:;
			{
				return _246da81e4_getStructFromKind(_246d93036_Slc(_163926_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_246d92cc2_Arr(_163926_k.ptr()) != nullptr)) {
			_case_begin_2132486b7:;
			{
				return _246da81e4_getStructFromKind(_246d92cc2_Arr(_163926_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_246d92585_Ptr(_163926_k.ptr()) != nullptr)) {
			_case_begin_21324872d:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_213248233:;
			{
				return nullptr;
			}
		}
		_match_end_213247ebe:;
	};
}



inline jule::Bool _246da848b_isPrim(jule::Str _166211_kind) {
	return ((((((((((((((((_166211_kind == jule::Str("i8", 2)) || (_166211_kind == jule::Str("i16", 3))) || (_166211_kind == jule::Str("i32", 3))) || (_166211_kind == jule::Str("i64", 3))) || (_166211_kind == jule::Str("u8", 2))) || (_166211_kind == jule::Str("u16", 3))) || (_166211_kind == jule::Str("u32", 3))) || (_166211_kind == jule::Str("u64", 3))) || (_166211_kind == jule::Str("f32", 3))) || (_166211_kind == jule::Str("f64", 3))) || (_166211_kind == jule::Str("int", 3))) || (_166211_kind == jule::Str("uint", 4))) || (_166211_kind == jule::Str("uintptr", 7))) || (_166211_kind == jule::Str("bool", 4))) || (_166211_kind == jule::Str("str", 3))) || (_166211_kind == jule::Str("any", 3)));
}



inline void _246da8744_applyImplicitCast(jule::Ptr<_246d8ee9a_TypeKind>& _168127_dest, jule::Ptr<_246d5e398_Data>& _168149_d) {
	if (_246d90dbe_IsNil(_168149_d.get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_246d94972_Prim> _16859_destPrim = _246d920ac_Prim(_168127_dest.ptr());;
	jule::Ptr<_246d94972_Prim> _16869_prim = _246d920ac_Prim(_168149_d.get()._field_Kind.ptr());;
	if ((_16859_destPrim != nullptr)) {
		if (_246d97e1a_IsAny(_16859_destPrim.ptr())) {
			_246d8b628_applyCastKind(_168149_d,_168127_dest);
			return;;
		};
		if (((((((!(_246d90b5a_CppLinked(_168149_d.get()._field_Kind.ptr()))) && (!(_168149_d.get()._field_Kind.get()._field_Variadic))) && (!(_168149_d.get()._field_Lvalue))) && (!(_246d5ec5b_IsConst(_168149_d.ptr())))) && (_16869_prim != nullptr)) && _246ca3c5a_IsNum(_16869_prim.get()._field_Kind))) {
			_246d8b628_applyCastKind(_168149_d,_168127_dest);
		};
		return;;
	};
	if (((_246d93773_Trait(_168127_dest.ptr()) != nullptr) && (_246d93773_Trait(_168149_d.get()._field_Kind.ptr()) == nullptr))) {
		_246d8b370_applyCastKindModel(_168149_d,_168127_dest);
		return;;
	};
	if (((_246d92a5d_TypeEnum(_168127_dest.ptr()) != nullptr) && (_246d92a5d_TypeEnum(_168149_d.get()._field_Kind.ptr()) == nullptr))) {
		_246d8b370_applyCastKindModel(_168149_d,_168127_dest);
		return;;
	};
}



inline std::tuple<jule::Ptr<_246d5956e_SymbolTable>,jule::Slice<_244640d69_Log>> _246dab7ad_buildSymbols(jule::Ptr<_2460db7ad_Ast>& _1622_ast, jule::Trait<_246cdc854_Importer>& _1638_importer, jule::Ptr<_246caed87_symbolBuilder> _1662_owner) {
	jule::Ptr<_246caed87_symbolBuilder> _1713_sb = jule::new_ptr<_246caed87_symbolBuilder>(_246caed87_symbolBuilder{._field_owner=_1662_owner, ._field_importer=_1638_importer, ._field_ast=_1622_ast, });;
	_246cb3473_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1713_sb.get()._field_table,nullptr);
	};
	return std::make_tuple(nullptr,_1713_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_246ce342b_Package>,jule::Slice<_244640d69_Log>> _246dabbdc_analyzePackage(jule::Slice<jule::Ptr<_2460db7ad_Ast>>& _3024_files, jule::Trait<_246cdc854_Importer>& _3044_importer, jule::I64& _3065_flags) {
	jule::Slice<jule::Ptr<_246d5956e_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_246d5956e_SymbolTable>>::alloc(0LL, _3024_files.len());;
	{
		auto &expr = _3024_files;
		auto it = expr.begin();
		_iter_begin_2133907dc:;
		if (it != expr.end()) {
			jule::Ptr<_2460db7ad_Ast> _3317_f = *it;
			{
				jule::Ptr<_246d5956e_SymbolTable> _3418_table;;
				jule::Slice<_244640d69_Log> _3429_errors;;
				std::tie(_3418_table,_3429_errors) = _246dab7ad_buildSymbols(_3317_f,_3044_importer,nullptr);
				if ((_3429_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3429_errors);
				};
				_3213_tables = jule::alloc_for_append(_3213_tables,1);_3213_tables.__push(_3418_table);;
			}
			_iter_next_2133907dc:;
			++it;
			goto _iter_begin_2133907dc;
		}
		_iter_end_2133907dc:;
	};
	jule::Ptr<_246ce861d_Sema> _4113_sema = jule::new_ptr<_246ce861d_Sema>(_246ce861d_Sema{._field_flags=_3065_flags});;
	_246d13391_check(_4113_sema, _3213_tables);
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4113_sema.get()._field_errors);
	};
	jule::Ptr<_246ce342b_Package> _4913_pkg = jule::new_ptr<_246ce342b_Package>(_246ce342b_Package{._field_Files=_4113_sema.get()._field_files});;
	return std::make_tuple(_4913_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_246ce342b_Package>,jule::Slice<_244640d69_Log>> _246dac0c7_AnalyzePackage(jule::Slice<jule::Ptr<_2460db7ad_Ast>> _7323_files, jule::Trait<_246cdc854_Importer> _7342_importer, jule::I64 _7362_flags) {
	if ((_7323_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_246ce342b_Package> _7714_package;;
	jule::Slice<_244640d69_Log> _7727_logs;;
	std::tie(_7714_package,_7727_logs) = _246dabbdc_analyzePackage(_7323_files,_7342_importer,_7362_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline jule::Ptr<_246cabb42_FnIns> _246db8204_findBuiltinFn(jule::Str _2318_ident) {
	{
		auto &_match_expr{ _2318_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_21339a440:;
			{
				static jule::Ptr<_246cabb42_FnIns> _2620_f = jule::new_ptr<_246cabb42_FnIns>(_246cabb42_FnIns{._field_caller=jule::Fn<jule::Ptr<_246d5e398_Data>(jule::Ptr<_246d60e16_Eval>&,jule::Ptr<_24612e12a_FnCallExpr>&,jule::Ptr<_246d5e398_Data>&)>(_246e4b62d_builtinCallerOut), });;
				return _2620_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_21339a4a6:;
			{
				static jule::Ptr<_246cabb42_FnIns> _2920_f = jule::new_ptr<_246cabb42_FnIns>(_246cabb42_FnIns{._field_caller=jule::Fn<jule::Ptr<_246d5e398_Data>(jule::Ptr<_246d60e16_Eval>&,jule::Ptr<_24612e12a_FnCallExpr>&,jule::Ptr<_246d5e398_Data>&)>(_246e4ba18_builtinCallerOutln), });;
				return _2920_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_21339a6e8:;
			{
				static jule::Ptr<_246cabb42_FnIns> _3220_f = jule::new_ptr<_246cabb42_FnIns>(_246cabb42_FnIns{._field_caller=jule::Fn<jule::Ptr<_246d5e398_Data>(jule::Ptr<_246d60e16_Eval>&,jule::Ptr<_24612e12a_FnCallExpr>&,jule::Ptr<_246d5e398_Data>&)>(_246e4be03_builtinCallerNew), });;
				return _3220_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_21339a75e:;
			{
				static jule::Ptr<_246cabb42_FnIns> _3520_f = jule::new_ptr<_246cabb42_FnIns>(_246cabb42_FnIns{._field_caller=jule::Fn<jule::Ptr<_246d5e398_Data>(jule::Ptr<_246d60e16_Eval>&,jule::Ptr<_24612e12a_FnCallExpr>&,jule::Ptr<_246d5e398_Data>&)>(_246e4c2dd_builtinCallerPanic), });;
				return _3520_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_21339a7c5:;
			{
				static jule::Ptr<_246cabb42_FnIns> _3820_f = jule::new_ptr<_246cabb42_FnIns>(_246cabb42_FnIns{._field_caller=jule::Fn<jule::Ptr<_246d5e398_Data>(jule::Ptr<_246d60e16_Eval>&,jule::Ptr<_24612e12a_FnCallExpr>&,jule::Ptr<_246d5e398_Data>&)>(_246e4c909_builtinCallerMake), });;
				return _3820_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_21339a83b:;
			{
				static jule::Ptr<_246cabb42_FnIns> _4120_f = jule::new_ptr<_246cabb42_FnIns>(_246cabb42_FnIns{._field_caller=jule::Fn<jule::Ptr<_246d5e398_Data>(jule::Ptr<_246d60e16_Eval>&,jule::Ptr<_24612e12a_FnCallExpr>&,jule::Ptr<_246d5e398_Data>&)>(_246e4cce4_builtinCallerAppend), });;
				return _4120_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_21339a8a2:;
			{
				static jule::Ptr<_246cabb42_FnIns> _4420_f = jule::new_ptr<_246cabb42_FnIns>(_246cabb42_FnIns{._field_caller=jule::Fn<jule::Ptr<_246d5e398_Data>(jule::Ptr<_246d60e16_Eval>&,jule::Ptr<_24612e12a_FnCallExpr>&,jule::Ptr<_246d5e398_Data>&)>(_246e4dae7_builtinCallerCopy), });;
				return _4420_f;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_21339a929:;
			{
				static jule::Ptr<_246cabb42_FnIns> _4720_f = jule::new_ptr<_246cabb42_FnIns>(_246cabb42_FnIns{._field_caller=jule::Fn<jule::Ptr<_246d5e398_Data>(jule::Ptr<_246d60e16_Eval>&,jule::Ptr<_24612e12a_FnCallExpr>&,jule::Ptr<_246d5e398_Data>&)>(_246e4ece6_builtinCallerLen), });;
				return _4720_f;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_21339a9d4:;
			{
				static jule::Ptr<_246cabb42_FnIns> _5020_f = jule::new_ptr<_246cabb42_FnIns>(_246cabb42_FnIns{._field_caller=jule::Fn<jule::Ptr<_246d5e398_Data>(jule::Ptr<_246d60e16_Eval>&,jule::Ptr<_24612e12a_FnCallExpr>&,jule::Ptr<_246d5e398_Data>&)>(_246e50863_builtinCallerCap), });;
				return _5020_f;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_21339aa4a:;
			{
				static jule::Ptr<_246cabb42_FnIns> _5320_f = jule::new_ptr<_246cabb42_FnIns>(_246cabb42_FnIns{._field_caller=jule::Fn<jule::Ptr<_246d5e398_Data>(jule::Ptr<_246d60e16_Eval>&,jule::Ptr<_24612e12a_FnCallExpr>&,jule::Ptr<_246d5e398_Data>&)>(_246e511d2_builtinCallerDelete), });;
				return _5320_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_21339aab1:;
			{
				static jule::Ptr<_246cabb42_FnIns> _5620_f = jule::new_ptr<_246cabb42_FnIns>(_246cabb42_FnIns{._field_caller=jule::Fn<jule::Ptr<_246d5e398_Data>(jule::Ptr<_246d60e16_Eval>&,jule::Ptr<_24612e12a_FnCallExpr>&,jule::Ptr<_246d5e398_Data>&)>(_246e515bc_builtinCallerClone), });;
				return _5620_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_21339ab27:;
			{
				static jule::Ptr<_246cabb42_FnIns> _5920_f = jule::new_ptr<_246cabb42_FnIns>(_246cabb42_FnIns{._field_caller=jule::Fn<jule::Ptr<_246d5e398_Data>(jule::Ptr<_246d60e16_Eval>&,jule::Ptr<_24612e12a_FnCallExpr>&,jule::Ptr<_246d5e398_Data>&)>(_246e51b83_builtinCallerAssert), });;
				return _5920_f;
			}
		}
		else {
			_case_begin_21339a242:;
			{
				return nullptr;
			}
		}
		_match_end_21339a176:;
	};
}



inline jule::Ptr<_246d8e2a7_TypeAlias> _246dba4c0_findBuiltinTypeAlias(jule::Str _6625_ident) {
	{
		auto &_match_expr{ _6625_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_2133a35e1:;
			{
				static jule::Ptr<_246d8e2a7_TypeAlias> _6920_t = jule::new_ptr<_246d8e2a7_TypeAlias>(_246d8e2a7_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_246d94103_TypeSymbol>(_246d94103_TypeSymbol{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("u8", 2)), 6)})}), });;
				return _6920_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_2133a3657:;
			{
				static jule::Ptr<_246d8e2a7_TypeAlias> _7920_t = jule::new_ptr<_246d8e2a7_TypeAlias>(_246d8e2a7_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_246d94103_TypeSymbol>(_246d94103_TypeSymbol{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("i32", 3)), 6)})}), });;
				return _7920_t;
			}
		}
		else {
			_case_begin_2133a3547:;
			{
				return nullptr;
			}
		}
		_match_end_2133a2c94:;
	};
}



inline jule::Any _246dbb081_findBuiltinDef(jule::Str _9319_ident) {
	jule::Ptr<_246cabb42_FnIns> _9413_f = _246db8204_findBuiltinFn(_9319_ident);;
	if ((_9413_f != nullptr)) {
		return jule::Any(_9413_f);
	};
	jule::Ptr<_246d8e2a7_TypeAlias> _9813_ta = _246dba4c0_findBuiltinTypeAlias(_9319_ident);;
	if ((_9813_ta != nullptr)) {
		return jule::Any(_9813_ta);
	};
	return nullptr;
}



inline jule::Any _246dbba98_findBuiltinDefStdDebug(jule::Str _10527_ident) {
	{
		auto &_match_expr{ _10527_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_2133a7293:;
			{
				static jule::Ptr<_246cabb42_FnIns> _10820_f = jule::new_ptr<_246cabb42_FnIns>(_246cabb42_FnIns{._field_caller=jule::Fn<jule::Ptr<_246d5e398_Data>(jule::Ptr<_246d60e16_Eval>&,jule::Ptr<_24612e12a_FnCallExpr>&,jule::Ptr<_246d5e398_Data>&)>(_246e535be_builtinCallerStdDebugOut), });;
				return jule::Any(_10820_f);
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_2133a7309:;
			{
				static jule::Ptr<_246cabb42_FnIns> _11120_f = jule::new_ptr<_246cabb42_FnIns>(_246cabb42_FnIns{._field_caller=jule::Fn<jule::Ptr<_246d5e398_Data>(jule::Ptr<_246d60e16_Eval>&,jule::Ptr<_24612e12a_FnCallExpr>&,jule::Ptr<_246d5e398_Data>&)>(_246e539a9_builtinCallerStdDebugOutln), });;
				return jule::Any(_11120_f);
			}
		}
		else {
			_case_begin_2133a722c:;
			{
				return nullptr;
			}
		}
		_match_end_2133a6ccb:;
	};
}



inline jule::Any _246dbe837_findBuiltinDefStdMem(jule::Str _11825_ident) {
	{
		auto &_match_expr{ _11825_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_2133a8dbb:;
			{
				static jule::Ptr<_246cabb42_FnIns> _12120_f = jule::new_ptr<_246cabb42_FnIns>(_246cabb42_FnIns{._field_caller=jule::Fn<jule::Ptr<_246d5e398_Data>(jule::Ptr<_246d60e16_Eval>&,jule::Ptr<_24612e12a_FnCallExpr>&,jule::Ptr<_246d5e398_Data>&)>(_246e51ee6_builtinCallerStdMemSizeOf), });;
				return jule::Any(_12120_f);
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_2133a8e32:;
			{
				static jule::Ptr<_246cabb42_FnIns> _12420_f = jule::new_ptr<_246cabb42_FnIns>(_246cabb42_FnIns{._field_caller=jule::Fn<jule::Ptr<_246d5e398_Data>(jule::Ptr<_246d60e16_Eval>&,jule::Ptr<_24612e12a_FnCallExpr>&,jule::Ptr<_246d5e398_Data>&)>(_246e52414_builtinCallerStdMemAlignOf), });;
				return jule::Any(_12420_f);
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_2133a8e98:;
			{
				static jule::Ptr<_246cabb42_FnIns> _12720_f = jule::new_ptr<_246cabb42_FnIns>(_246cabb42_FnIns{._field_caller=jule::Fn<jule::Ptr<_246d5e398_Data>(jule::Ptr<_246d60e16_Eval>&,jule::Ptr<_24612e12a_FnCallExpr>&,jule::Ptr<_246d5e398_Data>&)>(_246e52832_builtinCallerStdMemFree), });;
				return jule::Any(_12720_f);
			}
		}
		else {
			_case_begin_2133a7705:;
			{
				return nullptr;
			}
		}
		_match_end_2133a8409:;
	};
}



inline jule::Any _246dbda23_findBuiltinDefStdJuleIntegrated(jule::Str _13436_ident) {
	{
		auto &_match_expr{ _13436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_2133ab451:;
			{
				static jule::Ptr<_246cabb42_FnIns> _13720_f = jule::new_ptr<_246cabb42_FnIns>(_246cabb42_FnIns{._field_caller=jule::Fn<jule::Ptr<_246d5e398_Data>(jule::Ptr<_246d60e16_Eval>&,jule::Ptr<_24612e12a_FnCallExpr>&,jule::Ptr<_246d5e398_Data>&)>(_246e52c61_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_13720_f);
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_2133ab4b7:;
			{
				static jule::Ptr<_246cabb42_FnIns> _14020_f = jule::new_ptr<_246cabb42_FnIns>(_246cabb42_FnIns{._field_Decl=jule::new_ptr<_246cab768_Fn>(_246cab768_Fn{._field_Generics=jule::Slice<jule::Ptr<_246132e20_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_246d5e398_Data>(jule::Ptr<_246d60e16_Eval>&,jule::Ptr<_24612e12a_FnCallExpr>&,jule::Ptr<_246d5e398_Data>&)>(_246e5317e_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_14020_f);
			}
		}
		else {
			_case_begin_2133a94c6:;
			{
				return nullptr;
			}
		}
		_match_end_2133ab30d:;
	};
}



inline jule::Any _246dbdbbb_findPackageBuiltinDef(jule::Str _15226_link_path, jule::Str _15242_ident) {
	{
		auto &_match_expr{ _15226_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_2133ad662:;
			{
				return jule::Any(_246dbba98_findBuiltinDefStdDebug(_15242_ident));
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_2133ad6c8:;
			{
				return jule::Any(_246dbe837_findBuiltinDefStdMem(_15242_ident));
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_2133ad73e:;
			{
				return jule::Any(_246dbda23_findBuiltinDefStdJuleIntegrated(_15242_ident));
			}
		}
		else {
			_case_begin_2133ad3dc:;
			{
				return nullptr;
			}
		}
		_match_end_2133ab8b3:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246e4a693_builtinCallerCommonPlain(jule::Ptr<_246d60e16_Eval>& _16534_e, jule::Ptr<_24612e12a_FnCallExpr>& _16549_fc, jule::Ptr<_246d5e398_Data>& _16571_d) {
	jule::Ptr<_246cabb42_FnIns> _16613_f = _246d9329a_Fn(_16571_d.get()._field_Kind.ptr());;
	_246d50d7e_fnCallArgChecker _16813_fcac = _246d50d7e_fnCallArgChecker{._field_e=_16534_e, ._field_args=_16549_fc.get()._field_Args, ._field_errorToken=_16549_fc.get()._field_Token, ._field_f=_16613_f, ._field_dynamicAnnotation=false, };;
	if ((!(_246d53249_check(&_16813_fcac)))) {
		return nullptr;
	};
	jule::Ptr<_246ca6895_FnCallExprModel> _17913_model = jule::new_ptr<_246ca6895_FnCallExprModel>(_246ca6895_FnCallExprModel{._field_Token=_16549_fc.get()._field_Token, ._field_Func=_16613_f, ._field_Expr=_16571_d.get()._field_Model, ._field_Args=_16813_fcac._field_argModels, });;
	if ((_16613_f.get()._field_Result == nullptr)) {
		_16571_d=_246d8b826_buildVoidData();
	} else {
		_16571_d=jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=_16613_f.get()._field_Result, });
	};
	_16571_d.get()._field_Model=static_cast<jule::Any>(_17913_model);
	return _16571_d;
}



inline jule::Ptr<_246d5e398_Data> _246e4aa17_builtinCallerCommon(jule::Ptr<_246d60e16_Eval>& _19829_e, jule::Ptr<_24612e12a_FnCallExpr>& _19844_fc, jule::Ptr<_246d5e398_Data>& _19866_d) {
	return _246e4a693_builtinCallerCommonPlain(_19829_e,_19844_fc,_19866_d);
}



inline jule::Ptr<_246d5e398_Data> _246e4ae02_builtinCallerCommonMut(jule::Ptr<_246d60e16_Eval>& _20232_e, jule::Ptr<_24612e12a_FnCallExpr>& _20247_fc, jule::Ptr<_246d5e398_Data>& _20269_d) {
	if ((!(_20269_d.get()._field_Mutable))) {
		_246d61422_pushErr(_20232_e.ptr(), _20247_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _246e4aa17_builtinCallerCommon(_20232_e,_20247_fc,_20269_d);
}



inline jule::Ptr<_246d5e398_Data> _246e4b243_builtinCallerError(jule::Ptr<_246d60e16_Eval>& _20928_e, jule::Ptr<_24612e12a_FnCallExpr>& _20943_fc) {
	if ((_20943_fc.get()._field_Args.len() < 1LL)) {
		_246d61422_pushErr(_20928_e.ptr(), _20943_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	};
	if ((_20943_fc.get()._field_Args.len() > 1LL)) {
		_246d61422_pushErr(_20928_e.ptr(), _20943_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_246d5e398_Data> _21713_expr = _246d81695_evalExpr(_20928_e, _20943_fc.get()._field_Args[0LL]);;
	if ((_21713_expr == nullptr)) {
		return nullptr;
	};
	if (_246d5e783_IsNil(_21713_expr.ptr())) {
		_246d61422_pushErr(_20928_e.ptr(), _20943_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_246d5e398_Data> _22613_d = _246d8b826_buildVoidData();;
	_22613_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246caa349_BuiltinErrorCallExprModel>(_246caa349_BuiltinErrorCallExprModel{._field_Err=_21713_expr.get()._field_Model}));
	return _22613_d;
}



inline jule::Ptr<_246d5e398_Data> _246e4b62d_builtinCallerOut(jule::Ptr<_246d60e16_Eval>& _23426_e, jule::Ptr<_24612e12a_FnCallExpr>& _23441_fc, jule::Ptr<_246d5e398_Data>& ) {
	if ((_23441_fc.get()._field_Args.len() < 1LL)) {
		_246d61422_pushErr(_23426_e.ptr(), _23441_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	};
	if ((_23441_fc.get()._field_Args.len() > 1LL)) {
		_246d61422_pushErr(_23426_e.ptr(), _23441_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_246d5e398_Data> _24313_expr = _246d81695_evalExpr(_23426_e, _23441_fc.get()._field_Args[0LL]);;
	if ((_24313_expr == nullptr)) {
		return nullptr;
	};
	if ((!(_246da7820_isBuiltinStrConvertable(_24313_expr.get()._field_Kind)))) {
		_246d61422_pushErr(_23426_e.ptr(), _23441_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_246d5e398_Data> _25313_d = _246d8b826_buildVoidData();;
	_25313_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca87a9_BuiltinOutCallExprModel>(_246ca87a9_BuiltinOutCallExprModel{._field_Expr=_24313_expr.get()._field_Model, }));
	return _25313_d;
}



inline jule::Ptr<_246d5e398_Data> _246e4ba18_builtinCallerOutln(jule::Ptr<_246d60e16_Eval>& _25828_e, jule::Ptr<_24612e12a_FnCallExpr>& _25843_fc, jule::Ptr<_246d5e398_Data>& _25865_d) {
	_25865_d=_246e4b62d_builtinCallerOut(_25828_e,_25843_fc,_25865_d);
	if ((_25865_d == nullptr)) {
		return nullptr;
	};
	_25865_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca8996_BuiltinOutlnCallExprModel>(_246ca8996_BuiltinOutlnCallExprModel{._field_Expr=_25865_d.get()._field_Model.operator jule::Ptr<_246ca87a9_BuiltinOutCallExprModel>().get()._field_Expr, }));
	return _25865_d;
}



inline jule::Ptr<_246d5e398_Data> _246e4be03_builtinCallerNew(jule::Ptr<_246d60e16_Eval>& _27026_e, jule::Ptr<_24612e12a_FnCallExpr>& _27041_fc, jule::Ptr<_246d5e398_Data>& _27063_d) {
	if ((_27041_fc.get()._field_Args.len() < 1LL)) {
		_246d61422_pushErr(_27026_e.ptr(), _27041_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	};
	if ((_27041_fc.get()._field_Args.len() > 2LL)) {
		_246d61422_pushErr(_27026_e.ptr(), _27041_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_246d5e398_Data> _27913_t = _246d81079_evalExprKind(_27026_e, _27041_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_27913_t == nullptr)) {
		return nullptr;
	};
	if ((!(_27913_t.get()._field_Decl))) {
		_246d61422_pushErr(_27026_e.ptr(), _27041_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((!(_246da72ae_isValidForSptrType(_27913_t.get()._field_Kind)))) {
		jule::Ptr<_246142319_StructIns> _29017_s = _246d9350e_Struct(_27913_t.get()._field_Kind.ptr());;
		if ((((_29017_s != nullptr) && (_29017_s.get()._field_Decl != nullptr)) && _29017_s.get()._field_Decl.get()._field_CppLinked)) {
			_246d61422_pushErr(_27026_e.ptr(), _27041_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	_27063_d.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(jule::new_ptr<_246d98206_Sptr>(_246d98206_Sptr{._field_Elem=_27913_t.get()._field_Kind}), 7)});
	if ((_27041_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_246d8ee9a_TypeKind> _30417_old = _27026_e.get()._field_prefix;;
		_27026_e.get()._field_prefix=_27913_t.get()._field_Kind;
		jule::Ptr<_246d5e398_Data> _30717_init = _246d81695_evalExpr(_27026_e, _27041_fc.get()._field_Args[1LL]);;
		_27026_e.get()._field_prefix=_30417_old;
		if ((_30717_init != nullptr)) {
			jule::Ptr<_24496dc35_Token> _31221_token = _27041_fc.get()._field_Args[1LL].get()._field_Token;;
			;
			_246d05e00_checkValidityForInitExpr(_27026_e.get()._field_s, (!(_27026_e.get()._field_immutable)),false,_27913_t.get()._field_Kind,_30717_init,_31221_token);
			_246d031b6_checkAssignType(_27026_e.get()._field_s, false,_27913_t.get()._field_Kind,_30717_init,_31221_token);
			_27063_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca8d70_BuiltinNewCallExprModel>(_246ca8d70_BuiltinNewCallExprModel{._field_Kind=_27913_t.get()._field_Kind, ._field_Init=_30717_init.get()._field_Model}));
		};
	} else {
		_27063_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca8d70_BuiltinNewCallExprModel>(_246ca8d70_BuiltinNewCallExprModel{._field_Kind=_27913_t.get()._field_Kind, }));
	};
	return _27063_d;
}



inline jule::Ptr<_246d5e398_Data> _246e4c2dd_builtinCallerPanic(jule::Ptr<_246d60e16_Eval>& _33228_e, jule::Ptr<_24612e12a_FnCallExpr>& _33243_fc, jule::Ptr<_246d5e398_Data>& ) {
	if ((_33243_fc.get()._field_Args.len() < 1LL)) {
		_246d61422_pushErr(_33228_e.ptr(), _33243_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	};
	if ((_33243_fc.get()._field_Args.len() > 1LL)) {
		_246d61422_pushErr(_33228_e.ptr(), _33243_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_246d5e398_Data> _34113_expr = _246d81695_evalExpr(_33228_e, _33243_fc.get()._field_Args[0LL]);;
	if ((_34113_expr == nullptr)) {
		return nullptr;
	};
	if (((_246d920ac_Prim(_34113_expr.get()._field_Kind.ptr()) == nullptr) || (!(_246d97ba6_IsStr(_246d920ac_Prim(_34113_expr.get()._field_Kind.ptr()).ptr()))))) {
		_246d61422_pushErr(_33228_e.ptr(), _33243_fc.get()._field_Token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_246d5e398_Data> _35013_d = _246d8b826_buildVoidData();;
	_35013_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca905c_BuiltinPanicCallExprModel>(_246ca905c_BuiltinPanicCallExprModel{._field_Token=_33243_fc.get()._field_Token, ._field_Expr=_34113_expr.get()._field_Model}));
	return _35013_d;
}



inline jule::Ptr<_246d5e398_Data> _246e4c909_builtinCallerMake(jule::Ptr<_246d60e16_Eval>& _35827_e, jule::Ptr<_24612e12a_FnCallExpr>& _35842_fc, jule::Ptr<_246d5e398_Data>& _35864_d) {
	if ((_35842_fc.get()._field_Args.len() < 2LL)) {
		if ((_35842_fc.get()._field_Args.len() == 1LL)) {
			_246d61422_pushErr(_35827_e.ptr(), _35842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		};
		_246d61422_pushErr(_35827_e.ptr(), _35842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	};
	jule::Ptr<_246d5e398_Data> _36813_t = _246d81079_evalExprKind(_35827_e, _35842_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_36813_t == nullptr)) {
		return nullptr;
	};
	if ((!(_36813_t.get()._field_Decl))) {
		_246d61422_pushErr(_35827_e.ptr(), _35842_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_35842_fc.get()._field_Args.len() > 3LL)) {
		_246d61422_pushErr(_35827_e.ptr(), _35842_fc.get()._field_Args[3LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
		return nullptr;
	};
	_35864_d.get()._field_Kind=_36813_t.get()._field_Kind;
	jule::Ptr<_246d5e398_Data> _38413_lenExpr = _246d81695_evalExpr(_246d028ad_evalp(_35827_e.get()._field_s, _35827_e.get()._field_lookup,_36813_t.get()._field_Kind), _35842_fc.get()._field_Args[1LL]);;
	if ((_38413_lenExpr == nullptr)) {
		return nullptr;
	};
	_246d6e870_checkIntegerIndexingByData(_35827_e.ptr(), _38413_lenExpr,_35842_fc.get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_246ca9436_BuiltinMakeCallExprModel> _39113_model = jule::new_ptr<_246ca9436_BuiltinMakeCallExprModel>(_246ca9436_BuiltinMakeCallExprModel{._field_Kind=_36813_t.get()._field_Kind, ._field_Len=_38413_lenExpr.get()._field_Model, });;
	_35864_d.get()._field_Model=static_cast<jule::Any>(_39113_model);
	if ((_35842_fc.get()._field_Args.len() == 3LL)) {
		jule::Ptr<_246d5e398_Data> _39717_capExpr = _246d81695_evalExpr(_246d028ad_evalp(_35827_e.get()._field_s, _35827_e.get()._field_lookup,_36813_t.get()._field_Kind), _35842_fc.get()._field_Args[2LL]);;
		if ((_39717_capExpr == nullptr)) {
			return _35864_d;
		};
		_246d6e870_checkIntegerIndexingByData(_35827_e.ptr(), _39717_capExpr,_35842_fc.get()._field_Args[2LL].get()._field_Token);
		_39113_model.get()._field_Cap=_39717_capExpr.get()._field_Model;
	};
	return _35864_d;
}



inline jule::Ptr<_246d5e398_Data> _246e4cce4_builtinCallerAppend(jule::Ptr<_246d60e16_Eval>& _40729_e, jule::Ptr<_24612e12a_FnCallExpr>& _40744_fc, jule::Ptr<_246d5e398_Data>& _40766_d) {
	if ((_40744_fc.get()._field_Args.len() < 2LL)) {
		if ((_40744_fc.get()._field_Args.len() == 1LL)) {
			_246d61422_pushErr(_40729_e.ptr(), _40744_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_246d61422_pushErr(_40729_e.ptr(), _40744_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	jule::Ptr<_246d5e398_Data> _41713_t = _246d81695_evalExpr(_40729_e, _40744_fc.get()._field_Args[0LL]);;
	if ((_41713_t == nullptr)) {
		return nullptr;
	};
	if ((_246d93036_Slc(_41713_t.get()._field_Kind.ptr()) == nullptr)) {
		_246d61422_pushErr(_40729_e.ptr(), _40744_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_246cabb42_FnIns> _42713_f = jule::new_ptr<_246cabb42_FnIns>(_246cabb42_FnIns{._field_Params=jule::Slice<jule::Ptr<_246cab955_ParamIns>>::make({jule::new_ptr<_246cab955_ParamIns>(_246cab955_ParamIns{._field_Decl=jule::new_ptr<_246cab57b_Param>(_246cab57b_Param{._field_Mutable=true, }), ._field_Kind=_41713_t.get()._field_Kind}),jule::new_ptr<_246cab955_ParamIns>(_246cab955_ParamIns{._field_Decl=jule::new_ptr<_246cab57b_Param>(_246cab57b_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_246d93036_Slc(_41713_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_41713_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_246d5e398_Data>(jule::Ptr<_246d60e16_Eval>&,jule::Ptr<_24612e12a_FnCallExpr>&,jule::Ptr<_246d5e398_Data>&)>(_246e4a693_builtinCallerCommonPlain), });;
	_40766_d.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_42713_f, 1)});
	_40766_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca81e3_CommonIdentExprModel>(_246ca81e3_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}));
	_40766_d=_246e4a693_builtinCallerCommonPlain(_40729_e,_40744_fc,_40766_d);
	if ((_40766_d != nullptr)) {
		jule::Ptr<_246ca6895_FnCallExprModel> _45517_model = _40766_d.get()._field_Model.operator jule::Ptr<_246ca6895_FnCallExprModel>();;
		_40766_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca9623_BuiltinAppendCallExprModel>(_246ca9623_BuiltinAppendCallExprModel{._field_Dest=_45517_model.get()._field_Args[0LL], ._field_Elements=_45517_model.get()._field_Args[1LL]}));
	};
	return _40766_d;
}



inline jule::Ptr<_246d5e398_Data> _246e4d278_callerCopySlice(jule::Ptr<_246d5e398_Data>& _46425_dest, jule::Ptr<_246d60e16_Eval>& _46443_e, jule::Ptr<_24612e12a_FnCallExpr>& _46458_fc, jule::Ptr<_246d5e398_Data>& _46480_d) {
	if ((!(_46425_dest.get()._field_Mutable))) {
		_246d61422_pushErr(_46443_e.ptr(), _46458_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_246d5e398_Data> _46913_src = _246d81695_evalExpr(_46443_e, _46458_fc.get()._field_Args[1LL]);;
	if ((_46913_src == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_246d98b63_Slc> _47313_slc = _246d93036_Slc(_46913_src.get()._field_Kind.ptr());;
	if ((_47313_slc != nullptr)) {
		if (((!(_46913_src.get()._field_Mutable)) && _246d91397_Mutable(_47313_slc.get()._field_Elem.ptr()))) {
			_246d61422_pushErr(_46443_e.ptr(), _46458_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
		if ((!(_246d906a4_Equals(_46425_dest.get()._field_Kind, _46913_src.get()._field_Kind)))) {
			_246d61422_pushErr(_46443_e.ptr(), _46458_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_46425_dest.get()._field_Kind.ptr())),jule::Any(_246d90396_Str(_46913_src.get()._field_Kind.ptr()))}));
		};
	} else {
		jule::Ptr<_246d94972_Prim> _48313_destPrim = _246d920ac_Prim(_246d93036_Slc(_46425_dest.get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_246d94972_Prim> _48413_prim = _246d920ac_Prim(_46913_src.get()._field_Kind.ptr());;
		if (((((_48313_destPrim == nullptr) || (_48413_prim == nullptr)) || (!(_246d97ba6_IsStr(_48413_prim.ptr())))) || (!(_246d9627b_IsU8(_48313_destPrim.ptr()))))) {
			_246d61422_pushErr(_46443_e.ptr(), _46458_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_46425_dest.get()._field_Kind.ptr())),jule::Any(_246d90396_Str(_46913_src.get()._field_Kind.ptr()))}));
		};
	};
	_46480_d.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("int", 3)), 6)});
	_46480_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246caa15c_BuiltinCopyCallExprModel>(_246caa15c_BuiltinCopyCallExprModel{._field_Dest=_46425_dest, ._field_Src=_46913_src}));
	return _46480_d;
}



inline jule::Ptr<_246d5e398_Data> _246e4d70c_callerCopyStr(jule::Ptr<_246d5e398_Data>& _49823_dest, jule::Ptr<_246d60e16_Eval>& _49841_e, jule::Ptr<_24612e12a_FnCallExpr>& _49856_fc, jule::Ptr<_246d5e398_Data>& _49878_d) {
	if ((!(_49823_dest.get()._field_Mutable))) {
		_246d61422_pushErr(_49841_e.ptr(), _49856_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_246d5e398_Data> _50313_src = _246d81695_evalExpr(_49841_e, _49856_fc.get()._field_Args[1LL]);;
	if ((_50313_src == nullptr)) {
		return nullptr;
	};
	{
		
		if ((_246d920ac_Prim(_50313_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2134027a5:;
			{
				if (_246d97ba6_IsStr(_246d920ac_Prim(_50313_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_246d93036_Slc(_50313_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_21340281b:;
			{
				jule::Ptr<_246d98b63_Slc> _51317_slc = _246d93036_Slc(_50313_src.get()._field_Kind.ptr());;
				if (((_246d920ac_Prim(_51317_slc.get()._field_Elem.ptr()) != nullptr) && _246d9627b_IsU8(_246d920ac_Prim(_51317_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_213402ab3:;
	};
	_246d61422_pushErr(_49841_e.ptr(), _49856_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_49823_dest.get()._field_Kind.ptr())),jule::Any(_246d90396_Str(_50313_src.get()._field_Kind.ptr()))}));
	_julec_label_end:;
	_49878_d.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("int", 3)), 6)});
	_49878_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246caa15c_BuiltinCopyCallExprModel>(_246caa15c_BuiltinCopyCallExprModel{._field_Dest=_49823_dest, ._field_Src=_50313_src}));
	return _49878_d;
}



inline jule::Ptr<_246d5e398_Data> _246e4dae7_builtinCallerCopy(jule::Ptr<_246d60e16_Eval>& _52827_e, jule::Ptr<_24612e12a_FnCallExpr>& _52842_fc, jule::Ptr<_246d5e398_Data>& _52864_d) {
	if ((_52842_fc.get()._field_Args.len() < 2LL)) {
		if ((_52842_fc.get()._field_Args.len() == 1LL)) {
			_246d61422_pushErr(_52827_e.ptr(), _52842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_246d61422_pushErr(_52827_e.ptr(), _52842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	if ((_52842_fc.get()._field_Args.len() > 2LL)) {
		_246d61422_pushErr(_52827_e.ptr(), _52842_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_246d5e398_Data> _54113_dest = _246d81695_evalExpr(_52827_e, _52842_fc.get()._field_Args[0LL]);;
	{
		
		if ((_54113_dest == nullptr)) {
			_case_begin_21340c958:;
			{
				return nullptr;
			}
		}
		else if ((_246d93036_Slc(_54113_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_21340c9be:;
			{
				return _246e4d278_callerCopySlice(_54113_dest,_52827_e,_52842_fc,_52864_d);
			}
		}
		else if (((_246d920ac_Prim(_54113_dest.get()._field_Kind.ptr()) != nullptr) && _246d97ba6_IsStr(_246d920ac_Prim(_54113_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_21340ca35:;
			{
				return _246e4d70c_callerCopyStr(_54113_dest,_52827_e,_52842_fc,_52864_d);
			}
		}
		else {
			_case_begin_21340c89d:;
			{
				_246d61422_pushErr(_52827_e.ptr(), _52842_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_21340c848:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246e4de38_callerLenSlice(jule::Ptr<_246d5e398_Data>& _55524_expr, jule::Ptr<_246d5e398_Data>& _55542_d) {
	_55542_d.get()._field_Kind=_246d585e5_lenKind();
	_55542_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca9810_BuiltinLenCallExprModel>(_246ca9810_BuiltinLenCallExprModel{._field_Expr=_55524_expr}));
	return _55542_d;
}



inline jule::Ptr<_246d5e398_Data> _246e4e279_callerLenMap(jule::Ptr<_246d5e398_Data>& _56322_expr, jule::Ptr<_246d5e398_Data>& _56340_d) {
	_56340_d.get()._field_Kind=_246d585e5_lenKind();
	_56340_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca9810_BuiltinLenCallExprModel>(_246ca9810_BuiltinLenCallExprModel{._field_Expr=_56322_expr}));
	return _56340_d;
}



inline jule::Ptr<_246d5e398_Data> _246e4e5ba_callerLenArr(jule::Ptr<_246d5e398_Data>& _57122_expr, jule::Ptr<_246d5e398_Data>& _57140_d) {
	_57140_d.get()._field_Kind=_246d585e5_lenKind();
	_57140_d.get()._field_Constant=static__246204db0_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_246d92cc2_Arr(_57122_expr.get()._field_Kind.ptr()).get()._field_N)));
	_57140_d.get()._field_Model=static_cast<jule::Any>(_57140_d.get()._field_Constant);
	return _57140_d;
}



inline jule::Ptr<_246d5e398_Data> _246e4e90b_callerLenStr(jule::Ptr<_246d5e398_Data>& _57822_expr, jule::Ptr<_246d5e398_Data>& _57840_d) {
	_57840_d.get()._field_Kind=_246d585e5_lenKind();
	if (_246d5ec5b_IsConst(_57822_expr.ptr())) {
		_57840_d.get()._field_Constant=static__246204db0_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_246245de0_ReadStr(_57822_expr.get()._field_Constant.ptr()).len())));
		_57840_d.get()._field_Model=static_cast<jule::Any>(_57840_d.get()._field_Constant);
	} else {
		_57840_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca9810_BuiltinLenCallExprModel>(_246ca9810_BuiltinLenCallExprModel{._field_Expr=_57822_expr}));
	};
	return _57840_d;
}



inline jule::Ptr<_246d5e398_Data> _246e4ece6_builtinCallerLen(jule::Ptr<_246d60e16_Eval>& _59126_e, jule::Ptr<_24612e12a_FnCallExpr>& _59141_fc, jule::Ptr<_246d5e398_Data>& _59163_d) {
	if ((_59141_fc.get()._field_Args.len() < 1LL)) {
		_246d61422_pushErr(_59126_e.ptr(), _59141_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3))}));
		return nullptr;
	};
	if ((_59141_fc.get()._field_Args.len() > 1LL)) {
		_246d61422_pushErr(_59126_e.ptr(), _59141_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_246d5e398_Data> _59913_dest = _246d81695_evalExpr(_59126_e, _59141_fc.get()._field_Args[0LL]);;
	{
		
		if ((_59913_dest == nullptr)) {
			_case_begin_213418469:;
			{
				return nullptr;
			}
		}
		else if (_59913_dest.get()._field_Decl) {
			_case_begin_2134184d0:;
			{
				_246d61422_pushErr(_59126_e.ptr(), _59141_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_246d93036_Slc(_59913_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_213418546:;
			{
				return _246e4de38_callerLenSlice(_59913_dest,_59163_d);
			}
		}
		else if ((_246d92cc2_Arr(_59913_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_21341927d:;
			{
				return _246e4e5ba_callerLenArr(_59913_dest,_59163_d);
			}
		}
		else if ((_246d939d7_Map(_59913_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2134192e4:;
			{
				return _246e4e279_callerLenMap(_59913_dest,_59163_d);
			}
		}
		else if (((_246d920ac_Prim(_59913_dest.get()._field_Kind.ptr()) != nullptr) && _246d97ba6_IsStr(_246d920ac_Prim(_59913_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_21341935a:;
			{
				return _246e4e90b_callerLenStr(_59913_dest,_59163_d);
			}
		}
		else {
			_case_begin_21341837b:;
			{
				_246d61422_pushErr(_59126_e.ptr(), _59141_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_213418326:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246e50137_callerCapSlice(jule::Ptr<_246d5e398_Data>& _62024_expr, jule::Ptr<_246d5e398_Data>& _62042_d) {
	_62042_d.get()._field_Kind=_246d585e5_lenKind();
	_62042_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca99ec_BuiltinCapCallExprModel>(_246ca99ec_BuiltinCapCallExprModel{._field_Expr=_62024_expr}));
	return _62042_d;
}



inline jule::Ptr<_246d5e398_Data> _246e50478_callerCapStr(jule::Ptr<_246d5e398_Data>& _62822_expr, jule::Ptr<_246d5e398_Data>& _62840_d) {
	_62840_d.get()._field_Kind=_246d585e5_lenKind();
	if (_246d5ec5b_IsConst(_62822_expr.ptr())) {
		_62840_d.get()._field_Constant=static__246204db0_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_246245de0_ReadStr(_62822_expr.get()._field_Constant.ptr()).cap())));
		_62840_d.get()._field_Model=static_cast<jule::Any>(_62840_d.get()._field_Constant);
	} else {
		_62840_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca99ec_BuiltinCapCallExprModel>(_246ca99ec_BuiltinCapCallExprModel{._field_Expr=_62822_expr}));
	};
	return _62840_d;
}



inline jule::Ptr<_246d5e398_Data> _246e50863_builtinCallerCap(jule::Ptr<_246d60e16_Eval>& _64126_e, jule::Ptr<_24612e12a_FnCallExpr>& _64141_fc, jule::Ptr<_246d5e398_Data>& _64163_d) {
	if ((_64141_fc.get()._field_Args.len() < 1LL)) {
		_246d61422_pushErr(_64126_e.ptr(), _64141_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3))}));
		return nullptr;
	};
	if ((_64141_fc.get()._field_Args.len() > 1LL)) {
		_246d61422_pushErr(_64126_e.ptr(), _64141_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_246d5e398_Data> _64913_dest = _246d81695_evalExpr(_64126_e, _64141_fc.get()._field_Args[0LL]);;
	{
		
		if ((_64913_dest == nullptr)) {
			_case_begin_213423e14:;
			{
				return nullptr;
			}
		}
		else if (_64913_dest.get()._field_Decl) {
			_case_begin_213423e7a:;
			{
				_246d61422_pushErr(_64126_e.ptr(), _64141_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_246d93036_Slc(_64913_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_213423ee1:;
			{
				return _246e50137_callerCapSlice(_64913_dest,_64163_d);
			}
		}
		else if (((_246d920ac_Prim(_64913_dest.get()._field_Kind.ptr()) != nullptr) && _246d97ba6_IsStr(_246d920ac_Prim(_64913_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_213424c4a:;
			{
				return _246e50478_callerCapStr(_64913_dest,_64163_d);
			}
		}
		else {
			_case_begin_213423d48:;
			{
				_246d61422_pushErr(_64126_e.ptr(), _64141_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_213423ce3:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246e50ce7_callerDeleteMap(jule::Ptr<_246d60e16_Eval>& _66625_e, jule::Ptr<_24612e12a_FnCallExpr>& _66640_fc, jule::Ptr<_246d5e398_Data>& _66662_expr, jule::Ptr<_246d5e398_Data>& _66680_d) {
	if ((!(_66662_expr.get()._field_Mutable))) {
		_246d61422_pushErr(_66625_e.ptr(), _66640_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	_66680_d=_246d8b826_buildVoidData();
	jule::Ptr<_246ca78eb_BuiltinDeleteCallExprModel> _67113_model = jule::new_ptr<_246ca78eb_BuiltinDeleteCallExprModel>(_246ca78eb_BuiltinDeleteCallExprModel{._field_Dest=_66662_expr, });;
	if ((_66640_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_246d5e398_Data> _67517_key = _246d81695_evalExpr(_66625_e, _66640_fc.get()._field_Args[1LL]);;
		{
			
			if ((_67517_key == nullptr)) {
				_case_begin_21342bbec:;
				{
					return nullptr;
				}
			}
			else if (_67517_key.get()._field_Decl) {
				_case_begin_21342bdea:;
				{
					_246d61422_pushErr(_66625_e.ptr(), _66640_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
			else {
				_case_begin_21342a4d1:;
				{
					;
					jule::Ptr<_246d8ee9a_TypeKind> _68421_keyType = _246d939d7_Map(_66662_expr.get()._field_Kind.ptr()).get()._field_Key;;
					if ((!(_246d031b6_checkAssignType(_66625_e.get()._field_s, false,_68421_keyType,_67517_key,_66640_fc.get()._field_Args[1LL].get()._field_Token)))) {
						return nullptr;
					};
				}
			}
			_match_end_21342a46a:;
		};
		_67113_model.get()._field_Key=_67517_key;
	};
	_66680_d.get()._field_Model=static_cast<jule::Any>(_67113_model);
	return _66680_d;
}



inline jule::Ptr<_246d5e398_Data> _246e511d2_builtinCallerDelete(jule::Ptr<_246d60e16_Eval>& _69529_e, jule::Ptr<_24612e12a_FnCallExpr>& _69544_fc, jule::Ptr<_246d5e398_Data>& _69566_d) {
	if ((_69544_fc.get()._field_Args.len() < 1LL)) {
		_246d61422_pushErr(_69529_e.ptr(), _69544_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3))}));
		return nullptr;
	};
	if ((_69544_fc.get()._field_Args.len() > 2LL)) {
		_246d61422_pushErr(_69529_e.ptr(), _69544_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_246d5e398_Data> _70313_dest = _246d81695_evalExpr(_69529_e, _69544_fc.get()._field_Args[0LL]);;
	{
		
		if ((_70313_dest == nullptr)) {
			_case_begin_213431c8a:;
			{
				return nullptr;
			}
		}
		else if (_70313_dest.get()._field_Decl) {
			_case_begin_213431d01:;
			{
				_246d61422_pushErr(_69529_e.ptr(), _69544_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_246d939d7_Map(_70313_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_213431d67:;
			{
				return _246e50ce7_callerDeleteMap(_69529_e,_69544_fc,_70313_dest,_69566_d);
			}
		}
		else {
			_case_begin_213431bd0:;
			{
				_246d61422_pushErr(_69529_e.ptr(), _69544_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_213431b7a:;
	};
}



inline jule::Ptr<_246d5e398_Data> _246e515bc_builtinCallerClone(jule::Ptr<_246d60e16_Eval>& _71828_e, jule::Ptr<_24612e12a_FnCallExpr>& _71843_fc, jule::Ptr<_246d5e398_Data>& ) {
	if ((_71843_fc.get()._field_Args.len() < 1LL)) {
		_246d61422_pushErr(_71828_e.ptr(), _71843_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_71843_fc.get()._field_Args.len() > 1LL)) {
		_246d61422_pushErr(_71828_e.ptr(), _71843_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_246d5e398_Data> _72713_d = _246d81079_evalExprKind(_71828_e, _71843_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_72713_d == nullptr)) {
		return nullptr;
	};
	if ((!(_246d91ad4_SupportsCloning(_72713_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_246d93036_Slc(_72713_d.get()._field_Kind.ptr()) != nullptr) || (_246d939d7_Map(_72713_d.get()._field_Kind.ptr()) != nullptr) || (_246d92cc2_Arr(_72713_d.get()._field_Kind.ptr()) != nullptr) || (_246d92321_Sptr(_72713_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_213438665:;
				{
					{
						_246d61422_pushErr(_71828_e.ptr(), _71843_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_72713_d.get()._field_Kind.ptr()))}));
					};
				}
			}
			else if ((_246d9350e_Struct(_72713_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_213438016:;
				{
					{
						_246d61422_pushErr(_71828_e.ptr(), _71843_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_72713_d.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			else {
				_case_begin_213437ea0:;
				{
					{
						_246d61422_pushErr(_71828_e.ptr(), _71843_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>::make({jule::Any(_246d90396_Str(_72713_d.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			_match_end_2134377da:;
		};
	};
	_72713_d.get()._field_Mutable=true;
	_72713_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246ca8b83_BuiltinCloneCallExprModel>(_246ca8b83_BuiltinCloneCallExprModel{._field_Expr=_72713_d.get()._field_Model}));
	return _72713_d;
}



inline jule::Ptr<_246d5e398_Data> _246e51b83_builtinCallerAssert(jule::Ptr<_246d60e16_Eval>& _76029_e, jule::Ptr<_24612e12a_FnCallExpr>& _76044_fc, jule::Ptr<_246d5e398_Data>& ) {
	if ((_76044_fc.get()._field_Args.len() < 1LL)) {
		_246d61422_pushErr(_76029_e.ptr(), _76044_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_76044_fc.get()._field_Args.len() > 2LL)) {
		_246d61422_pushErr(_76029_e.ptr(), _76044_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_246d5e398_Data> _76913_expr = _246d81695_evalExpr(_76029_e, _76044_fc.get()._field_Args[0LL]);;
	if ((_76913_expr == nullptr)) {
		return nullptr;
	};
	if (((_246d920ac_Prim(_76913_expr.get()._field_Kind.ptr()) == nullptr) || (!(_246d97942_IsBool(_246d920ac_Prim(_76913_expr.get()._field_Kind.ptr()).ptr()))))) {
		_246d61422_pushErr(_76029_e.ptr(), _76044_fc.get()._field_Token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_246ca9249_BuiltinAssertCallExprModel> _77813_model = jule::new_ptr<_246ca9249_BuiltinAssertCallExprModel>(_246ca9249_BuiltinAssertCallExprModel{._field_Token=_76044_fc.get()._field_Token, ._field_Expr=_76913_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if ((_76044_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_246d5e398_Data> _78617_log = _246d81695_evalExpr(_76029_e, _76044_fc.get()._field_Args[1LL]);;
		if ((_78617_log == nullptr)) {
			return nullptr;
		};
		if ((((!(_246d5ec5b_IsConst(_78617_log.ptr()))) || (_246d920ac_Prim(_78617_log.get()._field_Kind.ptr()) == nullptr)) || (!(_246d97ba6_IsStr(_246d920ac_Prim(_78617_log.get()._field_Kind.ptr()).ptr()))))) {
			_246d61422_pushErr(_76029_e.ptr(), _76044_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9)),jule::Any(_246d90396_Str(_78617_log.get()._field_Kind.ptr()))}));
			return nullptr;
		};
		_77813_model.get()._field_Log=_246245de0_ReadStr(_78617_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_246d5e398_Data> _79913_d = _246d8b826_buildVoidData();;
	_79913_d.get()._field_Model=static_cast<jule::Any>(_77813_model);
	return _79913_d;
}



inline jule::Ptr<_246d5e398_Data> _246e51ee6_builtinCallerStdMemSizeOf(jule::Ptr<_246d60e16_Eval>& _80435_e, jule::Ptr<_24612e12a_FnCallExpr>& _80450_fc, jule::Ptr<_246d5e398_Data>& ) {
	jule::Ptr<_246d5e398_Data> _80513_result = jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_80450_fc.get()._field_Args.len() < 1LL)) {
		_246d61422_pushErr(_80435_e.ptr(), _80450_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _80513_result;
	};
	if ((_80450_fc.get()._field_Args.len() > 1LL)) {
		_246d61422_pushErr(_80435_e.ptr(), _80450_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_246d5e398_Data> _81713_d = _246d81079_evalExprKind(_80435_e, _80450_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_81713_d == nullptr)) {
		return _80513_result;
	};
	_80513_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246caa536_SizeofExprModel>(_246caa536_SizeofExprModel{._field_Expr=_81713_d.get()._field_Model}));
	return _80513_result;
}



inline jule::Ptr<_246d5e398_Data> _246e52414_builtinCallerStdMemAlignOf(jule::Ptr<_246d60e16_Eval>& _82636_e, jule::Ptr<_24612e12a_FnCallExpr>& _82651_fc, jule::Ptr<_246d5e398_Data>& ) {
	jule::Ptr<_246d5e398_Data> _82713_result = jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_82651_fc.get()._field_Args.len() < 1LL)) {
		_246d61422_pushErr(_82636_e.ptr(), _82651_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _82713_result;
	};
	if ((_82651_fc.get()._field_Args.len() > 1LL)) {
		_246d61422_pushErr(_82636_e.ptr(), _82651_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_246d5e398_Data> _83913_d = _246d81079_evalExprKind(_82636_e, _82651_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_83913_d == nullptr)) {
		return _82713_result;
	};
	_82713_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246caa723_AlignofExprModel>(_246caa723_AlignofExprModel{._field_Expr=_83913_d.get()._field_Model}));
	return _82713_result;
}



inline jule::Ptr<_246d5e398_Data> _246e52832_builtinCallerStdMemFree(jule::Ptr<_246d60e16_Eval>& _84833_e, jule::Ptr<_24612e12a_FnCallExpr>& _84848_fc, jule::Ptr<_246d5e398_Data>& ) {
	if ((_84848_fc.get()._field_Args.len() < 1LL)) {
		_246d61422_pushErr(_84833_e.ptr(), _84848_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	};
	if ((_84848_fc.get()._field_Args.len() > 1LL)) {
		_246d61422_pushErr(_84833_e.ptr(), _84848_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_246d5e398_Data> _85713_d = _246d81079_evalExprKind(_84833_e, _84848_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_85713_d == nullptr)) {
		return nullptr;
	};
	if ((!(_246d91870_PerformsRC(_85713_d.get()._field_Kind.ptr())))) {
		_246d61422_pushErr(_84833_e.ptr(), _84848_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_246d5e398_Data> _86613_result = _246d8b826_buildVoidData();;
	_86613_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_246caaec6_FreeExprModel>(_246caaec6_FreeExprModel{._field_Expr=_85713_d.get()._field_Model}));
	return _86613_result;
}



inline jule::Ptr<_246d5e398_Data> _246e52c61_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_246d60e16_Eval>& _87145_e, jule::Ptr<_24612e12a_FnCallExpr>& _87160_fc, jule::Ptr<_246d5e398_Data>& ) {
	if ((_87160_fc.get()._field_Args.len() < 1LL)) {
		_246d61422_pushErr(_87145_e.ptr(), _87160_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_87160_fc.get()._field_Args.len() > 1LL)) {
		_246d61422_pushErr(_87145_e.ptr(), _87160_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_246d5e398_Data> _88013_d = _246d81079_evalExprKind(_87145_e, _87160_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_88013_d == nullptr)) {
		return nullptr;
	};
	if ((!(_246da7820_isBuiltinStrConvertable(_88013_d.get()._field_Kind)))) {
		_246d61422_pushErr(_87145_e.ptr(), _87160_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_246d5e398_Data>(_246d5e398_Data{._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(_246da7e4c_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_246caaaec_IntegratedToStrExprModel>(_246caaaec_IntegratedToStrExprModel{._field_Expr=_88013_d.get()._field_Model})), });
}



inline jule::Ptr<_246d5e398_Data> _246e5317e_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_246d60e16_Eval>& _89844_e, jule::Ptr<_24612e12a_FnCallExpr>& _89859_fc, jule::Ptr<_246d5e398_Data>& _89881_d) {
	if ((!(_246d61d5c_isUnsafe(_89844_e.ptr())))) {
		_246d61422_pushErr(_89844_e.ptr(), _89859_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_89859_fc.get()._field_Args.len() < 1LL)) {
		_246d61422_pushErr(_89844_e.ptr(), _89859_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	};
	jule::Ptr<_246d5e398_Data> _90813_argd = _246d81695_evalExpr(_89844_e, _89859_fc.get()._field_Args[0LL]);;
	if ((_90813_argd == nullptr)) {
		return nullptr;
	};
	if (((_246d920ac_Prim(_90813_argd.get()._field_Kind.ptr()) == nullptr) || (!(_246d97ba6_IsStr(_246d920ac_Prim(_90813_argd.get()._field_Kind.ptr()).ptr()))))) {
		_246d61422_pushErr(_89844_e.ptr(), _89859_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_246d90396_Str(_90813_argd.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	if (((!(_246d5ec5b_IsConst(_90813_argd.ptr()))) || (!(_2462456a3_IsStr(_90813_argd.get()._field_Constant.ptr()))))) {
		_246d61422_pushErr(_89844_e.ptr(), _89859_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_246d5e398_Data> _92313_r = _246d8b826_buildVoidData();;
	jule::Ptr<_246cabb42_FnIns> _92513_f = _246d9329a_Fn(_89881_d.get()._field_Kind.ptr());;
	if ((_92513_f.get()._field_Generics.len() > 0LL)) {
		_92313_r.get()._field_Kind=_92513_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_246caacd9_BackendEmitExprModel> _93013_model = jule::new_ptr<_246caacd9_BackendEmitExprModel>(_246caacd9_BackendEmitExprModel{._field_Code=_246245de0_ReadStr(_90813_argd.get()._field_Constant.ptr()), });;
	if ((_89859_fc.get()._field_Args.len() > 1LL)) {
		_93013_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, (_89859_fc.get()._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = _89859_fc.get()._field_Args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_213469982:;
			if (it != expr.end()) {
				jule::Ptr<_24612a148_Expr> _93621_arg = *it;
				{
					_90813_argd=_246d81079_evalExprKind(_89844_e, _93621_arg.get()._field_Kind);
					if ((_90813_argd == nullptr)) {
						return nullptr;
					};
					_93013_model.get()._field_Exprs = jule::alloc_for_append(_93013_model.get()._field_Exprs,1);_93013_model.get()._field_Exprs.__push(_90813_argd.get()._field_Model);;
				}
				_iter_next_213469982:;
				++it;
				goto _iter_begin_213469982;
			}
			_iter_end_213469982:;
		};
	};
	_92313_r.get()._field_Model=static_cast<jule::Any>(_93013_model);
	return _92313_r;
}



inline jule::Ptr<_246d5e398_Data> _246e535be_builtinCallerStdDebugOut(jule::Ptr<_246d60e16_Eval>& _94934_e, jule::Ptr<_24612e12a_FnCallExpr>& _94949_fc, jule::Ptr<_246d5e398_Data>& _94971_d) {
	_94971_d=_246e4b62d_builtinCallerOut(_94934_e,_94949_fc,_94971_d);
	if ((_94971_d == nullptr)) {
		return nullptr;
	};
	_94971_d.get()._field_Model.operator jule::Ptr<_246ca87a9_BuiltinOutCallExprModel>().get()._field_Debug=true;
	return _94971_d;
}



inline jule::Ptr<_246d5e398_Data> _246e539a9_builtinCallerStdDebugOutln(jule::Ptr<_246d60e16_Eval>& _95836_e, jule::Ptr<_24612e12a_FnCallExpr>& _95851_fc, jule::Ptr<_246d5e398_Data>& _95873_d) {
	_95873_d=_246e4ba18_builtinCallerOutln(_95836_e,_95851_fc,_95873_d);
	if ((_95873_d == nullptr)) {
		return nullptr;
	};
	_95873_d.get()._field_Model.operator jule::Ptr<_246ca8996_BuiltinOutlnCallExprModel>().get()._field_Debug=true;
	return _95873_d;
}



inline jule::Bool _246e82532_FindModuleFile(jule::Slice<jule::Ptr<_2427516da_DirEntry>>& _1220_dirents) {
	{
		auto &expr = _1220_dirents;
		auto it = expr.begin();
		_iter_begin_213470c1e:;
		if (it != expr.end()) {
			jule::Ptr<_2427516da_DirEntry> &_1312_d = *it;
			{
				if (((!(_24275d98e_IsDir(_1312_d.get()._field_Stat.ptr()))) && (_1312_d.get()._field_Name == jule::Str("jule.mod", 8)))) {
					return true;
				};
			}
			_iter_next_213470c1e:;
			++it;
			goto _iter_begin_213470c1e;
		}
		_iter_end_213470c1e:;
	};
	return false;
}



inline jule::Str _246e82664_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_2427516da_DirEntry>> _2617_dirents = ({
				auto except = static__24357b0a2_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_213471b32;
				} jule::Slice<jule::Ptr<_2427516da_DirEntry>>(nullptr);});
			});;
			jule::Bool _3013_exist = _246e82532_FindModuleFile(_2617_dirents);;
			if (_3013_exist) {
				return _2427_path;
			};
			jule::I64 _3513_n = _2427_path.len();;
			_2427_path=_243611a3e_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_213471b32;
			};
		}
	_iter_next_213471b32:;
	}
	_iter_end_213471b32:;;
	return jule::Str();
}



inline jule::Slice<_244640d69_Log> _246e828ea_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__242758e62_Read(_243624832_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_244640d69_Log>::make({_244640d69_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _539_s = _2445bb6c9_Trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_244640d69_Log>::make({_244640d69_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});
	};
	return nullptr;
}



inline jule::Ptr<_2475c5aba_FileInfo> _2475c878d_ParseFile(jule::Ptr<_2449740c0_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_2475c5aba_FileInfo> _2713_finf = jule::new_ptr<_2475c5aba_FileInfo>();;
	std::tie(_2713_finf.get()._field_Ast,_2713_finf.get()._field_Errors) = _247620b15_parseFileset(_2318_f);
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;
}



inline std::tuple<jule::Ptr<_2460db7ad_Ast>,jule::Slice<_244640d69_Log>> _247620b15_parseFileset(jule::Ptr<_2449740c0_File> _5521_f) {
	jule::Ptr<_24763e5b2_parser> _5613_p = jule::new_ptr<_24763e5b2_parser>();;
	_24764de84_parse(_5613_p, _5521_f);
	return std::make_tuple(_5613_p.get()._field_ast,_5613_p.get()._field_errors);
}



inline jule::Ptr<_246135ab0_ScopeTree> _24762151c_newScope(void) {
	return jule::new_ptr<_246135ab0_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _24762182a_isSt(jule::Ptr<_24496dc35_Token> _499_current, jule::Ptr<_24496dc35_Token> _4926_prev) {
	jule::Bool _4942_ok = false;
	jule::Bool _4952_terminated = false;
	_4942_ok=((_499_current.get()._field_Id == static_cast<jule::U64>(5LLU)) || (_4926_prev.get()._field_Row < _499_current.get()._field_Row));
	_4952_terminated=(_499_current.get()._field_Id == static_cast<jule::U64>(5LLU));
	return std::make_tuple(_4942_ok,_4952_terminated);
}



inline jule::Bool _247621b6b_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_24496dc35_Token>>& _5526_tokens, jule::I64& _5545_i) {
	if (((_5545_i > 1LL) && (_5526_tokens[(_5545_i - 2LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return false;
	};
	{
		jule::Ptr<_24496dc35_Token> _6113_prev = _5526_tokens[(_5545_i - 1LL)];;
		return ((_6113_prev.get()._field_Id == static_cast<jule::U64>(20LLU)) || (((_6113_prev.get()._field_Id == static_cast<jule::U64>(7LLU)) && _24496e72a_IsBinOp(_6113_prev.get()._field_Kind)) && (_6113_prev.get()._field_Row < _5526_tokens[_5545_i].get()._field_Row)));
	};
}



inline std::tuple<jule::I64,jule::Bool> _247622001_nextStPos(jule::Slice<jule::Ptr<_24496dc35_Token>>& _7015_tokens, jule::I64 _7033_start) {
	jule::I64 _7113_braceN = 0LL;;
	jule::I64 _7213_i = _7033_start;;
	for (; (_7213_i < _7015_tokens.len()); (_7213_i)++) {
		{
			jule::Bool _7417_ok = false;;
			jule::Bool _7517_terminated = false;;
			jule::Ptr<_24496dc35_Token> _7613_tok = _7015_tokens[_7213_i];;
			{
				auto &_match_expr{ _7613_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_213507118:;
					{
						{
							auto &_match_expr{ _7613_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_213509291:;
								{
									if (((_7113_braceN == 0LL) && (_7213_i > _7033_start))) {
										if ((!(_247621b6b_prevIsIncompleteExpr(_7015_tokens,_7213_i)))) {
											std::tie(_7417_ok,_7517_terminated) = _24762182a_isSt(_7613_tok,_7015_tokens[(_7213_i - 1LL)]);
											if (_7417_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7113_braceN)++;
								}
							}
							else {
								_case_begin_213507aa8:;
								{
									(_7113_braceN)--;
									if (((_7113_braceN == 0LL) && ((_7213_i + 1LL) < _7015_tokens.len()))) {
										std::tie(_7417_ok,_7517_terminated) = _24762182a_isSt(_7015_tokens[(_7213_i + 1LL)],_7613_tok);
										if (_7417_ok) {
											(_7213_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_2135078dd:;
						};
						goto _iter_next_213505787;
					}
				}
				_match_end_213506ec5:;
			};
			if ((_7113_braceN != 0LL)) {
				goto _iter_next_213505787;
			};
			if ((_7213_i > _7033_start)) {
				if (_247621b6b_prevIsIncompleteExpr(_7015_tokens,_7213_i)) {
					goto _iter_next_213505787;
				};
				std::tie(_7417_ok,_7517_terminated) = _24762182a_isSt(_7613_tok,_7015_tokens[(_7213_i - 1LL)]);
			} else {
				std::tie(_7417_ok,_7517_terminated) = _24762182a_isSt(_7613_tok,_7613_tok);
			};
			if ((!(_7417_ok))) {
				goto _iter_next_213505787;
			};
			_julec_label_return:;
			if (_7517_terminated) {
				(_7213_i)++;
			};
			return std::make_tuple(_7213_i,_7517_terminated);
		}
	_iter_next_213505787:;
	}
	_iter_end_213505787:;;
	return std::make_tuple(_7213_i,false);
}



inline std::tuple<jule::Slice<jule::Ptr<_24496dc35_Token>>,jule::Bool> _247622342_skipSt(jule::I64& _13216_i, jule::Slice<jule::Ptr<_24496dc35_Token>> _13228_tokens) {
	jule::I64 _1339_start = _13216_i;;
	jule::Bool _13413_terminated = false;;
	std::tie(_13216_i,_13413_terminated) = _247622001_nextStPos(_13228_tokens,_1339_start);
	jule::Slice<jule::Ptr<_24496dc35_Token>> _13613_stTokens = _13228_tokens.slice(_1339_start,_13216_i);;
	if (_13413_terminated) {
		if ((_13613_stTokens.len() == 1LL)) {
			std::tie(_13613_stTokens,_13413_terminated) = _247622342_skipSt(_13216_i,_13228_tokens);
			return std::make_tuple(_13613_stTokens,_13413_terminated);
		};
		_13613_stTokens=_13613_stTokens.slice(0LL,(_13613_stTokens.len() - 1LL));
	};
	return std::make_tuple(_13613_stTokens,_13413_terminated);
}



inline jule::Slice<jule::Ptr<_24762263e_stmt>> _2476229d5_splitStmts(jule::Slice<jule::Ptr<_24496dc35_Token>>& _15420_tokens) {
	jule::Slice<jule::Ptr<_24762263e_stmt>> _15513_stmts = jule::Slice<jule::Ptr<_24762263e_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _15613_pos = 0LL;;
	while ((_15613_pos < _15420_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_24496dc35_Token>> _15818_stmt;;
			jule::Bool _15824_terminated;;
			std::tie(_15818_stmt,_15824_terminated) = _247622342_skipSt(_15613_pos,_15420_tokens);
			_15513_stmts = jule::alloc_for_append(_15513_stmts,1);_15513_stmts.__push(jule::new_ptr<_24762263e_stmt>(_24762263e_stmt{._field_tokens=_15818_stmt, ._field_terminated=_15824_terminated}));;
		}
	_iter_next_21351282c:;
	}
	_iter_end_21351282c:;;
	return _15513_stmts;
}



inline jule::Bool _2476391c2_isTypeOp(jule::Str& _88814_kind) {
	return (((_88814_kind == jule::Str("&", 1)) || (_88814_kind == jule::Str("&&", 2))) || (_88814_kind == jule::Str("*", 1)));
}



inline jule::Bool _2476394ad_isTypeRange(jule::Slice<jule::Ptr<_24496dc35_Token>>& _89521_tokens) {
	jule::Bool _89613_op = false;;
	{
		auto &expr = _89521_tokens;
		auto it = expr.begin();
		_iter_begin_2135d1e7e:;
		if (it != expr.end()) {
			jule::I64 _8979_i = it - expr.begin();
			jule::Ptr<_24496dc35_Token> _89712_token = *it;
			{
				if ((_89712_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					if ((_89712_token.get()._field_Kind == jule::Str("[", 1))) {
						if (_89613_op) {
							return true;
						};
						jule::I64 _90325_rangeN = 0LL;;
						jule::Slice<jule::Ptr<_24496dc35_Token>> _90425_lTokens = _89521_tokens.slice(_8979_i);;
						{
							auto &expr = _90425_lTokens;
							auto it = expr.begin();
							_iter_begin_2135d33c0:;
							if (it != expr.end()) {
								jule::Ptr<_24496dc35_Token> _90524_lToken = *it;
								{
									{
										auto &_match_expr{ _90524_lToken.get()._field_Id };
										
										if (_match_expr == static_cast<jule::U64>(3LLU)) {
											_case_begin_2135d4c2e:;
											{
												{
													auto &_match_expr{ _90524_lToken.get()._field_Kind };
													
													if (_match_expr == jule::Str("[", 1)) {
														_case_begin_2135d5614:;
														{
															(_90325_rangeN)++;
															goto _iter_next_2135d33c0;
														}
													}
													else if (_match_expr == jule::Str("]", 1)) {
														_case_begin_2135d568b:;
														{
															(_90325_rangeN)--;
															goto _iter_next_2135d33c0;
														}
													}
													_match_end_2135d5416:;
												};
											}
										}
										_match_end_2135d49cb:;
									};
									if ((_90325_rangeN == 0LL)) {
										return _2476391c2_isTypeOp(_90524_lToken.get()._field_Kind);
									};
								}
								_iter_next_2135d33c0:;
								++it;
								goto _iter_begin_2135d33c0;
							}
							_iter_end_2135d33c0:;
						};
						return true;
					};
				};
				if ((!(_2476391c2_isTypeOp(_89712_token.get()._field_Kind)))) {
					return false;
				};
				_89613_op=true;
			}
			_iter_next_2135d1e7e:;
			++it;
			_8979_i++;
			goto _iter_begin_2135d1e7e;
		}
		_iter_end_2135d1e7e:;
	};
	return true;
}



inline jule::Slice<jule::Ptr<_24496dc35_Token>> _247639755_getBlockExpr(jule::Slice<jule::Ptr<_24496dc35_Token>>& _93322_tokens) {
	jule::I64 _93413_braceN = 0LL;;
	jule::I64 _93513_skipToNextBraceClose = 0LL;;
	{
		auto &expr = _93322_tokens;
		auto it = expr.begin();
		_iter_begin_2135d72c5:;
		if (it != expr.end()) {
			jule::I64 _9369_i = it - expr.begin();
			jule::Ptr<_24496dc35_Token> _93612_tok = *it;
			{
				{
					auto &_match_expr{ _93612_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_2135d81a5:;
						{
							(_93513_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_2135d822c:;
						{
							{
								auto &_match_expr{ _93612_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_2135d9041:;
									{
										if (((_93413_braceN > 0LL) || (_93513_skipToNextBraceClose > 0LL))) {
											if ((_93513_skipToNextBraceClose > 0LL)) {
												(_93513_skipToNextBraceClose)--;
											};
											(_93413_braceN)++;
											goto _match_end_2135d91ea;
										};
										return _93322_tokens.slice(0LL,_9369_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_2135d975b:;
									{
										(_93413_braceN)++;
									}
								}
								else {
									_case_begin_2135d92d8:;
									{
										(_93413_braceN)--;
									}
								}
								_match_end_2135d91ea:;
							};
						}
					}
					_match_end_2135d6b98:;
				};
			}
			_iter_next_2135d72c5:;
			++it;
			_9369_i++;
			goto _iter_begin_2135d72c5;
		}
		_iter_end_2135d72c5:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_24496dc35_Token>>,jule::Slice<jule::Ptr<_24496dc35_Token>>> _247639ada_splitDelim(jule::Slice<jule::Ptr<_24496dc35_Token>>& _96420_tokens, jule::U64 _96438_delim) {
	jule::I64 _96513_rangeN = 0LL;;
	{
		auto &expr = _96420_tokens;
		auto it = expr.begin();
		_iter_begin_2135db120:;
		if (it != expr.end()) {
			jule::I64 _9669_i = it - expr.begin();
			jule::Ptr<_24496dc35_Token> _96612_token = *it;
			{
				{
					auto &_match_expr{ _96612_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_2135dbc8b:;
						{
							{
								auto &_match_expr{ _96612_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_2135dc42e:;
									{
										(_96513_rangeN)++;
										goto _iter_next_2135db120;
									}
								}
								else {
									_case_begin_2135dc6b5:;
									{
										(_96513_rangeN)--;
									}
								}
								_match_end_2135dc4ea:;
							};
						}
					}
					else if (_match_expr == _96438_delim) {
						_case_begin_2135dbd13:;
						{
							if ((_96513_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_24496dc35_Token>> _98025_l = _96420_tokens.slice(0LL,_9669_i);;
								jule::Slice<jule::Ptr<_24496dc35_Token>> _98125_r = _96420_tokens.slice((_9669_i + 1LL));;
								return std::make_tuple(_98025_l,_98125_r);
							};
						}
					}
					_match_end_2135dba27:;
				};
			}
			_iter_next_2135db120:;
			++it;
			_9669_i++;
			goto _iter_begin_2135db120;
		}
		_iter_end_2135db120:;
	};
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I64 _247639d82_findLowestPrecOp(jule::Slice<jule::Ptr<_24496dc35_Token>>& _99122_tokens) {
	jule::U8 _99613_prec = 255LLU;;
	jule::I64 _99713_precPos = -1LL;;
	jule::I64 _99913_braceN = 0LL;;
	jule::Bool _100013_skipToNextBraceOpen = false;;
	{
		auto &expr = _99122_tokens;
		auto it = expr.begin();
		_iter_begin_2135e08b6:;
		if (it != expr.end()) {
			jule::I64 _10019_i = it - expr.begin();
			jule::Ptr<_24496dc35_Token> &_100112_token = *it;
			{
				{
					
					if ((_100112_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
						_case_begin_2135e170d:;
						{
							{
								auto &_match_expr{ _100112_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_2135e23ac:;
									{
										_100013_skipToNextBraceOpen=false;
										goto _case_begin_2135e2b2c;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_2135e2b2c:;
									{
										(_99913_braceN)++;
									}
								}
								else {
									_case_begin_2135e2643:;
									{
										(_99913_braceN)--;
									}
								}
								_match_end_2135e2478:;
							};
							goto _iter_next_2135e08b6;
						}
					}
					else if (_100013_skipToNextBraceOpen) {
						_case_begin_2135e1785:;
						{
							goto _iter_next_2135e08b6;
						}
					}
					else if ((_100112_token.get()._field_Id == static_cast<jule::U64>(16LLU))) {
						_case_begin_2135e180c:;
						{
							_100013_skipToNextBraceOpen=true;
							goto _iter_next_2135e08b6;
						}
					}
					else if ((_10019_i == 0LL)) {
						_case_begin_2135e1884:;
						{
							goto _iter_next_2135e08b6;
						}
					}
					else if ((_100112_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_2135e190b:;
						{
							goto _iter_next_2135e08b6;
						}
					}
					else if ((_99913_braceN > 0LL)) {
						_case_begin_2135e1983:;
						{
							goto _iter_next_2135e08b6;
						}
					}
					_match_end_2135e1598:;
				};
				jule::Ptr<_24496dc35_Token> _102813_left = _99122_tokens[(_10019_i - 1LL)];;
				if (((_102813_left.get()._field_Id == static_cast<jule::U64>(7LLU)) || (_102813_left.get()._field_Id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_2135e08b6;
				};
				if ((((_10019_i > 1LL) && (_102813_left.get()._field_Id == static_cast<jule::U64>(3LLU))) && (_102813_left.get()._field_Kind == jule::Str("]", 1)))) {
					jule::Ptr<_24496dc35_Token> _103617_lleft = _99122_tokens[(_10019_i - 2LL)];;
					if (((_103617_lleft.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_103617_lleft.get()._field_Kind == jule::Str("[", 1)))) {
						if (((_100112_token.get()._field_Kind == jule::Str("&", 1)) || (_100112_token.get()._field_Kind == jule::Str("*", 1)))) {
							goto _iter_next_2135e08b6;
						};
					};
				};
				jule::U8 _104513_p = _24496e0dc_Prec(_100112_token.ptr());;
				if (((_104513_p != 0LLU) && (_104513_p <= _99613_prec))) {
					_99613_prec=_104513_p;
					_99713_precPos=_10019_i;
				};
			}
			_iter_next_2135e08b6:;
			++it;
			_10019_i++;
			goto _iter_begin_2135e08b6;
		}
		_iter_end_2135e08b6:;
	};
	return _99713_precPos;
}



inline jule::Ptr<_24612bd09_IdentExpr> _24763a129_buildIdentExpr(jule::Ptr<_24496dc35_Token>& _105424_token) {
	return jule::new_ptr<_24612bd09_IdentExpr>(_24612bd09_IdentExpr{._field_Token=_105424_token, ._field_Ident=_105424_token.get()._field_Kind, ._field_CppLinked=false});
}



inline std::tuple<jule::Slice<jule::Ptr<_24496dc35_Token>>,jule::I64> _24763a3c1_getRangeExprTokens(jule::Slice<jule::Ptr<_24496dc35_Token>>& _106228_tokens) {
	jule::I64 _106313_rangeN = 0LL;;
	jule::I64 _106413_i = (_106228_tokens.len() - 1LL);;
	for (; (_106413_i >= 0LL); (_106413_i)--) {
		{
			jule::Ptr<_24496dc35_Token> _106613_tok = _106228_tokens[_106413_i];;
			if ((_106613_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _106613_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_2135eaa7a:;
						{
							(_106313_rangeN)++;
						}
					}
					else {
						_case_begin_2135eb482:;
						{
							(_106313_rangeN)--;
						}
					}
					_match_end_2135eb262:;
				};
			};
			if ((_106313_rangeN == 0LL)) {
				return std::make_tuple(_106228_tokens.slice(0LL,_106413_i),_106313_rangeN);
			};
		}
	_iter_next_2135ea1c8:;
	}
	_iter_end_2135ea1c8:;;
	return std::make_tuple(nullptr,_106313_rangeN);
}



inline jule::Bool _24763b12a_checkAssignTokens(jule::Slice<jule::Ptr<_24496dc35_Token>>& _1623_tokens) {
	if (((_1623_tokens.len() == 0LL) || (!(_2449732cd_IsAssign(_1623_tokens[0LL].get()._field_Id))))) {
		return false;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto &expr = _1623_tokens;
		auto it = expr.begin();
		_iter_begin_213698551:;
		if (it != expr.end()) {
			jule::Ptr<_24496dc35_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_213699178:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_213699464:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_213699244:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_213698551;
				} else if (((_2112_t.get()._field_Id == static_cast<jule::U64>(7LLU)) && _24497381c_IsAssignOp(_2112_t.get()._field_Kind))) {
					return true;
				};
			}
			_iter_next_213698551:;
			++it;
			goto _iter_begin_213698551;
		}
		_iter_end_213698551:;
	};
	return false;
}



inline _244640d69_Log _24763c34b_makeErr(jule::I64 _5212_row, jule::I64 _5222_col, jule::Ptr<_2449740c0_File>& _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _244640d69_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=_5233_f.get()._field_Path, ._field_Text=_2446412a9_Logf(_5243_fmt,jule::Any(_5256_args)), };
}



inline jule::Slice<jule::Ptr<_24496dc35_Token>> _24763c824_range(jule::I64& _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_24496dc35_Token>>& _7163_tokens) {
	if ((_7115_i >= _7163_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_24496dc35_Token> _759_tok = _7163_tokens[_7115_i];;
	if (((_759_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_759_tok.get()._field_Kind != _7123_open))) {
		return nullptr;
	};
	(_7115_i)++;
	jule::I64 _8013_rangeN = 1LL;;
	jule::I64 _819_start = _7115_i;;
	for (; ((_8013_rangeN != 0LL) && (_7115_i < _7163_tokens.len())); (_7115_i)++) {
		{
			jule::Ptr<_24496dc35_Token> _8313_token = _7163_tokens[_7115_i];;
			if ((_8313_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8313_token.get()._field_Kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_2136a0976:;
						{
							(_8013_rangeN)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_2136a09ed:;
						{
							(_8013_rangeN)--;
						}
					}
					_match_end_2136a0712:;
				};
			};
		}
	_iter_next_21369da2e:;
	}
	_iter_end_21369da2e:;;
	return _7163_tokens.slice(_819_start,(_7115_i - 1LL));
}



inline std::tuple<jule::Slice<jule::Ptr<_24496dc35_Token>>,jule::Slice<jule::Ptr<_24496dc35_Token>>> _24763cabb_rangeLast(jule::Slice<jule::Ptr<_24496dc35_Token>>& _10319_tokens) {
	jule::Slice<jule::Ptr<_24496dc35_Token>> _10339_cutted = jule::Slice<jule::Ptr<_24496dc35_Token>>(nullptr);
	jule::Slice<jule::Ptr<_24496dc35_Token>> _10357_cut = jule::Slice<jule::Ptr<_24496dc35_Token>>(nullptr);
	if ((_10319_tokens.len() == 0LL)) {
		_10339_cutted = _10319_tokens;
		_10357_cut = nullptr;
		return std::make_tuple(_10339_cutted,_10357_cut);
	} else if ((_10319_tokens[(_10319_tokens.len() - 1LL)].get()._field_Id != static_cast<jule::U64>(3LLU))) {
		_10339_cutted = _10319_tokens;
		_10357_cut = nullptr;
		return std::make_tuple(_10339_cutted,_10357_cut);
	};
	jule::I64 _10913_braceN = 0LL;;
	jule::I64 _11013_i = (_10319_tokens.len() - 1LL);;
	for (; (_11013_i >= 0LL); (_11013_i)--) {
		{
			jule::Ptr<_24496dc35_Token> _11213_token = _10319_tokens[_11013_i];;
			if ((_11213_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11213_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_2136a446e:;
						{
							(_10913_braceN)++;
							goto _iter_next_2136a1b20;
						}
					}
					else {
						_case_begin_2136a4da9:;
						{
							(_10913_braceN)--;
						}
					}
					_match_end_2136a4b89:;
				};
			};
			if ((_10913_braceN == 0LL)) {
				_10339_cutted = _10319_tokens.slice(0LL,_11013_i);
				_10357_cut = _10319_tokens.slice(_11013_i);
				return std::make_tuple(_10339_cutted,_10357_cut);
			};
		}
	_iter_next_2136a1b20:;
	}
	_iter_end_2136a1b20:;;
	_10339_cutted = _10319_tokens;
	_10357_cut = nullptr;
	return std::make_tuple(_10339_cutted,_10357_cut);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>>,jule::Slice<_244640d69_Log>> _24763cea6_partsKind(jule::Slice<jule::Ptr<_24496dc35_Token>>& _13219_tokens, jule::Str _13237_kind, jule::Bool _13254_expr_must) {
	if ((_13219_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _13713_parts = nullptr;;
	jule::Slice<_244640d69_Log> _13813_errors = nullptr;;
	jule::I64 _14013_rangeN = 0LL;;
	jule::I64 _14113_last = 0LL;;
	{
		auto &expr = _13219_tokens;
		auto it = expr.begin();
		_iter_begin_2136a894b:;
		if (it != expr.end()) {
			jule::I64 _1429_i = it - expr.begin();
			jule::Ptr<_24496dc35_Token> _14212_token = *it;
			{
				if ((_14212_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _14212_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_2136a99a2:;
							{
								(_14013_rangeN)++;
								goto _iter_next_2136a894b;
							}
						}
						else {
							_case_begin_2136a9c8d:;
							{
								(_14013_rangeN)--;
							}
						}
						_match_end_2136a9a6d:;
					};
				};
				if ((_14013_rangeN > 0LL)) {
					goto _iter_next_2136a894b;
				};
				if ((_14212_token.get()._field_Kind == _13237_kind)) {
					if ((_13254_expr_must && ((_1429_i - _14113_last) <= 0LL))) {
						_244640d69_Log _16121_err = _24763c34b_makeErr(_14212_token.get()._field_Row,_14212_token.get()._field_Column,_14212_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_13813_errors = jule::alloc_for_append(_13813_errors,1);_13813_errors.__push(_16121_err);;
					};
					_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(_13219_tokens.slice(_14113_last,_1429_i));;
					_14113_last=static_cast<jule::I64>((_1429_i + 1LL));
				};
			}
			_iter_next_2136a894b:;
			++it;
			_1429_i++;
			goto _iter_begin_2136a894b;
		}
		_iter_end_2136a894b:;
	};
	if ((_14113_last < _13219_tokens.len())) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(_13219_tokens.slice(_14113_last));;
	} else if ((!(_13254_expr_must))) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(jule::Slice<jule::Ptr<_24496dc35_Token>>());;
	};
	return std::make_tuple(_13713_parts,_13813_errors);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>>,jule::Slice<_244640d69_Log>> _24763d391_parts(jule::Slice<jule::Ptr<_24496dc35_Token>>& _18415_tokens, jule::U64 _18433_id, jule::Bool _18446_expr_must) {
	if ((_18415_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_24496dc35_Token>>> _18913_parts = nullptr;;
	jule::Slice<_244640d69_Log> _19013_errors = nullptr;;
	jule::I64 _19213_rangeN = 0LL;;
	jule::I64 _19313_last = 0LL;;
	{
		auto &expr = _18415_tokens;
		auto it = expr.begin();
		_iter_begin_2136b08ed:;
		if (it != expr.end()) {
			jule::I64 _1949_i = it - expr.begin();
			jule::Ptr<_24496dc35_Token> _19412_token = *it;
			{
				if ((_19412_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _19412_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_2136b1954:;
							{
								(_19213_rangeN)++;
								goto _iter_next_2136b08ed;
							}
						}
						else {
							_case_begin_2136b1c40:;
							{
								(_19213_rangeN)--;
							}
						}
						_match_end_2136b1a20:;
					};
				};
				if ((_19213_rangeN > 0LL)) {
					goto _iter_next_2136b08ed;
				};
				if ((_19412_token.get()._field_Id == _18433_id)) {
					if ((_18446_expr_must && ((_1949_i - _19313_last) <= 0LL))) {
						_244640d69_Log _21321_err = _24763c34b_makeErr(_19412_token.get()._field_Row,_19412_token.get()._field_Column,_19412_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_19013_errors = jule::alloc_for_append(_19013_errors,1);_19013_errors.__push(_21321_err);;
					};
					_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(_18415_tokens.slice(_19313_last,_1949_i));;
					_19313_last=static_cast<jule::I64>((_1949_i + 1LL));
				};
			}
			_iter_next_2136b08ed:;
			++it;
			_1949_i++;
			goto _iter_begin_2136b08ed;
		}
		_iter_end_2136b08ed:;
	};
	if ((_19313_last < _18415_tokens.len())) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(_18415_tokens.slice(_19313_last));;
	} else if ((!(_18446_expr_must))) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(jule::Slice<jule::Ptr<_24496dc35_Token>>());;
	};
	return std::make_tuple(_18913_parts,_19013_errors);
}



inline jule::Str _24763d638_getCloseKindOfBrace(jule::Str _23024_left) {
	{
		auto &_match_expr{ _23024_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_2136b5bbc:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_2136b12e4:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_2136b135a:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_2136b127d:;
			{
				return jule::Str();
			}
		}
		_match_end_2136b53a3:;
	};
}



inline _244640d69_Log _24763da23_compilerErr(jule::Ptr<_24496dc35_Token>& _24317_token, jule::Str& _24333_fmt, jule::Slice<jule::Any> _24346_args) {
	return _244640d69_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_24317_token.get()._field_Row, ._field_Column=_24317_token.get()._field_Column, ._field_Path=_24317_token.get()._field_File.get()._field_Path, ._field_Text=_2446412a9_Logf(_24333_fmt,jule::Any(_24346_args)), ._field_Line=_24497529c_GetRow(_24317_token.get()._field_File.ptr(), _24317_token.get()._field_Row), };
}



inline void _24763de52_pushSuggestion(_244640d69_Log* _25430_log, jule::Str _25441_fmt, jule::Slice<jule::Any> _25454_args) {
	_25430_log->_field_Suggestion=_2446412a9_Logf(_25441_fmt,jule::Any(_25454_args));
}



inline jule::Str _24763e1e9_tokstoa(jule::Slice<jule::Ptr<_24496dc35_Token>>& _25813_tokens) {
	jule::I64 _25913_n = 0LL;;
	{
		auto &expr = _25813_tokens;
		auto it = expr.begin();
		_iter_begin_2136b8d02:;
		if (it != expr.end()) {
			jule::Ptr<_24496dc35_Token> &_26012_token = *it;
			{
				_25913_n+=_26012_token.get()._field_Kind.len();
			}
			_iter_next_2136b8d02:;
			++it;
			goto _iter_begin_2136b8d02;
		}
		_iter_end_2136b8d02:;
	};
	jule::Str _26313_s = jule::Str::alloc(0LL, _25913_n);;
	{
		auto &expr = _25813_tokens;
		auto it = expr.begin();
		_iter_begin_2136b96b5:;
		if (it != expr.end()) {
			jule::Ptr<_24496dc35_Token> &_26412_token = *it;
			{
				_26313_s+=_26412_token.get()._field_Kind;
			}
			_iter_next_2136b96b5:;
			++it;
			goto _iter_begin_2136b96b5;
		}
		_iter_end_2136b96b5:;
	};
	return _26313_s;
}



inline jule::Bool _24764e25e_isPub(jule::Str& _203511_ident) {
	jule::I32 _203610_r;;
	std::tie(_203610_r,std::ignore) = _244593b68_DecodeRuneStr(_203511_ident);
	return _2444d25ce_IsUpper(_203610_r);
}



inline jule::Ptr<_246125b27_TypeDecl> _24764eacd_buildVoidType(void) {
	return jule::new_ptr<_246125b27_TypeDecl>();
}



inline jule::Ptr<_246125b27_TypeDecl> _24764ed42_buildPrimType(jule::Ptr<_24496dc35_Token> _2322_t) {
	return jule::new_ptr<_246125b27_TypeDecl>(_246125b27_TypeDecl{._field_Token=_2322_t, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_2461261dd_IdentTypeDecl>(_2461261dd_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }))});
}



inline std::tuple<jule::Bool,jule::Bool> _246e56209_checkOs(jule::Str _912_arg) {
	jule::Bool _924_ok = false;
	jule::Bool _934_exist = false;
	_924_ok=false;
	_934_exist=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_213891749:;
			{
				_924_ok=_2446441be_IsWindows(_24468a237_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_21389131a:;
			{
				_924_ok=_244644477_IsDarwin(_24468a237_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_2138910ea:;
			{
				_924_ok=_24464471e_IsLinux(_24468a237_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_213891161:;
			{
				_924_ok=_244645324_IsUnix(_24468a237_Os);
			}
		}
		else {
			_case_begin_213890847:;
			{
				_924_ok=true;
				_934_exist=false;
			}
		}
		_match_end_213890ca9:;
	};
	return std::make_tuple(_924_ok,_934_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _246e5633b_checkArch(jule::Str _2814_arg) {
	jule::Bool _2826_ok = false;
	jule::Bool _2836_exist = false;
	_2826_ok=false;
	_2836_exist=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_213893e77:;
			{
				_2826_ok=_244644a3d_IsI386(_244679710_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_213893a48:;
			{
				_2826_ok=_244644cd5_IsAmd64(_244679710_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_213893828:;
			{
				_2826_ok=_24464507c_IsArm64(_244679710_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_21389388e:;
			{
				_2826_ok=_244645940_Is64Bit(_244679710_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_213893905:;
			{
				_2826_ok=_244645698_Is32Bit(_244679710_Arch);
			}
		}
		else {
			_case_begin_213893086:;
			{
				_2826_ok=true;
				_2836_exist=false;
			}
		}
		_match_end_2138934d7:;
	};
	return std::make_tuple(_2826_ok,_2836_exist);
}



inline jule::Bool _246e5646d_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_24360ba28_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL,(_529_n - _24362c30c_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _2445b70a9_FindLastByte(_5029_p,'_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok;;
		jule::Bool _6726_exist;;
		std::tie(_6718_ok,_6726_exist) = _246e56209_checkOs(_5029_p);
		if (_6726_exist) {
			return _6718_ok;
		};
		std::tie(_6718_ok,_6726_exist) = _246e5633b_checkArch(_5029_p);
		return ((!(_6726_exist)) || _6718_ok);
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL,_6413_i);;
	_6413_i=static_cast<jule::I64>(_2445b70a9_FindLastByte(_5029_p,'_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok;;
		jule::Bool _8826_exist;;
		std::tie(_8818_ok,_8826_exist) = _246e56209_checkOs(_5813_a1);
		if (_8826_exist) {
			return _8818_ok;
		};
		std::tie(_8818_ok,_8826_exist) = _246e5633b_checkArch(_5813_a1);
		return ((!(_8826_exist)) || _8818_ok);
	};
	jule::Bool _9614_ok;;
	jule::Bool _9622_exist;;
	std::tie(_9614_ok,_9622_exist) = _246e5633b_checkArch(_5813_a1);
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;
		};
		std::tie(_9614_ok,_9622_exist) = _246e56209_checkOs(_6113_a2);
		return ((!(_9622_exist)) || _9614_ok);
	};
	std::tie(_9614_ok,_9622_exist) = _246e56209_checkOs(_5813_a1);
	return ((!(_9622_exist)) || _9614_ok);
}



inline void _246e71389_setOsVars(jule::Slice<jule::Str>& _3619_vars) {
	_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(_24468a237_Os);;
	if (_244645324_IsUnix(_24468a237_Os)) {
		_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _246e715dc_setArchVars(jule::Slice<jule::Str>& _4421_vars) {
	_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(_244679710_Arch);;
	if (_244645940_Is64Bit(_244679710_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x64", 3));;
	};
	if (_244645698_Is32Bit(_244679710_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _246e71895_initVars(jule::Slice<jule::Str>& _5518_vars, _246e7107b_CompileInfo& _5532_info) {
	_246e71389_setOsVars(_5518_vars);
	_246e715dc_setArchVars(_5518_vars);
	if (_5532_info._field_Prod) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("production", 10));;
	};
	if (_5532_info._field_Test) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5532_info._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_2138a023b:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_2138a02a2:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_21389ee83:;
	};
	{
		auto &_match_expr{ _5532_info._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_2138a18ad:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_2138a1924:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_2138a198a:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_2138a1858:;
	};
}



inline jule::Slice<jule::U8> _2476ae346_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__242758e62_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_244690528_Exit(1LL);
			return nullptr;
		} jule::Slice<jule::U8>(nullptr);});
	});
}



inline _244640d69_Log _2476ae5ee_flatCompilerErr(jule::Str _4120_text) {
	return _244640d69_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };
}



inline void _2476b3a10_pushPasses(jule::Ptr<_246ce342b_Package>& _11120_p, jule::Slice<jule::Str>& _11144_passes) {
	{
		auto &expr = _11120_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_2138d65a2:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11217_f.get()._field_Passes;
					auto it = expr.begin();
					_iter_begin_2138d7284:;
					if (it != expr.end()) {
						_246cace0c_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_2138d7284;
							};
							{
								auto &expr = _11144_passes;
								auto it = expr.begin();
								_iter_begin_2138d8175:;
								if (it != expr.end()) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_2138d7284;
										};
									}
									_iter_next_2138d8175:;
									++it;
									goto _iter_begin_2138d8175;
								}
								_iter_end_2138d8175:;
							};
							_11144_passes = jule::alloc_for_append(_11144_passes,1);_11144_passes.__push(_11416_pass._field_Text);;
						}
						_iter_next_2138d7284:;
						++it;
						goto _iter_begin_2138d7284;
					}
					_iter_end_2138d7284:;
				};
			}
			_iter_next_2138d65a2:;
			++it;
			goto _iter_begin_2138d65a2;
		}
		_iter_end_2138d65a2:;
	};
}



inline jule::Slice<jule::Str> _2476b3d95_getAllUniquePasses(jule::Ptr<_246ce342b_Package>& _12828_pkg, jule::Slice<jule::Ptr<_246ce04c2_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_2476b3a10_pushPasses(_12828_pkg,_12913_passes);
	{
		auto &expr = _12853_uses;
		auto it = expr.begin();
		_iter_begin_2138d97d6:;
		if (it != expr.end()) {
			jule::Ptr<_246ce04c2_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_CppLinked))) {
					_2476b3a10_pushPasses(_13217_u.get()._field_Package,_12913_passes);
				};
			}
			_iter_next_2138d97d6:;
			++it;
			goto _iter_begin_2138d97d6;
		}
		_iter_end_2138d97d6:;
	};
	return _12913_passes;
}



inline _246e7107b_CompileInfo _2476b4093_buildCompileInfo(void) {
	_246e7107b_CompileInfo _14213_info = _246e7107b_CompileInfo{._field_Prod=_24267eb8a_Production, ._field_Test=_24267e162_Test, };;
	{
		auto &_match_expr{ _24267d419_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_2138dad6a:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_2138dadd1:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_2138dad04:;
	};
	{
		auto &_match_expr{ _24267d8e2_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_2138dba19:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_2138da5b7:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_2138db2cc:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_2138db70b:;
	};
	return _14213_info;
}



inline void _2477dd08a_EliminateDefines(jule::Ptr<_2476b22e4_IR>& _28526_ir) {
	jule::Ptr<_2477a84ea_ObjectDeadCode> _28613_ocd = static__2477a89c3_new(_28526_ir);;
	_2477dccc1_elimanate(_28613_ocd);
}



inline jule::Ptr<_2460dc858_Directive> _2477dd420_findDirective(jule::Slice<jule::Ptr<_2460dc858_Directive>>& _29123_directives, jule::Str _29154_tag) {
	{
		auto &expr = _29123_directives;
		auto it = expr.begin();
		_iter_begin_213931047:;
		if (it != expr.end()) {
			jule::Ptr<_2460dc858_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;
				};
			}
			_iter_next_213931047:;
			++it;
			goto _iter_begin_213931047;
		}
		_iter_end_213931047:;
	};
	return nullptr;
}



inline jule::Bool _2477dd761_hasDirective(jule::Slice<jule::Ptr<_2460dc858_Directive>>& _30118_directives, jule::Str _30149_tag) {
	return (_2477dd420_findDirective(_30118_directives,_30149_tag) != nullptr);
}



inline void _2477e23ad_eliminateDeadCodeOfScope(jule::Ptr<_246cc1c01_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_246cc4440_Label>> _2429_labels = jule::Slice<jule::Ptr<_246cc4440_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_246cc472b_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_246cc472b_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_2477de4a9_scopeDeadCode> _24413_sdc = jule::new_ptr<_2477de4a9_scopeDeadCode>(_2477de4a9_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_246cc4440_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_246cc472b_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_2477e20c2_optimizeStmts(_24413_sdc);
	};
}



inline void _2477e2644_eliminateScopeFunctions(jule::Slice<jule::Ptr<_246cab768_Fn>>& _25433_funcs) {
	{
		auto &expr = _25433_funcs;
		auto it = expr.begin();
		_iter_begin_213977203:;
		if (it != expr.end()) {
			jule::Ptr<_246cab768_Fn> _25517_func = *it;
			{
				{
					auto &expr = _25517_func.get()._field_Instances;
					auto it = expr.begin();
					_iter_begin_213977863:;
					if (it != expr.end()) {
						jule::Ptr<_246cabb42_FnIns> _25621_ins = *it;
						{
							_2477e23ad_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_213977863:;
						++it;
						goto _iter_begin_213977863;
					}
					_iter_end_213977863:;
				};
			}
			_iter_next_213977203:;
			++it;
			goto _iter_begin_213977203;
		}
		_iter_end_213977203:;
	};
}



inline void _2477e2886_eliminateFunctionsScopePackage(jule::Ptr<_246ce342b_Package>& _26240_pkg) {
	{
		auto &expr = _26240_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_213977cb4:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _26317_f = *it;
			{
				_2477e2644_eliminateScopeFunctions(_26317_f.get()._field_Funcs);
			}
			_iter_next_213977cb4:;
			++it;
			goto _iter_begin_213977cb4;
		}
		_iter_end_213977cb4:;
	};
}



inline void _2477e2b2d_eliminateScopePackage(jule::Ptr<_246ce342b_Package>& _26831_pkg) {
	_2477e2886_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _2477e2d3c_EliminateScopes(jule::Ptr<_2476b22e4_IR>& _27325_ir) {
	jule::I64 _27413_i = (_27325_ir.get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_246ce04c2_ImportInfo> _27617_u = _27325_ir.get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_CppLinked))) {
				_2477e2b2d_eliminateScopePackage(_27617_u.get()._field_Package);
			};
		}
	_iter_next_213979a41:;
	}
	_iter_end_213979a41:;;
	_2477e2b2d_eliminateScopePackage(_27325_ir.get()._field_Main);
}



inline jule::Bool _244ad59c3_isStdPackage(jule::Str _39917_f, jule::Str _39925_p) {
	return _2445b3e96_HasPrefix(_39917_f,_243624832_Join(jule::Slice<jule::Str>::make({_244679a95_PathStdlib,_39925_p})));
}



inline jule::Bool _244ad8652_isConstantValidConditionalCase(jule::Ptr<_246cc20ec_If>& _40336_i) {
	{
		auto &_match_expr{ _40336_i.get()._field_Expr };
		
		if (_match_expr.type_is<jule::Ptr<_2461e4872_Const>>()) {
			_case_begin_213a0a74d:;
			{
				jule::Ptr<_2461e4872_Const> _40613_c = _40336_i.get()._field_Expr.operator jule::Ptr<_2461e4872_Const>();;
				return (_246208de7_IsBool(_40613_c.ptr()) && _24623d558_ReadBool(_40613_c.ptr()));
			}
		}
		_match_end_213a0ad9c:;
	};
	return false;
}



inline jule::Bool _244ad9c5d_isUnreachableExpr(jule::Any& _41223_expr) {
	{
		auto &_match_expr{ _41223_expr };
		
		if (_match_expr.type_is<jule::Ptr<_2461e4872_Const>>()) {
			_case_begin_213a0b210:;
			{
				jule::Ptr<_2461e4872_Const> _41513_c = _41223_expr.operator jule::Ptr<_2461e4872_Const>();;
				return (_246208de7_IsBool(_41513_c.ptr()) && (!(_24623d558_ReadBool(_41513_c.ptr()))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca5c18_BinopExprModel>>()) {
			_case_begin_213a0b287:;
			{
				jule::Ptr<_246ca5c18_BinopExprModel> _41813_m = _41223_expr.operator jule::Ptr<_246ca5c18_BinopExprModel>();;
				if ((_41813_m.get()._field_Op.get()._field_Kind == jule::Str("&&", 2))) {
					return (_244ad9c5d_isUnreachableExpr(_41813_m.get()._field_Left.get()._field_Model) || _244ad9c5d_isUnreachableExpr(_41813_m.get()._field_Right.get()._field_Model));
				};
			}
		}
		_match_end_213a0bd7b:;
	};
	return false;
}



inline jule::Bool _244adc8dc_isConstantValidMatchCase(jule::Ptr<_246cc6497_Case>& _42730_case) {
	{
		auto &expr = _42730_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_213a0c420:;
		if (it != expr.end()) {
			jule::Ptr<_246d5e398_Data> &_42812_expr = *it;
			{
				if (((_246d5ec5b_IsConst(_42812_expr.ptr()) && _246208de7_IsBool(_42812_expr.get()._field_Constant.ptr())) && _24623d558_ReadBool(_42812_expr.get()._field_Constant.ptr()))) {
					return true;
				};
			}
			_iter_next_213a0c420:;
			++it;
			goto _iter_begin_213a0c420;
		}
		_iter_end_213a0c420:;
	};
	return false;
}



inline jule::Bool _244addb41_isUnreachableConditionalCase(jule::Ptr<_246cc20ec_If>& _43634_i) {
	return _244ad9c5d_isUnreachableExpr(_43634_i.get()._field_Expr);
}



inline jule::Bool _244ae6a4a_isUnreachableMatchCase(jule::Ptr<_246cc6497_Case>& _44028_case) {
	{
		auto &expr = _44028_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_213a11237:;
		if (it != expr.end()) {
			jule::Ptr<_246d5e398_Data> &_44112_expr = *it;
			{
				if ((!(_244ad9c5d_isUnreachableExpr(_44112_expr.get()._field_Model)))) {
					return false;
				};
			}
			_iter_next_213a11237:;
			++it;
			goto _iter_begin_213a11237;
		}
		_iter_end_213a11237:;
	};
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _245192601_checkForBitShiftOpt(jule::Ptr<_246ca5a2b_OperandExprModel>& _45125_l, jule::Ptr<_246ca5a2b_OperandExprModel>& _45148_r) {
	jule::Bool _45172_ok = false;
	jule::U64 _45182_x = 0;
	if (((!(_246ca39e6_IsInt(_246d90396_Str(_45125_l.get()._field_Kind.ptr())))) || (!(_246ca39e6_IsInt(_246d90396_Str(_45148_r.get()._field_Kind.ptr())))))) {
		_45172_ok = false;
		_45182_x = 0LLU;
		return std::make_tuple(_45172_ok,_45182_x);
	};
	{
		auto &_match_expr{ _45148_r.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_2461e4872_Const>>()) {
			_case_begin_213a4d131:;
			{
				goto _match_end_213a4dd46;
			}
		}
		else {
			_case_begin_213a4dd9b:;
			{
				_45172_ok = false;
				_45182_x = 0LLU;
				return std::make_tuple(_45172_ok,_45182_x);
			}
		}
		_match_end_213a4dd46:;
	};
	_45182_x=static_cast<jule::U64>(_24623b974_AsU64(_45148_r.get()._field_Model.operator jule::Ptr<_2461e4872_Const>().ptr()));
	if (((_45182_x == 0LLU) || ((_45182_x & 1LL) != 0LLU))) {
		_45172_ok = false;
		_45182_x = 0LLU;
		return std::make_tuple(_45172_ok,_45182_x);
	};
	jule::F64 _4659_j = _246c731e1_Log2(static_cast<jule::F64>(static_cast<jule::F64>(_45182_x)));;
	jule::U64 _4669_z = static_cast<jule::U64>(_4659_j);;
	if ((static_cast<jule::F64>(_4669_z) != _4659_j)) {
		_45172_ok = false;
		_45182_x = 0LLU;
		return std::make_tuple(_45172_ok,_45182_x);
	};
	_45172_ok = true;
	_45182_x = _4669_z;
	return std::make_tuple(_45172_ok,_45182_x);
}



inline void _245196748_PushOptLevel(jule::I64 _3217_level) {
	_2449a74ee_Copy=(_3217_level >= static_cast<jule::I64>(1LL));
	_2449aba31_Deadcode=(_3217_level >= static_cast<jule::I64>(1LL));
	_2449957b7_Append=(_3217_level >= static_cast<jule::I64>(1LL));
	_2449d10d8_Math=(_3217_level >= static_cast<jule::I64>(1LL));
	_2449d9311_Access=(_3217_level >= static_cast<jule::I64>(1LL));
	_2449dc2d1_Inline=(_3217_level >= static_cast<jule::I64>(1LL));
	_2449dc6ee_Ptr=(_3217_level >= static_cast<jule::I64>(1LL));
	_2449dd0e5_Cond=(_3217_level >= static_cast<jule::I64>(1LL));
}



inline void _247769302_detectEnabled(void) {
	_2476e4c1c_exprEnabled=(((_2449dc6ee_Ptr || _2449d10d8_Math) || _2449d9311_Access) || _2449dd0e5_Cond);
	_2476e5d72_scopeEnabled=((_2449dd0e5_Cond || _2449957b7_Append) || _2449a74ee_Copy);
}



inline void _247811410_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_244690528_Exit(1LL);
}



inline jule::U64 _21133c12b_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _21133c439_unixYearToSeconds(jule::U64 _20122_y, jule::Bool& _20140_leap) {
	if (((_20122_y - 2LLU) <= 136LLU)) {
		jule::U64 _20317_leaps = ((_20122_y - 68LLU) >> 2LLU);;
		_20140_leap=(((_20122_y - 68LLU) & 3LLU) == 0LLU);
		if (_20140_leap) {
			(_20317_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_20122_y - 70LLU)) + (86400LLU * _20317_leaps)));
	};
	jule::U64 _21113_leaps = 0LLU;;
	jule::U64 _21213_centuries = 0LLU;;
	jule::U64 _21313_cycles = ((_20122_y - 100LLU) / 400LLU);;
	jule::U64 _21413_rem = ((_20122_y - 100LLU) % 400LL);;
	if ((_21413_rem < 0LLU)) {
		(_21313_cycles)--;
		_21413_rem+=400LLU;
	};
	if ((_21413_rem == 0LLU)) {
		_20140_leap=true;
		_21213_centuries=0LLU;
		_21113_leaps=0LLU;
	} else {
		if ((_21413_rem >= 200LLU)) {
			if ((_21413_rem >= 300LLU)) {
				_21213_centuries=3LLU;
				_21413_rem-=300LLU;
			} else {
				_21213_centuries=2LLU;
				_21413_rem-=200LLU;
			};
		} else {
			if ((_21413_rem >= 100LLU)) {
				_21213_centuries=1LLU;
				_21413_rem-=100LLU;
			} else {
				_21213_centuries=0LLU;
			};
		};
		if ((_21413_rem == 0LLU)) {
			_20140_leap=false;
			_21113_leaps=0LLU;
		} else {
			_21113_leaps=static_cast<jule::U64>((_21413_rem >> 2LLU));
			_21413_rem%=4LL;
			_20140_leap=(_21413_rem == 0LLU);
		};
	};
	_21113_leaps+=((97LLU * _21313_cycles) + (24LLU * _21213_centuries));
	if (_20140_leap) {
		(_21113_leaps)++;
	};
	return static_cast<jule::U64>((((((_20122_y - 100LLU) * 31536000LLU) + (_21113_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));
}



inline jule::U64 _21133c7be_unixMonthToSeconds(jule::U64 _25823_m, jule::Bool _25836_leap) {
	jule::U64 _26013_t = 0LLU;;
	{
		auto &_match_expr{ _25823_m };
		
		if (_match_expr == 1LL) {
			_case_begin_213adb08c:;
			{
				_26013_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_213adb224:;
			{
				_26013_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_213adb28a:;
			{
				_26013_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_213adb301:;
			{
				_26013_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_213adb367:;
			{
				_26013_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_213adb3cd:;
			{
				_26013_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_213adb444:;
			{
				_26013_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_213adb4aa:;
			{
				_26013_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_213adb521:;
			{
				_26013_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_213adb598:;
			{
				_26013_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_213adb620:;
			{
				_26013_t=28857600LLU;
			}
		}
		_match_end_213adb037:;
	};
	if ((_25836_leap && (_25823_m >= 2LLU))) {
		_26013_t+=86400LLU;
	};
	return _26013_t;
}



inline jule::Bool _210679d4e_isCopyOptimizable(jule::Ptr<_246d5e398_Data>& _77123_expr) {
	if ((!(_77123_expr.get()._field_Lvalue))) {
		return false;
	};
	{
		auto &_match_expr{ _77123_expr.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_246ca7522_SlicingExprModel>>()) {
			_case_begin_213b8ae72:;
			{
				return false;
			}
		}
		_match_end_213b8ae1c:;
	};
	return true;
}



inline jule::Bool _21067a1d4_isIterCopyOptimizable(jule::Ptr<_246d5e398_Data>& _78227_expr, jule::Ptr<_246d16372_Var>& _78241_v) {
	if (((!(_78227_expr.get()._field_Lvalue)) && (!(_246d91397_Mutable(_78227_expr.get()._field_Kind.ptr()))))) {
		return true;
	};
	return ((!(_78241_v.get()._field_Mutable)) && (!(_78227_expr.get()._field_Mutable)));
}



inline jule::Str _21129952d_decomposeCommonEsq(jule::U8 _125023_b) {
	{
		auto &_match_expr{ _125023_b };
		
		if (_match_expr == '\\') {
			_case_begin_213c51686:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_213c516ec:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_213c51763:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_213c517c9:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_213c51a2c:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_213c51a93:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_213c51b09:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_213c51b70:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_213c51bd6:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_213c51da1:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_213c515ed:;
			{
				return jule::Str();
			}
		}
		_match_end_213c51543:;
	};
}



inline jule::Str _211299819_sbtoa(jule::U8 _127710_b) {
	if ((_127710_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	};
	if ((_127710_b < 128LLU)) {
		jule::Str _128213_seq = _21129952d_decomposeCommonEsq(_127710_b);;
		if ((!(_128213_seq.empty()))) {
			return _128213_seq;
		};
		if (((32LL <= _127710_b) && (_127710_b <= 126LLU))) {
			return static_cast<jule::Str>(_127710_b);
		};
	};
	jule::Str _12909_seq = _246ca1c9c_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_127710_b)),8LL);;
	if ((_12909_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _12909_seq);
	};
	return (jule::Str("\\", 1) + _12909_seq);
}



inline jule::Str _211299ab1_cstrBytes(jule::Slice<jule::U8> _129714_bytes) {
	jule::Str _129813_lit = jule::Str::alloc(0LL, _129714_bytes.len());;
	{
		auto &expr = _129714_bytes;
		auto it = expr.begin();
		_iter_begin_213c5835d:;
		if (it != expr.end()) {
			jule::U8 &_129912_b = *it;
			{
				_129813_lit+=_211299819_sbtoa(_129912_b);
			}
			_iter_next_213c5835d:;
			++it;
			goto _iter_begin_213c5835d;
		}
		_iter_end_213c5835d:;
	};
	return _129813_lit;
}



inline jule::Str _211299dd0_cstrLit(jule::Slice<jule::U8> _130512_bytes) {
	return ((jule::Str("\"", 1) + _211299ab1_cstrBytes(_130512_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _21129a1dd_ftoa(jule::F64 _13099_f, jule::I64 _130917_bitsize) {
	if ((_130917_bitsize != 32LL)) {
		if ((_13099_f == static_cast<jule::F64>(static_cast<jule::I64>(_13099_f)))) {
			return _21129a485_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_13099_f)));
		};
		if ((_13099_f == static_cast<jule::F64>(static_cast<jule::U64>(_13099_f)))) {
			return _21129a72c_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_13099_f)));
		};
	};
	jule::Str _131813_m = _2466d22b0_FmtFloat(_13099_f,'f',-1LL,_130917_bitsize);;
	if ((!(_2445b893a_Contains(_131813_m,jule::Str(".", 1))))) {
		_131813_m+=jule::Str(".0", 2);
	};
	return _131813_m;
}



inline jule::Str _21129a485_itoa(jule::I64 _13259_x) {
	{
		
		if ((_13259_x == jule::MAX_I64)) {
			_case_begin_213c5bd78:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_13259_x == jule::MIN_I64)) {
			_case_begin_213c5bdde:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_213c5bc24:;
	};
	jule::Str _13339_fmt = _246ca1dce_FmtInt(_13259_x,10LL);;
	if (_244645940_Is64Bit(jule::Str("amd64", 5))) {
		return (_13339_fmt + jule::Str("LL", 2));
	};
	return (_13339_fmt + jule::Str("L", 1));
}



inline jule::Str _21129a72c_utoa(jule::U64 _13409_x) {
	{
		
		if ((_13409_x == jule::MAX_U64)) {
			_case_begin_213c5dd14:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_213c5dc26:;
	};
	jule::Str _13469_fmt = _246ca1c9c_FmtUint(_13409_x,10LL);;
	if (_244645940_Is64Bit(jule::Str("amd64", 5))) {
		return (_13469_fmt + jule::Str("LLU", 3));
	};
	return (_13469_fmt + jule::Str("LU", 2));
}



inline jule::Bool _21129aad4_isForwarded(jule::Ptr<_246cc1c01_Scope>& _135317_s) {
	jule::Any _13549_last = _135317_s.get()._field_Stmts[(_135317_s.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _13549_last };
		
		if (_match_expr.type_is<jule::Ptr<_246d5e398_Data>>()) {
			_case_begin_213c618b6:;
			{
				{
					auto &_match_expr{ _13549_last.operator jule::Ptr<_246d5e398_Data>().get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_246caa349_BuiltinErrorCallExprModel>>()) {
						_case_begin_213c62598:;
						{
							return true;
						}
					}
					else {
						_case_begin_213c61db1:;
						{
							return false;
						}
					}
					_match_end_213c61542:;
				};
			}
		}
		else {
			_case_begin_213c61223:;
			{
				return true;
			}
		}
		_match_end_213c611bd:;
	};
}



inline jule::Bool _21129ad9d_isBuiltinCallHasDebuginf(jule::Ptr<_246ca6895_FnCallExprModel>& _136830_m) {
	if ((!(_246cabd2e_IsBuiltin(_136830_m.get()._field_Func.ptr())))) {
		return false;
	};
	{
		auto &_match_expr{ _136830_m.get()._field_Expr };
		
		if (_match_expr.type_is<jule::Ptr<_246ca83d0_CommonSubIdentExprModel>>()) {
			_case_begin_213c63456:;
			{
				jule::Ptr<_246ca83d0_CommonSubIdentExprModel> _137413_csie = _136830_m.get()._field_Expr.operator jule::Ptr<_246ca83d0_CommonSubIdentExprModel>();;
				return (_137413_csie.get()._field_Ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_213c62c5d:;
			{
				return false;
			}
		}
		_match_end_213c62499:;
	};
}



inline jule::Bool _21129b0ce_isExprComesFromBind(jule::Ptr<_246d5e398_Data>& _138125_d) {
	{
		auto &_match_expr{ _138125_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_246d16372_Var>>()) {
			_case_begin_213c64864:;
			{
				return _138125_d.get()._field_Model.operator jule::Ptr<_246d16372_Var>().get()._field_CppLinked;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_246ca7b2c_StructSubIdentExprModel>>()) {
			_case_begin_213c648ca:;
			{
				return _138125_d.get()._field_Model.operator jule::Ptr<_246ca7b2c_StructSubIdentExprModel>().get()._field_Owner.get()._field_Decl.get()._field_CppLinked;
			}
		}
		else {
			_case_begin_213c63247:;
			{
				return false;
			}
		}
		_match_end_213c6439c:;
	};
}



inline void _211345332_iterFiles(jule::Ptr<_246ce342b_Package>& _101319_pkg, jule::Fn<void(jule::Ptr<_246d5956e_SymbolTable>&)> _101334_f) {
	{
		auto &expr = _101319_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_213dd1cab:;
		if (it != expr.end()) {
			jule::Ptr<_246d5956e_SymbolTable> _101417_file = *it;
			{
				_101334_f(_101417_file);
			}
			_iter_next_213dd1cab:;
			++it;
			goto _iter_begin_213dd1cab;
		}
		_iter_end_213dd1cab:;
	};
}



inline void _211345464_prepareStructure(jule::Ptr<_246117c3a_Struct>& _101926_s) {
	{
		auto &expr = _101926_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_213dd254d:;
		if (it != expr.end()) {
			jule::Ptr<_246142319_StructIns> _102017_ins = *it;
			{
				{
					auto &expr = _102017_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_213dd320d:;
					if (it != expr.end()) {
						jule::Ptr<_246cab768_Fn> _102121_m = *it;
						{
							if (_102121_m.get()._field_Statically) {
								goto _iter_next_213dd320d;
							};
							{
								auto &expr = _102121_m.get()._field_Instances;
								auto it = expr.begin();
								_iter_begin_213dd4055:;
								if (it != expr.end()) {
									jule::Ptr<_246cabb42_FnIns> _102525_mins = *it;
									{
										jule::Ptr<_246cab955_ParamIns> _102625_p = _102525_mins.get()._field_Params[0LL];;
										if ((!(_24617b4da_IsRef(_102625_p.get()._field_Decl.ptr())))) {
											_102625_p.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(jule::new_ptr<_211346399_customType>(_211346399_customType{._field_kind=static__211347c4c_asPtr(static__21134b24a_kind(_102625_p.get()._field_Kind))}), 13)});
										} else {
											_102625_p.get()._field_Kind=jule::new_ptr<_246d8ee9a_TypeKind>(_246d8ee9a_TypeKind{._field_Kind=jule::Trait<_246d8ea6b_Kind>(jule::new_ptr<_211346399_customType>(_211346399_customType{._field_kind=static__21134b24a_kind(_102625_p.get()._field_Kind)}), 13)});
										};
									}
									_iter_next_213dd4055:;
									++it;
									goto _iter_begin_213dd4055;
								}
								_iter_end_213dd4055:;
							};
						}
						_iter_next_213dd320d:;
						++it;
						goto _iter_begin_213dd320d;
					}
					_iter_end_213dd320d:;
				};
			}
			_iter_next_213dd254d:;
			++it;
			goto _iter_begin_213dd254d;
		}
		_iter_end_213dd254d:;
	};
}



inline jule::Str _211345684_concatAllParts(jule::Slice<jule::Ptr<_24496dc35_Token>> _104619_parts) {
	jule::I64 _104713_n = 0LL;;
	{
		auto &expr = _104619_parts;
		auto it = expr.begin();
		_iter_begin_213dd384b:;
		if (it != expr.end()) {
			jule::Ptr<_24496dc35_Token> &_104812_part = *it;
			{
				_104713_n+=_104812_part.get()._field_Kind.len();
			}
			_iter_next_213dd384b:;
			++it;
			goto _iter_begin_213dd384b;
		}
		_iter_end_213dd384b:;
	};
	if ((_104713_n == 0LL)) {
		return jule::Str();
	};
	jule::Str _105413_s = jule::Str::alloc(0LL, _104713_n);;
	{
		auto &expr = _104619_parts;
		auto it = expr.begin();
		_iter_begin_213dd6e7b:;
		if (it != expr.end()) {
			jule::Ptr<_24496dc35_Token> &_105512_p = *it;
			{
				_105413_s+=_105512_p.get()._field_Kind;
			}
			_iter_next_213dd6e7b:;
			++it;
			goto _iter_begin_213dd6e7b;
		}
		_iter_end_213dd6e7b:;
	};
	return _105413_s;
}



inline jule::Ptr<_2460dc858_Directive> _21134daaa_findDirective(jule::Slice<jule::Ptr<_2460dc858_Directive>>& _32923_directives, jule::Str _32954_tag) {
	{
		auto &expr = _32923_directives;
		auto it = expr.begin();
		_iter_begin_213eb4597:;
		if (it != expr.end()) {
			jule::Ptr<_2460dc858_Directive> _33017_dr = *it;
			{
				if ((_33017_dr.get()._field_Tag.get()._field_Kind == _32954_tag)) {
					return _33017_dr;
				};
			}
			_iter_next_213eb4597:;
			++it;
			goto _iter_begin_213eb4597;
		}
		_iter_end_213eb4597:;
	};
	return nullptr;
}



inline jule::Bool _21134de40_hasDirective(jule::Slice<jule::Ptr<_2460dc858_Directive>>& _33918_directives, jule::Str _33949_tag) {
	return (_21134daaa_findDirective(_33918_directives,_33949_tag) != nullptr);
}



inline jule::Bool _21134e1d7_shouldInitialized(jule::Ptr<_246d8ee9a_TypeKind>& _34627_t) {
	jule::Ptr<_246d94972_Prim> _3479_prim = _246d920ac_Prim(_34627_t.ptr());;
	if ((_3479_prim != nullptr)) {
		return ((!(_246d97e1a_IsAny(_3479_prim.ptr()))) && (!(_246d97ba6_IsStr(_3479_prim.ptr()))));
	};
	{
		
		if ((_246d92321_Sptr(_34627_t.ptr()) != nullptr)) {
			_case_begin_213eb7853:;
			{
				return false;
			}
		}
		else if ((_246d939d7_Map(_34627_t.ptr()) != nullptr)) {
			_case_begin_213eb7248:;
			{
				return false;
			}
		}
		else if ((_246d93036_Slc(_34627_t.ptr()) != nullptr)) {
			_case_begin_213eb72ae:;
			{
				return false;
			}
		}
		else if ((_246d93773_Trait(_34627_t.ptr()) != nullptr)) {
			_case_begin_213eb7336:;
			{
				return false;
			}
		}
		else if ((_246d9329a_Fn(_34627_t.ptr()) != nullptr)) {
			_case_begin_213eb73ad:;
			{
				return false;
			}
		}
		else if ((_246d92cc2_Arr(_34627_t.ptr()) != nullptr)) {
			_case_begin_213eb7501:;
			{
				jule::Ptr<_246d9ad0d_Arr> _36317_arr = _246d92cc2_Arr(_34627_t.ptr());;
				return _21134e1d7_shouldInitialized(_36317_arr.get()._field_Elem);
			}
		}
		else if ((_246d9350e_Struct(_34627_t.ptr()) != nullptr)) {
			_case_begin_213eb7578:;
			{
				return false;
			}
		}
		else {
			_case_begin_213eb6577:;
			{
				return true;
			}
		}
		_match_end_213eb6511:;
	};
}



inline void _24270bc8e_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _244609ddd_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_24270bc8e_printErrorMessage((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I64 _4113_max = _244613d92_HelpMap[0LL][0LL].len();;
	{
		auto &expr = _244613d92_HelpMap;
		auto it = expr.begin();
		_iter_begin_21404630a:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I64 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_21404630a:;
			++it;
			goto _iter_begin_21404630a;
		}
		_iter_end_21404630a:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _244613d92_HelpMap;
		auto it = expr.begin();
		_iter_begin_214047dde:;
		if (it != expr.end()) {
			jule::I64 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_24459aab5_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_214047dde:;
			++it;
			_519_i++;
			goto _iter_begin_214047dde;
		}
		_iter_end_214047dde:;
	};
	jule::outln(_4913_s);
}



inline void _24461d561_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_24270bc8e_printErrorMessage((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.12 @master", 18));
}



inline void _24461dcae_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _244620662_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _244620db0_tool(jule::Slice<jule::Str>& _9410_args) {
	if ((_9410_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9410_args.len() > 3LL)) {
		_24270bc8e_printErrorMessage((jule::Str("invalid command: ", 17) + _9410_args[3LL]));
		return;;
	};
	jule::Str _1059_cmd = _9410_args[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_2140508a8:;
			{
				_24461dcae_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_214050567:;
			{
				_244620662_toolDistarch();
			}
		}
		else {
			_case_begin_21404db92:;
			{
				_24270bc8e_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_214050501:;
	};
}



inline void _24462646a_julenv(jule::Slice<jule::Str>& _11712_args) {
	if ((_11712_args.len() > 2LL)) {
		_24270bc8e_printErrorMessage((jule::Str("invalid command: ", 17) + _11712_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.12 @master", 33));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: darwin", 24));
	jule::outln((jule::Str("default compiler: ", 18) + _24267d419_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _24267d8e2_CppStd));
}



inline void _24460ace0_mod(jule::Slice<jule::Str>& _1309_args) {
	if ((_1309_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1309_args.len() > 3LL)) {
		_24270bc8e_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1309_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_21405535d:;
			{
				({
					auto except = static__242759c98_Write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_24270bc8e_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_2140539cc:;
			{
				_24270bc8e_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[2LL]));
			}
		}
		_match_end_214054e1d:;
	};
}



inline jule::Bool _244632d28_processCommand(jule::Slice<jule::Str>& _15320_args) {
	{
		auto &_match_expr{ _15320_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_2140572d8:;
			{
				_244609ddd_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_214056738:;
			{
				_24461d561_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_21405679e:;
			{
				_244620db0_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_214056815:;
			{
				_24462646a_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_21405687b:;
			{
				_24460ace0_mod(_15320_args);
			}
		}
		else {
			_case_begin_2140566c2:;
			{
				return false;
			}
		}
		_match_end_214056617:;
	};
	return true;
}



inline void _243589423_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _2435adcc7_Args();;
	if ((_18913_args.len() < 2LL)) {
		_243589423_showInfo();
		return;;
	};
	if (_244632d28_processCommand(_18913_args)) {
		return;;
	};
	_24766bd81_compileCommand(_18913_args);
}



inline void _2447106ca_init(void) {
	_24267d419_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_24282ac48_File> _244711d19_openOutput(jule::Str& _4316_path) {
	jule::Str _449_dir = _243611a3e_Dir(_4316_path);;
	({
		auto except = static__2427535dd_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__243588851_Create(_449_dir);
				if (!except.ok()) {
					_247811410_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__2427581a3_Create(_4316_path);
		(except.ok()) ? (except.result) : ({
			_247811410_Throw(jule::Str("a problem occurs when code generation", 37));
			nullptr;
		});
	});
}



inline void _244711e4b_clearObjects(void) {
	({
		auto except = static__242737c32_Remove(_24766ad08_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__2435649e7_Remove(_2472268c5_OutDir);
}



inline void _24766a6ed_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_24468b601_Cmd> _7313_cmd = static__24468ba30_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=jule::Slice<jule::Str>::make({_7214_compiler});
	_7313_cmd.get()._field_Args=jule::append(_7313_cmd.get()._field_Args,_2445b85e9_Split(_7229_compilerCmd,jule::Str(" ", 1),-1LL));
	jule::I64 _769_status = ({
		auto except = _24468bc94_Spawn(_7313_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(12LL)) == _match_expr) {
					_case_begin_214064548:;
					{
						static__24780dbb0_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(3LL)) == _match_expr) {
					_case_begin_214064e83:;
					{
						static__24780dbb0_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(9LL)) == _match_expr) {
					_case_begin_2140647bd:;
					{
						static__24780dbb0_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL)) == _match_expr) {
					_case_begin_214064834:;
					{
						static__24780dbb0_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_21406468b:;
					{
						static__24780dbb0_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_2140645d1:;
			};
			_247811410_Throw(jule::Str());
			0LL;
		});
	});;
	if ((_769_status != 0LL)) {
		jule::Str _9313_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _24267d419_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__24780dbb0_Print(jule::Str("\033[31m", 5),_9313_errorMessage);
		_247811410_Throw(jule::Str());
	};
	_244711e4b_clearObjects();
}



inline jule::Bool _24766a830_isCppSourceFile(jule::Str _10420_path) {
	jule::I64 _1059_offset = _2445b70a9_FindLastByte(_10420_path,'.');;
	if ((_1059_offset == -1LL)) {
		return false;
	};
	return _2446342e1_IsValidCppExt(_10420_path.slice(_1059_offset));
}



inline void _24766a962_pushCompCmdClang(jule::Str& _11226_cmd) {
	_11226_cmd+=jule::Str("-Wno-everything ", 16);
	_11226_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _24267d8e2_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_214069b8b:;
			{
				_11226_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_214069c02:;
			{
				_11226_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_214069d56:;
			{
				_11226_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_214069a37:;
	};
	_11226_cmd+=jule::Str(" ", 1);
	if (_24267eb8a_Production) {
		_11226_cmd+=jule::Str("-O3 ", 4);
		_11226_cmd+=jule::Str("-flto ", 6);
		_11226_cmd+=jule::Str("-DNDEBUG ", 9);
		_11226_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11226_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _24766aa94_pushCompCmdGcc(jule::Str& _13824_cmd) {
	_13824_cmd+=jule::Str("-w ", 3);
	_13824_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _24267d8e2_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_21406c62d:;
			{
				_13824_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_21406c694:;
			{
				_13824_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_21406c7e8:;
			{
				_13824_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_21406c4eb:;
	};
	_13824_cmd+=jule::Str(" ", 1);
	if (_24267eb8a_Production) {
		_13824_cmd+=jule::Str("-O3 ", 4);
		_13824_cmd+=jule::Str("-DNDEBUG ", 9);
		_13824_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_13824_cmd+=jule::Str("-O0 ", 4);
	};
}



inline std::tuple<jule::Str,jule::Str> _24766abc6_genCompileCmd(jule::Str _16418_sourcePath, jule::Ptr<_2476b22e4_IR>& _16436_ir) {
	jule::Str &_16510_compiler = _24267d67d_CompilerPath;;
	jule::Str _16613_cmd = jule::Str::alloc(0LL, 64LLU);;
	{
		auto &_match_expr{ _24267d419_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_214070213:;
			{
				_24766aa94_pushCompCmdGcc(_16613_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_2140704aa:;
			{
				_24766a962_pushCompCmdClang(_16613_cmd);
			}
		}
		_match_end_2140703cd:;
	};
	{
		auto &expr = _16436_ir.get()._field_Passes;
		auto it = expr.begin();
		_iter_begin_214071346:;
		if (it != expr.end()) {
			jule::Str &_17612_pass = *it;
			{
				_16613_cmd+=_17612_pass;
				_16613_cmd+=jule::Str(" ", 1);
			}
			_iter_next_214071346:;
			++it;
			goto _iter_begin_214071346;
		}
		_iter_end_214071346:;
	};
	{
		auto &expr = _16436_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_214070543:;
		if (it != expr.end()) {
			jule::Ptr<_246ce04c2_ImportInfo> &_18212_u = *it;
			{
				if ((_18212_u.get()._field_CppLinked && _24766a830_isCppSourceFile(_18212_u.get()._field_Path))) {
					_16613_cmd+=_18212_u.get()._field_Path;
					_16613_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_214070543:;
			++it;
			goto _iter_begin_214070543;
		}
		_iter_end_214070543:;
	};
	if ((!(_247239652_Out.empty()))) {
		_16613_cmd+=jule::Str("-o ", 3);
		_16613_cmd+=_247239652_Out;
		_16613_cmd+=jule::Str(" ", 1);
	};
	_16613_cmd+=_16418_sourcePath;
	return std::make_tuple(_16510_compiler,_16613_cmd);
}



inline jule::Str _24766ad08_getCompilePath(void) {
	return _243624832_Join(jule::Slice<jule::Str>::make({_2472268c5_OutDir,_2472295dc_OutName}));
}



inline void _24766ae3a_applyTargetIndependentOptimizations(jule::Ptr<_2476b22e4_IR>& _20545_ir) {
	jule::Ptr<_2477b3835_Optimizer> _20713_opt = static__2477132ac_New(_20545_ir);;
	_247760e53_Optimize(_20713_opt.ptr());
}



inline void _24766b06c_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _24267d419_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_21407427d:;
			{
				_247811410_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_214074a20:;
			{
				if (_24267d67d_CompilerPath.empty()) {
					_24267d67d_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_214074a86:;
			{
				if (_24267d67d_CompilerPath.empty()) {
					_24267d67d_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_2140749a9:;
			{
				_247811410_Throw((jule::Str("invalid option value for --compiler: ", 37) + _24267d419_Compiler));
			}
		}
		_match_end_21407437c:;
	};
}



inline void _24766b19e_checkTargetArch(jule::Str _22820_arch) {
	if ((((_22820_arch != jule::Str("amd64", 5)) && (_22820_arch != jule::Str("arm64", 5))) && (_22820_arch != jule::Str("i386", 4)))) {
		_247811410_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22820_arch));
	};
}



inline void _24766b2d1_checkTargetOs(jule::Str _23618_os) {
	if ((((_23618_os != jule::Str("windows", 7)) && (_23618_os != jule::Str("linux", 5))) && (_23618_os != jule::Str("darwin", 6)))) {
		_247811410_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23618_os));
	};
}



inline void _24766b413_checkTargetFlag(jule::Str& _24421_target) {
	if (_24421_target.empty()) {
		_247811410_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2499_parts = _2445b85e9_Split(_24421_target,jule::Str("-", 1),-1LL);;
	if ((_2499_parts.len() != 2LL)) {
		_247811410_Throw((jule::Str("--target: undefined platform target format: ", 44) + _24421_target));
	};
	jule::Str _25410_os = _2499_parts[0LL];;
	jule::Str _25414_arch = _2499_parts[1LL];;
	std::tie(_25410_os,_25414_arch) = std::make_tuple(_2499_parts[0LL],_2499_parts[1LL]);
	if ((_25410_os != jule::Str("native", 6))) {
		_24766b2d1_checkTargetOs(_25410_os);
		_24468a237_Os=_25410_os;
	};
	if ((_25414_arch != jule::Str("native", 6))) {
		_24766b19e_checkTargetArch(_25414_arch);
		_244679710_Arch=_25414_arch;
	};
	_2465c4dd9_UpdateTarget();
}



inline void _24766b545_checkOptFlag(jule::Str& _26718_opt) {
	if (_26718_opt.empty()) {
		_247811410_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _26718_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_21407cc04:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_21407d254:;
			{
				_245196748_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_21407ca8e:;
			{
				_247811410_Throw((jule::Str("--opt: invalid optimization level: ", 35) + _26718_opt));
			}
		}
		_match_end_21407ca39:;
	};
}



inline void _24766b8a8_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _24267d8e2_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_21407d2ba:;
			{
				goto _match_end_21407dd9d;
			}
		}
		else {
			_case_begin_21407de58:;
			{
				_247811410_Throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _24267d8e2_CppStd));
			}
		}
		_match_end_21407dd9d:;
	};
}



inline jule::Slice<jule::Str> _24766b9da_checkFlags(jule::Slice<jule::Str>& _29216_args) {
	jule::Str _29313_opt = jule::Str("L0", 2);;
	jule::Str _29413_target = jule::Str("native-native", 13);;
	jule::Ptr<_247666919_FlagSet> _29613_fs = static__247666c05_New();;
	_214081950_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29313_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_214081950_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29413_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_214081950_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_247239652_Out)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_21408aa9c_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_24267db56_Shadowing)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_21408aa9c_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_24267ddba_Transpilation)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_214081950_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_24267d419_Compiler)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_214081950_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_24267d67d_CompilerPath)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_21408aa9c_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_24267eb8a_Production)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_21408aa9c_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_24267e45e_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_21408aa9c_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_24267e87c_Safety)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_214081950_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_24267d8e2_CppStd)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_21408aa9c_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2449a74ee_Copy)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_21408aa9c_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2449aba31_Deadcode)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_21408aa9c_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2449957b7_Append)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_21408aa9c_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2449d10d8_Math)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_21408aa9c_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2449d9311_Access)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_21408aa9c_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2449dc2d1_Inline)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_21408aa9c_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2449dc6ee_Ptr)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_21408aa9c_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2449dd0e5_Cond)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _31813_content = ({
		auto except = _247667a19_Parse(_29613_fs.ptr(), _29216_args);
		(except.ok()) ? (except.result) : ({
			_247811410_Throw(except.error.operator jule::Str());
			nullptr;
		});
	});;
	_24766b06c_checkCompilerFlag();
	_24766b8a8_checkCppStdFlag();
	_24766b413_checkTargetFlag(_29413_target);
	_24766b545_checkOptFlag(_29313_opt);
	return _31813_content;
}



inline void _24766bb1c_setupSemaFlags(jule::I64& _33124_flags) {
	if (_24267db56_Shadowing) {
		_33124_flags|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_2476b22e4_IR> _24766bc4e_buildIr(jule::Slice<jule::Str>& _33713_args) {
	jule::Slice<jule::Str> _3389_content = _24766b9da_checkFlags(_33713_args);;
	jule::I64 _34013_semaFlags = static_cast<jule::I64>(0LL);;
	_24766bb1c_setupSemaFlags(_34013_semaFlags);
	if ((_3389_content.len() == 0LL)) {
		_247811410_Throw(_2446412a9_Logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3389_content.len() > 1LL)) {
		_247811410_Throw((jule::Str("undefined content: ", 19) + _3389_content[1LL]));
	};
	jule::Str _34814_path;;
	jule::Bool _34820_ok;;
	std::tie(_34814_path,_34820_ok) = _24362dd25_Abs(_3389_content[0LL]);
	if ((!(_34820_ok))) {
		_247811410_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_243528703_Status> _3549_inf = ({
		auto except = static__2427535dd_Of(_244679a95_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_247811410_Throw(_2446412a9_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
		} jule::Ptr<_243528703_Status>(nullptr);});
	});;
	if ((!(_24275d98e_IsDir(_3549_inf.ptr())))) {
		_247811410_Throw(_2446412a9_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_2476b22e4_IR> _36214_ir;;
	jule::Slice<_244640d69_Log> _36218_logs;;
	std::tie(_36214_ir,_36218_logs) = static__2476b2778_Build(_34814_path,_34013_semaFlags);
	if (((_36214_ir == nullptr) && (_36218_logs == nullptr))) {
		_247811410_Throw(_2446412a9_Logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>::make({jule::Any(_34814_path)})));
	};
	if ((_36218_logs != nullptr)) {
		static__247810992_PrintLogs(_36218_logs);
		_247811410_Throw(jule::Str());
	};
	return _36214_ir;
}



inline void _24766bd81_compileCommand(jule::Slice<jule::Str>& _37724_args) {
	_37724_args=_37724_args.slice(1LL);
	if ((_37724_args[0LL] == jule::Str("test", 4))) {
		_24267e162_Test=true;
		_37724_args=_37724_args.slice(1LL);
	};
	jule::Ptr<_2476b22e4_IR> _38313_ir = _24766bc4e_buildIr(_37724_args);;
	;
	if ((!(_24267e162_Test))) {
		jule::Ptr<_246cab768_Fn> _38817_main = _246ce4bd0_FindFn(_38313_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
		if ((_38817_main == nullptr)) {
			_247811410_Throw(_2446412a9_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
	};
	_24766ae3a_applyTargetIndependentOptimizations(_38313_ir);
	_2476b369c_Order(_38313_ir.ptr());
	jule::Str _39910_compiler;;
	jule::Str _39920_compilerCmd;;
	std::tie(_39910_compiler,_39920_compilerCmd) = _24766abc6_genCompileCmd(_24766ad08_getCompilePath(),_38313_ir);
	jule::Ptr<_2113423d9_ObjectCoder> _40113_oc = static__2112d25aa_New(_38313_ir,_2112a810d_SerializationInfo{._field_Compiler=_39910_compiler, ._field_CompilerCommand=_39920_compilerCmd});;
	if (_24267e162_Test) {
		jule::Ptr<_21129cb5d_TestCoder> _40617_tc = static__21129d0d1_New(_40113_oc);;
		_21129e313_Serialize(_40617_tc);
	} else {
		_211345200_Serialize(_40113_oc);
	};
	jule::Str _4129_path = _24766ad08_getCompilePath();;
	jule::Ptr<_24282ac48_File> _41313_file = _244711d19_openOutput(_4129_path);;
	({
		auto except = _2427388e2_Write(_41313_file.ptr(), static_cast<jule::Slice<jule::U8>>(_40113_oc.get()._field_Obj));
		if (!except.ok()) {
			_247811410_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _24275c30b_Close(_41313_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:417:5"));
	});
	if ((!(_24267ddba_Transpilation))) {
		_24766a6ed_compileIr(_39910_compiler,_39920_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_244652a5c_init();
	_2465d249b_init();
	_2447106ca_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}