// Auto generated by JuleC.
// JuleC version: beta 0.0.6 @master
// Date: 12/10/2023 20.19 (DD/MM/YYYY) (HH.MM) UTC
//
// Recommended Compile Command;
// clang++ -O0 -Wno-everything --std=c++17 dist/ir.cpp

#include "api/jule.hpp"                                   

#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <time.h>
#include "std/jule/integrated/integrated.hpp"                                   
#include "std/sys/syscall_unix.hpp"                                   

struct _1e4ee54e8_Importer;
struct _1e6420856_Kind;
struct _1e5425ab0_Lookup;
struct _1e249dae7_CommonFlag;

struct _1e240937c_AnsiEscape;


struct _1e240937c_Logger;


struct _1e2517b61_LazyBuff;


struct _1e24777a2_Log;


struct _1e3b6c072_bits_error;


struct _1e2495d64_FloatInfo;


struct _1e2495d64_DecimalSlice;


struct _1e34a359b_LeftCheat;


struct _1e34a359b_Decimal;


struct _1e3cd67d5_FoldPair;


struct _1e3cd67d5_CaseRange;


struct _1e3cd67d5_Range16;


struct _1e3cd67d5_Range32;


struct _1e3cd67d5_RangeTable;


struct _1e3cc002c_accept_range;


struct _1e4789980_DirEntry;


struct _1e4789980_Directory;


struct _1e479bce4_File;


struct _1e4798395_Status;


struct _1e3bad8dd_Token;


struct _1e3beedd5_File;


struct _1e390539e_KindPair;


struct _1e390539e_Lex;


struct _1e38d45c0_Ast;


struct _1e38d4ec7_CommentGroup;


struct _1e38d4ec7_NamespaceTypeDecl;


struct _1e38d4ec7_SptrTypeDecl;


struct _1e38d4ec7_SlcTypeDecl;


struct _1e38d4ec7_TupleTypeDecl;


struct _1e38d4ec7_PtrTypeDecl;


struct _1e38d4ec7_ArrTypeDecl;


struct _1e38d4ec7_MapTypeDecl;


struct _1e38d4ec7_RetTypeDecl;


struct _1e38d4ec7_TupleExpr;


struct _1e38d4ec7_CastExpr;


struct _1e38d4ec7_StructLit;


struct _1e38d4ec7_ScopeTree;


struct _1e38d4ec7_Conditional;


struct _1e396d626_FileInfo;


struct _1e396d626_PackageInfo;


struct _1e3c61e36_Stmt;


struct _1e3c61e36_ScopeParser;


struct _1e3ca6387_CallData;


struct _1e3ca6387_Precedencer;


struct _1e3ca6387_ExprBuilder;


struct _1e4a02445_Parser;


struct _1e4a2bb9a_TypeBuilder;


struct _1c8b9b83b_Const;


struct _1e398ee72_FieldIns;


struct _1e398ee72_StructIns;


struct _1e4b15a20_RetType;


struct _1e4b15a20_ParamIns;


struct _1e4b15a20_FnIns;


struct _1e4cc167b_ReferenceStack;


struct _1e4cc167b_SymbolBuilder;


struct _1e4d6ee22_Scope;


struct _1e4d6ee22_If;


struct _1e4d6ee22_Else;


struct _1e4d6ee22_Conditional;


struct _1e4d6ee22_InfIter;


struct _1e4d6ee22_WhileIter;


struct _1e4d6ee22_RangeIter;


struct _1e4d6ee22_ContSt;


struct _1e4d6ee22_BreakSt;


struct _1e4d6ee22_Label;


struct _1e4d6ee22_GotoSt;


struct _1e4d6ee22_Postfix;


struct _1e4d6ee22_Assign;


struct _1e4d6ee22_MultiAssign;


struct _1e4d6ee22_Match;


struct _1e4d6ee22_Case;


struct _1e4d6ee22_FallSt;


struct _1e4d6ee22_RetSt;


struct _1e4d6ee22_Recover;


struct _1e4d6ee22_ScopeGoto;


struct _1e4d6ee22_ScopeChecker;


struct _1e4d70a6b_BinopExprModel;


struct _1e4d70a6b_UnaryExprModel;


struct _1e4d70a6b_StructArgExprModel;


struct _1e4d70a6b_StructLitExprModel;


struct _1e4d70a6b_AllocStructLitExprModel;


struct _1e4d70a6b_CastingExprModel;


struct _1e4d70a6b_FnCallExprModel;


struct _1e4d70a6b_SliceExprModel;


struct _1e4d70a6b_IndexigExprModel;


struct _1e4d70a6b_AnonFnExprModel;


struct _1e4d70a6b_KeyValPairExprModel;


struct _1e4d70a6b_MapExprModel;


struct _1e4d70a6b_SlicingExprModel;


struct _1e4d70a6b_TraitSubIdentExprModel;


struct _1e4d70a6b_StructSubIdentExprModel;


struct _1e4d70a6b_StructStaticIdentExprModel;


struct _1e4d70a6b_ArrayExprModel;


struct _1e4d70a6b_CommonIdentExprModel;


struct _1e4d70a6b_CommonSubIdentExprModel;


struct _1e4d70a6b_TupleExprModel;


struct _1e4d70a6b_BuiltinOutCallExprModel;


struct _1e4d70a6b_BuiltinOutlnCallExprModel;


struct _1e4d70a6b_BuiltinCloneCallExprModel;


struct _1e4d70a6b_BuiltinNewCallExprModel;


struct _1e4d70a6b_BuiltinRealCallExprModel;


struct _1e4d70a6b_BuiltinDropCallExprModel;


struct _1e4d70a6b_BuiltinPanicCallExprModel;


struct _1e4d70a6b_BuiltinMakeCallExprModel;


struct _1e4d70a6b_BuiltinAppendCallExprModel;


struct _1e4d70a6b_BuiltinErrorTraitSubIdentExprModel;


struct _1e4d70a6b_SizeofExprModel;


struct _1e4d70a6b_AlignofExprModel;


struct _1e4d70a6b_RuneExprModel;


struct _1e4d70a6b_IntegratedToStrExprModel;


struct _1e4d70a6b_TernaryExprModel;


struct _1e4d6cb45_DirectiveChecker;


struct _1e4ee54e8_Package;


struct _1e5054722_Sema;


struct _1e50b0492_IterRelation;


struct _1e522c29b_RangeChecker;


struct _1e5291035_SymbolTable;


struct _1e50ac4b1_Data;


struct _1e50ac4b1_Value;


struct _1e50ac4b1_Eval;


struct _1e6420856_TypeKind;


struct _1e6420856_TypeSymbol;


struct _1e6420856_Prim;


struct _1e6420856_Sptr;


struct _1e6420856_Slc;


struct _1e6420856_Tuple;


struct _1e6420856_Map;


struct _1e6420856_Arr;


struct _1e6420856_Ptr;


struct _1e6420856_Referencer;


struct _1e359ad25_DirectiveEval;


struct _1e36c2a1d_PlainImporter;


struct _1e354d019_OrderedDefines;


struct _1e354d019_DefineOrderer;


struct _1e39716e5_ScopeDeadCode;


struct _1c9110233_AbsTime;


struct _1c9110233_Time;


struct _1c9110233_Duration;


struct _1e249dae7_Flag_0;

struct _1e249dae7_Flag_1;

struct _1e249dae7_Flag_2;

struct _1e249dae7_Flag_3;

struct _1e249dae7_Flag_4;


struct _1e249dae7_FlagSet;


struct _1e38d4ec7_UseDecl;


struct _1e38d4ec7_EnumItemDecl;


struct _1e38d4ec7_EnumDecl;


struct _1e38d4ec7_FieldDecl;


struct _1e38d4ec7_StructDecl;


struct _1e38d4ec7_TraitDecl;


struct _1e38d4ec7_Impl;


struct _1e38d4ec7_Expr;


struct _1e38d4ec7_TypeDecl;


struct _1e38d4ec7_LitExpr;


struct _1e38d4ec7_UnsafeExpr;


struct _1e38d4ec7_IdentExpr;


struct _1e38d4ec7_UnaryExpr;


struct _1e38d4ec7_VariadicExpr;


struct _1e3ca4682_AssignInfo;


struct _1e38d4ec7_IdentTypeDecl;


struct _1e38d4ec7_NsSelectionExpr;


struct _1e38d4ec7_SubIdentExpr;


struct _1e398ee72_Field;


struct _1e398ee72_Struct;


struct _1e38d4ec7_BinopExpr;


struct _1e38d4ec7_FnCallExpr;


struct _1e38d4ec7_FieldExprPair;


struct _1e4b15a20_Param;


struct _1e4b15a20_Fn;


struct _1e38d4ec7_Node;


struct _1e38d4ec7_BraceLit;


struct _1e38d4ec7_KeyValPair;


struct _1e4cc167b_Pass;


struct _1e38d4ec7_SliceExpr;


struct _1e4d61232_Trait;


struct _1e4d62387_EnumItem;


struct _1e4ee54e8_ImportInfo;


struct _1e4d62387_Enum;


struct _1e39e721b_Impl;


struct _1e38d4ec7_IndexingExpr;


struct _1e50b0492_Var;


struct _1e522c29b_TypeCompatibilityChecker;


struct _1e522c29b_AssignTypeChecker;


struct _1e522c29b_DynamicTypeAnnotation;


struct _1e522c29b_FnCallArgChecker;


struct _1e522c29b_StructLitChecker;


struct _1e38d4ec7_SlicingExpr;


struct _1e522c29b_RetTypeChecker;


struct _1e38d4ec7_TernaryExpr;


struct _1e38d4ec7_GenericDecl;


struct _1e38d4ec7_LabelSt;


struct _1e38d4ec7_GotoSt;


struct _1e50ac4b1_BinopSolver;


struct _1e6420856_TypeAlias;


struct _1e38d4ec7_FallSt;


struct _1e38d4ec7_AssignLeft;


struct _1e38d4ec7_AssignSt;


struct _1e38d4ec7_Comment;


struct _1e38d4ec7_ParamDecl;


struct _1e38d4ec7_FnDecl;


struct _1e38d4ec7_VarDecl;


struct _1e38d4ec7_RetSt;


struct _1e38d4ec7_Iter;


struct _1e38d4ec7_WhileKind;


struct _1e6420856_TypeChecker;


struct _1e38d4ec7_RangeKind;


struct _1e38d4ec7_BreakSt;


struct _1e376ec74_IR;


struct _1e38d4ec7_ContSt;


struct _1e4d6ee22_ScopeLabel;


struct _1e38d4ec7_If;


struct _1e38d4ec7_Else;


struct _1e38d4ec7_Directive;


struct _1e38d4ec7_TypeAliasDecl;


struct _1e38d4ec7_Case;


struct _1e38d4ec7_MatchCase;


struct _1e249dae7_ArgParser;

struct _1e4ee54e8_Importer {
	virtual ~_1e4ee54e8_Importer(void) {}

	virtual jule::Ptr<_1e4ee54e8_ImportInfo> _method_get_import(jule::Str _1633_path) { return {}; }
	virtual std::tuple<jule::Slice<jule::Ptr<_1e38d45c0_Ast>>,jule::Slice<_1e24777a2_Log>> _method_import_package(jule::Str _2037_path) { return {}; }
	virtual void _method_imported(jule::Ptr<_1e4ee54e8_ImportInfo>) {}
};

struct _1e6420856_Kind {
	virtual ~_1e6420856_Kind(void) {}

	virtual jule::Str _method_to_str(void) { return {}; }
	virtual jule::Bool _method_equals(jule::Ptr<_1e6420856_TypeKind> _4722_other) { return {}; }
};

struct _1e5425ab0_Lookup {
	virtual ~_1e5425ab0_Lookup(void) {}

	virtual jule::Ptr<_1e4ee54e8_ImportInfo> _method_find_package(jule::Str _935_ident) { return {}; }
	virtual jule::Ptr<_1e4ee54e8_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1e4ee54e8_ImportInfo>)> _1337_selector) { return {}; }
	virtual jule::Ptr<_1e50b0492_Var> _method_find_var(jule::Str _1731_ident,jule::Bool _1743_cpp_linked) { return {}; }
	virtual jule::Ptr<_1e6420856_TypeAlias> _method_find_type_alias(jule::Str _2138_ident,jule::Bool _2150_cpp_linked) { return {}; }
	virtual jule::Ptr<_1e398ee72_Struct> _method_find_struct(jule::Str _2534_ident,jule::Bool _2546_cpp_linked) { return {}; }
	virtual jule::Ptr<_1e4b15a20_Fn> _method_find_fn(jule::Str _2930_ident,jule::Bool _2942_cpp_linked) { return {}; }
	virtual jule::Ptr<_1e4d61232_Trait> _method_find_trait(jule::Str _3333_ident) { return {}; }
	virtual jule::Ptr<_1e4d62387_Enum> _method_find_enum(jule::Str _3732_ident) { return {}; }
};

struct _1e249dae7_CommonFlag {
	virtual ~_1e249dae7_CommonFlag(void) {}

	virtual jule::Str _method_name(void) { return {}; }
	virtual jule::I32 _method_short(void) { return {}; }
	virtual jule::Str _method_what(void) { return {}; }
	virtual void _method_reset(void) {}
};


struct _1e240937c_AnsiEscape {
	

	_1e240937c_AnsiEscape(void) = default;

	static inline void _static_method_reset(void);


	static inline void _static_method_print(jule::Str,jule::Str);


	inline bool operator==(const _1e240937c_AnsiEscape &_Src) const { return true; }

	inline bool operator!=(const _1e240937c_AnsiEscape &_Src) const { return !this->operator==(_Src); }
};


struct _1e240937c_Logger {
	

	_1e240937c_Logger(void) = default;

	static inline void _static_method_log_flat(_1e24777a2_Log&);


	static inline void _static_method_log_error(_1e24777a2_Log&);


	static inline void _static_method_log(_1e24777a2_Log&);


	static inline void _static_method_print_logs(jule::Slice<_1e24777a2_Log>&);


	inline bool operator==(const _1e240937c_Logger &_Src) const { return true; }

	inline bool operator!=(const _1e240937c_Logger &_Src) const { return !this->operator==(_Src); }
};


struct _1e2517b61_LazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::Int _field_w = jule::Int();
	jule::Str _field_vol_and_path = jule::Str();
	jule::Int _field_vol_len = jule::Int();


	_1e2517b61_LazyBuff(jule::Str __param_path, jule::Slice<jule::U8> __param_buff, jule::Int __param_w, jule::Str __param_vol_and_path, jule::Int __param_vol_len): _field_path(__param_path), _field_buff(__param_buff), _field_w(__param_w), _field_vol_and_path(__param_vol_and_path), _field_vol_len(__param_vol_len) {}

	

	_1e2517b61_LazyBuff(void) = default;

	inline jule::U8 _method_index(jule::Int);


	inline void _method_append(jule::U8);


	inline jule::Str _method_string(void);


	inline bool operator==(const _1e2517b61_LazyBuff &_Src) const {
		return 
			this->_field_path == _Src._field_path &&
			this->_field_buff == _Src._field_buff &&
			this->_field_w == _Src._field_w &&
			this->_field_vol_and_path == _Src._field_vol_and_path &&
			this->_field_vol_len == _Src._field_vol_len;
	}

	inline bool operator!=(const _1e2517b61_LazyBuff &_Src) const { return !this->operator==(_Src); }
};


struct _1e24777a2_Log {
	jule::Int _field_kind = 0LLU;
	jule::Int _field_row = jule::Int();
	jule::Int _field_column = jule::Int();
	jule::Str _field_path = jule::Str();
	jule::Str _field_text = jule::Str();
	jule::Str _field_line = jule::Str();
	jule::Str _field_suggestion = jule::Str();


	_1e24777a2_Log(jule::Int __param_kind, jule::Int __param_row, jule::Int __param_column, jule::Str __param_path, jule::Str __param_text, jule::Str __param_line, jule::Str __param_suggestion): _field_kind(__param_kind), _field_row(__param_row), _field_column(__param_column), _field_path(__param_path), _field_text(__param_text), _field_line(__param_line), _field_suggestion(__param_suggestion) {}

	

	_1e24777a2_Log(void) = default;

	inline bool operator==(const _1e24777a2_Log &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_path == _Src._field_path &&
			this->_field_text == _Src._field_text &&
			this->_field_line == _Src._field_line &&
			this->_field_suggestion == _Src._field_suggestion;
	}

	inline bool operator!=(const _1e24777a2_Log &_Src) const { return !this->operator==(_Src); }
};


struct _1e3b6c072_bits_error: public jule::Error {
	jule::Str _field_message = jule::Str();


	_1e3b6c072_bits_error(jule::Str __param_message): _field_message(__param_message) {}

	

	_1e3b6c072_bits_error(void) = default;

	inline jule::Str _method_error(void);


	inline bool operator==(const _1e3b6c072_bits_error &_Src) const {
		return 
			this->_field_message == _Src._field_message;
	}

	inline bool operator!=(const _1e3b6c072_bits_error &_Src) const { return !this->operator==(_Src); }
};


struct _1e2495d64_FloatInfo {
	jule::Uint _field_mantbits = jule::Uint();
	jule::Uint _field_expbits = jule::Uint();
	jule::Int _field_bias = jule::Int();


	_1e2495d64_FloatInfo(jule::Uint __param_mantbits, jule::Uint __param_expbits, jule::Int __param_bias): _field_mantbits(__param_mantbits), _field_expbits(__param_expbits), _field_bias(__param_bias) {}

	

	_1e2495d64_FloatInfo(void) = default;

	inline bool operator==(const _1e2495d64_FloatInfo &_Src) const {
		return 
			this->_field_mantbits == _Src._field_mantbits &&
			this->_field_expbits == _Src._field_expbits &&
			this->_field_bias == _Src._field_bias;
	}

	inline bool operator!=(const _1e2495d64_FloatInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1e2495d64_DecimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::Int _field_nd = jule::Int();
	jule::Int _field_dp = jule::Int();
	jule::Bool _field_neg = jule::Bool();


	_1e2495d64_DecimalSlice(jule::Slice<jule::U8> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg) {}

	

	_1e2495d64_DecimalSlice(void) = default;

	inline bool operator==(const _1e2495d64_DecimalSlice &_Src) const {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg;
	}

	inline bool operator!=(const _1e2495d64_DecimalSlice &_Src) const { return !this->operator==(_Src); }
};


struct _1e34a359b_LeftCheat {
	jule::Int _field_delta = jule::Int();
	jule::Str _field_cutoff = jule::Str();


	_1e34a359b_LeftCheat(jule::Int __param_delta, jule::Str __param_cutoff): _field_delta(__param_delta), _field_cutoff(__param_cutoff) {}

	

	_1e34a359b_LeftCheat(void) = default;

	inline bool operator==(const _1e34a359b_LeftCheat &_Src) const {
		return 
			this->_field_delta == _Src._field_delta &&
			this->_field_cutoff == _Src._field_cutoff;
	}

	inline bool operator!=(const _1e34a359b_LeftCheat &_Src) const { return !this->operator==(_Src); }
};


struct _1e34a359b_Decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::Int _field_nd = jule::Int();
	jule::Int _field_dp = jule::Int();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();


	_1e34a359b_Decimal(jule::Array<jule::U8,800> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg, jule::Bool __param_trunc): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg), _field_trunc(__param_trunc) {}

	

	_1e34a359b_Decimal(void) = default;

	inline jule::Bool _method_set(jule::Str);


	inline std::tuple<jule::U64,jule::Bool> _method_float_bits(_1e2495d64_FloatInfo&);


	inline void _method_assign(jule::U64);


	inline void _method_shift(jule::Int);


	inline void _method_round_down(jule::Int);


	inline void _method_round_up(jule::Int);


	inline void _method_round(jule::Int);


	inline jule::U64 _method_rounded_integer(void);


	inline bool operator==(const _1e34a359b_Decimal &_Src) const {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg &&
			this->_field_trunc == _Src._field_trunc;
	}

	inline bool operator!=(const _1e34a359b_Decimal &_Src) const { return !this->operator==(_Src); }
};


struct _1e3cd67d5_FoldPair {
	jule::U16 _field_from = jule::U16();
	jule::U16 _field_to = jule::U16();


	_1e3cd67d5_FoldPair(jule::U16 __param_from, jule::U16 __param_to): _field_from(__param_from), _field_to(__param_to) {}

	

	_1e3cd67d5_FoldPair(void) = default;

	inline bool operator==(const _1e3cd67d5_FoldPair &_Src) const {
		return 
			this->_field_from == _Src._field_from &&
			this->_field_to == _Src._field_to;
	}

	inline bool operator!=(const _1e3cd67d5_FoldPair &_Src) const { return !this->operator==(_Src); }
};


struct _1e3cd67d5_CaseRange {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::Array<jule::I32,3> _field_delta = jule::Array<jule::I32,3>();


	_1e3cd67d5_CaseRange(jule::U32 __param_lo, jule::U32 __param_hi, jule::Array<jule::I32,3> __param_delta): _field_lo(__param_lo), _field_hi(__param_hi), _field_delta(__param_delta) {}

	

	_1e3cd67d5_CaseRange(void) = default;

	inline bool operator==(const _1e3cd67d5_CaseRange &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_delta == _Src._field_delta;
	}

	inline bool operator!=(const _1e3cd67d5_CaseRange &_Src) const { return !this->operator==(_Src); }
};


struct _1e3cd67d5_Range16 {
	jule::U16 _field_lo = jule::U16();
	jule::U16 _field_hi = jule::U16();
	jule::U16 _field_stride = jule::U16();


	_1e3cd67d5_Range16(jule::U16 __param_lo, jule::U16 __param_hi, jule::U16 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_1e3cd67d5_Range16(void) = default;

	inline bool operator==(const _1e3cd67d5_Range16 &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_stride == _Src._field_stride;
	}

	inline bool operator!=(const _1e3cd67d5_Range16 &_Src) const { return !this->operator==(_Src); }
};


struct _1e3cd67d5_Range32 {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::U32 _field_stride = jule::U32();


	_1e3cd67d5_Range32(jule::U32 __param_lo, jule::U32 __param_hi, jule::U32 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_1e3cd67d5_Range32(void) = default;

	inline bool operator==(const _1e3cd67d5_Range32 &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_stride == _Src._field_stride;
	}

	inline bool operator!=(const _1e3cd67d5_Range32 &_Src) const { return !this->operator==(_Src); }
};


struct _1e3cd67d5_RangeTable {
	jule::Slice<_1e3cd67d5_Range16> _field_r16 = jule::Slice<_1e3cd67d5_Range16>();
	jule::Slice<_1e3cd67d5_Range32> _field_r32 = jule::Slice<_1e3cd67d5_Range32>();
	jule::Int _field_latin_offset = jule::Int();


	_1e3cd67d5_RangeTable(jule::Slice<_1e3cd67d5_Range16> __param_r16, jule::Slice<_1e3cd67d5_Range32> __param_r32, jule::Int __param_latin_offset): _field_r16(__param_r16), _field_r32(__param_r32), _field_latin_offset(__param_latin_offset) {}

	

	_1e3cd67d5_RangeTable(void) = default;

	inline bool operator==(const _1e3cd67d5_RangeTable &_Src) const {
		return 
			this->_field_r16 == _Src._field_r16 &&
			this->_field_r32 == _Src._field_r32 &&
			this->_field_latin_offset == _Src._field_latin_offset;
	}

	inline bool operator!=(const _1e3cd67d5_RangeTable &_Src) const { return !this->operator==(_Src); }
};


struct _1e3cc002c_accept_range {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();


	_1e3cc002c_accept_range(jule::U8 __param_lo, jule::U8 __param_hi): _field_lo(__param_lo), _field_hi(__param_hi) {}

	

	_1e3cc002c_accept_range(void) = default;

	inline bool operator==(const _1e3cc002c_accept_range &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi;
	}

	inline bool operator!=(const _1e3cc002c_accept_range &_Src) const { return !this->operator==(_Src); }
};


struct _1e4789980_DirEntry {
	jule::Str _field_name = jule::Str();
	jule::Ptr<_1e4798395_Status> _field_stat = jule::Ptr<_1e4798395_Status>();


	_1e4789980_DirEntry(jule::Str __param_name, jule::Ptr<_1e4798395_Status> __param_stat): _field_name(__param_name), _field_stat(__param_stat) {}

	

	_1e4789980_DirEntry(void) = default;

	inline bool operator==(const _1e4789980_DirEntry &_Src) const {
		return 
			this->_field_name == _Src._field_name &&
			this->_field_stat == _Src._field_stat;
	}

	inline bool operator!=(const _1e4789980_DirEntry &_Src) const { return !this->operator==(_Src); }
};


struct _1e4789980_Directory {
	

	_1e4789980_Directory(void) = default;

	static inline std::tuple<jule::Slice<jule::Ptr<_1e4789980_DirEntry>>,jule::Int> _static_method_read(jule::Str);


	static inline jule::Int _static_method_create(jule::Str);


	static inline jule::Int _static_method_remove(jule::Str);


	inline bool operator==(const _1e4789980_Directory &_Src) const { return true; }

	inline bool operator!=(const _1e4789980_Directory &_Src) const { return !this->operator==(_Src); }
};


struct _1e479bce4_File {
	jule::Uintptr _field_handle = jule::Uintptr();


	_1e479bce4_File(jule::Uintptr __param_handle): _field_handle(__param_handle) {}

	

	_1e479bce4_File(void) = default;

	static inline std::tuple<jule::Ptr<_1e479bce4_File>,jule::Int> _static_method_open(jule::Str,jule::Int,jule::Int);


	static inline jule::Int _static_method_remove(jule::Str);


	inline std::tuple<jule::Int,jule::Int> _method_write(jule::Slice<jule::U8>);


	inline std::tuple<jule::Int,jule::Int> _method_read(jule::Slice<jule::U8>);


	static inline jule::Ptr<_1e479bce4_File> _static_method_new(jule::Uintptr);


	static inline std::tuple<jule::Ptr<_1e479bce4_File>,jule::Int> _static_method_create(jule::Str);


	static inline std::tuple<jule::Slice<jule::U8>,jule::Int> _static_method_read(jule::Str);


	static inline jule::Int _static_method_write(jule::Str,jule::Slice<jule::U8>,jule::Int);


	inline std::tuple<jule::I64,jule::Int> _method_seek(jule::I64,jule::Int);


	inline jule::Int _method_close(void);


	inline bool operator==(const _1e479bce4_File &_Src) const {
		return 
			this->_field_handle == _Src._field_handle;
	}

	inline bool operator!=(const _1e479bce4_File &_Src) const { return !this->operator==(_Src); }
};


struct _1e4798395_Status {
	jule::Uint _field_mode = jule::Uint();
	jule::Uint _field_size = jule::Uint();


	_1e4798395_Status(jule::Uint __param_mode, jule::Uint __param_size): _field_mode(__param_mode), _field_size(__param_size) {}

	

	_1e4798395_Status(void) = default;

	static inline std::tuple<jule::Ptr<_1e4798395_Status>,jule::Int> _static_method_of(jule::Str);


	inline jule::Bool _method_is_dir(void);


	inline jule::Bool _method_is_reg(void);


	inline bool operator==(const _1e4798395_Status &_Src) const {
		return 
			this->_field_mode == _Src._field_mode &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _1e4798395_Status &_Src) const { return !this->operator==(_Src); }
};


struct _1e3bad8dd_Token {
	jule::Ptr<_1e3beedd5_File> _field_file = jule::Ptr<_1e3beedd5_File>();
	jule::Int _field_row = jule::Int();
	jule::Int _field_column = jule::Int();
	jule::Str _field_kind = jule::Str();
	jule::Uint _field_id = 0LLU;


	_1e3bad8dd_Token(jule::Ptr<_1e3beedd5_File> __param_file, jule::Int __param_row, jule::Int __param_column, jule::Str __param_kind, jule::Uint __param_id): _field_file(__param_file), _field_row(__param_row), _field_column(__param_column), _field_kind(__param_kind), _field_id(__param_id) {}

	

	_1e3bad8dd_Token(void) = default;

	inline jule::Int _method_prec(void);


	inline bool operator==(const _1e3bad8dd_Token &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _1e3bad8dd_Token &_Src) const { return !this->operator==(_Src); }
};


struct _1e3beedd5_File {
	jule::Slice<jule::U8> _field_data = jule::Slice<jule::U8>();
	jule::Str _field__path = jule::Str();
	jule::Slice<_1e3bad8dd_Token> _field__tokens = jule::Slice<_1e3bad8dd_Token>();


	_1e3beedd5_File(jule::Slice<jule::U8> __param_data, jule::Str __param__path, jule::Slice<_1e3bad8dd_Token> __param__tokens): _field_data(__param_data), _field__path(__param__path), _field__tokens(__param__tokens) {}

	

	_1e3beedd5_File(void) = default;

	inline jule::Bool _method_is_ok(void);


	inline void _method_fill(jule::Slice<jule::U8>);


	inline jule::Str _method_path(void);


	inline jule::Str _method_dir(void);


	inline jule::Str _method_name(void);


	inline jule::Uintptr _method_addr(void);


	inline jule::Slice<_1e3bad8dd_Token> _method_tokens(void);


	inline jule::Str _method_get_row(jule::Int);


	inline bool operator==(const _1e3beedd5_File &_Src) const {
		return 
			this->_field_data == _Src._field_data &&
			this->_field__path == _Src._field__path &&
			this->_field__tokens == _Src._field__tokens;
	}

	inline bool operator!=(const _1e3beedd5_File &_Src) const { return !this->operator==(_Src); }
};


struct _1e390539e_KindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::Uint _field_id = 0LLU;


	_1e390539e_KindPair(jule::Str __param_kind, jule::Uint __param_id): _field_kind(__param_kind), _field_id(__param_id) {}

	

	_1e390539e_KindPair(void) = default;

	inline bool operator==(const _1e390539e_KindPair &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _1e390539e_KindPair &_Src) const { return !this->operator==(_Src); }
};


struct _1e390539e_Lex {
	jule::Slice<_1e3bad8dd_Token> _field_tokens = jule::Slice<_1e3bad8dd_Token>();
	jule::Ptr<_1e3beedd5_File> _field_file = jule::Ptr<_1e3beedd5_File>();
	jule::Int _field_pos = jule::Int();
	jule::Int _field_column = jule::Int();
	jule::Int _field_row = jule::Int();
	jule::Slice<_1e24777a2_Log> _field_errors = jule::Slice<_1e24777a2_Log>();


	_1e390539e_Lex(jule::Slice<_1e3bad8dd_Token> __param_tokens, jule::Ptr<_1e3beedd5_File> __param_file, jule::Int __param_pos, jule::Int __param_column, jule::Int __param_row, jule::Slice<_1e24777a2_Log> __param_errors): _field_tokens(__param_tokens), _field_file(__param_file), _field_pos(__param_pos), _field_column(__param_column), _field_row(__param_row), _field_errors(__param_errors) {}

	

	_1e390539e_Lex(void) = default;

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_tok(_1e3bad8dd_Token&,jule::Str);


	inline void _method_lex(void);


	inline jule::Str _method_id(jule::Slice<jule::U8>&);


	inline jule::Slice<jule::U8> _method_resume(void);


	inline void _method_lex_line_comment(_1e3bad8dd_Token&);


	inline void _method_lex_range_comment(void);


	inline jule::Str _method_num(jule::Slice<jule::U8>&);


	inline jule::Str _method_escape_seq(jule::Slice<jule::U8>&);


	inline jule::Str _method_get_rune(jule::Slice<jule::U8>&,jule::Bool);


	inline jule::Str _method_lex_rune(jule::Slice<jule::U8>&);


	inline jule::Str _method_lex_str(void);


	inline jule::Bool _method_is_first_token_of_line(void);


	inline void _method_new_line(void);


	inline jule::Bool _method_is_op(jule::Slice<jule::U8>&,jule::Str,jule::Uint,_1e3bad8dd_Token&);


	inline jule::Bool _method_lex_basic_ops(jule::Slice<jule::U8>,_1e3bad8dd_Token&);


	inline jule::Bool _method_lex_id(jule::Slice<jule::U8>&,_1e3bad8dd_Token&);


	inline jule::Bool _method_lex_num(jule::Slice<jule::U8>&,_1e3bad8dd_Token&);


	inline _1e3bad8dd_Token _method_token(void);


	inline bool operator==(const _1e390539e_Lex &_Src) const {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_file == _Src._field_file &&
			this->_field_pos == _Src._field_pos &&
			this->_field_column == _Src._field_column &&
			this->_field_row == _Src._field_row &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _1e390539e_Lex &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d45c0_Ast {
	jule::Ptr<_1e3beedd5_File> _field_file = jule::Ptr<_1e3beedd5_File>();
	jule::Slice<jule::Ptr<_1e38d4ec7_Directive>> _field_top_directives = jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>();
	jule::Slice<jule::Ptr<_1e38d4ec7_UseDecl>> _field_use_decls = jule::Slice<jule::Ptr<_1e38d4ec7_UseDecl>>();
	jule::Slice<jule::Ptr<_1e38d4ec7_Impl>> _field_impls = jule::Slice<jule::Ptr<_1e38d4ec7_Impl>>();
	jule::Slice<jule::Ptr<_1e38d4ec7_Comment>> _field_comments = jule::Slice<jule::Ptr<_1e38d4ec7_Comment>>();
	jule::Slice<_1e38d4ec7_Node> _field_decls = jule::Slice<_1e38d4ec7_Node>();


	_1e38d45c0_Ast(jule::Ptr<_1e3beedd5_File> __param_file, jule::Slice<jule::Ptr<_1e38d4ec7_Directive>> __param_top_directives, jule::Slice<jule::Ptr<_1e38d4ec7_UseDecl>> __param_use_decls, jule::Slice<jule::Ptr<_1e38d4ec7_Impl>> __param_impls, jule::Slice<jule::Ptr<_1e38d4ec7_Comment>> __param_comments, jule::Slice<_1e38d4ec7_Node> __param_decls): _field_file(__param_file), _field_top_directives(__param_top_directives), _field_use_decls(__param_use_decls), _field_impls(__param_impls), _field_comments(__param_comments), _field_decls(__param_decls) {}

	

	_1e38d45c0_Ast(void) = default;

	inline bool operator==(const _1e38d45c0_Ast &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_top_directives == _Src._field_top_directives &&
			this->_field_use_decls == _Src._field_use_decls &&
			this->_field_impls == _Src._field_impls &&
			this->_field_comments == _Src._field_comments &&
			this->_field_decls == _Src._field_decls;
	}

	inline bool operator!=(const _1e38d45c0_Ast &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_CommentGroup {
	jule::Slice<jule::Ptr<_1e38d4ec7_Comment>> _field_comments = jule::Slice<jule::Ptr<_1e38d4ec7_Comment>>();


	_1e38d4ec7_CommentGroup(jule::Slice<jule::Ptr<_1e38d4ec7_Comment>> __param_comments): _field_comments(__param_comments) {}

	

	_1e38d4ec7_CommentGroup(void) = default;

	inline bool operator==(const _1e38d4ec7_CommentGroup &_Src) const {
		return 
			this->_field_comments == _Src._field_comments;
	}

	inline bool operator!=(const _1e38d4ec7_CommentGroup &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_NamespaceTypeDecl {
	jule::Slice<_1e3bad8dd_Token> _field_idents = jule::Slice<_1e3bad8dd_Token>();
	jule::Ptr<_1e38d4ec7_IdentTypeDecl> _field_kind = jule::Ptr<_1e38d4ec7_IdentTypeDecl>();


	_1e38d4ec7_NamespaceTypeDecl(jule::Slice<_1e3bad8dd_Token> __param_idents, jule::Ptr<_1e38d4ec7_IdentTypeDecl> __param_kind): _field_idents(__param_idents), _field_kind(__param_kind) {}

	

	_1e38d4ec7_NamespaceTypeDecl(void) = default;

	inline bool operator==(const _1e38d4ec7_NamespaceTypeDecl &_Src) const {
		return 
			this->_field_idents == _Src._field_idents &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1e38d4ec7_NamespaceTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_SptrTypeDecl {
	jule::Ptr<_1e38d4ec7_TypeDecl> _field_elem = jule::Ptr<_1e38d4ec7_TypeDecl>();


	_1e38d4ec7_SptrTypeDecl(jule::Ptr<_1e38d4ec7_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1e38d4ec7_SptrTypeDecl(void) = default;

	inline bool operator==(const _1e38d4ec7_SptrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1e38d4ec7_SptrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_SlcTypeDecl {
	jule::Ptr<_1e38d4ec7_TypeDecl> _field_elem = jule::Ptr<_1e38d4ec7_TypeDecl>();


	_1e38d4ec7_SlcTypeDecl(jule::Ptr<_1e38d4ec7_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1e38d4ec7_SlcTypeDecl(void) = default;

	inline bool operator==(const _1e38d4ec7_SlcTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1e38d4ec7_SlcTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>> _field_types = jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>>();


	_1e38d4ec7_TupleTypeDecl(jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>> __param_types): _field_types(__param_types) {}

	

	_1e38d4ec7_TupleTypeDecl(void) = default;

	inline bool operator==(const _1e38d4ec7_TupleTypeDecl &_Src) const {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _1e38d4ec7_TupleTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_PtrTypeDecl {
	jule::Ptr<_1e38d4ec7_TypeDecl> _field_elem = jule::Ptr<_1e38d4ec7_TypeDecl>();


	_1e38d4ec7_PtrTypeDecl(jule::Ptr<_1e38d4ec7_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1e38d4ec7_PtrTypeDecl(void) = default;

	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _1e38d4ec7_PtrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1e38d4ec7_PtrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_ArrTypeDecl {
	jule::Ptr<_1e38d4ec7_TypeDecl> _field_elem = jule::Ptr<_1e38d4ec7_TypeDecl>();
	jule::Ptr<_1e38d4ec7_Expr> _field_size = jule::Ptr<_1e38d4ec7_Expr>();


	_1e38d4ec7_ArrTypeDecl(jule::Ptr<_1e38d4ec7_TypeDecl> __param_elem, jule::Ptr<_1e38d4ec7_Expr> __param_size): _field_elem(__param_elem), _field_size(__param_size) {}

	

	_1e38d4ec7_ArrTypeDecl(void) = default;

	inline jule::Bool _method_auto_sized(void);


	inline bool operator==(const _1e38d4ec7_ArrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _1e38d4ec7_ArrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_MapTypeDecl {
	jule::Ptr<_1e38d4ec7_TypeDecl> _field_key = jule::Ptr<_1e38d4ec7_TypeDecl>();
	jule::Ptr<_1e38d4ec7_TypeDecl> _field_val = jule::Ptr<_1e38d4ec7_TypeDecl>();


	_1e38d4ec7_MapTypeDecl(jule::Ptr<_1e38d4ec7_TypeDecl> __param_key, jule::Ptr<_1e38d4ec7_TypeDecl> __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1e38d4ec7_MapTypeDecl(void) = default;

	inline bool operator==(const _1e38d4ec7_MapTypeDecl &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _1e38d4ec7_MapTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_RetTypeDecl {
	jule::Ptr<_1e38d4ec7_TypeDecl> _field_kind = jule::Ptr<_1e38d4ec7_TypeDecl>();
	jule::Slice<_1e3bad8dd_Token> _field_idents = jule::Slice<_1e3bad8dd_Token>();


	_1e38d4ec7_RetTypeDecl(jule::Ptr<_1e38d4ec7_TypeDecl> __param_kind, jule::Slice<_1e3bad8dd_Token> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_1e38d4ec7_RetTypeDecl(void) = default;

	inline bool operator==(const _1e38d4ec7_RetTypeDecl &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _1e38d4ec7_RetTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_TupleExpr {
	jule::Slice<jule::Ptr<_1e38d4ec7_Expr>> _field_expr = jule::Slice<jule::Ptr<_1e38d4ec7_Expr>>();


	_1e38d4ec7_TupleExpr(jule::Slice<jule::Ptr<_1e38d4ec7_Expr>> __param_expr): _field_expr(__param_expr) {}

	

	_1e38d4ec7_TupleExpr(void) = default;

	inline bool operator==(const _1e38d4ec7_TupleExpr &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1e38d4ec7_TupleExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_CastExpr {
	jule::Ptr<_1e38d4ec7_TypeDecl> _field_kind = jule::Ptr<_1e38d4ec7_TypeDecl>();
	jule::Any _field_expr = jule::Any();


	_1e38d4ec7_CastExpr(jule::Ptr<_1e38d4ec7_TypeDecl> __param_kind, jule::Any __param_expr): _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_1e38d4ec7_CastExpr(void) = default;

	inline bool operator==(const _1e38d4ec7_CastExpr &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1e38d4ec7_CastExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_StructLit {
	jule::Ptr<_1e38d4ec7_TypeDecl> _field_kind = jule::Ptr<_1e38d4ec7_TypeDecl>();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();


	_1e38d4ec7_StructLit(jule::Ptr<_1e38d4ec7_TypeDecl> __param_kind, jule::Slice<jule::Any> __param_exprs): _field_kind(__param_kind), _field_exprs(__param_exprs) {}

	

	_1e38d4ec7_StructLit(void) = default;

	inline bool operator==(const _1e38d4ec7_StructLit &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _1e38d4ec7_StructLit &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_ScopeTree {
	jule::Ptr<_1e38d4ec7_ScopeTree> _field_parent = jule::Ptr<_1e38d4ec7_ScopeTree>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();


	_1e38d4ec7_ScopeTree(jule::Ptr<_1e38d4ec7_ScopeTree> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts) {}

	

	_1e38d4ec7_ScopeTree(void) = default;

	inline bool operator==(const _1e38d4ec7_ScopeTree &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _1e38d4ec7_ScopeTree &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_Conditional {
	jule::Ptr<_1e38d4ec7_If> _field_head = jule::Ptr<_1e38d4ec7_If>();
	jule::Slice<jule::Ptr<_1e38d4ec7_If>> _field_tail = jule::Slice<jule::Ptr<_1e38d4ec7_If>>();
	jule::Ptr<_1e38d4ec7_Else> _field_default = jule::Ptr<_1e38d4ec7_Else>();


	_1e38d4ec7_Conditional(jule::Ptr<_1e38d4ec7_If> __param_head, jule::Slice<jule::Ptr<_1e38d4ec7_If>> __param_tail, jule::Ptr<_1e38d4ec7_Else> __param_default): _field_head(__param_head), _field_tail(__param_tail), _field_default(__param_default) {}

	

	_1e38d4ec7_Conditional(void) = default;

	inline bool operator==(const _1e38d4ec7_Conditional &_Src) const {
		return 
			this->_field_head == _Src._field_head &&
			this->_field_tail == _Src._field_tail &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1e38d4ec7_Conditional &_Src) const { return !this->operator==(_Src); }
};


struct _1e396d626_FileInfo {
	jule::Ptr<_1e38d45c0_Ast> _field_ast = jule::Ptr<_1e38d45c0_Ast>();
	jule::Slice<_1e24777a2_Log> _field_errors = jule::Slice<_1e24777a2_Log>();


	_1e396d626_FileInfo(jule::Ptr<_1e38d45c0_Ast> __param_ast, jule::Slice<_1e24777a2_Log> __param_errors): _field_ast(__param_ast), _field_errors(__param_errors) {}

	

	_1e396d626_FileInfo(void) = default;

	inline bool operator==(const _1e396d626_FileInfo &_Src) const {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _1e396d626_FileInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1e396d626_PackageInfo {
	jule::Slice<jule::Ptr<_1e396d626_FileInfo>> _field_files = jule::Slice<jule::Ptr<_1e396d626_FileInfo>>();


	_1e396d626_PackageInfo(jule::Slice<jule::Ptr<_1e396d626_FileInfo>> __param_files): _field_files(__param_files) {}

	

	_1e396d626_PackageInfo(void) = default;

	inline bool operator==(const _1e396d626_PackageInfo &_Src) const {
		return 
			this->_field_files == _Src._field_files;
	}

	inline bool operator!=(const _1e396d626_PackageInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1e3c61e36_Stmt {
	jule::Slice<_1e3bad8dd_Token> _field_tokens = jule::Slice<_1e3bad8dd_Token>();
	jule::Bool _field_terminated = jule::Bool();


	_1e3c61e36_Stmt(jule::Slice<_1e3bad8dd_Token> __param_tokens, jule::Bool __param_terminated): _field_tokens(__param_tokens), _field_terminated(__param_terminated) {}

	

	_1e3c61e36_Stmt(void) = default;

	inline bool operator==(const _1e3c61e36_Stmt &_Src) const {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_terminated == _Src._field_terminated;
	}

	inline bool operator!=(const _1e3c61e36_Stmt &_Src) const { return !this->operator==(_Src); }
};


struct _1e3c61e36_ScopeParser {
	jule::Ptr<_1e4a02445_Parser> _field_p = jule::Ptr<_1e4a02445_Parser>();
	jule::Ptr<_1e38d4ec7_ScopeTree> _field_s = jule::Ptr<_1e38d4ec7_ScopeTree>();
	jule::Slice<jule::Ptr<_1e3c61e36_Stmt>> _field_stms = jule::Slice<jule::Ptr<_1e3c61e36_Stmt>>();
	jule::Int _field_pos = jule::Int();


	_1e3c61e36_ScopeParser(jule::Ptr<_1e4a02445_Parser> __param_p, jule::Ptr<_1e38d4ec7_ScopeTree> __param_s, jule::Slice<jule::Ptr<_1e3c61e36_Stmt>> __param_stms, jule::Int __param_pos): _field_p(__param_p), _field_s(__param_s), _field_stms(__param_stms), _field_pos(__param_pos) {}

	

	_1e3c61e36_ScopeParser(void) = default;

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline jule::Bool _method_finished(void);


	inline jule::Bool _method_is_last_st(void);


	inline void _method_push_err(_1e3bad8dd_Token,jule::Str);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline void _method_insert_as_next(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Ptr<_1e3c61e36_Stmt> _method_next(void);


	inline jule::Ptr<_1e38d4ec7_ScopeTree> _method_build_scope(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Any _method_build_var_st(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Any _method_build_ret_st(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Any _method_build_while_next_iter(jule::Ptr<_1e3c61e36_Stmt>&);


	inline jule::Ptr<_1e38d4ec7_WhileKind> _method_build_while_iter_kind(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Slice<jule::Slice<_1e3bad8dd_Token>> _method_get_range_kind_keys_tokens(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Ptr<_1e38d4ec7_VarDecl> _method_build_range_kind_key(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Slice<jule::Ptr<_1e38d4ec7_VarDecl>> _method_build_range_kind_keys(jule::Slice<jule::Slice<_1e3bad8dd_Token>>&);


	inline void _method_setup_range_kind_keys_plain(jule::Ptr<_1e38d4ec7_RangeKind>&,jule::Slice<_1e3bad8dd_Token>&);


	inline void _method_setup_range_kind_keys_explicit(jule::Ptr<_1e38d4ec7_RangeKind>&,jule::Slice<_1e3bad8dd_Token>&);


	inline void _method_setup_range_kind_keys(jule::Ptr<_1e38d4ec7_RangeKind>&,jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Ptr<_1e38d4ec7_RangeKind> _method_build_range_iter_kind(jule::Slice<_1e3bad8dd_Token>&,jule::Slice<_1e3bad8dd_Token>&,_1e3bad8dd_Token&);


	inline jule::Any _method_build_common_iter_kind(jule::Slice<_1e3bad8dd_Token>&,_1e3bad8dd_Token&);


	inline jule::Any _method_build_common_iter(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Any _method_buid_iter_st(jule::Ptr<_1e3c61e36_Stmt>&);


	inline jule::Any _method_build_break_st(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Any _method_build_cont_st(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Ptr<_1e38d4ec7_If> _method_build_if(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Ptr<_1e38d4ec7_Else> _method_build_else(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Any _method_build_if_else_chain(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Any _method_build_comment_st(_1e3bad8dd_Token&);


	inline jule::Any _method_build_call_st(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Any _method_build_co_call_st(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Any _method_build_goto_st(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Any _method_build_fall_st(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Any _method_build_type_alias_st(jule::Slice<_1e3bad8dd_Token>&);


	inline void _method_push_case_expr(jule::Slice<_1e3bad8dd_Token>,_1e3bad8dd_Token,jule::Bool,jule::Slice<jule::Ptr<_1e38d4ec7_Expr>>&);


	inline jule::Slice<jule::Ptr<_1e38d4ec7_Expr>> _method_build_case_exprs(jule::Slice<_1e3bad8dd_Token>&,jule::Bool);


	inline jule::Ptr<_1e38d4ec7_ScopeTree> _method_build_case_scope(jule::Slice<_1e3bad8dd_Token>&);


	inline std::tuple<jule::Ptr<_1e38d4ec7_Case>,jule::Bool> _method_build_case(jule::Slice<_1e3bad8dd_Token>&,jule::Bool);


	inline std::tuple<jule::Slice<jule::Ptr<_1e38d4ec7_Case>>,jule::Ptr<_1e38d4ec7_Else>> _method_build_cases(jule::Slice<_1e3bad8dd_Token>,jule::Bool);


	inline jule::Ptr<_1e38d4ec7_MatchCase> _method_build_match_case(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Ptr<_1e38d4ec7_ScopeTree> _method_build_scope_st(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Ptr<_1e38d4ec7_LabelSt> _method_build_label_st(jule::Slice<_1e3bad8dd_Token>&);


	inline std::tuple<jule::Any,jule::Bool> _method_build_id_st(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Ptr<_1e3ca4682_AssignInfo> _method_build_assign_info(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Ptr<_1e38d4ec7_AssignLeft> _method_build_assign_l(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Slice<jule::Ptr<_1e38d4ec7_AssignLeft>> _method_build_assign_ls(jule::Slice<jule::Slice<_1e3bad8dd_Token>>&);


	inline std::tuple<jule::Ptr<_1e38d4ec7_AssignSt>,jule::Bool> _method_build_plain_assign(jule::Slice<_1e3bad8dd_Token>&);


	inline std::tuple<jule::Ptr<_1e38d4ec7_AssignSt>,jule::Bool> _method_build_decl_assign(jule::Slice<_1e3bad8dd_Token>);


	inline std::tuple<jule::Ptr<_1e38d4ec7_AssignSt>,jule::Bool> _method_build_assign_st(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Any _method_build_st(jule::Ptr<_1e3c61e36_Stmt>&);


	inline void _method_build(jule::Slice<_1e3bad8dd_Token>&,jule::Ptr<_1e38d4ec7_ScopeTree>&);


	inline bool operator==(const _1e3c61e36_ScopeParser &_Src) const {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_s == _Src._field_s &&
			this->_field_stms == _Src._field_stms &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _1e3c61e36_ScopeParser &_Src) const { return !this->operator==(_Src); }
};


struct _1e3ca6387_CallData {
	jule::Slice<_1e3bad8dd_Token> _field_expr_tokens = jule::Slice<_1e3bad8dd_Token>();
	jule::Slice<_1e3bad8dd_Token> _field_args_tokens = jule::Slice<_1e3bad8dd_Token>();
	jule::Slice<_1e3bad8dd_Token> _field_generics_tokens = jule::Slice<_1e3bad8dd_Token>();


	_1e3ca6387_CallData(jule::Slice<_1e3bad8dd_Token> __param_expr_tokens, jule::Slice<_1e3bad8dd_Token> __param_args_tokens, jule::Slice<_1e3bad8dd_Token> __param_generics_tokens): _field_expr_tokens(__param_expr_tokens), _field_args_tokens(__param_args_tokens), _field_generics_tokens(__param_generics_tokens) {}

	

	_1e3ca6387_CallData(void) = default;

	inline bool operator==(const _1e3ca6387_CallData &_Src) const {
		return 
			this->_field_expr_tokens == _Src._field_expr_tokens &&
			this->_field_args_tokens == _Src._field_args_tokens &&
			this->_field_generics_tokens == _Src._field_generics_tokens;
	}

	inline bool operator!=(const _1e3ca6387_CallData &_Src) const { return !this->operator==(_Src); }
};


struct _1e3ca6387_Precedencer {
	jule::Slice<jule::Slice<jule::Any>> _field_pairs = jule::Slice<jule::Slice<jule::Any>>();


	_1e3ca6387_Precedencer(jule::Slice<jule::Slice<jule::Any>> __param_pairs): _field_pairs(__param_pairs) {}

	

	_1e3ca6387_Precedencer(void) = default;

	inline void _method_set(jule::Int,jule::Any);


	inline jule::Any _method_get_lower(void);


	inline bool operator==(const _1e3ca6387_Precedencer &_Src) const {
		return 
			this->_field_pairs == _Src._field_pairs;
	}

	inline bool operator!=(const _1e3ca6387_Precedencer &_Src) const { return !this->operator==(_Src); }
};


struct _1e3ca6387_ExprBuilder {
	jule::Ptr<_1e4a02445_Parser> _field_p = jule::Ptr<_1e4a02445_Parser>();


	_1e3ca6387_ExprBuilder(jule::Ptr<_1e4a02445_Parser> __param_p): _field_p(__param_p) {}

	

	_1e3ca6387_ExprBuilder(void) = default;

	inline void _method_push_err(_1e3bad8dd_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ptr<_1e38d4ec7_TupleExpr> _method_build_tuple(jule::Slice<jule::Slice<_1e3bad8dd_Token>>&);


	inline jule::Ptr<_1e38d4ec7_LitExpr> _method_build_lit(_1e3bad8dd_Token);


	inline jule::Ptr<_1e38d4ec7_TypeDecl> _method_build_primitive_type(_1e3bad8dd_Token&);


	inline jule::Any _method_build_single(_1e3bad8dd_Token);


	inline jule::Ptr<_1e38d4ec7_IdentExpr> _method_build_cpp_linked_ident(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Ptr<_1e38d4ec7_UnaryExpr> _method_build_unary(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Ptr<_1e38d4ec7_SubIdentExpr> _method_build_obj_sub_ident(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Ptr<_1e38d4ec7_NsSelectionExpr> _method_build_ns_sub_ident(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Ptr<_1e38d4ec7_TypeDecl> _method_build_type(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Any _method_build_sub_ident(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Ptr<_1e38d4ec7_VariadicExpr> _method_build_variadic(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Any _method_build_op_right(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Any _method_build_between_parentheses(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Ptr<_1e38d4ec7_CastExpr> _method_try_build_cast(jule::Slice<_1e3bad8dd_Token>&);


	inline void _method_push_arg(jule::Slice<jule::Ptr<_1e38d4ec7_Expr>>&,jule::Slice<_1e3bad8dd_Token>,_1e3bad8dd_Token);


	inline jule::Slice<jule::Ptr<_1e38d4ec7_Expr>> _method_build_args(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>> _method_build_call_generics(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Ptr<_1e38d4ec7_FnCallExpr> _method_build_fn_call(_1e3bad8dd_Token&,jule::Ptr<_1e3ca6387_CallData>&);


	inline jule::Any _method_build_parentheses_range(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Ptr<_1e38d4ec7_UnsafeExpr> _method_build_unsafe_expr(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Ptr<_1e38d4ec7_FnDecl> _method_build_anon_fn(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Any _method_build_unsafe(jule::Slice<_1e3bad8dd_Token>&);


	inline void _method_push_range_lit_part(jule::Slice<_1e3bad8dd_Token>,_1e3bad8dd_Token,jule::Slice<jule::Slice<_1e3bad8dd_Token>>&);


	inline jule::Slice<jule::Slice<_1e3bad8dd_Token>> _method_get_brace_range_lit_expr_parts(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Ptr<_1e38d4ec7_FieldExprPair> _method_build_field_expr_pair(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Any _method_build_struct_lit_expr(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Slice<jule::Any> _method_build_struct_lit_exprs(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Ptr<_1e38d4ec7_StructLit> _method_build_typed_struct_literal(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Any _method_build_brace_lit_part(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Ptr<_1e38d4ec7_BraceLit> _method_build_brace_lit(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Any _method_build_brace_range(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Slice<jule::Slice<_1e3bad8dd_Token>> _method_get_enumerable_parts(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Ptr<_1e38d4ec7_SliceExpr> _method_build_slice(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Ptr<_1e38d4ec7_IndexingExpr> _method_build_indexing(jule::Slice<_1e3bad8dd_Token>,jule::Slice<_1e3bad8dd_Token>,_1e3bad8dd_Token);


	inline jule::Ptr<_1e38d4ec7_SlicingExpr> _method_build_slicing(jule::Slice<_1e3bad8dd_Token>&,jule::Slice<_1e3bad8dd_Token>&,jule::Int&,_1e3bad8dd_Token&);


	inline jule::Any _method_build_bracket_range(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Any _method_build_ternary(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Any _method_build_data(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Ptr<_1e38d4ec7_BinopExpr> _method_build_binop(jule::Slice<_1e3bad8dd_Token>&,jule::Int);


	inline jule::Any _method_build(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Any _method_build_kind(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Ptr<_1e38d4ec7_Expr> _method_build_from_tokens(jule::Slice<_1e3bad8dd_Token>);


	inline bool operator==(const _1e3ca6387_ExprBuilder &_Src) const {
		return 
			this->_field_p == _Src._field_p;
	}

	inline bool operator!=(const _1e3ca6387_ExprBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _1e4a02445_Parser {
	jule::Ptr<_1e4a02445_Parser> self;

	jule::Ptr<_1e38d45c0_Ast> _field_ast = jule::Ptr<_1e38d45c0_Ast>();
	jule::Slice<jule::Ptr<_1e38d4ec7_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>();
	jule::Ptr<_1e38d4ec7_CommentGroup> _field_comment_group = jule::Ptr<_1e38d4ec7_CommentGroup>();
	jule::Slice<_1e24777a2_Log> _field_errors = jule::Slice<_1e24777a2_Log>();


	_1e4a02445_Parser(jule::Ptr<_1e38d45c0_Ast> __param_ast, jule::Slice<jule::Ptr<_1e38d4ec7_Directive>> __param_directives, jule::Ptr<_1e38d4ec7_CommentGroup> __param_comment_group, jule::Slice<_1e24777a2_Log> __param_errors): _field_ast(__param_ast), _field_directives(__param_directives), _field_comment_group(__param_comment_group), _field_errors(__param_errors) {
		this->self = jule::Ptr<_1e4a02445_Parser>::make(this, nullptr);

	}

	~_1e4a02445_Parser(void) { this->self.ref = nullptr; }

	_1e4a02445_Parser(void) { this->self = jule::Ptr<_1e4a02445_Parser>::make(this, nullptr); }

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline void _method_push_err(_1e3bad8dd_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ptr<_1e38d4ec7_Expr> _method_build_expr(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Ptr<_1e38d4ec7_Directive> _method_build_directive(jule::Slice<_1e3bad8dd_Token>);


	inline void _method_push_directive(jule::Ptr<_1e38d4ec7_Directive>);


	inline void _method_process_comment(jule::Ptr<_1e38d4ec7_Comment>&);


	inline jule::Ptr<_1e38d4ec7_ScopeTree> _method_build_scope(jule::Slice<_1e3bad8dd_Token>&);


	inline std::tuple<jule::Ptr<_1e38d4ec7_TypeDecl>,jule::Bool> _method___build_type(jule::Slice<_1e3bad8dd_Token>&,jule::Int*,jule::Bool);


	inline std::tuple<jule::Ptr<_1e38d4ec7_TypeDecl>,jule::Bool> _method_build_type(jule::Slice<_1e3bad8dd_Token>&,jule::Int*,jule::Bool);


	inline jule::Ptr<_1e38d4ec7_TypeAliasDecl> _method_build_type_alias_decl(jule::Slice<_1e3bad8dd_Token>&);


	inline void _method_build_var_type_and_expr(jule::Ptr<_1e38d4ec7_VarDecl>&,jule::Slice<_1e3bad8dd_Token>&);


	inline void _method_build_var_common(jule::Ptr<_1e38d4ec7_VarDecl>&,jule::Slice<_1e3bad8dd_Token>);


	inline void _method_build_var_begin(jule::Ptr<_1e38d4ec7_VarDecl>&,jule::Ptr<jule::Int>,jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Ptr<_1e38d4ec7_VarDecl> _method_build_var(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Ptr<_1e38d4ec7_GenericDecl> _method_build_generic(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>> _method_build_generics(jule::Slice<_1e3bad8dd_Token>&,_1e3bad8dd_Token&);


	inline jule::Ptr<_1e38d4ec7_ParamDecl> _method_build_self_param(jule::Slice<_1e3bad8dd_Token>);


	inline void _method_param_type_begin(jule::Ptr<_1e38d4ec7_ParamDecl>&,jule::Int&,jule::Slice<_1e3bad8dd_Token>&);


	inline void _method_build_param_type(jule::Ptr<_1e38d4ec7_ParamDecl>&,jule::Slice<_1e3bad8dd_Token>&);


	inline void _method_param_body_id(jule::Ptr<_1e38d4ec7_ParamDecl>,_1e3bad8dd_Token);


	inline void _method_build_param_body(jule::Ptr<_1e38d4ec7_ParamDecl>&,jule::Ptr<jule::Int>,jule::Slice<_1e3bad8dd_Token>);


	inline jule::Ptr<_1e38d4ec7_ParamDecl> _method_build_param(jule::Slice<_1e3bad8dd_Token>);


	inline void _method_check_params(jule::Slice<jule::Ptr<_1e38d4ec7_ParamDecl>>&);


	inline jule::Slice<jule::Ptr<_1e38d4ec7_ParamDecl>> _method_build_params(jule::Slice<_1e3bad8dd_Token>&,jule::Bool);


	inline std::tuple<jule::Ptr<_1e38d4ec7_RetTypeDecl>,jule::Bool> _method_build_multi_ret_type(jule::Slice<_1e3bad8dd_Token>&,jule::Int&);


	inline std::tuple<jule::Ptr<_1e38d4ec7_RetTypeDecl>,jule::Bool> _method_build_ret_type(jule::Slice<_1e3bad8dd_Token>&,jule::Int&);


	inline jule::Ptr<_1e38d4ec7_FnDecl> _method_build_fn_prototype(jule::Slice<_1e3bad8dd_Token>&,jule::Int&,jule::Bool);


	inline jule::Ptr<_1e38d4ec7_FnDecl> _method_build_fn(jule::Slice<_1e3bad8dd_Token>&,jule::Bool,jule::Bool);


	inline jule::Slice<_1e3bad8dd_Token> _method_get_use_decl_selectors(jule::Slice<_1e3bad8dd_Token>);


	inline void _method_build_cpp_use_decl(jule::Ptr<_1e38d4ec7_UseDecl>&,jule::Slice<_1e3bad8dd_Token>&);


	inline void _method_build_std_use_decl(jule::Ptr<_1e38d4ec7_UseDecl>&,jule::Slice<_1e3bad8dd_Token>);


	inline void _method_build_ident_use_decl(jule::Ptr<_1e38d4ec7_UseDecl>&,jule::Slice<_1e3bad8dd_Token>);


	inline void _method_parse_use_decl(jule::Ptr<_1e38d4ec7_UseDecl>&,jule::Slice<_1e3bad8dd_Token>);


	inline jule::Ptr<_1e38d4ec7_UseDecl> _method_build_use_decl(jule::Slice<_1e3bad8dd_Token>,jule::Bool);


	inline jule::Ptr<_1e38d4ec7_Expr> _method_build_enum_item_expr(jule::Ptr<jule::Int>,jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Slice<jule::Ptr<_1e38d4ec7_EnumItemDecl>> _method_build_enum_items(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Ptr<_1e38d4ec7_EnumDecl> _method_build_enum_decl(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Ptr<_1e38d4ec7_FieldDecl> _method_build_field(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Slice<jule::Ptr<_1e38d4ec7_FieldDecl>> _method_build_struct_decl_fields(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Ptr<_1e38d4ec7_StructDecl> _method_build_struct_decl(jule::Slice<_1e3bad8dd_Token>&);


	inline void _method_check_method_receiver(jule::Ptr<_1e38d4ec7_FnDecl>&);


	inline jule::Slice<jule::Ptr<_1e38d4ec7_FnDecl>> _method_build_trait_methods(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Ptr<_1e38d4ec7_TraitDecl> _method_build_trait_decl(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Ptr<_1e38d4ec7_FnDecl> _method_build_cpp_link_fn(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Ptr<_1e38d4ec7_VarDecl> _method_build_cpp_link_var(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Ptr<_1e38d4ec7_StructDecl> _method_build_cpp_link_struct(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Ptr<_1e38d4ec7_TypeAliasDecl> _method_build_cpp_link_type_alias(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Ptr<_1e38d4ec7_UseDecl> _method_build_cpp_link_use(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Any _method_build_cpp_link(jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Ptr<_1e38d4ec7_FnDecl> _method_get_method(jule::Slice<_1e3bad8dd_Token>&);


	inline void _method_parse_impl_body(jule::Ptr<_1e38d4ec7_Impl>&,jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Ptr<_1e38d4ec7_Impl> _method_build_impl(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Any _method_build_node_data(jule::Slice<_1e3bad8dd_Token>&);


	inline void _method_check_comment_group(_1e38d4ec7_Node&);


	inline void _method_check_directive(_1e38d4ec7_Node&);


	inline void _method_apply_meta(_1e38d4ec7_Node&,jule::Bool);


	inline void _method_check_use_decl(_1e38d4ec7_Node&);


	inline std::tuple<jule::Bool,jule::Any> _method_build_general_scope_node_data(jule::Slice<_1e3bad8dd_Token>);


	inline _1e38d4ec7_Node _method_parse_node(jule::Slice<_1e3bad8dd_Token>&);


	inline void _method_append_node(jule::Slice<_1e3bad8dd_Token>&);


	inline void _method_remove_range(jule::Int,jule::Str,jule::Slice<_1e3bad8dd_Token>&,jule::Slice<jule::Int>&);


	inline void _method_push_wrong_order_close_err(_1e3bad8dd_Token&,jule::Slice<_1e3bad8dd_Token>&,jule::Slice<jule::Int>&);


	inline void _method_push_range_close(_1e3bad8dd_Token,jule::Str,jule::Slice<_1e3bad8dd_Token>&,jule::Slice<jule::Int>&);


	inline void _method_check_ranges(jule::Slice<_1e3bad8dd_Token>&);


	inline void _method_parse(jule::Ptr<_1e3beedd5_File>&);


	inline bool operator==(const _1e4a02445_Parser &_Src) const {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_directives == _Src._field_directives &&
			this->_field_comment_group == _Src._field_comment_group &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _1e4a02445_Parser &_Src) const { return !this->operator==(_Src); }
};


struct _1e4a2bb9a_TypeBuilder {
	jule::Ptr<_1e4a02445_Parser> _field_p = jule::Ptr<_1e4a02445_Parser>();
	jule::Slice<_1e3bad8dd_Token> _field_tokens = jule::Slice<_1e3bad8dd_Token>();
	jule::Int* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();


	_1e4a2bb9a_TypeBuilder(jule::Ptr<_1e4a02445_Parser> __param_p, jule::Slice<_1e3bad8dd_Token> __param_tokens, jule::Int* __param_i, jule::Bool __param_err): _field_p(__param_p), _field_tokens(__param_tokens), _field_i(__param_i), _field_err(__param_err) {}

	

	_1e4a2bb9a_TypeBuilder(void) = default;

	inline void _method_push_err(_1e3bad8dd_Token,jule::Str);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ptr<_1e38d4ec7_TypeDecl> _method_build_prim(void);


	inline jule::Ptr<_1e38d4ec7_TypeDecl> _method_build_namespace(void);


	inline jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>> _method_build_generics(void);


	inline jule::Slice<jule::Slice<_1e3bad8dd_Token>> _method_ident_generics(void);


	inline jule::Ptr<_1e38d4ec7_TypeDecl> _method_build_ident(void);


	inline jule::Ptr<_1e38d4ec7_TypeDecl> _method_build_cpp_link(void);


	inline jule::Ptr<_1e38d4ec7_TypeDecl> _method_build_fn(void);


	inline jule::Ptr<_1e38d4ec7_TypeDecl> _method_build_ptr(void);


	inline jule::Ptr<_1e38d4ec7_TypeDecl> _method_build_sptr(void);


	inline jule::Ptr<_1e38d4ec7_TypeDecl> _method_build_op(void);


	inline jule::Ptr<_1e38d4ec7_TypeDecl> _method_build_slc(void);


	inline jule::Ptr<_1e38d4ec7_TypeDecl> _method_build_arr(void);


	inline jule::Ptr<_1e38d4ec7_TypeDecl> _method_build_map(jule::Int,jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Ptr<_1e38d4ec7_TypeDecl> _method_build_enumerable(void);


	inline jule::Ptr<_1e38d4ec7_TypeDecl> _method_step(void);


	inline std::tuple<jule::Ptr<_1e38d4ec7_TypeDecl>,jule::Bool> _method_build(void);


	inline bool operator==(const _1e4a2bb9a_TypeBuilder &_Src) const {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_tokens == _Src._field_tokens &&
			this->_field_i == _Src._field_i &&
			this->_field_err == _Src._field_err;
	}

	inline bool operator!=(const _1e4a2bb9a_TypeBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _1c8b9b83b_Const {
	jule::Any _field_data = jule::Any();


	_1c8b9b83b_Const(jule::Any __param_data): _field_data(__param_data) {}

	

	_1c8b9b83b_Const(void) = default;

	static inline jule::Ptr<_1c8b9b83b_Const> _static_method_new_i64(jule::I64);


	static inline jule::Ptr<_1c8b9b83b_Const> _static_method_new_u64(jule::U64);


	static inline jule::Ptr<_1c8b9b83b_Const> _static_method_new_bool(jule::Bool);


	static inline jule::Ptr<_1c8b9b83b_Const> _static_method_new_str(jule::Str);


	static inline jule::Ptr<_1c8b9b83b_Const> _static_method_new_f64(jule::F64);


	static inline jule::Ptr<_1c8b9b83b_Const> _static_method_new_nil(void);


	inline jule::I64 _method_read_i64(void);


	inline jule::U64 _method_read_u64(void);


	inline jule::Bool _method_read_bool(void);


	inline jule::Str _method_read_str(void);


	inline jule::F64 _method_read_f64(void);


	inline jule::I64 _method_as_i64(void);


	inline jule::U64 _method_as_u64(void);


	inline jule::F64 _method_as_f64(void);


	inline void _method_set_i64(jule::I64);


	inline void _method_set_u64(jule::U64);


	inline void _method_set_bool(jule::Bool);


	inline void _method_set_str(jule::Str);


	inline void _method_set_f64(jule::F64);


	inline void _method_set_nil(void);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_are_same_types(_1c8b9b83b_Const);


	inline jule::Bool _method_and(_1c8b9b83b_Const);


	inline jule::Bool _method_or(_1c8b9b83b_Const);


	inline jule::Bool _method_eqs(_1c8b9b83b_Const);


	inline jule::Bool _method_lt(_1c8b9b83b_Const);


	inline jule::Bool _method_gt(_1c8b9b83b_Const);


	inline jule::Bool _method_add(_1c8b9b83b_Const);


	inline jule::Bool _method_sub(_1c8b9b83b_Const);


	inline jule::Bool _method_mul(_1c8b9b83b_Const);


	inline jule::Bool _method_div(_1c8b9b83b_Const);


	inline jule::Bool _method_mod(_1c8b9b83b_Const);


	inline jule::Bool _method_bitwise_and(_1c8b9b83b_Const);


	inline jule::Bool _method_bitwise_or(_1c8b9b83b_Const);


	inline jule::Bool _method_xor(_1c8b9b83b_Const);


	inline jule::Bool _method_lshift(_1c8b9b83b_Const);


	inline jule::Bool _method_rshift(_1c8b9b83b_Const);


	inline bool operator==(const _1c8b9b83b_Const &_Src) const {
		return 
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _1c8b9b83b_Const &_Src) const { return !this->operator==(_Src); }
};


struct _1e398ee72_FieldIns {
	jule::Ptr<_1e398ee72_Field> _field_decl = jule::Ptr<_1e398ee72_Field>();
	jule::Ptr<_1e6420856_TypeKind> _field_kind = jule::Ptr<_1e6420856_TypeKind>();


	_1e398ee72_FieldIns(jule::Ptr<_1e398ee72_Field> __param_decl, jule::Ptr<_1e6420856_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_1e398ee72_FieldIns(void) = default;

	inline bool operator==(const _1e398ee72_FieldIns &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1e398ee72_FieldIns &_Src) const { return !this->operator==(_Src); }
};


struct _1e398ee72_StructIns: public _1e6420856_Kind {
	jule::Ptr<_1e398ee72_StructIns> self;

	jule::Bool _field_checked = jule::Bool();
	jule::Ptr<_1e398ee72_Struct> _field_decl = jule::Ptr<_1e398ee72_Struct>();
	jule::Slice<jule::Ptr<_1e6420856_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1e6420856_TypeKind>>();
	jule::Slice<jule::Ptr<_1e398ee72_FieldIns>> _field_fields = jule::Slice<jule::Ptr<_1e398ee72_FieldIns>>();
	jule::Slice<jule::Ptr<_1e4b15a20_Fn>> _field_methods = jule::Slice<jule::Ptr<_1e4b15a20_Fn>>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Ptr<_1e4cc167b_ReferenceStack> _field_references = jule::Ptr<_1e4cc167b_ReferenceStack>();


	_1e398ee72_StructIns(jule::Bool __param_checked, jule::Ptr<_1e398ee72_Struct> __param_decl, jule::Slice<jule::Ptr<_1e6420856_TypeKind>> __param_generics, jule::Slice<jule::Ptr<_1e398ee72_FieldIns>> __param_fields, jule::Slice<jule::Ptr<_1e4b15a20_Fn>> __param_methods, jule::Bool __param_mutable, jule::Ptr<_1e4cc167b_ReferenceStack> __param_references): _field_checked(__param_checked), _field_decl(__param_decl), _field_generics(__param_generics), _field_fields(__param_fields), _field_methods(__param_methods), _field_mutable(__param_mutable), _field_references(__param_references) {
		this->self = jule::Ptr<_1e398ee72_StructIns>::make(this, nullptr);

	}

	~_1e398ee72_StructIns(void) { this->self.ref = nullptr; }

	_1e398ee72_StructIns(void) { this->self = jule::Ptr<_1e398ee72_StructIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1e6420856_TypeKind>);


	inline jule::Bool _method_same(jule::Ptr<_1e398ee72_StructIns>);


	inline jule::Ptr<_1e4b15a20_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ptr<_1e398ee72_FieldIns> _method_find_field(jule::Str);


	inline bool operator==(const _1e398ee72_StructIns &_Src) const {
		return 
			this->_field_checked == _Src._field_checked &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_references == _Src._field_references;
	}

	inline bool operator!=(const _1e398ee72_StructIns &_Src) const { return !this->operator==(_Src); }
};


struct _1e4b15a20_RetType {
	jule::Ptr<_1e6420856_TypeSymbol> _field_kind = jule::Ptr<_1e6420856_TypeSymbol>();
	jule::Slice<_1e3bad8dd_Token> _field_idents = jule::Slice<_1e3bad8dd_Token>();


	_1e4b15a20_RetType(jule::Ptr<_1e6420856_TypeSymbol> __param_kind, jule::Slice<_1e3bad8dd_Token> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_1e4b15a20_RetType(void) = default;

	inline bool operator==(const _1e4b15a20_RetType &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _1e4b15a20_RetType &_Src) const { return !this->operator==(_Src); }
};


struct _1e4b15a20_ParamIns {
	jule::Ptr<_1e4b15a20_Param> _field_decl = jule::Ptr<_1e4b15a20_Param>();
	jule::Ptr<_1e6420856_TypeKind> _field_kind = jule::Ptr<_1e6420856_TypeKind>();


	_1e4b15a20_ParamIns(jule::Ptr<_1e4b15a20_Param> __param_decl, jule::Ptr<_1e6420856_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_1e4b15a20_ParamIns(void) = default;

	inline jule::Str _method_to_str(void);


	inline bool operator==(const _1e4b15a20_ParamIns &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1e4b15a20_ParamIns &_Src) const { return !this->operator==(_Src); }
};


struct _1e4b15a20_FnIns: public _1e6420856_Kind {
	jule::Ptr<_1e4b15a20_FnIns> self;

	jule::Ptr<_1e398ee72_StructIns> _field_owner = jule::Ptr<_1e398ee72_StructIns>();
	jule::Ptr<_1e4b15a20_Fn> _field_decl = jule::Ptr<_1e4b15a20_Fn>();
	jule::Slice<jule::Ptr<_1e6420856_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1e6420856_TypeKind>>();
	jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>> _field_params = jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>();
	jule::Ptr<_1e6420856_TypeKind> _field_result = jule::Ptr<_1e6420856_TypeKind>();
	jule::Ptr<_1e4d6ee22_Scope> _field_scope = jule::Ptr<_1e4d6ee22_Scope>();
	jule::Ptr<_1e4cc167b_ReferenceStack> _field_references = jule::Ptr<_1e4cc167b_ReferenceStack>();
	jule::Ptr<_1e4cc167b_ReferenceStack> _field_refers = jule::Ptr<_1e4cc167b_ReferenceStack>();
	jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)> _field_caller = jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();
	jule::Bool _field_anon = jule::Bool();


	_1e4b15a20_FnIns(jule::Ptr<_1e398ee72_StructIns> __param_owner, jule::Ptr<_1e4b15a20_Fn> __param_decl, jule::Slice<jule::Ptr<_1e6420856_TypeKind>> __param_generics, jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>> __param_params, jule::Ptr<_1e6420856_TypeKind> __param_result, jule::Ptr<_1e4d6ee22_Scope> __param_scope, jule::Ptr<_1e4cc167b_ReferenceStack> __param_references, jule::Ptr<_1e4cc167b_ReferenceStack> __param_refers, jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)> __param_caller, jule::Bool __param_reloaded, jule::Bool __param_anon): _field_owner(__param_owner), _field_decl(__param_decl), _field_generics(__param_generics), _field_params(__param_params), _field_result(__param_result), _field_scope(__param_scope), _field_references(__param_references), _field_refers(__param_refers), _field_caller(__param_caller), _field_reloaded(__param_reloaded), _field_anon(__param_anon) {
		this->self = jule::Ptr<_1e4b15a20_FnIns>::make(this, nullptr);

	}

	~_1e4b15a20_FnIns(void) { this->self.ref = nullptr; }

	_1e4b15a20_FnIns(void) { this->self = jule::Ptr<_1e4b15a20_FnIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1e6420856_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Bool _method_same(jule::Ptr<_1e4b15a20_FnIns>);


	inline jule::Str _method_get_kind_str(jule::Bool);


	inline bool operator==(const _1e4b15a20_FnIns &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_params == _Src._field_params &&
			this->_field_result == _Src._field_result &&
			this->_field_scope == _Src._field_scope &&
			this->_field_references == _Src._field_references &&
			this->_field_refers == _Src._field_refers &&
			this->_field_caller == _Src._field_caller &&
			this->_field_reloaded == _Src._field_reloaded &&
			this->_field_anon == _Src._field_anon;
	}

	inline bool operator!=(const _1e4b15a20_FnIns &_Src) const { return !this->operator==(_Src); }
};


struct _1e4cc167b_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();


	_1e4cc167b_ReferenceStack(jule::Slice<jule::Any> __param_buffer): _field_buffer(__param_buffer) {}

	

	_1e4cc167b_ReferenceStack(void) = default;

	static inline jule::Ptr<_1e4cc167b_ReferenceStack> _static_method_new(void);


	inline jule::Int _method_len(void);


	inline jule::Any _method_at(jule::Int);


	inline void _method_push(jule::Any);


	inline jule::Bool _method_exist_0(jule::Ptr<_1e50b0492_Var>);
	inline jule::Bool _method_exist_1(jule::Ptr<_1e4b15a20_FnIns>);
	inline jule::Bool _method_exist_2(jule::Ptr<_1e398ee72_StructIns>);


	inline bool operator==(const _1e4cc167b_ReferenceStack &_Src) const {
		return 
			this->_field_buffer == _Src._field_buffer;
	}

	inline bool operator!=(const _1e4cc167b_ReferenceStack &_Src) const { return !this->operator==(_Src); }
};


struct _1e4cc167b_SymbolBuilder {
	jule::Ptr<_1e4cc167b_SymbolBuilder> self;

	jule::Ptr<_1e4cc167b_SymbolBuilder> _field_owner = jule::Ptr<_1e4cc167b_SymbolBuilder>();
	jule::Trait<_1e4ee54e8_Importer> _field_importer = jule::Trait<_1e4ee54e8_Importer>();
	jule::Slice<_1e24777a2_Log> _field_errors = jule::Slice<_1e24777a2_Log>();
	jule::Ptr<_1e38d45c0_Ast> _field_ast = jule::Ptr<_1e38d45c0_Ast>();
	jule::Ptr<_1e5291035_SymbolTable> _field_table = jule::Ptr<_1e5291035_SymbolTable>();


	_1e4cc167b_SymbolBuilder(jule::Ptr<_1e4cc167b_SymbolBuilder> __param_owner, jule::Trait<_1e4ee54e8_Importer> __param_importer, jule::Slice<_1e24777a2_Log> __param_errors, jule::Ptr<_1e38d45c0_Ast> __param_ast, jule::Ptr<_1e5291035_SymbolTable> __param_table): _field_owner(__param_owner), _field_importer(__param_importer), _field_errors(__param_errors), _field_ast(__param_ast), _field_table(__param_table) {
		this->self = jule::Ptr<_1e4cc167b_SymbolBuilder>::make(this, nullptr);

	}

	~_1e4cc167b_SymbolBuilder(void) { this->self.ref = nullptr; }

	_1e4cc167b_SymbolBuilder(void) { this->self = jule::Ptr<_1e4cc167b_SymbolBuilder>::make(this, nullptr); }

	inline jule::Ptr<_1e4cc167b_SymbolBuilder> _method_get_root(void);


	inline void _method_push_err(_1e3bad8dd_Token&,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_text(_1e3bad8dd_Token&,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_cpp_use_decl_path(jule::Ptr<_1e38d4ec7_UseDecl>&);


	inline jule::Ptr<_1e4ee54e8_ImportInfo> _method_build_cpp_header_import(jule::Ptr<_1e38d4ec7_UseDecl>&);


	inline jule::Ptr<_1e4ee54e8_ImportInfo> _method_build_std_import(jule::Ptr<_1e38d4ec7_UseDecl>&);


	inline jule::Ptr<_1e4ee54e8_ImportInfo> _method_build_ident_import(jule::Ptr<_1e38d4ec7_UseDecl>&);


	inline jule::Ptr<_1e4ee54e8_ImportInfo> _method_build_import(jule::Ptr<_1e38d4ec7_UseDecl>&);


	inline jule::Bool _method_check_duplicate_use_decl(jule::Ptr<_1e4ee54e8_ImportInfo>&);


	inline void _method_impl_import_selections(jule::Ptr<_1e4ee54e8_ImportInfo>&,jule::Ptr<_1e38d4ec7_UseDecl>&);


	inline jule::Str _method_get_as_link_path(jule::Str);


	inline void _method_push_cycle_error(jule::Ptr<_1e4cc167b_SymbolBuilder>&,jule::Str,jule::Str&);


	inline void _method_push_cross_cycle_error(jule::Ptr<_1e4cc167b_SymbolBuilder>&,jule::Ptr<_1e4ee54e8_ImportInfo>&,_1e3bad8dd_Token&);


	inline jule::Bool _method_check_import_cycles(jule::Ptr<_1e4ee54e8_ImportInfo>,jule::Ptr<_1e38d4ec7_UseDecl>&);


	inline jule::Bool _method_import_package(jule::Ptr<_1e4ee54e8_ImportInfo>&,jule::Ptr<_1e38d4ec7_UseDecl>&);


	inline jule::Ptr<_1e4ee54e8_ImportInfo> _method_import_use_decl(jule::Ptr<_1e38d4ec7_UseDecl>&);


	inline void _method_import_use_decls(void);


	inline void _method_append_decl(_1e38d4ec7_Node&);


	inline void _method_append_decls(void);


	inline void _method_append_impls(void);


	inline void _method_push_directive_pass(jule::Ptr<_1e38d4ec7_Directive>&);


	inline void _method_append_top_directives(void);


	inline void _method_build(void);


	inline bool operator==(const _1e4cc167b_SymbolBuilder &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_importer == _Src._field_importer &&
			this->_field_errors == _Src._field_errors &&
			this->_field_ast == _Src._field_ast &&
			this->_field_table == _Src._field_table;
	}

	inline bool operator!=(const _1e4cc167b_SymbolBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d6ee22_Scope {
	jule::Ptr<_1e4d6ee22_Scope> _field_parent = jule::Ptr<_1e4d6ee22_Scope>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();


	_1e4d6ee22_Scope(jule::Ptr<_1e4d6ee22_Scope> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts) {}

	

	_1e4d6ee22_Scope(void) = default;

	inline bool operator==(const _1e4d6ee22_Scope &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _1e4d6ee22_Scope &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d6ee22_If {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1e4d6ee22_Scope> _field_scope = jule::Ptr<_1e4d6ee22_Scope>();


	_1e4d6ee22_If(jule::Any __param_expr, jule::Ptr<_1e4d6ee22_Scope> __param_scope): _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_1e4d6ee22_If(void) = default;

	inline bool operator==(const _1e4d6ee22_If &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1e4d6ee22_If &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d6ee22_Else {
	jule::Ptr<_1e4d6ee22_Scope> _field_scope = jule::Ptr<_1e4d6ee22_Scope>();


	_1e4d6ee22_Else(jule::Ptr<_1e4d6ee22_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_1e4d6ee22_Else(void) = default;

	inline bool operator==(const _1e4d6ee22_Else &_Src) const {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1e4d6ee22_Else &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d6ee22_Conditional {
	jule::Slice<jule::Ptr<_1e4d6ee22_If>> _field_elifs = jule::Slice<jule::Ptr<_1e4d6ee22_If>>();
	jule::Ptr<_1e4d6ee22_Else> _field_default = jule::Ptr<_1e4d6ee22_Else>();


	_1e4d6ee22_Conditional(jule::Slice<jule::Ptr<_1e4d6ee22_If>> __param_elifs, jule::Ptr<_1e4d6ee22_Else> __param_default): _field_elifs(__param_elifs), _field_default(__param_default) {}

	

	_1e4d6ee22_Conditional(void) = default;

	inline bool operator==(const _1e4d6ee22_Conditional &_Src) const {
		return 
			this->_field_elifs == _Src._field_elifs &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1e4d6ee22_Conditional &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d6ee22_InfIter {
	jule::Ptr<_1e4d6ee22_Scope> _field_scope = jule::Ptr<_1e4d6ee22_Scope>();


	_1e4d6ee22_InfIter(jule::Ptr<_1e4d6ee22_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_1e4d6ee22_InfIter(void) = default;

	inline bool operator==(const _1e4d6ee22_InfIter &_Src) const {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1e4d6ee22_InfIter &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d6ee22_WhileIter {
	jule::Any _field_expr = jule::Any();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_1e4d6ee22_Scope> _field_scope = jule::Ptr<_1e4d6ee22_Scope>();


	_1e4d6ee22_WhileIter(jule::Any __param_expr, jule::Any __param_next, jule::Ptr<_1e4d6ee22_Scope> __param_scope): _field_expr(__param_expr), _field_next(__param_next), _field_scope(__param_scope) {}

	

	_1e4d6ee22_WhileIter(void) = default;

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _1e4d6ee22_WhileIter &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1e4d6ee22_WhileIter &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d6ee22_RangeIter {
	jule::Ptr<_1e50ac4b1_Data> _field_expr = jule::Ptr<_1e50ac4b1_Data>();
	jule::Ptr<_1e4d6ee22_Scope> _field_scope = jule::Ptr<_1e4d6ee22_Scope>();
	jule::Ptr<_1e50b0492_Var> _field_key_a = jule::Ptr<_1e50b0492_Var>();
	jule::Ptr<_1e50b0492_Var> _field_key_b = jule::Ptr<_1e50b0492_Var>();


	_1e4d6ee22_RangeIter(jule::Ptr<_1e50ac4b1_Data> __param_expr, jule::Ptr<_1e4d6ee22_Scope> __param_scope, jule::Ptr<_1e50b0492_Var> __param_key_a, jule::Ptr<_1e50b0492_Var> __param_key_b): _field_expr(__param_expr), _field_scope(__param_scope), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_1e4d6ee22_RangeIter(void) = default;

	inline bool operator==(const _1e4d6ee22_RangeIter &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _1e4d6ee22_RangeIter &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d6ee22_ContSt {
	jule::Uintptr _field_it = jule::Uintptr();


	_1e4d6ee22_ContSt(jule::Uintptr __param_it): _field_it(__param_it) {}

	

	_1e4d6ee22_ContSt(void) = default;

	inline bool operator==(const _1e4d6ee22_ContSt &_Src) const {
		return 
			this->_field_it == _Src._field_it;
	}

	inline bool operator!=(const _1e4d6ee22_ContSt &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d6ee22_BreakSt {
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_mtch = jule::Uintptr();


	_1e4d6ee22_BreakSt(jule::Uintptr __param_it, jule::Uintptr __param_mtch): _field_it(__param_it), _field_mtch(__param_mtch) {}

	

	_1e4d6ee22_BreakSt(void) = default;

	inline bool operator==(const _1e4d6ee22_BreakSt &_Src) const {
		return 
			this->_field_it == _Src._field_it &&
			this->_field_mtch == _Src._field_mtch;
	}

	inline bool operator!=(const _1e4d6ee22_BreakSt &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d6ee22_Label {
	jule::Str _field_ident = jule::Str();


	_1e4d6ee22_Label(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1e4d6ee22_Label(void) = default;

	inline bool operator==(const _1e4d6ee22_Label &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1e4d6ee22_Label &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d6ee22_GotoSt {
	jule::Str _field_ident = jule::Str();


	_1e4d6ee22_GotoSt(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1e4d6ee22_GotoSt(void) = default;

	inline bool operator==(const _1e4d6ee22_GotoSt &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1e4d6ee22_GotoSt &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d6ee22_Postfix {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_op = jule::Str();


	_1e4d6ee22_Postfix(jule::Any __param_expr, jule::Str __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_1e4d6ee22_Postfix(void) = default;

	inline bool operator==(const _1e4d6ee22_Postfix &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1e4d6ee22_Postfix &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d6ee22_Assign {
	jule::Any _field_l = jule::Any();
	jule::Any _field_r = jule::Any();
	jule::Str _field_op = jule::Str();


	_1e4d6ee22_Assign(jule::Any __param_l, jule::Any __param_r, jule::Str __param_op): _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_1e4d6ee22_Assign(void) = default;

	inline bool operator==(const _1e4d6ee22_Assign &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1e4d6ee22_Assign &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d6ee22_MultiAssign {
	jule::Slice<jule::Any> _field_l = jule::Slice<jule::Any>();
	jule::Any _field_r = jule::Any();


	_1e4d6ee22_MultiAssign(jule::Slice<jule::Any> __param_l, jule::Any __param_r): _field_l(__param_l), _field_r(__param_r) {}

	

	_1e4d6ee22_MultiAssign(void) = default;

	inline bool operator==(const _1e4d6ee22_MultiAssign &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r;
	}

	inline bool operator!=(const _1e4d6ee22_MultiAssign &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d6ee22_Match {
	jule::Ptr<_1e50ac4b1_Data> _field_expr = jule::Ptr<_1e50ac4b1_Data>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Slice<jule::Ptr<_1e4d6ee22_Case>> _field_cases = jule::Slice<jule::Ptr<_1e4d6ee22_Case>>();
	jule::Ptr<_1e4d6ee22_Case> _field_default = jule::Ptr<_1e4d6ee22_Case>();


	_1e4d6ee22_Match(jule::Ptr<_1e50ac4b1_Data> __param_expr, jule::Bool __param_type_match, jule::Slice<jule::Ptr<_1e4d6ee22_Case>> __param_cases, jule::Ptr<_1e4d6ee22_Case> __param_default): _field_expr(__param_expr), _field_type_match(__param_type_match), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_1e4d6ee22_Match(void) = default;

	inline jule::Bool _method_is_generic_type_match(void);


	inline bool operator==(const _1e4d6ee22_Match &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1e4d6ee22_Match &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d6ee22_Case {
	jule::Ptr<_1e4d6ee22_Match> _field_owner = jule::Ptr<_1e4d6ee22_Match>();
	jule::Ptr<_1e4d6ee22_Scope> _field_scope = jule::Ptr<_1e4d6ee22_Scope>();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();
	jule::Ptr<_1e4d6ee22_Case> _field_next = jule::Ptr<_1e4d6ee22_Case>();


	_1e4d6ee22_Case(jule::Ptr<_1e4d6ee22_Match> __param_owner, jule::Ptr<_1e4d6ee22_Scope> __param_scope, jule::Slice<jule::Any> __param_exprs, jule::Ptr<_1e4d6ee22_Case> __param_next): _field_owner(__param_owner), _field_scope(__param_scope), _field_exprs(__param_exprs), _field_next(__param_next) {}

	

	_1e4d6ee22_Case(void) = default;

	inline jule::Bool _method_is_default(void);


	inline bool operator==(const _1e4d6ee22_Case &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_next == _Src._field_next;
	}

	inline bool operator!=(const _1e4d6ee22_Case &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d6ee22_FallSt {
	jule::Uintptr _field_dest_case = jule::Uintptr();


	_1e4d6ee22_FallSt(jule::Uintptr __param_dest_case): _field_dest_case(__param_dest_case) {}

	

	_1e4d6ee22_FallSt(void) = default;

	inline bool operator==(const _1e4d6ee22_FallSt &_Src) const {
		return 
			this->_field_dest_case == _Src._field_dest_case;
	}

	inline bool operator!=(const _1e4d6ee22_FallSt &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d6ee22_RetSt {
	jule::Slice<jule::Ptr<_1e50b0492_Var>> _field_vars = jule::Slice<jule::Ptr<_1e50b0492_Var>>();
	jule::Any _field_expr = jule::Any();


	_1e4d6ee22_RetSt(jule::Slice<jule::Ptr<_1e50b0492_Var>> __param_vars, jule::Any __param_expr): _field_vars(__param_vars), _field_expr(__param_expr) {}

	

	_1e4d6ee22_RetSt(void) = default;

	inline bool operator==(const _1e4d6ee22_RetSt &_Src) const {
		return 
			this->_field_vars == _Src._field_vars &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1e4d6ee22_RetSt &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d6ee22_Recover {
	jule::Ptr<_1e4b15a20_FnIns> _field_handler = jule::Ptr<_1e4b15a20_FnIns>();
	jule::Any _field_handler_expr = jule::Any();
	jule::Ptr<_1e4d6ee22_Scope> _field_scope = jule::Ptr<_1e4d6ee22_Scope>();
	jule::Ptr<_1e4b15a20_FnIns> _field_scope_owner = jule::Ptr<_1e4b15a20_FnIns>();


	_1e4d6ee22_Recover(jule::Ptr<_1e4b15a20_FnIns> __param_handler, jule::Any __param_handler_expr, jule::Ptr<_1e4d6ee22_Scope> __param_scope, jule::Ptr<_1e4b15a20_FnIns> __param_scope_owner): _field_handler(__param_handler), _field_handler_expr(__param_handler_expr), _field_scope(__param_scope), _field_scope_owner(__param_scope_owner) {}

	

	_1e4d6ee22_Recover(void) = default;

	inline bool operator==(const _1e4d6ee22_Recover &_Src) const {
		return 
			this->_field_handler == _Src._field_handler &&
			this->_field_handler_expr == _Src._field_handler_expr &&
			this->_field_scope == _Src._field_scope &&
			this->_field_scope_owner == _Src._field_scope_owner;
	}

	inline bool operator!=(const _1e4d6ee22_Recover &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d6ee22_ScopeGoto {
	jule::Ptr<_1e38d4ec7_GotoSt> _field_gt = jule::Ptr<_1e38d4ec7_GotoSt>();
	jule::Ptr<_1e4d6ee22_ScopeChecker> _field_scope = jule::Ptr<_1e4d6ee22_ScopeChecker>();
	jule::Int _field_pos = jule::Int();


	_1e4d6ee22_ScopeGoto(jule::Ptr<_1e38d4ec7_GotoSt> __param_gt, jule::Ptr<_1e4d6ee22_ScopeChecker> __param_scope, jule::Int __param_pos): _field_gt(__param_gt), _field_scope(__param_scope), _field_pos(__param_pos) {}

	

	_1e4d6ee22_ScopeGoto(void) = default;

	inline bool operator==(const _1e4d6ee22_ScopeGoto &_Src) const {
		return 
			this->_field_gt == _Src._field_gt &&
			this->_field_scope == _Src._field_scope &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _1e4d6ee22_ScopeGoto &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d6ee22_ScopeChecker: public _1e5425ab0_Lookup {
	jule::Ptr<_1e4d6ee22_ScopeChecker> self;

	jule::Ptr<_1e5054722_Sema> _field_s = jule::Ptr<_1e5054722_Sema>();
	jule::Ptr<_1e4b15a20_FnIns> _field_owner = jule::Ptr<_1e4b15a20_FnIns>();
	jule::Ptr<_1e4d6ee22_ScopeChecker> _field_parent = jule::Ptr<_1e4d6ee22_ScopeChecker>();
	jule::Int _field_child_index = jule::Int();
	jule::Ptr<_1e5291035_SymbolTable> _field_table = jule::Ptr<_1e5291035_SymbolTable>();
	jule::Ptr<_1e4d6ee22_Scope> _field_scope = jule::Ptr<_1e4d6ee22_Scope>();
	jule::Ptr<_1e38d4ec7_ScopeTree> _field_tree = jule::Ptr<_1e38d4ec7_ScopeTree>();
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_cse = jule::Uintptr();
	jule::Ptr<jule::Slice<jule::Ptr<_1e4d6ee22_ScopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1e4d6ee22_ScopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1e4d6ee22_ScopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1e4d6ee22_ScopeGoto>>>();
	jule::Int _field_i = jule::Int();


	_1e4d6ee22_ScopeChecker(jule::Ptr<_1e5054722_Sema> __param_s, jule::Ptr<_1e4b15a20_FnIns> __param_owner, jule::Ptr<_1e4d6ee22_ScopeChecker> __param_parent, jule::Int __param_child_index, jule::Ptr<_1e5291035_SymbolTable> __param_table, jule::Ptr<_1e4d6ee22_Scope> __param_scope, jule::Ptr<_1e38d4ec7_ScopeTree> __param_tree, jule::Uintptr __param_it, jule::Uintptr __param_cse, jule::Ptr<jule::Slice<jule::Ptr<_1e4d6ee22_ScopeLabel>>> __param_labels, jule::Ptr<jule::Slice<jule::Ptr<_1e4d6ee22_ScopeGoto>>> __param_gotos, jule::Int __param_i): _field_s(__param_s), _field_owner(__param_owner), _field_parent(__param_parent), _field_child_index(__param_child_index), _field_table(__param_table), _field_scope(__param_scope), _field_tree(__param_tree), _field_it(__param_it), _field_cse(__param_cse), _field_labels(__param_labels), _field_gotos(__param_gotos), _field_i(__param_i) {
		this->self = jule::Ptr<_1e4d6ee22_ScopeChecker>::make(this, nullptr);

	}

	~_1e4d6ee22_ScopeChecker(void) { this->self.ref = nullptr; }

	_1e4d6ee22_ScopeChecker(void) { this->self = jule::Ptr<_1e4d6ee22_ScopeChecker>::make(this, nullptr); }

	inline jule::Ptr<_1e4ee54e8_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_1e4ee54e8_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1e4ee54e8_ImportInfo>)>);


	inline jule::Ptr<_1e50b0492_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_1e6420856_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_1e398ee72_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_1e4b15a20_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_1e4d61232_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_1e4d62387_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_root(void);


	inline jule::Ptr<_1e4d6ee22_ScopeChecker> _method_get_root(void);


	inline jule::Ptr<_1e4d6ee22_Label> _method_find_label(jule::Str);


	inline jule::Ptr<_1e4d6ee22_ScopeLabel> _method_find_label_scope(jule::Str);


	inline jule::Ptr<_1e4d6ee22_ScopeLabel> _method_find_label_all(jule::Str);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str);


	inline void _method_check_var_decl(jule::Ptr<_1e38d4ec7_VarDecl>);


	inline void _method_check_type_alias_decl(jule::Ptr<_1e38d4ec7_TypeAliasDecl>);


	inline jule::Ptr<_1e4d6ee22_Scope> _method_get_child(void);


	inline void _method_check_child_ssc(jule::Ptr<_1e38d4ec7_ScopeTree>&,jule::Ptr<_1e4d6ee22_Scope>&,jule::Ptr<_1e4d6ee22_ScopeChecker>&);


	inline jule::Ptr<_1e4d6ee22_Scope> _method_check_child_sc(jule::Ptr<_1e38d4ec7_ScopeTree>&,jule::Ptr<_1e4d6ee22_ScopeChecker>&);


	inline jule::Ptr<_1e4d6ee22_Scope> _method_check_child(jule::Ptr<_1e38d4ec7_ScopeTree>&);


	inline void _method_check_anon_scope(jule::Ptr<_1e38d4ec7_ScopeTree>);


	inline jule::Bool _method_try_call_recover(jule::Ptr<_1e50ac4b1_Data>&);


	inline void _method_check_expr(jule::Ptr<_1e38d4ec7_Expr>);


	inline jule::Ptr<_1e4d6ee22_If> _method_check_if(jule::Ptr<_1e38d4ec7_If>);


	inline jule::Ptr<_1e4d6ee22_Else> _method_check_else(jule::Ptr<_1e38d4ec7_Else>);


	inline void _method_check_conditional(jule::Ptr<_1e38d4ec7_Conditional>);


	inline jule::Ptr<_1e4d6ee22_Scope> _method_check_iter_scope_sc(jule::Uintptr,jule::Ptr<_1e38d4ec7_ScopeTree>,jule::Ptr<_1e4d6ee22_ScopeChecker>);


	inline jule::Ptr<_1e4d6ee22_Scope> _method_check_iter_scope(jule::Uintptr,jule::Ptr<_1e38d4ec7_ScopeTree>&);


	inline void _method_check_inf_iter(jule::Ptr<_1e38d4ec7_Iter>&);


	inline void _method_check_while_iter(jule::Ptr<_1e38d4ec7_Iter>&);


	inline void _method_check_range_iter(jule::Ptr<_1e38d4ec7_Iter>&);


	inline void _method_check_iter(jule::Ptr<_1e38d4ec7_Iter>);


	inline jule::Bool _method_check_valid_cont_label(jule::Uintptr);


	inline jule::Bool _method_check_valid_break_label(jule::Uintptr);


	inline jule::Ptr<_1e4d6ee22_ContSt> _method_check_cont_valid_scope(jule::Ptr<_1e38d4ec7_ContSt>);


	inline void _method_check_cont(jule::Ptr<_1e38d4ec7_ContSt>);


	inline void _method_check_label(jule::Ptr<_1e38d4ec7_LabelSt>);


	inline void _method_push_goto(jule::Ptr<_1e38d4ec7_GotoSt>);


	inline void _method_check_postfix(jule::Ptr<_1e38d4ec7_AssignSt>);


	inline jule::Bool _method_is_new_assign_ident(jule::Str);


	inline void _method_check_single_assign(jule::Ptr<_1e38d4ec7_AssignSt>&);


	inline void _method___process_end_part_of_multi_assign(jule::Ptr<_1e4d6ee22_MultiAssign>,jule::Ptr<_1e38d4ec7_AssignSt>,jule::Ptr<_1e38d4ec7_AssignLeft>,jule::Ptr<_1e50ac4b1_Data>,jule::Ptr<_1e50ac4b1_Data>);


	inline void _method_check_ret_multi_assign(jule::Ptr<_1e38d4ec7_AssignSt>&);


	inline void _method_check_multi_assign(jule::Ptr<_1e38d4ec7_AssignSt>&);


	inline void _method_check_assign_st(jule::Ptr<_1e38d4ec7_AssignSt>);


	inline jule::Ptr<_1e4d6ee22_Scope> _method_check_case_scope(jule::Ptr<_1e4d6ee22_Case>&,jule::Ptr<_1e38d4ec7_ScopeTree>&);


	inline jule::Ptr<_1e4d6ee22_Case> _method_check_case(jule::Ptr<_1e4d6ee22_Match>,jule::Int,jule::Ptr<_1e38d4ec7_Case>,jule::Ptr<_1e50ac4b1_Data>);


	inline void _method_check_cases(jule::Ptr<_1e38d4ec7_MatchCase>&,jule::Ptr<_1e4d6ee22_Match>,jule::Ptr<_1e50ac4b1_Data>);


	inline jule::Ptr<_1e4d6ee22_Case> _method_check_default(jule::Ptr<_1e4d6ee22_Match>,jule::Ptr<_1e38d4ec7_Else>);


	inline void _method_check_comptime_panic(jule::Ptr<_1e4d6ee22_Scope>&,_1e3bad8dd_Token);


	inline void _method_push_type_match(jule::Ptr<_1e4d6ee22_Match>,jule::Ptr<_1e38d4ec7_MatchCase>&);


	inline void _method_check_type_match(jule::Ptr<_1e38d4ec7_MatchCase>&);


	inline void _method_check_common_match(jule::Ptr<_1e38d4ec7_MatchCase>&);


	inline void _method_check_match(jule::Ptr<_1e38d4ec7_MatchCase>);


	inline void _method_check_fall(jule::Ptr<_1e38d4ec7_FallSt>);


	inline jule::Ptr<_1e4d6ee22_BreakSt> _method_check_break_with_label(jule::Ptr<_1e38d4ec7_BreakSt>);


	inline jule::Ptr<_1e4d6ee22_BreakSt> _method_check_plain_break(jule::Ptr<_1e38d4ec7_BreakSt>);


	inline void _method_check_break(jule::Ptr<_1e38d4ec7_BreakSt>);


	inline void _method_check_ret(jule::Ptr<_1e38d4ec7_RetSt>);


	inline void _method_check_node(jule::Any&);


	inline void _method_check_tree(void);


	inline void _method_check_goto(jule::Ptr<_1e4d6ee22_ScopeGoto>&,jule::Ptr<_1e4d6ee22_ScopeLabel>&);


	inline void _method_check_gotos(void);


	inline void _method_check_labels(void);


	inline void _method_check_vars(void);


	inline void _method_check_aliases(void);


	inline void _method_check(jule::Ptr<_1e38d4ec7_ScopeTree>&,jule::Ptr<_1e4d6ee22_Scope>&);


	inline jule::Ptr<_1e4d6ee22_ScopeChecker> _method_new_child_checker(void);


	inline bool operator==(const _1e4d6ee22_ScopeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_owner == _Src._field_owner &&
			this->_field_parent == _Src._field_parent &&
			this->_field_child_index == _Src._field_child_index &&
			this->_field_table == _Src._field_table &&
			this->_field_scope == _Src._field_scope &&
			this->_field_tree == _Src._field_tree &&
			this->_field_it == _Src._field_it &&
			this->_field_cse == _Src._field_cse &&
			this->_field_labels == _Src._field_labels &&
			this->_field_gotos == _Src._field_gotos &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _1e4d6ee22_ScopeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_BinopExprModel {
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	jule::Str _field_op = jule::Str();


	_1e4d70a6b_BinopExprModel(jule::Any __param_left, jule::Any __param_right, jule::Str __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_1e4d70a6b_BinopExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_BinopExprModel &_Src) const {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1e4d70a6b_BinopExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_UnaryExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_op = jule::Str();


	_1e4d70a6b_UnaryExprModel(jule::Any __param_expr, jule::Str __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_1e4d70a6b_UnaryExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_UnaryExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1e4d70a6b_UnaryExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_StructArgExprModel {
	jule::Ptr<_1e398ee72_FieldIns> _field_field = jule::Ptr<_1e398ee72_FieldIns>();
	jule::Any _field_expr = jule::Any();


	_1e4d70a6b_StructArgExprModel(jule::Ptr<_1e398ee72_FieldIns> __param_field, jule::Any __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_1e4d70a6b_StructArgExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_StructArgExprModel &_Src) const {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1e4d70a6b_StructArgExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_StructLitExprModel {
	jule::Ptr<_1e398ee72_StructIns> _field_strct = jule::Ptr<_1e398ee72_StructIns>();
	jule::Slice<jule::Ptr<_1e4d70a6b_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1e4d70a6b_StructArgExprModel>>();


	_1e4d70a6b_StructLitExprModel(jule::Ptr<_1e398ee72_StructIns> __param_strct, jule::Slice<jule::Ptr<_1e4d70a6b_StructArgExprModel>> __param_args): _field_strct(__param_strct), _field_args(__param_args) {}

	

	_1e4d70a6b_StructLitExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_StructLitExprModel &_Src) const {
		return 
			this->_field_strct == _Src._field_strct &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1e4d70a6b_StructLitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_AllocStructLitExprModel {
	jule::Ptr<_1e4d70a6b_StructLitExprModel> _field_lit = jule::Ptr<_1e4d70a6b_StructLitExprModel>();


	_1e4d70a6b_AllocStructLitExprModel(jule::Ptr<_1e4d70a6b_StructLitExprModel> __param_lit): _field_lit(__param_lit) {}

	

	_1e4d70a6b_AllocStructLitExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_AllocStructLitExprModel &_Src) const {
		return 
			this->_field_lit == _Src._field_lit;
	}

	inline bool operator!=(const _1e4d70a6b_AllocStructLitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_CastingExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1e6420856_TypeKind> _field_kind = jule::Ptr<_1e6420856_TypeKind>();
	jule::Ptr<_1e6420856_TypeKind> _field_expr_kind = jule::Ptr<_1e6420856_TypeKind>();


	_1e4d70a6b_CastingExprModel(jule::Any __param_expr, jule::Ptr<_1e6420856_TypeKind> __param_kind, jule::Ptr<_1e6420856_TypeKind> __param_expr_kind): _field_expr(__param_expr), _field_kind(__param_kind), _field_expr_kind(__param_expr_kind) {}

	

	_1e4d70a6b_CastingExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_CastingExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr_kind == _Src._field_expr_kind;
	}

	inline bool operator!=(const _1e4d70a6b_CastingExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_FnCallExprModel {
	jule::Ptr<_1e4b15a20_FnIns> _field_func = jule::Ptr<_1e4b15a20_FnIns>();
	jule::Bool _field_is_co = jule::Bool();
	jule::Any _field_expr = jule::Any();
	jule::Slice<jule::Any> _field_args = jule::Slice<jule::Any>();


	_1e4d70a6b_FnCallExprModel(jule::Ptr<_1e4b15a20_FnIns> __param_func, jule::Bool __param_is_co, jule::Any __param_expr, jule::Slice<jule::Any> __param_args): _field_func(__param_func), _field_is_co(__param_is_co), _field_expr(__param_expr), _field_args(__param_args) {}

	

	_1e4d70a6b_FnCallExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_FnCallExprModel &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_is_co == _Src._field_is_co &&
			this->_field_expr == _Src._field_expr &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1e4d70a6b_FnCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_SliceExprModel {
	jule::Ptr<_1e6420856_TypeKind> _field_elem_kind = jule::Ptr<_1e6420856_TypeKind>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_1e4d70a6b_SliceExprModel(jule::Ptr<_1e6420856_TypeKind> __param_elem_kind, jule::Slice<jule::Any> __param_elems): _field_elem_kind(__param_elem_kind), _field_elems(__param_elems) {}

	

	_1e4d70a6b_SliceExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_SliceExprModel &_Src) const {
		return 
			this->_field_elem_kind == _Src._field_elem_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _1e4d70a6b_SliceExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_IndexigExprModel {
	jule::Ptr<_1e50ac4b1_Data> _field_expr = jule::Ptr<_1e50ac4b1_Data>();
	jule::Ptr<_1e50ac4b1_Data> _field_index = jule::Ptr<_1e50ac4b1_Data>();


	_1e4d70a6b_IndexigExprModel(jule::Ptr<_1e50ac4b1_Data> __param_expr, jule::Ptr<_1e50ac4b1_Data> __param_index): _field_expr(__param_expr), _field_index(__param_index) {}

	

	_1e4d70a6b_IndexigExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_IndexigExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _1e4d70a6b_IndexigExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_AnonFnExprModel {
	jule::Ptr<_1e4b15a20_FnIns> _field_func = jule::Ptr<_1e4b15a20_FnIns>();
	jule::Bool _field_global = jule::Bool();


	_1e4d70a6b_AnonFnExprModel(jule::Ptr<_1e4b15a20_FnIns> __param_func, jule::Bool __param_global): _field_func(__param_func), _field_global(__param_global) {}

	

	_1e4d70a6b_AnonFnExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_AnonFnExprModel &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_global == _Src._field_global;
	}

	inline bool operator!=(const _1e4d70a6b_AnonFnExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_KeyValPairExprModel {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();


	_1e4d70a6b_KeyValPairExprModel(jule::Any __param_key, jule::Any __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1e4d70a6b_KeyValPairExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_KeyValPairExprModel &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _1e4d70a6b_KeyValPairExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_MapExprModel {
	jule::Ptr<_1e6420856_TypeKind> _field_key_kind = jule::Ptr<_1e6420856_TypeKind>();
	jule::Ptr<_1e6420856_TypeKind> _field_val_kind = jule::Ptr<_1e6420856_TypeKind>();
	jule::Slice<jule::Ptr<_1e4d70a6b_KeyValPairExprModel>> _field_entries = jule::Slice<jule::Ptr<_1e4d70a6b_KeyValPairExprModel>>();


	_1e4d70a6b_MapExprModel(jule::Ptr<_1e6420856_TypeKind> __param_key_kind, jule::Ptr<_1e6420856_TypeKind> __param_val_kind, jule::Slice<jule::Ptr<_1e4d70a6b_KeyValPairExprModel>> __param_entries): _field_key_kind(__param_key_kind), _field_val_kind(__param_val_kind), _field_entries(__param_entries) {}

	

	_1e4d70a6b_MapExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_MapExprModel &_Src) const {
		return 
			this->_field_key_kind == _Src._field_key_kind &&
			this->_field_val_kind == _Src._field_val_kind &&
			this->_field_entries == _Src._field_entries;
	}

	inline bool operator!=(const _1e4d70a6b_MapExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_SlicingExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();


	_1e4d70a6b_SlicingExprModel(jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right): _field_expr(__param_expr), _field_left(__param_left), _field_right(__param_right) {}

	

	_1e4d70a6b_SlicingExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_SlicingExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _1e4d70a6b_SlicingExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_TraitSubIdentExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_ident = jule::Str();


	_1e4d70a6b_TraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident): _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_1e4d70a6b_TraitSubIdentExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_TraitSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1e4d70a6b_TraitSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_StructSubIdentExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1e6420856_TypeKind> _field_expr_kind = jule::Ptr<_1e6420856_TypeKind>();
	jule::Ptr<_1e4b15a20_FnIns> _field_method = jule::Ptr<_1e4b15a20_FnIns>();
	jule::Ptr<_1e398ee72_FieldIns> _field_field = jule::Ptr<_1e398ee72_FieldIns>();


	_1e4d70a6b_StructSubIdentExprModel(jule::Any __param_expr, jule::Ptr<_1e6420856_TypeKind> __param_expr_kind, jule::Ptr<_1e4b15a20_FnIns> __param_method, jule::Ptr<_1e398ee72_FieldIns> __param_field): _field_expr(__param_expr), _field_expr_kind(__param_expr_kind), _field_method(__param_method), _field_field(__param_field) {}

	

	_1e4d70a6b_StructSubIdentExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_StructSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_method == _Src._field_method &&
			this->_field_field == _Src._field_field;
	}

	inline bool operator!=(const _1e4d70a6b_StructSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_StructStaticIdentExprModel {
	jule::Ptr<_1e398ee72_StructIns> _field_structure = jule::Ptr<_1e398ee72_StructIns>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1e4b15a20_FnIns> _field_method = jule::Ptr<_1e4b15a20_FnIns>();


	_1e4d70a6b_StructStaticIdentExprModel(jule::Ptr<_1e398ee72_StructIns> __param_structure, jule::Any __param_expr, jule::Ptr<_1e4b15a20_FnIns> __param_method): _field_structure(__param_structure), _field_expr(__param_expr), _field_method(__param_method) {}

	

	_1e4d70a6b_StructStaticIdentExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_StructStaticIdentExprModel &_Src) const {
		return 
			this->_field_structure == _Src._field_structure &&
			this->_field_expr == _Src._field_expr &&
			this->_field_method == _Src._field_method;
	}

	inline bool operator!=(const _1e4d70a6b_StructStaticIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_ArrayExprModel {
	jule::Ptr<_1e6420856_Arr> _field_kind = jule::Ptr<_1e6420856_Arr>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_1e4d70a6b_ArrayExprModel(jule::Ptr<_1e6420856_Arr> __param_kind, jule::Slice<jule::Any> __param_elems): _field_kind(__param_kind), _field_elems(__param_elems) {}

	

	_1e4d70a6b_ArrayExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_ArrayExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _1e4d70a6b_ArrayExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_CommonIdentExprModel {
	jule::Str _field_ident = jule::Str();


	_1e4d70a6b_CommonIdentExprModel(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1e4d70a6b_CommonIdentExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_CommonIdentExprModel &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1e4d70a6b_CommonIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_CommonSubIdentExprModel {
	jule::Ptr<_1e6420856_TypeKind> _field_expr_kind = jule::Ptr<_1e6420856_TypeKind>();
	jule::Any _field_expr = jule::Any();
	jule::Str _field_ident = jule::Str();


	_1e4d70a6b_CommonSubIdentExprModel(jule::Ptr<_1e6420856_TypeKind> __param_expr_kind, jule::Any __param_expr, jule::Str __param_ident): _field_expr_kind(__param_expr_kind), _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_1e4d70a6b_CommonSubIdentExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_CommonSubIdentExprModel &_Src) const {
		return 
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1e4d70a6b_CommonSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_TupleExprModel {
	jule::Slice<jule::Ptr<_1e50ac4b1_Data>> _field_datas = jule::Slice<jule::Ptr<_1e50ac4b1_Data>>();


	_1e4d70a6b_TupleExprModel(jule::Slice<jule::Ptr<_1e50ac4b1_Data>> __param_datas): _field_datas(__param_datas) {}

	

	_1e4d70a6b_TupleExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_TupleExprModel &_Src) const {
		return 
			this->_field_datas == _Src._field_datas;
	}

	inline bool operator!=(const _1e4d70a6b_TupleExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_BuiltinOutCallExprModel {
	jule::Any _field_expr = jule::Any();


	_1e4d70a6b_BuiltinOutCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1e4d70a6b_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_BuiltinOutCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1e4d70a6b_BuiltinOutCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_BuiltinOutlnCallExprModel {
	jule::Any _field_expr = jule::Any();


	_1e4d70a6b_BuiltinOutlnCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1e4d70a6b_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_BuiltinOutlnCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1e4d70a6b_BuiltinOutlnCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_BuiltinCloneCallExprModel {
	jule::Any _field_expr = jule::Any();


	_1e4d70a6b_BuiltinCloneCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1e4d70a6b_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_BuiltinCloneCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1e4d70a6b_BuiltinCloneCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_BuiltinNewCallExprModel {
	jule::Ptr<_1e6420856_TypeKind> _field_kind = jule::Ptr<_1e6420856_TypeKind>();
	jule::Any _field_init = jule::Any();


	_1e4d70a6b_BuiltinNewCallExprModel(jule::Ptr<_1e6420856_TypeKind> __param_kind, jule::Any __param_init): _field_kind(__param_kind), _field_init(__param_init) {}

	

	_1e4d70a6b_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_BuiltinNewCallExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_init == _Src._field_init;
	}

	inline bool operator!=(const _1e4d70a6b_BuiltinNewCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_BuiltinRealCallExprModel {
	jule::Any _field_expr = jule::Any();


	_1e4d70a6b_BuiltinRealCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1e4d70a6b_BuiltinRealCallExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_BuiltinRealCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1e4d70a6b_BuiltinRealCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_BuiltinDropCallExprModel {
	jule::Any _field_expr = jule::Any();


	_1e4d70a6b_BuiltinDropCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1e4d70a6b_BuiltinDropCallExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_BuiltinDropCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1e4d70a6b_BuiltinDropCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_BuiltinPanicCallExprModel {
	jule::Any _field_expr = jule::Any();


	_1e4d70a6b_BuiltinPanicCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1e4d70a6b_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_BuiltinPanicCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1e4d70a6b_BuiltinPanicCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_BuiltinMakeCallExprModel {
	jule::Ptr<_1e6420856_TypeKind> _field_kind = jule::Ptr<_1e6420856_TypeKind>();
	jule::Any _field_len = jule::Any();
	jule::Any _field_cap = jule::Any();


	_1e4d70a6b_BuiltinMakeCallExprModel(jule::Ptr<_1e6420856_TypeKind> __param_kind, jule::Any __param_len, jule::Any __param_cap): _field_kind(__param_kind), _field_len(__param_len), _field_cap(__param_cap) {}

	

	_1e4d70a6b_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_BuiltinMakeCallExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_len == _Src._field_len &&
			this->_field_cap == _Src._field_cap;
	}

	inline bool operator!=(const _1e4d70a6b_BuiltinMakeCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_BuiltinAppendCallExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_elements = jule::Any();


	_1e4d70a6b_BuiltinAppendCallExprModel(jule::Any __param_dest, jule::Any __param_elements): _field_dest(__param_dest), _field_elements(__param_elements) {}

	

	_1e4d70a6b_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_BuiltinAppendCallExprModel &_Src) const {
		return 
			this->_field_dest == _Src._field_dest &&
			this->_field_elements == _Src._field_elements;
	}

	inline bool operator!=(const _1e4d70a6b_BuiltinAppendCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_BuiltinErrorTraitSubIdentExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_ident = jule::Str();


	_1e4d70a6b_BuiltinErrorTraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident): _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_1e4d70a6b_BuiltinErrorTraitSubIdentExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_BuiltinErrorTraitSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1e4d70a6b_BuiltinErrorTraitSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_SizeofExprModel {
	jule::Any _field_expr = jule::Any();


	_1e4d70a6b_SizeofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1e4d70a6b_SizeofExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_SizeofExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1e4d70a6b_SizeofExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_AlignofExprModel {
	jule::Any _field_expr = jule::Any();


	_1e4d70a6b_AlignofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1e4d70a6b_AlignofExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_AlignofExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1e4d70a6b_AlignofExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_RuneExprModel {
	jule::I32 _field_code = jule::I32();


	_1e4d70a6b_RuneExprModel(jule::I32 __param_code): _field_code(__param_code) {}

	

	_1e4d70a6b_RuneExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_RuneExprModel &_Src) const {
		return 
			this->_field_code == _Src._field_code;
	}

	inline bool operator!=(const _1e4d70a6b_RuneExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_IntegratedToStrExprModel {
	jule::Any _field_expr = jule::Any();


	_1e4d70a6b_IntegratedToStrExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1e4d70a6b_IntegratedToStrExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_IntegratedToStrExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1e4d70a6b_IntegratedToStrExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d70a6b_TernaryExprModel {
	jule::Any _field_condition = jule::Any();
	jule::Any _field_true_expr = jule::Any();
	jule::Any _field_false_expr = jule::Any();


	_1e4d70a6b_TernaryExprModel(jule::Any __param_condition, jule::Any __param_true_expr, jule::Any __param_false_expr): _field_condition(__param_condition), _field_true_expr(__param_true_expr), _field_false_expr(__param_false_expr) {}

	

	_1e4d70a6b_TernaryExprModel(void) = default;

	inline bool operator==(const _1e4d70a6b_TernaryExprModel &_Src) const {
		return 
			this->_field_condition == _Src._field_condition &&
			this->_field_true_expr == _Src._field_true_expr &&
			this->_field_false_expr == _Src._field_false_expr;
	}

	inline bool operator!=(const _1e4d70a6b_TernaryExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d6cb45_DirectiveChecker {
	jule::Ptr<_1e5054722_Sema> _field_s = jule::Ptr<_1e5054722_Sema>();
	jule::Slice<jule::Ptr<_1e38d4ec7_Directive>> _field_d = jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>();
	jule::Any _field_o = jule::Any();


	_1e4d6cb45_DirectiveChecker(jule::Ptr<_1e5054722_Sema> __param_s, jule::Slice<jule::Ptr<_1e38d4ec7_Directive>> __param_d, jule::Any __param_o): _field_s(__param_s), _field_d(__param_d), _field_o(__param_o) {}

	

	_1e4d6cb45_DirectiveChecker(void) = default;

	inline void _method_check_cdef(jule::Ptr<_1e38d4ec7_Directive>&);


	inline void _method_check_typedef(jule::Ptr<_1e38d4ec7_Directive>&);


	inline void _method_check_derive(jule::Ptr<_1e38d4ec7_Directive>&);


	inline void _method_check_namespace(jule::Ptr<_1e38d4ec7_Directive>&);


	inline void _method_check_directive(jule::Ptr<_1e38d4ec7_Directive>&);


	inline void _method_check(void);


	inline bool operator==(const _1e4d6cb45_DirectiveChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_d == _Src._field_d &&
			this->_field_o == _Src._field_o;
	}

	inline bool operator!=(const _1e4d6cb45_DirectiveChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1e4ee54e8_Package: public _1e5425ab0_Lookup {
	jule::Slice<jule::Ptr<_1e5291035_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1e5291035_SymbolTable>>();


	_1e4ee54e8_Package(jule::Slice<jule::Ptr<_1e5291035_SymbolTable>> __param_files): _field_files(__param_files) {}

	

	_1e4ee54e8_Package(void) = default;

	inline jule::Ptr<_1e4ee54e8_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_1e4ee54e8_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1e4ee54e8_ImportInfo>)>);


	inline jule::Ptr<_1e50b0492_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_1e6420856_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_1e398ee72_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_1e4b15a20_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_1e4d61232_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_1e4d62387_Enum> _method_find_enum(jule::Str);


	inline bool operator==(const _1e4ee54e8_Package &_Src) const {
		return 
			this->_field_files == _Src._field_files;
	}

	inline bool operator!=(const _1e4ee54e8_Package &_Src) const { return !this->operator==(_Src); }
};


struct _1e5054722_Sema: public _1e5425ab0_Lookup {
	jule::Ptr<_1e5054722_Sema> self;

	jule::Slice<_1e24777a2_Log> _field_errors = jule::Slice<_1e24777a2_Log>();
	jule::Slice<jule::Ptr<_1e5291035_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1e5291035_SymbolTable>>();
	jule::Ptr<_1e5291035_SymbolTable> _field_file = jule::Ptr<_1e5291035_SymbolTable>();
	jule::Int _field_flags = 0LL;


	_1e5054722_Sema(jule::Slice<_1e24777a2_Log> __param_errors, jule::Slice<jule::Ptr<_1e5291035_SymbolTable>> __param_files, jule::Ptr<_1e5291035_SymbolTable> __param_file, jule::Int __param_flags): _field_errors(__param_errors), _field_files(__param_files), _field_file(__param_file), _field_flags(__param_flags) {
		this->self = jule::Ptr<_1e5054722_Sema>::make(this, nullptr);

	}

	~_1e5054722_Sema(void) { this->self.ref = nullptr; }

	_1e5054722_Sema(void) { this->self = jule::Ptr<_1e5054722_Sema>::make(this, nullptr); }

	inline jule::Ptr<_1e4ee54e8_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_1e4ee54e8_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1e4ee54e8_ImportInfo>)>);


	inline jule::Ptr<_1e50b0492_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_1e6420856_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_1e398ee72_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_1e4b15a20_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_1e4d61232_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_1e4d62387_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_flag(jule::Int);


	inline void _method_set_current_file(jule::Ptr<_1e5291035_SymbolTable>);


	inline void _method_push_err(_1e3bad8dd_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_accessible_define(jule::Bool,_1e3bad8dd_Token);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline void _method_check_directives(jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>&,jule::Any);


	inline jule::Bool _method_check_generic_quantity(jule::Int,jule::Int,_1e3bad8dd_Token);


	inline jule::Bool _method_is_duplicated_import_selection(jule::Uintptr,jule::Str);


	inline jule::Any _method_get_import_def(jule::Str,jule::Ptr<_1e4ee54e8_ImportInfo>&);


	inline void _method_check_import_selections(jule::Ptr<_1e4ee54e8_ImportInfo>&);


	inline jule::Bool _method_is_use_alias_duplication(jule::Ptr<_1e4ee54e8_ImportInfo>&);


	inline jule::Bool _method_check_import(jule::Ptr<_1e4ee54e8_ImportInfo>&);


	inline void _method_check_imports(void);


	inline void _method_impl_file_impls(void);


	inline void _method_impl_impls(void);


	inline void _method_check_enums(void);


	inline jule::Bool _method_check_type_with_refers(jule::Ptr<_1e6420856_TypeSymbol>&,jule::Trait<_1e5425ab0_Lookup>,jule::Ptr<_1e6420856_Referencer>);


	inline jule::Bool _method_check_type(jule::Ptr<_1e6420856_TypeSymbol>&,jule::Trait<_1e5425ab0_Lookup>);


	inline jule::Ptr<_1e6420856_TypeKind> _method_build_type_with_generics(jule::Ptr<_1e38d4ec7_TypeDecl>&,jule::Slice<jule::Ptr<_1e6420856_TypeAlias>>);


	inline jule::Ptr<_1e6420856_TypeKind> _method_build_type(jule::Ptr<_1e38d4ec7_TypeDecl>&);


	inline jule::Ptr<_1e50ac4b1_Eval> _method_evalpd(jule::Trait<_1e5425ab0_Lookup>,jule::Ptr<_1e6420856_TypeKind>,jule::Ptr<_1e50b0492_Var>);


	inline jule::Ptr<_1e50ac4b1_Eval> _method_evalp(jule::Trait<_1e5425ab0_Lookup>,jule::Ptr<_1e6420856_TypeKind>);


	inline jule::Ptr<_1e50ac4b1_Eval> _method_eval(jule::Trait<_1e5425ab0_Lookup>);


	inline void _method_check_assign_type(jule::Bool,jule::Ptr<_1e6420856_TypeKind>&,jule::Ptr<_1e50ac4b1_Data>&,_1e3bad8dd_Token);


	inline jule::Bool _method_check_type_compatibility(jule::Ptr<_1e6420856_TypeKind>&,jule::Ptr<_1e6420856_TypeKind>&,_1e3bad8dd_Token&);


	inline jule::Ptr<_1e6420856_TypeKind> _method_build_non_generic_type_kind(jule::Ptr<_1e38d4ec7_TypeDecl>&,jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>>&);


	inline void _method_build_fn_non_generic_type_kinds(jule::Ptr<_1e4b15a20_FnIns>&);


	inline jule::Ptr<_1e4b15a20_FnIns> _method_get_trait_check_fn_kind(jule::Ptr<_1e4b15a20_Fn>&);


	inline jule::Bool _method_reload_fn_ins_types(jule::Ptr<_1e4b15a20_FnIns>&);


	inline void _method_check_ref_validity_for_init_expr(jule::Bool,jule::Ptr<_1e50ac4b1_Data>&,_1e3bad8dd_Token&);


	inline void _method_check_validity_for_init_expr(jule::Bool,jule::Bool,jule::Ptr<_1e6420856_TypeKind>&,jule::Ptr<_1e50ac4b1_Data>&,_1e3bad8dd_Token&);


	inline jule::Bool _method_check_type_alias_decl_kind(jule::Ptr<_1e6420856_TypeAlias>&,jule::Trait<_1e5425ab0_Lookup>);


	inline void _method_check_type_alias_decl(jule::Ptr<_1e6420856_TypeAlias>&,jule::Trait<_1e5425ab0_Lookup>);


	inline void _method_check_type_alias_decl_dup(jule::Ptr<_1e6420856_TypeAlias>&);


	inline jule::Bool _method_check_type_alias_decls(void);


	inline void _method_check_enum_items_dup(jule::Ptr<_1e4d62387_Enum>);


	inline void _method_check_enum_items_str(jule::Ptr<_1e4d62387_Enum>&);


	inline void _method_check_enum_items_int(jule::Ptr<_1e4d62387_Enum>&);


	inline void _method_check_enum_decl(jule::Ptr<_1e4d62387_Enum>&);


	inline jule::Bool _method_check_enum_decls(void);


	inline jule::Bool _method_check_decl_generics(jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>>&);


	inline jule::Bool _method_check_fn_decl_params_dup(jule::Ptr<_1e4b15a20_Fn>&);


	inline jule::Bool _method_check_fn_decl_result_dup(jule::Ptr<_1e4b15a20_Fn>&);


	inline jule::Bool _method_check_fn_decl_types(jule::Ptr<_1e4b15a20_Fn>&);


	inline jule::Bool _method_check_fn_decl_prototype(jule::Ptr<_1e4b15a20_Fn>&);


	inline void _method_check_trait_decl_method(jule::Ptr<_1e4b15a20_Fn>&);


	inline void _method_check_trait_decl_methods(jule::Ptr<_1e4d61232_Trait>&);


	inline void _method_check_trait_decl(jule::Ptr<_1e4d61232_Trait>&);


	inline jule::Bool _method_check_trait_decls(void);


	inline jule::Bool _method_check_trait_impl_methods(jule::Ptr<_1e4d61232_Trait>&,jule::Ptr<_1e39e721b_Impl>&);


	inline jule::Bool _method_impl_to_struct(jule::Ptr<_1e398ee72_Struct>&,jule::Ptr<_1e39e721b_Impl>&);


	inline void _method_impl_trait(jule::Ptr<_1e39e721b_Impl>&);


	inline void _method_impl_struct(jule::Ptr<_1e39e721b_Impl>&);


	inline void _method_impl_impl(jule::Ptr<_1e39e721b_Impl>&);


	inline void _method_check_var_decl(jule::Ptr<_1e50b0492_Var>&,jule::Trait<_1e5425ab0_Lookup>);


	inline void _method_check_global_var_decl(jule::Ptr<_1e50b0492_Var>&);


	inline jule::Bool _method_check_global_decls(void);


	inline jule::Bool _method_check_struct_trait_impl(jule::Ptr<_1e398ee72_Struct>&,jule::Ptr<_1e4d61232_Trait>&);


	inline jule::Bool _method_check_struct_impls(jule::Ptr<_1e398ee72_Struct>&);


	inline jule::Bool _method_check_struct_fields(jule::Ptr<_1e398ee72_Struct>&);


	inline jule::Bool _method_check_struct_decl_methods(jule::Ptr<_1e398ee72_Struct>&);


	inline void _method_check_struct_decl(jule::Ptr<_1e398ee72_Struct>&);


	inline jule::Bool _method_check_struct_decls(void);


	inline void _method_check_fn_decl(jule::Ptr<_1e4b15a20_Fn>&);


	inline jule::Bool _method_check_fn_decls(void);


	inline void _method_push_cycle_error(jule::Ptr<_1e398ee72_Struct>&,jule::Ptr<_1e398ee72_Struct>&,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Ptr<_1e398ee72_Struct>&,jule::Ptr<_1e398ee72_Struct>&,jule::Str&);


	inline jule::Bool _method_check_struct_derive_illegal_cycles(jule::Str,jule::Ptr<_1e398ee72_Struct>&,jule::Ptr<_1e6420856_TypeKind>&);


	inline jule::Bool _method_check_struct_ins_derive_clone(jule::Ptr<_1e398ee72_StructIns>);


	inline jule::Bool _method_check_struct_derive_clone(jule::Ptr<_1e398ee72_Struct>&);


	inline jule::Bool _method_check_file_derives(void);


	inline void _method_check_package_derives(void);


	inline void _method_check_package_decls(void);


	inline void _method_check_data_for_type_inference(jule::Ptr<_1e50ac4b1_Data>&,_1e3bad8dd_Token&);


	inline void _method_check_var(jule::Ptr<_1e50b0492_Var>&);


	inline void _method_check_type_var(jule::Ptr<_1e50b0492_Var>&,jule::Trait<_1e5425ab0_Lookup>);


	inline void _method_check_global_types(void);


	inline void _method_check_type_method(jule::Ptr<_1e398ee72_StructIns>&,jule::Ptr<_1e4b15a20_Fn>&);


	inline void _method_check_type_struct(jule::Ptr<_1e398ee72_Struct>&);


	inline void _method_check_struct_types(void);


	inline void _method_check_rets(jule::Ptr<_1e4b15a20_FnIns>&);


	inline void _method_check_fn_ins_sc(jule::Ptr<_1e4b15a20_FnIns>&,jule::Ptr<_1e4d6ee22_ScopeChecker>&);


	inline void _method_check_fn_ins(jule::Ptr<_1e4b15a20_FnIns>&);


	inline void _method_check_type_fn(jule::Ptr<_1e4b15a20_Fn>&);


	inline void _method_precheck_type_fn(jule::Ptr<_1e4b15a20_Fn>&);


	inline jule::Bool _method_precheck_fn_types(void);


	inline jule::Bool _method_check_fn_types(void);


	inline void _method_check_package_types(void);


	inline void _method_set_file_sema_fields(void);


	inline void _method_set_sema_fields(void);


	inline void _method_check(jule::Slice<jule::Ptr<_1e5291035_SymbolTable>>&);


	inline bool operator==(const _1e5054722_Sema &_Src) const {
		return 
			this->_field_errors == _Src._field_errors &&
			this->_field_files == _Src._field_files &&
			this->_field_file == _Src._field_file &&
			this->_field_flags == _Src._field_flags;
	}

	inline bool operator!=(const _1e5054722_Sema &_Src) const { return !this->operator==(_Src); }
};


struct _1e50b0492_IterRelation {
	jule::Ptr<_1e50b0492_Var> _field_range = jule::Ptr<_1e50b0492_Var>();


	_1e50b0492_IterRelation(jule::Ptr<_1e50b0492_Var> __param_range): _field_range(__param_range) {}

	

	_1e50b0492_IterRelation(void) = default;

	inline bool operator==(const _1e50b0492_IterRelation &_Src) const {
		return 
			this->_field_range == _Src._field_range;
	}

	inline bool operator!=(const _1e50b0492_IterRelation &_Src) const { return !this->operator==(_Src); }
};


struct _1e522c29b_RangeChecker {
	jule::Ptr<_1e4d6ee22_ScopeChecker> _field_sc = jule::Ptr<_1e4d6ee22_ScopeChecker>();
	jule::Ptr<_1e38d4ec7_RangeKind> _field_rang = jule::Ptr<_1e38d4ec7_RangeKind>();
	jule::Ptr<_1e4d6ee22_RangeIter> _field_kind = jule::Ptr<_1e4d6ee22_RangeIter>();
	jule::Ptr<_1e50ac4b1_Data> _field_d = jule::Ptr<_1e50ac4b1_Data>();


	_1e522c29b_RangeChecker(jule::Ptr<_1e4d6ee22_ScopeChecker> __param_sc, jule::Ptr<_1e38d4ec7_RangeKind> __param_rang, jule::Ptr<_1e4d6ee22_RangeIter> __param_kind, jule::Ptr<_1e50ac4b1_Data> __param_d): _field_sc(__param_sc), _field_rang(__param_rang), _field_kind(__param_kind), _field_d(__param_d) {}

	

	_1e522c29b_RangeChecker(void) = default;

	inline jule::Ptr<_1e50b0492_Var> _method_build_var(jule::Ptr<_1e38d4ec7_VarDecl>&);


	inline void _method_set_size_key(void);


	inline void _method_check_range_expr_validity(jule::Ptr<_1e50ac4b1_Data>&,jule::Ptr<_1e50b0492_Var>&,jule::Ptr<_1e6420856_TypeKind>&);


	inline void _method_check_slice(void);


	inline void _method_check_array(void);


	inline void _method_check_map_key_a(void);


	inline void _method_check_map_key_b(void);


	inline void _method_check_map(void);


	inline void _method_check_str(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1e522c29b_RangeChecker &_Src) const {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_rang == _Src._field_rang &&
			this->_field_kind == _Src._field_kind &&
			this->_field_d == _Src._field_d;
	}

	inline bool operator!=(const _1e522c29b_RangeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1e5291035_SymbolTable: public _1e5425ab0_Lookup {
	jule::Ptr<_1e3beedd5_File> _field_file = jule::Ptr<_1e3beedd5_File>();
	jule::Slice<_1e4cc167b_Pass> _field_passes = jule::Slice<_1e4cc167b_Pass>();
	jule::Slice<jule::Ptr<_1e4ee54e8_ImportInfo>> _field_imports = jule::Slice<jule::Ptr<_1e4ee54e8_ImportInfo>>();
	jule::Slice<jule::Ptr<_1e50b0492_Var>> _field_vars = jule::Slice<jule::Ptr<_1e50b0492_Var>>();
	jule::Slice<jule::Ptr<_1e6420856_TypeAlias>> _field_type_aliases = jule::Slice<jule::Ptr<_1e6420856_TypeAlias>>();
	jule::Slice<jule::Ptr<_1e398ee72_Struct>> _field_structs = jule::Slice<jule::Ptr<_1e398ee72_Struct>>();
	jule::Slice<jule::Ptr<_1e4b15a20_Fn>> _field_funcs = jule::Slice<jule::Ptr<_1e4b15a20_Fn>>();
	jule::Slice<jule::Ptr<_1e4d61232_Trait>> _field_traits = jule::Slice<jule::Ptr<_1e4d61232_Trait>>();
	jule::Slice<jule::Ptr<_1e4d62387_Enum>> _field_enums = jule::Slice<jule::Ptr<_1e4d62387_Enum>>();
	jule::Slice<jule::Ptr<_1e39e721b_Impl>> _field_impls = jule::Slice<jule::Ptr<_1e39e721b_Impl>>();


	_1e5291035_SymbolTable(jule::Ptr<_1e3beedd5_File> __param_file, jule::Slice<_1e4cc167b_Pass> __param_passes, jule::Slice<jule::Ptr<_1e4ee54e8_ImportInfo>> __param_imports, jule::Slice<jule::Ptr<_1e50b0492_Var>> __param_vars, jule::Slice<jule::Ptr<_1e6420856_TypeAlias>> __param_type_aliases, jule::Slice<jule::Ptr<_1e398ee72_Struct>> __param_structs, jule::Slice<jule::Ptr<_1e4b15a20_Fn>> __param_funcs, jule::Slice<jule::Ptr<_1e4d61232_Trait>> __param_traits, jule::Slice<jule::Ptr<_1e4d62387_Enum>> __param_enums, jule::Slice<jule::Ptr<_1e39e721b_Impl>> __param_impls): _field_file(__param_file), _field_passes(__param_passes), _field_imports(__param_imports), _field_vars(__param_vars), _field_type_aliases(__param_type_aliases), _field_structs(__param_structs), _field_funcs(__param_funcs), _field_traits(__param_traits), _field_enums(__param_enums), _field_impls(__param_impls) {}

	

	_1e5291035_SymbolTable(void) = default;

	inline jule::Ptr<_1e4ee54e8_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_1e4ee54e8_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1e4ee54e8_ImportInfo>)>);


	inline jule::Ptr<_1e50b0492_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_1e6420856_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_1e398ee72_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_1e4b15a20_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_1e4d61232_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_1e4d62387_Enum> _method_find_enum(jule::Str);


	inline jule::Ptr<_1e50b0492_Var> _method___find_var(jule::Str,jule::Bool,jule::Bool);


	inline jule::Ptr<_1e6420856_TypeAlias> _method___find_type_alias(jule::Str,jule::Bool,jule::Bool);


	inline jule::Any _method_def_by_ident(jule::Str,jule::Bool);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline bool operator==(const _1e5291035_SymbolTable &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_passes == _Src._field_passes &&
			this->_field_imports == _Src._field_imports &&
			this->_field_vars == _Src._field_vars &&
			this->_field_type_aliases == _Src._field_type_aliases &&
			this->_field_structs == _Src._field_structs &&
			this->_field_funcs == _Src._field_funcs &&
			this->_field_traits == _Src._field_traits &&
			this->_field_enums == _Src._field_enums &&
			this->_field_impls == _Src._field_impls;
	}

	inline bool operator!=(const _1e5291035_SymbolTable &_Src) const { return !this->operator==(_Src); }
};


struct _1e50ac4b1_Data {
	jule::Ptr<_1e6420856_TypeKind> _field_kind = jule::Ptr<_1e6420856_TypeKind>();
	jule::Ptr<_1e6420856_TypeKind> _field_cast_kind = jule::Ptr<_1e6420856_TypeKind>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Bool _field_lvalue = jule::Bool();
	jule::Bool _field_variadiced = jule::Bool();
	jule::Bool _field_is_rune = jule::Bool();
	jule::Any _field_model = jule::Any();
	jule::Bool _field_decl = jule::Bool();
	jule::Ptr<_1c8b9b83b_Const> _field_constant = jule::Ptr<_1c8b9b83b_Const>();


	_1e50ac4b1_Data(jule::Ptr<_1e6420856_TypeKind> __param_kind, jule::Ptr<_1e6420856_TypeKind> __param_cast_kind, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Bool __param_lvalue, jule::Bool __param_variadiced, jule::Bool __param_is_rune, jule::Any __param_model, jule::Bool __param_decl, jule::Ptr<_1c8b9b83b_Const> __param_constant): _field_kind(__param_kind), _field_cast_kind(__param_cast_kind), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_lvalue(__param_lvalue), _field_variadiced(__param_variadiced), _field_is_rune(__param_is_rune), _field_model(__param_model), _field_decl(__param_decl), _field_constant(__param_constant) {}

	

	_1e50ac4b1_Data(void) = default;

	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_const(void);


	inline bool operator==(const _1e50ac4b1_Data &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_cast_kind == _Src._field_cast_kind &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_lvalue == _Src._field_lvalue &&
			this->_field_variadiced == _Src._field_variadiced &&
			this->_field_is_rune == _Src._field_is_rune &&
			this->_field_model == _Src._field_model &&
			this->_field_decl == _Src._field_decl &&
			this->_field_constant == _Src._field_constant;
	}

	inline bool operator!=(const _1e50ac4b1_Data &_Src) const { return !this->operator==(_Src); }
};


struct _1e50ac4b1_Value {
	jule::Ptr<_1e38d4ec7_Expr> _field_expr = jule::Ptr<_1e38d4ec7_Expr>();
	jule::Ptr<_1e50ac4b1_Data> _field_data = jule::Ptr<_1e50ac4b1_Data>();


	_1e50ac4b1_Value(jule::Ptr<_1e38d4ec7_Expr> __param_expr, jule::Ptr<_1e50ac4b1_Data> __param_data): _field_expr(__param_expr), _field_data(__param_data) {}

	

	_1e50ac4b1_Value(void) = default;

	inline bool operator==(const _1e50ac4b1_Value &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _1e50ac4b1_Value &_Src) const { return !this->operator==(_Src); }
};


struct _1e50ac4b1_Eval {
	jule::Ptr<_1e50ac4b1_Eval> self;

	jule::Ptr<_1e5054722_Sema> _field_s = jule::Ptr<_1e5054722_Sema>();
	jule::Trait<_1e5425ab0_Lookup> _field_lookup = jule::Trait<_1e5425ab0_Lookup>();
	jule::Ptr<_1e6420856_TypeKind> _field_prefix = jule::Ptr<_1e6420856_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Ptr<_1e50b0492_Var> _field_owner = jule::Ptr<_1e50b0492_Var>();


	_1e50ac4b1_Eval(jule::Ptr<_1e5054722_Sema> __param_s, jule::Trait<_1e5425ab0_Lookup> __param_lookup, jule::Ptr<_1e6420856_TypeKind> __param_prefix, jule::Bool __param_unsafety, jule::Bool __param_immutable, jule::Ptr<_1e50b0492_Var> __param_owner): _field_s(__param_s), _field_lookup(__param_lookup), _field_prefix(__param_prefix), _field_unsafety(__param_unsafety), _field_immutable(__param_immutable), _field_owner(__param_owner) {
		this->self = jule::Ptr<_1e50ac4b1_Eval>::make(this, nullptr);

	}

	~_1e50ac4b1_Eval(void) { this->self.ref = nullptr; }

	_1e50ac4b1_Eval(void) { this->self = jule::Ptr<_1e50ac4b1_Eval>::make(this, nullptr); }

	inline void _method_push_err(_1e3bad8dd_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_global(void);


	inline jule::Ptr<_1e50ac4b1_Data> _method_lit_nil(void);


	inline jule::Ptr<_1e50ac4b1_Data> _method_lit_str(jule::Ptr<_1e38d4ec7_LitExpr>&);


	inline jule::Ptr<_1e50ac4b1_Data> _method_lit_bool(jule::Ptr<_1e38d4ec7_LitExpr>&);


	inline jule::Ptr<_1e50ac4b1_Data> _method_lit_rune(jule::Ptr<_1e38d4ec7_LitExpr>&);


	inline jule::Ptr<_1e50ac4b1_Data> _method_lit_float(jule::Ptr<_1e38d4ec7_LitExpr>&);


	inline jule::Ptr<_1e50ac4b1_Data> _method_lit_int(jule::Ptr<_1e38d4ec7_LitExpr>&);


	inline jule::Ptr<_1e50ac4b1_Data> _method_lit_num(jule::Ptr<_1e38d4ec7_LitExpr>&);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_lit(jule::Ptr<_1e38d4ec7_LitExpr>);


	inline jule::Any _method_find_builtins(jule::Str);


	inline jule::Any _method_get_def(jule::Str,jule::Bool);


	inline void _method_push_reference(jule::Ptr<_1e4cc167b_ReferenceStack>&);


	inline void _method_push_reference_to_fn(jule::Ptr<_1e4b15a20_FnIns>&);


	inline void _method_push_reference_to_var(jule::Ptr<_1e50b0492_Var>&);


	inline void _method_push_reference_to_struct(jule::Ptr<_1e398ee72_StructIns>&);


	inline jule::Ptr<_1e50ac4b1_Data> _method___eval_enum(jule::Ptr<_1e4d62387_Enum>);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_enum(jule::Ptr<_1e4d62387_Enum>,_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method___eval_struct(jule::Ptr<_1e398ee72_StructIns>);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_struct(jule::Ptr<_1e398ee72_StructIns>,_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_fn_ins(jule::Ptr<_1e4b15a20_FnIns>);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_fn(jule::Ptr<_1e4b15a20_Fn>,_1e3bad8dd_Token);


	inline void _method_push_illegal_cycle_error(jule::Ptr<_1e50b0492_Var>&,jule::Ptr<_1e50b0492_Var>&,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Ptr<_1e50b0492_Var>&,jule::Str&);


	inline jule::Bool _method_check_illegal_cycles(jule::Ptr<_1e50b0492_Var>&,_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_var(jule::Ptr<_1e50b0492_Var>,_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_type_alias(jule::Ptr<_1e6420856_TypeAlias>,_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_def(jule::Any,_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_ident(jule::Ptr<_1e38d4ec7_IdentExpr>);


	inline void _method_eval_unary_minus(jule::Ptr<_1e50ac4b1_Data>&);


	inline void _method_eval_unary_plus(jule::Ptr<_1e50ac4b1_Data>&);


	inline void _method_eval_unary_caret(jule::Ptr<_1e50ac4b1_Data>&);


	inline void _method_eval_unary_excl(jule::Ptr<_1e50ac4b1_Data>&);


	inline void _method_eval_unary_star(jule::Ptr<_1e50ac4b1_Data>&,_1e3bad8dd_Token&);


	inline void _method_eval_unary_amper(jule::Ptr<_1e50ac4b1_Data>&);


	inline void _method_eval_unary_type_decl(jule::Ptr<_1e50ac4b1_Data>&,jule::Ptr<_1e38d4ec7_UnaryExpr>&);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_unary(jule::Ptr<_1e38d4ec7_UnaryExpr>);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_variadic(jule::Ptr<_1e38d4ec7_VariadicExpr>);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_unsafe(jule::Ptr<_1e38d4ec7_UnsafeExpr>);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_arr(jule::Ptr<_1e38d4ec7_SliceExpr>);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_exp_slc(jule::Ptr<_1e38d4ec7_SliceExpr>,jule::Ptr<_1e6420856_TypeKind>);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_slice_expr(jule::Ptr<_1e38d4ec7_SliceExpr>);


	inline void _method_check_integer_indexing_by_data(jule::Ptr<_1e50ac4b1_Data>&,_1e3bad8dd_Token);


	inline void _method_indexing_ptr(jule::Ptr<_1e50ac4b1_Data>&,jule::Ptr<_1e50ac4b1_Data>&,jule::Ptr<_1e38d4ec7_IndexingExpr>&);


	inline void _method_indexing_arr(jule::Ptr<_1e50ac4b1_Data>&,jule::Ptr<_1e50ac4b1_Data>&,jule::Ptr<_1e38d4ec7_IndexingExpr>&);


	inline void _method_indexing_slc(jule::Ptr<_1e50ac4b1_Data>&,jule::Ptr<_1e50ac4b1_Data>&,jule::Ptr<_1e38d4ec7_IndexingExpr>&);


	inline void _method_indexing_map(jule::Ptr<_1e50ac4b1_Data>&,jule::Ptr<_1e50ac4b1_Data>&,jule::Ptr<_1e38d4ec7_IndexingExpr>&);


	inline void _method_indexing_str(jule::Ptr<_1e50ac4b1_Data>&,jule::Ptr<_1e50ac4b1_Data>&,jule::Ptr<_1e38d4ec7_IndexingExpr>&);


	inline void _method_to_indexing(jule::Ptr<_1e50ac4b1_Data>&,jule::Ptr<_1e50ac4b1_Data>&,jule::Ptr<_1e38d4ec7_IndexingExpr>&);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_ident_decl_from_indexing(jule::Ptr<_1e38d4ec7_IndexingExpr>&);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_indexing(jule::Ptr<_1e38d4ec7_IndexingExpr>);


	inline std::tuple<jule::Ptr<_1e50ac4b1_Data>,jule::Ptr<_1e50ac4b1_Data>> _method_eval_slicing_exprs(jule::Ptr<_1e38d4ec7_SlicingExpr>&);


	inline void _method_slicing_arr(jule::Ptr<_1e50ac4b1_Data>&);


	inline void _method_slicing_slc(jule::Ptr<_1e50ac4b1_Data>&);


	inline void _method_slicing_str(jule::Ptr<_1e50ac4b1_Data>&,jule::Ptr<_1e50ac4b1_Data>&,jule::Ptr<_1e50ac4b1_Data>&);


	inline void _method_check_slicing(jule::Ptr<_1e50ac4b1_Data>&,jule::Ptr<_1e50ac4b1_Data>&,jule::Ptr<_1e50ac4b1_Data>&,jule::Ptr<_1e38d4ec7_SlicingExpr>&);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_slicing(jule::Ptr<_1e38d4ec7_SlicingExpr>);


	inline void _method_cast_ptr(jule::Ptr<_1e6420856_TypeKind>,jule::Ptr<_1e50ac4b1_Data>,_1e3bad8dd_Token);


	inline void _method_cast_struct(jule::Ptr<_1e6420856_TypeKind>,jule::Ptr<_1e50ac4b1_Data>,_1e3bad8dd_Token);


	inline void _method_cast_ref(jule::Ptr<_1e6420856_TypeKind>,jule::Ptr<_1e50ac4b1_Data>,_1e3bad8dd_Token);


	inline void _method_cast_slc(jule::Ptr<_1e6420856_TypeKind>,jule::Ptr<_1e50ac4b1_Data>,_1e3bad8dd_Token);


	inline void _method_cast_str(jule::Ptr<_1e50ac4b1_Data>,_1e3bad8dd_Token);


	inline void _method_cast_int(jule::Ptr<_1e6420856_TypeKind>,jule::Ptr<_1e50ac4b1_Data>,_1e3bad8dd_Token);


	inline void _method_cast_num(jule::Ptr<_1e6420856_TypeKind>,jule::Ptr<_1e50ac4b1_Data>,_1e3bad8dd_Token);


	inline void _method_cast_prim(jule::Ptr<_1e6420856_TypeKind>,jule::Ptr<_1e50ac4b1_Data>,_1e3bad8dd_Token);


	inline void _method_cast_constant(jule::Ptr<_1e6420856_TypeKind>&,jule::Ptr<_1e50ac4b1_Data>&);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_cast_by_type_n_data(jule::Ptr<_1e6420856_TypeKind>,jule::Ptr<_1e50ac4b1_Data>,_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_cast(jule::Ptr<_1e38d4ec7_CastExpr>);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_ns_selection(jule::Ptr<_1e38d4ec7_NsSelectionExpr>);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_struct_lit_explicit(jule::Ptr<_1e398ee72_StructIns>,jule::Slice<jule::Any>,_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_struct_lit(jule::Ptr<_1e38d4ec7_StructLit>);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_type(jule::Ptr<_1e38d4ec7_TypeDecl>);


	inline void _method_call_type_fn(jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&);


	inline std::tuple<jule::Bool,jule::Bool> _method_check_fn_call_generics(jule::Ptr<_1e4b15a20_FnIns>,jule::Ptr<_1e38d4ec7_FnCallExpr>);


	inline void _method_call_builtin_fn(jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&);


	inline void _method_check_fn_of_concurrent_call(jule::Ptr<_1e4b15a20_FnIns>&,_1e3bad8dd_Token);


	inline void _method_call_fn(jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_fn_call(jule::Ptr<_1e38d4ec7_FnCallExpr>);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_enum_static(jule::Ptr<_1e4d62387_Enum>,_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_struct_static(jule::Ptr<_1e398ee72_StructIns>,_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_trait_sub_ident(jule::Ptr<_1e50ac4b1_Data>,jule::Ptr<_1e4d61232_Trait>,_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_struct_sub_ident(jule::Ptr<_1e50ac4b1_Data>,jule::Ptr<_1e398ee72_StructIns>,jule::Ptr<_1e38d4ec7_SubIdentExpr>,jule::Bool);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_slice_sub_ident(jule::Ptr<_1e50ac4b1_Data>,_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_array_sub_ident(jule::Ptr<_1e50ac4b1_Data>,_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_map_sub_ident(jule::Ptr<_1e50ac4b1_Data>,_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_str_sub_ident(jule::Ptr<_1e50ac4b1_Data>,_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_int_type_static(_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_uint_type_static(_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_i8_type_static(_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_i16_type_static(_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_i32_type_static(_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_i64_type_static(_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_u8_type_static(_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_u16_type_static(_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_u32_type_static(_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_u64_type_static(_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_f32_type_tatic(_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_f64_type_static(_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_prim_static(jule::Str,_1e3bad8dd_Token);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_type_static(jule::Ptr<_1e50ac4b1_Data>,jule::Ptr<_1e38d4ec7_SubIdentExpr>);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_obj_sub_ident(jule::Ptr<_1e50ac4b1_Data>,jule::Ptr<_1e38d4ec7_SubIdentExpr>);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_sub_ident(jule::Ptr<_1e38d4ec7_SubIdentExpr>);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_tuple(jule::Ptr<_1e38d4ec7_TupleExpr>);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_map(jule::Ptr<_1e6420856_Map>,jule::Ptr<_1e38d4ec7_BraceLit>);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_brace_lit(jule::Ptr<_1e38d4ec7_BraceLit>);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_anon_fn(jule::Ptr<_1e38d4ec7_FnDecl>);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_binop(jule::Ptr<_1e38d4ec7_BinopExpr>);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_ternary(jule::Ptr<_1e38d4ec7_TernaryExpr>);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_expr_kind(jule::Any);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval(jule::Ptr<_1e38d4ec7_Expr>);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_expr(jule::Ptr<_1e38d4ec7_Expr>);


	inline bool operator==(const _1e50ac4b1_Eval &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_prefix == _Src._field_prefix &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_immutable == _Src._field_immutable &&
			this->_field_owner == _Src._field_owner;
	}

	inline bool operator!=(const _1e50ac4b1_Eval &_Src) const { return !this->operator==(_Src); }
};


struct _1e6420856_TypeKind: public _1e6420856_Kind {
	jule::Ptr<_1e6420856_TypeKind> self;

	jule::Str _field_cpp_ident = jule::Str();
	jule::Bool _field_generic = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Trait<_1e6420856_Kind> _field_kind = jule::Trait<_1e6420856_Kind>();


	_1e6420856_TypeKind(jule::Str __param_cpp_ident, jule::Bool __param_generic, jule::Bool __param_variadic, jule::Trait<_1e6420856_Kind> __param_kind): _field_cpp_ident(__param_cpp_ident), _field_generic(__param_generic), _field_variadic(__param_variadic), _field_kind(__param_kind) {
		this->self = jule::Ptr<_1e6420856_TypeKind>::make(this, nullptr);

	}

	~_1e6420856_TypeKind(void) { this->self.ref = nullptr; }

	_1e6420856_TypeKind(void) { this->self = jule::Ptr<_1e6420856_TypeKind>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1e6420856_TypeKind>);


	inline jule::Ptr<_1e6420856_TypeKind> _method_clone(void);


	inline jule::Bool _method_cpp_linked(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_void(void);


	inline jule::Bool _method_mutable(void);


	inline jule::Bool _method_nil_compatible(void);


	inline jule::Bool _method_supports_cloning(void);


	inline jule::Bool _method_variadicable(void);


	inline jule::Ptr<_1e6420856_Prim> _method_prim(void);


	inline jule::Ptr<_1e6420856_Sptr> _method_sptr(void);


	inline jule::Ptr<_1e6420856_Ptr> _method_ptr(void);


	inline jule::Ptr<_1e4d62387_Enum> _method_enm(void);


	inline jule::Ptr<_1e6420856_Arr> _method_arr(void);


	inline jule::Ptr<_1e6420856_Slc> _method_slc(void);


	inline jule::Ptr<_1e4b15a20_FnIns> _method_fnc(void);


	inline jule::Ptr<_1e398ee72_StructIns> _method_strct(void);


	inline jule::Ptr<_1e4d61232_Trait> _method_trt(void);


	inline jule::Ptr<_1e6420856_Map> _method_map(void);


	inline jule::Ptr<_1e6420856_Tuple> _method_tup(void);


	inline bool operator==(const _1e6420856_TypeKind &_Src) const {
		return 
			this->_field_cpp_ident == _Src._field_cpp_ident &&
			this->_field_generic == _Src._field_generic &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1e6420856_TypeKind &_Src) const { return !this->operator==(_Src); }
};


struct _1e6420856_TypeSymbol {
	jule::Ptr<_1e38d4ec7_TypeDecl> _field_decl = jule::Ptr<_1e38d4ec7_TypeDecl>();
	jule::Ptr<_1e6420856_TypeKind> _field_kind = jule::Ptr<_1e6420856_TypeKind>();


	_1e6420856_TypeSymbol(jule::Ptr<_1e38d4ec7_TypeDecl> __param_decl, jule::Ptr<_1e6420856_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_1e6420856_TypeSymbol(void) = default;

	inline jule::Bool _method_checked(void);


	inline void _method_remove_kind(void);


	inline bool operator==(const _1e6420856_TypeSymbol &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1e6420856_TypeSymbol &_Src) const { return !this->operator==(_Src); }
};


struct _1e6420856_Prim: public _1e6420856_Kind {
	jule::Ptr<_1e6420856_Prim> self;

	jule::Str _field_kind = jule::Str();


	_1e6420856_Prim(jule::Str __param_kind): _field_kind(__param_kind) {
		this->self = jule::Ptr<_1e6420856_Prim>::make(this, nullptr);

	}

	~_1e6420856_Prim(void) { this->self.ref = nullptr; }

	_1e6420856_Prim(void) { this->self = jule::Ptr<_1e6420856_Prim>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1e6420856_TypeKind>);


	inline jule::Bool _method_is_i8(void);


	inline jule::Bool _method_is_i16(void);


	inline jule::Bool _method_is_i32(void);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u8(void);


	inline jule::Bool _method_is_u16(void);


	inline jule::Bool _method_is_u32(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_f32(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_int(void);


	inline jule::Bool _method_is_uint(void);


	inline jule::Bool _method_is_uintptr(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_any(void);


	inline bool operator==(const _1e6420856_Prim &_Src) const {
		return 
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1e6420856_Prim &_Src) const { return !this->operator==(_Src); }
};


struct _1e6420856_Sptr: public _1e6420856_Kind {
	jule::Ptr<_1e6420856_Sptr> self;

	jule::Ptr<_1e6420856_TypeKind> _field_elem = jule::Ptr<_1e6420856_TypeKind>();


	_1e6420856_Sptr(jule::Ptr<_1e6420856_TypeKind> __param_elem): _field_elem(__param_elem) {
		this->self = jule::Ptr<_1e6420856_Sptr>::make(this, nullptr);

	}

	~_1e6420856_Sptr(void) { this->self.ref = nullptr; }

	_1e6420856_Sptr(void) { this->self = jule::Ptr<_1e6420856_Sptr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1e6420856_TypeKind>);


	inline bool operator==(const _1e6420856_Sptr &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1e6420856_Sptr &_Src) const { return !this->operator==(_Src); }
};


struct _1e6420856_Slc: public _1e6420856_Kind {
	jule::Ptr<_1e6420856_Slc> self;

	jule::Ptr<_1e6420856_TypeKind> _field_elem = jule::Ptr<_1e6420856_TypeKind>();


	_1e6420856_Slc(jule::Ptr<_1e6420856_TypeKind> __param_elem): _field_elem(__param_elem) {
		this->self = jule::Ptr<_1e6420856_Slc>::make(this, nullptr);

	}

	~_1e6420856_Slc(void) { this->self.ref = nullptr; }

	_1e6420856_Slc(void) { this->self = jule::Ptr<_1e6420856_Slc>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1e6420856_TypeKind>);


	inline bool operator==(const _1e6420856_Slc &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1e6420856_Slc &_Src) const { return !this->operator==(_Src); }
};


struct _1e6420856_Tuple: public _1e6420856_Kind {
	jule::Ptr<_1e6420856_Tuple> self;

	jule::Slice<jule::Ptr<_1e6420856_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1e6420856_TypeKind>>();


	_1e6420856_Tuple(jule::Slice<jule::Ptr<_1e6420856_TypeKind>> __param_types): _field_types(__param_types) {
		this->self = jule::Ptr<_1e6420856_Tuple>::make(this, nullptr);

	}

	~_1e6420856_Tuple(void) { this->self.ref = nullptr; }

	_1e6420856_Tuple(void) { this->self = jule::Ptr<_1e6420856_Tuple>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1e6420856_TypeKind>);


	inline bool operator==(const _1e6420856_Tuple &_Src) const {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _1e6420856_Tuple &_Src) const { return !this->operator==(_Src); }
};


struct _1e6420856_Map: public _1e6420856_Kind {
	jule::Ptr<_1e6420856_Map> self;

	jule::Ptr<_1e6420856_TypeKind> _field_key = jule::Ptr<_1e6420856_TypeKind>();
	jule::Ptr<_1e6420856_TypeKind> _field_val = jule::Ptr<_1e6420856_TypeKind>();


	_1e6420856_Map(jule::Ptr<_1e6420856_TypeKind> __param_key, jule::Ptr<_1e6420856_TypeKind> __param_val): _field_key(__param_key), _field_val(__param_val) {
		this->self = jule::Ptr<_1e6420856_Map>::make(this, nullptr);

	}

	~_1e6420856_Map(void) { this->self.ref = nullptr; }

	_1e6420856_Map(void) { this->self = jule::Ptr<_1e6420856_Map>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1e6420856_TypeKind>);


	inline bool operator==(const _1e6420856_Map &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _1e6420856_Map &_Src) const { return !this->operator==(_Src); }
};


struct _1e6420856_Arr: public _1e6420856_Kind {
	jule::Ptr<_1e6420856_Arr> self;

	jule::Bool _field_auto = jule::Bool();
	jule::Int _field_n = jule::Int();
	jule::Ptr<_1e6420856_TypeKind> _field_elem = jule::Ptr<_1e6420856_TypeKind>();


	_1e6420856_Arr(jule::Bool __param_auto, jule::Int __param_n, jule::Ptr<_1e6420856_TypeKind> __param_elem): _field_auto(__param_auto), _field_n(__param_n), _field_elem(__param_elem) {
		this->self = jule::Ptr<_1e6420856_Arr>::make(this, nullptr);

	}

	~_1e6420856_Arr(void) { this->self.ref = nullptr; }

	_1e6420856_Arr(void) { this->self = jule::Ptr<_1e6420856_Arr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1e6420856_TypeKind>);


	inline bool operator==(const _1e6420856_Arr &_Src) const {
		return 
			this->_field_auto == _Src._field_auto &&
			this->_field_n == _Src._field_n &&
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1e6420856_Arr &_Src) const { return !this->operator==(_Src); }
};


struct _1e6420856_Ptr: public _1e6420856_Kind {
	jule::Ptr<_1e6420856_Ptr> self;

	jule::Ptr<_1e6420856_TypeKind> _field_elem = jule::Ptr<_1e6420856_TypeKind>();


	_1e6420856_Ptr(jule::Ptr<_1e6420856_TypeKind> __param_elem): _field_elem(__param_elem) {
		this->self = jule::Ptr<_1e6420856_Ptr>::make(this, nullptr);

	}

	~_1e6420856_Ptr(void) { this->self.ref = nullptr; }

	_1e6420856_Ptr(void) { this->self = jule::Ptr<_1e6420856_Ptr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1e6420856_TypeKind>);


	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _1e6420856_Ptr &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1e6420856_Ptr &_Src) const { return !this->operator==(_Src); }
};


struct _1e6420856_Referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;


	_1e6420856_Referencer(jule::Str __param_ident, jule::Any __param_owner, jule::Slice<jule::Any>* __param_refs): _field_ident(__param_ident), _field_owner(__param_owner), _field_refs(__param_refs) {}

	

	_1e6420856_Referencer(void) = default;

	inline bool operator==(const _1e6420856_Referencer &_Src) const {
		return 
			this->_field_ident == _Src._field_ident &&
			this->_field_owner == _Src._field_owner &&
			this->_field_refs == _Src._field_refs;
	}

	inline bool operator!=(const _1e6420856_Referencer &_Src) const { return !this->operator==(_Src); }
};


struct _1e359ad25_DirectiveEval {
	jule::Slice<_1e24777a2_Log> _field_logs = jule::Slice<_1e24777a2_Log>();
	jule::Ptr<_1e38d4ec7_Directive> _field_d = jule::Ptr<_1e38d4ec7_Directive>();


	_1e359ad25_DirectiveEval(jule::Slice<_1e24777a2_Log> __param_logs, jule::Ptr<_1e38d4ec7_Directive> __param_d): _field_logs(__param_logs), _field_d(__param_d) {}

	

	_1e359ad25_DirectiveEval(void) = default;

	inline void _method_push_err(_1e3bad8dd_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Slice<jule::Slice<_1e3bad8dd_Token>> _method_split_operans(jule::Str,jule::Slice<_1e3bad8dd_Token>&);


	inline jule::Bool _method_eval_directive_ident(jule::Str);


	inline jule::Bool _method_eval_directive_part(jule::Slice<_1e3bad8dd_Token>);


	inline jule::Bool _method_eval(void);


	inline bool operator==(const _1e359ad25_DirectiveEval &_Src) const {
		return 
			this->_field_logs == _Src._field_logs &&
			this->_field_d == _Src._field_d;
	}

	inline bool operator!=(const _1e359ad25_DirectiveEval &_Src) const { return !this->operator==(_Src); }
};


struct _1e36c2a1d_PlainImporter: public _1e4ee54e8_Importer {
	jule::Slice<jule::Ptr<_1e4ee54e8_ImportInfo>> _field_all_packages = jule::Slice<jule::Ptr<_1e4ee54e8_ImportInfo>>();


	_1e36c2a1d_PlainImporter(jule::Slice<jule::Ptr<_1e4ee54e8_ImportInfo>> __param_all_packages): _field_all_packages(__param_all_packages) {}

	

	_1e36c2a1d_PlainImporter(void) = default;

	inline jule::Ptr<_1e4ee54e8_ImportInfo> _method_get_import(jule::Str);


	inline std::tuple<jule::Slice<jule::Ptr<_1e38d45c0_Ast>>,jule::Slice<_1e24777a2_Log>> _method_import_package(jule::Str);


	inline void _method_imported(jule::Ptr<_1e4ee54e8_ImportInfo>);


	inline bool operator==(const _1e36c2a1d_PlainImporter &_Src) const {
		return 
			this->_field_all_packages == _Src._field_all_packages;
	}

	inline bool operator!=(const _1e36c2a1d_PlainImporter &_Src) const { return !this->operator==(_Src); }
};


struct _1e354d019_OrderedDefines {
	jule::Slice<jule::Ptr<_1e398ee72_Struct>> _field_structs = jule::Slice<jule::Ptr<_1e398ee72_Struct>>();
	jule::Slice<jule::Ptr<_1e50b0492_Var>> _field_globals = jule::Slice<jule::Ptr<_1e50b0492_Var>>();


	_1e354d019_OrderedDefines(jule::Slice<jule::Ptr<_1e398ee72_Struct>> __param_structs, jule::Slice<jule::Ptr<_1e50b0492_Var>> __param_globals): _field_structs(__param_structs), _field_globals(__param_globals) {}

	

	_1e354d019_OrderedDefines(void) = default;

	inline bool operator==(const _1e354d019_OrderedDefines &_Src) const {
		return 
			this->_field_structs == _Src._field_structs &&
			this->_field_globals == _Src._field_globals;
	}

	inline bool operator!=(const _1e354d019_OrderedDefines &_Src) const { return !this->operator==(_Src); }
};


struct _1e354d019_DefineOrderer {
	

	_1e354d019_DefineOrderer(void) = default;

	static inline jule::Bool _static_method_is_common_ordered_0(jule::Slice<jule::Ptr<_1e50b0492_Var>>&,jule::Ptr<_1e50b0492_Var>);
	static inline jule::Bool _static_method_is_common_ordered_1(jule::Slice<jule::Ptr<_1e398ee72_Struct>>&,jule::Ptr<_1e398ee72_Struct>);


	static inline void _static_method_order_common_0(jule::Slice<jule::Ptr<_1e50b0492_Var>>&);
	static inline void _static_method_order_common_1(jule::Slice<jule::Ptr<_1e398ee72_Struct>>&);


	static inline void _static_method_order_variables(jule::Slice<jule::Ptr<_1e50b0492_Var>>&);


	static inline void _static_method_order_structures(jule::Slice<jule::Ptr<_1e398ee72_Struct>>&);


	inline bool operator==(const _1e354d019_DefineOrderer &_Src) const { return true; }

	inline bool operator!=(const _1e354d019_DefineOrderer &_Src) const { return !this->operator==(_Src); }
};


struct _1e39716e5_ScopeDeadCode {
	jule::Ptr<_1e39716e5_ScopeDeadCode> self;

	jule::Ptr<_1e39716e5_ScopeDeadCode> _field_parent = jule::Ptr<_1e39716e5_ScopeDeadCode>();
	jule::Ptr<_1e4d6ee22_Scope> _field_s = jule::Ptr<_1e4d6ee22_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::Int _field_i = jule::Int();


	_1e39716e5_ScopeDeadCode(jule::Ptr<_1e39716e5_ScopeDeadCode> __param_parent, jule::Ptr<_1e4d6ee22_Scope> __param_s, jule::Slice<jule::Any>* __param_stmts, jule::Int __param_i): _field_parent(__param_parent), _field_s(__param_s), _field_stmts(__param_stmts), _field_i(__param_i) {
		this->self = jule::Ptr<_1e39716e5_ScopeDeadCode>::make(this, nullptr);

	}

	~_1e39716e5_ScopeDeadCode(void) { this->self.ref = nullptr; }

	_1e39716e5_ScopeDeadCode(void) { this->self = jule::Ptr<_1e39716e5_ScopeDeadCode>::make(this, nullptr); }

	inline void _method_optimize_child(jule::Ptr<_1e4d6ee22_Scope>&);


	inline void _method_eliminate_followed(void);


	inline void _method_optimize_stmt(jule::Any);


	inline void _method_optimize_stmts(void);


	inline bool operator==(const _1e39716e5_ScopeDeadCode &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_s == _Src._field_s &&
			this->_field_stmts == _Src._field_stmts &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _1e39716e5_ScopeDeadCode &_Src) const { return !this->operator==(_Src); }
};


struct _1c9110233_AbsTime {
	jule::Uint _field_day = jule::Uint();
	jule::Uint _field_week_day = jule::Uint();
	jule::Uint _field_year_day = jule::Uint();
	jule::Uint _field_month = jule::Uint();
	jule::Uint _field_year = jule::Uint();
	jule::Uint _field_second = jule::Uint();
	jule::Uint _field_minute = jule::Uint();
	jule::Uint _field_hour = jule::Uint();


	_1c9110233_AbsTime(jule::Uint __param_day, jule::Uint __param_week_day, jule::Uint __param_year_day, jule::Uint __param_month, jule::Uint __param_year, jule::Uint __param_second, jule::Uint __param_minute, jule::Uint __param_hour): _field_day(__param_day), _field_week_day(__param_week_day), _field_year_day(__param_year_day), _field_month(__param_month), _field_year(__param_year), _field_second(__param_second), _field_minute(__param_minute), _field_hour(__param_hour) {}

	

	_1c9110233_AbsTime(void) = default;

	inline jule::U64 _method_unix(void);


	inline bool operator==(const _1c9110233_AbsTime &_Src) const {
		return 
			this->_field_day == _Src._field_day &&
			this->_field_week_day == _Src._field_week_day &&
			this->_field_year_day == _Src._field_year_day &&
			this->_field_month == _Src._field_month &&
			this->_field_year == _Src._field_year &&
			this->_field_second == _Src._field_second &&
			this->_field_minute == _Src._field_minute &&
			this->_field_hour == _Src._field_hour;
	}

	inline bool operator!=(const _1c9110233_AbsTime &_Src) const { return !this->operator==(_Src); }
};


struct _1c9110233_Time {
	jule::U64 _field_sec = jule::U64();


	_1c9110233_Time(jule::U64 __param_sec): _field_sec(__param_sec) {}

	

	_1c9110233_Time(void) = default;

	static inline _1c9110233_Time _static_method_unix(jule::U64);


	static inline _1c9110233_Time _static_method_now(void);


	inline jule::U64 _method_unix(void);


	inline jule::Uint _method_day(void);


	inline jule::Uint _method_month(void);


	inline jule::Uint _method_year(void);


	inline jule::Uint _method_second(void);


	inline jule::Uint _method_minute(void);


	inline jule::Uint _method_hour(void);


	inline _1c9110233_AbsTime _method_abs(void);


	inline bool operator==(const _1c9110233_Time &_Src) const {
		return 
			this->_field_sec == _Src._field_sec;
	}

	inline bool operator!=(const _1c9110233_Time &_Src) const { return !this->operator==(_Src); }
};


struct _1c9110233_Duration {
	

	_1c9110233_Duration(void) = default;

	static inline jule::I64 _static_method_nanoseconds(jule::I64);


	static inline jule::I64 _static_method_microseconds(jule::I64);


	static inline jule::I64 _static_method_milliseconds(jule::I64);


	static inline jule::I64 _static_method_seconds(jule::I64);


	static inline jule::I64 _static_method_minutes(jule::I64);


	static inline jule::I64 _static_method_hours(jule::I64);


	inline bool operator==(const _1c9110233_Duration &_Src) const { return true; }

	inline bool operator!=(const _1c9110233_Duration &_Src) const { return !this->operator==(_Src); }
};


struct _1e249dae7_Flag_0: public _1e249dae7_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Int _field__default = jule::Int();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Int> _field__data = jule::Ptr<jule::Int>();


	_1e249dae7_Flag_0(jule::Str __param__name, jule::I32 __param__short, jule::Int __param__default, jule::Str __param__what, jule::Ptr<jule::Int> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1e249dae7_Flag_0(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(const _1e249dae7_Flag_0 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	inline bool operator!=(const _1e249dae7_Flag_0 &_Src) const { return !this->operator==(_Src); }
};

struct _1e249dae7_Flag_1: public _1e249dae7_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Uint _field__default = jule::Uint();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Uint> _field__data = jule::Ptr<jule::Uint>();


	_1e249dae7_Flag_1(jule::Str __param__name, jule::I32 __param__short, jule::Uint __param__default, jule::Str __param__what, jule::Ptr<jule::Uint> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1e249dae7_Flag_1(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(const _1e249dae7_Flag_1 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	inline bool operator!=(const _1e249dae7_Flag_1 &_Src) const { return !this->operator==(_Src); }
};

struct _1e249dae7_Flag_2: public _1e249dae7_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::F64 _field__default = jule::F64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::F64> _field__data = jule::Ptr<jule::F64>();


	_1e249dae7_Flag_2(jule::Str __param__name, jule::I32 __param__short, jule::F64 __param__default, jule::Str __param__what, jule::Ptr<jule::F64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1e249dae7_Flag_2(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(const _1e249dae7_Flag_2 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	inline bool operator!=(const _1e249dae7_Flag_2 &_Src) const { return !this->operator==(_Src); }
};

struct _1e249dae7_Flag_3: public _1e249dae7_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Bool _field__default = jule::Bool();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Bool> _field__data = jule::Ptr<jule::Bool>();


	_1e249dae7_Flag_3(jule::Str __param__name, jule::I32 __param__short, jule::Bool __param__default, jule::Str __param__what, jule::Ptr<jule::Bool> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1e249dae7_Flag_3(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(const _1e249dae7_Flag_3 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	inline bool operator!=(const _1e249dae7_Flag_3 &_Src) const { return !this->operator==(_Src); }
};

struct _1e249dae7_Flag_4: public _1e249dae7_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Str _field__default = jule::Str();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Str> _field__data = jule::Ptr<jule::Str>();


	_1e249dae7_Flag_4(jule::Str __param__name, jule::I32 __param__short, jule::Str __param__default, jule::Str __param__what, jule::Ptr<jule::Str> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1e249dae7_Flag_4(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(const _1e249dae7_Flag_4 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	inline bool operator!=(const _1e249dae7_Flag_4 &_Src) const { return !this->operator==(_Src); }
};


struct _1e249dae7_FlagSet {
	jule::Slice<jule::Trait<_1e249dae7_CommonFlag>> _field__flags = jule::Slice<jule::Trait<_1e249dae7_CommonFlag>>();
	jule::Slice<jule::Str> _field__errors = jule::Slice<jule::Str>();


	_1e249dae7_FlagSet(jule::Slice<jule::Trait<_1e249dae7_CommonFlag>> __param__flags, jule::Slice<jule::Str> __param__errors): _field__flags(__param__flags), _field__errors(__param__errors) {}

	

	_1e249dae7_FlagSet(void) = default;

	static inline jule::Ptr<_1e249dae7_FlagSet> _static_method_new(void);


	inline jule::Trait<_1e249dae7_CommonFlag> _method_find_flag(jule::Str);


	inline jule::Trait<_1e249dae7_CommonFlag> _method_find_flag_short(jule::I32);


	inline jule::Slice<jule::Trait<_1e249dae7_CommonFlag>> _method_flags(void);


	inline std::tuple<jule::Slice<jule::Str>,jule::Str> _method_parse(jule::Slice<jule::Str>);


	inline void _method_reset(void);


	inline jule::Ptr<_1e249dae7_Flag_3> _method_add_flag_common_0(jule::Str,jule::I32,jule::Str);
	inline jule::Ptr<_1e249dae7_Flag_4> _method_add_flag_common_1(jule::Str,jule::I32,jule::Str);




	inline void _method_add_var_0(jule::Ptr<jule::Bool>,jule::Str,jule::I32,jule::Str);
	inline void _method_add_var_1(jule::Ptr<jule::Str>,jule::Str,jule::I32,jule::Str);


	inline bool operator==(const _1e249dae7_FlagSet &_Src) const {
		return 
			this->_field__flags == _Src._field__flags &&
			this->_field__errors == _Src._field__errors;
	}

	inline bool operator!=(const _1e249dae7_FlagSet &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_UseDecl {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_full = jule::Bool();
	jule::Slice<_1e3bad8dd_Token> _field_selected = jule::Slice<_1e3bad8dd_Token>();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();


	_1e38d4ec7_UseDecl(_1e3bad8dd_Token __param_token, jule::Str __param_link_path, jule::Str __param_alias, jule::Bool __param_full, jule::Slice<_1e3bad8dd_Token> __param_selected, jule::Bool __param_cpp_linked, jule::Bool __param_std): _field_token(__param_token), _field_link_path(__param_link_path), _field_alias(__param_alias), _field_full(__param_full), _field_selected(__param_selected), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std) {}

	

	_1e38d4ec7_UseDecl(void) = default;

	inline bool operator==(const _1e38d4ec7_UseDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_alias == _Src._field_alias &&
			this->_field_full == _Src._field_full &&
			this->_field_selected == _Src._field_selected &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std;
	}

	inline bool operator!=(const _1e38d4ec7_UseDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_EnumItemDecl {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e38d4ec7_Expr> _field_expr = jule::Ptr<_1e38d4ec7_Expr>();


	_1e38d4ec7_EnumItemDecl(_1e3bad8dd_Token __param_token, jule::Str __param_ident, jule::Ptr<_1e38d4ec7_Expr> __param_expr): _field_token(__param_token), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_1e38d4ec7_EnumItemDecl(void) = default;

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _1e38d4ec7_EnumItemDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1e38d4ec7_EnumItemDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_EnumDecl {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e38d4ec7_TypeDecl> _field_kind = jule::Ptr<_1e38d4ec7_TypeDecl>();
	jule::Slice<jule::Ptr<_1e38d4ec7_EnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_1e38d4ec7_EnumItemDecl>>();
	jule::Ptr<_1e38d4ec7_CommentGroup> _field_doc_comments = jule::Ptr<_1e38d4ec7_CommentGroup>();


	_1e38d4ec7_EnumDecl(_1e3bad8dd_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ptr<_1e38d4ec7_TypeDecl> __param_kind, jule::Slice<jule::Ptr<_1e38d4ec7_EnumItemDecl>> __param_items, jule::Ptr<_1e38d4ec7_CommentGroup> __param_doc_comments): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items), _field_doc_comments(__param_doc_comments) {}

	

	_1e38d4ec7_EnumDecl(void) = default;

	inline jule::Bool _method_default_typed(void);


	inline bool operator==(const _1e38d4ec7_EnumDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _1e38d4ec7_EnumDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_FieldDecl {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e38d4ec7_TypeDecl> _field_kind = jule::Ptr<_1e38d4ec7_TypeDecl>();


	_1e38d4ec7_FieldDecl(_1e3bad8dd_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ptr<_1e38d4ec7_TypeDecl> __param_kind): _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind) {}

	

	_1e38d4ec7_FieldDecl(void) = default;

	inline bool operator==(const _1e38d4ec7_FieldDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1e38d4ec7_FieldDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_StructDecl {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1e38d4ec7_FieldDecl>> _field_fields = jule::Slice<jule::Ptr<_1e38d4ec7_FieldDecl>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1e38d4ec7_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>();
	jule::Ptr<_1e38d4ec7_CommentGroup> _field_doc_comments = jule::Ptr<_1e38d4ec7_CommentGroup>();
	jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>>();


	_1e38d4ec7_StructDecl(_1e3bad8dd_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ptr<_1e38d4ec7_FieldDecl>> __param_fields, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_1e38d4ec7_Directive>> __param_directives, jule::Ptr<_1e38d4ec7_CommentGroup> __param_doc_comments, jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>> __param_generics): _field_token(__param_token), _field_ident(__param_ident), _field_fields(__param_fields), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_doc_comments(__param_doc_comments), _field_generics(__param_generics) {}

	

	_1e38d4ec7_StructDecl(void) = default;

	inline bool operator==(const _1e38d4ec7_StructDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _1e38d4ec7_StructDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_TraitDecl {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Ptr<_1e38d4ec7_CommentGroup> _field_doc_comments = jule::Ptr<_1e38d4ec7_CommentGroup>();
	jule::Slice<jule::Ptr<_1e38d4ec7_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1e38d4ec7_FnDecl>>();


	_1e38d4ec7_TraitDecl(_1e3bad8dd_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Ptr<_1e38d4ec7_CommentGroup> __param_doc_comments, jule::Slice<jule::Ptr<_1e38d4ec7_FnDecl>> __param_methods): _field_token(__param_token), _field_ident(__param_ident), _field_public(__param_public), _field_doc_comments(__param_doc_comments), _field_methods(__param_methods) {}

	

	_1e38d4ec7_TraitDecl(void) = default;

	inline bool operator==(const _1e38d4ec7_TraitDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _1e38d4ec7_TraitDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_Impl {
	_1e3bad8dd_Token _field_base = _1e3bad8dd_Token();
	_1e3bad8dd_Token _field_dest = _1e3bad8dd_Token();
	jule::Slice<jule::Ptr<_1e38d4ec7_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1e38d4ec7_FnDecl>>();
	jule::Slice<jule::Ptr<_1e38d4ec7_VarDecl>> _field_statics = jule::Slice<jule::Ptr<_1e38d4ec7_VarDecl>>();


	_1e38d4ec7_Impl(_1e3bad8dd_Token __param_base, _1e3bad8dd_Token __param_dest, jule::Slice<jule::Ptr<_1e38d4ec7_FnDecl>> __param_methods, jule::Slice<jule::Ptr<_1e38d4ec7_VarDecl>> __param_statics): _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_1e38d4ec7_Impl(void) = default;

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _1e38d4ec7_Impl &_Src) const {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods &&
			this->_field_statics == _Src._field_statics;
	}

	inline bool operator!=(const _1e38d4ec7_Impl &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_Expr {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Any _field_kind = jule::Any();


	_1e38d4ec7_Expr(_1e3bad8dd_Token __param_token, jule::Any __param_kind): _field_token(__param_token), _field_kind(__param_kind) {}

	

	_1e38d4ec7_Expr(void) = default;

	inline jule::Bool _method_is_fn_call(void);


	inline bool operator==(const _1e38d4ec7_Expr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1e38d4ec7_Expr &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_TypeDecl {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Any _field_kind = jule::Any();


	_1e38d4ec7_TypeDecl(_1e3bad8dd_Token __param_token, jule::Any __param_kind): _field_token(__param_token), _field_kind(__param_kind) {}

	

	_1e38d4ec7_TypeDecl(void) = default;

	inline bool operator==(const _1e38d4ec7_TypeDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1e38d4ec7_TypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_LitExpr {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Str _field_value = jule::Str();


	_1e38d4ec7_LitExpr(_1e3bad8dd_Token __param_token, jule::Str __param_value): _field_token(__param_token), _field_value(__param_value) {}

	

	_1e38d4ec7_LitExpr(void) = default;

	inline jule::Bool _method_is_nil(void);


	inline bool operator==(const _1e38d4ec7_LitExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _1e38d4ec7_LitExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_UnsafeExpr {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Any _field_expr = jule::Any();


	_1e38d4ec7_UnsafeExpr(_1e3bad8dd_Token __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1e38d4ec7_UnsafeExpr(void) = default;

	inline bool operator==(const _1e38d4ec7_UnsafeExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1e38d4ec7_UnsafeExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_IdentExpr {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();


	_1e38d4ec7_IdentExpr(_1e3bad8dd_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked) {}

	

	_1e38d4ec7_IdentExpr(void) = default;

	inline jule::Bool _method_is_self(void);


	inline bool operator==(const _1e38d4ec7_IdentExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked;
	}

	inline bool operator!=(const _1e38d4ec7_IdentExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_UnaryExpr {
	_1e3bad8dd_Token _field_op = _1e3bad8dd_Token();
	jule::Any _field_expr = jule::Any();


	_1e38d4ec7_UnaryExpr(_1e3bad8dd_Token __param_op, jule::Any __param_expr): _field_op(__param_op), _field_expr(__param_expr) {}

	

	_1e38d4ec7_UnaryExpr(void) = default;

	inline bool operator==(const _1e38d4ec7_UnaryExpr &_Src) const {
		return 
			this->_field_op == _Src._field_op &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1e38d4ec7_UnaryExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_VariadicExpr {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Any _field_expr = jule::Any();


	_1e38d4ec7_VariadicExpr(_1e3bad8dd_Token __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1e38d4ec7_VariadicExpr(void) = default;

	inline bool operator==(const _1e38d4ec7_VariadicExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1e38d4ec7_VariadicExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e3ca4682_AssignInfo {
	jule::Slice<_1e3bad8dd_Token> _field_l = jule::Slice<_1e3bad8dd_Token>();
	jule::Slice<_1e3bad8dd_Token> _field_r = jule::Slice<_1e3bad8dd_Token>();
	_1e3bad8dd_Token _field_setter = _1e3bad8dd_Token();
	jule::Bool _field_ok = jule::Bool();


	_1e3ca4682_AssignInfo(jule::Slice<_1e3bad8dd_Token> __param_l, jule::Slice<_1e3bad8dd_Token> __param_r, _1e3bad8dd_Token __param_setter, jule::Bool __param_ok): _field_l(__param_l), _field_r(__param_r), _field_setter(__param_setter), _field_ok(__param_ok) {}

	

	_1e3ca4682_AssignInfo(void) = default;

	inline bool operator==(const _1e3ca4682_AssignInfo &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_setter == _Src._field_setter &&
			this->_field_ok == _Src._field_ok;
	}

	inline bool operator!=(const _1e3ca4682_AssignInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_IdentTypeDecl {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>>();


	_1e38d4ec7_IdentTypeDecl(_1e3bad8dd_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>> __param_generics): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_generics(__param_generics) {}

	

	_1e38d4ec7_IdentTypeDecl(void) = default;

	inline jule::Bool _method_is_prim(void);


	inline bool operator==(const _1e38d4ec7_IdentTypeDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _1e38d4ec7_IdentTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_NsSelectionExpr {
	jule::Slice<_1e3bad8dd_Token> _field_ns = jule::Slice<_1e3bad8dd_Token>();
	_1e3bad8dd_Token _field_ident = _1e3bad8dd_Token();


	_1e38d4ec7_NsSelectionExpr(jule::Slice<_1e3bad8dd_Token> __param_ns, _1e3bad8dd_Token __param_ident): _field_ns(__param_ns), _field_ident(__param_ident) {}

	

	_1e38d4ec7_NsSelectionExpr(void) = default;

	inline bool operator==(const _1e38d4ec7_NsSelectionExpr &_Src) const {
		return 
			this->_field_ns == _Src._field_ns &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1e38d4ec7_NsSelectionExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_SubIdentExpr {
	jule::Bool _field_is_self = jule::Bool();
	jule::Any _field_expr = jule::Any();
	_1e3bad8dd_Token _field_ident = _1e3bad8dd_Token();


	_1e38d4ec7_SubIdentExpr(jule::Bool __param_is_self, jule::Any __param_expr, _1e3bad8dd_Token __param_ident): _field_is_self(__param_is_self), _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_1e38d4ec7_SubIdentExpr(void) = default;

	inline bool operator==(const _1e38d4ec7_SubIdentExpr &_Src) const {
		return 
			this->_field_is_self == _Src._field_is_self &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1e38d4ec7_SubIdentExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e398ee72_Field {
	jule::Ptr<_1e398ee72_Field> self;

	jule::Ptr<_1e398ee72_Struct> _field_owner = jule::Ptr<_1e398ee72_Struct>();
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e6420856_TypeSymbol> _field_kind = jule::Ptr<_1e6420856_TypeSymbol>();


	_1e398ee72_Field(jule::Ptr<_1e398ee72_Struct> __param_owner, _1e3bad8dd_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ptr<_1e6420856_TypeSymbol> __param_kind): _field_owner(__param_owner), _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind) {
		this->self = jule::Ptr<_1e398ee72_Field>::make(this, nullptr);

	}

	~_1e398ee72_Field(void) { this->self.ref = nullptr; }

	_1e398ee72_Field(void) { this->self = jule::Ptr<_1e398ee72_Field>::make(this, nullptr); }

	inline jule::Ptr<_1e398ee72_FieldIns> _method_instance(void);


	inline bool operator==(const _1e398ee72_Field &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1e398ee72_Field &_Src) const { return !this->operator==(_Src); }
};


struct _1e398ee72_Struct {
	jule::Ptr<_1e398ee72_Struct> self;

	jule::Ptr<_1e5054722_Sema> _field_sema = jule::Ptr<_1e5054722_Sema>();
	jule::Slice<jule::Ptr<_1e398ee72_Struct>> _field_depends = jule::Slice<jule::Ptr<_1e398ee72_Struct>>();
	jule::Slice<jule::Ptr<_1e398ee72_Struct>> _field_uses = jule::Slice<jule::Ptr<_1e398ee72_Struct>>();
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1e398ee72_Field>> _field_fields = jule::Slice<jule::Ptr<_1e398ee72_Field>>();
	jule::Slice<jule::Ptr<_1e4b15a20_Fn>> _field_methods = jule::Slice<jule::Ptr<_1e4b15a20_Fn>>();
	jule::Slice<jule::Ptr<_1e50b0492_Var>> _field_statics = jule::Slice<jule::Ptr<_1e50b0492_Var>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1e38d4ec7_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>();
	jule::Str _field_doc = jule::Str();
	jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>>();
	jule::Slice<jule::Ptr<_1e4d61232_Trait>> _field_implements = jule::Slice<jule::Ptr<_1e4d61232_Trait>>();
	jule::Slice<jule::Ptr<_1e398ee72_StructIns>> _field_instances = jule::Slice<jule::Ptr<_1e398ee72_StructIns>>();


	_1e398ee72_Struct(jule::Ptr<_1e5054722_Sema> __param_sema, jule::Slice<jule::Ptr<_1e398ee72_Struct>> __param_depends, jule::Slice<jule::Ptr<_1e398ee72_Struct>> __param_uses, _1e3bad8dd_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ptr<_1e398ee72_Field>> __param_fields, jule::Slice<jule::Ptr<_1e4b15a20_Fn>> __param_methods, jule::Slice<jule::Ptr<_1e50b0492_Var>> __param_statics, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_1e38d4ec7_Directive>> __param_directives, jule::Str __param_doc, jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>> __param_generics, jule::Slice<jule::Ptr<_1e4d61232_Trait>> __param_implements, jule::Slice<jule::Ptr<_1e398ee72_StructIns>> __param_instances): _field_sema(__param_sema), _field_depends(__param_depends), _field_uses(__param_uses), _field_token(__param_token), _field_ident(__param_ident), _field_fields(__param_fields), _field_methods(__param_methods), _field_statics(__param_statics), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_doc(__param_doc), _field_generics(__param_generics), _field_implements(__param_implements), _field_instances(__param_instances) {
		this->self = jule::Ptr<_1e398ee72_Struct>::make(this, nullptr);

	}

	~_1e398ee72_Struct(void) { this->self.ref = nullptr; }

	_1e398ee72_Struct(void) { this->self = jule::Ptr<_1e398ee72_Struct>::make(this, nullptr); }

	inline jule::Ptr<_1e398ee72_StructIns> _method_instance(void);


	inline jule::Ptr<_1e398ee72_StructIns> _method_append_instance(jule::Ptr<_1e398ee72_StructIns>&);


	inline jule::Ptr<_1e4b15a20_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ptr<_1e50b0492_Var> _method_find_static(jule::Str);


	inline jule::Ptr<_1e398ee72_Field> _method_find_field(jule::Str);


	inline jule::Bool _method_is_implements(jule::Ptr<_1e4d61232_Trait>);


	inline jule::Bool _method_is_derives(jule::Str);


	inline jule::Bool _method_is_uses(jule::Ptr<_1e398ee72_Struct>);


	inline jule::Bool _method_has_ref_accessible(void);


	inline bool operator==(const _1e398ee72_Struct &_Src) const {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_depends == _Src._field_depends &&
			this->_field_uses == _Src._field_uses &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_statics == _Src._field_statics &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_generics == _Src._field_generics &&
			this->_field_implements == _Src._field_implements &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _1e398ee72_Struct &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_BinopExpr {
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	_1e3bad8dd_Token _field_op = _1e3bad8dd_Token();


	_1e38d4ec7_BinopExpr(jule::Any __param_left, jule::Any __param_right, _1e3bad8dd_Token __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_1e38d4ec7_BinopExpr(void) = default;

	inline bool operator==(const _1e38d4ec7_BinopExpr &_Src) const {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1e38d4ec7_BinopExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_FnCallExpr {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Ptr<_1e38d4ec7_Expr> _field_expr = jule::Ptr<_1e38d4ec7_Expr>();
	jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>>();
	jule::Slice<jule::Ptr<_1e38d4ec7_Expr>> _field_args = jule::Slice<jule::Ptr<_1e38d4ec7_Expr>>();
	jule::Bool _field_concurrent = jule::Bool();


	_1e38d4ec7_FnCallExpr(_1e3bad8dd_Token __param_token, jule::Ptr<_1e38d4ec7_Expr> __param_expr, jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>> __param_generics, jule::Slice<jule::Ptr<_1e38d4ec7_Expr>> __param_args, jule::Bool __param_concurrent): _field_token(__param_token), _field_expr(__param_expr), _field_generics(__param_generics), _field_args(__param_args), _field_concurrent(__param_concurrent) {}

	

	_1e38d4ec7_FnCallExpr(void) = default;

	inline bool operator==(const _1e38d4ec7_FnCallExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_generics == _Src._field_generics &&
			this->_field_args == _Src._field_args &&
			this->_field_concurrent == _Src._field_concurrent;
	}

	inline bool operator!=(const _1e38d4ec7_FnCallExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_FieldExprPair {
	_1e3bad8dd_Token _field_field = _1e3bad8dd_Token();
	jule::Any _field_expr = jule::Any();


	_1e38d4ec7_FieldExprPair(_1e3bad8dd_Token __param_field, jule::Any __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_1e38d4ec7_FieldExprPair(void) = default;

	inline jule::Bool _method_is_targeted(void);


	inline bool operator==(const _1e38d4ec7_FieldExprPair &_Src) const {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1e38d4ec7_FieldExprPair &_Src) const { return !this->operator==(_Src); }
};


struct _1e4b15a20_Param {
	jule::Ptr<_1e4b15a20_Param> self;

	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1e6420856_TypeSymbol> _field_kind = jule::Ptr<_1e6420856_TypeSymbol>();
	jule::Str _field_ident = jule::Str();


	_1e4b15a20_Param(_1e3bad8dd_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ptr<_1e6420856_TypeSymbol> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {
		this->self = jule::Ptr<_1e4b15a20_Param>::make(this, nullptr);

	}

	~_1e4b15a20_Param(void) { this->self.ref = nullptr; }

	_1e4b15a20_Param(void) { this->self = jule::Ptr<_1e4b15a20_Param>::make(this, nullptr); }

	inline jule::Ptr<_1e4b15a20_ParamIns> _method_instance(void);


	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _1e4b15a20_Param &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1e4b15a20_Param &_Src) const { return !this->operator==(_Src); }
};


struct _1e4b15a20_Fn {
	jule::Ptr<_1e4b15a20_Fn> self;

	jule::Ptr<_1e5054722_Sema> _field_sema = jule::Ptr<_1e5054722_Sema>();
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1e38d4ec7_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>();
	jule::Str _field_doc = jule::Str();
	jule::Ptr<_1e38d4ec7_ScopeTree> _field_scope = jule::Ptr<_1e38d4ec7_ScopeTree>();
	jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>>();
	jule::Ptr<_1e4b15a20_RetType> _field_result = jule::Ptr<_1e4b15a20_RetType>();
	jule::Slice<jule::Ptr<_1e4b15a20_Param>> _field_params = jule::Slice<jule::Ptr<_1e4b15a20_Param>>();
	jule::Ptr<_1e398ee72_Struct> _field_owner = jule::Ptr<_1e398ee72_Struct>();
	jule::Slice<jule::Ptr<_1e4b15a20_FnIns>> _field_instances = jule::Slice<jule::Ptr<_1e4b15a20_FnIns>>();


	_1e4b15a20_Fn(jule::Ptr<_1e5054722_Sema> __param_sema, _1e3bad8dd_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Str __param_ident, jule::Slice<jule::Ptr<_1e38d4ec7_Directive>> __param_directives, jule::Str __param_doc, jule::Ptr<_1e38d4ec7_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>> __param_generics, jule::Ptr<_1e4b15a20_RetType> __param_result, jule::Slice<jule::Ptr<_1e4b15a20_Param>> __param_params, jule::Ptr<_1e398ee72_Struct> __param_owner, jule::Slice<jule::Ptr<_1e4b15a20_FnIns>> __param_instances): _field_sema(__param_sema), _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_ident(__param_ident), _field_directives(__param_directives), _field_doc(__param_doc), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params), _field_owner(__param_owner), _field_instances(__param_instances) {
		this->self = jule::Ptr<_1e4b15a20_Fn>::make(this, nullptr);

	}

	~_1e4b15a20_Fn(void) { this->self.ref = nullptr; }

	_1e4b15a20_Fn(void) { this->self = jule::Ptr<_1e4b15a20_Fn>::make(this, nullptr); }

	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_method(void);


	inline jule::Bool _method_is_entry_point(void);


	inline jule::Bool _method_is_init(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Bool _method_any_var(void);


	inline jule::Bool _method_parameters_uses_generics(void);


	inline jule::Bool _method_result_uses_generics(void);


	inline jule::Ptr<_1e4b15a20_FnIns> _method_instance_force(void);


	inline jule::Ptr<_1e4b15a20_FnIns> _method_instance(void);


	inline std::tuple<jule::Bool,jule::Int> _method_append_instance(jule::Ptr<_1e4b15a20_FnIns>&);


	inline bool operator==(const _1e4b15a20_Fn &_Src) const {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params &&
			this->_field_owner == _Src._field_owner &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _1e4b15a20_Fn &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_Node {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Any _field_data = jule::Any();


	_1e38d4ec7_Node(_1e3bad8dd_Token __param_token, jule::Any __param_data): _field_token(__param_token), _field_data(__param_data) {}

	

	_1e38d4ec7_Node(void) = default;

	inline jule::Bool _method_is_decl(void);


	inline jule::Bool _method_is_comment(void);


	inline jule::Bool _method_is_directive(void);


	inline jule::Bool _method_is_impl(void);


	inline jule::Bool _method_is_use_decl(void);


	inline bool operator==(const _1e38d4ec7_Node &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _1e38d4ec7_Node &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_BraceLit {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();


	_1e38d4ec7_BraceLit(_1e3bad8dd_Token __param_token, jule::Slice<jule::Any> __param_exprs): _field_token(__param_token), _field_exprs(__param_exprs) {}

	

	_1e38d4ec7_BraceLit(void) = default;

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _1e38d4ec7_BraceLit &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _1e38d4ec7_BraceLit &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_KeyValPair {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();
	_1e3bad8dd_Token _field_colon = _1e3bad8dd_Token();


	_1e38d4ec7_KeyValPair(jule::Any __param_key, jule::Any __param_val, _1e3bad8dd_Token __param_colon): _field_key(__param_key), _field_val(__param_val), _field_colon(__param_colon) {}

	

	_1e38d4ec7_KeyValPair(void) = default;

	inline bool operator==(const _1e38d4ec7_KeyValPair &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val &&
			this->_field_colon == _Src._field_colon;
	}

	inline bool operator!=(const _1e38d4ec7_KeyValPair &_Src) const { return !this->operator==(_Src); }
};


struct _1e4cc167b_Pass {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Str _field_text = jule::Str();


	_1e4cc167b_Pass(_1e3bad8dd_Token __param_token, jule::Str __param_text): _field_token(__param_token), _field_text(__param_text) {}

	

	_1e4cc167b_Pass(void) = default;

	inline bool operator==(const _1e4cc167b_Pass &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _1e4cc167b_Pass &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_SliceExpr {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_1e38d4ec7_SliceExpr(_1e3bad8dd_Token __param_token, jule::Slice<jule::Any> __param_elems): _field_token(__param_token), _field_elems(__param_elems) {}

	

	_1e38d4ec7_SliceExpr(void) = default;

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _1e38d4ec7_SliceExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _1e38d4ec7_SliceExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d61232_Trait: public _1e6420856_Kind {
	jule::Ptr<_1e4d61232_Trait> self;

	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_doc = jule::Str();
	jule::Slice<jule::Ptr<_1e4b15a20_Fn>> _field_methods = jule::Slice<jule::Ptr<_1e4b15a20_Fn>>();
	jule::Slice<jule::Ptr<_1e398ee72_Struct>> _field_implemented = jule::Slice<jule::Ptr<_1e398ee72_Struct>>();


	_1e4d61232_Trait(_1e3bad8dd_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_doc, jule::Slice<jule::Ptr<_1e4b15a20_Fn>> __param_methods, jule::Slice<jule::Ptr<_1e398ee72_Struct>> __param_implemented): _field_token(__param_token), _field_ident(__param_ident), _field_public(__param_public), _field_mutable(__param_mutable), _field_doc(__param_doc), _field_methods(__param_methods), _field_implemented(__param_implemented) {
		this->self = jule::Ptr<_1e4d61232_Trait>::make(this, nullptr);

	}

	~_1e4d61232_Trait(void) { this->self.ref = nullptr; }

	_1e4d61232_Trait(void) { this->self = jule::Ptr<_1e4d61232_Trait>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1e6420856_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Ptr<_1e4b15a20_Fn> _method_find_method(jule::Str);


	inline bool operator==(const _1e4d61232_Trait &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_doc == _Src._field_doc &&
			this->_field_methods == _Src._field_methods &&
			this->_field_implemented == _Src._field_implemented;
	}

	inline bool operator!=(const _1e4d61232_Trait &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d62387_EnumItem {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e50ac4b1_Value> _field_value = jule::Ptr<_1e50ac4b1_Value>();


	_1e4d62387_EnumItem(_1e3bad8dd_Token __param_token, jule::Str __param_ident, jule::Ptr<_1e50ac4b1_Value> __param_value): _field_token(__param_token), _field_ident(__param_ident), _field_value(__param_value) {}

	

	_1e4d62387_EnumItem(void) = default;

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _1e4d62387_EnumItem &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _1e4d62387_EnumItem &_Src) const { return !this->operator==(_Src); }
};


struct _1e4ee54e8_ImportInfo: public _1e5425ab0_Lookup {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Str _field_path = jule::Str();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_ident = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_duplicate = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	jule::Bool _field_import_all = jule::Bool();
	jule::Slice<_1e3bad8dd_Token> _field_selected = jule::Slice<_1e3bad8dd_Token>();
	jule::Ptr<_1e4ee54e8_Package> _field_package = jule::Ptr<_1e4ee54e8_Package>();


	_1e4ee54e8_ImportInfo(_1e3bad8dd_Token __param_token, jule::Str __param_path, jule::Str __param_link_path, jule::Str __param_ident, jule::Str __param_alias, jule::Bool __param_duplicate, jule::Bool __param_cpp_linked, jule::Bool __param_std, jule::Bool __param_import_all, jule::Slice<_1e3bad8dd_Token> __param_selected, jule::Ptr<_1e4ee54e8_Package> __param_package): _field_token(__param_token), _field_path(__param_path), _field_link_path(__param_link_path), _field_ident(__param_ident), _field_alias(__param_alias), _field_duplicate(__param_duplicate), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std), _field_import_all(__param_import_all), _field_selected(__param_selected), _field_package(__param_package) {}

	

	_1e4ee54e8_ImportInfo(void) = default;

	inline jule::Ptr<_1e4ee54e8_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_1e4ee54e8_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1e4ee54e8_ImportInfo>)>);


	inline jule::Ptr<_1e50b0492_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_1e6420856_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_1e398ee72_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_1e4b15a20_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_1e4d61232_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_1e4d62387_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_lookupable(jule::Str);


	inline jule::Bool _method_exist_ident(jule::Str);


	inline bool operator==(const _1e4ee54e8_ImportInfo &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_path == _Src._field_path &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_ident == _Src._field_ident &&
			this->_field_alias == _Src._field_alias &&
			this->_field_duplicate == _Src._field_duplicate &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std &&
			this->_field_import_all == _Src._field_import_all &&
			this->_field_selected == _Src._field_selected &&
			this->_field_package == _Src._field_package;
	}

	inline bool operator!=(const _1e4ee54e8_ImportInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d62387_Enum: public _1e6420856_Kind {
	jule::Ptr<_1e4d62387_Enum> self;

	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e6420856_TypeSymbol> _field_kind = jule::Ptr<_1e6420856_TypeSymbol>();
	jule::Slice<jule::Ptr<_1e4d62387_EnumItem>> _field_items = jule::Slice<jule::Ptr<_1e4d62387_EnumItem>>();
	jule::Str _field_doc = jule::Str();


	_1e4d62387_Enum(_1e3bad8dd_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ptr<_1e6420856_TypeSymbol> __param_kind, jule::Slice<jule::Ptr<_1e4d62387_EnumItem>> __param_items, jule::Str __param_doc): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items), _field_doc(__param_doc) {
		this->self = jule::Ptr<_1e4d62387_Enum>::make(this, nullptr);

	}

	~_1e4d62387_Enum(void) { this->self.ref = nullptr; }

	_1e4d62387_Enum(void) { this->self = jule::Ptr<_1e4d62387_Enum>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1e6420856_TypeKind>);


	inline jule::Ptr<_1e4d62387_EnumItem> _method_find_item(jule::Str);


	inline bool operator==(const _1e4d62387_Enum &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc == _Src._field_doc;
	}

	inline bool operator!=(const _1e4d62387_Enum &_Src) const { return !this->operator==(_Src); }
};


struct _1e39e721b_Impl {
	_1e3bad8dd_Token _field_base = _1e3bad8dd_Token();
	_1e3bad8dd_Token _field_dest = _1e3bad8dd_Token();
	jule::Slice<jule::Ptr<_1e4b15a20_Fn>> _field_methods = jule::Slice<jule::Ptr<_1e4b15a20_Fn>>();
	jule::Slice<jule::Ptr<_1e50b0492_Var>> _field_statics = jule::Slice<jule::Ptr<_1e50b0492_Var>>();


	_1e39e721b_Impl(_1e3bad8dd_Token __param_base, _1e3bad8dd_Token __param_dest, jule::Slice<jule::Ptr<_1e4b15a20_Fn>> __param_methods, jule::Slice<jule::Ptr<_1e50b0492_Var>> __param_statics): _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_1e39e721b_Impl(void) = default;

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _1e39e721b_Impl &_Src) const {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods &&
			this->_field_statics == _Src._field_statics;
	}

	inline bool operator!=(const _1e39e721b_Impl &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_IndexingExpr {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_index = jule::Any();


	_1e38d4ec7_IndexingExpr(_1e3bad8dd_Token __param_token, jule::Any __param_expr, jule::Any __param_index): _field_token(__param_token), _field_expr(__param_expr), _field_index(__param_index) {}

	

	_1e38d4ec7_IndexingExpr(void) = default;

	inline bool operator==(const _1e38d4ec7_IndexingExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _1e38d4ec7_IndexingExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e50b0492_Var {
	jule::Ptr<_1e4d6ee22_Scope> _field_scope = jule::Ptr<_1e4d6ee22_Scope>();
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_doc = jule::Str();
	jule::Ptr<_1e6420856_TypeSymbol> _field_kind = jule::Ptr<_1e6420856_TypeSymbol>();
	jule::Ptr<_1e50ac4b1_Value> _field_value = jule::Ptr<_1e50ac4b1_Value>();
	jule::Ptr<_1e4cc167b_ReferenceStack> _field_references = jule::Ptr<_1e4cc167b_ReferenceStack>();
	jule::Slice<jule::Ptr<_1e38d4ec7_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>();
	jule::Ptr<_1e50b0492_IterRelation> _field_iter_relation = jule::Ptr<_1e50b0492_IterRelation>();
	jule::Slice<jule::Ptr<_1e50b0492_Var>> _field_depends = jule::Slice<jule::Ptr<_1e50b0492_Var>>();


	_1e50b0492_Var(jule::Ptr<_1e4d6ee22_Scope> __param_scope, _1e3bad8dd_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_constant, jule::Bool __param_mutable, jule::Bool __param_public, jule::Bool __param_used, jule::Bool __param_statically, jule::Bool __param_reference, jule::Str __param_doc, jule::Ptr<_1e6420856_TypeSymbol> __param_kind, jule::Ptr<_1e50ac4b1_Value> __param_value, jule::Ptr<_1e4cc167b_ReferenceStack> __param_references, jule::Slice<jule::Ptr<_1e38d4ec7_Directive>> __param_directives, jule::Ptr<_1e50b0492_IterRelation> __param_iter_relation, jule::Slice<jule::Ptr<_1e50b0492_Var>> __param_depends): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_constant(__param_constant), _field_mutable(__param_mutable), _field_public(__param_public), _field_used(__param_used), _field_statically(__param_statically), _field_reference(__param_reference), _field_doc(__param_doc), _field_kind(__param_kind), _field_value(__param_value), _field_references(__param_references), _field_directives(__param_directives), _field_iter_relation(__param_iter_relation), _field_depends(__param_depends) {}

	

	_1e50b0492_Var(void) = default;

	inline jule::Bool _method_is_initialized(void);


	inline jule::Bool _method_is_type_inferred(void);


	inline bool operator==(const _1e50b0492_Var &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_constant == _Src._field_constant &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_public == _Src._field_public &&
			this->_field_used == _Src._field_used &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_doc == _Src._field_doc &&
			this->_field_kind == _Src._field_kind &&
			this->_field_value == _Src._field_value &&
			this->_field_references == _Src._field_references &&
			this->_field_directives == _Src._field_directives &&
			this->_field_iter_relation == _Src._field_iter_relation &&
			this->_field_depends == _Src._field_depends;
	}

	inline bool operator!=(const _1e50b0492_Var &_Src) const { return !this->operator==(_Src); }
};


struct _1e522c29b_TypeCompatibilityChecker {
	jule::Ptr<_1e5054722_Sema> _field_s = jule::Ptr<_1e5054722_Sema>();
	jule::Ptr<_1e6420856_TypeKind> _field_dest = jule::Ptr<_1e6420856_TypeKind>();
	jule::Ptr<_1e6420856_TypeKind> _field_src = jule::Ptr<_1e6420856_TypeKind>();
	_1e3bad8dd_Token _field_error_token = _1e3bad8dd_Token();


	_1e522c29b_TypeCompatibilityChecker(jule::Ptr<_1e5054722_Sema> __param_s, jule::Ptr<_1e6420856_TypeKind> __param_dest, jule::Ptr<_1e6420856_TypeKind> __param_src, _1e3bad8dd_Token __param_error_token): _field_s(__param_s), _field_dest(__param_dest), _field_src(__param_src), _field_error_token(__param_error_token) {}

	

	_1e522c29b_TypeCompatibilityChecker(void) = default;

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_trait(void);


	inline jule::Bool _method_check_ptr(void);


	inline jule::Bool _method_check_prim(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1e522c29b_TypeCompatibilityChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_src == _Src._field_src &&
			this->_field_error_token == _Src._field_error_token;
	}

	inline bool operator!=(const _1e522c29b_TypeCompatibilityChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1e522c29b_AssignTypeChecker {
	jule::Ptr<_1e5054722_Sema> _field_s = jule::Ptr<_1e5054722_Sema>();
	jule::Ptr<_1e6420856_TypeKind> _field_dest = jule::Ptr<_1e6420856_TypeKind>();
	jule::Ptr<_1e50ac4b1_Data> _field_d = jule::Ptr<_1e50ac4b1_Data>();
	_1e3bad8dd_Token _field_error_token = _1e3bad8dd_Token();


	_1e522c29b_AssignTypeChecker(jule::Ptr<_1e5054722_Sema> __param_s, jule::Ptr<_1e6420856_TypeKind> __param_dest, jule::Ptr<_1e50ac4b1_Data> __param_d, _1e3bad8dd_Token __param_error_token): _field_s(__param_s), _field_dest(__param_dest), _field_d(__param_d), _field_error_token(__param_error_token) {}

	

	_1e522c29b_AssignTypeChecker(void) = default;

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_validity(void);


	inline jule::Bool _method_check_const(void);


	inline jule::Bool _method_is_prim(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1e522c29b_AssignTypeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_d == _Src._field_d &&
			this->_field_error_token == _Src._field_error_token;
	}

	inline bool operator!=(const _1e522c29b_AssignTypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1e522c29b_DynamicTypeAnnotation {
	jule::Ptr<_1e50ac4b1_Eval> _field_e = jule::Ptr<_1e50ac4b1_Eval>();
	jule::Ptr<_1e4b15a20_FnIns> _field_f = jule::Ptr<_1e4b15a20_FnIns>();
	jule::Ptr<_1e4b15a20_ParamIns> _field_p = jule::Ptr<_1e4b15a20_ParamIns>();
	jule::Ptr<_1e50ac4b1_Data> _field_a = jule::Ptr<_1e50ac4b1_Data>();
	_1e3bad8dd_Token _field_error_token = _1e3bad8dd_Token();
	jule::Ptr<_1e6420856_TypeKind>* _field_k = nullptr;


	_1e522c29b_DynamicTypeAnnotation(jule::Ptr<_1e50ac4b1_Eval> __param_e, jule::Ptr<_1e4b15a20_FnIns> __param_f, jule::Ptr<_1e4b15a20_ParamIns> __param_p, jule::Ptr<_1e50ac4b1_Data> __param_a, _1e3bad8dd_Token __param_error_token, jule::Ptr<_1e6420856_TypeKind>* __param_k): _field_e(__param_e), _field_f(__param_f), _field_p(__param_p), _field_a(__param_a), _field_error_token(__param_error_token), _field_k(__param_k) {}

	

	_1e522c29b_DynamicTypeAnnotation(void) = default;

	inline void _method_push_generic(jule::Ptr<_1e6420856_TypeKind>&,jule::Int);


	inline jule::Bool _method_annotate_prim(jule::Ptr<_1e6420856_TypeKind>&);


	inline jule::Bool _method_annotate_slc(jule::Ptr<_1e6420856_TypeKind>&);


	inline jule::Bool _method_check_map_key(jule::Ptr<_1e6420856_TypeKind>*,jule::Ptr<_1e6420856_TypeKind>&);


	inline jule::Bool _method_annotate_map(jule::Ptr<_1e6420856_TypeKind>&);


	inline jule::Bool _method_annotate_fn(jule::Ptr<_1e6420856_TypeKind>&);


	inline jule::Bool _method_annotate_ptr(jule::Ptr<_1e6420856_TypeKind>&);


	inline jule::Bool _method_annotate_sptr(jule::Ptr<_1e6420856_TypeKind>&);


	inline jule::Bool _method_annotate_any(jule::Ptr<_1e6420856_TypeKind>&);


	inline jule::Bool _method_annotate_kind(jule::Ptr<_1e6420856_TypeKind>&);


	inline jule::Bool _method_annotate(void);


	inline bool operator==(const _1e522c29b_DynamicTypeAnnotation &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_f == _Src._field_f &&
			this->_field_p == _Src._field_p &&
			this->_field_a == _Src._field_a &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_k == _Src._field_k;
	}

	inline bool operator!=(const _1e522c29b_DynamicTypeAnnotation &_Src) const { return !this->operator==(_Src); }
};


struct _1e522c29b_FnCallArgChecker {
	jule::Ptr<_1e50ac4b1_Eval> _field_e = jule::Ptr<_1e50ac4b1_Eval>();
	jule::Slice<jule::Ptr<_1e38d4ec7_Expr>> _field_args = jule::Slice<jule::Ptr<_1e38d4ec7_Expr>>();
	_1e3bad8dd_Token _field_error_token = _1e3bad8dd_Token();
	jule::Ptr<_1e4b15a20_FnIns> _field_f = jule::Ptr<_1e4b15a20_FnIns>();
	jule::Bool _field_dynamic_annotation = jule::Bool();
	jule::Slice<jule::Any> _field_arg_models = jule::Slice<jule::Any>();


	_1e522c29b_FnCallArgChecker(jule::Ptr<_1e50ac4b1_Eval> __param_e, jule::Slice<jule::Ptr<_1e38d4ec7_Expr>> __param_args, _1e3bad8dd_Token __param_error_token, jule::Ptr<_1e4b15a20_FnIns> __param_f, jule::Bool __param_dynamic_annotation, jule::Slice<jule::Any> __param_arg_models): _field_e(__param_e), _field_args(__param_args), _field_error_token(__param_error_token), _field_f(__param_f), _field_dynamic_annotation(__param_dynamic_annotation), _field_arg_models(__param_arg_models) {}

	

	_1e522c29b_FnCallArgChecker(void) = default;

	inline void _method_push_err_token(_1e3bad8dd_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>> _method_get_params(void);


	inline jule::Bool _method_check_counts(jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>&);


	inline jule::Bool _method_check_arg(jule::Ptr<_1e4b15a20_ParamIns>&,jule::Ptr<_1e50ac4b1_Data>&,_1e3bad8dd_Token&);


	inline jule::Bool _method_push(jule::Ptr<_1e4b15a20_ParamIns>&,jule::Ptr<_1e38d4ec7_Expr>);


	inline jule::Bool _method_push_variadic(jule::Ptr<_1e4b15a20_ParamIns>&,jule::Int);


	inline jule::Bool _method_check_args(jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>&);


	inline jule::Bool _method_check_dynamic_type_annotation(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1e522c29b_FnCallArgChecker &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_args == _Src._field_args &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_f == _Src._field_f &&
			this->_field_dynamic_annotation == _Src._field_dynamic_annotation &&
			this->_field_arg_models == _Src._field_arg_models;
	}

	inline bool operator!=(const _1e522c29b_FnCallArgChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1e522c29b_StructLitChecker {
	jule::Ptr<_1e50ac4b1_Eval> _field_e = jule::Ptr<_1e50ac4b1_Eval>();
	_1e3bad8dd_Token _field_error_token = _1e3bad8dd_Token();
	jule::Ptr<_1e398ee72_StructIns> _field_s = jule::Ptr<_1e398ee72_StructIns>();
	jule::Slice<jule::Ptr<_1e4d70a6b_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1e4d70a6b_StructArgExprModel>>();


	_1e522c29b_StructLitChecker(jule::Ptr<_1e50ac4b1_Eval> __param_e, _1e3bad8dd_Token __param_error_token, jule::Ptr<_1e398ee72_StructIns> __param_s, jule::Slice<jule::Ptr<_1e4d70a6b_StructArgExprModel>> __param_args): _field_e(__param_e), _field_error_token(__param_error_token), _field_s(__param_s), _field_args(__param_args) {}

	

	_1e522c29b_StructLitChecker(void) = default;

	inline void _method_push_err(_1e3bad8dd_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_match(jule::Ptr<_1e398ee72_FieldIns>&,jule::Ptr<_1e50ac4b1_Data>&,_1e3bad8dd_Token&);


	inline void _method_check_pair(jule::Ptr<_1e38d4ec7_FieldExprPair>&,jule::Slice<jule::Any>&);


	inline jule::Bool _method_ready_exprs(jule::Slice<jule::Any>&);


	inline void _method_check(jule::Slice<jule::Any>&);


	inline bool operator==(const _1e522c29b_StructLitChecker &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_s == _Src._field_s &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1e522c29b_StructLitChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_SlicingExpr {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_start = jule::Any();
	jule::Any _field_to = jule::Any();


	_1e38d4ec7_SlicingExpr(_1e3bad8dd_Token __param_token, jule::Any __param_expr, jule::Any __param_start, jule::Any __param_to): _field_token(__param_token), _field_expr(__param_expr), _field_start(__param_start), _field_to(__param_to) {}

	

	_1e38d4ec7_SlicingExpr(void) = default;

	inline bool operator==(const _1e38d4ec7_SlicingExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_start == _Src._field_start &&
			this->_field_to == _Src._field_to;
	}

	inline bool operator!=(const _1e38d4ec7_SlicingExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e522c29b_RetTypeChecker {
	jule::Ptr<_1e4d6ee22_ScopeChecker> _field_sc = jule::Ptr<_1e4d6ee22_ScopeChecker>();
	jule::Ptr<_1e4b15a20_FnIns> _field_f = jule::Ptr<_1e4b15a20_FnIns>();
	jule::Slice<jule::Ptr<_1e6420856_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1e6420856_TypeKind>>();
	jule::Slice<jule::Ptr<_1e38d4ec7_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1e38d4ec7_Expr>>();
	jule::Slice<jule::Ptr<_1e50b0492_Var>> _field_vars = jule::Slice<jule::Ptr<_1e50b0492_Var>>();
	_1e3bad8dd_Token _field_error_token = _1e3bad8dd_Token();
	jule::Any _field_model = jule::Any();


	_1e522c29b_RetTypeChecker(jule::Ptr<_1e4d6ee22_ScopeChecker> __param_sc, jule::Ptr<_1e4b15a20_FnIns> __param_f, jule::Slice<jule::Ptr<_1e6420856_TypeKind>> __param_types, jule::Slice<jule::Ptr<_1e38d4ec7_Expr>> __param_exprs, jule::Slice<jule::Ptr<_1e50b0492_Var>> __param_vars, _1e3bad8dd_Token __param_error_token, jule::Any __param_model): _field_sc(__param_sc), _field_f(__param_f), _field_types(__param_types), _field_exprs(__param_exprs), _field_vars(__param_vars), _field_error_token(__param_error_token), _field_model(__param_model) {}

	

	_1e522c29b_RetTypeChecker(void) = default;

	inline void _method_prepare_types(void);


	inline void _method_prepare_exprs(jule::Ptr<_1e38d4ec7_Expr>&);


	inline void _method_ret_vars(void);


	inline void _method_check_exprs(void);


	inline jule::Bool _method_check(jule::Ptr<_1e38d4ec7_Expr>&);


	inline bool operator==(const _1e522c29b_RetTypeChecker &_Src) const {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_f == _Src._field_f &&
			this->_field_types == _Src._field_types &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_vars == _Src._field_vars &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_model == _Src._field_model;
	}

	inline bool operator!=(const _1e522c29b_RetTypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_TernaryExpr {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Any _field_condition = jule::Any();
	jule::Any _field_true_expr = jule::Any();
	jule::Any _field_false_expr = jule::Any();


	_1e38d4ec7_TernaryExpr(_1e3bad8dd_Token __param_token, jule::Any __param_condition, jule::Any __param_true_expr, jule::Any __param_false_expr): _field_token(__param_token), _field_condition(__param_condition), _field_true_expr(__param_true_expr), _field_false_expr(__param_false_expr) {}

	

	_1e38d4ec7_TernaryExpr(void) = default;

	inline bool operator==(const _1e38d4ec7_TernaryExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_condition == _Src._field_condition &&
			this->_field_true_expr == _Src._field_true_expr &&
			this->_field_false_expr == _Src._field_false_expr;
	}

	inline bool operator!=(const _1e38d4ec7_TernaryExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_GenericDecl {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Str _field_ident = jule::Str();


	_1e38d4ec7_GenericDecl(_1e3bad8dd_Token __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_1e38d4ec7_GenericDecl(void) = default;

	inline bool operator==(const _1e38d4ec7_GenericDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1e38d4ec7_GenericDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_LabelSt {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Str _field_ident = jule::Str();


	_1e38d4ec7_LabelSt(_1e3bad8dd_Token __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_1e38d4ec7_LabelSt(void) = default;

	inline bool operator==(const _1e38d4ec7_LabelSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1e38d4ec7_LabelSt &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_GotoSt {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	_1e3bad8dd_Token _field_label = _1e3bad8dd_Token();


	_1e38d4ec7_GotoSt(_1e3bad8dd_Token __param_token, _1e3bad8dd_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1e38d4ec7_GotoSt(void) = default;

	inline bool operator==(const _1e38d4ec7_GotoSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _1e38d4ec7_GotoSt &_Src) const { return !this->operator==(_Src); }
};


struct _1e50ac4b1_BinopSolver {
	jule::Ptr<_1e50ac4b1_Eval> _field_e = jule::Ptr<_1e50ac4b1_Eval>();
	jule::Ptr<_1e50ac4b1_Data> _field_l = jule::Ptr<_1e50ac4b1_Data>();
	jule::Ptr<_1e50ac4b1_Data> _field_r = jule::Ptr<_1e50ac4b1_Data>();
	_1e3bad8dd_Token _field_op = _1e3bad8dd_Token();


	_1e50ac4b1_BinopSolver(jule::Ptr<_1e50ac4b1_Eval> __param_e, jule::Ptr<_1e50ac4b1_Data> __param_l, jule::Ptr<_1e50ac4b1_Data> __param_r, _1e3bad8dd_Token __param_op): _field_e(__param_e), _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_1e50ac4b1_BinopSolver(void) = default;

	inline jule::Bool _method_check_type_compatibility(void);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_nil(void);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_enum(void);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_sptr(void);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_ptr(void);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_arr(void);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_slc(void);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_fn(void);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_struct(void);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_trait(void);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_any(void);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_bool(void);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_str(void);


	inline void _method_set_type_to_greater(void);


	inline void _method_check_mod_data(jule::Ptr<_1e50ac4b1_Data>&);


	inline void _method_mod(void);


	inline jule::Bool _method_numbers_are_compatibile(jule::Str&,jule::Str&);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_float(void);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_unsig_int(void);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_sig_int(void);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval_prim(void);


	inline jule::Ptr<_1e50ac4b1_Data> _method_eval(void);


	inline void _method_solve_const(jule::Ptr<_1e50ac4b1_Data>&);


	inline void _method_post_const(jule::Ptr<_1e50ac4b1_Data>&);


	inline void _method_check_data(jule::Ptr<_1e50ac4b1_Data>&);


	inline void _method_check_datas(void);


	inline void _method_set_model(jule::Ptr<_1e50ac4b1_Data>&);


	inline jule::Ptr<_1e50ac4b1_Data> _method_solve_explicit(jule::Ptr<_1e50ac4b1_Data>&,jule::Ptr<_1e50ac4b1_Data>&);


	inline jule::Ptr<_1e50ac4b1_Data> _method_solve(jule::Ptr<_1e38d4ec7_BinopExpr>&);


	inline bool operator==(const _1e50ac4b1_BinopSolver &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1e50ac4b1_BinopSolver &_Src) const { return !this->operator==(_Src); }
};


struct _1e6420856_TypeAlias {
	jule::Ptr<_1e38d4ec7_ScopeTree> _field_scope = jule::Ptr<_1e38d4ec7_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_generic = jule::Bool();
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e6420856_TypeSymbol> _field_kind = jule::Ptr<_1e6420856_TypeSymbol>();
	jule::Str _field_doc = jule::Str();
	jule::Slice<jule::Any> _field_refers = jule::Slice<jule::Any>();


	_1e6420856_TypeAlias(jule::Ptr<_1e38d4ec7_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_used, jule::Bool __param_generic, _1e3bad8dd_Token __param_token, jule::Str __param_ident, jule::Ptr<_1e6420856_TypeSymbol> __param_kind, jule::Str __param_doc, jule::Slice<jule::Any> __param_refers): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_used(__param_used), _field_generic(__param_generic), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind), _field_doc(__param_doc), _field_refers(__param_refers) {}

	

	_1e6420856_TypeAlias(void) = default;

	inline bool operator==(const _1e6420856_TypeAlias &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_used == _Src._field_used &&
			this->_field_generic == _Src._field_generic &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc == _Src._field_doc &&
			this->_field_refers == _Src._field_refers;
	}

	inline bool operator!=(const _1e6420856_TypeAlias &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_FallSt {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();


	_1e38d4ec7_FallSt(_1e3bad8dd_Token __param_token): _field_token(__param_token) {}

	

	_1e38d4ec7_FallSt(void) = default;

	inline bool operator==(const _1e38d4ec7_FallSt &_Src) const {
		return 
			this->_field_token == _Src._field_token;
	}

	inline bool operator!=(const _1e38d4ec7_FallSt &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_AssignLeft {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e38d4ec7_Expr> _field_expr = jule::Ptr<_1e38d4ec7_Expr>();


	_1e38d4ec7_AssignLeft(_1e3bad8dd_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Str __param_ident, jule::Ptr<_1e38d4ec7_Expr> __param_expr): _field_token(__param_token), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_1e38d4ec7_AssignLeft(void) = default;

	inline bool operator==(const _1e38d4ec7_AssignLeft &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1e38d4ec7_AssignLeft &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_AssignSt {
	jule::Bool _field_declarative = jule::Bool();
	_1e3bad8dd_Token _field_setter = _1e3bad8dd_Token();
	jule::Slice<jule::Ptr<_1e38d4ec7_AssignLeft>> _field_left = jule::Slice<jule::Ptr<_1e38d4ec7_AssignLeft>>();
	jule::Ptr<_1e38d4ec7_Expr> _field_right = jule::Ptr<_1e38d4ec7_Expr>();


	_1e38d4ec7_AssignSt(jule::Bool __param_declarative, _1e3bad8dd_Token __param_setter, jule::Slice<jule::Ptr<_1e38d4ec7_AssignLeft>> __param_left, jule::Ptr<_1e38d4ec7_Expr> __param_right): _field_declarative(__param_declarative), _field_setter(__param_setter), _field_left(__param_left), _field_right(__param_right) {}

	

	_1e38d4ec7_AssignSt(void) = default;

	inline bool operator==(const _1e38d4ec7_AssignSt &_Src) const {
		return 
			this->_field_declarative == _Src._field_declarative &&
			this->_field_setter == _Src._field_setter &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _1e38d4ec7_AssignSt &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_Comment {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Str _field_text = jule::Str();


	_1e38d4ec7_Comment(_1e3bad8dd_Token __param_token, jule::Str __param_text): _field_token(__param_token), _field_text(__param_text) {}

	

	_1e38d4ec7_Comment(void) = default;

	inline bool operator==(const _1e38d4ec7_Comment &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _1e38d4ec7_Comment &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_ParamDecl {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1e38d4ec7_TypeDecl> _field_kind = jule::Ptr<_1e38d4ec7_TypeDecl>();
	jule::Str _field_ident = jule::Str();


	_1e38d4ec7_ParamDecl(_1e3bad8dd_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ptr<_1e38d4ec7_TypeDecl> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {}

	

	_1e38d4ec7_ParamDecl(void) = default;

	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _1e38d4ec7_ParamDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1e38d4ec7_ParamDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_FnDecl {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1e38d4ec7_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>();
	jule::Ptr<_1e38d4ec7_CommentGroup> _field_doc_comments = jule::Ptr<_1e38d4ec7_CommentGroup>();
	jule::Ptr<_1e38d4ec7_ScopeTree> _field_scope = jule::Ptr<_1e38d4ec7_ScopeTree>();
	jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>>();
	jule::Ptr<_1e38d4ec7_RetTypeDecl> _field_result = jule::Ptr<_1e38d4ec7_RetTypeDecl>();
	jule::Slice<jule::Ptr<_1e38d4ec7_ParamDecl>> _field_params = jule::Slice<jule::Ptr<_1e38d4ec7_ParamDecl>>();


	_1e38d4ec7_FnDecl(_1e3bad8dd_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Str __param_ident, jule::Slice<jule::Ptr<_1e38d4ec7_Directive>> __param_directives, jule::Ptr<_1e38d4ec7_CommentGroup> __param_doc_comments, jule::Ptr<_1e38d4ec7_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>> __param_generics, jule::Ptr<_1e38d4ec7_RetTypeDecl> __param_result, jule::Slice<jule::Ptr<_1e38d4ec7_ParamDecl>> __param_params): _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_ident(__param_ident), _field_directives(__param_directives), _field_doc_comments(__param_doc_comments), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params) {}

	

	_1e38d4ec7_FnDecl(void) = default;

	inline jule::Bool _method_is_anon(void);


	inline bool operator==(const _1e38d4ec7_FnDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params;
	}

	inline bool operator!=(const _1e38d4ec7_FnDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_VarDecl {
	jule::Ptr<_1e38d4ec7_ScopeTree> _field_scope = jule::Ptr<_1e38d4ec7_ScopeTree>();
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Slice<jule::Ptr<_1e38d4ec7_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>();
	jule::Ptr<_1e38d4ec7_CommentGroup> _field_doc_comments = jule::Ptr<_1e38d4ec7_CommentGroup>();
	jule::Ptr<_1e38d4ec7_TypeDecl> _field_kind = jule::Ptr<_1e38d4ec7_TypeDecl>();
	jule::Ptr<_1e38d4ec7_Expr> _field_expr = jule::Ptr<_1e38d4ec7_Expr>();


	_1e38d4ec7_VarDecl(jule::Ptr<_1e38d4ec7_ScopeTree> __param_scope, _1e3bad8dd_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_public, jule::Bool __param_mutable, jule::Bool __param_constant, jule::Bool __param_statically, jule::Bool __param_reference, jule::Slice<jule::Ptr<_1e38d4ec7_Directive>> __param_directives, jule::Ptr<_1e38d4ec7_CommentGroup> __param_doc_comments, jule::Ptr<_1e38d4ec7_TypeDecl> __param_kind, jule::Ptr<_1e38d4ec7_Expr> __param_expr): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_public(__param_public), _field_mutable(__param_mutable), _field_constant(__param_constant), _field_statically(__param_statically), _field_reference(__param_reference), _field_directives(__param_directives), _field_doc_comments(__param_doc_comments), _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_1e38d4ec7_VarDecl(void) = default;

	inline bool operator==(const _1e38d4ec7_VarDecl &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_constant == _Src._field_constant &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1e38d4ec7_VarDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_RetSt {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Ptr<_1e38d4ec7_Expr> _field_expr = jule::Ptr<_1e38d4ec7_Expr>();


	_1e38d4ec7_RetSt(_1e3bad8dd_Token __param_token, jule::Ptr<_1e38d4ec7_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1e38d4ec7_RetSt(void) = default;

	inline bool operator==(const _1e38d4ec7_RetSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1e38d4ec7_RetSt &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_Iter {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Any _field_kind = jule::Any();
	jule::Ptr<_1e38d4ec7_ScopeTree> _field_scope = jule::Ptr<_1e38d4ec7_ScopeTree>();


	_1e38d4ec7_Iter(_1e3bad8dd_Token __param_token, jule::Any __param_kind, jule::Ptr<_1e38d4ec7_ScopeTree> __param_scope): _field_token(__param_token), _field_kind(__param_kind), _field_scope(__param_scope) {}

	

	_1e38d4ec7_Iter(void) = default;

	inline jule::Bool _method_is_inf(void);


	inline bool operator==(const _1e38d4ec7_Iter &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1e38d4ec7_Iter &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_WhileKind {
	jule::Ptr<_1e38d4ec7_Expr> _field_expr = jule::Ptr<_1e38d4ec7_Expr>();
	jule::Any _field_next = jule::Any();
	_1e3bad8dd_Token _field_next_token = _1e3bad8dd_Token();


	_1e38d4ec7_WhileKind(jule::Ptr<_1e38d4ec7_Expr> __param_expr, jule::Any __param_next, _1e3bad8dd_Token __param_next_token): _field_expr(__param_expr), _field_next(__param_next), _field_next_token(__param_next_token) {}

	

	_1e38d4ec7_WhileKind(void) = default;

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _1e38d4ec7_WhileKind &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_next_token == _Src._field_next_token;
	}

	inline bool operator!=(const _1e38d4ec7_WhileKind &_Src) const { return !this->operator==(_Src); }
};


struct _1e6420856_TypeChecker {
	jule::Ptr<_1e5054722_Sema> _field_s = jule::Ptr<_1e5054722_Sema>();
	jule::Trait<_1e5425ab0_Lookup> _field_lookup = jule::Trait<_1e5425ab0_Lookup>();
	jule::Ptr<_1e6420856_Referencer> _field_referencer = jule::Ptr<_1e6420856_Referencer>();
	_1e3bad8dd_Token _field_error_token = _1e3bad8dd_Token();
	jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>> _field_ignore_generics = jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>>();
	jule::Slice<jule::Ptr<_1e6420856_TypeAlias>> _field_use_generics = jule::Slice<jule::Ptr<_1e6420856_TypeAlias>>();
	jule::Bool _field_not_plain = jule::Bool();


	_1e6420856_TypeChecker(jule::Ptr<_1e5054722_Sema> __param_s, jule::Trait<_1e5425ab0_Lookup> __param_lookup, jule::Ptr<_1e6420856_Referencer> __param_referencer, _1e3bad8dd_Token __param_error_token, jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>> __param_ignore_generics, jule::Slice<jule::Ptr<_1e6420856_TypeAlias>> __param_use_generics, jule::Bool __param_not_plain): _field_s(__param_s), _field_lookup(__param_lookup), _field_referencer(__param_referencer), _field_error_token(__param_error_token), _field_ignore_generics(__param_ignore_generics), _field_use_generics(__param_use_generics), _field_not_plain(__param_not_plain) {}

	

	_1e6420856_TypeChecker(void) = default;

	inline void _method_push_err(_1e3bad8dd_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Ptr<_1e6420856_Prim> _method_build_prim(jule::Ptr<_1e38d4ec7_IdentTypeDecl>&);


	inline void _method_push_cycle_error(jule::Any,jule::Any,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Any,jule::Str&);


	inline jule::Bool _method_check_illegal_cycles(jule::Ptr<_1e38d4ec7_IdentTypeDecl>&,jule::Any);


	inline jule::Trait<_1e6420856_Kind> _method_from_type_alias(jule::Ptr<_1e38d4ec7_IdentTypeDecl>&,jule::Ptr<_1e6420856_TypeAlias>&);


	inline jule::Ptr<_1e4d62387_Enum> _method_from_enum(jule::Ptr<_1e38d4ec7_IdentTypeDecl>&,jule::Ptr<_1e4d62387_Enum>&);


	inline jule::Bool _method_check_struct_ins(jule::Ptr<_1e398ee72_StructIns>&,_1e3bad8dd_Token&);


	inline void _method_append_used_struct_reference(jule::Ptr<_1e398ee72_Struct>&);


	inline jule::Ptr<_1e398ee72_StructIns> _method_from_struct(jule::Ptr<_1e38d4ec7_IdentTypeDecl>&,jule::Ptr<_1e398ee72_Struct>&);


	inline jule::Trait<_1e6420856_Kind> _method_get_def(jule::Ptr<_1e38d4ec7_IdentTypeDecl>&);


	inline jule::Trait<_1e6420856_Kind> _method_build_ident(jule::Ptr<_1e38d4ec7_IdentTypeDecl>);


	inline jule::Ptr<_1e6420856_Sptr> _method_build_sptr_from_type(jule::Ptr<_1e6420856_TypeKind>&);


	inline jule::Ptr<_1e6420856_Sptr> _method_build_sptr(jule::Ptr<_1e38d4ec7_SptrTypeDecl>);


	inline jule::Ptr<_1e6420856_Ptr> _method_build_ptr_from_type(jule::Ptr<_1e6420856_TypeKind>&);


	inline jule::Ptr<_1e6420856_Ptr> _method_build_ptr(jule::Ptr<_1e38d4ec7_PtrTypeDecl>);


	inline jule::Ptr<_1e6420856_Slc> _method_build_slc(jule::Ptr<_1e38d4ec7_SlcTypeDecl>);


	inline jule::Ptr<_1e6420856_Arr> _method_build_arr(jule::Ptr<_1e38d4ec7_ArrTypeDecl>);


	inline jule::Ptr<_1e6420856_Map> _method_build_map(jule::Ptr<_1e38d4ec7_MapTypeDecl>);


	inline jule::Ptr<_1e6420856_Tuple> _method_build_tuple(jule::Ptr<_1e38d4ec7_TupleTypeDecl>);


	inline jule::Bool _method_check_fn_types(jule::Ptr<_1e4b15a20_FnIns>&);


	inline jule::Ptr<_1e4b15a20_FnIns> _method_build_fn(jule::Ptr<_1e38d4ec7_FnDecl>);


	inline jule::Trait<_1e6420856_Kind> _method_build_by_namespace(jule::Ptr<_1e38d4ec7_NamespaceTypeDecl>);


	inline jule::Ptr<_1e6420856_TypeKind> _method_build(jule::Any&);


	inline jule::Ptr<_1e6420856_TypeKind> _method_check_decl(jule::Ptr<_1e38d4ec7_TypeDecl>&);


	inline void _method_check(jule::Ptr<_1e6420856_TypeSymbol>&);


	inline bool operator==(const _1e6420856_TypeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_referencer == _Src._field_referencer &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_ignore_generics == _Src._field_ignore_generics &&
			this->_field_use_generics == _Src._field_use_generics &&
			this->_field_not_plain == _Src._field_not_plain;
	}

	inline bool operator!=(const _1e6420856_TypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_RangeKind {
	_1e3bad8dd_Token _field_in_token = _1e3bad8dd_Token();
	jule::Ptr<_1e38d4ec7_Expr> _field_expr = jule::Ptr<_1e38d4ec7_Expr>();
	jule::Ptr<_1e38d4ec7_VarDecl> _field_key_a = jule::Ptr<_1e38d4ec7_VarDecl>();
	jule::Ptr<_1e38d4ec7_VarDecl> _field_key_b = jule::Ptr<_1e38d4ec7_VarDecl>();


	_1e38d4ec7_RangeKind(_1e3bad8dd_Token __param_in_token, jule::Ptr<_1e38d4ec7_Expr> __param_expr, jule::Ptr<_1e38d4ec7_VarDecl> __param_key_a, jule::Ptr<_1e38d4ec7_VarDecl> __param_key_b): _field_in_token(__param_in_token), _field_expr(__param_expr), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_1e38d4ec7_RangeKind(void) = default;

	inline bool operator==(const _1e38d4ec7_RangeKind &_Src) const {
		return 
			this->_field_in_token == _Src._field_in_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _1e38d4ec7_RangeKind &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_BreakSt {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	_1e3bad8dd_Token _field_label = _1e3bad8dd_Token();


	_1e38d4ec7_BreakSt(_1e3bad8dd_Token __param_token, _1e3bad8dd_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1e38d4ec7_BreakSt(void) = default;

	inline bool operator==(const _1e38d4ec7_BreakSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _1e38d4ec7_BreakSt &_Src) const { return !this->operator==(_Src); }
};


struct _1e376ec74_IR {
	jule::Slice<jule::Str> _field_passes = jule::Slice<jule::Str>();
	jule::Ptr<_1e4ee54e8_Package> _field_main = jule::Ptr<_1e4ee54e8_Package>();
	jule::Slice<jule::Ptr<_1e4ee54e8_ImportInfo>> _field_used = jule::Slice<jule::Ptr<_1e4ee54e8_ImportInfo>>();
	_1e354d019_OrderedDefines _field_ordered = _1e354d019_OrderedDefines();


	_1e376ec74_IR(jule::Slice<jule::Str> __param_passes, jule::Ptr<_1e4ee54e8_Package> __param_main, jule::Slice<jule::Ptr<_1e4ee54e8_ImportInfo>> __param_used, _1e354d019_OrderedDefines __param_ordered): _field_passes(__param_passes), _field_main(__param_main), _field_used(__param_used), _field_ordered(__param_ordered) {}

	

	_1e376ec74_IR(void) = default;

	static inline std::tuple<jule::Ptr<_1e376ec74_IR>,jule::Slice<_1e24777a2_Log>> _static_method_build(jule::Str,jule::Int);


	inline void _method_append_structs(jule::Ptr<_1e4ee54e8_Package>&,jule::Slice<jule::Ptr<_1e398ee72_Struct>>&);


	inline jule::Slice<jule::Ptr<_1e398ee72_Struct>> _method_get_all_structures(void);


	inline void _method_append_vars(jule::Ptr<_1e4ee54e8_Package>&,jule::Slice<jule::Ptr<_1e50b0492_Var>>&);


	inline jule::Slice<jule::Ptr<_1e50b0492_Var>> _method_get_all_variables(void);


	inline void _method_order(void);


	inline bool operator==(const _1e376ec74_IR &_Src) const {
		return 
			this->_field_passes == _Src._field_passes &&
			this->_field_main == _Src._field_main &&
			this->_field_used == _Src._field_used &&
			this->_field_ordered == _Src._field_ordered;
	}

	inline bool operator!=(const _1e376ec74_IR &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_ContSt {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	_1e3bad8dd_Token _field_label = _1e3bad8dd_Token();


	_1e38d4ec7_ContSt(_1e3bad8dd_Token __param_token, _1e3bad8dd_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1e38d4ec7_ContSt(void) = default;

	inline bool operator==(const _1e38d4ec7_ContSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _1e38d4ec7_ContSt &_Src) const { return !this->operator==(_Src); }
};


struct _1e4d6ee22_ScopeLabel {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Ptr<_1e4d6ee22_Label> _field_label = jule::Ptr<_1e4d6ee22_Label>();
	jule::Int _field_pos = jule::Int();
	jule::Ptr<_1e4d6ee22_ScopeChecker> _field_scope = jule::Ptr<_1e4d6ee22_ScopeChecker>();
	jule::Bool _field_used = jule::Bool();


	_1e4d6ee22_ScopeLabel(_1e3bad8dd_Token __param_token, jule::Ptr<_1e4d6ee22_Label> __param_label, jule::Int __param_pos, jule::Ptr<_1e4d6ee22_ScopeChecker> __param_scope, jule::Bool __param_used): _field_token(__param_token), _field_label(__param_label), _field_pos(__param_pos), _field_scope(__param_scope), _field_used(__param_used) {}

	

	_1e4d6ee22_ScopeLabel(void) = default;

	inline bool operator==(const _1e4d6ee22_ScopeLabel &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label &&
			this->_field_pos == _Src._field_pos &&
			this->_field_scope == _Src._field_scope &&
			this->_field_used == _Src._field_used;
	}

	inline bool operator!=(const _1e4d6ee22_ScopeLabel &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_If {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Ptr<_1e38d4ec7_Expr> _field_expr = jule::Ptr<_1e38d4ec7_Expr>();
	jule::Ptr<_1e38d4ec7_ScopeTree> _field_scope = jule::Ptr<_1e38d4ec7_ScopeTree>();


	_1e38d4ec7_If(_1e3bad8dd_Token __param_token, jule::Ptr<_1e38d4ec7_Expr> __param_expr, jule::Ptr<_1e38d4ec7_ScopeTree> __param_scope): _field_token(__param_token), _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_1e38d4ec7_If(void) = default;

	inline bool operator==(const _1e38d4ec7_If &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1e38d4ec7_If &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_Else {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Ptr<_1e38d4ec7_ScopeTree> _field_scope = jule::Ptr<_1e38d4ec7_ScopeTree>();


	_1e38d4ec7_Else(_1e3bad8dd_Token __param_token, jule::Ptr<_1e38d4ec7_ScopeTree> __param_scope): _field_token(__param_token), _field_scope(__param_scope) {}

	

	_1e38d4ec7_Else(void) = default;

	inline bool operator==(const _1e38d4ec7_Else &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1e38d4ec7_Else &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_Directive {
	_1e3bad8dd_Token _field_tag = _1e3bad8dd_Token();
	jule::Slice<_1e3bad8dd_Token> _field_args = jule::Slice<_1e3bad8dd_Token>();


	_1e38d4ec7_Directive(_1e3bad8dd_Token __param_tag, jule::Slice<_1e3bad8dd_Token> __param_args): _field_tag(__param_tag), _field_args(__param_args) {}

	

	_1e38d4ec7_Directive(void) = default;

	inline bool operator==(const _1e38d4ec7_Directive &_Src) const {
		return 
			this->_field_tag == _Src._field_tag &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1e38d4ec7_Directive &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_TypeAliasDecl {
	jule::Ptr<_1e38d4ec7_ScopeTree> _field_scope = jule::Ptr<_1e38d4ec7_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e38d4ec7_TypeDecl> _field_kind = jule::Ptr<_1e38d4ec7_TypeDecl>();
	jule::Ptr<_1e38d4ec7_CommentGroup> _field_doc_comments = jule::Ptr<_1e38d4ec7_CommentGroup>();


	_1e38d4ec7_TypeAliasDecl(jule::Ptr<_1e38d4ec7_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, _1e3bad8dd_Token __param_token, jule::Str __param_ident, jule::Ptr<_1e38d4ec7_TypeDecl> __param_kind, jule::Ptr<_1e38d4ec7_CommentGroup> __param_doc_comments): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind), _field_doc_comments(__param_doc_comments) {}

	

	_1e38d4ec7_TypeAliasDecl(void) = default;

	inline bool operator==(const _1e38d4ec7_TypeAliasDecl &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _1e38d4ec7_TypeAliasDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_Case {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Ptr<_1e38d4ec7_ScopeTree> _field_scope = jule::Ptr<_1e38d4ec7_ScopeTree>();
	jule::Slice<jule::Ptr<_1e38d4ec7_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1e38d4ec7_Expr>>();


	_1e38d4ec7_Case(_1e3bad8dd_Token __param_token, jule::Ptr<_1e38d4ec7_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_1e38d4ec7_Expr>> __param_exprs): _field_token(__param_token), _field_scope(__param_scope), _field_exprs(__param_exprs) {}

	

	_1e38d4ec7_Case(void) = default;

	inline bool operator==(const _1e38d4ec7_Case &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _1e38d4ec7_Case &_Src) const { return !this->operator==(_Src); }
};


struct _1e38d4ec7_MatchCase {
	_1e3bad8dd_Token _field_token = _1e3bad8dd_Token();
	jule::Bool _field_type_match = jule::Bool();
	jule::Ptr<_1e38d4ec7_Expr> _field_expr = jule::Ptr<_1e38d4ec7_Expr>();
	jule::Slice<jule::Ptr<_1e38d4ec7_Case>> _field_cases = jule::Slice<jule::Ptr<_1e38d4ec7_Case>>();
	jule::Ptr<_1e38d4ec7_Else> _field_default = jule::Ptr<_1e38d4ec7_Else>();


	_1e38d4ec7_MatchCase(_1e3bad8dd_Token __param_token, jule::Bool __param_type_match, jule::Ptr<_1e38d4ec7_Expr> __param_expr, jule::Slice<jule::Ptr<_1e38d4ec7_Case>> __param_cases, jule::Ptr<_1e38d4ec7_Else> __param_default): _field_token(__param_token), _field_type_match(__param_type_match), _field_expr(__param_expr), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_1e38d4ec7_MatchCase(void) = default;

	inline bool operator==(const _1e38d4ec7_MatchCase &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_expr == _Src._field_expr &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1e38d4ec7_MatchCase &_Src) const { return !this->operator==(_Src); }
};


struct _1e249dae7_ArgParser {
	_1e249dae7_FlagSet _field_set = _1e249dae7_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Str _field_error = jule::Str();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::Int _field_i = jule::Int();


	_1e249dae7_ArgParser(_1e249dae7_FlagSet __param_set, jule::Slice<jule::Str> __param_args, jule::Str __param_error, jule::Slice<jule::Str> __param_content, jule::Int __param_i): _field_set(__param_set), _field_args(__param_args), _field_error(__param_error), _field_content(__param_content), _field_i(__param_i) {}

	

	_1e249dae7_ArgParser(void) = default;

	inline std::tuple<jule::Int,jule::Bool> _method_parse_integer_0(jule::Str&,jule::Fn<std::tuple<jule::Int,jule::Bool>(jule::Str,jule::Int)>);
	inline std::tuple<jule::Uint,jule::Bool> _method_parse_integer_1(jule::Str&,jule::Fn<std::tuple<jule::Uint,jule::Bool>(jule::Str,jule::Int)>);


	inline jule::Str _method_get_data(void);


	inline void _method_process_flag(jule::Trait<_1e249dae7_CommonFlag>&);


	inline void _method_single_dash(jule::Str&);


	inline void _method_double_dash(jule::Str&);


	inline void _method_try_arg(void);


	inline void _method_parse(void);


	inline bool operator==(const _1e249dae7_ArgParser &_Src) const {
		return 
			this->_field_set == _Src._field_set &&
			this->_field_args == _Src._field_args &&
			this->_field_error == _Src._field_error &&
			this->_field_content == _Src._field_content &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _1e249dae7_ArgParser &_Src) const { return !this->operator==(_Src); }
};


inline void _1e25d1664_free(void*);
inline jule::Str _1e25ebd33_byte_ptr_to_str(jule::U8*);
inline jule::Int _1e256bec3_get_last_errno(void);
inline jule::Int _1e25838e1_stat(jule::U8*,struct stat*);
inline jule::Int _1e25838e1_open(jule::U8*,jule::Int,jule::Int);
inline jule::U8* _1e25838e1_getcwd(jule::U8*,jule::Uint);
inline DIR* _1e25838e1_opendir(jule::U8*);
inline struct dirent* _1e25838e1_readdir(DIR*);
inline jule::Int _1e25838e1_closedir(DIR*);
inline jule::Int _1e25838e1_mkdir(jule::U8*,jule::Int);
inline jule::Int _1e25838e1_rmdir(jule::U8*);
inline jule::Int _1e25838e1_unlink(jule::U8*);
inline jule::I64 _1e25c1544_seek(jule::Int,jule::I64,jule::Int);
inline jule::Int _1e25c1544_read(jule::Int,void*,jule::Uint);
inline jule::Int _1e25c1544_close(jule::Int);
inline jule::Int _1e25c1544_write(jule::Int,void*,jule::Uint);
inline void _1e25c1544_exit(jule::Int);
inline jule::Int _1e256c149_get_last_os_error(void);
inline jule::Slice<jule::Str> _1e256bd80_args(void);
inline std::tuple<jule::Str,jule::Int> _1e256bd80_working_dir(void);
inline std::tuple<jule::Str,jule::Int> _1e257c489___getwd(void);
inline jule::Str _1e2517b61_clean(jule::Str);
inline jule::Str _1e2517b61_from_slash(jule::Str);
inline jule::Str _1e2517b61_join(jule::Slice<jule::Str>);
inline jule::Str _1e2517b61_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1e2517b61_abs(jule::Str);
inline jule::Str _1e2517b61_base(jule::Str);
inline jule::Str _1e2517b61_dir(jule::Str);
inline jule::Str _1e2517b61_volume_name(jule::Str);
inline jule::Bool _1e2516148_is_path_sep(jule::U8);
inline jule::Bool _1e2516148_is_abs(jule::Str);
inline jule::Int _1e2516148_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1e2516148___abs(jule::Str);
inline jule::Str _1e2516148_str_join(jule::Slice<jule::Str>,jule::Str);
inline jule::Str _1e2516148___join(jule::Slice<jule::Str>);
inline void _1e2506e5d_exit(jule::Int);
inline jule::Str _1e2506e5d_executable(void);
inline jule::Bool _1e243c019_is_std_header_path(jule::Str);
inline jule::Bool _1e243c019_is_valid_header_ext(jule::Str);
inline jule::Bool _1e243c019_is_valid_cpp_ext(jule::Str);
inline jule::Str _1e24777a2_logf(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _1e24777a2_arg_to_str(jule::Any);
inline jule::Int _1e24777a2_find_next_fmt(jule::Str);
inline jule::Str _1e24777a2_apply_fmt(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1e249080e_is_top_directive(jule::Str);
inline jule::Bool _1e24c3798_is_windows(jule::Str);
inline jule::Bool _1e24c3798_is_darwin(jule::Str);
inline jule::Bool _1e24c3798_is_linux(jule::Str);
inline jule::Bool _1e24c3798_is_i386(jule::Str);
inline jule::Bool _1e24c3798_is_amd64(jule::Str);
inline jule::Bool _1e24c3798_is_arm64(jule::Str);
inline jule::Bool _1e24c3798_is_unix(jule::Str);
inline jule::Bool _1e24c3798_is_32bit(jule::Str);
inline jule::Bool _1e24c3798_is_64bit(jule::Str);
inline void _1e24c38db_exit_err(jule::Str);
inline void _1e24c38db_init(void);
inline jule::Int _1e3ac34a1_leading_zeros64(jule::U64);
inline jule::Int _1e3ac34a1_trailing_zeros(jule::Uint);
inline jule::Int _1e3ac34a1_trailing_zeros32(jule::U32);
inline jule::Int _1e3ac34a1_trailing_zeros64(jule::U64);
inline jule::Int _1e3ac34a1_len32(jule::U32);
inline jule::Int _1e3ac34a1_len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1e3ac34a1_add64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::U64,jule::U64> _1e3ac34a1_mul64(jule::U64,jule::U64);
inline jule::U32 _1e35250bd_f32_bits(jule::F32);
inline jule::F32 _1e35250bd_f32_from_bits(jule::U32);
inline jule::U64 _1e35250bd_f64_bits(jule::F64);
inline jule::F64 _1e35250bd_f64_from_bits(jule::U64);
inline jule::F64 _1e35ee7b3_nan(void);
inline jule::Bool _1e35ee7b3_is_nan(jule::F64);
inline jule::F64 _1e35ee7b3_inf(jule::Int);
inline jule::Bool _1e35ee7b3_is_inf(jule::F64,jule::Int);
inline jule::F64 _1e36b997c_abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1e3725ad7_modf(jule::F64);
inline jule::Str _1e2495d64_fmt_float(jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _1e2495d64_generic_ftoa(jule::Slice<jule::U8>,jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _1e2495d64_big_ftoa(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_1e2495d64_FloatInfo&);
inline jule::Slice<jule::U8> _1e2495d64_fmt_digits(jule::Slice<jule::U8>,jule::Bool,jule::Bool,_1e2495d64_DecimalSlice,jule::Int,jule::U8);
inline void _1e2495d64_round_shortest(_1e34a359b_Decimal&,jule::U64,jule::Int,_1e2495d64_FloatInfo&);
inline jule::Slice<jule::U8> _1e2495d64_fmt_e(jule::Slice<jule::U8>,jule::Bool,_1e2495d64_DecimalSlice,jule::Int,jule::U8);
inline jule::Slice<jule::U8> _1e2495d64_fmt_f(jule::Slice<jule::U8>,jule::Bool,_1e2495d64_DecimalSlice,jule::Int);
inline jule::Slice<jule::U8> _1e2495d64_fmt_b(jule::Slice<jule::U8>,jule::Bool,jule::U64,jule::Int,_1e2495d64_FloatInfo&);
inline jule::Slice<jule::U8> _1e2495d64_fmt_x(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_1e2495d64_FloatInfo&);
inline jule::Int _1e2495d64_min(jule::Int,jule::Int);
inline jule::Int _1e2495d64_max(jule::Int,jule::Int);
inline jule::U8 _1e24a4812_lower(jule::U8);
inline std::tuple<jule::U64,jule::Int> _1e24a4812_parse_uint(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::I64,jule::Int> _1e24a4812_parse_int(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::F64,jule::Bool> _1e32cb946_eisel_lemire64(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1e32cb946_eisel_lemire32(jule::U64,jule::Int,jule::Bool);
inline jule::Int _1e3307ee4_common_prefix_len_ignore_case(jule::Str,jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Bool> _1e3307ee4_special(jule::Str);
inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _1e3307ee4_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1e3307ee4_atof64exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1e3307ee4_atof32exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F64,jule::Int> _1e3307ee4_atof_hex(jule::Str,_1e2495d64_FloatInfo&,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline std::tuple<jule::F32,jule::Int,jule::Int> _1e3307ee4_atof32(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _1e3307ee4_atof64(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _1e3307ee4_parse_float_prefix(jule::Str,jule::Int);
inline std::tuple<jule::F64,jule::Int> _1e3307ee4_parse_float(jule::Str,jule::Int);
inline void _1e3417147_ryu_ftoa_fixed32(_1e2495d64_DecimalSlice&,jule::U32,jule::Int,jule::Int);
inline void _1e3417147_ryu_ftoa_fixed64(_1e2495d64_DecimalSlice&,jule::U64,jule::Int,jule::Int);
inline void _1e3417147_format_decimal(_1e2495d64_DecimalSlice&,jule::U64,jule::Bool,jule::Bool,jule::Int);
inline void _1e3417147_ryu_ftoa_shortest(_1e2495d64_DecimalSlice&,jule::U64,jule::Int,_1e2495d64_FloatInfo&);
inline jule::Int _1e3417147_mul_by_log2_log10(jule::Int);
inline jule::Int _1e3417147_mul_by_log10_log2(jule::Int);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _1e3417147_compute_bounds(jule::U64,jule::Int,_1e2495d64_FloatInfo&);
inline void _1e3417147_ryu_digits(_1e2495d64_DecimalSlice&,jule::U64,jule::U64,jule::U64,jule::Bool,jule::Bool);
inline void _1e3417147_ryu_digits32(_1e2495d64_DecimalSlice&,jule::U32,jule::U32,jule::U32,jule::Bool,jule::Bool,jule::Int);
inline std::tuple<jule::U32,jule::Int,jule::Bool> _1e3417147_mult64bit_pow10(jule::U32,jule::Int,jule::Int);
inline std::tuple<jule::U64,jule::Int,jule::Bool> _1e3417147_mult128bit_pow10(jule::U64,jule::Int,jule::Int);
inline jule::Bool _1e3417147_divisible_by_pow5(jule::U64,jule::Int);
inline std::tuple<jule::U32,jule::U32> _1e3417147_divmod1e9(jule::U64);
inline void _1e34a359b_trim(_1e34a359b_Decimal&);
inline void _1e34a359b_right_shift(_1e34a359b_Decimal&,jule::Uint);
inline jule::Bool _1e34a359b_prefix_is_less_than(jule::Slice<jule::U8>,jule::Str);
inline void _1e34a359b_left_shift(_1e34a359b_Decimal&,jule::Uint);
inline jule::Bool _1e34a359b_should_round_up(_1e34a359b_Decimal&,jule::Int);
inline jule::Str _1e3417be7_fmt_uint(jule::U64,jule::Int);
inline jule::Str _1e3417be7_fmt_int(jule::I64,jule::Int);
inline jule::Str _1e3417be7_itoa(jule::Int);
inline jule::Str _1e3417be7_small(jule::Int);
inline jule::Bool _1e3417be7_is_power_of_two(jule::Int);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1e3417be7_fmt_bits(jule::Slice<jule::U8>,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline void _1e2496a24_push_opt_level(jule::Int);
inline jule::Bool _1e390414a_is_letter(jule::I32);
inline jule::Bool _1e3cd67d5_is16(jule::Slice<_1e3cd67d5_Range16>,jule::U16);
inline jule::Bool _1e3cd67d5_is32(jule::Slice<_1e3cd67d5_Range32>,jule::U32);
inline jule::Bool _1e3cd67d5_is_excluding_latin(jule::Ptr<_1e3cd67d5_RangeTable>,jule::I32);
inline std::tuple<jule::I32,jule::Int> _1e3cc002c_decode_rune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _1e3cc002c_append_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _1e3cc002c_append_rune_non_ascii(jule::Slice<jule::U8>,jule::I32);
inline jule::Int _1e3cdbc80_get_last_fs_error(void);
inline jule::Bool _1e3bad8dd_is_unary_op(jule::Str);
inline jule::Bool _1e3bad8dd_is_bin_op(jule::Str);
inline jule::Bool _1e3bad8dd_is_str(jule::Str);
inline jule::Bool _1e3bad8dd_is_raw_str(jule::Str);
inline jule::Bool _1e3bad8dd_is_rune(jule::Str);
inline jule::Bool _1e3bad8dd_is_bool(jule::Str);
inline jule::Bool _1e3bad8dd_contains_any(jule::Str,jule::Str);
inline jule::Bool _1e3bad8dd_is_float(jule::Str);
inline jule::Bool _1e3bad8dd_is_num(jule::Str);
inline jule::Bool _1e3bad8dd_is_ignore_ident(jule::Str);
inline jule::Bool _1e3bad8dd_is_anon_ident(jule::Str);
inline jule::Bool _1e3bad8dd_is_space(jule::I32);
inline jule::Bool _1e3bad8dd_is_letter(jule::I32);
inline jule::Bool _1e3bad8dd_is_decimal(jule::U8);
inline jule::Bool _1e3bad8dd_is_binary(jule::U8);
inline jule::Bool _1e3bad8dd_is_octal(jule::U8);
inline jule::Bool _1e3bad8dd_is_hex(jule::U8);
inline jule::Bool _1e3bad8dd_is_assign(jule::Uint);
inline jule::Bool _1e3bad8dd_is_postfix_op(jule::Str);
inline jule::Bool _1e3bad8dd_is_assign_op(jule::Str);
inline jule::Ptr<_1e3beedd5_File> _1e3beedd5_new_file_set(jule::Str);
inline _1e24777a2_Log _1e390539e_make_err(jule::Int,jule::Int,jule::Ptr<_1e3beedd5_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1e390539e_bytes_has_prefix(jule::Slice<jule::U8>&,jule::Str);
inline jule::Str _1e390539e_float_fmt_e(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1e390539e_float_fmt_p(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1e390539e_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1e390539e_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1e390539e_float_fmt_dotp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1e390539e_float_num(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1e390539e_common_num(jule::Slice<jule::U8>&);
inline jule::Str _1e390539e_binary_num(jule::Slice<jule::U8>&);
inline jule::Bool _1e390539e_is_float_fmt_e(jule::U8,jule::Int);
inline jule::Bool _1e390539e_is_float_fmt_p(jule::U8,jule::Int);
inline jule::Bool _1e390539e_is_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Bool _1e390539e_is_float_fmt_dotp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Bool _1e390539e_is_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1e390539e_octal_num(jule::Slice<jule::U8>&);
inline jule::Str _1e390539e_hex_num(jule::Slice<jule::U8>&);
inline jule::Str _1e390539e_hex_escape(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1e390539e_big_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1e390539e_little_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1e390539e_hex_byte_escape(jule::Slice<jule::U8>&);
inline jule::Str _1e390539e_byte_escape(jule::Slice<jule::U8>&);
inline jule::Slice<_1e24777a2_Log> _1e390539e_lex(jule::Ptr<_1e3beedd5_File>);
inline jule::Ptr<_1e396d626_FileInfo> _1e396d626_parse_file(jule::Ptr<_1e3beedd5_File>);
inline std::tuple<jule::Ptr<_1e38d45c0_Ast>,jule::Slice<_1e24777a2_Log>> _1e396d626_parse_fileset(jule::Ptr<_1e3beedd5_File>);
inline jule::Ptr<_1e38d4ec7_ScopeTree> _1e3c61e36_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _1e3c61e36_is_st(_1e3bad8dd_Token,_1e3bad8dd_Token);
inline jule::Bool _1e3c61e36_prev_is_incomplete_expr(jule::Slice<_1e3bad8dd_Token>&,jule::Int&);
inline std::tuple<jule::Int,jule::Bool> _1e3c61e36_next_st_pos(jule::Slice<_1e3bad8dd_Token>&,jule::Int);
inline std::tuple<jule::Slice<_1e3bad8dd_Token>,jule::Bool> _1e3c61e36_skip_st(jule::Int&,jule::Slice<_1e3bad8dd_Token>);
inline jule::Slice<jule::Ptr<_1e3c61e36_Stmt>> _1e3c61e36_split_stms(jule::Slice<_1e3bad8dd_Token>&);
inline jule::Slice<_1e3bad8dd_Token> _1e3ca6387_is_fn_call(jule::Slice<_1e3bad8dd_Token>&);
inline jule::Ptr<_1e3ca6387_CallData> _1e3ca6387_get_call_data(jule::Slice<_1e3bad8dd_Token>&);
inline jule::Slice<_1e3bad8dd_Token> _1e3ca6387_get_block_expr(jule::Slice<_1e3bad8dd_Token>&);
inline std::tuple<jule::Slice<_1e3bad8dd_Token>,jule::Slice<_1e3bad8dd_Token>> _1e3ca6387_split_colon(jule::Slice<_1e3bad8dd_Token>&);
inline jule::Slice<_1e3bad8dd_Token> _1e3ca6387_eliminate_comments(jule::Slice<_1e3bad8dd_Token>&);
inline jule::Int _1e3ca6387_find_lowest_prec_op(jule::Slice<_1e3bad8dd_Token>&);
inline jule::Ptr<_1e38d4ec7_IdentExpr> _1e3ca6387_build_ident_expr(_1e3bad8dd_Token&);
inline std::tuple<jule::Slice<_1e3bad8dd_Token>,jule::Int> _1e3ca6387_get_range_expr_tokens(jule::Slice<_1e3bad8dd_Token>&);
inline jule::Bool _1e3ca4682_check_assign_tokens(jule::Slice<_1e3bad8dd_Token>&);
inline _1e24777a2_Log _1e4a02445_make_err(jule::Int,jule::Int,jule::Ptr<_1e3beedd5_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<_1e3bad8dd_Token> _1e4a02445_range(jule::Int&,jule::Str,jule::Str,jule::Slice<_1e3bad8dd_Token>&);
inline std::tuple<jule::Slice<_1e3bad8dd_Token>,jule::Slice<_1e3bad8dd_Token>> _1e4a02445_range_last(jule::Slice<_1e3bad8dd_Token>&);
inline std::tuple<jule::Slice<jule::Slice<_1e3bad8dd_Token>>,jule::Slice<_1e24777a2_Log>> _1e4a02445_parts(jule::Slice<_1e3bad8dd_Token>&,jule::Uint,jule::Bool);
inline jule::Str _1e4a02445_get_close_kind_of_brace(jule::Str);
inline _1e24777a2_Log _1e4a02445_compiler_err(_1e3bad8dd_Token&,jule::Str&,jule::Slice<jule::Any>);
inline void _1e4a02445_push_suggestion(_1e24777a2_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ptr<_1e38d4ec7_Comment> _1e4a02445_build_comment(_1e3bad8dd_Token&);
inline jule::Str _1e4a02445_tokstoa(jule::Slice<_1e3bad8dd_Token>&);
inline jule::Ptr<_1e38d4ec7_TypeDecl> _1e4a2bb9a_build_void_type(void);
inline jule::Ptr<_1e38d4ec7_TypeDecl> _1e4a2bb9a_build_prim_type(_1e3bad8dd_Token);
inline std::tuple<jule::Slice<_1e3bad8dd_Token>,jule::Int> _1e4a2bb9a_split_map_range(jule::Slice<_1e3bad8dd_Token>&,jule::Int&);
inline void _1c8b9b83b_lshift_unsig(_1c8b9b83b_Const&,_1c8b9b83b_Const&);
inline void _1c8b9b83b_rshift_unsig(_1c8b9b83b_Const&,_1c8b9b83b_Const&);
inline jule::Str _1c8ba1104_real_kind_of(jule::Str);
inline jule::Int _1c8ba1104_bitsize_of(jule::Str);
inline jule::Str _1c8ba1104_int_from_bits(jule::U64);
inline jule::Str _1c8ba1104_uint_from_bits(jule::U64);
inline jule::Str _1c8ba1104_float_from_bits(jule::U64);
inline jule::Bool _1c8ba1104_check_bit_float(jule::Str,jule::Int);
inline jule::U64 _1c8ba1104_bitsize_of_float(jule::F64);
inline jule::U64 _1c8ba1104_bitsize_of_int(jule::I64);
inline jule::U64 _1c8ba1104_bitsize_of_uint(jule::U64);
inline jule::F64 _1c8ba438d_min(jule::Str);
inline jule::F64 _1c8ba438d_max(jule::Str);
inline jule::Bool _1c8b9ddd2_is_i8_compatible(jule::Str);
inline jule::Bool _1c8b9ddd2_is_i16_compatible(jule::Str);
inline jule::Bool _1c8b9ddd2_is_i32_compatible(jule::Str);
inline jule::Bool _1c8b9ddd2_is_i64_compatible(jule::Str);
inline jule::Bool _1c8b9ddd2_is_u8_compatible(jule::Str);
inline jule::Bool _1c8b9ddd2_is_u16_compatible(jule::Str);
inline jule::Bool _1c8b9ddd2_is_u32_compatible(jule::Str);
inline jule::Bool _1c8b9ddd2_is_u64_compatible(jule::Str);
inline jule::Bool _1c8b9ddd2_is_f32_compatible(jule::Str);
inline jule::Bool _1c8b9ddd2_is_f64_compatible(jule::Str);
inline jule::Bool _1c8b9ddd2_types_are_compatible(jule::Str,jule::Str);
inline jule::Bool _1c8b9ddd2_is_i16_greater(jule::Str);
inline jule::Bool _1c8b9ddd2_is_i32_greater(jule::Str);
inline jule::Bool _1c8b9ddd2_is_i64_greater(jule::Str);
inline jule::Bool _1c8b9ddd2_is_u8_greater(jule::Str);
inline jule::Bool _1c8b9ddd2_is_u16_greater(jule::Str);
inline jule::Bool _1c8b9ddd2_is_u32_greater(jule::Str);
inline jule::Bool _1c8b9ddd2_is_u64_greater(jule::Str);
inline jule::Bool _1c8b9ddd2_is_f32_greater(jule::Str);
inline jule::Bool _1c8b9ddd2_is_f64_greater(jule::Str);
inline jule::Bool _1c8b9ddd2_is_greater(jule::Str,jule::Str);
inline jule::Bool _1c8c8ad04_is_sig_int(jule::Str);
inline jule::Bool _1c8c8ad04_is_unsig_int(jule::Str);
inline jule::Bool _1c8c8ad04_is_int(jule::Str);
inline jule::Bool _1c8c8ad04_is_float(jule::Str);
inline jule::Bool _1c8c8ad04_is_num(jule::Str);
inline jule::Bool _1c8d06aa6_is_ascii(jule::I32);
inline jule::I32 _1c8d06aa6_to_rune(jule::Slice<jule::U8>);
inline jule::Str _1c8d06aa6_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _1c8d06aa6_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1c8d06aa6_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _1c8d06aa6_rune_from_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Slice<jule::U8> _1c8d06aa6_str_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Bool _1e4b15a20_kind_uses_generics(jule::Ptr<_1e6420856_TypeKind>,jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>>&);
inline jule::Bool _1e4b15a20_parameter_uses_generics(jule::Ptr<_1e4b15a20_Param>&,jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>>&);
inline jule::Str _1e4cc167b_str_repeat(jule::Str,jule::Int);
inline jule::Str _1e4cc167b_build_doc(jule::Ptr<_1e38d4ec7_CommentGroup>);
inline jule::Ptr<_1e6420856_TypeSymbol> _1e4cc167b_build_type(jule::Ptr<_1e38d4ec7_TypeDecl>);
inline jule::Ptr<_1e50ac4b1_Value> _1e4cc167b_build_expr(jule::Ptr<_1e38d4ec7_Expr>);
inline jule::Ptr<_1e6420856_TypeAlias> _1e4cc167b_build_type_alias(jule::Ptr<_1e38d4ec7_TypeAliasDecl>);
inline jule::Ptr<_1e398ee72_Field> _1e4cc167b_build_field(jule::Ptr<_1e38d4ec7_FieldDecl>);
inline jule::Slice<jule::Ptr<_1e398ee72_Field>> _1e4cc167b_build_fields(jule::Slice<jule::Ptr<_1e38d4ec7_FieldDecl>>&);
inline jule::Ptr<_1e398ee72_Struct> _1e4cc167b_build_struct(jule::Ptr<_1e38d4ec7_StructDecl>);
inline jule::Ptr<_1e4b15a20_Param> _1e4cc167b_build_param(jule::Ptr<_1e38d4ec7_ParamDecl>);
inline jule::Slice<jule::Ptr<_1e4b15a20_Param>> _1e4cc167b_build_params(jule::Slice<jule::Ptr<_1e38d4ec7_ParamDecl>>&);
inline jule::Ptr<_1e4b15a20_RetType> _1e4cc167b_build_ret_type(jule::Ptr<_1e38d4ec7_RetTypeDecl>);
inline jule::Ptr<_1e4b15a20_Fn> _1e4cc167b_build_fn(jule::Ptr<_1e38d4ec7_FnDecl>);
inline jule::Slice<jule::Ptr<_1e4b15a20_Fn>> _1e4cc167b_build_methods(jule::Slice<jule::Ptr<_1e38d4ec7_FnDecl>>&);
inline jule::Ptr<_1e4d61232_Trait> _1e4cc167b_build_trait(jule::Ptr<_1e38d4ec7_TraitDecl>);
inline jule::Ptr<_1e4d62387_EnumItem> _1e4cc167b_build_enum_item(jule::Ptr<_1e38d4ec7_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1e4d62387_EnumItem>> _1e4cc167b_build_enum_items(jule::Slice<jule::Ptr<_1e38d4ec7_EnumItemDecl>>&);
inline jule::Ptr<_1e4d62387_Enum> _1e4cc167b_build_enum(jule::Ptr<_1e38d4ec7_EnumDecl>);
inline jule::Ptr<_1e50b0492_Var> _1e4cc167b_build_var(jule::Ptr<_1e38d4ec7_VarDecl>);
inline jule::Slice<jule::Ptr<_1e50b0492_Var>> _1e4cc167b_build_vars(jule::Slice<jule::Ptr<_1e38d4ec7_VarDecl>>);
inline jule::Ptr<_1e39e721b_Impl> _1e4cc167b_build_impl(jule::Ptr<_1e38d4ec7_Impl>);
inline jule::Ptr<_1e4d6ee22_ScopeChecker> _1e4d6ee22_new_scope_checker_base(jule::Ptr<_1e5054722_Sema>&,jule::Ptr<_1e4b15a20_FnIns>);
inline jule::Ptr<_1e4d6ee22_ScopeChecker> _1e4d6ee22_new_scope_checker(jule::Ptr<_1e5054722_Sema>&,jule::Ptr<_1e4b15a20_FnIns>);
inline jule::Ptr<_1e4d6ee22_ScopeLabel> _1e4d6ee22_find_label_parent(jule::Str,jule::Ptr<_1e4d6ee22_ScopeChecker>);
inline jule::Bool _1e4d6ee22_stmt_is_goto_scope(jule::Any&,jule::Ptr<_1e4d6ee22_Scope>&);
inline jule::Int _1e4d6ee22_count_match_type(jule::Ptr<_1e4d6ee22_Match>&,jule::Ptr<_1e6420856_TypeKind>&);
inline jule::Slice<jule::Ptr<_1e50ac4b1_Data>> _1e4d6ee22_get_datas_from_tuple_data(jule::Ptr<_1e50ac4b1_Data>&);
inline jule::Slice<jule::Any> _1e4d6ee22_get_expr_models(jule::Any&);
inline jule::Bool _1e4d6ee22_check_mut(jule::Ptr<_1e5054722_Sema>&,jule::Ptr<_1e50ac4b1_Data>&,jule::Ptr<_1e50ac4b1_Data>,_1e3bad8dd_Token);
inline jule::Bool _1e4d6ee22_check_assign(jule::Ptr<_1e5054722_Sema>&,jule::Ptr<_1e50ac4b1_Data>&,jule::Ptr<_1e50ac4b1_Data>,_1e3bad8dd_Token);
inline jule::Bool _1e4d6ee22_is_valid_ast_st_for_next_st(jule::Any&);
inline jule::Bool _1e4d6ee22_is_valid_st_for_next_st(jule::Any&);
inline jule::Bool _1e4d6ee22_st_is_def(jule::Any&);
inline jule::Ptr<_1e50b0492_Var> _1e4ee54e8_find_var_in_package(jule::Slice<jule::Ptr<_1e5291035_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1e6420856_TypeAlias> _1e4ee54e8_find_type_alias_in_package(jule::Slice<jule::Ptr<_1e5291035_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1e398ee72_Struct> _1e4ee54e8_find_struct_in_package(jule::Slice<jule::Ptr<_1e5291035_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1e4b15a20_Fn> _1e4ee54e8_find_fn_in_package(jule::Slice<jule::Ptr<_1e5291035_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1e4d61232_Trait> _1e4ee54e8_find_trait_in_package(jule::Slice<jule::Ptr<_1e5291035_SymbolTable>>&,jule::Str);
inline jule::Ptr<_1e4d62387_Enum> _1e4ee54e8_find_enum_in_package(jule::Slice<jule::Ptr<_1e5291035_SymbolTable>>&,jule::Str);
inline jule::Bool _1e5054722_is_valid_model_for_ref(jule::Any);
inline _1e24777a2_Log _1e5054722_compiler_err(_1e3bad8dd_Token&,jule::Bool,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1e5054722_imp_is_lookupable(jule::Ptr<_1e4ee54e8_ImportInfo>&,jule::Str);
inline jule::Slice<jule::Ptr<_1e50b0492_Var>> _1e5054722_build_ret_vars(jule::Ptr<_1e4b15a20_FnIns>&);
inline jule::Slice<jule::Ptr<_1e50b0492_Var>> _1e5054722_build_param_vars(jule::Ptr<_1e4b15a20_FnIns>&);
inline jule::Slice<jule::Ptr<_1e6420856_TypeAlias>> _1e5054722_build_generic_type_aliases(jule::Ptr<_1e4b15a20_FnIns>&);
inline jule::Ptr<_1e5291035_SymbolTable> _1e5054722_find_file(jule::Slice<jule::Ptr<_1e5291035_SymbolTable>>&,jule::Ptr<_1e3beedd5_File>&);
inline std::tuple<jule::Bool,jule::Bool> _1e5054722_conditional_has_ret(jule::Ptr<_1e4d6ee22_Conditional>);
inline jule::Bool _1e5054722_match_has_ret(jule::Ptr<_1e4d6ee22_Match>);
inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _1e5054722___has_ret(jule::Ptr<_1e4d6ee22_Scope>);
inline jule::Bool _1e5054722_has_ret(jule::Ptr<_1e4d6ee22_Scope>);
inline void _1e5054722_push_suggestion(_1e24777a2_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1e6420856_TypeKind>> _1e522c29b_get_fn_result_types(jule::Ptr<_1e4b15a20_FnIns>&);
inline jule::Bool _1e522c29b_trait_has_reference_receiver(jule::Ptr<_1e4d61232_Trait>&);
inline jule::Bool _1e522c29b_float_assignable(jule::Str,jule::Ptr<_1e50ac4b1_Data>&);
inline jule::Bool _1e522c29b_sig_assignable(jule::Str,jule::Ptr<_1e50ac4b1_Data>&);
inline jule::Bool _1e522c29b_unsig_assignable(jule::Str,jule::Ptr<_1e50ac4b1_Data>&);
inline jule::Bool _1e522c29b_int_assignable(jule::Str,jule::Ptr<_1e50ac4b1_Data>&);
inline jule::Any _1e50ac4b1_find_builtins_import(jule::Str,jule::Ptr<_1e4ee54e8_ImportInfo>);
inline void _1e50ac4b1_make_struct_lit_alloc(jule::Ptr<_1e50ac4b1_Data>&,jule::Ptr<_1e4d70a6b_StructLitExprModel>&);
inline jule::Any _1e50ac4b1_find_builtins_sema(jule::Str,jule::Ptr<_1e5054722_Sema>);
inline jule::Bool _1e50ac4b1_is_ok_for_shifting(jule::Ptr<_1e50ac4b1_Data>&);
inline jule::Bool _1e50ac4b1_is_instanced_struct(jule::Ptr<_1e398ee72_StructIns>);
inline jule::Bool _1e50ac4b1_is_ptr_arithmetic_compatible_int(jule::Ptr<_1e50ac4b1_Data>&);
inline void _1e50ac4b1_normalize_bitsize(jule::Ptr<_1e50ac4b1_Data>&);
inline void _1e50ac4b1_normalize_type(jule::Ptr<_1e50ac4b1_Data>&);
inline void _1e50ac4b1_apply_cast_kind_model(jule::Ptr<_1e50ac4b1_Data>&);
inline void _1e50ac4b1_apply_cast_kind(jule::Ptr<_1e50ac4b1_Data>&);
inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_build_void_data(void);
inline jule::Str _1e50ac4b1_kind_by_bitsize(jule::Any);
inline jule::Str _1e50ac4b1_check_data_for_integer_indexing(jule::Ptr<_1e50ac4b1_Data>&);
inline jule::Bool _1e6420856_can_get_ptr(jule::Ptr<_1e50ac4b1_Data>&);
inline jule::Bool _1e6420856_is_valid_for_sptr_type(jule::Ptr<_1e6420856_TypeKind>&);
inline jule::Bool _1e6420856_is_valid_for_ref(jule::Ptr<_1e6420856_TypeKind>&);
inline jule::Bool _1e6420856_is_builtin_str_convertable(jule::Ptr<_1e6420856_TypeKind>&);
inline jule::Str _1e6420856_build_link_path_by_tokens(jule::Slice<_1e3bad8dd_Token>&);
inline jule::Ptr<_1e6420856_Prim> _1e6420856_build_prim_type(jule::Str);
inline jule::Ptr<_1e398ee72_Struct> _1e6420856_get_struct_from_kind(jule::Ptr<_1e6420856_TypeKind>);
inline jule::Bool _1e6420856_is_prim(jule::Str);
inline std::tuple<jule::Ptr<_1e5291035_SymbolTable>,jule::Slice<_1e24777a2_Log>> _1c8aaab68_build_symbols(jule::Ptr<_1e38d45c0_Ast>&,jule::Trait<_1e4ee54e8_Importer>&,jule::Ptr<_1e4cc167b_SymbolBuilder>);
inline std::tuple<jule::Ptr<_1e4ee54e8_Package>,jule::Slice<_1e24777a2_Log>> _1c8aaab68___analyze_package(jule::Slice<jule::Ptr<_1e38d45c0_Ast>>&,jule::Trait<_1e4ee54e8_Importer>&,jule::Int&);
inline std::tuple<jule::Ptr<_1e4ee54e8_Package>,jule::Slice<_1e24777a2_Log>> _1c8aaab68_analyze_package(jule::Slice<jule::Ptr<_1e38d45c0_Ast>>,jule::Trait<_1e4ee54e8_Importer>,jule::Int);
inline void _1c8ac49ea_init(void);
inline jule::Ptr<_1e4b15a20_FnIns> _1c8ac49ea_find_builtin_fn(jule::Str);
inline jule::Ptr<_1e6420856_TypeAlias> _1c8ac49ea_find_builtin_type_alias(jule::Str);
inline jule::Ptr<_1e4d61232_Trait> _1c8ac49ea_find_builtin_trait(jule::Str);
inline jule::Any _1c8ac49ea_find_builtin_def(jule::Str);
inline jule::Any _1c8ac49ea_find_builtin_def_std_mem(jule::Str);
inline jule::Any _1c8ac49ea_find_builtin_def_std_jule_integrated(jule::Str);
inline jule::Any _1c8ac49ea_find_package_builtin_def(jule::Str,jule::Str);
inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_common_plain(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&);
inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_common(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&);
inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_common_mut(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&);
inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_out(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&);
inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_outln(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&);
inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_new(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&);
inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_panic(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&);
inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_make(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&);
inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_append(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&);
inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_copy(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&);
inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_recover(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&);
inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_clone(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&);
inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_std_mem_size_of(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&);
inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_std_mem_align_of(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&);
inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _1e354de71_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1e354de71_check_arch(jule::Str);
inline jule::Bool _1e354de71_is_pass_file_annotation(jule::Str);
inline void _1e36600a4_set_os_flags(void);
inline void _1e36600a4_set_arch_flags(void);
inline void _1e36600a4_init_flags(void);
inline void _1e36c2a1d_exit_err(jule::Str);
inline jule::Slice<jule::U8> _1e36c2a1d_read_buff(jule::Str);
inline _1e24777a2_Log _1e36c2a1d_flat_compiler_err(jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_1e4789980_DirEntry>>,jule::Str> _1e36c2a1d_read_package_dirents(jule::Str);
inline std::tuple<jule::Bool,jule::Slice<_1e24777a2_Log>> _1e36c2a1d_is_pass_build_directives(jule::Ptr<_1e38d45c0_Ast>&);
inline void _1e376ec74_push_passes(jule::Ptr<_1e4ee54e8_Package>&,jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1e376ec74_get_all_unique_passes(jule::Ptr<_1e4ee54e8_Package>&,jule::Slice<jule::Ptr<_1e4ee54e8_ImportInfo>>);
inline jule::Bool _1e249646e_is_exist(jule::Slice<jule::Any>,jule::Any);
inline jule::Bool _1e249646e_is_dead(jule::Any);
inline void _1e249646e_drop_ref(jule::Slice<jule::Any>&,jule::Int);
inline jule::Bool _1e249646e_is_all_references_are_dead(jule::Ptr<_1e4cc167b_ReferenceStack>);
inline jule::Bool _1e249646e_is_fn_dead(jule::Ptr<_1e4b15a20_FnIns>);
inline jule::Bool _1e249646e_is_var_dead(jule::Ptr<_1e50b0492_Var>);
inline jule::Bool _1e249646e_is_struct_dead(jule::Ptr<_1e398ee72_StructIns>);
inline jule::Bool _1e249646e_is_trait_dead(jule::Ptr<_1e4d61232_Trait>);
inline void _1e249646e_eliminate_dead_functions(jule::Slice<jule::Ptr<_1e4b15a20_Fn>>&);
inline void _1e249646e_eliminate_dead_globals(jule::Ptr<_1e4ee54e8_Package>&);
inline void _1e249646e_eliminate_dead_functions_package(jule::Ptr<_1e4ee54e8_Package>&);
inline void _1e249646e_catch_alive_init(jule::Ptr<_1e4ee54e8_Package>&);
inline void _1e249646e_eliminate_package(jule::Ptr<_1e4ee54e8_Package>&);
inline void _1e249646e_eliminate(jule::Ptr<_1e376ec74_IR>&);
inline void _1e39716e5_eliminate_dead_code_of_scope(jule::Ptr<_1e4d6ee22_Scope>);
inline jule::U64 _1c9110233_unix(void);
inline jule::U64 _1c9110233_unix_year_to_seconds(jule::Uint,jule::Bool&);
inline jule::U64 _1c9110233_unix_month_to_seconds(jule::Uint,jule::Bool);
inline jule::Bool _1e24a32e4_iter_expr_is_copy_optimizable(jule::Ptr<_1e50ac4b1_Data>&,jule::Ptr<_1e50b0492_Var>&);
inline jule::Str _1e24a32e4_gen_range_index_iter(jule::Ptr<_1e4d6ee22_RangeIter>&);
inline jule::Str _1e24a32e4_gen_range_hashmap_iter(jule::Ptr<_1e4d6ee22_RangeIter>&);
inline jule::Str _1e24a32e4_gen_if(jule::Ptr<_1e4d6ee22_If>);
inline jule::Str _1e24a32e4_gen_conditional(jule::Ptr<_1e4d6ee22_Conditional>);
inline jule::Str _1e24a32e4_gen_inf_iter(jule::Ptr<_1e4d6ee22_InfIter>);
inline jule::Str _1e24a32e4_gen_while_iter(jule::Ptr<_1e4d6ee22_WhileIter>);
inline jule::Str _1e24a32e4_gen_range_iter(jule::Ptr<_1e4d6ee22_RangeIter>);
inline jule::Str _1e24a32e4_gen_cont(jule::Ptr<_1e4d6ee22_ContSt>);
inline jule::Str _1e24a32e4_gen_label(jule::Ptr<_1e4d6ee22_Label>);
inline jule::Str _1e24a32e4_gen_goto(jule::Ptr<_1e4d6ee22_GotoSt>);
inline jule::Str _1e24a32e4_gen_postfix(jule::Ptr<_1e4d6ee22_Postfix>);
inline jule::Str _1e24a32e4_gen_div_by_zero_assign(jule::Ptr<_1e4d6ee22_Assign>);
inline jule::Str _1e24a32e4_gen_assign(jule::Ptr<_1e4d6ee22_Assign>);
inline jule::Str _1e24a32e4_gen_multi_assign(jule::Ptr<_1e4d6ee22_MultiAssign>);
inline jule::Str _1e24a32e4_gen_case(jule::Ptr<_1e4d6ee22_Match>,jule::Ptr<_1e4d6ee22_Case>);
inline jule::Str _1e24a32e4_gen_match(jule::Ptr<_1e4d6ee22_Match>);
inline jule::Str _1e24a32e4_gen_fall_st(jule::Ptr<_1e4d6ee22_FallSt>);
inline jule::Str _1e24a32e4_gen_break_st(jule::Ptr<_1e4d6ee22_BreakSt>);
inline jule::Str _1e24a32e4_gen_ret_vars(jule::Ptr<_1e4d6ee22_RetSt>);
inline jule::Str _1e24a32e4_gen_ret_expr_tuple(jule::Ptr<_1e4d6ee22_RetSt>);
inline jule::Str _1e24a32e4_gen_ret_expr(jule::Ptr<_1e4d6ee22_RetSt>);
inline jule::Str _1e24a32e4_gen_ret_st(jule::Ptr<_1e4d6ee22_RetSt>);
inline jule::Str _1e24a32e4_gen_ret_st_with_defaults(jule::Ptr<_1e6420856_TypeKind>);
inline jule::Str _1e24a32e4_gen_recover(jule::Ptr<_1e4d6ee22_Recover>);
inline jule::Str _1e24a32e4_gen_data_expr(jule::Ptr<_1e50ac4b1_Data>);
inline jule::Str _1e24a32e4_gen_scope_var(jule::Ptr<_1e50b0492_Var>);
inline jule::Str _1e24a32e4_gen_st(jule::Any);
inline jule::Str _1e24a32e4_gen_scope(jule::Ptr<_1e4d6ee22_Scope>);
inline jule::Str _1e24a32e4_gen_fn_scope(jule::Ptr<_1e4b15a20_FnIns>);
inline jule::Str _1e24a32e4_gen_method_scope(jule::Ptr<_1e4b15a20_FnIns>);
inline jule::Str _1e341b080_concat_all_parts(jule::Slice<_1e3bad8dd_Token>);
inline jule::Str _1e341b080_get_accessor(jule::Ptr<_1e6420856_TypeKind>&);
inline jule::Str _1e341b080_decompose_common_esq(jule::U8);
inline jule::Str _1e341b080_sbtoa(jule::U8);
inline jule::Str _1e341b080_get_str_model(jule::Ptr<_1c8b9b83b_Const>&);
inline jule::Str _1e341b080_get_bool_model(jule::Ptr<_1c8b9b83b_Const>&);
inline jule::Str _1e341b080_get_nil_model(void);
inline jule::Str _1e341b080_gen_float_special_cases(jule::F64&);
inline jule::Str _1e341b080_ftoa(jule::F64,jule::Int);
inline jule::Str _1e341b080_get_f32_model(jule::Ptr<_1c8b9b83b_Const>&);
inline jule::Str _1e341b080_get_f64_model(jule::Ptr<_1c8b9b83b_Const>&);
inline jule::Str _1e341b080_get_float_model(jule::Ptr<_1e50ac4b1_Data>&);
inline jule::Str _1e341b080_i64toa(jule::I64);
inline jule::Str _1e341b080_get_i64_model(jule::Ptr<_1c8b9b83b_Const>&);
inline jule::Str _1e341b080_u64toa(jule::U64);
inline jule::Str _1e341b080_get_u64_model(jule::Ptr<_1c8b9b83b_Const>);
inline jule::Str _1e341b080_gen_const_expr(jule::Ptr<_1e50ac4b1_Data>);
inline jule::Str _1e341b080_gen_const_expr_model(jule::Ptr<_1c8b9b83b_Const>);
inline jule::Str _1e341b080_gen_div_by_zero_binop_expr_model(jule::Str,jule::Any,jule::Any);
inline jule::Str _1e341b080_gen_binop_expr_model(jule::Ptr<_1e4d70a6b_BinopExprModel>);
inline jule::Str _1e341b080_gen_var_expr_model(jule::Ptr<_1e50b0492_Var>);
inline jule::Str _1e341b080_gen_struct_expr_model(jule::Ptr<_1e398ee72_Struct>);
inline jule::Str _1e341b080_gen_struct_ins_expr_model(jule::Ptr<_1e398ee72_StructIns>);
inline jule::Str _1e341b080_gen_unary_expr_model(jule::Ptr<_1e4d70a6b_UnaryExprModel>);
inline jule::Str _1e341b080_gen_cpp_struct_lit_expr_model(jule::Ptr<_1e4d70a6b_StructLitExprModel>);
inline jule::Str _1e341b080_gen_struct_lit_expr_model(jule::Ptr<_1e4d70a6b_StructLitExprModel>);
inline jule::Str _1e341b080_gen_alloc_struct_lit_expr_model(jule::Ptr<_1e4d70a6b_AllocStructLitExprModel>);
inline jule::Str _1e341b080_gen_casting_expr_model(jule::Ptr<_1e4d70a6b_CastingExprModel>);
inline jule::Str _1e341b080_gen_arg_expr_models(jule::Slice<jule::Any>);
inline jule::Str _1e341b080_gen_expr_model_for_call(jule::Any);
inline jule::Str _1e341b080_gen_fn_call_expr_model(jule::Ptr<_1e4d70a6b_FnCallExprModel>);
inline jule::Str _1e341b080_gen_slice_expr_model(jule::Ptr<_1e4d70a6b_SliceExprModel>);
inline jule::Str _1e341b080_gen_indexing_expr_model(jule::Ptr<_1e4d70a6b_IndexigExprModel>);
inline jule::Str _1e341b080_gen_anon_fn_expr_model(jule::Ptr<_1e4d70a6b_AnonFnExprModel>);
inline jule::Str _1e341b080_gen_map_expr_model(jule::Ptr<_1e4d70a6b_MapExprModel>);
inline jule::Str _1e341b080_gen_slicing_expr_model(jule::Ptr<_1e4d70a6b_SlicingExprModel>);
inline jule::Str _1e341b080_gen_trait_sub_ident_expr_model(jule::Ptr<_1e4d70a6b_TraitSubIdentExprModel>);
inline jule::Str _1e341b080_gen_struct_sub_ident_expr_model(jule::Ptr<_1e4d70a6b_StructSubIdentExprModel>);
inline jule::Str _1e341b080_gen_common_ident_expr_model(jule::Ptr<_1e4d70a6b_CommonIdentExprModel>);
inline jule::Str _1e341b080_gen_common_sub_ident_expr_model(jule::Ptr<_1e4d70a6b_CommonSubIdentExprModel>);
inline jule::Str _1e341b080_gen_array_expr_model(jule::Ptr<_1e4d70a6b_ArrayExprModel>);
inline jule::Str _1e341b080_gen_fn_ins_expr_model_common(jule::Ptr<_1e4b15a20_FnIns>);
inline jule::Str _1e341b080_gen_fn_ins_expr_model(jule::Ptr<_1e4b15a20_FnIns>);
inline jule::Str _1e341b080_gen_tuple_expr_model(jule::Ptr<_1e4d70a6b_TupleExprModel>);
inline jule::Str _1e341b080_gen_builtin_new_call_expr_model(jule::Ptr<_1e4d70a6b_BuiltinNewCallExprModel>);
inline jule::Str _1e341b080_gen_builtin_out_call_expr_model(jule::Ptr<_1e4d70a6b_BuiltinOutCallExprModel>);
inline jule::Str _1e341b080_gen_builtin_outln_call_expr_model(jule::Ptr<_1e4d70a6b_BuiltinOutlnCallExprModel>);
inline jule::Str _1e341b080_gen_builtin_real_call_expr_model(jule::Ptr<_1e4d70a6b_BuiltinRealCallExprModel>);
inline jule::Str _1e341b080_gen_builtin_drop_call_expr_model(jule::Ptr<_1e4d70a6b_BuiltinDropCallExprModel>);
inline jule::Str _1e341b080_gen_builtin_panic_call_expr_model(jule::Ptr<_1e4d70a6b_BuiltinPanicCallExprModel>);
inline jule::Str _1e341b080_gen_builtin_make_call_expr_model(jule::Ptr<_1e4d70a6b_BuiltinMakeCallExprModel>);
inline jule::Str _1e341b080_gen_builtin_append_call_expr_model_assign_opt(jule::Bool,jule::Str&,jule::Ptr<_1e6420856_TypeKind>&,jule::Ptr<_1e4d70a6b_SliceExprModel>&,jule::Ptr<_1e4d70a6b_BuiltinAppendCallExprModel>&);
inline std::tuple<jule::Str,jule::Bool> _1e341b080_gen_builtin_append_call_expr_model_assign(jule::Any,jule::Ptr<_1e4d70a6b_BuiltinAppendCallExprModel>);
inline jule::Str _1e341b080_gen_builtin_append_call_expr_model(jule::Ptr<_1e4d70a6b_BuiltinAppendCallExprModel>);
inline jule::Str _1e341b080_gen_builtin_clone_call_expr_model(jule::Ptr<_1e4d70a6b_BuiltinCloneCallExprModel>);
inline jule::Str _1e341b080_gen_sizeof_expr_model(jule::Ptr<_1e4d70a6b_SizeofExprModel>);
inline jule::Str _1e341b080_gen_alignof_expr_model(jule::Ptr<_1e4d70a6b_AlignofExprModel>);
inline jule::Str _1e341b080_gen_rune_expr_model(jule::Ptr<_1e4d70a6b_RuneExprModel>);
inline jule::Str _1e341b080_gen_builtin_error_trait_sub_ident_expr_model(jule::Ptr<_1e4d70a6b_BuiltinErrorTraitSubIdentExprModel>);
inline jule::Str _1e341b080_gen_struct_static_ident_expr_model(jule::Ptr<_1e4d70a6b_StructStaticIdentExprModel>);
inline jule::Str _1e341b080_gen_integrated_to_str_expr_model(jule::Ptr<_1e4d70a6b_IntegratedToStrExprModel>);
inline jule::Str _1e341b080_gen_ternary_expr_model(jule::Ptr<_1e4d70a6b_TernaryExprModel>);
inline jule::Str _1e341b080_gen_expr_model(jule::Any);
inline jule::Str _1e341b080_gen_expr(jule::Any);
inline jule::Str _1e341b080_gen_val(jule::Ptr<_1e50ac4b1_Value>);
inline jule::Str _1e341b080_get_init_expr(jule::Ptr<_1e6420856_TypeKind>);
inline jule::Str _1c8e93319_get_derive_fn_decl_clone(jule::Ptr<_1e398ee72_Struct>&);
inline jule::Str _1c8e93319_get_derive_fn_def_clone(jule::Ptr<_1e398ee72_Struct>&);
inline jule::Str _1e4da121c_as_ident(jule::Str);
inline jule::Str _1e4da121c_as_jt(jule::Str);
inline jule::Str _1e4da121c_get_addr_as_ident(jule::Uintptr);
inline jule::Str _1e4da121c_as_out_ident(jule::Str,jule::Uintptr);
inline jule::Str _1e4da121c_as_local_ident(jule::Int,jule::Int,jule::Str);
inline jule::Str _1e4da121c_fn_out_ident(jule::Ptr<_1e4b15a20_Fn>&);
inline jule::Str _1e4da121c_fn_ins_out_ident(jule::Ptr<_1e4b15a20_FnIns>&);
inline jule::Str _1e4da121c_trait_out_ident(jule::Ptr<_1e4d61232_Trait>);
inline jule::Str _1e4da121c_param_out_ident(jule::Ptr<_1e4b15a20_Param>&);
inline jule::Str _1e4da121c_struct_out_ident(jule::Ptr<_1e398ee72_Struct>&);
inline jule::Str _1e4da121c_struct_ins_out_ident(jule::Ptr<_1e398ee72_StructIns>&);
inline jule::Str _1e4da121c_field_out_ident(jule::Ptr<_1e398ee72_Field>&);
inline jule::Str _1e4da121c_var_out_ident(jule::Ptr<_1e50b0492_Var>);
inline jule::Str _1e4da121c_iter_begin_label_ident(jule::Uintptr);
inline jule::Str _1e4da121c_iter_end_label_ident(jule::Uintptr);
inline jule::Str _1e4da121c_iter_next_label_ident(jule::Uintptr);
inline jule::Str _1e4da121c_label_ident(jule::Str);
inline jule::Str _1e4da121c_match_end_label_ident(jule::Uintptr);
inline jule::Str _1e4da121c_case_begin_label_ident(jule::Uintptr);
inline jule::Str _1e4da121c_case_end_label_ident(jule::Uintptr);
inline jule::Ptr<_1e38d4ec7_Directive> _1c8ec69ac_find_directive(jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>&,jule::Str);
inline jule::Bool _1c8ec69ac_has_directive(jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>&,jule::Str);
inline jule::Str _1c8ec69ac_gen_prim_kind(jule::Ptr<_1e6420856_Prim>);
inline jule::Str _1c8ec69ac_gen_tuple_kind(jule::Ptr<_1e6420856_Tuple>);
inline jule::Str _1c8ec69ac_as_sptr_kind(jule::Str);
inline jule::Str _1c8ec69ac_gen_sptr_kind(jule::Ptr<_1e6420856_Sptr>);
inline jule::Str _1c8ec69ac_gen_ptr_kind(jule::Ptr<_1e6420856_Ptr>);
inline jule::Str _1c8ec69ac_gen_enum_kind(jule::Ptr<_1e4d62387_Enum>);
inline jule::Str _1c8ec69ac_as_slice_kind(jule::Ptr<_1e6420856_TypeKind>);
inline jule::Str _1c8ec69ac_gen_slice_kind(jule::Ptr<_1e6420856_Slc>);
inline jule::Str _1c8ec69ac_gen_map_kind(jule::Ptr<_1e6420856_Map>);
inline jule::Str _1c8ec69ac_gen_trait_kind_from_ident(jule::Str);
inline jule::Str _1c8ec69ac_gen_trait_kind(jule::Ptr<_1e4d61232_Trait>);
inline jule::Str _1c8ec69ac_gen_struct_kind(jule::Ptr<_1e398ee72_Struct>);
inline jule::Str _1c8ec69ac_gen_struct_kind_ins(jule::Ptr<_1e398ee72_StructIns>);
inline jule::Str _1c8ec69ac_gen_array_kind(jule::Ptr<_1e6420856_Arr>);
inline jule::Str _1c8ec69ac_gen_fn_anon_decl(jule::Ptr<_1e4b15a20_FnIns>);
inline jule::Str _1c8ec69ac_gen_fn_kind(jule::Ptr<_1e4b15a20_FnIns>);
inline jule::Str _1c8ec69ac_gen_type_kind(jule::Ptr<_1e6420856_TypeKind>);
inline void _1c9006426_add_indent(void);
inline void _1c9006426_done_indent(void);
inline jule::Str _1c9006426_indent(void);
inline jule::Bool _1c9006426_is_cpp_header_file(jule::Str);
inline jule::Str _1c9006426_gen_links(jule::Ptr<_1e376ec74_IR>&);
inline jule::Str _1c9006426_gen_fn_result(jule::Ptr<_1e4b15a20_Fn>&);
inline jule::Str _1c9006426_gen_fn_ins_result(jule::Ptr<_1e4b15a20_FnIns>&);
inline jule::Str _1c9006426_gen_param_prototype(jule::Ptr<_1e4b15a20_Param>&);
inline jule::Str _1c9006426_gen_param_ins(jule::Ptr<_1e4b15a20_ParamIns>&);
inline jule::Str _1c9006426_gen_param_ins_prototype(jule::Ptr<_1e4b15a20_ParamIns>&);
inline jule::Str _1c9006426_gen_param(jule::Ptr<_1e4b15a20_Param>&);
inline jule::Str _1c9006426_gen_params(jule::Slice<jule::Ptr<_1e4b15a20_Param>>&);
inline jule::Str _1c9006426_gen_params_ins(jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>&);
inline jule::Str _1c9006426_gen_params_prototypes(jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>&);
inline jule::Str _1c9006426_gen_trait(jule::Ptr<_1e4d61232_Trait>&);
inline jule::Str _1c9006426_gen_traits_tbl(jule::Ptr<_1e5291035_SymbolTable>&);
inline jule::Str _1c9006426_gen_traits_pkg(jule::Ptr<_1e4ee54e8_Package>&);
inline jule::Str _1c9006426_gen_traits(jule::Ptr<_1e376ec74_IR>&);
inline jule::Str _1c9006426_gen_trait_prototype(jule::Ptr<_1e4d61232_Trait>&);
inline jule::Str _1c9006426_gen_trait_prototypes(jule::Ptr<_1e4ee54e8_Package>&);
inline jule::Str _1c9006426_gen_struct_plain_prototype(jule::Ptr<_1e398ee72_Struct>&);
inline jule::Str _1c9006426_gen_struct_plain_prototypes(jule::Slice<jule::Ptr<_1e398ee72_Struct>>&);
inline jule::Str _1c9006426_gen_struct_traits(jule::Ptr<_1e398ee72_Struct>&);
inline jule::Str _1c9006426_gen_field_decl(jule::Ptr<_1e398ee72_FieldIns>&);
inline jule::Str _1c9006426_gen_struct_self_field_type_kind(jule::Ptr<_1e398ee72_StructIns>&);
inline jule::Str _1c9006426_gen_struct_self_field(jule::Ptr<_1e398ee72_StructIns>&);
inline jule::Str _1c9006426_gen_struct_self_field_init_st(jule::Ptr<_1e398ee72_StructIns>&);
inline jule::Str _1c9006426_gen_struct_constructor(jule::Ptr<_1e398ee72_StructIns>&);
inline jule::Str _1c9006426_gen_struct_destructor(jule::Ptr<_1e398ee72_StructIns>&);
inline jule::Str _1c9006426_gen_struct_operators(jule::Ptr<_1e398ee72_StructIns>&);
inline jule::Str _1c9006426_gen_struct_derive_defs_prototypes(jule::Ptr<_1e398ee72_StructIns>&);
inline jule::Str _1c9006426_gen_struct_ins_prototype(jule::Ptr<_1e398ee72_StructIns>&);
inline jule::Str _1c9006426_gen_struct_prototype(jule::Ptr<_1e398ee72_Struct>&);
inline jule::Str _1c9006426_gen_struct_prototypes(jule::Slice<jule::Ptr<_1e398ee72_Struct>>&);
inline jule::Str _1c9006426_gen_fn_decl_head(jule::Ptr<_1e4b15a20_FnIns>&,jule::Bool);
inline jule::Str _1c9006426_gen_fn_prototype(jule::Ptr<_1e4b15a20_Fn>&,jule::Bool);
inline jule::Str _1c9006426_gen_fn_prototypes(jule::Ptr<_1e4ee54e8_Package>&);
inline jule::Str _1c9006426_gen_prototypes(jule::Ptr<_1e376ec74_IR>&);
inline jule::Str _1c9006426_gen_var_init_expr(jule::Ptr<_1e50b0492_Var>&,jule::Str);
inline jule::Str _1c9006426_gen_var(jule::Ptr<_1e50b0492_Var>);
inline jule::Str _1c9006426_gen_globals(jule::Slice<jule::Ptr<_1e50b0492_Var>>&);
inline jule::Str _1c9006426_gen_fn(jule::Ptr<_1e4b15a20_Fn>&);
inline jule::Str _1c9006426_gen_pkg_fns(jule::Ptr<_1e4ee54e8_Package>&);
inline jule::Str _1c9006426_gen_struct_method_defs(jule::Ptr<_1e398ee72_StructIns>&);
inline jule::Str _1c9006426_gen_struct_ostream(jule::Ptr<_1e398ee72_StructIns>&);
inline jule::Str _1c9006426_gen_struct_derive_defs(jule::Ptr<_1e398ee72_StructIns>&);
inline jule::Str _1c9006426_gen_struct_ins(jule::Ptr<_1e398ee72_StructIns>&);
inline jule::Str _1c9006426_gen_struct(jule::Ptr<_1e398ee72_Struct>&);
inline jule::Str _1c9006426_gen_structs(jule::Slice<jule::Ptr<_1e398ee72_Struct>>&);
inline jule::Str _1c9006426_gen_fns(jule::Ptr<_1e376ec74_IR>&);
inline void _1c9006426_push_init(jule::Ptr<_1e4ee54e8_Package>&,jule::Str&);
inline jule::Str _1c9006426_gen_init_caller(jule::Ptr<_1e376ec74_IR>&);
inline void _1c9006426_append_standard(jule::Str&,jule::Str,jule::Str);
inline jule::Str _1c9006426_gen(jule::Ptr<_1e376ec74_IR>&);
inline jule::Str _1e2408d0a_str_repeat(jule::Str,jule::Int);
inline void _1e2408d0a_print_error_message(jule::Str);
inline void _1e2408d0a_help(jule::Slice<jule::Str>&);
inline void _1e2408d0a_version(jule::Slice<jule::Str>&);
inline void _1e2408d0a_tool_distos(void);
inline void _1e2408d0a_tool_distarch(void);
inline void _1e2408d0a_tool(jule::Slice<jule::Str>&);
inline void _1e2408d0a_julenv(void);
inline jule::Bool _1e2408d0a_process_command(jule::Slice<jule::Str>&);
inline void _1e2408d0a_exit_err(jule::Str);
void entry_point(void);
inline void _1e240a1a2___init_common(void);
inline void _1e243edc9_init(void);
inline jule::Int _1e2440b66_system(jule::Str);
inline void _1e2440b66_write_output(jule::Str,jule::Str);
inline void _1e2440b66_clear_objects(void);
inline void _1e2440b66_compile_ir(jule::Str,jule::Str);
inline void _1e2440b66_do_spell(jule::Str,jule::Str,jule::Str);
inline jule::Bool _1e2440b66_is_cpp_source_file(jule::Str);
inline std::tuple<jule::Str,jule::Str> _1e2440b66_gen_compile_cmd(jule::Str,jule::Ptr<_1e376ec74_IR>&);
inline jule::Str _1e2440b66_get_compile_path(void);
inline void _1e2440b66_apply_target_independent_optimizations(jule::Ptr<_1e376ec74_IR>&);
inline void _1e2440b66_check_compiler_flag(void);
inline void _1e2440b66_check_target_arch(jule::Str);
inline void _1e2440b66_check_target_os(jule::Str);
inline void _1e2440b66_check_target_flag(jule::Str&);
inline void _1e2440b66_check_opt_flag(jule::Str&);
inline jule::Slice<jule::Str> _1e2440b66_check_flags(jule::Slice<jule::Str>&);
inline void _1e2440b66_setup_sema_flags(jule::Int&);
inline jule::Ptr<_1e376ec74_IR> _1e2440b66_build_ir(jule::Slice<jule::Str>&);
inline void _1e2440b66_compile_command(jule::Slice<jule::Str>&);


static jule::Str _1e2440b66_COMPILER = jule::Str();
static jule::Str _1e2440b66_COMPILER_PATH = jule::Str();
static jule::Str _1e2440b66_OUT_DIR = jule::Str("dist", 4);
static jule::Str _1e2440b66_OUT_NAME = jule::Str("ir.cpp", 6);
static jule::Str _1e2440b66_OUT = jule::Str();
static jule::Str _1e2440b66_CPP_STD = jule::Str("c++17", 5);
static jule::Bool _1e2440b66_SHADOWING = false;
static jule::Bool _1e2440b66_TRANSPILATION = false;
static jule::Array<jule::Str,4> _1e243c019_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
static jule::Array<jule::Str,3> _1e243c019_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
static jule::Array<jule::Str,1> _1e243c019_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
static jule::Array<jule::Str,3> _1e24c3798_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
static jule::Array<jule::Str,3> _1e24c3798_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
static jule::Str _1e24c38db_PATH_STDLIB = jule::Str();
static jule::Str _1e24c38db_PATH_EXEC = jule::Str();
static jule::Str _1e24c38db_PATH_WD = jule::Str();
static jule::Str _1e24c38db_PATH_API = jule::Str();
static jule::Array<jule::U8,32> _1e3ac34a1_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
static jule::Array<jule::U8,64> _1e3ac34a1_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
static _1e2495d64_FloatInfo _1e2495d64_F32_INFO = _1e2495d64_FloatInfo(23LLU,8LLU,-127LL);
static _1e2495d64_FloatInfo _1e2495d64_F64_INFO = _1e2495d64_FloatInfo(52LLU,11LLU,-1023LL);
static jule::Array<jule::Array<jule::U64,2>,696> _1e32cb946_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
static jule::Slice<jule::Int> _1e3307ee4_POWTAB = jule::Slice<jule::Int>({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
static jule::Slice<jule::F64> _1e3307ee4_F64_POW10 = jule::Slice<jule::F64>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
static jule::Slice<jule::F32> _1e3307ee4_F32_POW10 = jule::Slice<jule::F32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
static jule::Array<jule::U64,20> _1e3417147_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
static jule::Slice<_1e34a359b_LeftCheat> _1e34a359b_LEFTCHEATS = jule::Slice<_1e34a359b_LeftCheat>({_1e34a359b_LeftCheat(0LL,jule::Str()),_1e34a359b_LeftCheat(1LL,jule::Str("5", 1)),_1e34a359b_LeftCheat(1LL,jule::Str("25", 2)),_1e34a359b_LeftCheat(1LL,jule::Str("125", 3)),_1e34a359b_LeftCheat(2LL,jule::Str("625", 3)),_1e34a359b_LeftCheat(2LL,jule::Str("3125", 4)),_1e34a359b_LeftCheat(2LL,jule::Str("15625", 5)),_1e34a359b_LeftCheat(3LL,jule::Str("78125", 5)),_1e34a359b_LeftCheat(3LL,jule::Str("390625", 6)),_1e34a359b_LeftCheat(3LL,jule::Str("1953125", 7)),_1e34a359b_LeftCheat(4LL,jule::Str("9765625", 7)),_1e34a359b_LeftCheat(4LL,jule::Str("48828125", 8)),_1e34a359b_LeftCheat(4LL,jule::Str("244140625", 9)),_1e34a359b_LeftCheat(4LL,jule::Str("1220703125", 10)),_1e34a359b_LeftCheat(5LL,jule::Str("6103515625", 10)),_1e34a359b_LeftCheat(5LL,jule::Str("30517578125", 11)),_1e34a359b_LeftCheat(5LL,jule::Str("152587890625", 12)),_1e34a359b_LeftCheat(6LL,jule::Str("762939453125", 12)),_1e34a359b_LeftCheat(6LL,jule::Str("3814697265625", 13)),_1e34a359b_LeftCheat(6LL,jule::Str("19073486328125", 14)),_1e34a359b_LeftCheat(7LL,jule::Str("95367431640625", 14)),_1e34a359b_LeftCheat(7LL,jule::Str("476837158203125", 15)),_1e34a359b_LeftCheat(7LL,jule::Str("2384185791015625", 16)),_1e34a359b_LeftCheat(7LL,jule::Str("11920928955078125", 17)),_1e34a359b_LeftCheat(8LL,jule::Str("59604644775390625", 17)),_1e34a359b_LeftCheat(8LL,jule::Str("298023223876953125", 18)),_1e34a359b_LeftCheat(8LL,jule::Str("1490116119384765625", 19)),_1e34a359b_LeftCheat(9LL,jule::Str("7450580596923828125", 19)),_1e34a359b_LeftCheat(9LL,jule::Str("37252902984619140625", 20)),_1e34a359b_LeftCheat(9LL,jule::Str("186264514923095703125", 21)),_1e34a359b_LeftCheat(10LL,jule::Str("931322574615478515625", 21)),_1e34a359b_LeftCheat(10LL,jule::Str("4656612873077392578125", 22)),_1e34a359b_LeftCheat(10LL,jule::Str("23283064365386962890625", 23)),_1e34a359b_LeftCheat(10LL,jule::Str("116415321826934814453125", 24)),_1e34a359b_LeftCheat(11LL,jule::Str("582076609134674072265625", 24)),_1e34a359b_LeftCheat(11LL,jule::Str("2910383045673370361328125", 25)),_1e34a359b_LeftCheat(11LL,jule::Str("14551915228366851806640625", 26)),_1e34a359b_LeftCheat(12LL,jule::Str("72759576141834259033203125", 26)),_1e34a359b_LeftCheat(12LL,jule::Str("363797880709171295166015625", 27)),_1e34a359b_LeftCheat(12LL,jule::Str("1818989403545856475830078125", 28)),_1e34a359b_LeftCheat(13LL,jule::Str("9094947017729282379150390625", 28)),_1e34a359b_LeftCheat(13LL,jule::Str("45474735088646411895751953125", 29)),_1e34a359b_LeftCheat(13LL,jule::Str("227373675443232059478759765625", 30)),_1e34a359b_LeftCheat(13LL,jule::Str("1136868377216160297393798828125", 31)),_1e34a359b_LeftCheat(14LL,jule::Str("5684341886080801486968994140625", 31)),_1e34a359b_LeftCheat(14LL,jule::Str("28421709430404007434844970703125", 32)),_1e34a359b_LeftCheat(14LL,jule::Str("142108547152020037174224853515625", 33)),_1e34a359b_LeftCheat(15LL,jule::Str("710542735760100185871124267578125", 33)),_1e34a359b_LeftCheat(15LL,jule::Str("3552713678800500929355621337890625", 34)),_1e34a359b_LeftCheat(15LL,jule::Str("17763568394002504646778106689453125", 35)),_1e34a359b_LeftCheat(16LL,jule::Str("88817841970012523233890533447265625", 35)),_1e34a359b_LeftCheat(16LL,jule::Str("444089209850062616169452667236328125", 36)),_1e34a359b_LeftCheat(16LL,jule::Str("2220446049250313080847263336181640625", 37)),_1e34a359b_LeftCheat(16LL,jule::Str("11102230246251565404236316680908203125", 38)),_1e34a359b_LeftCheat(17LL,jule::Str("55511151231257827021181583404541015625", 38)),_1e34a359b_LeftCheat(17LL,jule::Str("277555756156289135105907917022705078125", 39)),_1e34a359b_LeftCheat(17LL,jule::Str("1387778780781445675529539585113525390625", 40)),_1e34a359b_LeftCheat(18LL,jule::Str("6938893903907228377647697925567626953125", 40)),_1e34a359b_LeftCheat(18LL,jule::Str("34694469519536141888238489627838134765625", 41)),_1e34a359b_LeftCheat(18LL,jule::Str("173472347597680709441192448139190673828125", 42)),_1e34a359b_LeftCheat(19LL,jule::Str("867361737988403547205962240695953369140625", 42))});
static jule::Bool _1e2496a24_OPT_COPY = false;
static jule::Bool _1e2496a24_OPT_DEADCODE = false;
static jule::Bool _1e2496a24_OPT_APPEND = false;
static jule::Bool _1e2496a24_OPT_MATH = false;
static jule::Bool _1e2496a24_OPT_ACCESS = false;
static jule::Bool _1e2496a24_OPT_INLINE = false;
static jule::Bool _1e2496a24_OPT_PTR = false;
static jule::Ptr<_1e3cd67d5_RangeTable> _1e3ccedc7__L = jule::new_struct<_1e3cd67d5_RangeTable>(new( std::nothrow ) _1e3cd67d5_RangeTable(jule::Slice<_1e3cd67d5_Range16>({_1e3cd67d5_Range16(65LLU,90LLU,1LLU),_1e3cd67d5_Range16(97LLU,122LLU,1LLU),_1e3cd67d5_Range16(170LLU,181LLU,11LLU),_1e3cd67d5_Range16(186LLU,192LLU,6LLU),_1e3cd67d5_Range16(193LLU,214LLU,1LLU),_1e3cd67d5_Range16(216LLU,246LLU,1LLU),_1e3cd67d5_Range16(248LLU,705LLU,1LLU),_1e3cd67d5_Range16(710LLU,721LLU,1LLU),_1e3cd67d5_Range16(736LLU,740LLU,1LLU),_1e3cd67d5_Range16(748LLU,750LLU,2LLU),_1e3cd67d5_Range16(880LLU,884LLU,1LLU),_1e3cd67d5_Range16(886LLU,887LLU,1LLU),_1e3cd67d5_Range16(890LLU,893LLU,1LLU),_1e3cd67d5_Range16(895LLU,902LLU,7LLU),_1e3cd67d5_Range16(904LLU,906LLU,1LLU),_1e3cd67d5_Range16(908LLU,910LLU,2LLU),_1e3cd67d5_Range16(911LLU,929LLU,1LLU),_1e3cd67d5_Range16(931LLU,1013LLU,1LLU),_1e3cd67d5_Range16(1015LLU,1153LLU,1LLU),_1e3cd67d5_Range16(1162LLU,1327LLU,1LLU),_1e3cd67d5_Range16(1329LLU,1366LLU,1LLU),_1e3cd67d5_Range16(1369LLU,1376LLU,7LLU),_1e3cd67d5_Range16(1377LLU,1416LLU,1LLU),_1e3cd67d5_Range16(1488LLU,1514LLU,1LLU),_1e3cd67d5_Range16(1519LLU,1522LLU,1LLU),_1e3cd67d5_Range16(1568LLU,1610LLU,1LLU),_1e3cd67d5_Range16(1646LLU,1647LLU,1LLU),_1e3cd67d5_Range16(1649LLU,1747LLU,1LLU),_1e3cd67d5_Range16(1749LLU,1765LLU,16LLU),_1e3cd67d5_Range16(1766LLU,1774LLU,8LLU),_1e3cd67d5_Range16(1775LLU,1786LLU,11LLU),_1e3cd67d5_Range16(1787LLU,1788LLU,1LLU),_1e3cd67d5_Range16(1791LLU,1808LLU,17LLU),_1e3cd67d5_Range16(1810LLU,1839LLU,1LLU),_1e3cd67d5_Range16(1869LLU,1957LLU,1LLU),_1e3cd67d5_Range16(1969LLU,1994LLU,25LLU),_1e3cd67d5_Range16(1995LLU,2026LLU,1LLU),_1e3cd67d5_Range16(2036LLU,2037LLU,1LLU),_1e3cd67d5_Range16(2042LLU,2048LLU,6LLU),_1e3cd67d5_Range16(2049LLU,2069LLU,1LLU),_1e3cd67d5_Range16(2074LLU,2084LLU,10LLU),_1e3cd67d5_Range16(2088LLU,2112LLU,24LLU),_1e3cd67d5_Range16(2113LLU,2136LLU,1LLU),_1e3cd67d5_Range16(2144LLU,2154LLU,1LLU),_1e3cd67d5_Range16(2160LLU,2183LLU,1LLU),_1e3cd67d5_Range16(2185LLU,2190LLU,1LLU),_1e3cd67d5_Range16(2208LLU,2249LLU,1LLU),_1e3cd67d5_Range16(2308LLU,2361LLU,1LLU),_1e3cd67d5_Range16(2365LLU,2384LLU,19LLU),_1e3cd67d5_Range16(2392LLU,2401LLU,1LLU),_1e3cd67d5_Range16(2417LLU,2432LLU,1LLU),_1e3cd67d5_Range16(2437LLU,2444LLU,1LLU),_1e3cd67d5_Range16(2447LLU,2448LLU,1LLU),_1e3cd67d5_Range16(2451LLU,2472LLU,1LLU),_1e3cd67d5_Range16(2474LLU,2480LLU,1LLU),_1e3cd67d5_Range16(2482LLU,2486LLU,4LLU),_1e3cd67d5_Range16(2487LLU,2489LLU,1LLU),_1e3cd67d5_Range16(2493LLU,2510LLU,17LLU),_1e3cd67d5_Range16(2524LLU,2525LLU,1LLU),_1e3cd67d5_Range16(2527LLU,2529LLU,1LLU),_1e3cd67d5_Range16(2544LLU,2545LLU,1LLU),_1e3cd67d5_Range16(2556LLU,2565LLU,9LLU),_1e3cd67d5_Range16(2566LLU,2570LLU,1LLU),_1e3cd67d5_Range16(2575LLU,2576LLU,1LLU),_1e3cd67d5_Range16(2579LLU,2600LLU,1LLU),_1e3cd67d5_Range16(2602LLU,2608LLU,1LLU),_1e3cd67d5_Range16(2610LLU,2611LLU,1LLU),_1e3cd67d5_Range16(2613LLU,2614LLU,1LLU),_1e3cd67d5_Range16(2616LLU,2617LLU,1LLU),_1e3cd67d5_Range16(2649LLU,2652LLU,1LLU),_1e3cd67d5_Range16(2654LLU,2674LLU,20LLU),_1e3cd67d5_Range16(2675LLU,2676LLU,1LLU),_1e3cd67d5_Range16(2693LLU,2701LLU,1LLU),_1e3cd67d5_Range16(2703LLU,2705LLU,1LLU),_1e3cd67d5_Range16(2707LLU,2728LLU,1LLU),_1e3cd67d5_Range16(2730LLU,2736LLU,1LLU),_1e3cd67d5_Range16(2738LLU,2739LLU,1LLU),_1e3cd67d5_Range16(2741LLU,2745LLU,1LLU),_1e3cd67d5_Range16(2749LLU,2768LLU,19LLU),_1e3cd67d5_Range16(2784LLU,2785LLU,1LLU),_1e3cd67d5_Range16(2809LLU,2821LLU,12LLU),_1e3cd67d5_Range16(2822LLU,2828LLU,1LLU),_1e3cd67d5_Range16(2831LLU,2832LLU,1LLU),_1e3cd67d5_Range16(2835LLU,2856LLU,1LLU),_1e3cd67d5_Range16(2858LLU,2864LLU,1LLU),_1e3cd67d5_Range16(2866LLU,2867LLU,1LLU),_1e3cd67d5_Range16(2869LLU,2873LLU,1LLU),_1e3cd67d5_Range16(2877LLU,2908LLU,31LLU),_1e3cd67d5_Range16(2909LLU,2911LLU,2LLU),_1e3cd67d5_Range16(2912LLU,2913LLU,1LLU),_1e3cd67d5_Range16(2929LLU,2947LLU,18LLU),_1e3cd67d5_Range16(2949LLU,2954LLU,1LLU),_1e3cd67d5_Range16(2958LLU,2960LLU,1LLU),_1e3cd67d5_Range16(2962LLU,2965LLU,1LLU),_1e3cd67d5_Range16(2969LLU,2970LLU,1LLU),_1e3cd67d5_Range16(2972LLU,2974LLU,2LLU),_1e3cd67d5_Range16(2975LLU,2979LLU,4LLU),_1e3cd67d5_Range16(2980LLU,2984LLU,4LLU),_1e3cd67d5_Range16(2985LLU,2986LLU,1LLU),_1e3cd67d5_Range16(2990LLU,3001LLU,1LLU),_1e3cd67d5_Range16(3024LLU,3077LLU,53LLU),_1e3cd67d5_Range16(3078LLU,3084LLU,1LLU),_1e3cd67d5_Range16(3086LLU,3088LLU,1LLU),_1e3cd67d5_Range16(3090LLU,3112LLU,1LLU),_1e3cd67d5_Range16(3114LLU,3129LLU,1LLU),_1e3cd67d5_Range16(3133LLU,3160LLU,27LLU),_1e3cd67d5_Range16(3161LLU,3162LLU,1LLU),_1e3cd67d5_Range16(3165LLU,3168LLU,3LLU),_1e3cd67d5_Range16(3169LLU,3200LLU,31LLU),_1e3cd67d5_Range16(3205LLU,3212LLU,1LLU),_1e3cd67d5_Range16(3214LLU,3216LLU,1LLU),_1e3cd67d5_Range16(3218LLU,3240LLU,1LLU),_1e3cd67d5_Range16(3242LLU,3251LLU,1LLU),_1e3cd67d5_Range16(3253LLU,3257LLU,1LLU),_1e3cd67d5_Range16(3261LLU,3293LLU,32LLU),_1e3cd67d5_Range16(3294LLU,3296LLU,2LLU),_1e3cd67d5_Range16(3297LLU,3313LLU,16LLU),_1e3cd67d5_Range16(3314LLU,3332LLU,18LLU),_1e3cd67d5_Range16(3333LLU,3340LLU,1LLU),_1e3cd67d5_Range16(3342LLU,3344LLU,1LLU),_1e3cd67d5_Range16(3346LLU,3386LLU,1LLU),_1e3cd67d5_Range16(3389LLU,3406LLU,17LLU),_1e3cd67d5_Range16(3412LLU,3414LLU,1LLU),_1e3cd67d5_Range16(3423LLU,3425LLU,1LLU),_1e3cd67d5_Range16(3450LLU,3455LLU,1LLU),_1e3cd67d5_Range16(3461LLU,3478LLU,1LLU),_1e3cd67d5_Range16(3482LLU,3505LLU,1LLU),_1e3cd67d5_Range16(3507LLU,3515LLU,1LLU),_1e3cd67d5_Range16(3517LLU,3520LLU,3LLU),_1e3cd67d5_Range16(3521LLU,3526LLU,1LLU),_1e3cd67d5_Range16(3585LLU,3632LLU,1LLU),_1e3cd67d5_Range16(3634LLU,3635LLU,1LLU),_1e3cd67d5_Range16(3648LLU,3654LLU,1LLU),_1e3cd67d5_Range16(3713LLU,3714LLU,1LLU),_1e3cd67d5_Range16(3716LLU,3718LLU,2LLU),_1e3cd67d5_Range16(3719LLU,3722LLU,1LLU),_1e3cd67d5_Range16(3724LLU,3747LLU,1LLU),_1e3cd67d5_Range16(3749LLU,3751LLU,2LLU),_1e3cd67d5_Range16(3752LLU,3760LLU,1LLU),_1e3cd67d5_Range16(3762LLU,3763LLU,1LLU),_1e3cd67d5_Range16(3773LLU,3776LLU,3LLU),_1e3cd67d5_Range16(3777LLU,3780LLU,1LLU),_1e3cd67d5_Range16(3782LLU,3804LLU,22LLU),_1e3cd67d5_Range16(3805LLU,3807LLU,1LLU),_1e3cd67d5_Range16(3840LLU,3904LLU,64LLU),_1e3cd67d5_Range16(3905LLU,3911LLU,1LLU),_1e3cd67d5_Range16(3913LLU,3948LLU,1LLU),_1e3cd67d5_Range16(3976LLU,3980LLU,1LLU),_1e3cd67d5_Range16(4096LLU,4138LLU,1LLU),_1e3cd67d5_Range16(4159LLU,4176LLU,17LLU),_1e3cd67d5_Range16(4177LLU,4181LLU,1LLU),_1e3cd67d5_Range16(4186LLU,4189LLU,1LLU),_1e3cd67d5_Range16(4193LLU,4197LLU,4LLU),_1e3cd67d5_Range16(4198LLU,4206LLU,8LLU),_1e3cd67d5_Range16(4207LLU,4208LLU,1LLU),_1e3cd67d5_Range16(4213LLU,4225LLU,1LLU),_1e3cd67d5_Range16(4238LLU,4256LLU,18LLU),_1e3cd67d5_Range16(4257LLU,4293LLU,1LLU),_1e3cd67d5_Range16(4295LLU,4301LLU,6LLU),_1e3cd67d5_Range16(4304LLU,4346LLU,1LLU),_1e3cd67d5_Range16(4348LLU,4680LLU,1LLU),_1e3cd67d5_Range16(4682LLU,4685LLU,1LLU),_1e3cd67d5_Range16(4688LLU,4694LLU,1LLU),_1e3cd67d5_Range16(4696LLU,4698LLU,2LLU),_1e3cd67d5_Range16(4699LLU,4701LLU,1LLU),_1e3cd67d5_Range16(4704LLU,4744LLU,1LLU),_1e3cd67d5_Range16(4746LLU,4749LLU,1LLU),_1e3cd67d5_Range16(4752LLU,4784LLU,1LLU),_1e3cd67d5_Range16(4786LLU,4789LLU,1LLU),_1e3cd67d5_Range16(4792LLU,4798LLU,1LLU),_1e3cd67d5_Range16(4800LLU,4802LLU,2LLU),_1e3cd67d5_Range16(4803LLU,4805LLU,1LLU),_1e3cd67d5_Range16(4808LLU,4822LLU,1LLU),_1e3cd67d5_Range16(4824LLU,4880LLU,1LLU),_1e3cd67d5_Range16(4882LLU,4885LLU,1LLU),_1e3cd67d5_Range16(4888LLU,4954LLU,1LLU),_1e3cd67d5_Range16(4992LLU,5007LLU,1LLU),_1e3cd67d5_Range16(5024LLU,5109LLU,1LLU),_1e3cd67d5_Range16(5112LLU,5117LLU,1LLU),_1e3cd67d5_Range16(5121LLU,5740LLU,1LLU),_1e3cd67d5_Range16(5743LLU,5759LLU,1LLU),_1e3cd67d5_Range16(5761LLU,5786LLU,1LLU),_1e3cd67d5_Range16(5792LLU,5866LLU,1LLU),_1e3cd67d5_Range16(5873LLU,5880LLU,1LLU),_1e3cd67d5_Range16(5888LLU,5905LLU,1LLU),_1e3cd67d5_Range16(5919LLU,5937LLU,1LLU),_1e3cd67d5_Range16(5952LLU,5969LLU,1LLU),_1e3cd67d5_Range16(5984LLU,5996LLU,1LLU),_1e3cd67d5_Range16(5998LLU,6000LLU,1LLU),_1e3cd67d5_Range16(6016LLU,6067LLU,1LLU),_1e3cd67d5_Range16(6103LLU,6108LLU,5LLU),_1e3cd67d5_Range16(6176LLU,6264LLU,1LLU),_1e3cd67d5_Range16(6272LLU,6276LLU,1LLU),_1e3cd67d5_Range16(6279LLU,6312LLU,1LLU),_1e3cd67d5_Range16(6314LLU,6320LLU,6LLU),_1e3cd67d5_Range16(6321LLU,6389LLU,1LLU),_1e3cd67d5_Range16(6400LLU,6430LLU,1LLU),_1e3cd67d5_Range16(6480LLU,6509LLU,1LLU),_1e3cd67d5_Range16(6512LLU,6516LLU,1LLU),_1e3cd67d5_Range16(6528LLU,6571LLU,1LLU),_1e3cd67d5_Range16(6576LLU,6601LLU,1LLU),_1e3cd67d5_Range16(6656LLU,6678LLU,1LLU),_1e3cd67d5_Range16(6688LLU,6740LLU,1LLU),_1e3cd67d5_Range16(6823LLU,6917LLU,94LLU),_1e3cd67d5_Range16(6918LLU,6963LLU,1LLU),_1e3cd67d5_Range16(6981LLU,6988LLU,1LLU),_1e3cd67d5_Range16(7043LLU,7072LLU,1LLU),_1e3cd67d5_Range16(7086LLU,7087LLU,1LLU),_1e3cd67d5_Range16(7098LLU,7141LLU,1LLU),_1e3cd67d5_Range16(7168LLU,7203LLU,1LLU),_1e3cd67d5_Range16(7245LLU,7247LLU,1LLU),_1e3cd67d5_Range16(7258LLU,7293LLU,1LLU),_1e3cd67d5_Range16(7296LLU,7304LLU,1LLU),_1e3cd67d5_Range16(7312LLU,7354LLU,1LLU),_1e3cd67d5_Range16(7357LLU,7359LLU,1LLU),_1e3cd67d5_Range16(7401LLU,7404LLU,1LLU),_1e3cd67d5_Range16(7406LLU,7411LLU,1LLU),_1e3cd67d5_Range16(7413LLU,7414LLU,1LLU),_1e3cd67d5_Range16(7418LLU,7424LLU,6LLU),_1e3cd67d5_Range16(7425LLU,7615LLU,1LLU),_1e3cd67d5_Range16(7680LLU,7957LLU,1LLU),_1e3cd67d5_Range16(7960LLU,7965LLU,1LLU),_1e3cd67d5_Range16(7968LLU,8005LLU,1LLU),_1e3cd67d5_Range16(8008LLU,8013LLU,1LLU),_1e3cd67d5_Range16(8016LLU,8023LLU,1LLU),_1e3cd67d5_Range16(8025LLU,8031LLU,2LLU),_1e3cd67d5_Range16(8032LLU,8061LLU,1LLU),_1e3cd67d5_Range16(8064LLU,8116LLU,1LLU),_1e3cd67d5_Range16(8118LLU,8124LLU,1LLU),_1e3cd67d5_Range16(8126LLU,8130LLU,4LLU),_1e3cd67d5_Range16(8131LLU,8132LLU,1LLU),_1e3cd67d5_Range16(8134LLU,8140LLU,1LLU),_1e3cd67d5_Range16(8144LLU,8147LLU,1LLU),_1e3cd67d5_Range16(8150LLU,8155LLU,1LLU),_1e3cd67d5_Range16(8160LLU,8172LLU,1LLU),_1e3cd67d5_Range16(8178LLU,8180LLU,1LLU),_1e3cd67d5_Range16(8182LLU,8188LLU,1LLU),_1e3cd67d5_Range16(8305LLU,8319LLU,14LLU),_1e3cd67d5_Range16(8336LLU,8348LLU,1LLU),_1e3cd67d5_Range16(8450LLU,8455LLU,5LLU),_1e3cd67d5_Range16(8458LLU,8467LLU,1LLU),_1e3cd67d5_Range16(8469LLU,8473LLU,4LLU),_1e3cd67d5_Range16(8474LLU,8477LLU,1LLU),_1e3cd67d5_Range16(8484LLU,8490LLU,2LLU),_1e3cd67d5_Range16(8491LLU,8493LLU,1LLU),_1e3cd67d5_Range16(8495LLU,8505LLU,1LLU),_1e3cd67d5_Range16(8508LLU,8511LLU,1LLU),_1e3cd67d5_Range16(8517LLU,8521LLU,1LLU),_1e3cd67d5_Range16(8526LLU,8579LLU,53LLU),_1e3cd67d5_Range16(8580LLU,11264LLU,2684LLU),_1e3cd67d5_Range16(11265LLU,11492LLU,1LLU),_1e3cd67d5_Range16(11499LLU,11502LLU,1LLU),_1e3cd67d5_Range16(11506LLU,11507LLU,1LLU),_1e3cd67d5_Range16(11520LLU,11557LLU,1LLU),_1e3cd67d5_Range16(11559LLU,11565LLU,6LLU),_1e3cd67d5_Range16(11568LLU,11623LLU,1LLU),_1e3cd67d5_Range16(11631LLU,11648LLU,17LLU),_1e3cd67d5_Range16(11649LLU,11670LLU,1LLU),_1e3cd67d5_Range16(11680LLU,11686LLU,1LLU),_1e3cd67d5_Range16(11688LLU,11694LLU,1LLU),_1e3cd67d5_Range16(11696LLU,11702LLU,1LLU),_1e3cd67d5_Range16(11704LLU,11710LLU,1LLU),_1e3cd67d5_Range16(11712LLU,11718LLU,1LLU),_1e3cd67d5_Range16(11720LLU,11726LLU,1LLU),_1e3cd67d5_Range16(11728LLU,11734LLU,1LLU),_1e3cd67d5_Range16(11736LLU,11742LLU,1LLU),_1e3cd67d5_Range16(11823LLU,12293LLU,470LLU),_1e3cd67d5_Range16(12294LLU,12337LLU,43LLU),_1e3cd67d5_Range16(12338LLU,12341LLU,1LLU),_1e3cd67d5_Range16(12347LLU,12348LLU,1LLU),_1e3cd67d5_Range16(12353LLU,12438LLU,1LLU),_1e3cd67d5_Range16(12445LLU,12447LLU,1LLU),_1e3cd67d5_Range16(12449LLU,12538LLU,1LLU),_1e3cd67d5_Range16(12540LLU,12543LLU,1LLU),_1e3cd67d5_Range16(12549LLU,12591LLU,1LLU),_1e3cd67d5_Range16(12593LLU,12686LLU,1LLU),_1e3cd67d5_Range16(12704LLU,12735LLU,1LLU),_1e3cd67d5_Range16(12784LLU,12799LLU,1LLU),_1e3cd67d5_Range16(13312LLU,19903LLU,1LLU),_1e3cd67d5_Range16(19968LLU,42124LLU,1LLU),_1e3cd67d5_Range16(42192LLU,42237LLU,1LLU),_1e3cd67d5_Range16(42240LLU,42508LLU,1LLU),_1e3cd67d5_Range16(42512LLU,42527LLU,1LLU),_1e3cd67d5_Range16(42538LLU,42539LLU,1LLU),_1e3cd67d5_Range16(42560LLU,42606LLU,1LLU),_1e3cd67d5_Range16(42623LLU,42653LLU,1LLU),_1e3cd67d5_Range16(42656LLU,42725LLU,1LLU),_1e3cd67d5_Range16(42775LLU,42783LLU,1LLU),_1e3cd67d5_Range16(42786LLU,42888LLU,1LLU),_1e3cd67d5_Range16(42891LLU,42954LLU,1LLU),_1e3cd67d5_Range16(42960LLU,42961LLU,1LLU),_1e3cd67d5_Range16(42963LLU,42965LLU,2LLU),_1e3cd67d5_Range16(42966LLU,42969LLU,1LLU),_1e3cd67d5_Range16(42994LLU,43009LLU,1LLU),_1e3cd67d5_Range16(43011LLU,43013LLU,1LLU),_1e3cd67d5_Range16(43015LLU,43018LLU,1LLU),_1e3cd67d5_Range16(43020LLU,43042LLU,1LLU),_1e3cd67d5_Range16(43072LLU,43123LLU,1LLU),_1e3cd67d5_Range16(43138LLU,43187LLU,1LLU),_1e3cd67d5_Range16(43250LLU,43255LLU,1LLU),_1e3cd67d5_Range16(43259LLU,43261LLU,2LLU),_1e3cd67d5_Range16(43262LLU,43274LLU,12LLU),_1e3cd67d5_Range16(43275LLU,43301LLU,1LLU),_1e3cd67d5_Range16(43312LLU,43334LLU,1LLU),_1e3cd67d5_Range16(43360LLU,43388LLU,1LLU),_1e3cd67d5_Range16(43396LLU,43442LLU,1LLU),_1e3cd67d5_Range16(43471LLU,43488LLU,17LLU),_1e3cd67d5_Range16(43489LLU,43492LLU,1LLU),_1e3cd67d5_Range16(43494LLU,43503LLU,1LLU),_1e3cd67d5_Range16(43514LLU,43518LLU,1LLU),_1e3cd67d5_Range16(43520LLU,43560LLU,1LLU),_1e3cd67d5_Range16(43584LLU,43586LLU,1LLU),_1e3cd67d5_Range16(43588LLU,43595LLU,1LLU),_1e3cd67d5_Range16(43616LLU,43638LLU,1LLU),_1e3cd67d5_Range16(43642LLU,43646LLU,4LLU),_1e3cd67d5_Range16(43647LLU,43695LLU,1LLU),_1e3cd67d5_Range16(43697LLU,43701LLU,4LLU),_1e3cd67d5_Range16(43702LLU,43705LLU,3LLU),_1e3cd67d5_Range16(43706LLU,43709LLU,1LLU),_1e3cd67d5_Range16(43712LLU,43714LLU,2LLU),_1e3cd67d5_Range16(43739LLU,43741LLU,1LLU),_1e3cd67d5_Range16(43744LLU,43754LLU,1LLU),_1e3cd67d5_Range16(43762LLU,43764LLU,1LLU),_1e3cd67d5_Range16(43777LLU,43782LLU,1LLU),_1e3cd67d5_Range16(43785LLU,43790LLU,1LLU),_1e3cd67d5_Range16(43793LLU,43798LLU,1LLU),_1e3cd67d5_Range16(43808LLU,43814LLU,1LLU),_1e3cd67d5_Range16(43816LLU,43822LLU,1LLU),_1e3cd67d5_Range16(43824LLU,43866LLU,1LLU),_1e3cd67d5_Range16(43868LLU,43881LLU,1LLU),_1e3cd67d5_Range16(43888LLU,44002LLU,1LLU),_1e3cd67d5_Range16(44032LLU,55203LLU,1LLU),_1e3cd67d5_Range16(55216LLU,55238LLU,1LLU),_1e3cd67d5_Range16(55243LLU,55291LLU,1LLU),_1e3cd67d5_Range16(63744LLU,64109LLU,1LLU),_1e3cd67d5_Range16(64112LLU,64217LLU,1LLU),_1e3cd67d5_Range16(64256LLU,64262LLU,1LLU),_1e3cd67d5_Range16(64275LLU,64279LLU,1LLU),_1e3cd67d5_Range16(64285LLU,64287LLU,2LLU),_1e3cd67d5_Range16(64288LLU,64296LLU,1LLU),_1e3cd67d5_Range16(64298LLU,64310LLU,1LLU),_1e3cd67d5_Range16(64312LLU,64316LLU,1LLU),_1e3cd67d5_Range16(64318LLU,64320LLU,2LLU),_1e3cd67d5_Range16(64321LLU,64323LLU,2LLU),_1e3cd67d5_Range16(64324LLU,64326LLU,2LLU),_1e3cd67d5_Range16(64327LLU,64433LLU,1LLU),_1e3cd67d5_Range16(64467LLU,64829LLU,1LLU),_1e3cd67d5_Range16(64848LLU,64911LLU,1LLU),_1e3cd67d5_Range16(64914LLU,64967LLU,1LLU),_1e3cd67d5_Range16(65008LLU,65019LLU,1LLU),_1e3cd67d5_Range16(65136LLU,65140LLU,1LLU),_1e3cd67d5_Range16(65142LLU,65276LLU,1LLU),_1e3cd67d5_Range16(65313LLU,65338LLU,1LLU),_1e3cd67d5_Range16(65345LLU,65370LLU,1LLU),_1e3cd67d5_Range16(65382LLU,65470LLU,1LLU),_1e3cd67d5_Range16(65474LLU,65479LLU,1LLU),_1e3cd67d5_Range16(65482LLU,65487LLU,1LLU),_1e3cd67d5_Range16(65490LLU,65495LLU,1LLU),_1e3cd67d5_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_1e3cd67d5_Range32>({_1e3cd67d5_Range32(65536LLU,65547LLU,1LLU),_1e3cd67d5_Range32(65549LLU,65574LLU,1LLU),_1e3cd67d5_Range32(65576LLU,65594LLU,1LLU),_1e3cd67d5_Range32(65596LLU,65597LLU,1LLU),_1e3cd67d5_Range32(65599LLU,65613LLU,1LLU),_1e3cd67d5_Range32(65616LLU,65629LLU,1LLU),_1e3cd67d5_Range32(65664LLU,65786LLU,1LLU),_1e3cd67d5_Range32(66176LLU,66204LLU,1LLU),_1e3cd67d5_Range32(66208LLU,66256LLU,1LLU),_1e3cd67d5_Range32(66304LLU,66335LLU,1LLU),_1e3cd67d5_Range32(66349LLU,66368LLU,1LLU),_1e3cd67d5_Range32(66370LLU,66377LLU,1LLU),_1e3cd67d5_Range32(66384LLU,66421LLU,1LLU),_1e3cd67d5_Range32(66432LLU,66461LLU,1LLU),_1e3cd67d5_Range32(66464LLU,66499LLU,1LLU),_1e3cd67d5_Range32(66504LLU,66511LLU,1LLU),_1e3cd67d5_Range32(66560LLU,66717LLU,1LLU),_1e3cd67d5_Range32(66736LLU,66771LLU,1LLU),_1e3cd67d5_Range32(66776LLU,66811LLU,1LLU),_1e3cd67d5_Range32(66816LLU,66855LLU,1LLU),_1e3cd67d5_Range32(66864LLU,66915LLU,1LLU),_1e3cd67d5_Range32(66928LLU,66938LLU,1LLU),_1e3cd67d5_Range32(66940LLU,66954LLU,1LLU),_1e3cd67d5_Range32(66956LLU,66962LLU,1LLU),_1e3cd67d5_Range32(66964LLU,66965LLU,1LLU),_1e3cd67d5_Range32(66967LLU,66977LLU,1LLU),_1e3cd67d5_Range32(66979LLU,66993LLU,1LLU),_1e3cd67d5_Range32(66995LLU,67001LLU,1LLU),_1e3cd67d5_Range32(67003LLU,67004LLU,1LLU),_1e3cd67d5_Range32(67072LLU,67382LLU,1LLU),_1e3cd67d5_Range32(67392LLU,67413LLU,1LLU),_1e3cd67d5_Range32(67424LLU,67431LLU,1LLU),_1e3cd67d5_Range32(67456LLU,67461LLU,1LLU),_1e3cd67d5_Range32(67463LLU,67504LLU,1LLU),_1e3cd67d5_Range32(67506LLU,67514LLU,1LLU),_1e3cd67d5_Range32(67584LLU,67589LLU,1LLU),_1e3cd67d5_Range32(67592LLU,67594LLU,2LLU),_1e3cd67d5_Range32(67595LLU,67637LLU,1LLU),_1e3cd67d5_Range32(67639LLU,67640LLU,1LLU),_1e3cd67d5_Range32(67644LLU,67647LLU,3LLU),_1e3cd67d5_Range32(67648LLU,67669LLU,1LLU),_1e3cd67d5_Range32(67680LLU,67702LLU,1LLU),_1e3cd67d5_Range32(67712LLU,67742LLU,1LLU),_1e3cd67d5_Range32(67808LLU,67826LLU,1LLU),_1e3cd67d5_Range32(67828LLU,67829LLU,1LLU),_1e3cd67d5_Range32(67840LLU,67861LLU,1LLU),_1e3cd67d5_Range32(67872LLU,67897LLU,1LLU),_1e3cd67d5_Range32(67968LLU,68023LLU,1LLU),_1e3cd67d5_Range32(68030LLU,68031LLU,1LLU),_1e3cd67d5_Range32(68096LLU,68112LLU,16LLU),_1e3cd67d5_Range32(68113LLU,68115LLU,1LLU),_1e3cd67d5_Range32(68117LLU,68119LLU,1LLU),_1e3cd67d5_Range32(68121LLU,68149LLU,1LLU),_1e3cd67d5_Range32(68192LLU,68220LLU,1LLU),_1e3cd67d5_Range32(68224LLU,68252LLU,1LLU),_1e3cd67d5_Range32(68288LLU,68295LLU,1LLU),_1e3cd67d5_Range32(68297LLU,68324LLU,1LLU),_1e3cd67d5_Range32(68352LLU,68405LLU,1LLU),_1e3cd67d5_Range32(68416LLU,68437LLU,1LLU),_1e3cd67d5_Range32(68448LLU,68466LLU,1LLU),_1e3cd67d5_Range32(68480LLU,68497LLU,1LLU),_1e3cd67d5_Range32(68608LLU,68680LLU,1LLU),_1e3cd67d5_Range32(68736LLU,68786LLU,1LLU),_1e3cd67d5_Range32(68800LLU,68850LLU,1LLU),_1e3cd67d5_Range32(68864LLU,68899LLU,1LLU),_1e3cd67d5_Range32(69248LLU,69289LLU,1LLU),_1e3cd67d5_Range32(69296LLU,69297LLU,1LLU),_1e3cd67d5_Range32(69376LLU,69404LLU,1LLU),_1e3cd67d5_Range32(69415LLU,69424LLU,9LLU),_1e3cd67d5_Range32(69425LLU,69445LLU,1LLU),_1e3cd67d5_Range32(69488LLU,69505LLU,1LLU),_1e3cd67d5_Range32(69552LLU,69572LLU,1LLU),_1e3cd67d5_Range32(69600LLU,69622LLU,1LLU),_1e3cd67d5_Range32(69635LLU,69687LLU,1LLU),_1e3cd67d5_Range32(69745LLU,69746LLU,1LLU),_1e3cd67d5_Range32(69749LLU,69763LLU,14LLU),_1e3cd67d5_Range32(69764LLU,69807LLU,1LLU),_1e3cd67d5_Range32(69840LLU,69864LLU,1LLU),_1e3cd67d5_Range32(69891LLU,69926LLU,1LLU),_1e3cd67d5_Range32(69956LLU,69959LLU,3LLU),_1e3cd67d5_Range32(69968LLU,70002LLU,1LLU),_1e3cd67d5_Range32(70006LLU,70019LLU,13LLU),_1e3cd67d5_Range32(70020LLU,70066LLU,1LLU),_1e3cd67d5_Range32(70081LLU,70084LLU,1LLU),_1e3cd67d5_Range32(70106LLU,70108LLU,2LLU),_1e3cd67d5_Range32(70144LLU,70161LLU,1LLU),_1e3cd67d5_Range32(70163LLU,70187LLU,1LLU),_1e3cd67d5_Range32(70207LLU,70208LLU,1LLU),_1e3cd67d5_Range32(70272LLU,70278LLU,1LLU),_1e3cd67d5_Range32(70280LLU,70282LLU,2LLU),_1e3cd67d5_Range32(70283LLU,70285LLU,1LLU),_1e3cd67d5_Range32(70287LLU,70301LLU,1LLU),_1e3cd67d5_Range32(70303LLU,70312LLU,1LLU),_1e3cd67d5_Range32(70320LLU,70366LLU,1LLU),_1e3cd67d5_Range32(70405LLU,70412LLU,1LLU),_1e3cd67d5_Range32(70415LLU,70416LLU,1LLU),_1e3cd67d5_Range32(70419LLU,70440LLU,1LLU),_1e3cd67d5_Range32(70442LLU,70448LLU,1LLU),_1e3cd67d5_Range32(70450LLU,70451LLU,1LLU),_1e3cd67d5_Range32(70453LLU,70457LLU,1LLU),_1e3cd67d5_Range32(70461LLU,70480LLU,19LLU),_1e3cd67d5_Range32(70493LLU,70497LLU,1LLU),_1e3cd67d5_Range32(70656LLU,70708LLU,1LLU),_1e3cd67d5_Range32(70727LLU,70730LLU,1LLU),_1e3cd67d5_Range32(70751LLU,70753LLU,1LLU),_1e3cd67d5_Range32(70784LLU,70831LLU,1LLU),_1e3cd67d5_Range32(70852LLU,70853LLU,1LLU),_1e3cd67d5_Range32(70855LLU,71040LLU,185LLU),_1e3cd67d5_Range32(71041LLU,71086LLU,1LLU),_1e3cd67d5_Range32(71128LLU,71131LLU,1LLU),_1e3cd67d5_Range32(71168LLU,71215LLU,1LLU),_1e3cd67d5_Range32(71236LLU,71296LLU,60LLU),_1e3cd67d5_Range32(71297LLU,71338LLU,1LLU),_1e3cd67d5_Range32(71352LLU,71424LLU,72LLU),_1e3cd67d5_Range32(71425LLU,71450LLU,1LLU),_1e3cd67d5_Range32(71488LLU,71494LLU,1LLU),_1e3cd67d5_Range32(71680LLU,71723LLU,1LLU),_1e3cd67d5_Range32(71840LLU,71903LLU,1LLU),_1e3cd67d5_Range32(71935LLU,71942LLU,1LLU),_1e3cd67d5_Range32(71945LLU,71948LLU,3LLU),_1e3cd67d5_Range32(71949LLU,71955LLU,1LLU),_1e3cd67d5_Range32(71957LLU,71958LLU,1LLU),_1e3cd67d5_Range32(71960LLU,71983LLU,1LLU),_1e3cd67d5_Range32(71999LLU,72001LLU,2LLU),_1e3cd67d5_Range32(72096LLU,72103LLU,1LLU),_1e3cd67d5_Range32(72106LLU,72144LLU,1LLU),_1e3cd67d5_Range32(72161LLU,72163LLU,2LLU),_1e3cd67d5_Range32(72192LLU,72203LLU,11LLU),_1e3cd67d5_Range32(72204LLU,72242LLU,1LLU),_1e3cd67d5_Range32(72250LLU,72272LLU,22LLU),_1e3cd67d5_Range32(72284LLU,72329LLU,1LLU),_1e3cd67d5_Range32(72349LLU,72368LLU,19LLU),_1e3cd67d5_Range32(72369LLU,72440LLU,1LLU),_1e3cd67d5_Range32(72704LLU,72712LLU,1LLU),_1e3cd67d5_Range32(72714LLU,72750LLU,1LLU),_1e3cd67d5_Range32(72768LLU,72818LLU,50LLU),_1e3cd67d5_Range32(72819LLU,72847LLU,1LLU),_1e3cd67d5_Range32(72960LLU,72966LLU,1LLU),_1e3cd67d5_Range32(72968LLU,72969LLU,1LLU),_1e3cd67d5_Range32(72971LLU,73008LLU,1LLU),_1e3cd67d5_Range32(73030LLU,73056LLU,26LLU),_1e3cd67d5_Range32(73057LLU,73061LLU,1LLU),_1e3cd67d5_Range32(73063LLU,73064LLU,1LLU),_1e3cd67d5_Range32(73066LLU,73097LLU,1LLU),_1e3cd67d5_Range32(73112LLU,73440LLU,328LLU),_1e3cd67d5_Range32(73441LLU,73458LLU,1LLU),_1e3cd67d5_Range32(73474LLU,73476LLU,2LLU),_1e3cd67d5_Range32(73477LLU,73488LLU,1LLU),_1e3cd67d5_Range32(73490LLU,73523LLU,1LLU),_1e3cd67d5_Range32(73648LLU,73728LLU,80LLU),_1e3cd67d5_Range32(73729LLU,74649LLU,1LLU),_1e3cd67d5_Range32(74880LLU,75075LLU,1LLU),_1e3cd67d5_Range32(77712LLU,77808LLU,1LLU),_1e3cd67d5_Range32(77824LLU,78895LLU,1LLU),_1e3cd67d5_Range32(78913LLU,78918LLU,1LLU),_1e3cd67d5_Range32(82944LLU,83526LLU,1LLU),_1e3cd67d5_Range32(92160LLU,92728LLU,1LLU),_1e3cd67d5_Range32(92736LLU,92766LLU,1LLU),_1e3cd67d5_Range32(92784LLU,92862LLU,1LLU),_1e3cd67d5_Range32(92880LLU,92909LLU,1LLU),_1e3cd67d5_Range32(92928LLU,92975LLU,1LLU),_1e3cd67d5_Range32(92992LLU,92995LLU,1LLU),_1e3cd67d5_Range32(93027LLU,93047LLU,1LLU),_1e3cd67d5_Range32(93053LLU,93071LLU,1LLU),_1e3cd67d5_Range32(93760LLU,93823LLU,1LLU),_1e3cd67d5_Range32(93952LLU,94026LLU,1LLU),_1e3cd67d5_Range32(94032LLU,94099LLU,67LLU),_1e3cd67d5_Range32(94100LLU,94111LLU,1LLU),_1e3cd67d5_Range32(94176LLU,94177LLU,1LLU),_1e3cd67d5_Range32(94179LLU,94208LLU,29LLU),_1e3cd67d5_Range32(94209LLU,100343LLU,1LLU),_1e3cd67d5_Range32(100352LLU,101589LLU,1LLU),_1e3cd67d5_Range32(101632LLU,101640LLU,1LLU),_1e3cd67d5_Range32(110576LLU,110579LLU,1LLU),_1e3cd67d5_Range32(110581LLU,110587LLU,1LLU),_1e3cd67d5_Range32(110589LLU,110590LLU,1LLU),_1e3cd67d5_Range32(110592LLU,110882LLU,1LLU),_1e3cd67d5_Range32(110898LLU,110928LLU,30LLU),_1e3cd67d5_Range32(110929LLU,110930LLU,1LLU),_1e3cd67d5_Range32(110933LLU,110948LLU,15LLU),_1e3cd67d5_Range32(110949LLU,110951LLU,1LLU),_1e3cd67d5_Range32(110960LLU,111355LLU,1LLU),_1e3cd67d5_Range32(113664LLU,113770LLU,1LLU),_1e3cd67d5_Range32(113776LLU,113788LLU,1LLU),_1e3cd67d5_Range32(113792LLU,113800LLU,1LLU),_1e3cd67d5_Range32(113808LLU,113817LLU,1LLU),_1e3cd67d5_Range32(119808LLU,119892LLU,1LLU),_1e3cd67d5_Range32(119894LLU,119964LLU,1LLU),_1e3cd67d5_Range32(119966LLU,119967LLU,1LLU),_1e3cd67d5_Range32(119970LLU,119973LLU,3LLU),_1e3cd67d5_Range32(119974LLU,119977LLU,3LLU),_1e3cd67d5_Range32(119978LLU,119980LLU,1LLU),_1e3cd67d5_Range32(119982LLU,119993LLU,1LLU),_1e3cd67d5_Range32(119995LLU,119997LLU,2LLU),_1e3cd67d5_Range32(119998LLU,120003LLU,1LLU),_1e3cd67d5_Range32(120005LLU,120069LLU,1LLU),_1e3cd67d5_Range32(120071LLU,120074LLU,1LLU),_1e3cd67d5_Range32(120077LLU,120084LLU,1LLU),_1e3cd67d5_Range32(120086LLU,120092LLU,1LLU),_1e3cd67d5_Range32(120094LLU,120121LLU,1LLU),_1e3cd67d5_Range32(120123LLU,120126LLU,1LLU),_1e3cd67d5_Range32(120128LLU,120132LLU,1LLU),_1e3cd67d5_Range32(120134LLU,120138LLU,4LLU),_1e3cd67d5_Range32(120139LLU,120144LLU,1LLU),_1e3cd67d5_Range32(120146LLU,120485LLU,1LLU),_1e3cd67d5_Range32(120488LLU,120512LLU,1LLU),_1e3cd67d5_Range32(120514LLU,120538LLU,1LLU),_1e3cd67d5_Range32(120540LLU,120570LLU,1LLU),_1e3cd67d5_Range32(120572LLU,120596LLU,1LLU),_1e3cd67d5_Range32(120598LLU,120628LLU,1LLU),_1e3cd67d5_Range32(120630LLU,120654LLU,1LLU),_1e3cd67d5_Range32(120656LLU,120686LLU,1LLU),_1e3cd67d5_Range32(120688LLU,120712LLU,1LLU),_1e3cd67d5_Range32(120714LLU,120744LLU,1LLU),_1e3cd67d5_Range32(120746LLU,120770LLU,1LLU),_1e3cd67d5_Range32(120772LLU,120779LLU,1LLU),_1e3cd67d5_Range32(122624LLU,122654LLU,1LLU),_1e3cd67d5_Range32(122661LLU,122666LLU,1LLU),_1e3cd67d5_Range32(122928LLU,122989LLU,1LLU),_1e3cd67d5_Range32(123136LLU,123180LLU,1LLU),_1e3cd67d5_Range32(123191LLU,123197LLU,1LLU),_1e3cd67d5_Range32(123214LLU,123536LLU,322LLU),_1e3cd67d5_Range32(123537LLU,123565LLU,1LLU),_1e3cd67d5_Range32(123584LLU,123627LLU,1LLU),_1e3cd67d5_Range32(124112LLU,124139LLU,1LLU),_1e3cd67d5_Range32(124896LLU,124902LLU,1LLU),_1e3cd67d5_Range32(124904LLU,124907LLU,1LLU),_1e3cd67d5_Range32(124909LLU,124910LLU,1LLU),_1e3cd67d5_Range32(124912LLU,124926LLU,1LLU),_1e3cd67d5_Range32(124928LLU,125124LLU,1LLU),_1e3cd67d5_Range32(125184LLU,125251LLU,1LLU),_1e3cd67d5_Range32(125259LLU,126464LLU,1205LLU),_1e3cd67d5_Range32(126465LLU,126467LLU,1LLU),_1e3cd67d5_Range32(126469LLU,126495LLU,1LLU),_1e3cd67d5_Range32(126497LLU,126498LLU,1LLU),_1e3cd67d5_Range32(126500LLU,126503LLU,3LLU),_1e3cd67d5_Range32(126505LLU,126514LLU,1LLU),_1e3cd67d5_Range32(126516LLU,126519LLU,1LLU),_1e3cd67d5_Range32(126521LLU,126523LLU,2LLU),_1e3cd67d5_Range32(126530LLU,126535LLU,5LLU),_1e3cd67d5_Range32(126537LLU,126541LLU,2LLU),_1e3cd67d5_Range32(126542LLU,126543LLU,1LLU),_1e3cd67d5_Range32(126545LLU,126546LLU,1LLU),_1e3cd67d5_Range32(126548LLU,126551LLU,3LLU),_1e3cd67d5_Range32(126553LLU,126561LLU,2LLU),_1e3cd67d5_Range32(126562LLU,126564LLU,2LLU),_1e3cd67d5_Range32(126567LLU,126570LLU,1LLU),_1e3cd67d5_Range32(126572LLU,126578LLU,1LLU),_1e3cd67d5_Range32(126580LLU,126583LLU,1LLU),_1e3cd67d5_Range32(126585LLU,126588LLU,1LLU),_1e3cd67d5_Range32(126590LLU,126592LLU,2LLU),_1e3cd67d5_Range32(126593LLU,126601LLU,1LLU),_1e3cd67d5_Range32(126603LLU,126619LLU,1LLU),_1e3cd67d5_Range32(126625LLU,126627LLU,1LLU),_1e3cd67d5_Range32(126629LLU,126633LLU,1LLU),_1e3cd67d5_Range32(126635LLU,126651LLU,1LLU),_1e3cd67d5_Range32(131072LLU,173791LLU,1LLU),_1e3cd67d5_Range32(173824LLU,177977LLU,1LLU),_1e3cd67d5_Range32(177984LLU,178205LLU,1LLU),_1e3cd67d5_Range32(178208LLU,183969LLU,1LLU),_1e3cd67d5_Range32(183984LLU,191456LLU,1LLU),_1e3cd67d5_Range32(194560LLU,195101LLU,1LLU),_1e3cd67d5_Range32(196608LLU,201546LLU,1LLU),_1e3cd67d5_Range32(201552LLU,205743LLU,1LLU)}),6LL));
static jule::Array<jule::I32,5> _1e3bad8dd_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
static jule::Array<jule::Str,6> _1e3bad8dd_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
static jule::Array<jule::Str,13> _1e3bad8dd_BIN_OPS = jule::Array<jule::Str,13>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("!", 1),jule::Str("&&", 2),jule::Str("||", 2)});
static jule::Array<jule::Str,2> _1e3bad8dd_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
static jule::Array<jule::Str,11> _1e3bad8dd_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
static jule::Array<_1e390539e_KindPair,46> _1e390539e_KEYWORDS = jule::Array<_1e390539e_KindPair,46>({_1e390539e_KindPair(jule::Str("i8", 2),1LLU),_1e390539e_KindPair(jule::Str("i16", 3),1LLU),_1e390539e_KindPair(jule::Str("i32", 3),1LLU),_1e390539e_KindPair(jule::Str("i64", 3),1LLU),_1e390539e_KindPair(jule::Str("u8", 2),1LLU),_1e390539e_KindPair(jule::Str("u16", 3),1LLU),_1e390539e_KindPair(jule::Str("u32", 3),1LLU),_1e390539e_KindPair(jule::Str("u64", 3),1LLU),_1e390539e_KindPair(jule::Str("f32", 3),1LLU),_1e390539e_KindPair(jule::Str("f64", 3),1LLU),_1e390539e_KindPair(jule::Str("uint", 4),1LLU),_1e390539e_KindPair(jule::Str("int", 3),1LLU),_1e390539e_KindPair(jule::Str("uintptr", 7),1LLU),_1e390539e_KindPair(jule::Str("bool", 4),1LLU),_1e390539e_KindPair(jule::Str("str", 3),1LLU),_1e390539e_KindPair(jule::Str("any", 3),1LLU),_1e390539e_KindPair(jule::Str("true", 4),6LLU),_1e390539e_KindPair(jule::Str("false", 5),6LLU),_1e390539e_KindPair(jule::Str("nil", 3),6LLU),_1e390539e_KindPair(jule::Str("const", 5),9LLU),_1e390539e_KindPair(jule::Str("ret", 3),4LLU),_1e390539e_KindPair(jule::Str("type", 4),10LLU),_1e390539e_KindPair(jule::Str("for", 3),12LLU),_1e390539e_KindPair(jule::Str("break", 5),13LLU),_1e390539e_KindPair(jule::Str("continue", 8),14LLU),_1e390539e_KindPair(jule::Str("in", 2),15LLU),_1e390539e_KindPair(jule::Str("if", 2),16LLU),_1e390539e_KindPair(jule::Str("else", 4),17LLU),_1e390539e_KindPair(jule::Str("use", 3),19LLU),_1e390539e_KindPair(jule::Str("pub", 3),21LLU),_1e390539e_KindPair(jule::Str("goto", 4),22LLU),_1e390539e_KindPair(jule::Str("enum", 4),24LLU),_1e390539e_KindPair(jule::Str("struct", 6),25LLU),_1e390539e_KindPair(jule::Str("co", 2),26LLU),_1e390539e_KindPair(jule::Str("match", 5),27LLU),_1e390539e_KindPair(jule::Str("self", 4),28LLU),_1e390539e_KindPair(jule::Str("trait", 5),29LLU),_1e390539e_KindPair(jule::Str("impl", 4),30LLU),_1e390539e_KindPair(jule::Str("cpp", 3),31LLU),_1e390539e_KindPair(jule::Str("fall", 4),32LLU),_1e390539e_KindPair(jule::Str("fn", 2),33LLU),_1e390539e_KindPair(jule::Str("let", 3),34LLU),_1e390539e_KindPair(jule::Str("unsafe", 6),35LLU),_1e390539e_KindPair(jule::Str("mut", 3),36LLU),_1e390539e_KindPair(jule::Str("defer", 5),37LLU),_1e390539e_KindPair(jule::Str("static", 6),38LLU)});
static jule::Array<_1e390539e_KindPair,39> _1e390539e_BASIC_OPS = jule::Array<_1e390539e_KindPair,39>({_1e390539e_KindPair(jule::Str("::", 2),23LLU),_1e390539e_KindPair(jule::Str(":", 1),11LLU),_1e390539e_KindPair(jule::Str(";", 1),5LLU),_1e390539e_KindPair(jule::Str(",", 1),8LLU),_1e390539e_KindPair(jule::Str("...", 3),7LLU),_1e390539e_KindPair(jule::Str(".", 1),20LLU),_1e390539e_KindPair(jule::Str("+=", 2),7LLU),_1e390539e_KindPair(jule::Str("-=", 2),7LLU),_1e390539e_KindPair(jule::Str("*=", 2),7LLU),_1e390539e_KindPair(jule::Str("/=", 2),7LLU),_1e390539e_KindPair(jule::Str("%=", 2),7LLU),_1e390539e_KindPair(jule::Str("<<=", 3),7LLU),_1e390539e_KindPair(jule::Str(">>=", 3),7LLU),_1e390539e_KindPair(jule::Str("^=", 2),7LLU),_1e390539e_KindPair(jule::Str("&=", 2),7LLU),_1e390539e_KindPair(jule::Str("|=", 2),7LLU),_1e390539e_KindPair(jule::Str("==", 2),7LLU),_1e390539e_KindPair(jule::Str("!=", 2),7LLU),_1e390539e_KindPair(jule::Str(">=", 2),7LLU),_1e390539e_KindPair(jule::Str("<=", 2),7LLU),_1e390539e_KindPair(jule::Str("&&", 2),7LLU),_1e390539e_KindPair(jule::Str("||", 2),7LLU),_1e390539e_KindPair(jule::Str("<<", 2),7LLU),_1e390539e_KindPair(jule::Str(">>", 2),7LLU),_1e390539e_KindPair(jule::Str("++", 2),7LLU),_1e390539e_KindPair(jule::Str("--", 2),7LLU),_1e390539e_KindPair(jule::Str("+", 1),7LLU),_1e390539e_KindPair(jule::Str("-", 1),7LLU),_1e390539e_KindPair(jule::Str("*", 1),7LLU),_1e390539e_KindPair(jule::Str("/", 1),7LLU),_1e390539e_KindPair(jule::Str("%", 1),7LLU),_1e390539e_KindPair(jule::Str("&", 1),7LLU),_1e390539e_KindPair(jule::Str("|", 1),7LLU),_1e390539e_KindPair(jule::Str("^", 1),7LLU),_1e390539e_KindPair(jule::Str("!", 1),7LLU),_1e390539e_KindPair(jule::Str("<", 1),7LLU),_1e390539e_KindPair(jule::Str(">", 1),7LLU),_1e390539e_KindPair(jule::Str("=", 1),7LLU),_1e390539e_KindPair(jule::Str("#", 1),39LLU)});
static jule::Ptr<_1e4b15a20_FnIns> _1c8ac49ea_BUILTIN_FN_OUT = jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns());
static jule::Ptr<_1e4b15a20_FnIns> _1c8ac49ea_BUILTIN_FN_OUTLN = jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns());
static jule::Ptr<_1e4b15a20_FnIns> _1c8ac49ea_BUILTIN_FN_NEW = jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns());
static jule::Ptr<_1e4b15a20_FnIns> _1c8ac49ea_BUILTIN_FN_PANIC = jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns());
static jule::Ptr<_1e4b15a20_FnIns> _1c8ac49ea_BUILTIN_FN_MAKE = jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns());
static jule::Ptr<_1e4b15a20_FnIns> _1c8ac49ea_BUILTIN_FN_APPEND = jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns());
static jule::Ptr<_1e4b15a20_FnIns> _1c8ac49ea_BUILTIN_FN_RECOVER = jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns());
static jule::Ptr<_1e4b15a20_FnIns> _1c8ac49ea_BUILTIN_FN_CLONE = jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns());
static jule::Ptr<_1e4b15a20_FnIns> _1c8ac49ea_BUILTIN_FN_STD_MEM_SIZE_OF = jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns());
static jule::Ptr<_1e4b15a20_FnIns> _1c8ac49ea_BUILTIN_FN_STD_MEM_ALIGN_OF = jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns());
static jule::Ptr<_1e4b15a20_FnIns> _1c8ac49ea_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR = jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns());
static jule::Ptr<_1e4b15a20_FnIns> _1c8ac49ea_BUILTIN_FN_COPY = jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns(jule::Ptr<_1e398ee72_StructIns>(),jule::Ptr<_1e4b15a20_Fn>(),jule::Slice<jule::Ptr<_1e6420856_TypeKind>>(),jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>(),jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_1e4d6ee22_Scope>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(),jule::Bool(),jule::Bool()));
static jule::Ptr<_1e6420856_TypeAlias> _1c8ac49ea_BUILTIN_TYPE_ALIAS_BYTE = jule::new_struct<_1e6420856_TypeAlias>(new( std::nothrow ) _1e6420856_TypeAlias(jule::Ptr<_1e38d4ec7_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),_1e3bad8dd_Token(),jule::Str(),jule::new_struct<_1e6420856_TypeSymbol>(new( std::nothrow ) _1e6420856_TypeSymbol(jule::Ptr<_1e38d4ec7_TypeDecl>(),jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("u8", 2)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ptr<_1e6420856_TypeAlias> _1c8ac49ea_BUILTIN_TYPE_ALIAS_RUNE = jule::new_struct<_1e6420856_TypeAlias>(new( std::nothrow ) _1e6420856_TypeAlias(jule::Ptr<_1e38d4ec7_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),_1e3bad8dd_Token(),jule::Str(),jule::new_struct<_1e6420856_TypeSymbol>(new( std::nothrow ) _1e6420856_TypeSymbol(jule::Ptr<_1e38d4ec7_TypeDecl>(),jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("i32", 3)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ptr<_1e4d61232_Trait> _1c8ac49ea_BUILTIN_TRAIT_ERROR = jule::new_struct_ptr<_1e4d61232_Trait>(new( std::nothrow ) _1e4d61232_Trait(_1e3bad8dd_Token(),jule::Str("Error", 5),true,jule::Bool(),jule::Str(),jule::Slice<jule::Ptr<_1e4b15a20_Fn>>({jule::new_struct_ptr<_1e4b15a20_Fn>(new( std::nothrow ) _1e4b15a20_Fn(jule::Ptr<_1e5054722_Sema>(),_1e3bad8dd_Token(),jule::Bool(),jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str("error", 5),jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>(),jule::Str(),jule::Ptr<_1e38d4ec7_ScopeTree>(),jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>>(),jule::new_struct<_1e4b15a20_RetType>(new( std::nothrow ) _1e4b15a20_RetType(jule::new_struct<_1e6420856_TypeSymbol>(new( std::nothrow ) _1e6420856_TypeSymbol(jule::new_struct<_1e38d4ec7_TypeDecl>(new( std::nothrow ) _1e38d4ec7_TypeDecl(_1e3bad8dd_Token(),jule::Any(jule::new_struct<_1e38d4ec7_IdentTypeDecl>(new( std::nothrow ) _1e38d4ec7_IdentTypeDecl(_1e3bad8dd_Token(),jule::Str("str", 3),jule::Bool(),jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>>()))))),jule::Ptr<_1e6420856_TypeKind>())),jule::Slice<_1e3bad8dd_Token>())),jule::Slice<jule::Ptr<_1e4b15a20_Param>>({jule::new_struct_ptr<_1e4b15a20_Param>(new( std::nothrow ) _1e4b15a20_Param(_1e3bad8dd_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1e6420856_TypeSymbol>(),jule::Str("self", 4)))}),jule::Ptr<_1e398ee72_Struct>(),jule::Slice<jule::Ptr<_1e4b15a20_FnIns>>()))}),jule::Slice<jule::Ptr<_1e398ee72_Struct>>()));
static jule::Ptr<_1e4d61232_Trait> _1c8ac49ea_BUILTIN_TRAIT_DISPOSE = jule::new_struct_ptr<_1e4d61232_Trait>(new( std::nothrow ) _1e4d61232_Trait(_1e3bad8dd_Token(),jule::Str("Dispose", 7),true,jule::Bool(),jule::Str(),jule::Slice<jule::Ptr<_1e4b15a20_Fn>>({jule::new_struct_ptr<_1e4b15a20_Fn>(new( std::nothrow ) _1e4b15a20_Fn(jule::Ptr<_1e5054722_Sema>(),_1e3bad8dd_Token(),jule::Bool(),jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str("dispose", 7),jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>(),jule::Str(),jule::Ptr<_1e38d4ec7_ScopeTree>(),jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>>(),jule::Ptr<_1e4b15a20_RetType>(),jule::Slice<jule::Ptr<_1e4b15a20_Param>>({jule::new_struct_ptr<_1e4b15a20_Param>(new( std::nothrow ) _1e4b15a20_Param(_1e3bad8dd_Token(),true,jule::Bool(),jule::Bool(),jule::Ptr<_1e6420856_TypeSymbol>(),jule::Str("self", 4)))}),jule::Ptr<_1e398ee72_Struct>(),jule::Slice<jule::Ptr<_1e4b15a20_FnIns>>()))}),jule::Slice<jule::Ptr<_1e398ee72_Struct>>()));
static jule::Slice<jule::Str> _1e36600a4_FLAGS = nullptr;
static jule::Slice<jule::Any> _1e249646e_deads = nullptr;
static jule::Slice<jule::Any> _1e249646e_checking = nullptr;
static jule::Any _1e249646e_current = jule::Any(nullptr);
static jule::Any _1e249646e_main_current = jule::Any(nullptr);
static jule::Array<jule::Int,12> _1c9110233_MDAYS = jule::Array<jule::Int,12>({31LL,30LL,31LL,30LL,31LL,31LL,30LL,31LL,30LL,31LL,31LL,29LL});
static jule::Slice<jule::U8> _1c9006426_INDENT = nullptr;
static jule::Str _1e24951c6_OS = jule::Str("darwin", 6);
static jule::Ptr<_1e3cd67d5_RangeTable> _1e3ccedc7_LETTER = _1e3ccedc7__L;
static jule::Array<_1e3cc002c_accept_range,16> _1e3cc002c_ACCEPT_RANGES = jule::Array<_1e3cc002c_accept_range,16>({_1e3cc002c_accept_range(128LLU,191LLU),_1e3cc002c_accept_range(160LLU,191LLU),_1e3cc002c_accept_range(128LLU,159LLU),_1e3cc002c_accept_range(144LLU,191LLU),_1e3cc002c_accept_range(128LLU,143LLU)});
static jule::Str _1e24951c6_ARCH = jule::Str("amd64", 5);
static jule::Array<jule::Array<jule::Str,2>,4> _1e2408d0a_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,4>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)})});
static jule::Array<jule::U8,256> _1e3cc002c_FIRST = jule::Array<jule::U8,256>({});
static jule::Array<jule::U8,256> _1e3ccedc7__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});

inline void _1e240937c_AnsiEscape::_static_method_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void _1e240937c_AnsiEscape::_static_method_print(jule::Str _2021_escape,jule::Str _2034_text) {
	jule::out(_2021_escape);
	jule::out(_2034_text);
	_1e240937c_AnsiEscape::_static_method_reset();
}







std::ostream &operator<<(std::ostream &_Stream, const _1e240937c_AnsiEscape &_Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void _1e240937c_Logger::_static_method_log_flat(_1e24777a2_Log& _3125_l) {
	jule::outln(_3125_l._field_text);
}



inline void _1e240937c_Logger::_static_method_log_error(_1e24777a2_Log& _3426_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_3426_l._field_text);
	_1e240937c_AnsiEscape::_static_method_reset();
	if (_3426_l._field_path.len() != 0LL) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_3426_l._field_path);
	}
	if ((_3426_l._field_row != 0LL) && (_3426_l._field_column != 0LL)) {
		jule::out(jule::Str(":", 1));
		jule::out(_1e3417be7_itoa(_3426_l._field_row));
		jule::out(jule::Str(":", 1));
		jule::out(_1e3417be7_itoa(_3426_l._field_column));
	}
	if (_3426_l._field_line.len() != 0LL) {
		jule::Str _5121_line = _3426_l._field_line.ltrim(jule::Str("\r\n\v\b ", 5));
		jule::I64 _5221_offset = (_3426_l._field_line.len() - _5121_line.len()) + 1LL;
		jule::I64 _5321_old_len = _5121_line.len();
		_5121_line=_5121_line.ltrim(jule::Str("\t", 1));
		if (_5321_old_len != _5121_line.len()) {
			_5221_offset+=static_cast<jule::I64>((_5321_old_len - _5121_line.len()) * 8LL);
		}
		jule::out(jule::Str("\n  ", 3));
		jule::Str _5917_row = _1e3417be7_itoa(_3426_l._field_row);
		jule::out(_5917_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_5121_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1e2408d0a_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_5917_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1e2408d0a_str_repeat(jule::Str(" ", 1),static_cast<jule::Int>(_3426_l._field_column - _5221_offset)));
		jule::out(jule::Str("^", 1));
		if (_3426_l._field_suggestion.len() != 0LL) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1e2408d0a_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_5917_row.len())));
			jule::out(jule::Str(" | ", 3));
			_1e240937c_AnsiEscape::_static_method_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_3426_l._field_suggestion);
		}
	}
	jule::outln(jule::Str("\n", 1));
}



inline void _1e240937c_Logger::_static_method_log(_1e24777a2_Log& _8020_l) {
	{
		auto &_match_expr{ _8020_l._field_kind };
		if (!((0LLU) == _match_expr)) { goto _case_end_4741392576; }
		_case_begin_4741392576:;
		{
			_1e240937c_Logger::_static_method_log_flat(_8020_l);
		}
		goto _match_end_4741392448;
		_case_end_4741392576:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4741392672; }
		_case_begin_4741392672:;
		{
			_1e240937c_Logger::_static_method_log_error(_8020_l);
		}
		goto _match_end_4741392448;
		_case_end_4741392672:;
		_match_end_4741392448:;
	}
}



inline void _1e240937c_Logger::_static_method_print_logs(jule::Slice<_1e24777a2_Log>& _8827_logs) {
	{
		auto &expr = _8827_logs;
		auto it = expr.begin();
		_iter_begin_4741396112:;
		if (it != expr.end()) {
			_1e24777a2_Log &_1e240937c_l = *it;
			{
				_1e240937c_Logger::_static_method_log(_1e240937c_l);
			}
			_iter_next_4741396112:;
			++it;
			goto _iter_begin_4741396112;
		}
		_iter_end_4741396112:;
	}
	jule::out(jule::Str("=== ", 4));
	jule::out(_1e3417be7_itoa(static_cast<jule::I64>(_8827_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, const _1e240937c_Logger &_Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1e2517b61_LazyBuff::_method_index(jule::Int _5324_i) {
	if ((*this)._field_buff != nullptr) {
		return (*this)._field_buff[_5324_i];
	}
	return (*this)._field_path[_5324_i];
}



inline void _1e2517b61_LazyBuff::_method_append(jule::U8 _6025_c) {
	if ((*this)._field_buff == nullptr) {
		if (((*this)._field_w < (*this)._field_path.len()) && ((*this)._field_path[(*this)._field_w] == _6025_c)) {
			((*this)._field_w)++;
			return;
		}
		(*this)._field_buff=jule::Slice<jule::U8>::alloc(static_cast<jule::I64>((*this)._field_path.len()));
		copy((*this)._field_buff,static_cast<jule::Slice<jule::U8>>((*this)._field_path.slice(0LL,(*this)._field_w)));
	}
	(*this)._field_buff[(*this)._field_w]=_6025_c;
	((*this)._field_w)++;
}



inline jule::Str _1e2517b61_LazyBuff::_method_string(void) {
	if ((*this)._field_buff == nullptr) {
		return (*this)._field_vol_and_path.slice(0LL,(*this)._field_vol_len + (*this)._field_w);
	}
	return (*this)._field_vol_and_path.slice(0LL,(*this)._field_vol_len) + static_cast<jule::Str>((*this)._field_buff.slice(0LL,(*this)._field_w));
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2517b61_LazyBuff &_Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e24777a2_Log &_Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e3b6c072_bits_error::_method_error(void) {
	return jule::Str("runtime error: ", 15) + (*this)._field_message;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e3b6c072_bits_error &_Src) {
	_Stream << "bits_error{";
	_Stream << "message:" << _Src._field_message;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2495d64_FloatInfo &_Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2495d64_DecimalSlice &_Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e34a359b_LeftCheat &_Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e34a359b_Decimal::_method_set(jule::Str _22922_s) {
	jule::Bool _22932_ok = jule::Bool();
	jule::Int _23017_i = 0LL;
	(*this)._field_neg=false;
	(*this)._field_trunc=false;
	if (_23017_i >= _22922_s.len()) {
		return _22932_ok;
	}
	{
		if (!((_22922_s[_23017_i] == '+'))) { goto _case_end_4721003376; }
		_case_begin_4721003376:;
		{
			(_23017_i)++;
		}
		goto _match_end_4721002896;
		_case_end_4721003376:;
		if (!((_22922_s[_23017_i] == '-'))) { goto _case_end_4721003472; }
		_case_begin_4721003472:;
		{
			(*this)._field_neg=true;
			(_23017_i)++;
		}
		goto _match_end_4721002896;
		_case_end_4721003472:;
		_match_end_4721002896:;
	}
	jule::Bool _24717_sawdot = false;
	jule::Bool _24817_sawdigits = false;
	for (; _23017_i < _22922_s.len(); (_23017_i)++) {
		{
			{
				if (!((_22922_s[_23017_i] == '.'))) { goto _case_end_4721009184; }
				_case_begin_4721009184:;
				{
					if (_24717_sawdot) {
						return _22932_ok;
					}
					_24717_sawdot=true;
					(*this)._field_dp=(*this)._field_nd;
					goto _iter_next_4721007328;
				}
				goto _match_end_4721008960;
				_case_end_4721009184:;
				if (!((('0' <= _22922_s[_23017_i]) && (_22922_s[_23017_i] <= '9')))) { goto _case_end_4721009296; }
				_case_begin_4721009296:;
				{
					_24817_sawdigits=true;
					if ((_22922_s[_23017_i] == '0') && ((*this)._field_nd == 0LL)) {
						((*this)._field_dp)--;
						goto _iter_next_4721007328;
					}
					if ((*this)._field_nd < 800LL) {
						(*this)._field_d[(*this)._field_nd]=_22922_s[_23017_i];
						((*this)._field_nd)++;
					} else if (_22922_s[_23017_i] != '0') {
						(*this)._field_trunc=true;
					}
					goto _iter_next_4721007328;
				}
				goto _match_end_4721008960;
				_case_end_4721009296:;
				_match_end_4721008960:;
			}
			goto _iter_end_4721007328;
		}
	_iter_next_4721007328:;
	}
	_iter_end_4721007328:;
	if ((!(_24817_sawdigits))) {
		return _22932_ok;
	}
	if ((!(_24717_sawdot))) {
		(*this)._field_dp=(*this)._field_nd;
	}
	if ((_23017_i < _22922_s.len()) && (_1e24a4812_lower(_22922_s[_23017_i]) == 'e')) {
		(_23017_i)++;
		if (_23017_i >= _22922_s.len()) {
			return _22932_ok;
		}
		jule::Int _29121_esign = 1LL;
		if (_22922_s[_23017_i] == '+') {
			(_23017_i)++;
		} else if (_22922_s[_23017_i] == '-') {
			(_23017_i)++;
			_29121_esign=-1LL;
		}
		if (((_23017_i >= _22922_s.len()) || (_22922_s[_23017_i] < '0')) || (_22922_s[_23017_i] > '9')) {
			return _22932_ok;
		}
		jule::Int _30121_e = 0LL;
		for (; (_23017_i < _22922_s.len()) && (('0' <= _22922_s[_23017_i]) && (_22922_s[_23017_i] <= '9')); (_23017_i)++) {
			{
				if (_30121_e < 10000LL) {
					_30121_e=static_cast<jule::Int>(((_30121_e * 10LL) + static_cast<jule::Int>(_22922_s[_23017_i])) - '0');
				}
			}
		_iter_next_4721026832:;
		}
		_iter_end_4721026832:;
		(*this)._field_dp+=static_cast<jule::Int>(_30121_e * _29121_esign);
	}
	if (_23017_i != _22922_s.len()) {
		return _22932_ok;
	}
	_22932_ok=true;
	return _22932_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1e34a359b_Decimal::_method_float_bits(_1e2495d64_FloatInfo& _31830_flt) {
	jule::U64 _31848_b = jule::U64();
	jule::Bool _31856_overflow = jule::Bool();
	jule::Int _31917_exp = 0LL;
	jule::U64 _32017_mant = 0LLU;
	if ((*this)._field_nd == 0LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	if ((*this)._field_dp > 310LL) {
		goto _julec_label_overflow;
	}
	if ((*this)._field_dp < -330LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	_31917_exp=0LL;
	while ((*this)._field_dp > 0LL) {
		{
			jule::Int _34521_n = 0LL;
			if ((*this)._field_dp >= _1e3307ee4_POWTAB.len()) {
				_34521_n=27LL;
			} else {
				_34521_n=_1e3307ee4_POWTAB[(*this)._field_dp];
			}
			(*this)._method_shift(static_cast<jule::Int>((-(_34521_n))));
			_31917_exp+=_34521_n;
		}
	_iter_next_4721046512:;
	}
	_iter_end_4721046512:;
	while (((*this)._field_dp < 0LL) || (((*this)._field_dp == 0LL) && ((*this)._field_d.__at(0LL) < '5'))) {
		{
			jule::Int _35521_n = 0LL;
			if ((-((*this)._field_dp)) >= _1e3307ee4_POWTAB.len()) {
				_35521_n=27LL;
			} else {
				_35521_n=_1e3307ee4_POWTAB[(-((*this)._field_dp))];
			}
			(*this)._method_shift(_35521_n);
			_31917_exp-=_35521_n;
		}
	_iter_next_4721051872:;
	}
	_iter_end_4721051872:;
	(_31917_exp)--;
	if (_31917_exp < (_31830_flt._field_bias + 1LL)) {
		jule::Int _37217_n = (_31830_flt._field_bias + 1LL) - _31917_exp;
		(*this)._method_shift(static_cast<jule::Int>((-(_37217_n))));
		_31917_exp+=_37217_n;
	}
	if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
		goto _julec_label_overflow;
	}
	(*this)._method_shift(static_cast<jule::Int>(1LL + _31830_flt._field_mantbits));
	_32017_mant=static_cast<jule::U64>((*this)._method_rounded_integer());
	if (_32017_mant == (2LL << _31830_flt._field_mantbits)) {
		_32017_mant>>=1LL;
		(_31917_exp)++;
		if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
			goto _julec_label_overflow;
		}
	}
	if ((_32017_mant & (1LL << _31830_flt._field_mantbits)) == 0LL) {
		_31917_exp=_31830_flt._field_bias;
	}
	goto _julec_label_out;
	_julec_label_overflow:;
	_32017_mant=0LL;
	_31917_exp=static_cast<jule::Int>(((1LL << _31830_flt._field_expbits) - 1LL) + _31830_flt._field_bias);
	_31856_overflow=true;
	_julec_label_out:;
	jule::U64 _40817_bits = _32017_mant & ((static_cast<jule::U64>(1LLU) << _31830_flt._field_mantbits) - 1LL);
	_40817_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_31917_exp - _31830_flt._field_bias) & ((1LL << _31830_flt._field_expbits) - 1LL)) << _31830_flt._field_mantbits);
	if ((*this)._field_neg) {
		_40817_bits|=static_cast<jule::Int>((1LL << _31830_flt._field_mantbits) << _31830_flt._field_expbits);
	}
	_31848_b = _40817_bits;
	return std::make_tuple(_31848_b,_31856_overflow);
}



inline void _1e34a359b_Decimal::_method_assign(jule::U64 _15229_v) {
	jule::Array<jule::U8,24> _15317_buf = jule::Array<jule::U8,24>();
	jule::Int _15617_n = 0LL;
	while (_15229_v > 0LL) {
		{
			jule::U64 _15817_v1 = jule::unsafe_div(_15229_v,10LL);
			_15229_v-=static_cast<jule::U64>(10LL * _15817_v1);
			_15317_buf[_15617_n]=static_cast<jule::U8>(_15229_v + '0');
			(_15617_n)++;
			_15229_v=_15817_v1;
		}
	_iter_next_4721082016:;
	}
	_iter_end_4721082016:;
	(*this)._field_nd=0LL;
	(_15617_n)--;
	for (; _15617_n >= 0LL; (_15617_n)--) {
		{
			(*this)._field_d[(*this)._field_nd]=_15317_buf[_15617_n];
			((*this)._field_nd)++;
		}
	_iter_next_4721084736:;
	}
	_iter_end_4721084736:;
	(*this)._field_dp=(*this)._field_nd;
	_1e34a359b_trim((*this));
}



inline void _1e34a359b_Decimal::_method_shift(jule::Int _17728_k) {
	{
		if (!(((*this)._field_nd == 0LL))) { goto _case_end_4721091312; }
		goto _match_end_4721091072;
		_case_end_4721091312:;
		if (!((_17728_k > 0LL))) { goto _case_end_4721091424; }
		_case_begin_4721091424:;
		{
			while (_17728_k > 60LLU) {
				{
					_1e34a359b_left_shift((*this),60LLU);
					_17728_k-=60LLU;
				}
			_iter_next_4721092608:;
			}
			_iter_end_4721092608:;
			_1e34a359b_left_shift((*this),static_cast<jule::Uint>(_17728_k));
		}
		goto _match_end_4721091072;
		_case_end_4721091424:;
		if (!((_17728_k < 0LL))) { goto _case_end_4721091536; }
		_case_begin_4721091536:;
		{
			while (_17728_k < -60LL) {
				{
					_1e34a359b_right_shift((*this),60LLU);
					_17728_k+=60LLU;
				}
			_iter_next_4721095408:;
			}
			_iter_end_4721095408:;
			_1e34a359b_right_shift((*this),static_cast<jule::Uint>((-(_17728_k))));
		}
		goto _match_end_4721091072;
		_case_end_4721091536:;
		_match_end_4721091072:;
	}
}



inline void _1e34a359b_Decimal::_method_round_down(jule::Int _19729_nd) {
	if ((_19729_nd < 0LL) || (_19729_nd >= (*this)._field_nd)) {
		return;
	}
	(*this)._field_nd=_19729_nd;
	_1e34a359b_trim((*this));
}



inline void _1e34a359b_Decimal::_method_round_up(jule::Int _20627_nd) {
	if ((_20627_nd < 0LL) || (_20627_nd >= (*this)._field_nd)) {
		return;
	}
	jule::Int _21217_i = _20627_nd - 1LL;
	for (; _21217_i >= 0LL; (_21217_i)--) {
		{
			jule::U8 _21417_c = (*this)._field_d[_21217_i];
			if (_21417_c < '9') {
				((*this)._field_d[_21217_i])++;
				(*this)._field_nd=static_cast<jule::Int>(_21217_i + 1LL);
				return;
			}
		}
	_iter_next_4721102848:;
	}
	_iter_end_4721102848:;
	(*this)._field_d.__at(0LL)='1';
	(*this)._field_nd=1LL;
	((*this)._field_dp)++;
}



inline void _1e34a359b_Decimal::_method_round(jule::Int _23324_nd) {
	if ((_23324_nd < 0LL) || (_23324_nd >= (*this)._field_nd)) {
		return;
	}
	if (_1e34a359b_should_round_up((*this),_23324_nd)) {
		(*this)._method_round_up(_23324_nd);
	} else {
		(*this)._method_round_down(_23324_nd);
	}
}



inline jule::U64 _1e34a359b_Decimal::_method_rounded_integer(void) {
	if ((*this)._field_dp > 20LL) {
		return jule::MAX_U64;
	}
	jule::Int _25017_i = 0LL;
	jule::U64 _25117_n = 0LLU;
	for (; (_25017_i < (*this)._field_dp) && (_25017_i < (*this)._field_nd); (_25017_i)++) {
		{
			_25117_n=static_cast<jule::U64>((_25117_n * 10LL) + static_cast<jule::U64>((*this)._field_d[_25017_i] - '0'));
		}
	_iter_next_4721113584:;
	}
	_iter_end_4721113584:;
	for (; _25017_i < (*this)._field_dp; (_25017_i)++) {
		{
			_25117_n*=10LL;
		}
	_iter_next_4721117552:;
	}
	_iter_end_4721117552:;
	if (_1e34a359b_should_round_up((*this),(*this)._field_dp)) {
		(_25117_n)++;
	}
	return _25117_n;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e34a359b_Decimal &_Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e3cd67d5_FoldPair &_Src) {
	_Stream << "FoldPair{";
	_Stream << "from:" << _Src._field_from << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e3cd67d5_CaseRange &_Src) {
	_Stream << "CaseRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "delta:" << _Src._field_delta;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e3cd67d5_Range16 &_Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e3cd67d5_Range32 &_Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e3cd67d5_RangeTable &_Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e3cc002c_accept_range &_Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4789980_DirEntry &_Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Slice<jule::Ptr<_1e4789980_DirEntry>>,jule::Int> _1e4789980_Directory::_static_method_read(jule::Str _1624_path) {
	jule::Slice<jule::Ptr<_1e4789980_DirEntry>> _1637_dirents = jule::Slice<jule::Ptr<_1e4789980_DirEntry>>();
	jule::Int _1659_err = 0LLU;
	DIR* _1717_dir = _1e25838e1_opendir((&(_1624_path[0LL])));
	if (_1717_dir == nullptr) {
		_1659_err=_1e3cdbc80_get_last_fs_error();
		return std::make_tuple(_1637_dirents,_1659_err);
	}
	for (;;) {
		{
			struct dirent* _2317_dirent = _1e25838e1_readdir(_1717_dir);
			if (_2317_dirent == nullptr) {
				goto _iter_end_4725633760;
			}
			jule::Str _2717_name = _1e25ebd33_byte_ptr_to_str(((jule::U8*)(_2317_dirent->d_name)));
			jule::Ptr<_1e4798395_Status> _2822_stat;
			jule::Int _2828_serr;
			std::tie(_2822_stat,_2828_serr) = _1e4798395_Status::_static_method_of(_1e2517b61_join(jule::Slice<jule::Str>({_1624_path,_2717_name})));
			if (_2828_serr != 0LLU) {
				_1659_err=_2828_serr;
				_1637_dirents=nullptr;
				goto _iter_end_4725633760;
			}
			_1637_dirents.push(jule::new_struct<_1e4789980_DirEntry>(new( std::nothrow ) _1e4789980_DirEntry(_2717_name,_2822_stat)));
		}
	_iter_next_4725633760:;
	}
	_iter_end_4725633760:;
	_1e25838e1_closedir(_1717_dir);
	return std::make_tuple(_1637_dirents,_1659_err);
}



inline jule::Int _1e4789980_Directory::_static_method_create(jule::Str _4626_path) {
	if (_1e25838e1_mkdir((&(_4626_path[0LL])),448LL) == 0LL) {
		return 0LLU;
	}
	return _1e3cdbc80_get_last_fs_error();
}



inline jule::Int _1e4789980_Directory::_static_method_remove(jule::Str _5926_path) {
	if (_1e25838e1_rmdir((&(_5926_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _1e3cdbc80_get_last_fs_error();
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4789980_Directory &_Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_1e479bce4_File>,jule::Int> _1e479bce4_File::_static_method_open(jule::Str _1924_path,jule::Int _1935_flag,jule::Int _1948_mode) {
	jule::Int _2013_handle = _1e25838e1_open((&(_1924_path[0LL])),static_cast<jule::Int>(_1935_flag),_1948_mode);
	if (_2013_handle == -1LL) {
		return std::make_tuple(_1e479bce4_File::_static_method_new(0LLU),_1e3cdbc80_get_last_fs_error());
	}
	return std::make_tuple(_1e479bce4_File::_static_method_new(static_cast<jule::Uintptr>(_2013_handle)),0LLU);
}



inline jule::Int _1e479bce4_File::_static_method_remove(jule::Str _3126_path) {
	if (_1e25838e1_unlink((&(_3126_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _1e3cdbc80_get_last_fs_error();
}



inline std::tuple<jule::Int,jule::Int> _1e479bce4_File::_method_write(jule::Slice<jule::U8> _4728_buff) {
	jule::Int _4744_n = jule::Int();
	if (_4728_buff.len() == 0LL) {
		_4744_n = 0LL;
		return std::make_tuple(_4744_n,0LLU);
	}
	_4744_n=static_cast<jule::Int>(static_cast<jule::Int>(_1e25c1544_write(static_cast<jule::Int>((*this)._field_handle),(&(_4728_buff[0LL])),static_cast<jule::Uint>(_4728_buff.len()))));
	if (_4744_n == -1LL) {
		_4744_n = 0LL;
		return std::make_tuple(_4744_n,_1e3cdbc80_get_last_fs_error());
	}
	return std::make_tuple(_4744_n,0LLU);
}



inline std::tuple<jule::Int,jule::Int> _1e479bce4_File::_method_read(jule::Slice<jule::U8> _6931_buff) {
	jule::Int _6947_n = jule::Int();
	if (_6931_buff.len() == 0LL) {
		_6947_n = 0LL;
		return std::make_tuple(_6947_n,0LLU);
	}
	_6947_n=static_cast<jule::Int>(static_cast<jule::Int>(_1e25c1544_read(static_cast<jule::Int>((*this)._field_handle),(&(_6931_buff[0LL])),static_cast<jule::Uint>(_6931_buff.len()))));
	if (_6947_n == -1LL) {
		_6947_n=0LL;
		return std::make_tuple(_6947_n,_1e3cdbc80_get_last_fs_error());
	}
	return std::make_tuple(_6947_n,0LLU);
}



inline jule::Ptr<_1e479bce4_File> _1e479bce4_File::_static_method_new(jule::Uintptr _4523_handle) {
	return jule::new_struct<_1e479bce4_File>(new( std::nothrow ) _1e479bce4_File(_4523_handle));
}



inline std::tuple<jule::Ptr<_1e479bce4_File>,jule::Int> _1e479bce4_File::_static_method_create(jule::Str _5526_path) {
	jule::Ptr<_1e479bce4_File> _5618_f;
	jule::Int _5621_err;
	std::tie(_5618_f,_5621_err) = _1e479bce4_File::_static_method_open(_5526_path,1538LL,438LL);
	return std::make_tuple(_5618_f,_5621_err);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Int> _1e479bce4_File::_static_method_read(jule::Str _6824_path) {
	jule::Ptr<_1e4798395_Status> _6914_s;
	jule::Int _6921_err;
	std::tie(_6914_s,_6921_err) = _1e4798395_Status::_static_method_of(_6824_path);
	if (_6921_err != 0LLU) {
		return std::make_tuple(nullptr,_6921_err);
	}
	if ((!(_6914_s->_method_is_reg()))) {
		return std::make_tuple(nullptr,15LLU);
	}
	if (_6914_s->_field_size == 0LL) {
		return std::make_tuple(jule::Slice<jule::U8>::alloc(0LL),0LLU);
	}
	jule::Ptr<_1e479bce4_File> _8218_f;
	std::tie(_8218_f,_6921_err) = _1e479bce4_File::_static_method_open(_6824_path,0LL,0LL);
	if (_6921_err != 0LLU) {
		return std::make_tuple(nullptr,_6921_err);
	}
	__JULE_DEFER({
		_8218_f->_method_close();
	});
	jule::Slice<jule::U8> _8817_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(_6914_s->_field_size));
	jule::Int _8914_n;
	std::tie(_8914_n,_6921_err) = _8218_f->_method_read(_8817_buff);
	if (_6921_err != 0LLU) {
		return std::make_tuple(nullptr,_6921_err);
	}
	return std::make_tuple(_8817_buff.slice(0LL,_8914_n),0LLU);
}



inline jule::Int _1e479bce4_File::_static_method_write(jule::Str _10125_path,jule::Slice<jule::U8> _10136_data,jule::Int _10150_perm) {
	jule::Ptr<_1e479bce4_File> _10218_f;
	jule::Int _10225_err;
	std::tie(_10218_f,_10225_err) = _1e479bce4_File::_static_method_open(_10125_path,1537LL,_10150_perm);
	if (_10225_err != 0LLU) {
		return _10225_err;
	}
	std::tie(std::ignore,_10225_err) = _10218_f->_method_write(_10136_data);
	if (_10225_err != 0LLU) {
		return _10225_err;
	}
	return _10218_f->_method_close();
}



inline std::tuple<jule::I64,jule::Int> _1e479bce4_File::_method_seek(jule::I64 _12227_offset,jule::Int _12240_origin) {
	jule::I64 _12313_pos = _1e25c1544_seek(static_cast<jule::Int>((*this)._field_handle),_12227_offset,static_cast<jule::Int>(_12240_origin));
	return std::make_tuple(_12313_pos,0LLU);
}



inline jule::Int _1e479bce4_File::_method_close(void) {
	if (_1e25c1544_close(static_cast<jule::Int>((*this)._field_handle)) == -1LL) {
		return _1e3cdbc80_get_last_fs_error();
	}
	return 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e479bce4_File &_Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_1e4798395_Status>,jule::Int> _1e4798395_Status::_static_method_of(jule::Str _1222_path) {
	jule::Ptr<_1e4798395_Status> _1235_s = jule::Ptr<_1e4798395_Status>();
	jule::Int _1247_err = 0LLU;
	struct stat _1317_handle = (struct stat){};
	jule::Int _1413_code = _1e25838e1_stat((&(_1222_path[0LL])),(&(_1317_handle)));
	if (_1413_code != -1LL) {
		_1247_err=0LLU;
		_1235_s=jule::new_struct<_1e4798395_Status>(new( std::nothrow ) _1e4798395_Status(static_cast<jule::Uint>(_1317_handle.st_mode),static_cast<jule::Uint>(_1317_handle.st_size)));
	} else {
		_1247_err=_1e3cdbc80_get_last_fs_error();
	}
	return std::make_tuple(_1235_s,_1247_err);
}



inline jule::Bool _1e4798395_Status::_method_is_dir(void) {
	return ((*this)._field_mode & 16384LL) == 16384LL;
}



inline jule::Bool _1e4798395_Status::_method_is_reg(void) {
	return ((*this)._field_mode & 32768LL) == 32768LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4798395_Status &_Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}



inline jule::Int _1e3bad8dd_Token::_method_prec(void) {
	if ((*this)._field_id != 7LLU) {
		return -1LL;
	}
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr || (jule::Str("%", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str(">>", 2)) == _match_expr || (jule::Str("<<", 2)) == _match_expr || (jule::Str("&", 1)) == _match_expr)) { goto _case_end_4726137664; }
		_case_begin_4726137664:;
		{
			return 5LL;
		}
		goto _match_end_4726136096;
		_case_end_4726137664:;
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4726137760; }
		_case_begin_4726137760:;
		{
			return 4LL;
		}
		goto _match_end_4726136096;
		_case_end_4726137760:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("=", 1)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str("<=", 2)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4726138016; }
		_case_begin_4726138016:;
		{
			return 3LL;
		}
		goto _match_end_4726136096;
		_case_end_4726138016:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4726138112; }
		_case_begin_4726138112:;
		{
			return 2LL;
		}
		goto _match_end_4726136096;
		_case_end_4726138112:;
		if (!((jule::Str("||", 2)) == _match_expr)) { goto _case_end_4726138208; }
		_case_begin_4726138208:;
		{
			return 1LL;
		}
		goto _match_end_4726136096;
		_case_end_4726138208:;
		_case_begin_4726136352:;
		{
			return -1LL;
		}
		goto _match_end_4726136096;
		_case_end_4726136352:;
		_match_end_4726136096:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1e3bad8dd_Token &_Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e3beedd5_File::_method_is_ok(void) {
	jule::Int _1917_err;
	std::tie(std::ignore,_1917_err) = _1e4798395_Status::_static_method_of((*this)._field__path);
	return _1917_err == 0LLU;
}



inline void _1e3beedd5_File::_method_fill(jule::Slice<jule::U8> _2431_data) {
	(*this)._field_data=_2431_data;
}



inline jule::Str _1e3beedd5_File::_method_path(void) {
	return (*this)._field__path;
}



inline jule::Str _1e3beedd5_File::_method_dir(void) {
	return _1e2517b61_dir((*this)._field__path);
}



inline jule::Str _1e3beedd5_File::_method_name(void) {
	return _1e2517b61_base((*this)._field__path);
}



inline jule::Uintptr _1e3beedd5_File::_method_addr(void) {
	return ((jule::Uintptr)((&((*this)))));
}



inline jule::Slice<_1e3bad8dd_Token> _1e3beedd5_File::_method_tokens(void) {
	return (*this)._field__tokens;
}



inline jule::Str _1e3beedd5_File::_method_get_row(jule::Int _4426_row) {
	jule::Int _4517_n = 0LL;
	jule::Int _4617_line_start = 0LL;
	jule::Int _4717_i = 0LL;
	for (; _4717_i < (*this)._field_data.len(); (_4717_i)++) {
		{
			if ((*this)._field_data[_4717_i] != '\n') {
				goto _iter_next_4726158176;
			}
			(_4517_n)++;
			if (_4517_n == _4426_row) {
				return static_cast<jule::Str>((*this)._field_data.slice(_4617_line_start,_4717_i));
			}
			_4617_line_start=static_cast<jule::Int>(_4717_i + 1LL);
		}
	_iter_next_4726158176:;
	}
	_iter_end_4726158176:;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, const _1e3beedd5_File &_Src) {
	_Stream << "File{";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "_path:" << _Src._field__path << ", ";
	_Stream << "_tokens:" << _Src._field__tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e390539e_KindPair &_Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1e390539e_Lex::_method_push_err(jule::Str _40327_fmt,jule::Slice<jule::Any> _40340_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.push(_1e390539e_make_err((*this)._field_row,(*this)._field_column,(*this)._field_file,_40327_fmt,_40340_args));
}



inline void _1e390539e_Lex::_method_push_err_tok(_1e3bad8dd_Token& _40832_token,jule::Str _40846_fmt) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.push(_1e390539e_make_err(_40832_token._field_row,_40832_token._field_column,(*this)._field_file,_40846_fmt,jule::Slice<jule::Any>()));
}



inline void _1e390539e_Lex::_method_lex(void) {
	(*this)._field_errors=nullptr;
	(*this)._method_new_line();
	while ((*this)._field_pos < (*this)._field_file->_field_data.len()) {
		{
			_1e3bad8dd_Token _41821_token = (*this)._method_token();
			if (_41821_token._field_id != 0LLU) {
				(*this)._field_tokens = jule::alloc_for_append((*this)._field_tokens,1);(*this)._field_tokens.push(_41821_token);
			}
		}
	_iter_next_4726172400:;
	}
	_iter_end_4726172400:;
}



inline jule::Str _1e390539e_Lex::_method_id(jule::Slice<jule::U8>& _42722_ln) {
	if (_42722_ln.len() == 0LL) {
		return jule::Str();
	}
	jule::I32 _43114_r;
	jule::Int _43121_i;
	std::tie(_43114_r,_43121_i) = _1e3cc002c_decode_rune(_42722_ln);
	if ((_43114_r != '_') && (!(_1e3bad8dd_is_letter(_43114_r)))) {
		return jule::Str();
	}
	while (_43121_i < _42722_ln.len()) {
		{
			jule::I32 _43718_r;
			jule::Int _43721_n;
			std::tie(_43718_r,_43721_n) = _1e3cc002c_decode_rune(_42722_ln.slice(_43121_i));
			if (((_43718_r != '_') && (!(_1e3bad8dd_is_decimal(static_cast<jule::U8>(_43718_r))))) && (!(_1e3bad8dd_is_letter(_43718_r)))) {
				(*this)._field_pos+=_43121_i;
				return static_cast<jule::Str>(_42722_ln.slice(0LL,_43121_i));
			}
			_43121_i+=_43721_n;
		}
	_iter_next_4726186128:;
	}
	_iter_end_4726186128:;
	(*this)._field_pos+=static_cast<jule::I64>(_42722_ln.len());
	return static_cast<jule::Str>(_42722_ln);
}



inline jule::Slice<jule::U8> _1e390539e_Lex::_method_resume(void) {
	jule::Int _45217_i = (*this)._field_pos;
	for (; _45217_i < (*this)._field_file->_field_data.len(); (_45217_i)++) {
		{
			jule::I32 _45417_r = static_cast<jule::I32>((*this)._field_file->_field_data[_45217_i]);
			if (_1e3bad8dd_is_space(_45417_r)) {
				((*this)._field_pos)++;
				{
					auto &_match_expr{ _45417_r };
					if (!(('\n') == _match_expr)) { goto _case_end_4726198048; }
					_case_begin_4726198048:;
					{
						(*this)._method_new_line();
					}
					goto _match_end_4726197952;
					_case_end_4726198048:;
					if (!(('\t') == _match_expr)) { goto _case_end_4726199520; }
					_case_begin_4726199520:;
					{
						(*this)._field_column+=8LL;
					}
					goto _match_end_4726197952;
					_case_end_4726199520:;
					_case_begin_4726197264:;
					{
						((*this)._field_column)++;
					}
					goto _match_end_4726197952;
					_case_end_4726197264:;
					_match_end_4726197952:;
				}
				goto _iter_next_4726193184;
			}
			jule::Int _46521_j = _45217_i;
			for (; _46521_j < (*this)._field_file->_field_data.len(); (_46521_j)++) {
				{
					if ((*this)._field_file->_field_data[_46521_j] == '\n') {
						goto _iter_end_4726196448;
					}
				}
			_iter_next_4726196448:;
			}
			_iter_end_4726196448:;
			return (*this)._field_file->_field_data.slice(_45217_i,_46521_j);
		}
	_iter_next_4726193184:;
	}
	_iter_end_4726193184:;
	return nullptr;
}



inline void _1e390539e_Lex::_method_lex_line_comment(_1e3bad8dd_Token& _47740_token) {
	jule::Int _47813_start = (*this)._field_pos;
	(*this)._field_pos+=2LL;
	for (; (*this)._field_pos < (*this)._field_file->_field_data.len(); ((*this)._field_pos)++) {
		{
			jule::U8 _48217_r = (*this)._field_file->_field_data[(*this)._field_pos];
			if ((_48217_r == '\n') || (_48217_r == '\r')) {
				if ((*this)._method_is_first_token_of_line()) {
					_47740_token._field_id=18LLU;
					_47740_token._field_kind=static_cast<jule::Str>((*this)._field_file->_field_data.slice(_47813_start,(*this)._field_pos));
				}
				return;
			}
		}
	_iter_next_4726207648:;
	}
	_iter_end_4726207648:;
	if ((*this)._method_is_first_token_of_line()) {
		_47740_token._field_id=18LLU;
		_47740_token._field_kind=static_cast<jule::Str>((*this)._field_file->_field_data.slice(_47813_start));
	}
}



inline void _1e390539e_Lex::_method_lex_range_comment(void) {
	(*this)._field_pos+=2LL;
	for (; (*this)._field_pos < (*this)._field_file->_field_data.len(); ((*this)._field_pos)++) {
		{
			jule::U8 _50117_r = (*this)._field_file->_field_data[(*this)._field_pos];
			if (_50117_r == '\r') {
				goto _iter_next_4726218576;
			}
			if (_50117_r == '\n') {
				(*this)._method_new_line();
				goto _iter_next_4726218576;
			}
			(*this)._field_column+=1LL;
			if (((((*this)._field_pos + 1LL) < (*this)._field_file->_field_data.len()) && (_50117_r == '*')) && ((*this)._field_file->_field_data[(*this)._field_pos + 1LL] == '/')) {
				(*this)._field_column+=2LL;
				(*this)._field_pos+=2LL;
				return;
			}
		}
	_iter_next_4726218576:;
	}
	_iter_end_4726218576:;
	(*this)._method_push_err(jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _1e390539e_Lex::_method_num(jule::Slice<jule::U8>& _52223_txt) {
	jule::Str _52238_lit = jule::Str();
	_52238_lit=_1e390539e_hex_num(_52223_txt);
	if (_52238_lit != jule::Str()) {
		goto _julec_label_end;
	}
	_52238_lit=_1e390539e_octal_num(_52223_txt);
	if (_52238_lit != jule::Str()) {
		goto _julec_label_end;
	}
	_52238_lit=_1e390539e_binary_num(_52223_txt);
	if (_52238_lit != jule::Str()) {
		goto _julec_label_end;
	}
	_52238_lit=_1e390539e_common_num(_52223_txt);
	_julec_label_end:;
	(*this)._field_pos+=static_cast<jule::I64>(_52238_lit.len());
	return _52238_lit;
}



inline jule::Str _1e390539e_Lex::_method_escape_seq(jule::Slice<jule::U8>& _54130_txt) {
	jule::Str _54217_seq = jule::Str();
	if (_54130_txt.len() < 2LL) {
		goto _julec_label_end;
	}
	{
		auto &_match_expr{ _54130_txt[1LL] };
		if (!(('\\') == _match_expr || ('\'') == _match_expr || ('\"') == _match_expr || ('a') == _match_expr || ('b') == _match_expr || ('f') == _match_expr || ('n') == _match_expr || ('r') == _match_expr || ('t') == _match_expr || ('v') == _match_expr)) { goto _case_end_4726246272; }
		_case_begin_4726246272:;
		{
			(*this)._field_pos+=2LL;
			return static_cast<jule::Str>(_54130_txt.slice(0LL,2LL));
		}
		goto _match_end_4726245440;
		_case_end_4726246272:;
		if (!(('U') == _match_expr)) { goto _case_end_4726246480; }
		_case_begin_4726246480:;
		{
			_54217_seq=_1e390539e_big_unicode_point_escape(_54130_txt);
		}
		goto _match_end_4726245440;
		_case_end_4726246480:;
		if (!(('u') == _match_expr)) { goto _case_end_4726246576; }
		_case_begin_4726246576:;
		{
			_54217_seq=_1e390539e_little_unicode_point_escape(_54130_txt);
		}
		goto _match_end_4726245440;
		_case_end_4726246576:;
		if (!(('x') == _match_expr)) { goto _case_end_4726247328; }
		_case_begin_4726247328:;
		{
			_54217_seq=_1e390539e_hex_byte_escape(_54130_txt);
		}
		goto _match_end_4726245440;
		_case_end_4726247328:;
		_case_begin_4726244144:;
		{
			_54217_seq=_1e390539e_byte_escape(_54130_txt);
		}
		goto _match_end_4726245440;
		_case_end_4726244144:;
		_match_end_4726245440:;
	}
	_julec_label_end:;
	if (_54217_seq == jule::Str()) {
		((*this)._field_pos)++;
		(*this)._method_push_err(jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	}
	(*this)._field_pos+=static_cast<jule::I64>(_54217_seq.len());
	return _54217_seq;
}



inline jule::Str _1e390539e_Lex::_method_get_rune(jule::Slice<jule::U8>& _57528_txt,jule::Bool _57541_raw) {
	if ((!(_57541_raw)) && (_57528_txt[0LL] == '\\')) {
		return (*this)._method_escape_seq(_57528_txt);
	}
	jule::I32 _58014_r;
	jule::Int _58017_n;
	std::tie(_58014_r,_58017_n) = _1e3cc002c_decode_rune(_57528_txt);
	(*this)._field_pos+=_58017_n;
	return static_cast<jule::Str>(_58014_r);
}



inline jule::Str _1e390539e_Lex::_method_lex_rune(jule::Slice<jule::U8>& _58528_txt) {
	jule::Str _58617_run = jule::Str("'", 1);
	((*this)._field_column)++;
	jule::Int _58817_n = 0LL;
	jule::Int _58917_i = 1LL;
	for (; _58917_i < _58528_txt.len(); (_58917_i)++) {
		{
			if (_58528_txt[_58917_i] == '\r') {
				goto _iter_next_4726264176;
			}
			if (_58528_txt[_58917_i] == '\n') {
				(*this)._method_push_err(jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*this)._field_pos)++;
				(*this)._method_new_line();
				return jule::Str();
			}
			jule::Slice<jule::U8> _60117_part = _58528_txt.slice(_58917_i);
			jule::Str _60217_r = (*this)._method_get_rune(_60117_part,false);
			_58617_run+=_60217_r;
			jule::I64 _60417_length = _60217_r.len();
			(*this)._field_column+=_60417_length;
			if (_60217_r == jule::Str("'", 1)) {
				((*this)._field_pos)++;
				goto _iter_end_4726264176;
			}
			if (_60417_length > 1LL) {
				_58917_i+=static_cast<jule::I64>(_60417_length - 1LL);
			}
			(_58817_n)++;
		}
	_iter_next_4726264176:;
	}
	_iter_end_4726264176:;
	if (_58817_n == 0LL) {
		(*this)._method_push_err(jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if (_58817_n > 1LL) {
		(*this)._method_push_err(jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	}
	return _58617_run;
}



inline jule::Str _1e390539e_Lex::_method_lex_str(void) {
	jule::Str _62617_s = jule::Str();
	jule::U8 _62713_mark = (*this)._field_file->_field_data[(*this)._field_pos];
	((*this)._field_pos)++;
	jule::Bool _62913_raw = _62713_mark == '`';
	_62617_s+=static_cast<jule::Str>(_62713_mark);
	((*this)._field_column)++;
	while ((*this)._field_pos < (*this)._field_file->_field_data.len()) {
		{
			jule::U8 _63417_ch = (*this)._field_file->_field_data[(*this)._field_pos];
			if (_63417_ch == '\r') {
				goto _iter_next_4726284624;
			}
			if (_63417_ch == '\n') {
				(*this)._method_new_line();
				if ((!(_62913_raw))) {
					(*this)._method_push_err(jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*this)._field_pos)++;
					return jule::Str();
				}
			}
			jule::Slice<jule::U8> _64621_part = (*this)._field_file->_field_data.slice((*this)._field_pos);
			jule::Str _64717_r = (*this)._method_get_rune(_64621_part,_62913_raw);
			_62617_s+=_64717_r;
			(*this)._field_column+=static_cast<jule::I64>(_64717_r.len());
			if (_63417_ch == _62713_mark) {
				goto _iter_end_4726284624;
			}
		}
	_iter_next_4726284624:;
	}
	_iter_end_4726284624:;
	return _62617_s;
}



inline jule::Bool _1e390539e_Lex::_method_is_first_token_of_line(void) {
	return (*this)._field_column == 1LL;
}



inline void _1e390539e_Lex::_method_new_line(void) {
	((*this)._field_row)++;
	(*this)._field_column=1LL;
}



inline jule::Bool _1e390539e_Lex::_method_is_op(jule::Slice<jule::U8>& _66725_txt,jule::Str _66738_kind,jule::Uint _66749_id,_1e3bad8dd_Token& _66767_t) {
	if ((!(_1e390539e_bytes_has_prefix(_66725_txt,_66738_kind)))) {
		return false;
	}
	_66767_t._field_kind=_66738_kind;
	_66767_t._field_id=_66749_id;
	(*this)._field_pos+=static_cast<jule::I64>(_66738_kind.len());
	return true;
}



inline jule::Bool _1e390539e_Lex::_method_lex_basic_ops(jule::Slice<jule::U8> _67832_txt,_1e3bad8dd_Token& _67850_tok) {
	{
		auto &expr = _1e390539e_BASIC_OPS;
		auto it = expr.begin();
		_iter_begin_4726310080:;
		if (it != expr.end()) {
			_1e390539e_KindPair &_1e390539e_pair = *it;
			{
				if ((*this)._method_is_op(_67832_txt,_1e390539e_pair._field_kind,_1e390539e_pair._field_id,_67850_tok)) {
					return true;
				}
			}
			_iter_next_4726310080:;
			++it;
			goto _iter_begin_4726310080;
		}
		_iter_end_4726310080:;
	}
	return false;
}



inline jule::Bool _1e390539e_Lex::_method_lex_id(jule::Slice<jule::U8>& _68826_txt,_1e3bad8dd_Token& _68844_t) {
	jule::Str _68913_lex = (*this)._method_id(_68826_txt);
	if (_68913_lex == jule::Str()) {
		return false;
	}
	_68844_t._field_kind=_68913_lex;
	_68844_t._field_id=2LLU;
	return true;
}



inline jule::Bool _1e390539e_Lex::_method_lex_num(jule::Slice<jule::U8>& _69927_txt,_1e3bad8dd_Token& _69945_t) {
	jule::Str _70013_lex = (*this)._method_num(_69927_txt);
	if (_70013_lex == jule::Str()) {
		return false;
	}
	_69945_t._field_kind=_70013_lex;
	_69945_t._field_id=6LLU;
	return true;
}



inline _1e3bad8dd_Token _1e390539e_Lex::_method_token(void) {
	_1e3bad8dd_Token _71217_t = _1e3bad8dd_Token((*this)._field_file,jule::Int(),jule::Int(),jule::Str(),0LLU);
	jule::Slice<jule::U8> _71413_txt = (*this)._method_resume();
	if (_71413_txt == nullptr) {
		return _71217_t;
	}
	_71217_t._field_column=(*this)._field_column;
	_71217_t._field_row=(*this)._field_row;
	{
		if (!(((*this)._method_lex_num(_71413_txt,_71217_t)))) { goto _case_end_4726334000; }
		goto _match_end_4726328448;
		_case_end_4726334000:;
		if (!((_71413_txt[0LL] == '\''))) { goto _case_end_4726329968; }
		_case_begin_4726329968:;
		{
			_71217_t._field_kind=(*this)._method_lex_rune(_71413_txt);
			_71217_t._field_id=6LLU;
			return _71217_t;
		}
		goto _match_end_4726328448;
		_case_end_4726329968:;
		if (!(((_71413_txt[0LL] == '\"') || (_71413_txt[0LL] == '`')))) { goto _case_end_4726330064; }
		_case_begin_4726330064:;
		{
			_71217_t._field_kind=(*this)._method_lex_str();
			_71217_t._field_id=6LLU;
			return _71217_t;
		}
		goto _match_end_4726328448;
		_case_end_4726330064:;
		if (!((_1e390539e_bytes_has_prefix(_71413_txt,jule::Str("//", 2))))) { goto _case_end_4726330160; }
		_case_begin_4726330160:;
		{
			(*this)._method_lex_line_comment(_71217_t);
			return _71217_t;
		}
		goto _match_end_4726328448;
		_case_end_4726330160:;
		if (!((_1e390539e_bytes_has_prefix(_71413_txt,jule::Str("/*", 2))))) { goto _case_end_4726330256; }
		_case_begin_4726330256:;
		{
			(*this)._method_lex_range_comment();
			return _71217_t;
		}
		goto _match_end_4726328448;
		_case_end_4726330256:;
		if (!(((*this)._method_is_op(_71413_txt,jule::Str("(", 1),3LLU,_71217_t)) || ((*this)._method_is_op(_71413_txt,jule::Str(")", 1),3LLU,_71217_t)) || ((*this)._method_is_op(_71413_txt,jule::Str("{", 1),3LLU,_71217_t)) || ((*this)._method_is_op(_71413_txt,jule::Str("}", 1),3LLU,_71217_t)) || ((*this)._method_is_op(_71413_txt,jule::Str("[", 1),3LLU,_71217_t)) || ((*this)._method_is_op(_71413_txt,jule::Str("]", 1),3LLU,_71217_t)) || ((*this)._method_lex_basic_ops(_71413_txt,_71217_t)))) { goto _case_end_4726334512; }
		goto _match_end_4726328448;
		_case_end_4726334512:;
		if (!(((*this)._method_lex_id(_71413_txt,_71217_t)))) { goto _case_end_4726334608; }
		_case_begin_4726334608:;
		{
			{
				auto &expr = _1e390539e_KEYWORDS;
				auto it = expr.begin();
				_iter_begin_4726348848:;
				if (it != expr.end()) {
					_1e390539e_KindPair &_1e390539e_pair = *it;
					{
						if (_1e390539e_pair._field_kind == _71217_t._field_kind) {
							_71217_t._field_id=_1e390539e_pair._field_id;
							goto _iter_end_4726348848;
						}
					}
					_iter_next_4726348848:;
					++it;
					goto _iter_begin_4726348848;
				}
				_iter_end_4726348848:;
			}
		}
		goto _match_end_4726328448;
		_case_end_4726334608:;
		_case_begin_4726327904:;
		{
			jule::I32 _76418_r;
			jule::Int _76421_sz;
			std::tie(_76418_r,_76421_sz) = _1e3cc002c_decode_rune(_71413_txt);
			(*this)._method_push_err(jule::Str("undefined code content: @", 25),jule::Slice<jule::Any>({jule::Any(_76418_r)}));
			((*this)._field_column)++;
			(*this)._field_pos+=_76421_sz;
			return _71217_t;
		}
		goto _match_end_4726328448;
		_case_end_4726327904:;
		_match_end_4726328448:;
	}
	(*this)._field_column+=static_cast<jule::I64>(_71217_t._field_kind.len());
	return _71217_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e390539e_Lex &_Src) {
	_Stream << "Lex{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d45c0_Ast &_Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "impls:" << _Src._field_impls << ", ";
	_Stream << "comments:" << _Src._field_comments << ", ";
	_Stream << "decls:" << _Src._field_decls;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_CommentGroup &_Src) {
	_Stream << "CommentGroup{";
	_Stream << "comments:" << _Src._field_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_NamespaceTypeDecl &_Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_SptrTypeDecl &_Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_SlcTypeDecl &_Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_TupleTypeDecl &_Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e38d4ec7_PtrTypeDecl::_method_is_unsafe(void) {
	return (*this)._field_elem == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_PtrTypeDecl &_Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e38d4ec7_ArrTypeDecl::_method_auto_sized(void) {
	return (*this)._field_size == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_ArrTypeDecl &_Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_MapTypeDecl &_Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_RetTypeDecl &_Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_TupleExpr &_Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_CastExpr &_Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_StructLit &_Src) {
	_Stream << "StructLit{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_ScopeTree &_Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e396d626_FileInfo &_Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e396d626_PackageInfo &_Src) {
	_Stream << "PackageInfo{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e3c61e36_Stmt &_Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1e3c61e36_ScopeParser::_method_stop(void) {
	(*this)._field_pos=-1LL;
}



inline jule::Bool _1e3c61e36_ScopeParser::_method_stopped(void) {
	return (*this)._field_pos == -1LL;
}



inline jule::Bool _1e3c61e36_ScopeParser::_method_finished(void) {
	return (*this)._field_pos >= (*this)._field_stms.len();
}



inline jule::Bool _1e3c61e36_ScopeParser::_method_is_last_st(void) {
	return ((*this)._field_pos + 1LL) >= (*this)._field_stms.len();
}



inline void _1e3c61e36_ScopeParser::_method_push_err(_1e3bad8dd_Token _17627_token,jule::Str _17641_fmt) {
	(*this)._field_p->_method_push_err(_17627_token,_17641_fmt,jule::Slice<jule::Any>());
}



inline void _1e3c61e36_ScopeParser::_method_push_suggestion(jule::Str _17934_fmt,jule::Slice<jule::Any> _17947_args) {
	(*this)._field_p->_method_push_suggestion(_17934_fmt,_17947_args);
}



inline void _1e3c61e36_ScopeParser::_method_insert_as_next(jule::Slice<_1e3bad8dd_Token>& _18338_tokens) {
	(*this)._field_stms=jule::append((*this)._field_stms.slice(0LL,(*this)._field_pos + 1LL),(*this)._field_stms.slice((*this)._field_pos));
	(*this)._field_stms[(*this)._field_pos + 1LL]=jule::new_struct<_1e3c61e36_Stmt>(new( std::nothrow ) _1e3c61e36_Stmt(_18338_tokens,jule::Bool()));
}



inline jule::Ptr<_1e3c61e36_Stmt> _1e3c61e36_ScopeParser::_method_next(void) {
	((*this)._field_pos)++;
	return (*this)._field_stms[(*this)._field_pos];
}



inline jule::Ptr<_1e38d4ec7_ScopeTree> _1e3c61e36_ScopeParser::_method_build_scope(jule::Slice<_1e3bad8dd_Token>& _19335_tokens) {
	jule::Ptr<_1e38d4ec7_ScopeTree> _19417_s = _1e3c61e36_new_scope();
	_19417_s->_field_parent=(*this)._field_s;
	_1e3c61e36_ScopeParser _19617_ssp = _1e3c61e36_ScopeParser((*this)._field_p,jule::Ptr<_1e38d4ec7_ScopeTree>(),jule::Slice<jule::Ptr<_1e3c61e36_Stmt>>(),jule::Int());
	_19617_ssp._method_build(_19335_tokens,_19417_s);
	return _19417_s;
}



inline jule::Any _1e3c61e36_ScopeParser::_method_build_var_st(jule::Slice<_1e3bad8dd_Token>& _20336_tokens) {
	jule::Ptr<_1e38d4ec7_VarDecl> _20417_v = (*this)._field_p->_method_build_var(_20336_tokens);
	_20417_v->_field_scope=(*this)._field_s;
	return jule::Any(_20417_v);
}



inline jule::Any _1e3c61e36_ScopeParser::_method_build_ret_st(jule::Slice<_1e3bad8dd_Token> _20935_tokens) {
	jule::Ptr<_1e38d4ec7_RetSt> _21017_st = jule::new_struct<_1e38d4ec7_RetSt>(new( std::nothrow ) _1e38d4ec7_RetSt(_20935_tokens[0LL],jule::Ptr<_1e38d4ec7_Expr>()));
	if (_20935_tokens.len() > 1LL) {
		_20935_tokens=_20935_tokens.slice(1LL);
		_21017_st->_field_expr=(*this)._field_p->_method_build_expr(_20935_tokens);
	}
	return jule::Any(_21017_st);
}



inline jule::Any _1e3c61e36_ScopeParser::_method_build_while_next_iter(jule::Ptr<_1e3c61e36_Stmt>& _22045_s) {
	jule::Ptr<_1e38d4ec7_Iter> _22117_it = jule::new_struct<_1e38d4ec7_Iter>(new( std::nothrow ) _1e38d4ec7_Iter(_22045_s->_field_tokens[0LL],jule::Any(),jule::Ptr<_1e38d4ec7_ScopeTree>()));
	jule::Slice<_1e3bad8dd_Token> _22417_tokens = _22045_s->_field_tokens.slice(1LL);
	jule::Ptr<_1e38d4ec7_WhileKind> _22517_kind = jule::new_struct<_1e38d4ec7_WhileKind>(new( std::nothrow ) _1e38d4ec7_WhileKind());
	if (_22417_tokens.len() > 0LL) {
		_22517_kind->_field_expr=(*this)._field_p->_method_build_expr(_22417_tokens);
	}
	if ((*this)._method_is_last_st()) {
		(*this)._method_push_err(_22117_it->_field_token,jule::Str("invalid syntax", 14));
		return jule::Any(nullptr);
	}
	_22417_tokens=(*this)._method_next()->_field_tokens;
	jule::Slice<_1e3bad8dd_Token> _23717_st_tokens = _1e3ca6387_get_block_expr(_22417_tokens);
	if (_23717_st_tokens.len() > 0LL) {
		jule::Ptr<_1e3c61e36_Stmt> _23921_stmt = jule::new_struct<_1e3c61e36_Stmt>(new( std::nothrow ) _1e3c61e36_Stmt(_23717_st_tokens,_22045_s->_field_terminated));
		_22517_kind->_field_next_token=_23717_st_tokens[0LL];
		_22517_kind->_field_next=(*this)._method_build_st(_23921_stmt);
	}
	jule::I64 _24717_i = _23717_st_tokens.len();
	jule::Slice<_1e3bad8dd_Token> _24817_block_tokens = _1e4a02445_range(_24717_i,jule::Str("{", 1),jule::Str("}", 1),_22417_tokens);
	if (_24817_block_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_22117_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	if (_24717_i < _22417_tokens.len()) {
		(*this)._method_push_err(_22417_tokens[_24717_i],jule::Str("invalid syntax", 14));
	}
	_22117_it->_field_scope=(*this)._method_build_scope(_24817_block_tokens);
	_22117_it->_field_kind=jule::Any(_22517_kind);
	return jule::Any(_22117_it);
}



inline jule::Ptr<_1e38d4ec7_WhileKind> _1e3c61e36_ScopeParser::_method_build_while_iter_kind(jule::Slice<_1e3bad8dd_Token>& _26545_tokens) {
	return jule::new_struct<_1e38d4ec7_WhileKind>(new( std::nothrow ) _1e38d4ec7_WhileKind((*this)._field_p->_method_build_expr(_26545_tokens),jule::Any(),_1e3bad8dd_Token()));
}



inline jule::Slice<jule::Slice<_1e3bad8dd_Token>> _1e3c61e36_ScopeParser::_method_get_range_kind_keys_tokens(jule::Slice<_1e3bad8dd_Token>& _27150_toks) {
	jule::Slice<jule::Slice<_1e3bad8dd_Token>> _27218_vars;
	jule::Slice<_1e24777a2_Log> _27224_errs;
	std::tie(_27218_vars,_27224_errs) = _1e4a02445_parts(_27150_toks,8LLU,true);
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_27224_errs);
	return _27218_vars;
}



inline jule::Ptr<_1e38d4ec7_VarDecl> _1e3c61e36_ScopeParser::_method_build_range_kind_key(jule::Slice<_1e3bad8dd_Token>& _27744_tokens) {
	if (_27744_tokens.len() == 0LL) {
		return nullptr;
	}
	jule::Ptr<_1e38d4ec7_VarDecl> _28117_key = jule::new_struct<_1e38d4ec7_VarDecl>(new( std::nothrow ) _1e38d4ec7_VarDecl(jule::Ptr<_1e38d4ec7_ScopeTree>(),_27744_tokens[0LL],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>(),jule::Ptr<_1e38d4ec7_CommentGroup>(),jule::Ptr<_1e38d4ec7_TypeDecl>(),jule::Ptr<_1e38d4ec7_Expr>()));
	if (_28117_key->_field_token._field_id == 36LLU) {
		_28117_key->_field_mutable=true;
		if (_27744_tokens.len() == 1LL) {
			(*this)._method_push_err(_28117_key->_field_token,jule::Str("invalid syntax", 14));
		}
		_28117_key->_field_token=_27744_tokens[1LL];
	} else if (_27744_tokens.len() > 1LL) {
		(*this)._method_push_err(_27744_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	if (_28117_key->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_28117_key->_field_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	_28117_key->_field_ident=_28117_key->_field_token._field_kind;
	return _28117_key;
}



inline jule::Slice<jule::Ptr<_1e38d4ec7_VarDecl>> _1e3c61e36_ScopeParser::_method_build_range_kind_keys(jule::Slice<jule::Slice<_1e3bad8dd_Token>>& _30245_parts) {
	jule::Slice<jule::Ptr<_1e38d4ec7_VarDecl>> _30317_keys = nullptr;
	{
		auto &expr = _30245_parts;
		auto it = expr.begin();
		_iter_begin_4727113328:;
		if (it != expr.end()) {
			jule::Slice<_1e3bad8dd_Token> _1e3c61e36_tokens = *it;
			{
				_30317_keys.push((*this)._method_build_range_kind_key(_1e3c61e36_tokens));
			}
			_iter_next_4727113328:;
			++it;
			goto _iter_begin_4727113328;
		}
		_iter_end_4727113328:;
	}
	return _30317_keys;
}



inline void _1e3c61e36_ScopeParser::_method_setup_range_kind_keys_plain(jule::Ptr<_1e38d4ec7_RangeKind>& _31051_rng,jule::Slice<_1e3bad8dd_Token>& _31073_tokens) {
	jule::Slice<jule::Slice<_1e3bad8dd_Token>> _31117_key_tokens = (*this)._method_get_range_kind_keys_tokens(_31073_tokens);
	if (_31117_key_tokens.len() == 0LL) {
		return;
	}
	if (_31117_key_tokens.len() > 2LL) {
		(*this)._method_push_err(_31051_rng->_field_in_token,jule::Str("range variables can be maximum two", 34));
	}
	jule::Slice<jule::Ptr<_1e38d4ec7_VarDecl>> _31817_keys = (*this)._method_build_range_kind_keys(_31117_key_tokens);
	_31051_rng->_field_key_a=_31817_keys[0LL];
	if (_31817_keys.len() > 1LL) {
		_31051_rng->_field_key_b=_31817_keys[1LL];
	}
}



inline void _1e3c61e36_ScopeParser::_method_setup_range_kind_keys_explicit(jule::Ptr<_1e38d4ec7_RangeKind>& _32554_rng,jule::Slice<_1e3bad8dd_Token>& _32576_tokens) {
	jule::Int _32617_i = 0LL;
	jule::Slice<_1e3bad8dd_Token> _32717_rang = _1e4a02445_range(_32617_i,jule::Str("(", 1),jule::Str(")", 1),_32576_tokens);
	if (_32617_i < _32576_tokens.len()) {
		(*this)._method_push_err(_32554_rng->_field_in_token,jule::Str("invalid syntax", 14));
	}
	(*this)._method_setup_range_kind_keys_plain(_32554_rng,_32717_rang);
}



inline void _1e3c61e36_ScopeParser::_method_setup_range_kind_keys(jule::Ptr<_1e38d4ec7_RangeKind>& _33445_rng,jule::Slice<_1e3bad8dd_Token>& _33467_tokens) {
	if (_33467_tokens[0LL]._field_id == 3LLU) {
		if (_33467_tokens[0LL]._field_kind != jule::Str("(", 1)) {
			(*this)._method_push_err(_33467_tokens[0LL],jule::Str("invalid syntax", 14));
			return;
		}
		(*this)._method_setup_range_kind_keys_explicit(_33445_rng,_33467_tokens);
		return;
	}
	(*this)._method_setup_range_kind_keys_plain(_33445_rng,_33467_tokens);
}



inline jule::Ptr<_1e38d4ec7_RangeKind> _1e3c61e36_ScopeParser::_method_build_range_iter_kind(jule::Slice<_1e3bad8dd_Token>& _34645_var_tokens,jule::Slice<_1e3bad8dd_Token>& _34714_expr_tokens,_1e3bad8dd_Token& _34741_in_token) {
	jule::Ptr<_1e38d4ec7_RangeKind> _34817_rng = jule::new_struct<_1e38d4ec7_RangeKind>(new( std::nothrow ) _1e38d4ec7_RangeKind(_34741_in_token,jule::Ptr<_1e38d4ec7_Expr>(),jule::Ptr<_1e38d4ec7_VarDecl>(),jule::Ptr<_1e38d4ec7_VarDecl>()));
	if (_34714_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_34817_rng->_field_in_token,jule::Str("expression missing", 18));
		return _34817_rng;
	}
	_34817_rng->_field_expr=(*this)._field_p->_method_build_expr(_34714_expr_tokens);
	if (_34645_var_tokens.len() > 0LL) {
		(*this)._method_setup_range_kind_keys(_34817_rng,_34645_var_tokens);
	}
	return _34817_rng;
}



inline jule::Any _1e3c61e36_ScopeParser::_method_build_common_iter_kind(jule::Slice<_1e3bad8dd_Token>& _36246_tokens,_1e3bad8dd_Token& _36264_err_tok) {
	jule::Int _36317_brace_n = 0LL;
	{
		auto &expr = _36246_tokens;
		auto it = expr.begin();
		_iter_begin_4727155808:;
		if (it != expr.end()) {
			jule::Int _1e3c61e36_i = it - expr.begin();
			_1e3bad8dd_Token _1e3c61e36_tok = *it;
			{
				if (_1e3c61e36_tok._field_id == 3LLU) {
					{
						auto &_match_expr{ _1e3c61e36_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4727160608; }
						_case_begin_4727160608:;
						{
							(_36317_brace_n)++;
							goto _iter_next_4727155808;
						}
						goto _match_end_4727159248;
						_case_end_4727160608:;
						_case_begin_4727158560:;
						{
							(_36317_brace_n)--;
						}
						goto _match_end_4727159248;
						_case_end_4727158560:;
						_match_end_4727159248:;
					}
				}
				if (_36317_brace_n != 0LL) {
					goto _iter_next_4727155808;
				}
				{
					auto &_match_expr{ _1e3c61e36_tok._field_id };
					if (!((15LLU) == _match_expr)) { goto _case_end_4727158000; }
					_case_begin_4727158000:;
					{
						jule::Slice<_1e3bad8dd_Token> _38225_decl_tokens = _36246_tokens.slice(0LL,_1e3c61e36_i);
						jule::Slice<_1e3bad8dd_Token> _38325_expr_tokens = _36246_tokens.slice(_1e3c61e36_i + 1LL);
						return jule::Any((*this)._method_build_range_iter_kind(_38225_decl_tokens,_38325_expr_tokens,_1e3c61e36_tok));
					}
					goto _match_end_4727160976;
					_case_end_4727158000:;
					_match_end_4727160976:;
				}
			}
			_iter_next_4727155808:;
			++it;
			_1e3c61e36_i++;
			goto _iter_begin_4727155808;
		}
		_iter_end_4727155808:;
	}
	return jule::Any((*this)._method_build_while_iter_kind(_36246_tokens));
}



inline jule::Any _1e3c61e36_ScopeParser::_method_build_common_iter(jule::Slice<_1e3bad8dd_Token> _39040_tokens) {
	jule::Ptr<_1e38d4ec7_Iter> _39117_it = jule::new_struct<_1e38d4ec7_Iter>(new( std::nothrow ) _1e38d4ec7_Iter(_39040_tokens[0LL],jule::Any(),jule::Ptr<_1e38d4ec7_ScopeTree>()));
	_39040_tokens=_39040_tokens.slice(1LL);
	if (_39040_tokens.len() == 0LL) {
		(*this)._method_stop();
		(*this)._method_push_err(_39117_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	jule::Slice<_1e3bad8dd_Token> _40117_expr_tokens = _1e3ca6387_get_block_expr(_39040_tokens);
	if (_40117_expr_tokens.len() > 0LL) {
		_39117_it->_field_kind=(*this)._method_build_common_iter_kind(_40117_expr_tokens,_39117_it->_field_token);
	}
	jule::I64 _40517_i = _40117_expr_tokens.len();
	jule::Slice<_1e3bad8dd_Token> _40617_scope_tokens = _1e4a02445_range(_40517_i,jule::Str("{", 1),jule::Str("}", 1),_39040_tokens);
	if (_40617_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_39117_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	if (_40517_i < _39040_tokens.len()) {
		(*this)._method_push_err(_39040_tokens[_40517_i],jule::Str("invalid syntax", 14));
	}
	_39117_it->_field_scope=(*this)._method_build_scope(_40617_scope_tokens);
	return jule::Any(_39117_it);
}



inline jule::Any _1e3c61e36_ScopeParser::_method_buid_iter_st(jule::Ptr<_1e3c61e36_Stmt>& _42036_st) {
	if (_42036_st->_field_terminated) {
		return (*this)._method_build_while_next_iter(_42036_st);
	}
	return (*this)._method_build_common_iter(_42036_st->_field_tokens);
}



inline jule::Any _1e3c61e36_ScopeParser::_method_build_break_st(jule::Slice<_1e3bad8dd_Token>& _42738_tokens) {
	jule::Ptr<_1e38d4ec7_BreakSt> _42817_brk = jule::new_struct<_1e38d4ec7_BreakSt>(new( std::nothrow ) _1e38d4ec7_BreakSt(_42738_tokens[0LL],_1e3bad8dd_Token()));
	if (_42738_tokens.len() > 1LL) {
		if (_42738_tokens[1LL]._field_id != 2LLU) {
			(*this)._method_push_err(_42738_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggestion(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_42817_brk->_field_label=_42738_tokens[1LL];
			if (_42738_tokens.len() > 2LL) {
				(*this)._method_push_err(_42738_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_42817_brk);
}



inline jule::Any _1e3c61e36_ScopeParser::_method_build_cont_st(jule::Slice<_1e3bad8dd_Token>& _44537_tokens) {
	jule::Ptr<_1e38d4ec7_ContSt> _44617_cont = jule::new_struct<_1e38d4ec7_ContSt>(new( std::nothrow ) _1e38d4ec7_ContSt(_44537_tokens[0LL],_1e3bad8dd_Token()));
	if (_44537_tokens.len() > 1LL) {
		if (_44537_tokens[1LL]._field_id != 2LLU) {
			(*this)._method_push_err(_44537_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggestion(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44617_cont->_field_label=_44537_tokens[1LL];
			if (_44537_tokens.len() > 2LL) {
				(*this)._method_push_err(_44537_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_44617_cont);
}



inline jule::Ptr<_1e38d4ec7_If> _1e3c61e36_ScopeParser::_method_build_if(jule::Slice<_1e3bad8dd_Token>& _46332_tokens) {
	jule::Ptr<_1e38d4ec7_If> _46417_model = jule::new_struct<_1e38d4ec7_If>(new( std::nothrow ) _1e38d4ec7_If(_46332_tokens[0LL],jule::Ptr<_1e38d4ec7_Expr>(),jule::Ptr<_1e38d4ec7_ScopeTree>()));
	_46332_tokens=_46332_tokens.slice(1LL);
	jule::Slice<_1e3bad8dd_Token> _46817_expr_tokens = _1e3ca6387_get_block_expr(_46332_tokens);
	jule::Int _46917_i = 0LL;
	if (_46817_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_46417_model->_field_token,jule::Str("expression missing", 18));
	} else {
		_46917_i=static_cast<jule::I64>(_46817_expr_tokens.len());
	}
	jule::Slice<_1e3bad8dd_Token> _47517_scope_tokens = _1e4a02445_range(_46917_i,jule::Str("{", 1),jule::Str("}", 1),_46332_tokens);
	if (_47517_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_46417_model->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_46917_i < _46332_tokens.len()) {
		if (_46332_tokens[_46917_i]._field_id == 17LLU) {
			_46332_tokens=_46332_tokens.slice(_46917_i);
		} else {
			(*this)._method_push_err(_46332_tokens[_46917_i],jule::Str("invalid syntax", 14));
			_46332_tokens=nullptr;
		}
	}
	_46417_model->_field_expr=(*this)._field_p->_method_build_expr(_46817_expr_tokens);
	_46417_model->_field_scope=(*this)._method_build_scope(_47517_scope_tokens);
	return _46417_model;
}



inline jule::Ptr<_1e38d4ec7_Else> _1e3c61e36_ScopeParser::_method_build_else(jule::Slice<_1e3bad8dd_Token>& _49534_tokens) {
	jule::Ptr<_1e38d4ec7_Else> _49617_els = jule::new_struct<_1e38d4ec7_Else>(new( std::nothrow ) _1e38d4ec7_Else(_49534_tokens[0LL],jule::Ptr<_1e38d4ec7_ScopeTree>()));
	_49534_tokens=_49534_tokens.slice(1LL);
	jule::Int _50017_i = 0LL;
	jule::Slice<_1e3bad8dd_Token> _50117_scope_tokens = _1e4a02445_range(_50017_i,jule::Str("{", 1),jule::Str("}", 1),_49534_tokens);
	if (_50117_scope_tokens == nullptr) {
		if (_50017_i < _49534_tokens.len()) {
			(*this)._method_push_err(_49617_els->_field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			(*this)._method_stop();
			(*this)._method_push_err(_49617_els->_field_token,jule::Str("body is not exist", 17));
			(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		}
		return nullptr;
	}
	if (_50017_i < _49534_tokens.len()) {
		(*this)._method_push_err(_49534_tokens[_50017_i],jule::Str("invalid syntax", 14));
	}
	_49617_els->_field_scope=(*this)._method_build_scope(_50117_scope_tokens);
	return _49617_els;
}



inline jule::Any _1e3c61e36_ScopeParser::_method_build_if_else_chain(jule::Slice<_1e3bad8dd_Token> _51942_tokens) {
	jule::Ptr<_1e38d4ec7_Conditional> _52017_chain = jule::new_struct<_1e38d4ec7_Conditional>(new( std::nothrow ) _1e38d4ec7_Conditional((*this)._method_build_if(_51942_tokens),jule::Slice<jule::Ptr<_1e38d4ec7_If>>(),jule::Ptr<_1e38d4ec7_Else>()));
	if (_52017_chain->_field_head == nullptr) {
		return jule::Any(nullptr);
	}
	while (_51942_tokens != nullptr) {
		{
			if (_51942_tokens[0LL]._field_id != 17LLU) {
				goto _iter_end_4727249200;
			}
			if ((_51942_tokens.len() > 1LL) && (_51942_tokens[1LL]._field_id == 16LLU)) {
				_51942_tokens=_51942_tokens.slice(1LL);
				jule::Ptr<_1e38d4ec7_If> _53225_elif = (*this)._method_build_if(_51942_tokens);
				_52017_chain->_field_tail = jule::alloc_for_append(_52017_chain->_field_tail,1);_52017_chain->_field_tail.push(_53225_elif);
				goto _iter_next_4727249200;
			}
			_52017_chain->_field_default=(*this)._method_build_else(_51942_tokens);
			goto _iter_end_4727249200;
		}
	_iter_next_4727249200:;
	}
	_iter_end_4727249200:;
	return jule::Any(_52017_chain);
}



inline jule::Any _1e3c61e36_ScopeParser::_method_build_comment_st(_1e3bad8dd_Token& _54236_token) {
	return jule::Any(_1e4a02445_build_comment(_54236_token));
}



inline jule::Any _1e3c61e36_ScopeParser::_method_build_call_st(jule::Slice<_1e3bad8dd_Token>& _54637_tokens) {
	_1e3bad8dd_Token _54713_token = _54637_tokens[0LL];
	if (_1e3ca6387_is_fn_call(_54637_tokens) == nullptr) {
		(*this)._method_push_err(_54713_token,jule::Str("statement must have function call expression", 44));
		return jule::Any(nullptr);
	}
	jule::Ptr<_1e38d4ec7_Expr> _55217_expr = (*this)._field_p->_method_build_expr(_54637_tokens);
	if ((_55217_expr != nullptr) && (!(_55217_expr->_method_is_fn_call()))) {
		(*this)._method_push_err(_54713_token,jule::Str("invalid syntax", 14));
		return jule::Any(nullptr);
	}
	return jule::Any(_55217_expr);
}



inline jule::Any _1e3c61e36_ScopeParser::_method_build_co_call_st(jule::Slice<_1e3bad8dd_Token> _56039_tokens) {
	_56039_tokens=_56039_tokens.slice(1LL);
	jule::Any _56217_cc = (*this)._method_build_call_st(_56039_tokens);
	if (_56217_cc != nullptr) {
		_56217_cc.operator jule::Ptr<_1e38d4ec7_Expr>()->_field_kind.operator jule::Ptr<_1e38d4ec7_FnCallExpr>()->_field_concurrent=true;
	}
	return _56217_cc;
}



inline jule::Any _1e3c61e36_ScopeParser::_method_build_goto_st(jule::Slice<_1e3bad8dd_Token>& _56937_tokens) {
	jule::Ptr<_1e38d4ec7_GotoSt> _57017_gt = jule::new_struct<_1e38d4ec7_GotoSt>(new( std::nothrow ) _1e38d4ec7_GotoSt(_56937_tokens[0LL],_1e3bad8dd_Token()));
	if (_56937_tokens.len() == 1LL) {
		(*this)._method_push_err(_57017_gt->_field_token,jule::Str("missing label identifier for goto statement", 43));
		return jule::Any(nullptr);
	} else if (_56937_tokens.len() > 2LL) {
		(*this)._method_push_err(_56937_tokens[2LL],jule::Str("invalid syntax", 14));
	}
	_1e3bad8dd_Token _57917_ident_token = _56937_tokens[1LL];
	if (_57917_ident_token._field_id != 2LLU) {
		(*this)._method_push_err(_57917_ident_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return jule::Any(_57017_gt);
	}
	_57017_gt->_field_label=_57917_ident_token;
	return jule::Any(_57017_gt);
}



inline jule::Any _1e3c61e36_ScopeParser::_method_build_fall_st(jule::Slice<_1e3bad8dd_Token>& _58937_tokens) {
	jule::Ptr<_1e38d4ec7_FallSt> _59017_fll = jule::new_struct<_1e38d4ec7_FallSt>(new( std::nothrow ) _1e38d4ec7_FallSt(_58937_tokens[0LL]));
	if (_58937_tokens.len() > 1LL) {
		(*this)._method_push_err(_58937_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	return jule::Any(_59017_fll);
}



inline jule::Any _1e3c61e36_ScopeParser::_method_build_type_alias_st(jule::Slice<_1e3bad8dd_Token>& _59943_tokens) {
	jule::Ptr<_1e38d4ec7_TypeAliasDecl> _60017_tad = (*this)._field_p->_method_build_type_alias_decl(_59943_tokens);
	_60017_tad->_field_scope=(*this)._field_s;
	return jule::Any(_60017_tad);
}



inline void _1e3c61e36_ScopeParser::_method_push_case_expr(jule::Slice<_1e3bad8dd_Token> _60537_tokens,_1e3bad8dd_Token _60558_token,jule::Bool _6069_type_match,jule::Slice<jule::Ptr<_1e38d4ec7_Expr>>& _60632_exprs) {
	if (_60537_tokens.len() == 0LL) {
		return;
	}
	if (_6069_type_match) {
		jule::Int _61221_i = 0LL;
		jule::Ptr<_1e38d4ec7_TypeDecl> _61322_t;
		jule::Bool _61325_ok;
		std::tie(_61322_t,_61325_ok) = (*this)._field_p->_method_build_type(_60537_tokens,(&(_61221_i)),true);
		if (_61325_ok) {
			_60632_exprs.push(jule::new_struct<_1e38d4ec7_Expr>(new( std::nothrow ) _1e38d4ec7_Expr(_60558_token,jule::Any(_61322_t))));
		}
		if (_61221_i < _60537_tokens.len()) {
			(*this)._method_push_err(_60537_tokens[_61221_i],jule::Str("invalid syntax", 14));
		}
		return;
	}
	_60632_exprs.push((*this)._field_p->_method_build_expr(_60537_tokens));
}



inline jule::Slice<jule::Ptr<_1e38d4ec7_Expr>> _1e3c61e36_ScopeParser::_method_build_case_exprs(jule::Slice<_1e3bad8dd_Token>& _62840_tokens,jule::Bool _62857_type_match) {
	jule::Slice<jule::Ptr<_1e38d4ec7_Expr>> _62917_exprs = jule::Slice<jule::Ptr<_1e38d4ec7_Expr>>::alloc(0LL,1LL);
	jule::Int _63117_brace_n = 0LL;
	jule::Int _63217_j = 0LL;
	{
		auto &expr = _62840_tokens;
		auto it = expr.begin();
		_iter_begin_4727320912:;
		if (it != expr.end()) {
			jule::Int _1e3c61e36_i = it - expr.begin();
			_1e3bad8dd_Token _1e3c61e36_tok = *it;
			{
				if (_1e3c61e36_tok._field_id == 3LLU) {
					{
						auto &_match_expr{ _1e3c61e36_tok._field_kind };
						if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4727325760; }
						_case_begin_4727325760:;
						{
							(_63117_brace_n)++;
						}
						goto _match_end_4727324400;
						_case_end_4727325760:;
						_case_begin_4727323712:;
						{
							(_63117_brace_n)--;
						}
						goto _match_end_4727324400;
						_case_end_4727323712:;
						_match_end_4727324400:;
					}
					goto _iter_next_4727320912;
				} else if (_63117_brace_n != 0LL) {
					goto _iter_next_4727320912;
				}
				{
					if (!(((_1e3c61e36_tok._field_id == 7LLU) && (_1e3c61e36_tok._field_kind == jule::Str("|", 1))))) { goto _case_end_4727326240; }
					_case_begin_4727326240:;
					{
						jule::Slice<_1e3bad8dd_Token> _65021_expr_tokens = _62840_tokens.slice(_63217_j,_1e3c61e36_i);
						if (_65021_expr_tokens.len() == 0LL) {
							(*this)._method_push_err(_1e3c61e36_tok,jule::Str("expression missing", 18));
						} else {
							(*this)._method_push_case_expr(_62840_tokens.slice(_63217_j,_1e3c61e36_i),_1e3c61e36_tok,_62857_type_match,_62917_exprs);
						}
						_63217_j=static_cast<jule::Int>(_1e3c61e36_i + 1LL);
					}
					goto _match_end_4727326608;
					_case_end_4727326240:;
					if (!((_1e3c61e36_tok._field_id == 11LLU))) { goto _case_end_4727326336; }
					_case_begin_4727326336:;
					{
						(*this)._method_push_case_expr(_62840_tokens.slice(_63217_j,_1e3c61e36_i),_1e3c61e36_tok,_62857_type_match,_62917_exprs);
						_62840_tokens=_62840_tokens.slice(_1e3c61e36_i + 1LL);
						return _62917_exprs;
					}
					goto _match_end_4727326608;
					_case_end_4727326336:;
					_match_end_4727326608:;
				}
			}
			_iter_next_4727320912:;
			++it;
			_1e3c61e36_i++;
			goto _iter_begin_4727320912;
		}
		_iter_end_4727320912:;
	}
	(*this)._method_push_err(_62840_tokens[0LL],jule::Str("invalid syntax", 14));
	_62840_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_1e38d4ec7_ScopeTree> _1e3c61e36_ScopeParser::_method_build_case_scope(jule::Slice<_1e3bad8dd_Token>& _66940_tokens) {
	jule::Int _67017_n = 0LL;
	for (;;) {
		{
			jule::Int _67221_i = 0LL;
			jule::Slice<_1e3bad8dd_Token> _67322_next;
			std::tie(_67322_next,std::ignore) = _1e3c61e36_skip_st(_67221_i,_66940_tokens.slice(_67017_n));
			if (_67322_next.len() == 0LL) {
				goto _iter_end_4727338144;
			}
			_1e3bad8dd_Token _67717_tok = _67322_next[0LL];
			if ((_67717_tok._field_id != 7LLU) || (_67717_tok._field_kind != jule::Str("|", 1))) {
				_67017_n+=_67221_i;
				goto _iter_next_4727338144;
			}
			jule::Slice<_1e3bad8dd_Token> _68221_scope_tokens = _66940_tokens.slice(0LL,_67017_n);
			jule::Ptr<_1e38d4ec7_ScopeTree> _68321_scope = (*this)._method_build_scope(_68221_scope_tokens);
			_66940_tokens=_66940_tokens.slice(_67017_n);
			return _68321_scope;
		}
	_iter_next_4727338144:;
	}
	_iter_end_4727338144:;
	jule::Ptr<_1e38d4ec7_ScopeTree> _68717_scope = (*this)._method_build_scope(_66940_tokens);
	_66940_tokens=nullptr;
	return _68717_scope;
}



inline std::tuple<jule::Ptr<_1e38d4ec7_Case>,jule::Bool> _1e3c61e36_ScopeParser::_method_build_case(jule::Slice<_1e3bad8dd_Token>& _69234_tokens,jule::Bool _69251_type_match) {
	jule::Ptr<_1e38d4ec7_Case> _69317_c = jule::new_struct<_1e38d4ec7_Case>(new( std::nothrow ) _1e38d4ec7_Case(_69234_tokens[0LL],jule::Ptr<_1e38d4ec7_ScopeTree>(),jule::Slice<jule::Ptr<_1e38d4ec7_Expr>>()));
	_69234_tokens=_69234_tokens.slice(1LL);
	_69317_c->_field_exprs=(*this)._method_build_case_exprs(_69234_tokens,_69251_type_match);
	_69317_c->_field_scope=(*this)._method_build_case_scope(_69234_tokens);
	jule::Bool _69913_is_default = _69317_c->_field_exprs.len() == 0LL;
	return std::make_tuple(_69317_c,_69913_is_default);
}



inline std::tuple<jule::Slice<jule::Ptr<_1e38d4ec7_Case>>,jule::Ptr<_1e38d4ec7_Else>> _1e3c61e36_ScopeParser::_method_build_cases(jule::Slice<_1e3bad8dd_Token> _70334_tokens,jule::Bool _70351_type_match) {
	jule::Slice<jule::Ptr<_1e38d4ec7_Case>> _70417_cases = nullptr;
	jule::Ptr<_1e38d4ec7_Else> _70517_def = nullptr;
	jule::Bool _70617_def_not_last = false;
	while (_70334_tokens.len() > 0LL) {
		{
			_1e3bad8dd_Token _70821_tok = _70334_tokens[0LL];
			if (_70821_tok._field_id == 18LLU) {
				_70334_tokens=_70334_tokens.slice(1LL);
				goto _iter_next_4727362272;
			}
			if ((_70821_tok._field_id != 7LLU) || (_70821_tok._field_kind != jule::Str("|", 1))) {
				(*this)._method_push_err(_70821_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_4727362272;
			}
			jule::Ptr<_1e38d4ec7_Case> _71922_c;
			jule::Bool _71925_is_default;
			std::tie(_71922_c,_71925_is_default) = (*this)._method_build_case(_70334_tokens,_70351_type_match);
			if (_71925_is_default) {
				_71922_c->_field_token=_70821_tok;
				if (_70517_def == nullptr) {
					_70517_def=jule::new_struct<_1e38d4ec7_Else>(new( std::nothrow ) _1e38d4ec7_Else(_71922_c->_field_token,_71922_c->_field_scope));
				} else {
					(*this)._method_push_err(_70821_tok,jule::Str("invalid syntax", 14));
				}
			} else {
				_70617_def_not_last=_70617_def_not_last || (_70517_def != nullptr);
				_70417_cases.push(_71922_c);
			}
		}
	_iter_next_4727362272:;
	}
	_iter_end_4727362272:;
	if (_70617_def_not_last) {
		(*this)._method_push_err(_70517_def->_field_token,jule::Str("default case should be last case", 32));
	}
	return std::make_tuple(_70417_cases,_70517_def);
}



inline jule::Ptr<_1e38d4ec7_MatchCase> _1e3c61e36_ScopeParser::_method_build_match_case(jule::Slice<_1e3bad8dd_Token> _74339_tokens) {
	jule::Ptr<_1e38d4ec7_MatchCase> _74417_m = jule::new_struct<_1e38d4ec7_MatchCase>(new( std::nothrow ) _1e38d4ec7_MatchCase(_74339_tokens[0LL],jule::Bool(),jule::Ptr<_1e38d4ec7_Expr>(),jule::Slice<jule::Ptr<_1e38d4ec7_Case>>(),jule::Ptr<_1e38d4ec7_Else>()));
	_74339_tokens=_74339_tokens.slice(1LL);
	if ((_74339_tokens.len() > 0LL) && (_74339_tokens[0LL]._field_id == 10LLU)) {
		_74417_m->_field_type_match=true;
		_74339_tokens=_74339_tokens.slice(1LL);
	}
	jule::Slice<_1e3bad8dd_Token> _75417_expr_tokens = _1e3ca6387_get_block_expr(_74339_tokens);
	if (_75417_expr_tokens.len() > 0LL) {
		_74417_m->_field_expr=(*this)._field_p->_method_build_expr(_75417_expr_tokens);
	} else if (_74417_m->_field_type_match) {
		(*this)._method_push_err(_74417_m->_field_token,jule::Str("expression missing", 18));
	}
	jule::I64 _76117_i = _75417_expr_tokens.len();
	jule::Slice<_1e3bad8dd_Token> _76217_block_toks = _1e4a02445_range(_76117_i,jule::Str("{", 1),jule::Str("}", 1),_74339_tokens);
	if (_76217_block_toks == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_74417_m->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	std::tie(_74417_m->_field_cases,_74417_m->_field_default) = (*this)._method_build_cases(_76217_block_toks,_74417_m->_field_type_match);
	return _74417_m;
}



inline jule::Ptr<_1e38d4ec7_ScopeTree> _1e3c61e36_ScopeParser::_method_build_scope_st(jule::Slice<_1e3bad8dd_Token> _77437_tokens) {
	jule::Bool _77517_is_unsafe = false;
	jule::Bool _77617_is_deferred = false;
	_1e3bad8dd_Token _77717_token = _77437_tokens[0LL];
	if (_77717_token._field_id == 35LLU) {
		_77517_is_unsafe=true;
		_77437_tokens=_77437_tokens.slice(1LL);
		if (_77437_tokens.len() == 0LL) {
			(*this)._method_push_err(_77717_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
		_77717_token=_77437_tokens[0LL];
		if (_77717_token._field_id == 37LLU) {
			_77617_is_deferred=true;
			_77437_tokens=_77437_tokens.slice(1LL);
			if (_77437_tokens.len() == 0LL) {
				(*this)._method_push_err(_77717_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
	} else if (_77717_token._field_id == 37LLU) {
		_77617_is_deferred=true;
		_77437_tokens=_77437_tokens.slice(1LL);
		if (_77437_tokens.len() == 0LL) {
			(*this)._method_push_err(_77717_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
	}
	jule::Int _80317_i = 0LL;
	jule::Slice<_1e3bad8dd_Token> _80417_scope_tokens = _1e4a02445_range(_80317_i,jule::Str("{", 1),jule::Str("}", 1),_77437_tokens);
	if (_80417_scope_tokens == nullptr) {
		(*this)._method_push_err(_77717_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if (_80317_i < _77437_tokens.len()) {
		(*this)._method_push_err(_77437_tokens[_80317_i],jule::Str("invalid syntax", 14));
	}
	jule::Ptr<_1e38d4ec7_ScopeTree> _81117_scope = (*this)._method_build_scope(_80417_scope_tokens);
	_81117_scope->_field_unsafety=_77517_is_unsafe;
	_81117_scope->_field_deferred=_77617_is_deferred;
	return _81117_scope;
}



inline jule::Ptr<_1e38d4ec7_LabelSt> _1e3c61e36_ScopeParser::_method_build_label_st(jule::Slice<_1e3bad8dd_Token>& _81738_tokens) {
	jule::Ptr<_1e38d4ec7_LabelSt> _81817_lbl = jule::new_struct<_1e38d4ec7_LabelSt>(new( std::nothrow ) _1e38d4ec7_LabelSt(_81738_tokens[0LL],_81738_tokens[0LL]._field_kind));
	if (_81738_tokens.len() > 2LL) {
		_81738_tokens=_81738_tokens.slice(2LL);
		(*this)._method_insert_as_next(_81738_tokens);
	}
	return _81817_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1e3c61e36_ScopeParser::_method_build_id_st(jule::Slice<_1e3bad8dd_Token>& _83235_tokens) {
	jule::Bool _83264_ok = jule::Bool();
	if (_83235_tokens.len() == 1LL) {
		return std::make_tuple(jule::Any(),_83264_ok);
	}
	_1e3bad8dd_Token _83717_token = _83235_tokens[1LL];
	{
		auto &_match_expr{ _83717_token._field_id };
		if (!((11LLU) == _match_expr)) { goto _case_end_4727427040; }
		_case_begin_4727427040:;
		{
			_83264_ok = true;
			return std::make_tuple(jule::Any((*this)._method_build_label_st(_83235_tokens)),_83264_ok);
		}
		goto _match_end_4727430032;
		_case_end_4727427040:;
		_match_end_4727430032:;
	}
	return std::make_tuple(jule::Any(),_83264_ok);
}



inline jule::Ptr<_1e3ca4682_AssignInfo> _1e3c61e36_ScopeParser::_method_build_assign_info(jule::Slice<_1e3bad8dd_Token>& _84641_tokens) {
	jule::Ptr<_1e3ca4682_AssignInfo> _84717_info = jule::new_struct<_1e3ca4682_AssignInfo>(new( std::nothrow ) _1e3ca4682_AssignInfo(jule::Slice<_1e3bad8dd_Token>(),jule::Slice<_1e3bad8dd_Token>(),_1e3bad8dd_Token(),true));
	jule::Int _85017_brace_n = 0LL;
	{
		auto &expr = _84641_tokens;
		auto it = expr.begin();
		_iter_begin_4727437296:;
		if (it != expr.end()) {
			jule::Int _1e3c61e36_i = it - expr.begin();
			_1e3bad8dd_Token _1e3c61e36_token = *it;
			{
				if (_1e3c61e36_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _1e3c61e36_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4727442032; }
						_case_begin_4727442032:;
						{
							(_85017_brace_n)++;
						}
						goto _match_end_4727440672;
						_case_end_4727442032:;
						_case_begin_4727439984:;
						{
							(_85017_brace_n)--;
						}
						goto _match_end_4727440672;
						_case_end_4727439984:;
						_match_end_4727440672:;
					}
				}
				{
					if (!((_85017_brace_n > 0LL))) { goto _case_end_4727439568; }
					_case_begin_4727439568:;
					{
						goto _iter_next_4727437296;
					}
					goto _match_end_4727439760;
					_case_end_4727439568:;
					if (!((_1e3c61e36_token._field_id != 7LLU))) { goto _case_end_4727442352; }
					_case_begin_4727442352:;
					{
						goto _iter_next_4727437296;
					}
					goto _match_end_4727439760;
					_case_end_4727442352:;
					if (!(((!(_1e3bad8dd_is_assign_op(_1e3c61e36_token._field_kind)))))) { goto _case_end_4727442448; }
					_case_begin_4727442448:;
					{
						goto _iter_next_4727437296;
					}
					goto _match_end_4727439760;
					_case_end_4727442448:;
					_match_end_4727439760:;
				}
				_84717_info->_field_l=_84641_tokens.slice(0LL,_1e3c61e36_i);
				if (_84717_info->_field_l.len() == 0LL) {
					_84717_info->_field_ok=false;
				}
				_84717_info->_field_setter=_1e3c61e36_token;
				if ((_1e3c61e36_i + 1LL) >= _84641_tokens.len()) {
					_84717_info->_field_r=nullptr;
					_84717_info->_field_ok=_1e3bad8dd_is_postfix_op(_84717_info->_field_setter._field_kind);
					goto _iter_end_4727437296;
				}
				_84717_info->_field_r=_84641_tokens.slice(_1e3c61e36_i + 1LL);
				if (_1e3bad8dd_is_postfix_op(_84717_info->_field_setter._field_kind)) {
					if (_84717_info->_field_r.len() > 0LL) {
						(*this)._method_push_err(_84717_info->_field_r[0LL],jule::Str("invalid syntax", 14));
						_84717_info->_field_r=nullptr;
					}
				}
				goto _iter_end_4727437296;
			}
			_iter_next_4727437296:;
			++it;
			_1e3c61e36_i++;
			goto _iter_begin_4727437296;
		}
		_iter_end_4727437296:;
	}
	return _84717_info;
}



inline jule::Ptr<_1e38d4ec7_AssignLeft> _1e3c61e36_ScopeParser::_method_build_assign_l(jule::Slice<_1e3bad8dd_Token>& _89338_tokens) {
	jule::Ptr<_1e38d4ec7_AssignLeft> _89417_l = jule::new_struct<_1e38d4ec7_AssignLeft>(new( std::nothrow ) _1e38d4ec7_AssignLeft(_89338_tokens[0LL],jule::Bool(),jule::Bool(),jule::Str(),jule::Ptr<_1e38d4ec7_Expr>()));
	if (_89338_tokens[0LL]._field_id == 2LLU) {
		_89417_l->_field_ident=_89417_l->_field_token._field_kind;
	}
	_89417_l->_field_expr=(*this)._field_p->_method_build_expr(_89338_tokens);
	return _89417_l;
}



inline jule::Slice<jule::Ptr<_1e38d4ec7_AssignLeft>> _1e3c61e36_ScopeParser::_method_build_assign_ls(jule::Slice<jule::Slice<_1e3bad8dd_Token>>& _90639_parts) {
	jule::Slice<jule::Ptr<_1e38d4ec7_AssignLeft>> _90717_lefts = nullptr;
	{
		auto &expr = _90639_parts;
		auto it = expr.begin();
		_iter_begin_4727463952:;
		if (it != expr.end()) {
			jule::Slice<_1e3bad8dd_Token> _1e3c61e36_part = *it;
			{
				jule::Ptr<_1e38d4ec7_AssignLeft> _90921_l = (*this)._method_build_assign_l(_1e3c61e36_part);
				_90717_lefts.push(_90921_l);
			}
			_iter_next_4727463952:;
			++it;
			goto _iter_begin_4727463952;
		}
		_iter_end_4727463952:;
	}
	return _90717_lefts;
}



inline std::tuple<jule::Ptr<_1e38d4ec7_AssignSt>,jule::Bool> _1e3c61e36_ScopeParser::_method_build_plain_assign(jule::Slice<_1e3bad8dd_Token>& _91642_tokens) {
	jule::Ptr<_1e3ca4682_AssignInfo> _91717_info = (*this)._method_build_assign_info(_91642_tokens);
	if ((!(_91717_info->_field_ok))) {
		return std::make_tuple(nullptr,false);
	}
	jule::Ptr<_1e38d4ec7_AssignSt> _92217_assign = jule::new_struct<_1e38d4ec7_AssignSt>(new( std::nothrow ) _1e38d4ec7_AssignSt(jule::Bool(),_91717_info->_field_setter,jule::Slice<jule::Ptr<_1e38d4ec7_AssignLeft>>(),jule::Ptr<_1e38d4ec7_Expr>()));
	jule::Slice<jule::Slice<_1e3bad8dd_Token>> _92618_parts;
	jule::Slice<_1e24777a2_Log> _92625_errs;
	std::tie(_92618_parts,_92625_errs) = _1e4a02445_parts(_91717_info->_field_l,8LLU,true);
	if (_92625_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_92625_errs);
		return std::make_tuple(nullptr,false);
	}
	_92217_assign->_field_left=(*this)._method_build_assign_ls(_92618_parts);
	if (_91717_info->_field_r != nullptr) {
		_92217_assign->_field_right=(*this)._field_p->_method_build_expr(_91717_info->_field_r);
	}
	return std::make_tuple(_92217_assign,true);
}



inline std::tuple<jule::Ptr<_1e38d4ec7_AssignSt>,jule::Bool> _1e3c61e36_ScopeParser::_method_build_decl_assign(jule::Slice<_1e3bad8dd_Token> _94040_tokens) {
	if (_94040_tokens.len() < 1LL) {
		return std::make_tuple(nullptr,false);
	}
	_94040_tokens=_94040_tokens.slice(1LL);
	_1e3bad8dd_Token _94617_token = _94040_tokens[0LL];
	if ((_94617_token._field_id != 3LLU) || (_94617_token._field_kind != jule::Str("(", 1))) {
		return std::make_tuple(nullptr,false);
	}
	jule::Ptr<_1e38d4ec7_AssignSt> _95117_assign = jule::new_struct<_1e38d4ec7_AssignSt>(new( std::nothrow ) _1e38d4ec7_AssignSt(true,_1e3bad8dd_Token(),jule::Slice<jule::Ptr<_1e38d4ec7_AssignLeft>>(),jule::Ptr<_1e38d4ec7_Expr>()));
	jule::Int _95517_i = 0LL;
	jule::Slice<_1e3bad8dd_Token> _95617_rang = _1e4a02445_range(_95517_i,jule::Str("(", 1),jule::Str(")", 1),_94040_tokens);
	if (_95617_rang == nullptr) {
		(*this)._method_push_err(_94617_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if ((_95517_i + 1LL) < _94040_tokens.len()) {
		_95117_assign->_field_setter=_94040_tokens[_95517_i];
		(_95517_i)++;
		jule::Slice<_1e3bad8dd_Token> _96321_expr_tokens = _94040_tokens.slice(_95517_i);
		_95117_assign->_field_right=(*this)._field_p->_method_build_expr(_96321_expr_tokens);
	}
	jule::Slice<jule::Slice<_1e3bad8dd_Token>> _96818_parts;
	jule::Slice<_1e24777a2_Log> _96825_errs;
	std::tie(_96818_parts,_96825_errs) = _1e4a02445_parts(_95617_rang,8LLU,true);
	if (_96825_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_96825_errs);
		return std::make_tuple(nullptr,false);
	}
	{
		auto &expr = _96818_parts;
		auto it = expr.begin();
		_iter_begin_4727500368:;
		if (it != expr.end()) {
			jule::Slice<_1e3bad8dd_Token> _1e3c61e36_part = *it;
			{
				jule::Bool _97521_is_mut = false;
				jule::Bool _97621_is_ref = false;
				_94617_token=_1e3c61e36_part[0LL];
				if (_94617_token._field_id == 36LLU) {
					_97521_is_mut=true;
					_1e3c61e36_part=_1e3c61e36_part.slice(1LL);
					if (_1e3c61e36_part.len() == 0LL) {
						(*this)._method_push_err(_94617_token,jule::Str("invalid syntax", 14));
						goto _iter_next_4727500368;
					}
				}
				if ((_1e3c61e36_part[0LL]._field_id == 7LLU) && (_1e3c61e36_part[0LL]._field_kind == jule::Str("&", 1))) {
					_97621_is_ref=true;
					_1e3c61e36_part=_1e3c61e36_part.slice(1LL);
					if (_1e3c61e36_part.len() == 0LL) {
						(*this)._method_push_err(_94617_token,jule::Str("invalid syntax", 14));
						goto _iter_next_4727500368;
					}
				}
				if (((_1e3c61e36_part[0LL]._field_id != 2LLU) && (_1e3c61e36_part[0LL]._field_id != 3LLU)) && (_1e3c61e36_part[0LL]._field_kind != jule::Str("(", 1))) {
					(*this)._method_push_err(_94617_token,jule::Str("invalid syntax", 14));
					goto _iter_next_4727500368;
				}
				jule::Ptr<_1e38d4ec7_AssignLeft> _100421_l = (*this)._method_build_assign_l(_1e3c61e36_part);
				_100421_l->_field_mutable=_97521_is_mut;
				_100421_l->_field_reference=_97621_is_ref;
				_95117_assign->_field_left = jule::alloc_for_append(_95117_assign->_field_left,1);_95117_assign->_field_left.push(_100421_l);
			}
			_iter_next_4727500368:;
			++it;
			goto _iter_begin_4727500368;
		}
		_iter_end_4727500368:;
	}
	return std::make_tuple(_95117_assign,true);
}



inline std::tuple<jule::Ptr<_1e38d4ec7_AssignSt>,jule::Bool> _1e3c61e36_ScopeParser::_method_build_assign_st(jule::Slice<_1e3bad8dd_Token>& _101339_tokens) {
	jule::Ptr<_1e38d4ec7_AssignSt> _101358_st = jule::Ptr<_1e38d4ec7_AssignSt>();
	jule::Bool _101373_ok = jule::Bool();
	if ((!(_1e3ca4682_check_assign_tokens(_101339_tokens)))) {
		_101358_st = nullptr;
		_101373_ok = false;
		return std::make_tuple(_101358_st,_101373_ok);
	}
	{
		auto &_match_expr{ _101339_tokens[0LL]._field_id };
		if (!((34LLU) == _match_expr)) { goto _case_end_4727528592; }
		_case_begin_4727528592:;
		{
			std::tie(_101358_st,_101373_ok) = (*this)._method_build_decl_assign(_101339_tokens);
		}
		goto _match_end_4727526960;
		_case_end_4727528592:;
		_case_begin_4727525648:;
		{
			std::tie(_101358_st,_101373_ok) = (*this)._method_build_plain_assign(_101339_tokens);
		}
		goto _match_end_4727526960;
		_case_end_4727525648:;
		_match_end_4727526960:;
	}
	return std::make_tuple(_101358_st,_101373_ok);
}



inline jule::Any _1e3c61e36_ScopeParser::_method_build_st(jule::Ptr<_1e3c61e36_Stmt>& _102632_st) {
	_1e3bad8dd_Token _102717_token = _102632_st->_field_tokens[0LL];
	if (_102717_token._field_id == 2LLU) {
		jule::Any _102922_s;
		jule::Bool _102925_ok;
		std::tie(_102922_s,_102925_ok) = (*this)._method_build_id_st(_102632_st->_field_tokens);
		if (_102925_ok) {
			return _102922_s;
		}
	}
	jule::Ptr<_1e38d4ec7_AssignSt> _103518_s;
	jule::Bool _103521_ok;
	std::tie(_103518_s,_103521_ok) = (*this)._method_build_assign_st(_102632_st->_field_tokens);
	if (_103521_ok) {
		return jule::Any(_103518_s);
	}
	{
		auto &_match_expr{ _102717_token._field_id };
		if (!((38LLU) == _match_expr || (9LLU) == _match_expr || (34LLU) == _match_expr || (36LLU) == _match_expr)) { goto _case_end_4727541392; }
		_case_begin_4727541392:;
		{
			return (*this)._method_build_var_st(_102632_st->_field_tokens);
		}
		goto _match_end_4727538320;
		_case_end_4727541392:;
		if (!((4LLU) == _match_expr)) { goto _case_end_4727539312; }
		_case_begin_4727539312:;
		{
			return (*this)._method_build_ret_st(_102632_st->_field_tokens);
		}
		goto _match_end_4727538320;
		_case_end_4727539312:;
		if (!((12LLU) == _match_expr)) { goto _case_end_4727539408; }
		_case_begin_4727539408:;
		{
			return (*this)._method_buid_iter_st(_102632_st);
		}
		goto _match_end_4727538320;
		_case_end_4727539408:;
		if (!((13LLU) == _match_expr)) { goto _case_end_4727539504; }
		_case_begin_4727539504:;
		{
			return (*this)._method_build_break_st(_102632_st->_field_tokens);
		}
		goto _match_end_4727538320;
		_case_end_4727539504:;
		if (!((14LLU) == _match_expr)) { goto _case_end_4727539600; }
		_case_begin_4727539600:;
		{
			return (*this)._method_build_cont_st(_102632_st->_field_tokens);
		}
		goto _match_end_4727538320;
		_case_end_4727539600:;
		if (!((16LLU) == _match_expr)) { goto _case_end_4727539776; }
		_case_begin_4727539776:;
		{
			return (*this)._method_build_if_else_chain(_102632_st->_field_tokens);
		}
		goto _match_end_4727538320;
		_case_end_4727539776:;
		if (!((18LLU) == _match_expr)) { goto _case_end_4727539872; }
		_case_begin_4727539872:;
		{
			return (*this)._method_build_comment_st(_102717_token);
		}
		goto _match_end_4727538320;
		_case_end_4727539872:;
		if (!((26LLU) == _match_expr)) { goto _case_end_4727539968; }
		_case_begin_4727539968:;
		{
			return (*this)._method_build_co_call_st(_102632_st->_field_tokens);
		}
		goto _match_end_4727538320;
		_case_end_4727539968:;
		if (!((22LLU) == _match_expr)) { goto _case_end_4727540064; }
		_case_begin_4727540064:;
		{
			return (*this)._method_build_goto_st(_102632_st->_field_tokens);
		}
		goto _match_end_4727538320;
		_case_end_4727540064:;
		if (!((32LLU) == _match_expr)) { goto _case_end_4727540160; }
		_case_begin_4727540160:;
		{
			return (*this)._method_build_fall_st(_102632_st->_field_tokens);
		}
		goto _match_end_4727538320;
		_case_end_4727540160:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4727542144; }
		_case_begin_4727542144:;
		{
			return (*this)._method_build_type_alias_st(_102632_st->_field_tokens);
		}
		goto _match_end_4727538320;
		_case_end_4727542144:;
		if (!((27LLU) == _match_expr)) { goto _case_end_4727542240; }
		_case_begin_4727542240:;
		{
			return jule::Any((*this)._method_build_match_case(_102632_st->_field_tokens));
		}
		goto _match_end_4727538320;
		_case_end_4727542240:;
		if (!((35LLU) == _match_expr || (37LLU) == _match_expr)) { goto _case_end_4727542336; }
		_case_begin_4727542336:;
		{
			return jule::Any((*this)._method_build_scope_st(_102632_st->_field_tokens));
		}
		goto _match_end_4727538320;
		_case_end_4727542336:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4727542432; }
		_case_begin_4727542432:;
		{
			if (_102717_token._field_kind == jule::Str("{", 1)) {
				return jule::Any((*this)._method_build_scope_st(_102632_st->_field_tokens));
			}
		}
		goto _match_end_4727538320;
		_case_end_4727542432:;
		_case_begin_4727538608:;
		{
			if (_1e3ca6387_is_fn_call(_102632_st->_field_tokens) != nullptr) {
				return (*this)._method_build_call_st(_102632_st->_field_tokens);
			}
		}
		goto _match_end_4727538320;
		_case_end_4727538608:;
		_match_end_4727538320:;
	}
	(*this)._method_push_err(_102717_token,jule::Str("invalid syntax", 14));
	return jule::Any(nullptr);
}



inline void _1e3c61e36_ScopeParser::_method_build(jule::Slice<_1e3bad8dd_Token>& _110229_tokens,jule::Ptr<_1e38d4ec7_ScopeTree>& _110251_s) {
	if (_110251_s == nullptr) {
		return;
	}
	(*this)._field_stms=_1e3c61e36_split_stms(_110229_tokens);
	(*this)._field_pos=-1LL;
	(*this)._field_s=_110251_s;
	while ((!((*this)._method_is_last_st())) && (!((*this)._method_finished()))) {
		{
			jule::Ptr<_1e3c61e36_Stmt> _111121_st = (*this)._method_next();
			jule::Any _111221_data = (*this)._method_build_st(_111121_st);
			if (_111221_data != nullptr) {
				(*this)._field_s->_field_stmts = jule::alloc_for_append((*this)._field_s->_field_stmts,1);(*this)._field_s->_field_stmts.push(_111221_data);
			}
			if ((*this)._method_stopped()) {
				goto _iter_end_4727560624;
			}
		}
	_iter_next_4727560624:;
	}
	_iter_end_4727560624:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e3c61e36_ScopeParser &_Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stms:" << _Src._field_stms << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e3ca6387_CallData &_Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _1e3ca6387_Precedencer::_method_set(jule::Int _16422_level,jule::Any _16434_expr) {
	{
		auto &expr = (*this)._field_pairs;
		auto it = expr.begin();
		_iter_begin_4727570800:;
		if (it != expr.end()) {
			jule::Int _1e3ca6387_i = it - expr.begin();
			jule::Slice<jule::Any> &_1e3ca6387_pair = *it;
			{
				jule::Int _16617_pair_level = _1e3ca6387_pair[0LL].operator jule::Int();
				if (_16422_level > _16617_pair_level) {
					jule::Slice<jule::Slice<jule::Any>> _16825_first = (*this)._field_pairs.slice(0LL,_1e3ca6387_i);
					jule::Slice<jule::Slice<jule::Any>> _16925_buffer = jule::Slice<jule::Slice<jule::Any>>({jule::Slice<jule::Any>({jule::Any(_16422_level),_16434_expr})});
					jule::Slice<jule::Slice<jule::Any>> _17025_appended = jule::append(_16925_buffer,(*this)._field_pairs.slice(_1e3ca6387_i));
					(*this)._field_pairs=jule::append(_16825_first,_17025_appended);
					return;
				}
			}
			_iter_next_4727570800:;
			++it;
			_1e3ca6387_i++;
			goto _iter_begin_4727570800;
		}
		_iter_end_4727570800:;
	}
	(*this)._field_pairs = jule::alloc_for_append((*this)._field_pairs,1);(*this)._field_pairs.push(jule::Slice<jule::Any>({jule::Any(_16422_level),_16434_expr}));
}



inline jule::Any _1e3ca6387_Precedencer::_method_get_lower(void) {
	jule::I64 _17917_i = (*this)._field_pairs.len() - 1LL;
	for (; _17917_i >= 0LL; (_17917_i)--) {
		{
			jule::Any _18121_data = (*this)._field_pairs[_17917_i][1LL];
			if (_18121_data != nullptr) {
				return _18121_data;
			}
		}
	_iter_next_4727574304:;
	}
	_iter_end_4727574304:;
	return jule::Any(nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e3ca6387_Precedencer &_Src) {
	_Stream << "Precedencer{";
	_Stream << "pairs:" << _Src._field_pairs;
	_Stream << "}";
	return _Stream;
}



inline void _1e3ca6387_ExprBuilder::_method_push_err(_1e3bad8dd_Token _30727_token,jule::Str _30741_fmt,jule::Slice<jule::Any> _30754_args) {
	(*this)._field_p->_method_push_err(_30727_token,_30741_fmt,_30754_args);
}



inline void _1e3ca6387_ExprBuilder::_method_push_suggestion(jule::Str _31234_fmt,jule::Slice<jule::Any> _31247_args) {
	(*this)._field_p->_method_push_suggestion(_31234_fmt,_31247_args);
}



inline jule::Ptr<_1e38d4ec7_TupleExpr> _1e3ca6387_ExprBuilder::_method_build_tuple(jule::Slice<jule::Slice<_1e3bad8dd_Token>>& _31635_parts) {
	jule::Ptr<_1e38d4ec7_TupleExpr> _31717_tuple = jule::new_struct<_1e38d4ec7_TupleExpr>(new( std::nothrow ) _1e38d4ec7_TupleExpr(jule::Slice<jule::Ptr<_1e38d4ec7_Expr>>::alloc(0LL,static_cast<jule::I64>(_31635_parts.len()))));
	{
		auto &expr = _31635_parts;
		auto it = expr.begin();
		_iter_begin_4727617328:;
		if (it != expr.end()) {
			jule::Slice<_1e3bad8dd_Token> _1e3ca6387_part = *it;
			{
				_31717_tuple->_field_expr = jule::alloc_for_append(_31717_tuple->_field_expr,1);_31717_tuple->_field_expr.push((*this)._method_build_from_tokens(_1e3ca6387_part));
			}
			_iter_next_4727617328:;
			++it;
			goto _iter_begin_4727617328;
		}
		_iter_end_4727617328:;
	}
	return _31717_tuple;
}



inline jule::Ptr<_1e38d4ec7_LitExpr> _1e3ca6387_ExprBuilder::_method_build_lit(_1e3bad8dd_Token _32628_token) {
	return jule::new_struct<_1e38d4ec7_LitExpr>(new( std::nothrow ) _1e38d4ec7_LitExpr(_32628_token,_32628_token._field_kind));
}



inline jule::Ptr<_1e38d4ec7_TypeDecl> _1e3ca6387_ExprBuilder::_method_build_primitive_type(_1e3bad8dd_Token& _33340_token) {
	return _1e4a2bb9a_build_prim_type(_33340_token);
}



inline jule::Any _1e3ca6387_ExprBuilder::_method_build_single(_1e3bad8dd_Token _33735_token) {
	{
		auto &_match_expr{ _33735_token._field_id };
		if (!((6LLU) == _match_expr)) { goto _case_end_4727630016; }
		_case_begin_4727630016:;
		{
			return jule::Any((*this)._method_build_lit(_33735_token));
		}
		goto _match_end_4727627648;
		_case_end_4727630016:;
		if (!((2LLU) == _match_expr || (28LLU) == _match_expr)) { goto _case_end_4727629680; }
		_case_begin_4727629680:;
		{
			return jule::Any(_1e3ca6387_build_ident_expr(_33735_token));
		}
		goto _match_end_4727627648;
		_case_end_4727629680:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4727629776; }
		_case_begin_4727629776:;
		{
			return jule::Any((*this)._method_build_primitive_type(_33735_token));
		}
		goto _match_end_4727627648;
		_case_end_4727629776:;
		_case_begin_4727627104:;
		{
			(*this)._method_push_err(_33735_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return jule::Any(nullptr);
		}
		goto _match_end_4727627648;
		_case_end_4727627104:;
		_match_end_4727627648:;
	}
}



inline jule::Ptr<_1e38d4ec7_IdentExpr> _1e3ca6387_ExprBuilder::_method_build_cpp_linked_ident(jule::Slice<_1e3bad8dd_Token>& _35546_tokens) {
	if (_35546_tokens[0LL]._field_id != 31LLU) {
		return nullptr;
	} else if (_35546_tokens[1LL]._field_id != 20LLU) {
		(*this)._method_push_err(_35546_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1e3bad8dd_Token _36317_token = _35546_tokens[2LL];
	if (_36317_token._field_id != 2LLU) {
		(*this)._method_push_err(_35546_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1e38d4ec7_IdentExpr> _36917_expr = _1e3ca6387_build_ident_expr(_36317_token);
	_36917_expr->_field_cpp_linked=true;
	return _36917_expr;
}



inline jule::Ptr<_1e38d4ec7_UnaryExpr> _1e3ca6387_ExprBuilder::_method_build_unary(jule::Slice<_1e3bad8dd_Token> _37434_tokens) {
	_1e3bad8dd_Token _37517_op = _37434_tokens[0LL];
	if (_37434_tokens.len() == 1LL) {
		(*this)._method_push_err(_37517_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_1e3bad8dd_is_unary_op(_37517_op._field_kind)))) {
		(*this)._method_push_err(_37517_op,jule::Str("invalid_operator_for_unary: @", 29),jule::Slice<jule::Any>({jule::Any(_37517_op._field_kind)}));
		return nullptr;
	}
	_37434_tokens=_37434_tokens.slice(1LL);
	return jule::new_struct<_1e38d4ec7_UnaryExpr>(new( std::nothrow ) _1e38d4ec7_UnaryExpr(_37517_op,(*this)._method_build(_37434_tokens)));
}



inline jule::Ptr<_1e38d4ec7_SubIdentExpr> _1e3ca6387_ExprBuilder::_method_build_obj_sub_ident(jule::Slice<_1e3bad8dd_Token> _39542_tokens) {
	jule::I64 _39617_i = _39542_tokens.len() - 1LL;
	_1e3bad8dd_Token _39717_ident_token = _39542_tokens[_39617_i];
	(_39617_i)--;
	_39542_tokens=_39542_tokens.slice(0LL,_39617_i);
	if (_39542_tokens.len() == 0LL) {
		(*this)._method_push_err(_39717_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_1e38d4ec7_SubIdentExpr>(new( std::nothrow ) _1e38d4ec7_SubIdentExpr(jule::Bool(),(*this)._method_build(_39542_tokens),_39717_ident_token));
}



inline jule::Ptr<_1e38d4ec7_NsSelectionExpr> _1e3ca6387_ExprBuilder::_method_build_ns_sub_ident(jule::Slice<_1e3bad8dd_Token>& _41042_tokens) {
	jule::Ptr<_1e38d4ec7_NsSelectionExpr> _41117_ns = jule::new_struct<_1e38d4ec7_NsSelectionExpr>(new( std::nothrow ) _1e38d4ec7_NsSelectionExpr());
	{
		auto &expr = _41042_tokens;
		auto it = expr.begin();
		_iter_begin_4727668032:;
		if (it != expr.end()) {
			jule::Int _1e3ca6387_i = it - expr.begin();
			_1e3bad8dd_Token _1e3ca6387_token = *it;
			{
				if (jule::unsafe_mod(_1e3ca6387_i,2LL) == 0LL) {
					if (_1e3ca6387_token._field_id != 2LLU) {
						(*this)._method_push_err(_1e3ca6387_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					}
					_41117_ns->_field_ns = jule::alloc_for_append(_41117_ns->_field_ns,1);_41117_ns->_field_ns.push(_1e3ca6387_token);
				} else if (_1e3ca6387_token._field_id != 23LLU) {
					(*this)._method_push_err(_1e3ca6387_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					(*this)._method_push_suggestion(jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				}
			}
			_iter_next_4727668032:;
			++it;
			_1e3ca6387_i++;
			goto _iter_begin_4727668032;
		}
		_iter_end_4727668032:;
	}
	_41117_ns->_field_ident=_41117_ns->_field_ns[_41117_ns->_field_ns.len() - 1LL];
	_41117_ns->_field_ns=_41117_ns->_field_ns.slice(0LL,_41117_ns->_field_ns.len() - 1LL);
	return _41117_ns;
}



inline jule::Ptr<_1e38d4ec7_TypeDecl> _1e3ca6387_ExprBuilder::_method_build_type(jule::Slice<_1e3bad8dd_Token>& _42934_tokens) {
	jule::Int _43017_i = 0LL;
	jule::Ptr<_1e38d4ec7_TypeDecl> _43118_t;
	jule::Bool _43121_ok;
	std::tie(_43118_t,_43121_ok) = (*this)._field_p->_method_build_type(_42934_tokens,(&(_43017_i)),false);
	if ((!(_43121_ok))) {
		(*this)._method_push_err(_42934_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_43017_i < _42934_tokens.len()) {
		(*this)._method_push_err(_42934_tokens[_43017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _43118_t;
}



inline jule::Any _1e3ca6387_ExprBuilder::_method_build_sub_ident(jule::Slice<_1e3bad8dd_Token>& _44339_tokens) {
	jule::I64 _44413_i = _44339_tokens.len() - 2LL;
	_1e3bad8dd_Token _44513_token = _44339_tokens[_44413_i];
	{
		auto &_match_expr{ _44513_token._field_id };
		if (!((20LLU) == _match_expr)) { goto _case_end_4727694080; }
		_case_begin_4727694080:;
		{
			return jule::Any((*this)._method_build_obj_sub_ident(_44339_tokens));
		}
		goto _match_end_4727693888;
		_case_end_4727694080:;
		if (!((23LLU) == _match_expr)) { goto _case_end_4727694176; }
		_case_begin_4727694176:;
		{
			return jule::Any((*this)._method_build_ns_sub_ident(_44339_tokens));
		}
		goto _match_end_4727693888;
		_case_end_4727694176:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4727694272; }
		_case_begin_4727694272:;
		{
			if (_44513_token._field_kind == jule::Str("]", 1)) {
				return jule::Any((*this)._method_build_type(_44339_tokens));
			}
		}
		goto _match_end_4727693888;
		_case_end_4727694272:;
		_match_end_4727693888:;
	}
	(*this)._method_push_err(_44513_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_1e38d4ec7_VariadicExpr> _1e3ca6387_ExprBuilder::_method_build_variadic(jule::Slice<_1e3bad8dd_Token> _46437_tokens) {
	_1e3bad8dd_Token _46517_token = _46437_tokens[_46437_tokens.len() - 1LL];
	_46437_tokens=_46437_tokens.slice(0LL,_46437_tokens.len() - 1LL);
	return jule::new_struct<_1e38d4ec7_VariadicExpr>(new( std::nothrow ) _1e38d4ec7_VariadicExpr(_46517_token,(*this)._method_build(_46437_tokens)));
}



inline jule::Any _1e3ca6387_ExprBuilder::_method_build_op_right(jule::Slice<_1e3bad8dd_Token>& _47338_tokens) {
	_1e3bad8dd_Token _47417_token = _47338_tokens[_47338_tokens.len() - 1LL];
	{
		auto &_match_expr{ _47417_token._field_kind };
		if (!((jule::Str("...", 3)) == _match_expr)) { goto _case_end_4727709680; }
		_case_begin_4727709680:;
		{
			return jule::Any((*this)._method_build_variadic(_47338_tokens));
		}
		goto _match_end_4727709408;
		_case_end_4727709680:;
		_case_begin_4727707504:;
		{
			(*this)._method_push_err(_47417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return jule::Any(nullptr);
		}
		goto _match_end_4727709408;
		_case_end_4727707504:;
		_match_end_4727709408:;
	}
}



inline jule::Any _1e3ca6387_ExprBuilder::_method_build_between_parentheses(jule::Slice<_1e3bad8dd_Token> _48548_tokens) {
	_1e3bad8dd_Token _48613_token = _48548_tokens[0LL];
	_48548_tokens=_48548_tokens.slice(1LL,_48548_tokens.len() - 1LL);
	if (_48548_tokens.len() == 0LL) {
		(*this)._method_push_err(_48613_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	return (*this)._method_build(_48548_tokens);
}



inline jule::Ptr<_1e38d4ec7_CastExpr> _1e3ca6387_ExprBuilder::_method_try_build_cast(jule::Slice<_1e3bad8dd_Token>& _49638_tokens) {
	jule::Int _49717_range_n = 0LL;
	{
		auto &expr = _49638_tokens;
		auto it = expr.begin();
		_iter_begin_4727723200:;
		if (it != expr.end()) {
			jule::Int _1e3ca6387_i = it - expr.begin();
			_1e3bad8dd_Token &_1e3ca6387_token = *it;
			{
				if (_1e3ca6387_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _1e3ca6387_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4727728000; }
						_case_begin_4727728000:;
						{
							(_49717_range_n)++;
							goto _iter_next_4727723200;
						}
						goto _match_end_4727726640;
						_case_end_4727728000:;
						_case_begin_4727725952:;
						{
							(_49717_range_n)--;
						}
						goto _match_end_4727726640;
						_case_end_4727725952:;
						_match_end_4727726640:;
					}
				}
				if (_49717_range_n > 0LL) {
					goto _iter_next_4727723200;
				} else if ((_1e3ca6387_i + 1LL) == _49638_tokens.len()) {
					return nullptr;
				}
				jule::Slice<_1e3bad8dd_Token> _51821_type_tokens = _49638_tokens.slice(0LL,_1e3ca6387_i + 1LL);
				jule::Slice<_1e3bad8dd_Token> _51921_expr_tokens = _49638_tokens.slice(_1e3ca6387_i + 1LL);
				if (_51921_expr_tokens.len() == 0LL) {
					return nullptr;
				}
				_1e3bad8dd_Token _52617_tok = _51921_expr_tokens[0LL];
				if ((_52617_tok._field_id != 3LLU) || (_52617_tok._field_kind != jule::Str("(", 1))) {
					return nullptr;
				}
				jule::Ptr<_1e38d4ec7_CastExpr> _53121_cast = jule::new_struct<_1e38d4ec7_CastExpr>(new( std::nothrow ) _1e38d4ec7_CastExpr());
				if (_51921_expr_tokens.len() == 2LL) {
					(*this)._method_push_err(_51921_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					(*this)._method_push_suggestion(jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				}
				if (_51821_type_tokens.len() == 2LL) {
					(*this)._method_push_err(_51821_type_tokens[0LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
					(*this)._method_push_suggestion(jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_51821_type_tokens=_51821_type_tokens.slice(1LL,_51821_type_tokens.len() - 1LL);
					jule::Int _54525_type_index = 0LL;
					jule::Ptr<_1e38d4ec7_TypeDecl> _54626_t;
					jule::Bool _54629_ok;
					std::tie(_54626_t,_54629_ok) = (*this)._field_p->_method_build_type(_51821_type_tokens,(&(_54525_type_index)),true);
					if (_54629_ok && (_54525_type_index < _51821_type_tokens.len())) {
						(*this)._method_push_err(_51821_type_tokens[_54525_type_index],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_54629_ok))) {
						return _53121_cast;
					}
					_53121_cast->_field_kind=_54626_t;
					if (_51921_expr_tokens.len() > 2LL) {
						jule::Int _55629_j = 0LL;
						_1e4a02445_range(_55629_j,jule::Str("(", 1),jule::Str(")", 1),_51921_expr_tokens);
						if (_55629_j < _51921_expr_tokens.len()) {
							return nullptr;
						}
						_51921_expr_tokens=_51921_expr_tokens.slice(0LL,_55629_j);
						_53121_cast->_field_expr=(*this)._method_build(_51921_expr_tokens);
					}
				}
				return _53121_cast;
			}
			_iter_next_4727723200:;
			++it;
			_1e3ca6387_i++;
			goto _iter_begin_4727723200;
		}
		_iter_end_4727723200:;
	}
	return nullptr;
}



inline void _1e3ca6387_ExprBuilder::_method_push_arg(jule::Slice<jule::Ptr<_1e38d4ec7_Expr>>& _57132_args,jule::Slice<_1e3bad8dd_Token> _57151_tokens,_1e3bad8dd_Token _57168_err_token) {
	if (_57151_tokens.len() == 0LL) {
		(*this)._method_push_err(_57168_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;
	}
	_57132_args.push((*this)._method_build_from_tokens(_57151_tokens));
}



inline jule::Slice<jule::Ptr<_1e38d4ec7_Expr>> _1e3ca6387_ExprBuilder::_method_build_args(jule::Slice<_1e3bad8dd_Token> _58033_tokens) {
	if (_58033_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1e38d4ec7_Expr>> _58617_args = nullptr;
	jule::Int _58717_last = 0LL;
	jule::Int _58817_range_n = 0LL;
	_58033_tokens=_58033_tokens.slice(1LL,_58033_tokens.len() - 1LL);
	{
		auto &expr = _58033_tokens;
		auto it = expr.begin();
		_iter_begin_4727766896:;
		if (it != expr.end()) {
			jule::Int _1e3ca6387_i = it - expr.begin();
			_1e3bad8dd_Token &_1e3ca6387_token = *it;
			{
				if (_1e3ca6387_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _1e3ca6387_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4727772208; }
						_case_begin_4727772208:;
						{
							(_58817_range_n)++;
						}
						goto _match_end_4727770848;
						_case_end_4727772208:;
						_case_begin_4727770160:;
						{
							(_58817_range_n)--;
						}
						goto _match_end_4727770848;
						_case_end_4727770160:;
						_match_end_4727770848:;
					}
				}
				if ((_58817_range_n > 0LL) || (_1e3ca6387_token._field_id != 8LLU)) {
					goto _iter_next_4727766896;
				}
				(*this)._method_push_arg(_58617_args,_58033_tokens.slice(_58717_last,_1e3ca6387_i),_1e3ca6387_token);
				_58717_last=static_cast<jule::Int>(_1e3ca6387_i + 1LL);
			}
			_iter_next_4727766896:;
			++it;
			_1e3ca6387_i++;
			goto _iter_begin_4727766896;
		}
		_iter_end_4727766896:;
	}
	if (_58717_last < _58033_tokens.len()) {
		if (_58717_last == 0LL) {
			if (_58033_tokens.len() > 0LL) {
				(*this)._method_push_arg(_58617_args,_58033_tokens.slice(_58717_last),_58033_tokens[_58717_last]);
			}
		} else {
			(*this)._method_push_arg(_58617_args,_58033_tokens.slice(_58717_last),_58033_tokens[_58717_last - 1LL]);
		}
	}
	return _58617_args;
}



inline jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>> _1e3ca6387_ExprBuilder::_method_build_call_generics(jule::Slice<_1e3bad8dd_Token> _62342_tokens) {
	if (_62342_tokens.len() == 0LL) {
		return nullptr;
	}
	_62342_tokens=_62342_tokens.slice(1LL,_62342_tokens.len() - 1LL);
	jule::Slice<jule::Slice<_1e3bad8dd_Token>> _62918_parts;
	jule::Slice<_1e24777a2_Log> _62925_errs;
	std::tie(_62918_parts,_62925_errs) = _1e4a02445_parts(_62342_tokens,8LLU,true);
	jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>> _63017_generics = jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_62918_parts.len()));
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_62925_errs);
	{
		auto &expr = _62918_parts;
		auto it = expr.begin();
		_iter_begin_4727789088:;
		if (it != expr.end()) {
			jule::Slice<_1e3bad8dd_Token> _1e3ca6387_part = *it;
			{
				if (_1e3ca6387_part.len() == 0LL) {
					goto _iter_next_4727789088;
				}
				jule::Int _63621_j = 0LL;
				jule::Ptr<_1e38d4ec7_TypeDecl> _63722_generic;
				std::tie(_63722_generic,std::ignore) = (*this)._field_p->_method_build_type(_1e3ca6387_part,(&(_63621_j)),true);
				if (_63621_j < _1e3ca6387_part.len()) {
					(*this)._method_push_err(_1e3ca6387_part[_63621_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_63017_generics.push(_63722_generic);
			}
			_iter_next_4727789088:;
			++it;
			goto _iter_begin_4727789088;
		}
		_iter_end_4727789088:;
	}
	return _63017_generics;
}



inline jule::Ptr<_1e38d4ec7_FnCallExpr> _1e3ca6387_ExprBuilder::_method_build_fn_call(_1e3bad8dd_Token& _64737_token,jule::Ptr<_1e3ca6387_CallData>& _64756_data) {
	return jule::new_struct<_1e38d4ec7_FnCallExpr>(new( std::nothrow ) _1e38d4ec7_FnCallExpr(_64737_token,(*this)._method_build_from_tokens(_64756_data->_field_expr_tokens),(*this)._method_build_call_generics(_64756_data->_field_generics_tokens),(*this)._method_build_args(_64756_data->_field_args_tokens),jule::Bool()));
}



inline jule::Any _1e3ca6387_ExprBuilder::_method_build_parentheses_range(jule::Slice<_1e3bad8dd_Token>& _65647_tokens) {
	_1e3bad8dd_Token _65717_token = _65647_tokens[0LL];
	{
		auto &_match_expr{ _65717_token._field_id };
		if (!((3LLU) == _match_expr)) { goto _case_end_4727802624; }
		_case_begin_4727802624:;
		{
			{
				auto &_match_expr{ _65717_token._field_kind };
				if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4727805808; }
				_case_begin_4727805808:;
				{
					jule::Ptr<_1e38d4ec7_CastExpr> _66225_expr = (*this)._method_try_build_cast(_65647_tokens);
					if (_66225_expr != nullptr) {
						return jule::Any(_66225_expr);
					}
				}
				goto _match_end_4727805648;
				_case_end_4727805808:;
				_match_end_4727805648:;
			}
		}
		goto _match_end_4727804224;
		_case_end_4727802624:;
		_match_end_4727804224:;
	}
	jule::Ptr<_1e3ca6387_CallData> _66917_data = _1e3ca6387_get_call_data(_65647_tokens);
	if (_66917_data->_field_expr_tokens.len() == 0LL) {
		return (*this)._method_build_between_parentheses(_66917_data->_field_args_tokens);
	}
	return jule::Any((*this)._method_build_fn_call(_65717_token,_66917_data));
}



inline jule::Ptr<_1e38d4ec7_UnsafeExpr> _1e3ca6387_ExprBuilder::_method_build_unsafe_expr(jule::Slice<_1e3bad8dd_Token> _68040_tokens) {
	_1e3bad8dd_Token _68117_token = _68040_tokens[0LL];
	_68040_tokens=_68040_tokens.slice(1LL);
	jule::Int _68317_i = 0LL;
	jule::Slice<_1e3bad8dd_Token> _68417_range_tokens = _1e4a02445_range(_68317_i,jule::Str("{", 1),jule::Str("}", 1),_68040_tokens);
	if (_68417_range_tokens.len() == 0LL) {
		(*this)._method_push_err(_68040_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_1e38d4ec7_UnsafeExpr>(new( std::nothrow ) _1e38d4ec7_UnsafeExpr(_68117_token,(*this)._method_build_from_tokens(_68417_range_tokens)->_field_kind));
}



inline jule::Ptr<_1e38d4ec7_FnDecl> _1e3ca6387_ExprBuilder::_method_build_anon_fn(jule::Slice<_1e3bad8dd_Token>& _69537_tokens) {
	jule::Ptr<_1e38d4ec7_FnDecl> _69617_f = (*this)._field_p->_method_build_fn(_69537_tokens,false,false);
	if ((!(_69617_f->_method_is_anon()))) {
		(*this)._method_push_err(_69617_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	}
	return _69617_f;
}



inline jule::Any _1e3ca6387_ExprBuilder::_method_build_unsafe(jule::Slice<_1e3bad8dd_Token>& _70436_tokens) {
	{
		auto &_match_expr{ _70436_tokens[1LL]._field_id };
		if (!((33LLU) == _match_expr)) { goto _case_end_4727833600; }
		_case_begin_4727833600:;
		{
			return jule::Any((*this)._method_build_anon_fn(_70436_tokens));
		}
		goto _match_end_4727832192;
		_case_end_4727833600:;
		_case_begin_4727831136:;
		{
			return jule::Any((*this)._method_build_unsafe_expr(_70436_tokens));
		}
		goto _match_end_4727832192;
		_case_end_4727831136:;
		_match_end_4727832192:;
	}
}



inline void _1e3ca6387_ExprBuilder::_method_push_range_lit_part(jule::Slice<_1e3bad8dd_Token> _71542_part,_1e3bad8dd_Token _7169_error_token,jule::Slice<jule::Slice<_1e3bad8dd_Token>>& _71634_parts) {
	if (_71542_part.len() == 0LL) {
		(*this)._method_push_err(_7169_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;
	}
	_71634_parts.push(_71542_part);
}



inline jule::Slice<jule::Slice<_1e3bad8dd_Token>> _1e3ca6387_ExprBuilder::_method_get_brace_range_lit_expr_parts(jule::Slice<_1e3bad8dd_Token> _72653_tokens) {
	if (_72653_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_1e3bad8dd_Token>> _73217_parts = nullptr;
	jule::Int _73417_last = 0LL;
	jule::Int _73517_range_n = 0LL;
	_72653_tokens=_72653_tokens.slice(1LL,_72653_tokens.len() - 1LL);
	{
		auto &expr = _72653_tokens;
		auto it = expr.begin();
		_iter_begin_4727848432:;
		if (it != expr.end()) {
			jule::Int _1e3ca6387_i = it - expr.begin();
			_1e3bad8dd_Token &_1e3ca6387_token = *it;
			{
				if (_1e3ca6387_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _1e3ca6387_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4727853744; }
						_case_begin_4727853744:;
						{
							(_73517_range_n)++;
						}
						goto _match_end_4727852384;
						_case_end_4727853744:;
						_case_begin_4727851696:;
						{
							(_73517_range_n)--;
						}
						goto _match_end_4727852384;
						_case_end_4727851696:;
						_match_end_4727852384:;
					}
				}
				if ((_73517_range_n > 0LL) || (_1e3ca6387_token._field_id != 8LLU)) {
					goto _iter_next_4727848432;
				}
				(*this)._method_push_range_lit_part(_72653_tokens.slice(_73417_last,_1e3ca6387_i),_1e3ca6387_token,_73217_parts);
				_73417_last=static_cast<jule::Int>(_1e3ca6387_i + 1LL);
			}
			_iter_next_4727848432:;
			++it;
			_1e3ca6387_i++;
			goto _iter_begin_4727848432;
		}
		_iter_end_4727848432:;
	}
	if (_73417_last < _72653_tokens.len()) {
		if (_73417_last == 0LL) {
			if (_72653_tokens.len() > 0LL) {
				(*this)._method_push_range_lit_part(_72653_tokens.slice(_73417_last),_72653_tokens[_73417_last],_73217_parts);
			}
		} else {
			(*this)._method_push_range_lit_part(_72653_tokens.slice(_73417_last),_72653_tokens[_73417_last - 1LL],_73217_parts);
		}
	}
	return _73217_parts;
}



inline jule::Ptr<_1e38d4ec7_FieldExprPair> _1e3ca6387_ExprBuilder::_method_build_field_expr_pair(jule::Slice<_1e3bad8dd_Token> _76944_tokens) {
	jule::Ptr<_1e38d4ec7_FieldExprPair> _77017_pair = jule::new_struct<_1e38d4ec7_FieldExprPair>(new( std::nothrow ) _1e38d4ec7_FieldExprPair(_76944_tokens[0LL],jule::Any()));
	_76944_tokens=_76944_tokens.slice(2LL);
	_77017_pair->_field_expr=(*this)._method_build_from_tokens(_76944_tokens)->_field_kind;
	return _77017_pair;
}



inline jule::Any _1e3ca6387_ExprBuilder::_method_build_struct_lit_expr(jule::Slice<_1e3bad8dd_Token>& _77845_tokens) {
	_1e3bad8dd_Token _77917_token = _77845_tokens[0LL];
	if (_77917_token._field_id == 2LLU) {
		if (_77845_tokens.len() > 1LL) {
			_77917_token=_77845_tokens[1LL];
			if (_77917_token._field_id == 11LLU) {
				return jule::Any((*this)._method_build_field_expr_pair(_77845_tokens));
			}
		}
	}
	return jule::Any((*this)._method_build_from_tokens(_77845_tokens));
}



inline jule::Slice<jule::Any> _1e3ca6387_ExprBuilder::_method_build_struct_lit_exprs(jule::Slice<_1e3bad8dd_Token>& _79146_tokens) {
	jule::Slice<jule::Slice<_1e3bad8dd_Token>> _79217_parts = (*this)._method_get_brace_range_lit_expr_parts(_79146_tokens);
	if (_79217_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Any> _79717_pairs = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_79217_parts.len()));
	{
		auto &expr = _79217_parts;
		auto it = expr.begin();
		_iter_begin_4727879264:;
		if (it != expr.end()) {
			jule::Slice<_1e3bad8dd_Token> _1e3ca6387_part = *it;
			{
				_79717_pairs.push((*this)._method_build_struct_lit_expr(_1e3ca6387_part));
			}
			_iter_next_4727879264:;
			++it;
			goto _iter_begin_4727879264;
		}
		_iter_end_4727879264:;
	}
	return _79717_pairs;
}



inline jule::Ptr<_1e38d4ec7_StructLit> _1e3ca6387_ExprBuilder::_method_build_typed_struct_literal(jule::Slice<_1e3bad8dd_Token> _80449_tokens) {
	jule::Int _80517_i = 0LL;
	jule::Ptr<_1e38d4ec7_TypeDecl> _80618_t;
	jule::Bool _80621_ok;
	std::tie(_80618_t,_80621_ok) = (*this)._field_p->_method_build_type(_80449_tokens,(&(_80517_i)),true);
	if ((!(_80621_ok))) {
		return nullptr;
	} else if (_80517_i >= _80449_tokens.len()) {
		(*this)._method_push_err(_80449_tokens[_80517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_80449_tokens=_80449_tokens.slice(_80517_i);
	_1e3bad8dd_Token _81513_token = _80449_tokens[0LL];
	if ((_81513_token._field_id != 3LLU) || (_81513_token._field_kind != jule::Str("{", 1))) {
		(*this)._method_push_err(_81513_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_1e38d4ec7_StructLit>(new( std::nothrow ) _1e38d4ec7_StructLit(_80618_t,(*this)._method_build_struct_lit_exprs(_80449_tokens)));
}



inline jule::Any _1e3ca6387_ExprBuilder::_method_build_brace_lit_part(jule::Slice<_1e3bad8dd_Token>& _82744_tokens) {
	jule::Slice<_1e3bad8dd_Token> _82818_l;
	jule::Slice<_1e3bad8dd_Token> _82825_r;
	std::tie(_82818_l,_82825_r) = _1e3ca6387_split_colon(_82744_tokens);
	if (_82818_l != nullptr) {
		return jule::Any(jule::new_struct<_1e38d4ec7_KeyValPair>(new( std::nothrow ) _1e38d4ec7_KeyValPair((*this)._method_build_from_tokens(_82818_l)->_field_kind,(*this)._method_build_from_tokens(_82825_r)->_field_kind,_82744_tokens[_82818_l.len()])));
	}
	return jule::Any((*this)._method_build_from_tokens(_82744_tokens));
}



inline jule::Ptr<_1e38d4ec7_BraceLit> _1e3ca6387_ExprBuilder::_method_build_brace_lit(jule::Slice<_1e3bad8dd_Token>& _84039_tokens) {
	jule::Ptr<_1e38d4ec7_BraceLit> _84117_lit = jule::new_struct<_1e38d4ec7_BraceLit>(new( std::nothrow ) _1e38d4ec7_BraceLit(_84039_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_1e3bad8dd_Token>> _84517_parts = (*this)._method_get_brace_range_lit_expr_parts(_84039_tokens);
	if (_84517_parts == nullptr) {
		return _84117_lit;
	}
	_84117_lit->_field_exprs=jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_84517_parts.len()));
	{
		auto &expr = _84517_parts;
		auto it = expr.begin();
		_iter_begin_4727909856:;
		if (it != expr.end()) {
			jule::Slice<_1e3bad8dd_Token> _1e3ca6387_part = *it;
			{
				_84117_lit->_field_exprs = jule::alloc_for_append(_84117_lit->_field_exprs,1);_84117_lit->_field_exprs.push((*this)._method_build_brace_lit_part(_1e3ca6387_part));
			}
			_iter_next_4727909856:;
			++it;
			goto _iter_begin_4727909856;
		}
		_iter_end_4727909856:;
	}
	return _84117_lit;
}



inline jule::Any _1e3ca6387_ExprBuilder::_method_build_brace_range(jule::Slice<_1e3bad8dd_Token>& _85841_tokens) {
	jule::Slice<_1e3bad8dd_Token> _85914_expr_tokens;
	jule::Int _85927_range_n;
	std::tie(_85914_expr_tokens,_85927_range_n) = _1e3ca6387_get_range_expr_tokens(_85841_tokens);
	{
		if (!((_85914_expr_tokens.len() == 0LL))) { goto _case_end_4727916208; }
		_case_begin_4727916208:;
		{
			return jule::Any((*this)._method_build_brace_lit(_85841_tokens));
		}
		goto _match_end_4727916080;
		_case_end_4727916208:;
		if (!((_85927_range_n > 0LL))) { goto _case_end_4727916304; }
		_case_begin_4727916304:;
		{
			(*this)._method_push_err(_85841_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return jule::Any(nullptr);
		}
		goto _match_end_4727916080;
		_case_end_4727916304:;
		_match_end_4727916080:;
	}
	{
		auto &_match_expr{ _85914_expr_tokens[0LL]._field_id };
		if (!((35LLU) == _match_expr)) { goto _case_end_4727921728; }
		_case_begin_4727921728:;
		{
			return (*this)._method_build_unsafe(_85841_tokens);
		}
		goto _match_end_4727920608;
		_case_end_4727921728:;
		if (!((33LLU) == _match_expr)) { goto _case_end_4727921328; }
		_case_begin_4727921328:;
		{
			return jule::Any((*this)._method_build_anon_fn(_85841_tokens));
		}
		goto _match_end_4727920608;
		_case_end_4727921328:;
		if (!((2LLU) == _match_expr || (31LLU) == _match_expr)) { goto _case_end_4727921424; }
		_case_begin_4727921424:;
		{
			return jule::Any((*this)._method_build_typed_struct_literal(_85841_tokens));
		}
		goto _match_end_4727920608;
		_case_end_4727921424:;
		_case_begin_4727917280:;
		{
			(*this)._method_push_err(_85914_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return jule::Any(nullptr);
		}
		goto _match_end_4727920608;
		_case_end_4727917280:;
		_match_end_4727920608:;
	}
}



inline jule::Slice<jule::Slice<_1e3bad8dd_Token>> _1e3ca6387_ExprBuilder::_method_get_enumerable_parts(jule::Slice<_1e3bad8dd_Token> _88843_tokens) {
	_88843_tokens=_88843_tokens.slice(1LL,_88843_tokens.len() - 1LL);
	jule::Slice<jule::Slice<_1e3bad8dd_Token>> _89018_parts;
	jule::Slice<_1e24777a2_Log> _89025_errors;
	std::tie(_89018_parts,_89025_errors) = _1e4a02445_parts(_88843_tokens,8LLU,true);
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_89025_errors);
	return _89018_parts;
}



inline jule::Ptr<_1e38d4ec7_SliceExpr> _1e3ca6387_ExprBuilder::_method_build_slice(jule::Slice<_1e3bad8dd_Token> _89534_tokens) {
	jule::Ptr<_1e38d4ec7_SliceExpr> _89617_slc = jule::new_struct<_1e38d4ec7_SliceExpr>(new( std::nothrow ) _1e38d4ec7_SliceExpr(_89534_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_1e3bad8dd_Token>> _90017_parts = (*this)._method_get_enumerable_parts(_89534_tokens);
	if (_90017_parts.len() == 0LL) {
		return _89617_slc;
	}
	_89617_slc->_field_elems=jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_90017_parts.len()));
	{
		auto &expr = _90017_parts;
		auto it = expr.begin();
		_iter_begin_4727938064:;
		if (it != expr.end()) {
			jule::Slice<_1e3bad8dd_Token> _1e3ca6387_p = *it;
			{
				_89617_slc->_field_elems = jule::alloc_for_append(_89617_slc->_field_elems,1);_89617_slc->_field_elems.push((*this)._method_build_from_tokens(_1e3ca6387_p)->_field_kind);
			}
			_iter_next_4727938064:;
			++it;
			goto _iter_begin_4727938064;
		}
		_iter_end_4727938064:;
	}
	return _89617_slc;
}



inline jule::Ptr<_1e38d4ec7_IndexingExpr> _1e3ca6387_ExprBuilder::_method_build_indexing(jule::Slice<_1e3bad8dd_Token> _91337_expr_tokens,jule::Slice<_1e3bad8dd_Token> _91413_tokens,_1e3bad8dd_Token _91434_error_token) {
	_91413_tokens=_91413_tokens.slice(1LL,_91413_tokens.len() - 1LL);
	return jule::new_struct<_1e38d4ec7_IndexingExpr>(new( std::nothrow ) _1e38d4ec7_IndexingExpr(_91434_error_token,(*this)._method_build_from_tokens(_91337_expr_tokens)->_field_kind,(*this)._method_build_from_tokens(_91413_tokens)->_field_kind));
}



inline jule::Ptr<_1e38d4ec7_SlicingExpr> _1e3ca6387_ExprBuilder::_method_build_slicing(jule::Slice<_1e3bad8dd_Token>& _92337_expr_tokens,jule::Slice<_1e3bad8dd_Token>& _92364_slicing_tokens,jule::Int& _92410_colon,_1e3bad8dd_Token& _92427_error_token) {
	jule::Ptr<_1e38d4ec7_SlicingExpr> _92517_slc = jule::new_struct<_1e38d4ec7_SlicingExpr>(new( std::nothrow ) _1e38d4ec7_SlicingExpr(_92427_error_token,(*this)._method_build_from_tokens(_92337_expr_tokens)->_field_kind,jule::Any(),jule::Any()));
	jule::Slice<_1e3bad8dd_Token> _93017_start_expr_tokens = _92364_slicing_tokens.slice(0LL,_92410_colon);
	if (_93017_start_expr_tokens.len() > 0LL) {
		_92517_slc->_field_start=(*this)._method_build_from_tokens(_93017_start_expr_tokens)->_field_kind;
	}
	jule::Slice<_1e3bad8dd_Token> _93517_to_expr_tokens = _92364_slicing_tokens.slice(_92410_colon + 1LL);
	if (_93517_to_expr_tokens.len() > 0LL) {
		_92517_slc->_field_to=(*this)._method_build_from_tokens(_93517_to_expr_tokens)->_field_kind;
	}
	return _92517_slc;
}



inline jule::Any _1e3ca6387_ExprBuilder::_method_build_bracket_range(jule::Slice<_1e3bad8dd_Token> _94342_tokens) {
	_1e3bad8dd_Token _94417_error_token = _94342_tokens[0LL];
	jule::Slice<_1e3bad8dd_Token> _94518_expr_tokens;
	jule::Int _94531_range_n;
	std::tie(_94518_expr_tokens,_94531_range_n) = _1e3ca6387_get_range_expr_tokens(_94342_tokens);
	{
		if (!((_94518_expr_tokens.len() == 0LL))) { goto _case_end_4727965680; }
		_case_begin_4727965680:;
		{
			return jule::Any((*this)._method_build_slice(_94342_tokens));
		}
		goto _match_end_4727965520;
		_case_end_4727965680:;
		if (!(((_94518_expr_tokens.len() == 0LL) || (_94531_range_n > 0LL)))) { goto _case_end_4727965792; }
		_case_begin_4727965792:;
		{
			(*this)._method_push_err(_94417_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return jule::Any(nullptr);
		}
		goto _match_end_4727965520;
		_case_end_4727965792:;
		_match_end_4727965520:;
	}
	_94342_tokens=_94342_tokens.slice(_94518_expr_tokens.len());
	jule::Int _96417_i = 0LL;
	jule::Slice<_1e3bad8dd_Token> _96518_slicing_tokens;
	jule::Int _96534_colon;
	std::tie(_96518_slicing_tokens,_96534_colon) = _1e4a2bb9a_split_map_range(_94342_tokens,_96417_i);
	if (_96534_colon != -1LL) {
		return jule::Any((*this)._method_build_slicing(_94518_expr_tokens,_96518_slicing_tokens,_96534_colon,_94417_error_token));
	}
	return jule::Any((*this)._method_build_indexing(_94518_expr_tokens,_94342_tokens,_94417_error_token));
}



inline jule::Any _1e3ca6387_ExprBuilder::_method_build_ternary(jule::Slice<_1e3bad8dd_Token> _97236_tokens) {
	jule::Ptr<_1e38d4ec7_TernaryExpr> _97317_ter = jule::new_struct<_1e38d4ec7_TernaryExpr>(new( std::nothrow ) _1e38d4ec7_TernaryExpr());
	_97317_ter->_field_token=_97236_tokens[0LL];
	_97236_tokens=_97236_tokens.slice(1LL);
	jule::Slice<_1e3bad8dd_Token> _97717_expr_tokens = _1e3ca6387_get_block_expr(_97236_tokens);
	if (_97717_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_97317_ter->_field_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
	}
	_97317_ter->_field_condition=(*this)._method_build_kind(_97717_expr_tokens);
	jule::I64 _98417_i = _97717_expr_tokens.len();
	jule::Slice<_1e3bad8dd_Token> _98517_true_expr = _1e4a02445_range(_98417_i,jule::Str("{", 1),jule::Str("}", 1),_97236_tokens);
	if (_98517_true_expr == nullptr) {
		(*this)._method_push_err(_97317_ter->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(_97317_ter);
	} else if (_98517_true_expr.len() == 0LL) {
		(*this)._method_push_err(_97236_tokens[_97717_expr_tokens.len()],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
	}
	if (_98417_i >= _97236_tokens.len()) {
		(*this)._method_push_err(_97317_ter->_field_token,jule::Str("else block missed for ternary operator", 38),jule::Slice<jule::Any>());
		return jule::Any(_97317_ter);
	}
	_1e3bad8dd_Token _99913_else_token = _97236_tokens[_98417_i];
	if (_99913_else_token._field_id != 17LLU) {
		(*this)._method_push_err(_99913_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("else keyword expected for else block of ternary operator", 56),jule::Slice<jule::Any>());
		return jule::Any(_97317_ter);
	}
	(_98417_i)++;
	jule::I64 _100713_j = _98417_i;
	jule::Slice<_1e3bad8dd_Token> _100817_false_expr = _1e4a02445_range(_98417_i,jule::Str("{", 1),jule::Str("}", 1),_97236_tokens);
	if (_100817_false_expr == nullptr) {
		(*this)._method_push_err(_99913_else_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(_97317_ter);
	} else if (_100817_false_expr.len() == 0LL) {
		(*this)._method_push_err(_97236_tokens[_100713_j],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
	}
	if (_98417_i < _97236_tokens.len()) {
		(*this)._method_push_err(_97236_tokens[_98417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_97317_ter->_field_true_expr=(*this)._method_build_kind(_98517_true_expr);
	_97317_ter->_field_false_expr=(*this)._method_build_kind(_100817_false_expr);
	return jule::Any(_97317_ter);
}



inline jule::Any _1e3ca6387_ExprBuilder::_method_build_data(jule::Slice<_1e3bad8dd_Token>& _102734_tokens) {
	{
		auto _match_expr{ _102734_tokens.len() };
		if (!((0LL) == _match_expr)) { goto _case_end_4728010576; }
		_case_begin_4728010576:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4728010128;
		_case_end_4728010576:;
		if (!((1LL) == _match_expr)) { goto _case_end_4728010672; }
		_case_begin_4728010672:;
		{
			return (*this)._method_build_single(_102734_tokens[0LL]);
		}
		goto _match_end_4728010128;
		_case_end_4728010672:;
		if (!((3LL) == _match_expr)) { goto _case_end_4728010768; }
		_case_begin_4728010768:;
		{
			if (_102734_tokens[0LL]._field_id == 31LLU) {
				return jule::Any((*this)._method_build_cpp_linked_ident(_102734_tokens));
			}
		}
		goto _match_end_4728010128;
		_case_end_4728010768:;
		_match_end_4728010128:;
	}
	_1e3bad8dd_Token _104117_token = _102734_tokens[0LL];
	{
		auto &_match_expr{ _104117_token._field_id };
		if (!((16LLU) == _match_expr)) { goto _case_end_4728017184; }
		_case_begin_4728017184:;
		{
			return (*this)._method_build_ternary(_102734_tokens);
		}
		goto _match_end_4728016976;
		_case_end_4728017184:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4728017280; }
		_case_begin_4728017280:;
		{
			if ((_102734_tokens.len() > 1LL) && (_104117_token._field_kind == jule::Str("*", 1))) {
				_104117_token=_102734_tokens[1LL];
				if ((_104117_token._field_id == 1LLU) || (_104117_token._field_id == 35LLU)) {
					return jule::Any((*this)._method_build_type(_102734_tokens));
				}
			}
			return jule::Any((*this)._method_build_unary(_102734_tokens));
		}
		goto _match_end_4728016976;
		_case_end_4728017280:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4728017376; }
		_case_begin_4728017376:;
		{
			if (_102734_tokens.len() < 3LL) {
				goto _match_end_4728016976;
			}
			if (_102734_tokens.len() > 3LL) {
				_1e3bad8dd_Token _106421_t = _102734_tokens[_102734_tokens.len() - 1LL];
				if ((_106421_t._field_id == 3LLU) && (_106421_t._field_kind == jule::Str(")", 1))) {
					goto _match_end_4728016976;
				}
			}
			_1e3bad8dd_Token _107017_next = _102734_tokens[1LL];
			if ((_107017_next._field_id != 3LLU) || (_107017_next._field_kind != jule::Str("]", 1))) {
				goto _match_end_4728016976;
			}
			return jule::Any((*this)._method_build_type(_102734_tokens));
		}
		goto _match_end_4728016976;
		_case_end_4728017376:;
		_match_end_4728016976:;
	}
	_104117_token=_102734_tokens[_102734_tokens.len() - 1LL];
	{
		auto &_match_expr{ _104117_token._field_id };
		if (!((2LLU) == _match_expr)) { goto _case_end_4728018304; }
		_case_begin_4728018304:;
		{
			return (*this)._method_build_sub_ident(_102734_tokens);
		}
		goto _match_end_4728018224;
		_case_end_4728018304:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4728049072; }
		_case_begin_4728049072:;
		{
			return jule::Any((*this)._method_build_type(_102734_tokens));
		}
		goto _match_end_4728018224;
		_case_end_4728049072:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4728049168; }
		_case_begin_4728049168:;
		{
			return (*this)._method_build_op_right(_102734_tokens);
		}
		goto _match_end_4728018224;
		_case_end_4728049168:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4728049264; }
		_case_begin_4728049264:;
		{
			{
				auto &_match_expr{ _104117_token._field_kind };
				if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4728053328; }
				_case_begin_4728053328:;
				{
					return (*this)._method_build_parentheses_range(_102734_tokens);
				}
				goto _match_end_4728053200;
				_case_end_4728053328:;
				if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4728053424; }
				_case_begin_4728053424:;
				{
					return (*this)._method_build_brace_range(_102734_tokens);
				}
				goto _match_end_4728053200;
				_case_end_4728053424:;
				if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4728053600; }
				_case_begin_4728053600:;
				{
					return (*this)._method_build_bracket_range(_102734_tokens);
				}
				goto _match_end_4728053200;
				_case_end_4728053600:;
				_match_end_4728053200:;
			}
		}
		goto _match_end_4728018224;
		_case_end_4728049264:;
		_match_end_4728018224:;
	}
	(*this)._method_push_err(_104117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_1e38d4ec7_BinopExpr> _1e3ca6387_ExprBuilder::_method_build_binop(jule::Slice<_1e3bad8dd_Token>& _110735_tokens,jule::Int _110752_i) {
	jule::Slice<_1e3bad8dd_Token> _110817_left_tokens = _110735_tokens.slice(0LL,_110752_i);
	jule::Slice<_1e3bad8dd_Token> _110917_right_tokens = _110735_tokens.slice(_110752_i + 1LL);
	if (_110817_left_tokens.len() == 0LL) {
		(*this)._method_push_err(_110735_tokens[_110752_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_110917_right_tokens.len() == 0LL) {
		(*this)._method_push_err(_110735_tokens[_110752_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_1e38d4ec7_BinopExpr>(new( std::nothrow ) _1e38d4ec7_BinopExpr((*this)._method_build(_110817_left_tokens),(*this)._method_build(_110917_right_tokens),_110735_tokens[_110752_i]));
}



inline jule::Any _1e3ca6387_ExprBuilder::_method_build(jule::Slice<_1e3bad8dd_Token>& _113029_tokens) {
	jule::Int _113113_i = _1e3ca6387_find_lowest_prec_op(_113029_tokens);
	if (_113113_i == -1LL) {
		return (*this)._method_build_data(_113029_tokens);
	}
	return jule::Any((*this)._method_build_binop(_113029_tokens,_113113_i));
}



inline jule::Any _1e3ca6387_ExprBuilder::_method_build_kind(jule::Slice<_1e3bad8dd_Token>& _113834_tokens) {
	jule::Slice<jule::Slice<_1e3bad8dd_Token>> _113918_parts;
	jule::Slice<_1e24777a2_Log> _113925_errors;
	std::tie(_113918_parts,_113925_errors) = _1e4a02445_parts(_113834_tokens,8LLU,true);
	if (_113925_errors != nullptr) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_113925_errors);
		return jule::Any(nullptr);
	} else if (_113918_parts.len() > 1LL) {
		return jule::Any((*this)._method_build_tuple(_113918_parts));
	}
	return (*this)._method_build(_113834_tokens);
}



inline jule::Ptr<_1e38d4ec7_Expr> _1e3ca6387_ExprBuilder::_method_build_from_tokens(jule::Slice<_1e3bad8dd_Token> _114940_tokens) {
	_114940_tokens=_1e3ca6387_eliminate_comments(_114940_tokens);
	if (_114940_tokens.len() == 0LL) {
		return nullptr;
	}
	return jule::new_struct<_1e38d4ec7_Expr>(new( std::nothrow ) _1e38d4ec7_Expr(_114940_tokens[0LL],(*this)._method_build_kind(_114940_tokens)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1e3ca6387_ExprBuilder &_Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}



inline void _1e4a02445_Parser::_method_stop(void) {
	(*this)._field_ast=nullptr;
}



inline jule::Bool _1e4a02445_Parser::_method_stopped(void) {
	return (*this)._field_ast == nullptr;
}



inline void _1e4a02445_Parser::_method_push_err(_1e3bad8dd_Token _23927_token,jule::Str _23941_fmt,jule::Slice<jule::Any> _23954_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.push(_1e4a02445_compiler_err(_23927_token,_23941_fmt,_23954_args));
}



inline void _1e4a02445_Parser::_method_push_suggestion(jule::Str _24434_fmt,jule::Slice<jule::Any> _24447_args) {
	{
		_1e4a02445_push_suggestion((&((*this)._field_errors[(*this)._field_errors.len() - 1LL])),_24434_fmt,_24447_args);
	}
}



inline jule::Ptr<_1e38d4ec7_Expr> _1e4a02445_Parser::_method_build_expr(jule::Slice<_1e3bad8dd_Token>& _24835_tokens) {
	jule::Ptr<_1e3ca6387_ExprBuilder> _24917_ep = jule::new_struct<_1e3ca6387_ExprBuilder>(new( std::nothrow ) _1e3ca6387_ExprBuilder(this->self));
	jule::Ptr<_1e38d4ec7_Expr> _25017_expr = _24917_ep->_method_build_from_tokens(_24835_tokens);
	return _25017_expr;
}



inline jule::Ptr<_1e38d4ec7_Directive> _1e4a02445_Parser::_method_build_directive(jule::Slice<_1e3bad8dd_Token> _25438_tokens) {
	if (_25438_tokens[0LL]._field_column > 1LL) {
		(*this)._method_push_err(_25438_tokens[0LL],jule::Str("directives must placed at beginning of line", 43),jule::Slice<jule::Any>());
		return nullptr;
	} else if (_25438_tokens.len() == 1LL) {
		(*this)._method_push_err(_25438_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_1e38d4ec7_Directive>(new( std::nothrow ) _1e38d4ec7_Directive(_25438_tokens[1LL],_25438_tokens.slice(2LL)));
}



inline void _1e4a02445_Parser::_method_push_directive(jule::Ptr<_1e38d4ec7_Directive> _26937_d) {
	if (_26937_d == nullptr) {
		return;
	}
	{
		auto &expr = (*this)._field_directives;
		auto it = expr.begin();
		_iter_begin_4728112128:;
		if (it != expr.end()) {
			jule::Ptr<_1e38d4ec7_Directive> &_1e4a02445_pd = *it;
			{
				if (_26937_d->_field_tag._field_kind == _1e4a02445_pd->_field_tag._field_kind) {
					return;
				}
			}
			_iter_next_4728112128:;
			++it;
			goto _iter_begin_4728112128;
		}
		_iter_end_4728112128:;
	}
	(*this)._field_directives = jule::alloc_for_append((*this)._field_directives,1);(*this)._field_directives.push(_26937_d);
}



inline void _1e4a02445_Parser::_method_process_comment(jule::Ptr<_1e38d4ec7_Comment>& _28339_c) {
	if ((*this)._field_comment_group == nullptr) {
		(*this)._field_comment_group=jule::new_struct<_1e38d4ec7_CommentGroup>(new( std::nothrow ) _1e38d4ec7_CommentGroup());
	}
	(*this)._field_comment_group->_field_comments = jule::alloc_for_append((*this)._field_comment_group->_field_comments,1);(*this)._field_comment_group->_field_comments.push(_28339_c);
}



inline jule::Ptr<_1e38d4ec7_ScopeTree> _1e4a02445_Parser::_method_build_scope(jule::Slice<_1e3bad8dd_Token>& _29036_tokens) {
	jule::Ptr<_1e38d4ec7_ScopeTree> _29117_s = _1e3c61e36_new_scope();
	_1e3c61e36_ScopeParser _29217_sp = _1e3c61e36_ScopeParser(this->self,jule::Ptr<_1e38d4ec7_ScopeTree>(),jule::Slice<jule::Ptr<_1e3c61e36_Stmt>>(),jule::Int());
	_29217_sp._method_build(_29036_tokens,_29117_s);
	return _29117_s;
}



inline std::tuple<jule::Ptr<_1e38d4ec7_TypeDecl>,jule::Bool> _1e4a02445_Parser::_method___build_type(jule::Slice<_1e3bad8dd_Token>& _29944_tokens,jule::Int* _30013_i,jule::Bool _30022_err) {
	_1e4a2bb9a_TypeBuilder _30117_tb = _1e4a2bb9a_TypeBuilder(this->self,_29944_tokens,_30013_i,_30022_err);
	jule::Ptr<_1e38d4ec7_TypeDecl> _30718_decl;
	jule::Bool _30724_ok;
	std::tie(_30718_decl,_30724_ok) = _30117_tb._method_build();
	return std::make_tuple(_30718_decl,_30724_ok);
}



inline std::tuple<jule::Ptr<_1e38d4ec7_TypeDecl>,jule::Bool> _1e4a02445_Parser::_method_build_type(jule::Slice<_1e3bad8dd_Token>& _31242_tokens,jule::Int* _31313_i,jule::Bool _31322_err) {
	_1e3bad8dd_Token _31413_token = _31242_tokens[(*(_31313_i))];
	jule::Ptr<_1e38d4ec7_TypeDecl> _31518_t;
	jule::Bool _31521_ok;
	std::tie(_31518_t,_31521_ok) = this->self->_method___build_type(_31242_tokens,_31313_i,_31322_err);
	if (_31322_err && (!(_31521_ok))) {
		this->self->_method_push_err(_31413_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>());
	}
	return std::make_tuple(_31518_t,_31521_ok);
}



inline jule::Ptr<_1e38d4ec7_TypeAliasDecl> _1e4a02445_Parser::_method_build_type_alias_decl(jule::Slice<_1e3bad8dd_Token>& _32246_tokens) {
	jule::Int _32317_i = 1LL;
	if (_32317_i >= _32246_tokens.len()) {
		this->self->_method_push_err(_32246_tokens[_32317_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1e38d4ec7_TypeAliasDecl> _32817_tad = jule::new_struct<_1e38d4ec7_TypeAliasDecl>(new( std::nothrow ) _1e38d4ec7_TypeAliasDecl(jule::Ptr<_1e38d4ec7_ScopeTree>(),jule::Bool(),jule::Bool(),_32246_tokens[1LL],_32246_tokens[1LL]._field_kind,jule::Ptr<_1e38d4ec7_TypeDecl>(),jule::Ptr<_1e38d4ec7_CommentGroup>()));
	_1e3bad8dd_Token _33217_token = _32246_tokens[_32317_i];
	if (_33217_token._field_id != 2LLU) {
		this->self->_method_push_err(_33217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	(_32317_i)++;
	if (_32317_i >= _32246_tokens.len()) {
		this->self->_method_push_err(_32246_tokens[_32317_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _32817_tad;
	}
	_33217_token=_32246_tokens[_32317_i];
	if (_33217_token._field_id != 11LLU) {
		this->self->_method_push_err(_32246_tokens[_32317_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _32817_tad;
	}
	(_32317_i)++;
	if (_32317_i >= _32246_tokens.len()) {
		this->self->_method_push_err(_32246_tokens[_32317_i - 1LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
		return _32817_tad;
	}
	jule::Ptr<_1e38d4ec7_TypeDecl> _35318_t;
	jule::Bool _35321_ok;
	std::tie(_35318_t,_35321_ok) = this->self->_method_build_type(_32246_tokens,(&(_32317_i)),true);
	_32817_tad->_field_kind=_35318_t;
	if (_35321_ok && (_32317_i < _32246_tokens.len())) {
		this->self->_method_push_err(_32246_tokens[_32317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _32817_tad;
}



inline void _1e4a02445_Parser::_method_build_var_type_and_expr(jule::Ptr<_1e38d4ec7_VarDecl>& _36148_v,jule::Slice<_1e3bad8dd_Token>& _36166_tokens) {
	jule::Int _36217_i = 0LL;
	_1e3bad8dd_Token _36317_tok = _36166_tokens[_36217_i];
	if (_36317_tok._field_id == 11LLU) {
		(_36217_i)++;
		if ((_36217_i >= _36166_tokens.len()) || ((_36166_tokens[_36217_i]._field_id == 7LLU) && (_36166_tokens[_36217_i]._field_kind == jule::Str("=", 1)))) {
			this->self->_method_push_err(_36317_tok,jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
			return;
		}
		jule::Ptr<_1e38d4ec7_TypeDecl> _37122_t;
		jule::Bool _37125_ok;
		std::tie(_37122_t,_37125_ok) = this->self->_method_build_type(_36166_tokens,(&(_36217_i)),true);
		if (_37125_ok) {
			_36148_v->_field_kind=_37122_t;
			if (_36217_i >= _36166_tokens.len()) {
				return;
			}
			_36317_tok=_36166_tokens[_36217_i];
		}
	}
	if (_36317_tok._field_id == 7LLU) {
		if (_36317_tok._field_kind != jule::Str("=", 1)) {
			this->self->_method_push_err(_36317_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;
		}
		jule::Slice<_1e3bad8dd_Token> _38621_expr_tokens = _36166_tokens.slice(_36217_i + 1LL);
		if (_38621_expr_tokens.len() == 0LL) {
			this->self->_method_push_err(_36317_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;
		}
		_36148_v->_field_expr=this->self->_method_build_expr(_38621_expr_tokens);
	} else {
		this->self->_method_push_err(_36317_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1e4a02445_Parser::_method_build_var_common(jule::Ptr<_1e38d4ec7_VarDecl>& _39741_v,jule::Slice<_1e3bad8dd_Token> _39758_tokens) {
	_39741_v->_field_token=_39758_tokens[0LL];
	if (_39741_v->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_39741_v->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	}
	_39741_v->_field_ident=_39741_v->_field_token._field_kind;
	_39741_v->_field_kind=nullptr;
	if (_39758_tokens.len() > 1LL) {
		_39758_tokens=_39758_tokens.slice(1LL);
		this->self->_method_build_var_type_and_expr(_39741_v,_39758_tokens);
	}
}



inline void _1e4a02445_Parser::_method_build_var_begin(jule::Ptr<_1e38d4ec7_VarDecl>& _41239_v,jule::Ptr<jule::Int> _41256_i,jule::Slice<_1e3bad8dd_Token>& _41266_tokens) {
	_1e3bad8dd_Token _41313_tok = _41266_tokens[(*(_41256_i))];
	{
		auto &_match_expr{ _41313_tok._field_id };
		if (!((38LLU) == _match_expr)) { goto _case_end_4728215376; }
		_case_begin_4728215376:;
		{
			_41239_v->_field_statically=true;
			goto _case_begin_4728215472;
		}
		goto _match_end_4728213456;
		_case_end_4728215376:;
		if (!((34LLU) == _match_expr)) { goto _case_end_4728215472; }
		_case_begin_4728215472:;
		{
			((*(_41256_i)))++;
			if ((*(_41256_i)) >= _41266_tokens.len()) {
				(*this)._method_push_err(_41313_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			if (_41266_tokens[(*(_41256_i))]._field_id == 36LLU) {
				_41239_v->_field_mutable=true;
				((*(_41256_i)))++;
			}
		}
		goto _match_end_4728213456;
		_case_end_4728215472:;
		if (!((9LLU) == _match_expr)) { goto _case_end_4728215568; }
		_case_begin_4728215568:;
		{
			((*(_41256_i)))++;
			_41239_v->_field_constant=true;
		}
		goto _match_end_4728213456;
		_case_end_4728215568:;
		_case_begin_4728212064:;
		{
			(*this)._method_push_err(_41313_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;
		}
		goto _match_end_4728213456;
		_case_end_4728212064:;
		_match_end_4728213456:;
	}
	if ((*(_41256_i)) >= _41266_tokens.len()) {
		(*this)._method_push_err(_41313_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline jule::Ptr<_1e38d4ec7_VarDecl> _1e4a02445_Parser::_method_build_var(jule::Slice<_1e3bad8dd_Token> _44633_tokens) {
	jule::Ptr<jule::Int> _44717_i = jule::new_ptr<jule::Int>(0LL);
	jule::Ptr<_1e38d4ec7_VarDecl> _44817_v = jule::new_struct<_1e38d4ec7_VarDecl>(new( std::nothrow ) _1e38d4ec7_VarDecl(jule::Ptr<_1e38d4ec7_ScopeTree>(),_44633_tokens[(*(_44717_i))],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>(),jule::Ptr<_1e38d4ec7_CommentGroup>(),jule::Ptr<_1e38d4ec7_TypeDecl>(),jule::Ptr<_1e38d4ec7_Expr>()));
	this->self->_method_build_var_begin(_44817_v,_44717_i,_44633_tokens);
	if ((*(_44717_i)) >= _44633_tokens.len()) {
		return nullptr;
	}
	_44633_tokens=_44633_tokens.slice((*(_44717_i)));
	if ((_44633_tokens[0LL]._field_id == 7LLU) && (_44633_tokens[0LL]._field_kind == jule::Str("&", 1))) {
		_44817_v->_field_reference=true;
		if (_44633_tokens.len() == 1LL) {
			return nullptr;
		}
		_44633_tokens=_44633_tokens.slice(1LL);
	}
	this->self->_method_build_var_common(_44817_v,_44633_tokens);
	return _44817_v;
}



inline jule::Ptr<_1e38d4ec7_GenericDecl> _1e4a02445_Parser::_method_build_generic(jule::Slice<_1e3bad8dd_Token>& _46837_tokens) {
	if (_46837_tokens.len() > 1LL) {
		(*this)._method_push_err(_46837_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1e38d4ec7_GenericDecl> _47217_g = jule::new_struct<_1e38d4ec7_GenericDecl>(new( std::nothrow ) _1e38d4ec7_GenericDecl(_46837_tokens[0LL],jule::Str()));
	if (_47217_g->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_47217_g->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_47217_g->_field_ident=_47217_g->_field_token._field_kind;
	return _47217_g;
}



inline jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>> _1e4a02445_Parser::_method_build_generics(jule::Slice<_1e3bad8dd_Token>& _48338_tokens,_1e3bad8dd_Token& _48356_error_token) {
	if (_48338_tokens.len() == 0LL) {
		(*this)._method_push_err(_48356_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<jule::Slice<_1e3bad8dd_Token>> _48918_parts;
	jule::Slice<_1e24777a2_Log> _48925_errors;
	std::tie(_48918_parts,_48925_errors) = _1e4a02445_parts(_48338_tokens,8LLU,true);
	if (_48925_errors.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_48925_errors);
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>> _49517_generics = jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>>::alloc(0LL,static_cast<jule::I64>(_48918_parts.len()));
	{
		auto &expr = _48918_parts;
		auto it = expr.begin();
		_iter_begin_4728252704:;
		if (it != expr.end()) {
			jule::Slice<_1e3bad8dd_Token> _1e4a02445_part = *it;
			{
				_49517_generics.push((*this)._method_build_generic(_1e4a02445_part));
			}
			_iter_next_4728252704:;
			++it;
			goto _iter_begin_4728252704;
		}
		_iter_end_4728252704:;
	}
	return _49517_generics;
}



inline jule::Ptr<_1e38d4ec7_ParamDecl> _1e4a02445_Parser::_method_build_self_param(jule::Slice<_1e3bad8dd_Token> _50339_tokens) {
	if (_50339_tokens.len() == 0LL) {
		return nullptr;
	}
	jule::Ptr<_1e38d4ec7_ParamDecl> _50817_param = jule::new_struct<_1e38d4ec7_ParamDecl>(new( std::nothrow ) _1e38d4ec7_ParamDecl());
	jule::Int _51117_i = 0LL;
	if (_50339_tokens[_51117_i]._field_id == 36LLU) {
		_50817_param->_field_mutable=true;
		(_51117_i)++;
		if (_51117_i >= _50339_tokens.len()) {
			(*this)._method_push_err(_50339_tokens[_51117_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	if (_50339_tokens[_51117_i]._field_kind == jule::Str("&", 1)) {
		_50817_param->_field_ident=jule::Str("&", 1);
		(_51117_i)++;
		if (_51117_i >= _50339_tokens.len()) {
			(*this)._method_push_err(_50339_tokens[_51117_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	if (_50339_tokens[_51117_i]._field_id == 28LLU) {
		_50817_param->_field_ident+=jule::Str("self", 4);
		_50817_param->_field_token=_50339_tokens[_51117_i];
		(_51117_i)++;
		if (_51117_i < _50339_tokens.len()) {
			(*this)._method_push_err(_50339_tokens[_51117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
	}
	return _50817_param;
}



inline void _1e4a02445_Parser::_method_param_type_begin(jule::Ptr<_1e38d4ec7_ParamDecl>& _54240_param,jule::Int& _54264_i,jule::Slice<_1e3bad8dd_Token>& _54273_tokens) {
	for (; _54264_i < _54273_tokens.len(); (_54264_i)++) {
		{
			_1e3bad8dd_Token _54417_token = _54273_tokens[_54264_i];
			if (_54417_token._field_id != 7LLU) {
				return;
			} else if (_54417_token._field_kind != jule::Str("...", 3)) {
				return;
			}
			if (_54240_param->_field_variadic) {
				(*this)._method_push_err(_54417_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_4728277920;
			}
			_54240_param->_field_variadic=true;
		}
	_iter_next_4728277920:;
	}
	_iter_end_4728277920:;
}



inline void _1e4a02445_Parser::_method_build_param_type(jule::Ptr<_1e38d4ec7_ParamDecl>& _55941_param,jule::Slice<_1e3bad8dd_Token>& _55965_tokens) {
	jule::Int _56017_i = 0LL;
	this->self->_method_param_type_begin(_55941_param,_56017_i,_55965_tokens);
	if (_56017_i >= _55965_tokens.len()) {
		return;
	}
	std::tie(_55941_param->_field_kind,std::ignore) = this->self->_method_build_type(_55965_tokens,(&(_56017_i)),true);
	if (_56017_i < _55965_tokens.len()) {
		this->self->_method_push_err(_55965_tokens[_56017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1e4a02445_Parser::_method_param_body_id(jule::Ptr<_1e38d4ec7_ParamDecl> _57232_param,_1e3bad8dd_Token _57251_token) {
	if (_1e3bad8dd_is_ignore_ident(_57251_token._field_kind)) {
		_57232_param->_field_ident=jule::Str("<anonymous>", 11);
		return;
	}
	_57232_param->_field_ident=_57251_token._field_kind;
}



inline void _1e4a02445_Parser::_method_build_param_body(jule::Ptr<_1e38d4ec7_ParamDecl>& _58041_param,jule::Ptr<jule::Int> _58064_i,jule::Slice<_1e3bad8dd_Token> _58077_tokens) {
	this->self->_method_param_body_id(_58041_param,_58077_tokens[(*(_58064_i))]);
	_1e3bad8dd_Token _58217_tok = _58077_tokens[(*(_58064_i))];
	if (((*(_58064_i)) + 1LL) >= _58077_tokens.len()) {
		return;
	} else if (((_58077_tokens.len() - (*(_58064_i))) - 1LL) < 2LL) {
		this->self->_method_push_err(_58217_tok,jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
		return;
	}
	_58217_tok=_58077_tokens[(*(_58064_i)) + 1LL];
	if (_58217_tok._field_id != 11LLU) {
		this->self->_method_build_param_type(_58041_param,_58077_tokens);
		return;
	}
	_58077_tokens=_58077_tokens.slice((*(_58064_i)) + 2LL);
	this->self->_method_build_param_type(_58041_param,_58077_tokens);
}



inline jule::Ptr<_1e38d4ec7_ParamDecl> _1e4a02445_Parser::_method_build_param(jule::Slice<_1e3bad8dd_Token> _60135_tokens) {
	jule::Ptr<_1e38d4ec7_ParamDecl> _60217_param = jule::new_struct<_1e38d4ec7_ParamDecl>(new( std::nothrow ) _1e38d4ec7_ParamDecl(_60135_tokens[0LL],jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1e38d4ec7_TypeDecl>(),jule::Str()));
	if (_60217_param->_field_token._field_id == 36LLU) {
		_60217_param->_field_mutable=true;
		if (_60135_tokens.len() == 1LL) {
			this->self->_method_push_err(_60135_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_60135_tokens=_60135_tokens.slice(1LL);
		_60217_param->_field_token=_60135_tokens[0LL];
	}
	if (_60135_tokens.len() >= 3LL) {
		if ((_60217_param->_field_token._field_id == 7LLU) && (_60217_param->_field_token._field_kind == jule::Str("&", 1))) {
			if (_60135_tokens.len() == 1LL) {
				this->self->_method_push_err(_60135_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
			if ((_60135_tokens[1LL]._field_id == 2LLU) && (_60135_tokens[2LL]._field_id == 11LLU)) {
				_60217_param->_field_reference=true;
				_60135_tokens=_60135_tokens.slice(1LL);
				_60217_param->_field_token=_60135_tokens[0LL];
			}
		}
	}
	if (_60217_param->_field_token._field_id != 2LLU) {
		_60217_param->_field_ident=jule::Str("<anonymous>", 11);
		this->self->_method_build_param_type(_60217_param,_60135_tokens);
	} else {
		jule::Ptr<jule::Int> _63821_i = jule::new_ptr<jule::Int>(0LL);
		this->self->_method_build_param_body(_60217_param,_63821_i,_60135_tokens);
	}
	return _60217_param;
}



inline void _1e4a02445_Parser::_method_check_params(jule::Slice<jule::Ptr<_1e38d4ec7_ParamDecl>>& _64536_params) {
	{
		auto &expr = _64536_params;
		auto it = expr.begin();
		_iter_begin_4728334240:;
		if (it != expr.end()) {
			jule::Ptr<_1e38d4ec7_ParamDecl> _1e4a02445_param = *it;
			{
				if (_1e4a02445_param->_method_is_self() || (_1e4a02445_param->_field_kind != nullptr)) {
					goto _iter_next_4728334240;
				}
				if (_1e4a02445_param->_field_token._field_id == 0LLU) {
					(*this)._method_push_err(_1e4a02445_param->_field_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
				} else {
					_1e4a02445_param->_field_kind=jule::new_struct<_1e38d4ec7_TypeDecl>(new( std::nothrow ) _1e38d4ec7_TypeDecl(_1e4a02445_param->_field_token,jule::Any(jule::new_struct<_1e38d4ec7_IdentTypeDecl>(new( std::nothrow ) _1e38d4ec7_IdentTypeDecl(_1e4a02445_param->_field_token,_1e4a02445_param->_field_token._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>>())))));
					_1e4a02445_param->_field_ident=jule::Str("<anonymous>", 11);
					_1e4a02445_param->_field_token=_1e3bad8dd_Token();
				}
			}
			_iter_next_4728334240:;
			++it;
			goto _iter_begin_4728334240;
		}
		_iter_end_4728334240:;
	}
}



inline jule::Slice<jule::Ptr<_1e38d4ec7_ParamDecl>> _1e4a02445_Parser::_method_build_params(jule::Slice<_1e3bad8dd_Token>& _66637_tokens,jule::Bool _66654_method) {
	jule::Slice<jule::Slice<_1e3bad8dd_Token>> _66718_parts;
	jule::Slice<_1e24777a2_Log> _66725_errs;
	std::tie(_66718_parts,_66725_errs) = _1e4a02445_parts(_66637_tokens,8LLU,true);
	this->self->_field_errors=jule::append(this->self->_field_errors,_66725_errs);
	if (_66718_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1e38d4ec7_ParamDecl>> _67317_params = nullptr;
	if (_66654_method && (_66718_parts.len() > 0LL)) {
		jule::Ptr<_1e38d4ec7_ParamDecl> _67521_param = this->self->_method_build_self_param(_66718_parts[0LL]);
		if ((_67521_param != nullptr) && _67521_param->_method_is_self()) {
			_67317_params.push(_67521_param);
			_66718_parts=_66718_parts.slice(1LL);
		}
	}
	{
		auto &expr = _66718_parts;
		auto it = expr.begin();
		_iter_begin_4728349008:;
		if (it != expr.end()) {
			jule::Slice<_1e3bad8dd_Token> _1e4a02445_part = *it;
			{
				jule::Ptr<_1e38d4ec7_ParamDecl> _68321_param = this->self->_method_build_param(_1e4a02445_part);
				if (_68321_param != nullptr) {
					_67317_params.push(_68321_param);
				}
			}
			_iter_next_4728349008:;
			++it;
			goto _iter_begin_4728349008;
		}
		_iter_end_4728349008:;
	}
	this->self->_method_check_params(_67317_params);
	return _67317_params;
}



inline std::tuple<jule::Ptr<_1e38d4ec7_RetTypeDecl>,jule::Bool> _1e4a02445_Parser::_method_build_multi_ret_type(jule::Slice<_1e3bad8dd_Token>& _69345_tokens,jule::Int& _69367_i) {
	jule::Ptr<_1e38d4ec7_RetTypeDecl> _69377_t = jule::Ptr<_1e38d4ec7_RetTypeDecl>();
	jule::Bool _69394_ok = jule::Bool();
	_69377_t=jule::new_struct<_1e38d4ec7_RetTypeDecl>(new( std::nothrow ) _1e38d4ec7_RetTypeDecl());
	(_69367_i)++;
	if (_69367_i >= _69345_tokens.len()) {
		(_69367_i)--;
		std::tie(_69377_t->_field_kind,_69394_ok) = this->self->_method_build_type(_69345_tokens,(&(_69367_i)),false);
		return std::make_tuple(_69377_t,_69394_ok);
	}
	(_69367_i)--;
	jule::Slice<_1e3bad8dd_Token> _70317_range_tokens = _1e4a02445_range(_69367_i,jule::Str("(", 1),jule::Str(")", 1),_69345_tokens);
	jule::Slice<jule::Slice<_1e3bad8dd_Token>> _70518_parts;
	jule::Slice<_1e24777a2_Log> _70525_errs;
	std::tie(_70518_parts,_70525_errs) = _1e4a02445_parts(_70317_range_tokens,8LLU,true);
	this->self->_field_errors=jule::append(this->self->_field_errors,_70525_errs);
	if (_70518_parts.len() == 0LL) {
		return std::make_tuple(_69377_t,_69394_ok);
	}
	jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>> _71117_types = jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_70518_parts.len()));
	_69377_t->_field_idents=jule::Slice<_1e3bad8dd_Token>::alloc(0LL,static_cast<jule::I64>(_70518_parts.len()));
	{
		auto &expr = _70518_parts;
		auto it = expr.begin();
		_iter_begin_4728370272:;
		if (it != expr.end()) {
			jule::Slice<_1e3bad8dd_Token> _1e4a02445_part = *it;
			{
				_1e3bad8dd_Token _71421_token = _1e4a02445_part[0LL];
				jule::Int _71521_offset = 0LL;
				if (_1e4a02445_part.len() > 1LL) {
					_71421_token=_1e4a02445_part[1LL];
					if (_71421_token._field_id == 11LLU) {
						_71521_offset=2LL;
						if (_1e4a02445_part.len() < 3LL) {
							this->self->_method_push_err(_71421_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
							goto _iter_next_4728370272;
						}
					}
				}
				_71421_token=_1e4a02445_part[0LL];
				if (_71521_offset == 2LL) {
					if (_71421_token._field_id != 2LLU) {
					}
					_69377_t->_field_idents = jule::alloc_for_append(_69377_t->_field_idents,1);_69377_t->_field_idents.push(_71421_token);
				} else {
					_71421_token._field_kind=jule::Str("_", 1);
					_69377_t->_field_idents = jule::alloc_for_append(_69377_t->_field_idents,1);_69377_t->_field_idents.push(_71421_token);
				}
				jule::Ptr<_1e38d4ec7_TypeDecl> _74022_t;
				std::tie(_74022_t,std::ignore) = this->self->_method_build_type(_1e4a02445_part,(&(_71521_offset)),true);
				if (_71521_offset < _1e4a02445_part.len()) {
					this->self->_method_push_err(_1e4a02445_part[_71521_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_71117_types.push(_74022_t);
			}
			_iter_next_4728370272:;
			++it;
			goto _iter_begin_4728370272;
		}
		_iter_end_4728370272:;
	}
	if (_71117_types.len() > 1LL) {
		_69377_t->_field_kind=jule::new_struct<_1e38d4ec7_TypeDecl>(new( std::nothrow ) _1e38d4ec7_TypeDecl(_69345_tokens[0LL],jule::Any(jule::new_struct<_1e38d4ec7_TupleTypeDecl>(new( std::nothrow ) _1e38d4ec7_TupleTypeDecl(_71117_types)))));
	} else {
		_69377_t->_field_kind=_71117_types[0LL];
	}
	_69394_ok=true;
	return std::make_tuple(_69377_t,_69394_ok);
}



inline std::tuple<jule::Ptr<_1e38d4ec7_RetTypeDecl>,jule::Bool> _1e4a02445_Parser::_method_build_ret_type(jule::Slice<_1e3bad8dd_Token>& _76339_tokens,jule::Int& _76361_i) {
	jule::Ptr<_1e38d4ec7_RetTypeDecl> _76371_t = jule::Ptr<_1e38d4ec7_RetTypeDecl>();
	jule::Bool _76388_ok = jule::Bool();
	_76371_t=jule::new_struct<_1e38d4ec7_RetTypeDecl>(new( std::nothrow ) _1e38d4ec7_RetTypeDecl());
	if (_76361_i >= _76339_tokens.len()) {
		return std::make_tuple(_76371_t,_76388_ok);
	}
	_1e3bad8dd_Token _76917_token = _76339_tokens[_76361_i];
	{
		auto &_match_expr{ _76917_token._field_id };
		if (!((3LLU) == _match_expr)) { goto _case_end_4728399600; }
		_case_begin_4728399600:;
		{
			if (_76917_token._field_kind == jule::Str("{", 1)) {
				return std::make_tuple(_76371_t,_76388_ok);
			}
		}
		goto _match_end_4728399520;
		_case_end_4728399600:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4728399696; }
		_case_begin_4728399696:;
		{
			if (_76917_token._field_kind == jule::Str("=", 1)) {
				return std::make_tuple(_76371_t,_76388_ok);
			}
		}
		goto _match_end_4728399520;
		_case_end_4728399696:;
		if (!((11LLU) == _match_expr)) { goto _case_end_4728399792; }
		_case_begin_4728399792:;
		{
			if ((_76361_i + 1LL) >= _76339_tokens.len()) {
				this->self->_method_push_err(_76917_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
				return std::make_tuple(_76371_t,_76388_ok);
			}
			(_76361_i)++;
			_76917_token=_76339_tokens[_76361_i];
			if (_76917_token._field_id == 3LLU) {
				{
					auto &_match_expr{ _76917_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4728405024; }
					_case_begin_4728405024:;
					{
						jule::Ptr<_1e38d4ec7_RetTypeDecl> _79230_decl;
						jule::Bool _79236_ok;
						std::tie(_79230_decl,_79236_ok) = this->self->_method_build_multi_ret_type(_76339_tokens,_76361_i);
						_76371_t = _79230_decl;
						_76388_ok = _79236_ok;
						return std::make_tuple(_76371_t,_76388_ok);
					}
					goto _match_end_4728407040;
					_case_end_4728405024:;
					if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4728407248; }
					_case_begin_4728407248:;
					{
						this->self->_method_push_err(_76917_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
						return std::make_tuple(_76371_t,_76388_ok);
					}
					goto _match_end_4728407040;
					_case_end_4728407248:;
					_match_end_4728407040:;
				}
			}
			std::tie(_76371_t->_field_kind,_76388_ok) = this->self->_method_build_type(_76339_tokens,(&(_76361_i)),true);
			return std::make_tuple(_76371_t,_76388_ok);
		}
		goto _match_end_4728399520;
		_case_end_4728399792:;
		_match_end_4728399520:;
	}
	(_76361_i)++;
	this->self->_method_push_err(_76917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_76371_t,_76388_ok);
}



inline jule::Ptr<_1e38d4ec7_FnDecl> _1e4a02445_Parser::_method_build_fn_prototype(jule::Slice<_1e3bad8dd_Token>& _81143_tokens,jule::Int& _81165_i,jule::Bool _81173_method) {
	jule::Ptr<_1e38d4ec7_FnDecl> _81217_f = jule::new_struct<_1e38d4ec7_FnDecl>(new( std::nothrow ) _1e38d4ec7_FnDecl(_81143_tokens[_81165_i],jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>(),jule::Ptr<_1e38d4ec7_CommentGroup>(),jule::Ptr<_1e38d4ec7_ScopeTree>(),jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>>(),jule::Ptr<_1e38d4ec7_RetTypeDecl>(),jule::Slice<jule::Ptr<_1e38d4ec7_ParamDecl>>()));
	if (_81217_f->_field_token._field_id == 38LLU) {
		_81217_f->_field_statically=true;
		(_81165_i)++;
		if (_81165_i >= _81143_tokens.len()) {
			this->self->_method_push_err(_81217_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_81217_f->_field_token=_81143_tokens[_81165_i];
	}
	if (_81217_f->_field_token._field_id == 35LLU) {
		_81217_f->_field_unsafety=true;
		(_81165_i)++;
		if (_81165_i >= _81143_tokens.len()) {
			this->self->_method_push_err(_81217_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_81217_f->_field_token=_81143_tokens[_81165_i];
	}
	(_81165_i)++;
	if (_81165_i >= _81143_tokens.len()) {
		this->self->_method_push_err(_81217_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1e3bad8dd_Token _84513_tok = _81143_tokens[_81165_i];
	if (_84513_tok._field_id == 2LLU) {
		(_81165_i)++;
		if (_81165_i >= _81143_tokens.len()) {
			this->self->_method_push_err(_81217_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_81217_f->_field_ident=_84513_tok._field_kind;
	} else {
		_81217_f->_field_ident=jule::Str("<anonymous>", 11);
	}
	_1e3bad8dd_Token _85713_error_token = _81143_tokens[_81165_i];
	jule::Slice<_1e3bad8dd_Token> _85817_generics_tokens = _1e4a02445_range(_81165_i,jule::Str("[", 1),jule::Str("]", 1),_81143_tokens);
	if (_85817_generics_tokens != nullptr) {
		_81217_f->_field_generics=this->self->_method_build_generics(_85817_generics_tokens,_85713_error_token);
	}
	if (_81143_tokens[_81165_i]._field_kind != jule::Str("(", 1)) {
		this->self->_method_push_err(_81143_tokens[_81165_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<_1e3bad8dd_Token> _86817_params_toks = _1e4a02445_range(_81165_i,jule::Str("(", 1),jule::Str(")", 1),_81143_tokens);
	if (_86817_params_toks.len() > 0LL) {
		_81217_f->_field_params=this->self->_method_build_params(_86817_params_toks,_81173_method);
	}
	std::tie(_81217_f->_field_result,std::ignore) = this->self->_method_build_ret_type(_81143_tokens,_81165_i);
	return _81217_f;
}



inline jule::Ptr<_1e38d4ec7_FnDecl> _1e4a02445_Parser::_method_build_fn(jule::Slice<_1e3bad8dd_Token>& _87933_tokens,jule::Bool _87950_method,jule::Bool _87964_prototype) {
	jule::Int _88017_i = 0LL;
	jule::Ptr<_1e38d4ec7_FnDecl> _88117_f = this->self->_method_build_fn_prototype(_87933_tokens,_88017_i,_87950_method);
	if (_87964_prototype) {
		if (_88017_i < _87933_tokens.len()) {
			this->self->_method_push_err(_87933_tokens[_88017_i + 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		return _88117_f;
	} else if (_88117_f == nullptr) {
		return _88117_f;
	}
	if (_88017_i >= _87933_tokens.len()) {
		this->self->_method_stop();
		this->self->_method_push_err(_88117_f->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<_1e3bad8dd_Token> _89717_block_tokens = _1e4a02445_range(_88017_i,jule::Str("{", 1),jule::Str("}", 1),_87933_tokens);
	if (_89717_block_tokens != nullptr) {
		_88117_f->_field_scope=this->self->_method_build_scope(_89717_block_tokens);
		_88117_f->_field_scope->_field_unsafety=_88117_f->_field_unsafety;
		if (_88017_i < _87933_tokens.len()) {
			this->self->_method_push_err(_87933_tokens[_88017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
	} else {
		this->self->_method_stop();
		this->self->_method_push_err(_88117_f->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _88117_f;
}



inline jule::Slice<_1e3bad8dd_Token> _1e4a02445_Parser::_method_get_use_decl_selectors(jule::Slice<_1e3bad8dd_Token> _91345_tokens) {
	jule::Int _91417_i = 0LL;
	_91345_tokens=_1e4a02445_range(_91417_i,jule::Str("{", 1),jule::Str("}", 1),_91345_tokens);
	jule::Slice<jule::Slice<_1e3bad8dd_Token>> _91618_parts;
	jule::Slice<_1e24777a2_Log> _91625_errs;
	std::tie(_91618_parts,_91625_errs) = _1e4a02445_parts(_91345_tokens,8LLU,true);
	if (_91625_errs.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_91625_errs);
		return nullptr;
	}
	jule::Slice<_1e3bad8dd_Token> _92217_selectors = jule::Slice<_1e3bad8dd_Token>::alloc(0LL,static_cast<jule::I64>(_91618_parts.len()));
	{
		auto &expr = _91618_parts;
		auto it = expr.begin();
		_iter_begin_4728472496:;
		if (it != expr.end()) {
			jule::Slice<_1e3bad8dd_Token> _1e4a02445_part = *it;
			{
				if (_1e4a02445_part.len() > 1LL) {
					(*this)._method_push_err(_1e4a02445_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_1e3bad8dd_Token _92721_tok = _1e4a02445_part[0LL];
				if ((_92721_tok._field_id != 2LLU) && (_92721_tok._field_id != 28LLU)) {
					(*this)._method_push_err(_92721_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_4728472496;
				}
				_92217_selectors.push(_92721_tok);
			}
			_iter_next_4728472496:;
			++it;
			goto _iter_begin_4728472496;
		}
		_iter_end_4728472496:;
	}
	return _92217_selectors;
}



inline void _1e4a02445_Parser::_method_build_cpp_use_decl(jule::Ptr<_1e38d4ec7_UseDecl>& _93842_decl,jule::Slice<_1e3bad8dd_Token>& _93859_tokens) {
	if (_93859_tokens.len() > 1LL) {
		(*this)._method_push_err(_93859_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_1e3bad8dd_Token _94213_token = _93859_tokens[0LL];
	if ((_94213_token._field_id != 6LLU) || ((_94213_token._field_kind[0LL] != '`') && (_94213_token._field_kind[0LL] != '\"'))) {
		(*this)._method_push_err(_94213_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;
	}
	_93842_decl->_field_cpp_linked=true;
	_93842_decl->_field_link_path=_94213_token._field_kind.slice(1LL,_94213_token._field_kind.len() - 1LL);
	if ((!(_1e243c019_is_std_header_path(_93842_decl->_field_link_path)))) {
		_93842_decl->_field_link_path=_1e2517b61_join(jule::Slice<jule::Str>({_94213_token._field_file->_method_dir(),_93842_decl->_field_link_path}));
	}
}



inline void _1e4a02445_Parser::_method_build_std_use_decl(jule::Ptr<_1e38d4ec7_UseDecl>& _95442_decl,jule::Slice<_1e3bad8dd_Token> _95462_tokens) {
	_95442_decl->_field_std=true;
	_1e3bad8dd_Token _95717_token = _95462_tokens[0LL];
	if (_95462_tokens.len() < 3LL) {
		(*this)._method_push_err(_95717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_95462_tokens=_95462_tokens.slice(2LL);
	_95717_token=_95462_tokens[_95462_tokens.len() - 1LL];
	{
		auto &_match_expr{ _95717_token._field_id };
		if (!((23LLU) == _match_expr)) { goto _case_end_4728505168; }
		_case_begin_4728505168:;
		{
			(*this)._method_push_err(_95717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;
		}
		goto _match_end_4728505088;
		_case_end_4728505168:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4728505344; }
		_case_begin_4728505344:;
		{
			if (_95717_token._field_kind != jule::Str("}", 1)) {
				(*this)._method_push_err(_95717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			jule::Slice<_1e3bad8dd_Token> _97521_selectors = nullptr;
			std::tie(_95462_tokens,_97521_selectors) = _1e4a02445_range_last(_95462_tokens);
			_95442_decl->_field_selected=(*this)._method_get_use_decl_selectors(_97521_selectors);
			if (_95462_tokens.len() == 0LL) {
				(*this)._method_push_err(_95717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			_95717_token=_95462_tokens[_95462_tokens.len() - 1LL];
			if (_95717_token._field_id != 23LLU) {
				(*this)._method_push_err(_95717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			_95462_tokens=_95462_tokens.slice(0LL,_95462_tokens.len() - 1LL);
			if (_95462_tokens.len() == 0LL) {
				(*this)._method_push_err(_95717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		goto _match_end_4728505088;
		_case_end_4728505344:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4728505440; }
		_case_begin_4728505440:;
		{
			if (_95717_token._field_kind != jule::Str("*", 1)) {
				(*this)._method_push_err(_95717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			_95462_tokens=_95462_tokens.slice(0LL,_95462_tokens.len() - 1LL);
			if (_95462_tokens.len() == 0LL) {
				(*this)._method_push_err(_95717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			_95717_token=_95462_tokens[_95462_tokens.len() - 1LL];
			if (_95717_token._field_id != 23LLU) {
				(*this)._method_push_err(_95717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			_95462_tokens=_95462_tokens.slice(0LL,_95462_tokens.len() - 1LL);
			if (_95462_tokens.len() == 0LL) {
				(*this)._method_push_err(_95717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			_95442_decl->_field_full=true;
		}
		goto _match_end_4728505088;
		_case_end_4728505440:;
		_match_end_4728505088:;
	}
	_95442_decl->_field_link_path=jule::Str("std::", 5) + _1e4a02445_tokstoa(_95462_tokens);
}



inline void _1e4a02445_Parser::_method_build_ident_use_decl(jule::Ptr<_1e38d4ec7_UseDecl>& _101844_decl,jule::Slice<_1e3bad8dd_Token> _101864_tokens) {
	_101844_decl->_field_std=false;
	_1e3bad8dd_Token _102117_token = _101864_tokens[_101864_tokens.len() - 1LL];
	{
		auto &_match_expr{ _102117_token._field_id };
		if (!((23LLU) == _match_expr)) { goto _case_end_4728534720; }
		_case_begin_4728534720:;
		{
			(*this)._method_push_err(_102117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;
		}
		goto _match_end_4728534528;
		_case_end_4728534720:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4728534816; }
		_case_begin_4728534816:;
		{
			if (_102117_token._field_kind != jule::Str("}", 1)) {
				(*this)._method_push_err(_102117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			jule::Slice<_1e3bad8dd_Token> _103321_selectors = nullptr;
			std::tie(_101864_tokens,_103321_selectors) = _1e4a02445_range_last(_101864_tokens);
			_101844_decl->_field_selected=(*this)._method_get_use_decl_selectors(_103321_selectors);
			if (_101864_tokens.len() == 0LL) {
				(*this)._method_push_err(_102117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			_102117_token=_101864_tokens[_101864_tokens.len() - 1LL];
			if (_102117_token._field_id != 23LLU) {
				(*this)._method_push_err(_102117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			_101864_tokens=_101864_tokens.slice(0LL,_101864_tokens.len() - 1LL);
			if (_101864_tokens.len() == 0LL) {
				(*this)._method_push_err(_102117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		goto _match_end_4728534528;
		_case_end_4728534816:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4728534912; }
		_case_begin_4728534912:;
		{
			if (_102117_token._field_kind != jule::Str("*", 1)) {
				(*this)._method_push_err(_102117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			_101864_tokens=_101864_tokens.slice(0LL,_101864_tokens.len() - 1LL);
			if (_101864_tokens.len() == 0LL) {
				(*this)._method_push_err(_102117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			_102117_token=_101864_tokens[_101864_tokens.len() - 1LL];
			if (_102117_token._field_id != 23LLU) {
				(*this)._method_push_err(_102117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			_101864_tokens=_101864_tokens.slice(0LL,_101864_tokens.len() - 1LL);
			if (_101864_tokens.len() == 0LL) {
				(*this)._method_push_err(_102117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			_101844_decl->_field_full=true;
		}
		goto _match_end_4728534528;
		_case_end_4728534912:;
		_match_end_4728534528:;
	}
	_101844_decl->_field_link_path=_1e4a02445_tokstoa(_101864_tokens);
}



inline void _1e4a02445_Parser::_method_parse_use_decl(jule::Ptr<_1e38d4ec7_UseDecl>& _108338_decl,jule::Slice<_1e3bad8dd_Token> _108358_tokens) {
	if (_108338_decl->_field_cpp_linked) {
		(*this)._method_build_cpp_use_decl(_108338_decl,_108358_tokens);
		return;
	}
	_1e3bad8dd_Token _108917_token = _108358_tokens[0LL];
	if (_108917_token._field_id != 2LLU) {
		(*this)._method_push_err(_108917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	}
	if ((_108358_tokens.len() > 2LL) && (_108358_tokens[1LL]._field_id == 12LLU)) {
		_108338_decl->_field_alias=_108917_token._field_kind;
		if (_108358_tokens[2LL]._field_id != 2LLU) {
			(*this)._method_push_err(_108917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;
		}
		_108358_tokens=_108358_tokens.slice(2LL);
		_108917_token=_108358_tokens[0LL];
	}
	
	{
		if (!((_108917_token._field_kind == jule::Str("std", 3)))) { goto _case_end_4728575104; }
		_case_begin_4728575104:;
		{
			(*this)._method_build_std_use_decl(_108338_decl,_108358_tokens);
		}
		goto _match_end_4728574176;
		_case_end_4728575104:;
		_case_begin_4728574288:;
		{
			(*this)._method_build_ident_use_decl(_108338_decl,_108358_tokens);
		}
		goto _match_end_4728574176;
		_case_end_4728574288:;
		_match_end_4728574176:;
	}
}



inline jule::Ptr<_1e38d4ec7_UseDecl> _1e4a02445_Parser::_method_build_use_decl(jule::Slice<_1e3bad8dd_Token> _111837_tokens,jule::Bool _111854_cpp_linked) {
	jule::Ptr<_1e38d4ec7_UseDecl> _111917_decl = jule::new_struct<_1e38d4ec7_UseDecl>(new( std::nothrow ) _1e38d4ec7_UseDecl(_111837_tokens[0LL],jule::Str(),jule::Str(),jule::Bool(),jule::Slice<_1e3bad8dd_Token>(),_111854_cpp_linked,jule::Bool()));
	if (_111837_tokens.len() < 2LL) {
		(*this)._method_push_err(_111917_decl->_field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	}
	_111837_tokens=_111837_tokens.slice(1LL);
	(*this)._method_parse_use_decl(_111917_decl,_111837_tokens);
	return _111917_decl;
}



inline jule::Ptr<_1e38d4ec7_Expr> _1e4a02445_Parser::_method_build_enum_item_expr(jule::Ptr<jule::Int> _113244_i,jule::Slice<_1e3bad8dd_Token>& _113258_tokens) {
	jule::Int _113317_brace_n = 0LL;
	jule::Int _113413_expr_start = (*(_113244_i));
	for (; (*(_113244_i)) < _113258_tokens.len(); ((*(_113244_i)))++) {
		{
			_1e3bad8dd_Token _113617_t = _113258_tokens[(*(_113244_i))];
			if (_113617_t._field_id == 3LLU) {
				{
					auto &_match_expr{ _113617_t._field_kind };
					if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4728595328; }
					_case_begin_4728595328:;
					{
						(_113317_brace_n)++;
						goto _iter_next_4728590128;
					}
					goto _match_end_4728593968;
					_case_end_4728595328:;
					_case_begin_4728593280:;
					{
						(_113317_brace_n)--;
					}
					goto _match_end_4728593968;
					_case_end_4728593280:;
					_match_end_4728593968:;
				}
			}
			if (_113317_brace_n > 0LL) {
				goto _iter_next_4728590128;
			}
			if ((_113617_t._field_id == 8LLU) || (((*(_113244_i)) + 1LL) >= _113258_tokens.len())) {
				jule::Slice<_1e3bad8dd_Token> _115525_expr_tokens = nullptr;
				if (_113617_t._field_id == 8LLU) {
					_115525_expr_tokens=_113258_tokens.slice(_113413_expr_start,(*(_113244_i)));
				} else {
					_115525_expr_tokens=_113258_tokens.slice(_113413_expr_start);
				}
				return this->self->_method_build_expr(_115525_expr_tokens);
			}
		}
	_iter_next_4728590128:;
	}
	_iter_end_4728590128:;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1e38d4ec7_EnumItemDecl>> _1e4a02445_Parser::_method_build_enum_items(jule::Slice<_1e3bad8dd_Token>& _116741_tokens) {
	jule::Slice<jule::Ptr<_1e38d4ec7_EnumItemDecl>> _116817_items = jule::Slice<jule::Ptr<_1e38d4ec7_EnumItemDecl>>::alloc(0LL,1LL);
	jule::Ptr<jule::Int> _116917_i = jule::new_ptr<jule::Int>(0LL);
	for (; (*(_116917_i)) < _116741_tokens.len(); ((*(_116917_i)))++) {
		{
			_1e3bad8dd_Token _117121_t = _116741_tokens[(*(_116917_i))];
			if (_117121_t._field_id == 18LLU) {
				goto _iter_next_4728604048;
			}
			jule::Ptr<_1e38d4ec7_EnumItemDecl> _117621_item = jule::new_struct<_1e38d4ec7_EnumItemDecl>(new( std::nothrow ) _1e38d4ec7_EnumItemDecl());
			_117621_item->_field_token=_117121_t;
			if (_117621_item->_field_token._field_id != 2LLU) {
				this->self->_method_push_err(_117621_item->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			}
			_117621_item->_field_ident=_117621_item->_field_token._field_kind;
			if ((((*(_116917_i)) + 1LL) >= _116741_tokens.len()) || (_116741_tokens[(*(_116917_i)) + 1LL]._field_id == 8LLU)) {
				if (((*(_116917_i)) + 1LL) < _116741_tokens.len()) {
					((*(_116917_i)))++;
				}
				_116817_items.push(_117621_item);
				goto _iter_next_4728604048;
			}
			((*(_116917_i)))++;
			_117121_t=_116741_tokens[(*(_116917_i))];
			((*(_116917_i)))++;
			if ((_117121_t._field_id != 7LLU) || (_117121_t._field_kind != jule::Str("=", 1))) {
				this->self->_method_push_err(_117121_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				this->self->_method_push_suggestion(jule::Str("expected equals \"=\" for assignment", 34),jule::Slice<jule::Any>());
				goto _iter_next_4728604048;
			}
			if (((*(_116917_i)) >= _116741_tokens.len()) || (_116741_tokens[(*(_116917_i))]._field_id == 8LLU)) {
				this->self->_method_push_err(_117121_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_4728604048;
			}
			_117621_item->_field_expr=this->self->_method_build_enum_item_expr(_116917_i,_116741_tokens);
			_116817_items.push(_117621_item);
		}
	_iter_next_4728604048:;
	}
	_iter_end_4728604048:;
	return _116817_items;
}



inline jule::Ptr<_1e38d4ec7_EnumDecl> _1e4a02445_Parser::_method_build_enum_decl(jule::Slice<_1e3bad8dd_Token>& _120840_tokens) {
	if ((_120840_tokens.len() < 2LL) || (_120840_tokens.len() < 3LL)) {
		this->self->_method_push_err(_120840_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1e38d4ec7_EnumDecl> _121317_e = jule::new_struct<_1e38d4ec7_EnumDecl>(new( std::nothrow ) _1e38d4ec7_EnumDecl(_120840_tokens[1LL],jule::Bool(),jule::Str(),jule::Ptr<_1e38d4ec7_TypeDecl>(),jule::Slice<jule::Ptr<_1e38d4ec7_EnumItemDecl>>(),jule::Ptr<_1e38d4ec7_CommentGroup>()));
	if (_121317_e->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_121317_e->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_121317_e->_field_ident=_121317_e->_field_token._field_kind;
	jule::Int _122117_i = 2LL;
	if (_120840_tokens[_122117_i]._field_id == 11LLU) {
		(_122117_i)++;
		if (_122117_i >= _120840_tokens.len()) {
			this->self->_method_push_err(_120840_tokens[_122117_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _121317_e;
		}
		std::tie(_121317_e->_field_kind,std::ignore) = this->self->_method_build_type(_120840_tokens,(&(_122117_i)),true);
		if (_122117_i >= _120840_tokens.len()) {
			this->self->_method_stop();
			this->self->_method_push_err(_121317_e->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _121317_e;
		}
	} else {
		_121317_e->_field_kind=nullptr;
	}
	jule::Slice<_1e3bad8dd_Token> _123817_item_tokens = _1e4a02445_range(_122117_i,jule::Str("{", 1),jule::Str("}", 1),_120840_tokens);
	if (_123817_item_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_121317_e->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _121317_e;
	} else if (_122117_i < _120840_tokens.len()) {
		this->self->_method_push_err(_120840_tokens[_122117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_121317_e->_field_items=this->self->_method_build_enum_items(_123817_item_tokens);
	return _121317_e;
}



inline jule::Ptr<_1e38d4ec7_FieldDecl> _1e4a02445_Parser::_method_build_field(jule::Slice<_1e3bad8dd_Token> _125135_tokens) {
	jule::Ptr<_1e38d4ec7_FieldDecl> _125217_f = jule::new_struct<_1e38d4ec7_FieldDecl>(new( std::nothrow ) _1e38d4ec7_FieldDecl());
	_125217_f->_field_public=_125135_tokens[0LL]._field_id == 21LLU;
	if (_125217_f->_field_public) {
		if (_125135_tokens.len() == 1LL) {
			this->self->_method_push_err(_125135_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_125135_tokens=_125135_tokens.slice(1LL);
	}
	_125217_f->_field_mutable=_125135_tokens[0LL]._field_id == 36LLU;
	if (_125217_f->_field_mutable) {
		if (_125135_tokens.len() == 1LL) {
			this->self->_method_push_err(_125135_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_125135_tokens=_125135_tokens.slice(1LL);
	}
	_125217_f->_field_token=_125135_tokens[0LL];
	if (_125217_f->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_125217_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	_125217_f->_field_ident=_125217_f->_field_token._field_kind;
	if (_125135_tokens.len() == 1LL) {
		this->self->_method_push_err(_125135_tokens[0LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
		return nullptr;
	} else if (_125135_tokens[1LL]._field_id != 11LLU) {
		this->self->_method_push_err(_125135_tokens[1LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
		return nullptr;
	}
	_125135_tokens=_125135_tokens.slice(2LL);
	jule::Int _128917_i = 0LL;
	std::tie(_125217_f->_field_kind,std::ignore) = this->self->_method_build_type(_125135_tokens,(&(_128917_i)),true);
	if (_128917_i < _125135_tokens.len()) {
		this->self->_method_push_err(_125135_tokens[_128917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _125217_f;
}



inline jule::Slice<jule::Ptr<_1e38d4ec7_FieldDecl>> _1e4a02445_Parser::_method_build_struct_decl_fields(jule::Slice<_1e3bad8dd_Token> _129948_tokens) {
	jule::Slice<jule::Ptr<_1e38d4ec7_FieldDecl>> _130017_fields = nullptr;
	jule::Slice<jule::Ptr<_1e3c61e36_Stmt>> _130117_stms = _1e3c61e36_split_stms(_129948_tokens);
	{
		auto &expr = _130117_stms;
		auto it = expr.begin();
		_iter_begin_4728684864:;
		if (it != expr.end()) {
			jule::Ptr<_1e3c61e36_Stmt> _1e4a02445_st = *it;
			{
				_129948_tokens=_1e4a02445_st->_field_tokens;
				if (_129948_tokens[0LL]._field_id == 18LLU) {
					goto _iter_next_4728684864;
				}
				jule::Ptr<_1e38d4ec7_FieldDecl> _130721_f = this->self->_method_build_field(_129948_tokens);
				_130017_fields.push(_130721_f);
			}
			_iter_next_4728684864:;
			++it;
			goto _iter_begin_4728684864;
		}
		_iter_end_4728684864:;
	}
	return _130017_fields;
}



inline jule::Ptr<_1e38d4ec7_StructDecl> _1e4a02445_Parser::_method_build_struct_decl(jule::Slice<_1e3bad8dd_Token>& _131342_tokens) {
	if (_131342_tokens.len() < 3LL) {
		this->self->_method_push_err(_131342_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Int _131917_i = 1LL;
	jule::Ptr<_1e38d4ec7_StructDecl> _132017_s = jule::new_struct<_1e38d4ec7_StructDecl>(new( std::nothrow ) _1e38d4ec7_StructDecl(_131342_tokens[_131917_i],jule::Str(),jule::Slice<jule::Ptr<_1e38d4ec7_FieldDecl>>(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>(),jule::Ptr<_1e38d4ec7_CommentGroup>(),jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>>()));
	if (_132017_s->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_132017_s->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	(_131917_i)++;
	if (_131917_i >= _131342_tokens.len()) {
		this->self->_method_push_err(_131342_tokens[_131917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _132017_s;
	}
	_132017_s->_field_ident=_132017_s->_field_token._field_kind;
	_1e3bad8dd_Token _133413_error_token = _131342_tokens[_131917_i];
	jule::Slice<_1e3bad8dd_Token> _133517_generics_tokens = _1e4a02445_range(_131917_i,jule::Str("[", 1),jule::Str("]", 1),_131342_tokens);
	if (_133517_generics_tokens != nullptr) {
		_132017_s->_field_generics=this->self->_method_build_generics(_133517_generics_tokens,_133413_error_token);
	}
	if (_131917_i >= _131342_tokens.len()) {
		this->self->_method_push_err(_131342_tokens[_131917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _132017_s;
	}
	jule::Slice<_1e3bad8dd_Token> _134417_body_tokens = _1e4a02445_range(_131917_i,jule::Str("{", 1),jule::Str("}", 1),_131342_tokens);
	if (_134417_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_132017_s->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _132017_s;
	}
	if (_131917_i < _131342_tokens.len()) {
		this->self->_method_push_err(_131342_tokens[_131917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_132017_s->_field_fields=this->self->_method_build_struct_decl_fields(_134417_body_tokens);
	return _132017_s;
}



inline void _1e4a02445_Parser::_method_check_method_receiver(jule::Ptr<_1e38d4ec7_FnDecl>& _135841_f) {
	if (_135841_f->_field_statically) {
		if ((_135841_f->_field_params.len() > 0LL) && _135841_f->_field_params[0LL]->_method_is_self()) {
			(*this)._method_push_err(_135841_f->_field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		}
		return;
	}
	if (_135841_f->_field_params.len() == 0LL) {
		(*this)._method_push_err(_135841_f->_field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1e38d4ec7_ParamDecl> _137113_param = _135841_f->_field_params[0LL];
	if ((!(_137113_param->_method_is_self()))) {
		(*this)._method_push_err(_135841_f->_field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;
	}
}



inline jule::Slice<jule::Ptr<_1e38d4ec7_FnDecl>> _1e4a02445_Parser::_method_build_trait_methods(jule::Slice<_1e3bad8dd_Token> _137843_tokens) {
	jule::Slice<jule::Ptr<_1e38d4ec7_FnDecl>> _137917_methods = nullptr;
	jule::Slice<jule::Ptr<_1e3c61e36_Stmt>> _138017_stms = _1e3c61e36_split_stms(_137843_tokens);
	{
		auto &expr = _138017_stms;
		auto it = expr.begin();
		_iter_begin_4728733536:;
		if (it != expr.end()) {
			jule::Ptr<_1e3c61e36_Stmt> _1e4a02445_st = *it;
			{
				_137843_tokens=_1e3ca6387_eliminate_comments(_1e4a02445_st->_field_tokens);
				if (_137843_tokens.len() == 0LL) {
					goto _iter_next_4728733536;
				}
				jule::Bool _138721_is_pub = false;
				if (_137843_tokens[0LL]._field_id == 21LLU) {
					_138721_is_pub=true;
					if (_137843_tokens.len() == 1LL) {
						this->self->_method_push_err(_137843_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						goto _iter_next_4728733536;
					}
					_137843_tokens=_137843_tokens.slice(1LL);
				}
				jule::Ptr<_1e38d4ec7_FnDecl> _139721_f = this->self->_method_build_fn(_137843_tokens,true,true);
				if (_139721_f != nullptr) {
					if (_139721_f->_method_is_anon()) {
						this->self->_method_push_err(_139721_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					}
					this->self->_method_check_method_receiver(_139721_f);
					if (_139721_f->_field_generics.len() > 0LL) {
						this->self->_method_push_err(_139721_f->_field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					}
					_139721_f->_field_public=_138721_is_pub;
					_137917_methods.push(_139721_f);
				}
			}
			_iter_next_4728733536:;
			++it;
			goto _iter_begin_4728733536;
		}
		_iter_end_4728733536:;
	}
	return _137917_methods;
}



inline jule::Ptr<_1e38d4ec7_TraitDecl> _1e4a02445_Parser::_method_build_trait_decl(jule::Slice<_1e3bad8dd_Token>& _141341_tokens) {
	if (_141341_tokens.len() < 3LL) {
		this->self->_method_push_err(_141341_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1e38d4ec7_TraitDecl> _141817_t = jule::new_struct<_1e38d4ec7_TraitDecl>(new( std::nothrow ) _1e38d4ec7_TraitDecl(_141341_tokens[1LL],jule::Str(),jule::Bool(),jule::Ptr<_1e38d4ec7_CommentGroup>(),jule::Slice<jule::Ptr<_1e38d4ec7_FnDecl>>()));
	if (_141817_t->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_141817_t->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_141817_t->_field_ident=_141817_t->_field_token._field_kind;
	jule::Int _142617_i = 2LL;
	jule::Slice<_1e3bad8dd_Token> _142717_body_tokens = _1e4a02445_range(_142617_i,jule::Str("{", 1),jule::Str("}", 1),_141341_tokens);
	if (_142717_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_141817_t->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_142617_i < _141341_tokens.len()) {
		this->self->_method_push_err(_141341_tokens[_142617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_141817_t->_field_methods=this->self->_method_build_trait_methods(_142717_body_tokens);
	return _141817_t;
}



inline jule::Ptr<_1e38d4ec7_FnDecl> _1e4a02445_Parser::_method_build_cpp_link_fn(jule::Slice<_1e3bad8dd_Token> _144141_tokens) {
	_144141_tokens=_144141_tokens.slice(1LL);
	jule::Ptr<_1e38d4ec7_FnDecl> _144317_f = this->self->_method_build_fn(_144141_tokens,false,true);
	if (_144317_f != nullptr) {
		if (_144317_f->_method_is_anon()) {
			this->self->_method_push_err(_144317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		_144317_f->_field_cpp_linked=true;
	}
	return _144317_f;
}



inline jule::Ptr<_1e38d4ec7_VarDecl> _1e4a02445_Parser::_method_build_cpp_link_var(jule::Slice<_1e3bad8dd_Token> _145342_tokens) {
	_145342_tokens=_145342_tokens.slice(1LL);
	jule::Ptr<_1e38d4ec7_VarDecl> _145517_v = this->self->_method_build_var(_145342_tokens);
	if (_145517_v != nullptr) {
		_145517_v->_field_cpp_linked=true;
		if (_145517_v->_field_expr != nullptr) {
			this->self->_method_push_err(_145517_v->_field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		}
	}
	return _145517_v;
}



inline jule::Ptr<_1e38d4ec7_StructDecl> _1e4a02445_Parser::_method_build_cpp_link_struct(jule::Slice<_1e3bad8dd_Token> _146545_tokens) {
	_146545_tokens=_146545_tokens.slice(1LL);
	jule::Ptr<_1e38d4ec7_StructDecl> _146717_s = this->self->_method_build_struct_decl(_146545_tokens);
	if (_146717_s != nullptr) {
		_146717_s->_field_cpp_linked=true;
	}
	return _146717_s;
}



inline jule::Ptr<_1e38d4ec7_TypeAliasDecl> _1e4a02445_Parser::_method_build_cpp_link_type_alias(jule::Slice<_1e3bad8dd_Token> _147449_tokens) {
	_147449_tokens=_147449_tokens.slice(1LL);
	jule::Ptr<_1e38d4ec7_TypeAliasDecl> _147617_t = this->self->_method_build_type_alias_decl(_147449_tokens);
	if (_147617_t != nullptr) {
		_147617_t->_field_cpp_linked=true;
	}
	return _147617_t;
}



inline jule::Ptr<_1e38d4ec7_UseDecl> _1e4a02445_Parser::_method_build_cpp_link_use(jule::Slice<_1e3bad8dd_Token> _148342_tokens) {
	if (_148342_tokens.len() == 1LL) {
		this->self->_method_push_err(_148342_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_148342_tokens=_148342_tokens.slice(1LL);
	
	return this->self->_method_build_use_decl(_148342_tokens,true);
}



inline jule::Any _1e4a02445_Parser::_method_build_cpp_link(jule::Slice<_1e3bad8dd_Token>& _149439_tokens) {
	_1e3bad8dd_Token _149517_token = _149439_tokens[0LL];
	if (_149439_tokens.len() == 1LL) {
		this->self->_method_push_err(_149517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	_149517_token=_149439_tokens[1LL];
	{
		auto &_match_expr{ _149517_token._field_id };
		if (!((19LLU) == _match_expr)) { goto _case_end_4728804848; }
		_case_begin_4728804848:;
		{
			return jule::Any(this->self->_method_build_cpp_link_use(_149439_tokens));
		}
		goto _match_end_4728804400;
		_case_end_4728804848:;
		if (!((33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4728804944; }
		_case_begin_4728804944:;
		{
			return jule::Any(this->self->_method_build_cpp_link_fn(_149439_tokens));
		}
		goto _match_end_4728804400;
		_case_end_4728804944:;
		if (!((9LLU) == _match_expr || (34LLU) == _match_expr)) { goto _case_end_4728805040; }
		_case_begin_4728805040:;
		{
			return jule::Any(this->self->_method_build_cpp_link_var(_149439_tokens));
		}
		goto _match_end_4728804400;
		_case_end_4728805040:;
		if (!((25LLU) == _match_expr)) { goto _case_end_4728805136; }
		_case_begin_4728805136:;
		{
			return jule::Any(this->self->_method_build_cpp_link_struct(_149439_tokens));
		}
		goto _match_end_4728804400;
		_case_end_4728805136:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4728806224; }
		_case_begin_4728806224:;
		{
			return jule::Any(this->self->_method_build_cpp_link_type_alias(_149439_tokens));
		}
		goto _match_end_4728804400;
		_case_end_4728806224:;
		_case_begin_4728803376:;
		{
			this->self->_method_push_err(_149517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		goto _match_end_4728804400;
		_case_end_4728803376:;
		_match_end_4728804400:;
	}
	return jule::Any(nullptr);
}



inline jule::Ptr<_1e38d4ec7_FnDecl> _1e4a02445_Parser::_method_get_method(jule::Slice<_1e3bad8dd_Token>& _152535_tokens) {
	jule::Int _152617_i = 0LL;
	_1e3bad8dd_Token _152717_token = _152535_tokens[_152617_i];
	if (_152717_token._field_id == 38LLU) {
		if ((_152617_i + 1LL) >= _152535_tokens.len()) {
			this->self->_method_push_err(_152717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_152617_i)++;
		_152717_token=_152535_tokens[_152617_i];
	}
	if (_152717_token._field_id == 35LLU) {
		if ((_152617_i + 1LL) >= _152535_tokens.len()) {
			this->self->_method_push_err(_152717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_152617_i)++;
		_152717_token=_152535_tokens[_152617_i];
	}
	if (_152717_token._field_id != 33LLU) {
		this->self->_method_push_err(_152717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1e38d4ec7_FnDecl> _155117_f = this->self->_method_build_fn(_152535_tokens,true,false);
	if ((_155117_f != nullptr) && _155117_f->_method_is_anon()) {
		this->self->_method_push_err(_155117_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _155117_f;
}



inline void _1e4a02445_Parser::_method_parse_impl_body(jule::Ptr<_1e38d4ec7_Impl>& _155840_ipl,jule::Slice<_1e3bad8dd_Token>& _155857_tokens) {
	jule::Slice<jule::Ptr<_1e3c61e36_Stmt>> _155917_stms = _1e3c61e36_split_stms(_155857_tokens);
	{
		auto &expr = _155917_stms;
		auto it = expr.begin();
		_iter_begin_4728832560:;
		if (it != expr.end()) {
			jule::Ptr<_1e3c61e36_Stmt> _1e4a02445_st = *it;
			{
				_155857_tokens=_1e4a02445_st->_field_tokens;
				_1e3bad8dd_Token _156221_token = _155857_tokens[0LL];
				jule::Bool _156321_is_pub = false;
				{
					auto &_match_expr{ _156221_token._field_id };
					if (!((18LLU) == _match_expr)) { goto _case_end_4728836512; }
					_case_begin_4728836512:;
					{
						goto _iter_next_4728832560;
					}
					goto _match_end_4728836928;
					_case_end_4728836512:;
					if (!((21LLU) == _match_expr)) { goto _case_end_4728837072; }
					_case_begin_4728837072:;
					{
						_156321_is_pub=true;
						if (_155857_tokens.len() == 1LL) {
							this->self->_method_push_err(_155857_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_4728832560;
						}
						_155857_tokens=_155857_tokens.slice(1LL);
						if (_155857_tokens.len() > 0LL) {
							_156221_token=_155857_tokens[0LL];
						}
					}
					goto _match_end_4728836928;
					_case_end_4728837072:;
					_match_end_4728836928:;
				}
				{
					auto &_match_expr{ _156221_token._field_id };
					if (!((9LLU) == _match_expr)) { goto _case_end_4728841984; }
					_case_begin_4728841984:;
					{
						jule::Ptr<_1e38d4ec7_VarDecl> _158325_v = this->self->_method_build_var(_155857_tokens);
						if (_158325_v != nullptr) {
							_158325_v->_field_public=_156321_is_pub;
							_155840_ipl->_field_statics = jule::alloc_for_append(_155840_ipl->_field_statics,1);_155840_ipl->_field_statics.push(_158325_v);
						}
					}
					goto _match_end_4728837488;
					_case_end_4728841984:;
					if (!((38LLU) == _match_expr || (33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4728842080; }
					_case_begin_4728842080:;
					{
						jule::Ptr<_1e38d4ec7_FnDecl> _159225_f = this->self->_method_get_method(_155857_tokens);
						if (_159225_f != nullptr) {
							_159225_f->_field_public=_156321_is_pub;
							this->self->_method_check_method_receiver(_159225_f);
							_155840_ipl->_field_methods = jule::alloc_for_append(_155840_ipl->_field_methods,1);_155840_ipl->_field_methods.push(_159225_f);
						}
					}
					goto _match_end_4728837488;
					_case_end_4728842080:;
					_case_begin_4728841280:;
					{
						this->self->_method_push_err(_156221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						goto _iter_next_4728832560;
					}
					goto _match_end_4728837488;
					_case_end_4728841280:;
					_match_end_4728837488:;
				}
			}
			_iter_next_4728832560:;
			++it;
			goto _iter_begin_4728832560;
		}
		_iter_end_4728832560:;
	}
}



inline jule::Ptr<_1e38d4ec7_Impl> _1e4a02445_Parser::_method_build_impl(jule::Slice<_1e3bad8dd_Token> _160634_tokens) {
	_1e3bad8dd_Token _160717_token = _160634_tokens[0LL];
	if (_160634_tokens.len() < 2LL) {
		this->self->_method_push_err(_160717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_160717_token=_160634_tokens[1LL];
	if (_160717_token._field_id != 2LLU) {
		this->self->_method_push_err(_160717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_160634_tokens.len() < 3LL) {
		this->self->_method_push_err(_160717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1e38d4ec7_Impl> _162217_ipl = jule::new_struct<_1e38d4ec7_Impl>(new( std::nothrow ) _1e38d4ec7_Impl(_160717_token,_1e3bad8dd_Token(),jule::Slice<jule::Ptr<_1e38d4ec7_FnDecl>>(),jule::Slice<jule::Ptr<_1e38d4ec7_VarDecl>>()));
	_160717_token=_160634_tokens[2LL];
	if (_160717_token._field_id != 12LLU) {
		if ((_160717_token._field_id == 3LLU) && (_160717_token._field_kind == jule::Str("{", 1))) {
			std::tie(_162217_ipl->_field_base,_162217_ipl->_field_dest) = std::make_tuple(_162217_ipl->_field_dest,_162217_ipl->_field_base);
			_160634_tokens=_160634_tokens.slice(2LL);
			goto _julec_label_body;
		}
		this->self->_method_push_err(_160717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_160634_tokens.len() < 4LL) {
		this->self->_method_push_err(_160717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_160717_token=_160634_tokens[3LL];
	if (_160717_token._field_id != 2LLU) {
		this->self->_method_push_err(_160717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	_162217_ipl->_field_dest=_160717_token;
	_160634_tokens=_160634_tokens.slice(4LL);
	_julec_label_body:;
	jule::Int _165217_i = 0LL;
	jule::Slice<_1e3bad8dd_Token> _165317_body_tokens = _1e4a02445_range(_165217_i,jule::Str("{", 1),jule::Str("}", 1),_160634_tokens);
	if (_165317_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_162217_ipl->_field_base,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_165217_i < _160634_tokens.len()) {
		this->self->_method_push_err(_160634_tokens[_165217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	this->self->_method_parse_impl_body(_162217_ipl,_165317_body_tokens);
	return _162217_ipl;
}



inline jule::Any _1e4a02445_Parser::_method_build_node_data(jule::Slice<_1e3bad8dd_Token>& _166740_tokens) {
	_1e3bad8dd_Token _166817_token = _166740_tokens[0LL];
	{
		auto &_match_expr{ _166817_token._field_id };
		if (!((19LLU) == _match_expr)) { goto _case_end_5015745216; }
		_case_begin_5015745216:;
		{
			
			return jule::Any(this->self->_method_build_use_decl(_166740_tokens,false));
		}
		goto _match_end_5015744944;
		_case_end_5015745216:;
		if (!((33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_5015745312; }
		_case_begin_5015745312:;
		{
			jule::Ptr<_1e38d4ec7_FnDecl> _167621_f = this->self->_method_build_fn(_166740_tokens,false,false);
			if (_167621_f != nullptr) {
				_167621_f->_field_global=true;
				if (_167621_f->_method_is_anon()) {
					this->self->_method_push_err(_167621_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
			}
			return jule::Any(_167621_f);
		}
		goto _match_end_5015744944;
		_case_end_5015745312:;
		if (!((34LLU) == _match_expr || (9LLU) == _match_expr || (36LLU) == _match_expr || (38LLU) == _match_expr)) { goto _case_end_5015745408; }
		_case_begin_5015745408:;
		{
			return jule::Any(this->self->_method_build_var(_166740_tokens));
		}
		goto _match_end_5015744944;
		_case_end_5015745408:;
		if (!((10LLU) == _match_expr)) { goto _case_end_5015745504; }
		_case_begin_5015745504:;
		{
			return jule::Any(this->self->_method_build_type_alias_decl(_166740_tokens));
		}
		goto _match_end_5015744944;
		_case_end_5015745504:;
		if (!((24LLU) == _match_expr)) { goto _case_end_5015746896; }
		_case_begin_5015746896:;
		{
			return jule::Any(this->self->_method_build_enum_decl(_166740_tokens));
		}
		goto _match_end_5015744944;
		_case_end_5015746896:;
		if (!((25LLU) == _match_expr)) { goto _case_end_5015746992; }
		_case_begin_5015746992:;
		{
			return jule::Any(this->self->_method_build_struct_decl(_166740_tokens));
		}
		goto _match_end_5015744944;
		_case_end_5015746992:;
		if (!((29LLU) == _match_expr)) { goto _case_end_5015747088; }
		_case_begin_5015747088:;
		{
			return jule::Any(this->self->_method_build_trait_decl(_166740_tokens));
		}
		goto _match_end_5015744944;
		_case_end_5015747088:;
		if (!((30LLU) == _match_expr)) { goto _case_end_5015747184; }
		_case_begin_5015747184:;
		{
			return jule::Any(this->self->_method_build_impl(_166740_tokens));
		}
		goto _match_end_5015744944;
		_case_end_5015747184:;
		if (!((31LLU) == _match_expr)) { goto _case_end_5015747648; }
		_case_begin_5015747648:;
		{
			return this->self->_method_build_cpp_link(_166740_tokens);
		}
		goto _match_end_5015744944;
		_case_end_5015747648:;
		if (!((39LLU) == _match_expr)) { goto _case_end_5015747744; }
		_case_begin_5015747744:;
		{
			return jule::Any(this->self->_method_build_directive(_166740_tokens));
		}
		goto _match_end_5015744944;
		_case_end_5015747744:;
		if (!((18LLU) == _match_expr)) { goto _case_end_5015747840; }
		_case_begin_5015747840:;
		{
			jule::Ptr<_1e38d4ec7_Comment> _171621_c = _1e4a02445_build_comment(_166817_token);
			this->self->_method_process_comment(_171621_c);
			return jule::Any(_171621_c);
		}
		goto _match_end_5015744944;
		_case_end_5015747840:;
		_case_begin_5015743408:;
		{
			this->self->_method_push_err(_166817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return jule::Any(nullptr);
		}
		goto _match_end_5015744944;
		_case_end_5015743408:;
		_match_end_5015744944:;
	}
}



inline void _1e4a02445_Parser::_method_check_comment_group(_1e38d4ec7_Node& _172639_node) {
	if ((*this)._field_comment_group == nullptr) {
		return;
	}
	{
		auto &_match_expr{ _172639_node._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_Comment>>() || _match_expr.type_is<jule::Ptr<_1e38d4ec7_Directive>>())) { goto _case_end_5015768624; }
		goto _match_end_5015766848;
		_case_end_5015768624:;
		_case_begin_5015767296:;
		{
			(*this)._field_comment_group=nullptr;
		}
		goto _match_end_5015766848;
		_case_end_5015767296:;
		_match_end_5015766848:;
	}
}



inline void _1e4a02445_Parser::_method_check_directive(_1e38d4ec7_Node& _174035_node) {
	if ((*this)._field_directives == nullptr) {
		return;
	}
	{
		auto &_match_expr{ _174035_node._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_Directive>>() || _match_expr.type_is<jule::Ptr<_1e38d4ec7_Comment>>())) { goto _case_end_5015774064; }
		goto _match_end_5015771648;
		_case_end_5015774064:;
		_case_begin_5015772096:;
		{
			if ((*this)._field_directives.len() != 0LL) {
				(*this)._method_push_err((*this)._field_directives[0LL]->_field_tag,jule::Str("this directive is out of scope, cant assign to any define", 57),jule::Slice<jule::Any>());
			}
			(*this)._field_directives=nullptr;
		}
		goto _match_end_5015771648;
		_case_end_5015772096:;
		_match_end_5015771648:;
	}
}



inline void _1e4a02445_Parser::_method_apply_meta(_1e38d4ec7_Node& _175834_node,jule::Bool _175850_is_pub) {
	{
		auto &_match_expr{ _175834_node._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_VarDecl>>())) { goto _case_end_5015779504; }
		_case_begin_5015779504:;
		{
			jule::Ptr<_1e38d4ec7_VarDecl> _176121_v = _175834_node._field_data.operator jule::Ptr<_1e38d4ec7_VarDecl>();
			if (_176121_v == nullptr) {
				return;
			}
			_176121_v->_field_public=_175850_is_pub;
			_175850_is_pub=false;
			_176121_v->_field_doc_comments=(*this)._field_comment_group;
			(*this)._field_comment_group=nullptr;
			_176121_v->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
		}
		goto _match_end_5015779984;
		_case_end_5015779504:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_FnDecl>>())) { goto _case_end_5015780240; }
		_case_begin_5015780240:;
		{
			jule::Ptr<_1e38d4ec7_FnDecl> _177521_f = _175834_node._field_data.operator jule::Ptr<_1e38d4ec7_FnDecl>();
			if (_177521_f == nullptr) {
				return;
			}
			_177521_f->_field_public=_175850_is_pub;
			_175850_is_pub=false;
			_177521_f->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_177521_f->_field_doc_comments=(*this)._field_comment_group;
			(*this)._field_comment_group=nullptr;
		}
		goto _match_end_5015779984;
		_case_end_5015780240:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_TypeAliasDecl>>())) { goto _case_end_5015780336; }
		_case_begin_5015780336:;
		{
			jule::Ptr<_1e38d4ec7_TypeAliasDecl> _178821_tad = _175834_node._field_data.operator jule::Ptr<_1e38d4ec7_TypeAliasDecl>();
			if (_178821_tad == nullptr) {
				return;
			}
			_178821_tad->_field_public=_175850_is_pub;
			_175850_is_pub=false;
			_178821_tad->_field_doc_comments=(*this)._field_comment_group;
			(*this)._field_comment_group=nullptr;
		}
		goto _match_end_5015779984;
		_case_end_5015780336:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_EnumDecl>>())) { goto _case_end_5015780432; }
		_case_begin_5015780432:;
		{
			jule::Ptr<_1e38d4ec7_EnumDecl> _179821_ed = _175834_node._field_data.operator jule::Ptr<_1e38d4ec7_EnumDecl>();
			if (_179821_ed == nullptr) {
				return;
			}
			_179821_ed->_field_doc_comments=(*this)._field_comment_group;
			(*this)._field_comment_group=nullptr;
			_179821_ed->_field_public=_175850_is_pub;
			_175850_is_pub=false;
		}
		goto _match_end_5015779984;
		_case_end_5015780432:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_StructDecl>>())) { goto _case_end_5015780528; }
		_case_begin_5015780528:;
		{
			jule::Ptr<_1e38d4ec7_StructDecl> _180821_sd = _175834_node._field_data.operator jule::Ptr<_1e38d4ec7_StructDecl>();
			if (_180821_sd == nullptr) {
				return;
			}
			_180821_sd->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_180821_sd->_field_doc_comments=(*this)._field_comment_group;
			(*this)._field_comment_group=nullptr;
			_180821_sd->_field_public=_175850_is_pub;
			_175850_is_pub=false;
		}
		goto _match_end_5015779984;
		_case_end_5015780528:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_TraitDecl>>())) { goto _case_end_5015780624; }
		_case_begin_5015780624:;
		{
			jule::Ptr<_1e38d4ec7_TraitDecl> _182021_td = _175834_node._field_data.operator jule::Ptr<_1e38d4ec7_TraitDecl>();
			if (_182021_td == nullptr) {
				return;
			}
			_182021_td->_field_doc_comments=(*this)._field_comment_group;
			(*this)._field_comment_group=nullptr;
			_182021_td->_field_public=_175850_is_pub;
			_175850_is_pub=false;
		}
		goto _match_end_5015779984;
		_case_end_5015780624:;
		_match_end_5015779984:;
	}
	if (_175850_is_pub) {
		(*this)._method_push_err(_175834_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>());
	}
}



inline void _1e4a02445_Parser::_method_check_use_decl(_1e38d4ec7_Node& _183434_node) {
	{
		auto &_match_expr{ _183434_node._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_UseDecl>>())) { goto _case_end_5015811568; }
		goto _match_end_5015810640;
		_case_end_5015811568:;
		_case_begin_5015810096:;
		{
			return;
		}
		goto _match_end_5015810640;
		_case_end_5015810096:;
		_match_end_5015810640:;
	}
	if ((*this)._field_ast->_field_decls.len() > 0LL) {
		(*this)._method_push_err(_183434_node._field_token,jule::Str("use declarations must declared before other declarations", 56),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	}
}



inline std::tuple<jule::Bool,jule::Any> _1e4a02445_Parser::_method_build_general_scope_node_data(jule::Slice<_1e3bad8dd_Token> _184953_st) {
	jule::Bool _184968_is_pub = jule::Bool();
	jule::Any _184982_data = jule::Any();
	if (_184953_st[0LL]._field_id == 21LLU) {
		_184968_is_pub=true;
		_184953_st=_184953_st.slice(1LL);
		if (_184953_st.len() == 0LL) {
			this->self->_method_push_err(_184953_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return std::make_tuple(_184968_is_pub,_184982_data);
		}
	}
	_184982_data=this->self->_method_build_node_data(_184953_st);
	return std::make_tuple(_184968_is_pub,_184982_data);
}



inline _1e38d4ec7_Node _1e4a02445_Parser::_method_parse_node(jule::Slice<_1e3bad8dd_Token>& _186435_st) {
	_1e38d4ec7_Node _186517_node = _1e38d4ec7_Node(_186435_st[0LL],jule::Any());
	jule::Bool _186914_is_pub;
	jule::Any _186926_data;
	std::tie(_186914_is_pub,_186926_data) = this->self->_method_build_general_scope_node_data(_186435_st);
	if (_186926_data == nullptr) {
		return _186517_node;
	}
	_186517_node._field_data=_186926_data;
	this->self->_method_apply_meta(_186517_node,_186914_is_pub);
	this->self->_method_check_comment_group(_186517_node);
	this->self->_method_check_directive(_186517_node);
	this->self->_method_check_use_decl(_186517_node);
	return _186517_node;
}



inline void _1e4a02445_Parser::_method_append_node(jule::Slice<_1e3bad8dd_Token>& _188336_st) {
	if (_188336_st.len() == 0LL) {
		return;
	}
	_1e38d4ec7_Node _188817_node = this->self->_method_parse_node(_188336_st);
	if ((_188817_node._field_data == nullptr) || this->self->_method_stopped()) {
		return;
	}
	{
		if (!((_188817_node._method_is_directive()))) { goto _case_end_5015841376; }
		_case_begin_5015841376:;
		{
			this->self->_method_push_directive(_188817_node._field_data.operator jule::Ptr<_1e38d4ec7_Directive>());
		}
		goto _match_end_5015840576;
		_case_end_5015841376:;
		if (!((_188817_node._method_is_use_decl()))) { goto _case_end_5015841472; }
		_case_begin_5015841472:;
		{
			this->self->_field_ast->_field_use_decls = jule::alloc_for_append(this->self->_field_ast->_field_use_decls,1);this->self->_field_ast->_field_use_decls.push(_188817_node._field_data.operator jule::Ptr<_1e38d4ec7_UseDecl>());
		}
		goto _match_end_5015840576;
		_case_end_5015841472:;
		if (!((_188817_node._method_is_decl()))) { goto _case_end_5015841568; }
		_case_begin_5015841568:;
		{
			this->self->_field_ast->_field_decls = jule::alloc_for_append(this->self->_field_ast->_field_decls,1);this->self->_field_ast->_field_decls.push(_188817_node);
		}
		goto _match_end_5015840576;
		_case_end_5015841568:;
		if (!((_188817_node._method_is_comment()))) { goto _case_end_5015841664; }
		_case_begin_5015841664:;
		{
			jule::Ptr<_1e38d4ec7_Comment> _190621_c = _188817_node._field_data.operator jule::Ptr<_1e38d4ec7_Comment>();
			this->self->_field_ast->_field_comments = jule::alloc_for_append(this->self->_field_ast->_field_comments,1);this->self->_field_ast->_field_comments.push(_190621_c);
		}
		goto _match_end_5015840576;
		_case_end_5015841664:;
		if (!((_188817_node._method_is_impl()))) { goto _case_end_5015843216; }
		_case_begin_5015843216:;
		{
			this->self->_field_ast->_field_impls = jule::alloc_for_append(this->self->_field_ast->_field_impls,1);this->self->_field_ast->_field_impls.push(_188817_node._field_data.operator jule::Ptr<_1e38d4ec7_Impl>());
		}
		goto _match_end_5015840576;
		_case_end_5015843216:;
		_case_begin_5015840656:;
		{
			this->self->_method_push_err(_188817_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		goto _match_end_5015840576;
		_case_end_5015840656:;
		_match_end_5015840576:;
	}
}



inline void _1e4a02445_Parser::_method_remove_range(jule::Int _191731_i,jule::Str _191739_kind,jule::Slice<_1e3bad8dd_Token>& _191751_tokens,jule::Slice<jule::Int>& _191773_ranges) {
	jule::Str _191813_close = _1e4a02445_get_close_kind_of_brace(_191739_kind);
	for (; _191731_i >= 0LL; (_191731_i)--) {
		{
			_1e3bad8dd_Token _192017_tok = _191751_tokens[_191773_ranges[_191731_i]];
			if (_192017_tok._field_kind != _191813_close) {
				goto _iter_next_5015846048;
			}
			_191773_ranges=jule::append(_191773_ranges.slice(0LL,_191731_i),_191773_ranges.slice(_191731_i + 1LL));
			goto _iter_end_5015846048;
		}
	_iter_next_5015846048:;
	}
	_iter_end_5015846048:;
}



inline void _1e4a02445_Parser::_method_push_wrong_order_close_err(_1e3bad8dd_Token& _193046_t,jule::Slice<_1e3bad8dd_Token>& _193057_tokens,jule::Slice<jule::Int>& _193075_ranges) {
	{
		auto &_match_expr{ _193057_tokens[_193075_ranges[_193075_ranges.len() - 1LL]]._field_kind };
		if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_5015869904; }
		_case_begin_5015869904:;
		{
			(*this)._method_push_err(_193046_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
		}
		goto _match_end_5015869744;
		_case_end_5015869904:;
		if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_5015870000; }
		_case_begin_5015870000:;
		{
			(*this)._method_push_err(_193046_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
		}
		goto _match_end_5015869744;
		_case_end_5015870000:;
		if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_5015870096; }
		_case_begin_5015870096:;
		{
			(*this)._method_push_err(_193046_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
		}
		goto _match_end_5015869744;
		_case_end_5015870096:;
		_match_end_5015869744:;
	}
}



inline void _1e4a02445_Parser::_method_push_range_close(_1e3bad8dd_Token _193835_t,jule::Str _193845_left,jule::Slice<_1e3bad8dd_Token>& _193857_tokens,jule::Slice<jule::Int>& _193879_ranges) {
	jule::I64 _193913_n = _193879_ranges.len();
	if (_193913_n == 0LL) {
		{
			auto &_match_expr{ _193835_t._field_kind };
			if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_5015881136; }
			_case_begin_5015881136:;
			{
				(*this)._method_push_err(_193835_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
			}
			goto _match_end_5015880992;
			_case_end_5015881136:;
			if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_5015881232; }
			_case_begin_5015881232:;
			{
				(*this)._method_push_err(_193835_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
			}
			goto _match_end_5015880992;
			_case_end_5015881232:;
			if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_5015881328; }
			_case_begin_5015881328:;
			{
				(*this)._method_push_err(_193835_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
			}
			goto _match_end_5015880992;
			_case_end_5015881328:;
			_match_end_5015880992:;
		}
		return;
	} else if (_193857_tokens[_193879_ranges[_193913_n - 1LL]]._field_kind != _193845_left) {
		(*this)._method_push_wrong_order_close_err(_193835_t,_193857_tokens,_193879_ranges);
	}
	(*this)._method_remove_range(static_cast<jule::I64>(_193913_n - 1LL),_193835_t._field_kind,_193857_tokens,_193879_ranges);
}



inline void _1e4a02445_Parser::_method_check_ranges(jule::Slice<_1e3bad8dd_Token>& _195332_tokens) {
	jule::Slice<jule::Int> _195417_ranges = nullptr;
	{
		auto &expr = _195332_tokens;
		auto it = expr.begin();
		_iter_begin_5015892128:;
		if (it != expr.end()) {
			jule::Int _1e4a02445_i = it - expr.begin();
			_1e3bad8dd_Token &_1e4a02445_token = *it;
			{
				if (_1e4a02445_token._field_id != 3LLU) {
					goto _iter_next_5015892128;
				}
				{
					auto &_match_expr{ _1e4a02445_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_5015895248; }
					_case_begin_5015895248:;
					{
						_195417_ranges.push(_1e4a02445_i);
					}
					goto _match_end_5015895168;
					_case_end_5015895248:;
					if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_5015895680; }
					_case_begin_5015895680:;
					{
						(*this)._method_push_range_close(_1e4a02445_token,jule::Str("(", 1),_195332_tokens,_195417_ranges);
					}
					goto _match_end_5015895168;
					_case_end_5015895680:;
					if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_5015895776; }
					_case_begin_5015895776:;
					{
						(*this)._method_push_range_close(_1e4a02445_token,jule::Str("{", 1),_195332_tokens,_195417_ranges);
					}
					goto _match_end_5015895168;
					_case_end_5015895776:;
					if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_5015895872; }
					_case_begin_5015895872:;
					{
						(*this)._method_push_range_close(_1e4a02445_token,jule::Str("[", 1),_195332_tokens,_195417_ranges);
					}
					goto _match_end_5015895168;
					_case_end_5015895872:;
					_match_end_5015895168:;
				}
			}
			_iter_next_5015892128:;
			++it;
			_1e4a02445_i++;
			goto _iter_begin_5015892128;
		}
		_iter_end_5015892128:;
	}
	{
		auto &expr = _195417_ranges;
		auto it = expr.begin();
		_iter_begin_5015897888:;
		if (it != expr.end()) {
			jule::Int &_1e4a02445_i = *it;
			{
				_1e3bad8dd_Token _197917_token = _195332_tokens[_1e4a02445_i];
				{
					auto &_match_expr{ _197917_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_5015903424; }
					_case_begin_5015903424:;
					{
						(*this)._method_push_err(_197917_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
					}
					goto _match_end_5015903344;
					_case_end_5015903424:;
					if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_5015903520; }
					_case_begin_5015903520:;
					{
						(*this)._method_push_err(_197917_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
					}
					goto _match_end_5015903344;
					_case_end_5015903520:;
					if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_5015903616; }
					_case_begin_5015903616:;
					{
						(*this)._method_push_err(_197917_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
					}
					goto _match_end_5015903344;
					_case_end_5015903616:;
					_match_end_5015903344:;
				}
			}
			_iter_next_5015897888:;
			++it;
			goto _iter_begin_5015897888;
		}
		_iter_end_5015897888:;
	}
}



inline void _1e4a02445_Parser::_method_parse(jule::Ptr<_1e3beedd5_File>& _198830_f) {
	this->self->_field_ast=jule::new_struct<_1e38d45c0_Ast>(new( std::nothrow ) _1e38d45c0_Ast(_198830_f,jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>(),jule::Slice<jule::Ptr<_1e38d4ec7_UseDecl>>(),jule::Slice<jule::Ptr<_1e38d4ec7_Impl>>(),jule::Slice<jule::Ptr<_1e38d4ec7_Comment>>(),jule::Slice<_1e38d4ec7_Node>()));
	jule::Slice<_1e3bad8dd_Token> _199317_tokens = _198830_f->_method_tokens();
	this->self->_method_check_ranges(_199317_tokens);
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	jule::Slice<jule::Ptr<_1e3c61e36_Stmt>> _199917_stms = _1e3c61e36_split_stms(_199317_tokens);
	jule::Int _200217_i = 0LL;
	_julec_label_iter:;
	for (; _200217_i < _199917_stms.len(); (_200217_i)++) {
		{
			jule::Ptr<_1e3c61e36_Stmt> _200521_st = _199917_stms[_200217_i];
			if (_200521_st->_field_tokens.len() == 0LL) {
				return;
			}
			jule::Any _201025_data;
			std::tie(std::ignore,_201025_data) = this->self->_method_build_general_scope_node_data(_200521_st->_field_tokens);
			if (_201025_data == nullptr) {
				goto _iter_end_5015912944;
			}
			if (this->self->_method_stopped()) {
				return;
			}
			{
				auto &_match_expr{ _201025_data };
				if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_Directive>>())) { goto _case_end_5015920496; }
				_case_begin_5015920496:;
				{
					jule::Ptr<_1e38d4ec7_Directive> _202125_d = _201025_data.operator jule::Ptr<_1e38d4ec7_Directive>();
					if ((_202125_d != nullptr) && _1e249080e_is_top_directive(_202125_d->_field_tag._field_kind)) {
						this->self->_field_ast->_field_top_directives = jule::alloc_for_append(this->self->_field_ast->_field_top_directives,1);this->self->_field_ast->_field_top_directives.push(_202125_d);
					} else {
						goto _iter_end_5015912944;
					}
				}
				goto _match_end_5015920176;
				_case_end_5015920496:;
				if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_Comment>>() || _match_expr.type_is<jule::Ptr<_1e38d4ec7_CommentGroup>>())) { goto _case_end_5015920592; }
				goto _match_end_5015920176;
				_case_end_5015920592:;
				_case_begin_5015919120:;
				{
					goto _iter_end_5015912944;
				}
				goto _match_end_5015920176;
				_case_end_5015919120:;
				_match_end_5015920176:;
			}
		}
	_iter_next_5015912944:;
	}
	_iter_end_5015912944:;
	this->self->_field_errors=nullptr;
	for (; _200217_i < _199917_stms.len(); (_200217_i)++) {
		{
			jule::Ptr<_1e3c61e36_Stmt> _204121_st = _199917_stms[_200217_i];
			this->self->_method_append_node(_204121_st->_field_tokens);
			if (this->self->_method_stopped()) {
				goto _iter_end_5015913952;
			}
		}
	_iter_next_5015913952:;
	}
	_iter_end_5015913952:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4a02445_Parser &_Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "comment_group:" << _Src._field_comment_group << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1e4a2bb9a_TypeBuilder::_method_push_err(_1e3bad8dd_Token _7827_token,jule::Str _7841_fmt) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_err(_7827_token,_7841_fmt,jule::Slice<jule::Any>());
	}
}



inline void _1e4a2bb9a_TypeBuilder::_method_push_suggestion(jule::Str _8534_fmt,jule::Slice<jule::Any> _8547_args) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_suggestion(_8534_fmt,_8547_args);
	}
}



inline jule::Ptr<_1e38d4ec7_TypeDecl> _1e4a2bb9a_TypeBuilder::_method_build_prim(void) {
	jule::Ptr<_1e38d4ec7_TypeDecl> _9217_t = _1e4a2bb9a_build_prim_type((*this)._field_tokens[(*((*this)._field_i))]);
	((*((*this)._field_i)))++;
	return _9217_t;
}



inline jule::Ptr<_1e38d4ec7_TypeDecl> _1e4a2bb9a_TypeBuilder::_method_build_namespace(void) {
	jule::Ptr<_1e38d4ec7_TypeDecl> _9817_t = jule::new_struct<_1e38d4ec7_TypeDecl>(new( std::nothrow ) _1e38d4ec7_TypeDecl((*this)._field_tokens[(*((*this)._field_i))],jule::Any()));
	jule::Ptr<_1e38d4ec7_NamespaceTypeDecl> _10217_nst = jule::new_struct<_1e38d4ec7_NamespaceTypeDecl>(new( std::nothrow ) _1e38d4ec7_NamespaceTypeDecl());
	jule::Int _10317_n = 0LL;
	for (; (*((*this)._field_i)) < (*this)._field_tokens.len(); ((*((*this)._field_i)))++) {
		{
			_1e3bad8dd_Token _10521_token = (*this)._field_tokens[(*((*this)._field_i))];
			if (jule::unsafe_mod(_10317_n,2LL) == 0LL) {
				if (_10521_token._field_id != 2LLU) {
					(*this)._method_push_err(_10521_token,jule::Str("invalid syntax", 14));
					(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				}
				_10217_nst->_field_idents = jule::alloc_for_append(_10217_nst->_field_idents,1);_10217_nst->_field_idents.push(_10521_token);
			} else if (_10521_token._field_id != 23LLU) {
				goto _iter_end_5015945888;
			}
			(_10317_n)++;
		}
	_iter_next_5015945888:;
	}
	_iter_end_5015945888:;
	_10217_nst->_field_idents=_10217_nst->_field_idents.slice(0LL,_10217_nst->_field_idents.len() - 1LL);
	((*((*this)._field_i)))--;
	_10217_nst->_field_kind=(*this)._method_build_ident()->_field_kind.operator jule::Ptr<_1e38d4ec7_IdentTypeDecl>();
	_9817_t->_field_kind=jule::Any(_10217_nst);
	return _9817_t;
}



inline jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>> _1e4a2bb9a_TypeBuilder::_method_build_generics(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		return nullptr;
	}
	_1e3bad8dd_Token _13113_token = (*this)._field_tokens[(*((*this)._field_i))];
	if ((_13113_token._field_id != 3LLU) || (_13113_token._field_kind != jule::Str("[", 1))) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_1e3bad8dd_Token>> _13617_parts = (*this)._method_ident_generics();
	if (_13617_parts.len() == 0LL) {
		(*this)._method_push_err(_13113_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>> _14217_types = jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_13617_parts.len()));
	{
		auto &expr = _13617_parts;
		auto it = expr.begin();
		_iter_begin_5015972800:;
		if (it != expr.end()) {
			jule::Slice<_1e3bad8dd_Token> _1e4a2bb9a_part = *it;
			{
				jule::Int _14421_j = 0LL;
				jule::Ptr<_1e38d4ec7_TypeDecl> _14522_t;
				std::tie(_14522_t,std::ignore) = (*this)._field_p->_method_build_type(_1e4a2bb9a_part,(&(_14421_j)),true);
				if (_14421_j < _1e4a2bb9a_part.len()) {
					(*this)._method_push_err(_1e4a2bb9a_part[_14421_j],jule::Str("invalid syntax", 14));
				}
				_14217_types.push(_14522_t);
			}
			_iter_next_5015972800:;
			++it;
			goto _iter_begin_5015972800;
		}
		_iter_end_5015972800:;
	}
	return _14217_types;
}



inline jule::Slice<jule::Slice<_1e3bad8dd_Token>> _1e4a2bb9a_TypeBuilder::_method_ident_generics(void) {
	jule::Int _15513_first = (*((*this)._field_i));
	jule::Int _15617_range_n = 0LL;
	for (; (*((*this)._field_i)) < (*this)._field_tokens.len(); ((*((*this)._field_i)))++) {
		{
			_1e3bad8dd_Token _15817_token = (*this)._field_tokens[(*((*this)._field_i))];
			if (_15817_token._field_id == 3LLU) {
				{
					auto &_match_expr{ _15817_token._field_kind };
					if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_5015984624; }
					_case_begin_5015984624:;
					{
						(_15617_range_n)++;
					}
					goto _match_end_5015984544;
					_case_end_5015984624:;
					if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_5015984720; }
					_case_begin_5015984720:;
					{
						(_15617_range_n)--;
					}
					goto _match_end_5015984544;
					_case_end_5015984720:;
					_match_end_5015984544:;
				}
			}
			if (_15617_range_n == 0LL) {
				((*((*this)._field_i)))++;
				goto _iter_end_5015975568;
			}
		}
	_iter_next_5015975568:;
	}
	_iter_end_5015975568:;
	jule::Slice<_1e3bad8dd_Token> _17017_tokens = (*this)._field_tokens.slice(_15513_first + 1LL,(*((*this)._field_i)) - 1LL);
	jule::Slice<jule::Slice<_1e3bad8dd_Token>> _17118_parts;
	jule::Slice<_1e24777a2_Log> _17125_errors;
	std::tie(_17118_parts,_17125_errors) = _1e4a02445_parts(_17017_tokens,8LLU,true);
	if ((*this)._field_err) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_17125_errors);
	}
	return _17118_parts;
}



inline jule::Ptr<_1e38d4ec7_TypeDecl> _1e4a2bb9a_TypeBuilder::_method_build_ident(void) {
	if ((((*((*this)._field_i)) + 1LL) < (*this)._field_tokens.len()) && ((*this)._field_tokens[(*((*this)._field_i)) + 1LL]._field_id == 23LLU)) {
		return (*this)._method_build_namespace();
	}
	_1e3bad8dd_Token _18217_token = (*this)._field_tokens[(*((*this)._field_i))];
	jule::Ptr<_1e38d4ec7_IdentTypeDecl> _18317_it = jule::new_struct<_1e38d4ec7_IdentTypeDecl>(new( std::nothrow ) _1e38d4ec7_IdentTypeDecl(_18217_token,_18217_token._field_kind,false,jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>>()));
	((*((*this)._field_i)))++;
	_18317_it->_field_generics=(*this)._method_build_generics();
	return jule::new_struct<_1e38d4ec7_TypeDecl>(new( std::nothrow ) _1e38d4ec7_TypeDecl(_18217_token,jule::Any(_18317_it)));
}



inline jule::Ptr<_1e38d4ec7_TypeDecl> _1e4a2bb9a_TypeBuilder::_method_build_cpp_link(void) {
	if ((((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) || ((*this)._field_tokens[(*((*this)._field_i)) + 1LL]._field_id != 20LLU)) {
		(*this)._method_push_err((*this)._field_tokens[(*((*this)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	}
	(*((*this)._field_i))+=2LL;
	jule::Ptr<_1e38d4ec7_TypeDecl> _20217_t = (*this)._method_build_ident();
	_20217_t->_field_kind.operator jule::Ptr<_1e38d4ec7_IdentTypeDecl>()->_field_cpp_linked=true;
	return _20217_t;
}



inline jule::Ptr<_1e38d4ec7_TypeDecl> _1e4a2bb9a_TypeBuilder::_method_build_fn(void) {
	_1e3bad8dd_Token _20817_token = (*this)._field_tokens[(*((*this)._field_i))];
	jule::Ptr<_1e38d4ec7_FnDecl> _20917_f = (*this)._field_p->_method_build_fn_prototype((*this)._field_tokens,(*((*this)._field_i)),false);
	if (_20917_f == nullptr) {
		return nullptr;
	}
	if ((!(_20917_f->_method_is_anon()))) {
		(*this)._method_push_err(_20917_f->_field_token,jule::Str("invalid syntax", 14));
	}
	return jule::new_struct<_1e38d4ec7_TypeDecl>(new( std::nothrow ) _1e38d4ec7_TypeDecl(_20817_token,jule::Any(_20917_f)));
}



inline jule::Ptr<_1e38d4ec7_TypeDecl> _1e4a2bb9a_TypeBuilder::_method_build_ptr(void) {
	_1e3bad8dd_Token _22317_token = (*this)._field_tokens[(*((*this)._field_i))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_22317_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*this)._field_i)))++;
	if ((*this)._field_tokens[(*((*this)._field_i))]._field_id == 35LLU) {
		((*((*this)._field_i)))++;
		return jule::new_struct<_1e38d4ec7_TypeDecl>(new( std::nothrow ) _1e38d4ec7_TypeDecl(_22317_token,jule::Any(jule::new_struct<_1e38d4ec7_PtrTypeDecl>(new( std::nothrow ) _1e38d4ec7_PtrTypeDecl(nullptr)))));
	}
	jule::Ptr<_1e38d4ec7_TypeDecl> _24017_elem = (*this)._method_step();
	if (_24017_elem == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_1e38d4ec7_TypeDecl>(new( std::nothrow ) _1e38d4ec7_TypeDecl(_22317_token,jule::Any(jule::new_struct<_1e38d4ec7_PtrTypeDecl>(new( std::nothrow ) _1e38d4ec7_PtrTypeDecl(_24017_elem)))));
}



inline jule::Ptr<_1e38d4ec7_TypeDecl> _1e4a2bb9a_TypeBuilder::_method_build_sptr(void) {
	_1e3bad8dd_Token _25417_token = (*this)._field_tokens[(*((*this)._field_i))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_25417_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*this)._field_i)))++;
	jule::Ptr<_1e38d4ec7_TypeDecl> _26117_elem = (*this)._method_step();
	if (_26117_elem == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_1e38d4ec7_TypeDecl>(new( std::nothrow ) _1e38d4ec7_TypeDecl(_25417_token,jule::Any(jule::new_struct<_1e38d4ec7_SptrTypeDecl>(new( std::nothrow ) _1e38d4ec7_SptrTypeDecl(_26117_elem)))));
}



inline jule::Ptr<_1e38d4ec7_TypeDecl> _1e4a2bb9a_TypeBuilder::_method_build_op(void) {
	_1e3bad8dd_Token _27517_token = (*this)._field_tokens[(*((*this)._field_i))];
	{
		auto &_match_expr{ _27517_token._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_5016044464; }
		_case_begin_5016044464:;
		{
			return (*this)._method_build_ptr();
		}
		goto _match_end_5016042528;
		_case_end_5016044464:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_5016042800; }
		_case_begin_5016042800:;
		{
			return (*this)._method_build_sptr();
		}
		goto _match_end_5016042528;
		_case_end_5016042800:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_5016042896; }
		_case_begin_5016042896:;
		{
			return jule::new_struct<_1e38d4ec7_TypeDecl>(new( std::nothrow ) _1e38d4ec7_TypeDecl(_1e3bad8dd_Token(),jule::Any(jule::new_struct<_1e38d4ec7_SptrTypeDecl>(new( std::nothrow ) _1e38d4ec7_SptrTypeDecl((*this)._method_build_sptr())))));
		}
		goto _match_end_5016042528;
		_case_end_5016042896:;
		_case_begin_5016040672:;
		{
			(*this)._method_push_err(_27517_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
		goto _match_end_5016042528;
		_case_end_5016040672:;
		_match_end_5016042528:;
	}
}



inline jule::Ptr<_1e38d4ec7_TypeDecl> _1e4a2bb9a_TypeBuilder::_method_build_slc(void) {
	_1e3bad8dd_Token _29717_token = (*this)._field_tokens[(*((*this)._field_i))];
	((*((*this)._field_i)))++;
	jule::Ptr<_1e38d4ec7_TypeDecl> _29917_elem = (*this)._method_step();
	if (_29917_elem == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_1e38d4ec7_TypeDecl>(new( std::nothrow ) _1e38d4ec7_TypeDecl(_29717_token,jule::Any(jule::new_struct<_1e38d4ec7_SlcTypeDecl>(new( std::nothrow ) _1e38d4ec7_SlcTypeDecl(_29917_elem)))));
}



inline jule::Ptr<_1e38d4ec7_TypeDecl> _1e4a2bb9a_TypeBuilder::_method_build_arr(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err((*this)._field_tokens[(*((*this)._field_i)) - 1LL],jule::Str("data-type missing", 17));
		return nullptr;
	}
	jule::Int _32013_expr_delta = (*((*this)._field_i));
	jule::Ptr<_1e38d4ec7_TypeDecl> _32217_elem = (*this)._method_step();
	if (_32217_elem == nullptr) {
		return nullptr;
	}
	jule::Ptr<_1e38d4ec7_ArrTypeDecl> _32717_arrt = jule::new_struct<_1e38d4ec7_ArrTypeDecl>(new( std::nothrow ) _1e38d4ec7_ArrTypeDecl(_32217_elem,jule::Ptr<_1e38d4ec7_Expr>()));
	jule::Slice<_1e3bad8dd_Token> _33117_expr_tokens = (*this)._field_tokens.slice(0LL,_32013_expr_delta);
	std::tie(std::ignore,_33117_expr_tokens) = _1e4a02445_range_last(_33117_expr_tokens);
	_33117_expr_tokens=_33117_expr_tokens.slice(1LL,_33117_expr_tokens.len() - 1LL);
	_1e3bad8dd_Token _33417_token = _33117_expr_tokens[0LL];
	if (((_33117_expr_tokens.len() == 1LL) && (_33417_token._field_id == 7LLU)) && (_33417_token._field_kind == jule::Str("...", 3))) {
	} else {
		_32717_arrt->_field_size=(*this)._field_p->_method_build_expr(_33117_expr_tokens);
	}
	return jule::new_struct<_1e38d4ec7_TypeDecl>(new( std::nothrow ) _1e38d4ec7_TypeDecl(_33417_token,jule::Any(_32717_arrt)));
}



inline jule::Ptr<_1e38d4ec7_TypeDecl> _1e4a2bb9a_TypeBuilder::_method_build_map(jule::Int _34728_colon,jule::Slice<_1e3bad8dd_Token>& _34745_tokens) {
	_1e3bad8dd_Token _34817_colon_token = (*this)._field_tokens[_34728_colon];
	if ((_34728_colon == 0LL) || ((_34728_colon + 1LL) >= _34745_tokens.len())) {
		(*this)._method_push_err(_34817_colon_token,jule::Str("data-type missing", 17));
		return nullptr;
	}
	jule::Slice<_1e3bad8dd_Token> _35317_key_tokens = _34745_tokens.slice(0LL,_34728_colon);
	jule::Slice<_1e3bad8dd_Token> _35417_val_tokens = _34745_tokens.slice(_34728_colon + 1LL);
	jule::Ptr<_1e38d4ec7_MapTypeDecl> _35517_mapt = jule::new_struct<_1e38d4ec7_MapTypeDecl>(new( std::nothrow ) _1e38d4ec7_MapTypeDecl());
	jule::Int _35717_j = 0LL;
	jule::Ptr<_1e38d4ec7_TypeDecl> _35818_keyt;
	jule::Bool _35828_ok;
	std::tie(_35818_keyt,_35828_ok) = (*this)._field_p->_method_build_type(_35317_key_tokens,(&(_35717_j)),(*this)._field_err);
	if ((!(_35828_ok))) {
		return nullptr;
	} else if (_35717_j < _35317_key_tokens.len()) {
		(*this)._method_push_err(_35317_key_tokens[_35717_j],jule::Str("invalid syntax", 14));
	}
	_35517_mapt->_field_key=_35818_keyt;
	_35717_j=0LL;
	jule::Ptr<_1e38d4ec7_TypeDecl> _36718_valt;
	std::tie(_36718_valt,_35828_ok) = (*this)._field_p->_method_build_type(_35417_val_tokens,(&(_35717_j)),(*this)._field_err);
	if ((!(_35828_ok))) {
		return nullptr;
	} else if (_35717_j < _35417_val_tokens.len()) {
		(*this)._method_push_err(_35417_val_tokens[_35717_j],jule::Str("invalid syntax", 14));
	}
	_35517_mapt->_field_val=_36718_valt;
	return jule::new_struct<_1e38d4ec7_TypeDecl>(new( std::nothrow ) _1e38d4ec7_TypeDecl(_34817_colon_token,jule::Any(_35517_mapt)));
}



inline jule::Ptr<_1e38d4ec7_TypeDecl> _1e4a2bb9a_TypeBuilder::_method_build_enumerable(void) {
	_1e3bad8dd_Token _38217_token = (*this)._field_tokens[(*((*this)._field_i))];
	if (((((*((*this)._field_i)) + 2LL) >= (*this)._field_tokens.len()) || (_38217_token._field_id != 3LLU)) || (_38217_token._field_kind != jule::Str("[", 1))) {
		(*this)._method_push_err(_38217_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*this)._field_i)))++;
	_38217_token=(*this)._field_tokens[(*((*this)._field_i))];
	if ((_38217_token._field_id == 3LLU) && (_38217_token._field_kind == jule::Str("]", 1))) {
		return (*this)._method_build_slc();
	}
	((*((*this)._field_i)))--;
	jule::Slice<_1e3bad8dd_Token> _39618_map_tokens;
	jule::Int _39630_colon;
	std::tie(_39618_map_tokens,_39630_colon) = _1e4a2bb9a_split_map_range((*this)._field_tokens,(*((*this)._field_i)));
	((*((*this)._field_i)))++;
	if (_39630_colon == -1LL) {
		return (*this)._method_build_arr();
	}
	return (*this)._method_build_map(_39630_colon,_39618_map_tokens);
}



inline jule::Ptr<_1e38d4ec7_TypeDecl> _1e4a2bb9a_TypeBuilder::_method_step(void) {
	_1e3bad8dd_Token _40513_token = (*this)._field_tokens[(*((*this)._field_i))];
	{
		auto &_match_expr{ _40513_token._field_id };
		if (!((1LLU) == _match_expr)) { goto _case_end_5016107072; }
		_case_begin_5016107072:;
		{
			return (*this)._method_build_prim();
		}
		goto _match_end_5016106688;
		_case_end_5016107072:;
		if (!((2LLU) == _match_expr)) { goto _case_end_5016107168; }
		_case_begin_5016107168:;
		{
			return (*this)._method_build_ident();
		}
		goto _match_end_5016106688;
		_case_end_5016107168:;
		if (!((31LLU) == _match_expr)) { goto _case_end_5016109008; }
		_case_begin_5016109008:;
		{
			return (*this)._method_build_cpp_link();
		}
		goto _match_end_5016106688;
		_case_end_5016109008:;
		if (!((33LLU) == _match_expr)) { goto _case_end_5016109104; }
		_case_begin_5016109104:;
		{
			return (*this)._method_build_fn();
		}
		goto _match_end_5016106688;
		_case_end_5016109104:;
		if (!((7LLU) == _match_expr)) { goto _case_end_5016109200; }
		_case_begin_5016109200:;
		{
			return (*this)._method_build_op();
		}
		goto _match_end_5016106688;
		_case_end_5016109200:;
		if (!((3LLU) == _match_expr)) { goto _case_end_5016109296; }
		_case_begin_5016109296:;
		{
			return (*this)._method_build_enumerable();
		}
		goto _match_end_5016106688;
		_case_end_5016109296:;
		_case_begin_5016103648:;
		{
			((*((*this)._field_i)))++;
			(*this)._method_push_err(_40513_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
		goto _match_end_5016106688;
		_case_end_5016103648:;
		_match_end_5016106688:;
	}
}



inline std::tuple<jule::Ptr<_1e38d4ec7_TypeDecl>,jule::Bool> _1e4a2bb9a_TypeBuilder::_method_build(void) {
	jule::Bool _43444_ok = jule::Bool();
	jule::Ptr<_1e38d4ec7_TypeDecl> _43517_root = (*this)._method_step();
	if (_43517_root == nullptr) {
		_43444_ok = false;
		return std::make_tuple(_1e4a2bb9a_build_void_type(),_43444_ok);
	}
	_43444_ok = true;
	return std::make_tuple(_43517_root,_43444_ok);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4a2bb9a_TypeBuilder &_Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c8b9b83b_Const> _1c8b9b83b_Const::_static_method_new_i64(jule::I64 _1327_x) {
	return jule::new_struct<_1c8b9b83b_Const>(new( std::nothrow ) _1c8b9b83b_Const(jule::Any(_1327_x)));
}



inline jule::Ptr<_1c8b9b83b_Const> _1c8b9b83b_Const::_static_method_new_u64(jule::U64 _1527_x) {
	return jule::new_struct<_1c8b9b83b_Const>(new( std::nothrow ) _1c8b9b83b_Const(jule::Any(_1527_x)));
}



inline jule::Ptr<_1c8b9b83b_Const> _1c8b9b83b_Const::_static_method_new_bool(jule::Bool _1728_x) {
	return jule::new_struct<_1c8b9b83b_Const>(new( std::nothrow ) _1c8b9b83b_Const(jule::Any(_1728_x)));
}



inline jule::Ptr<_1c8b9b83b_Const> _1c8b9b83b_Const::_static_method_new_str(jule::Str _1927_x) {
	return jule::new_struct<_1c8b9b83b_Const>(new( std::nothrow ) _1c8b9b83b_Const(jule::Any(_1927_x)));
}



inline jule::Ptr<_1c8b9b83b_Const> _1c8b9b83b_Const::_static_method_new_f64(jule::F64 _2127_x) {
	return jule::new_struct<_1c8b9b83b_Const>(new( std::nothrow ) _1c8b9b83b_Const(jule::Any(_2127_x)));
}



inline jule::Ptr<_1c8b9b83b_Const> _1c8b9b83b_Const::_static_method_new_nil(void) {
	return jule::new_struct<_1c8b9b83b_Const>(new( std::nothrow ) _1c8b9b83b_Const(jule::Any(nullptr)));
}



inline jule::I64 _1c8b9b83b_Const::_method_read_i64(void) {
	if ((!((*this)._method_is_i64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::I64();
}



inline jule::U64 _1c8b9b83b_Const::_method_read_u64(void) {
	if ((!((*this)._method_is_u64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::U64();
}



inline jule::Bool _1c8b9b83b_Const::_method_read_bool(void) {
	if ((!((*this)._method_is_bool()))) {
		return false;
	}
	return (*this)._field_data.operator jule::Bool();
}



inline jule::Str _1c8b9b83b_Const::_method_read_str(void) {
	if ((!((*this)._method_is_str()))) {
		return jule::Str();
	}
	return (*this)._field_data.operator jule::Str();
}



inline jule::F64 _1c8b9b83b_Const::_method_read_f64(void) {
	if ((!((*this)._method_is_f64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::F64();
}



inline jule::I64 _1c8b9b83b_Const::_method_as_i64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_5016194112; }
		_case_begin_5016194112:;
		{
			return (*this)._field_data.operator jule::I64();
		}
		goto _match_end_5016192816;
		_case_end_5016194112:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_5016194448; }
		_case_begin_5016194448:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_5016192816;
		_case_end_5016194448:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_5016194544; }
		_case_begin_5016194544:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_5016192816;
		_case_end_5016194544:;
		_case_begin_5016192288:;
		{
			return 0LL;
		}
		goto _match_end_5016192816;
		_case_end_5016192288:;
		_match_end_5016192816:;
	}
}



inline jule::U64 _1c8b9b83b_Const::_method_as_u64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_5016199616; }
		_case_begin_5016199616:;
		{
			return (*this)._field_data.operator jule::U64();
		}
		goto _match_end_5016192960;
		_case_end_5016199616:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_5016199952; }
		_case_begin_5016199952:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_5016192960;
		_case_end_5016199952:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_5016200048; }
		_case_begin_5016200048:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_5016192960;
		_case_end_5016200048:;
		_case_begin_5016197728:;
		{
			return 0LL;
		}
		goto _match_end_5016192960;
		_case_end_5016197728:;
		_match_end_5016192960:;
	}
}



inline jule::F64 _1c8b9b83b_Const::_method_as_f64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_5016205856; }
		_case_begin_5016205856:;
		{
			return (*this)._field_data.operator jule::F64();
		}
		goto _match_end_5016204560;
		_case_end_5016205856:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_5016206192; }
		_case_begin_5016206192:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_5016204560;
		_case_end_5016206192:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_5016206288; }
		_case_begin_5016206288:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_5016204560;
		_case_end_5016206288:;
		_case_begin_5016204048:;
		{
			return 0LL;
		}
		goto _match_end_5016204560;
		_case_end_5016204048:;
		_match_end_5016204560:;
	}
}



inline void _1c8b9b83b_Const::_method_set_i64(jule::I64 _13930_x) {
	(*this)._field_data=jule::Any(_13930_x);
}



inline void _1c8b9b83b_Const::_method_set_u64(jule::U64 _14130_x) {
	(*this)._field_data=jule::Any(_14130_x);
}



inline void _1c8b9b83b_Const::_method_set_bool(jule::Bool _14331_x) {
	(*this)._field_data=jule::Any(_14331_x);
}



inline void _1c8b9b83b_Const::_method_set_str(jule::Str _14530_x) {
	(*this)._field_data=jule::Any(_14530_x);
}



inline void _1c8b9b83b_Const::_method_set_f64(jule::F64 _14730_x) {
	(*this)._field_data=jule::Any(_14730_x);
}



inline void _1c8b9b83b_Const::_method_set_nil(void) {
	(*this)._field_data=jule::Any(nullptr);
}



inline jule::Bool _1c8b9b83b_Const::_method_is_i64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_5016225840; }
		_case_begin_5016225840:;
		{
			return true;
		}
		goto _match_end_5016224320;
		_case_end_5016225840:;
		_case_begin_5016223840:;
		{
			return false;
		}
		goto _match_end_5016224320;
		_case_end_5016223840:;
		_match_end_5016224320:;
	}
}



inline jule::Bool _1c8b9b83b_Const::_method_is_u64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_5016228144; }
		_case_begin_5016228144:;
		{
			return true;
		}
		goto _match_end_5016226880;
		_case_end_5016228144:;
		_case_begin_5016226528:;
		{
			return false;
		}
		goto _match_end_5016226880;
		_case_end_5016226528:;
		_match_end_5016226880:;
	}
}



inline jule::Bool _1c8b9b83b_Const::_method_is_bool(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_5016230416; }
		_case_begin_5016230416:;
		{
			return true;
		}
		goto _match_end_5016229152;
		_case_end_5016230416:;
		_case_begin_5016228800:;
		{
			return false;
		}
		goto _match_end_5016229152;
		_case_end_5016228800:;
		_match_end_5016229152:;
	}
}



inline jule::Bool _1c8b9b83b_Const::_method_is_str(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_5016232688; }
		_case_begin_5016232688:;
		{
			return true;
		}
		goto _match_end_5016231424;
		_case_end_5016232688:;
		_case_begin_5016231072:;
		{
			return false;
		}
		goto _match_end_5016231424;
		_case_end_5016231072:;
		_match_end_5016231424:;
	}
}



inline jule::Bool _1c8b9b83b_Const::_method_is_f64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_5016234960; }
		_case_begin_5016234960:;
		{
			return true;
		}
		goto _match_end_5016233696;
		_case_end_5016234960:;
		_case_begin_5016233344:;
		{
			return false;
		}
		goto _match_end_5016233696;
		_case_end_5016233344:;
		_match_end_5016233696:;
	}
}



inline jule::Bool _1c8b9b83b_Const::_method_is_nil(void) {
	return (*this)._field_data == nullptr;
}



inline jule::Bool _1c8b9b83b_Const::_method_are_same_types(_1c8b9b83b_Const _19933_x) {
	{
		if (!(((*this)._method_is_i64() == _19933_x._method_is_i64()))) { goto _case_end_5016240672; }
		_case_begin_5016240672:;
		{
			return true;
		}
		goto _match_end_5016238816;
		_case_end_5016240672:;
		if (!(((*this)._method_is_u64() == _19933_x._method_is_u64()))) { goto _case_end_5016239280; }
		_case_begin_5016239280:;
		{
			return true;
		}
		goto _match_end_5016238816;
		_case_end_5016239280:;
		if (!(((*this)._method_is_f64() == _19933_x._method_is_f64()))) { goto _case_end_5016239376; }
		_case_begin_5016239376:;
		{
			return true;
		}
		goto _match_end_5016238816;
		_case_end_5016239376:;
		if (!(((*this)._method_is_bool() == _19933_x._method_is_bool()))) { goto _case_end_5016239472; }
		_case_begin_5016239472:;
		{
			return true;
		}
		goto _match_end_5016238816;
		_case_end_5016239472:;
		if (!(((*this)._method_is_str() == _19933_x._method_is_str()))) { goto _case_end_5016239568; }
		_case_begin_5016239568:;
		{
			return true;
		}
		goto _match_end_5016238816;
		_case_end_5016239568:;
		if (!(((*this)._method_is_nil() == _19933_x._method_is_nil()))) { goto _case_end_5016239968; }
		_case_begin_5016239968:;
		{
			return true;
		}
		goto _match_end_5016238816;
		_case_end_5016239968:;
		_case_begin_5016238992:;
		{
			return false;
		}
		goto _match_end_5016238816;
		_case_end_5016238992:;
		_match_end_5016238816:;
	}
}



inline jule::Bool _1c8b9b83b_Const::_method_and(_1c8b9b83b_Const _21722_x) {
	{
		if (!(((*this)._method_is_bool() && _21722_x._method_is_bool()))) { goto _case_end_5016251104; }
		_case_begin_5016251104:;
		{
			return (*this)._method_read_bool() && _21722_x._method_read_bool();
		}
		goto _match_end_5016249328;
		_case_end_5016251104:;
		_case_begin_5016249504:;
		{
			return false;
		}
		goto _match_end_5016249328;
		_case_end_5016249504:;
		_match_end_5016249328:;
	}
}



inline jule::Bool _1c8b9b83b_Const::_method_or(_1c8b9b83b_Const _22921_x) {
	{
		if (!(((*this)._method_is_bool() && _22921_x._method_is_bool()))) { goto _case_end_5016256208; }
		_case_begin_5016256208:;
		{
			return (*this)._method_read_bool() || _22921_x._method_read_bool();
		}
		goto _match_end_5016254432;
		_case_end_5016256208:;
		_case_begin_5016254608:;
		{
			return false;
		}
		goto _match_end_5016254432;
		_case_end_5016254608:;
		_match_end_5016254432:;
	}
}



inline jule::Bool _1c8b9b83b_Const::_method_eqs(_1c8b9b83b_Const _24122_x) {
	{
		if (!(((*this)._method_is_nil()))) { goto _case_end_5016261232; }
		_case_begin_5016261232:;
		{
			return _24122_x._method_is_nil();
		}
		goto _match_end_5016259376;
		_case_end_5016261232:;
		if (!(((*this)._method_is_bool()))) { goto _case_end_5016259840; }
		_case_begin_5016259840:;
		{
			return _24122_x._method_is_bool() && ((*this)._method_read_bool() == _24122_x._method_read_bool());
		}
		goto _match_end_5016259376;
		_case_end_5016259840:;
		if (!(((*this)._method_is_str()))) { goto _case_end_5016259936; }
		_case_begin_5016259936:;
		{
			return _24122_x._method_is_str() && ((*this)._method_read_str() == _24122_x._method_read_str());
		}
		goto _match_end_5016259376;
		_case_end_5016259936:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_5016260032; }
		_case_begin_5016260032:;
		{
			return (*this)._method_read_i64() == _24122_x._method_as_i64();
		}
		goto _match_end_5016259376;
		_case_end_5016260032:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5016260128; }
		_case_begin_5016260128:;
		{
			return (*this)._method_read_u64() == _24122_x._method_as_u64();
		}
		goto _match_end_5016259376;
		_case_end_5016260128:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_5016260528; }
		_case_begin_5016260528:;
		{
			return (*this)._method_read_f64() == _24122_x._method_as_f64();
		}
		goto _match_end_5016259376;
		_case_end_5016260528:;
		_case_begin_5016259552:;
		{
			return false;
		}
		goto _match_end_5016259376;
		_case_end_5016259552:;
		_match_end_5016259376:;
	}
}



inline jule::Bool _1c8b9b83b_Const::_method_lt(_1c8b9b83b_Const _27321_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_5016274640; }
		_case_begin_5016274640:;
		{
			return (*this)._method_read_i64() < _27321_x._method_as_i64();
		}
		goto _match_end_5016272832;
		_case_end_5016274640:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5016274736; }
		_case_begin_5016274736:;
		{
			return (*this)._method_read_u64() < _27321_x._method_as_u64();
		}
		goto _match_end_5016272832;
		_case_end_5016274736:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_5016273296; }
		_case_begin_5016273296:;
		{
			return (*this)._method_read_f64() < _27321_x._method_as_f64();
		}
		goto _match_end_5016272832;
		_case_end_5016273296:;
		_case_begin_5016273008:;
		{
			return false;
		}
		goto _match_end_5016272832;
		_case_end_5016273008:;
		_match_end_5016272832:;
	}
}



inline jule::Bool _1c8b9b83b_Const::_method_gt(_1c8b9b83b_Const _29621_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_5016282224; }
		_case_begin_5016282224:;
		{
			return (*this)._method_read_i64() > _29621_x._method_as_i64();
		}
		goto _match_end_5016280416;
		_case_end_5016282224:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5016282320; }
		_case_begin_5016282320:;
		{
			return (*this)._method_read_u64() > _29621_x._method_as_u64();
		}
		goto _match_end_5016280416;
		_case_end_5016282320:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_5016280880; }
		_case_begin_5016280880:;
		{
			return (*this)._method_read_f64() > _29621_x._method_as_f64();
		}
		goto _match_end_5016280416;
		_case_end_5016280880:;
		_case_begin_5016280592:;
		{
			return false;
		}
		goto _match_end_5016280416;
		_case_end_5016280592:;
		_match_end_5016280416:;
	}
}



inline jule::Bool _1c8b9b83b_Const::_method_add(_1c8b9b83b_Const _31826_x) {
	{
		if (!(((*this)._method_is_str()))) { goto _case_end_5016290144; }
		_case_begin_5016290144:;
		{
			if ((!(_31826_x._method_is_str()))) {
				return false;
			}
			(*this)._method_set_str((*this)._method_read_str() + _31826_x._method_read_str());
		}
		goto _match_end_5016288320;
		_case_end_5016290144:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_5016290240; }
		_case_begin_5016290240:;
		{
			(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_read_f64() + _31826_x._method_as_f64()));
		}
		goto _match_end_5016288320;
		_case_end_5016290240:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_5016288800; }
		_case_begin_5016288800:;
		{
			if (_31826_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() + _31826_x._method_read_f64()));
			} else {
				(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() + _31826_x._method_as_i64()));
			}
		}
		goto _match_end_5016288320;
		_case_end_5016288800:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5016288912; }
		_case_begin_5016288912:;
		{
			if (_31826_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() + _31826_x._method_read_f64()));
			} else {
				(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() + _31826_x._method_as_u64()));
			}
		}
		goto _match_end_5016288320;
		_case_end_5016288912:;
		_case_begin_5016288496:;
		{
			return false;
		}
		goto _match_end_5016288320;
		_case_end_5016288496:;
		_match_end_5016288320:;
	}
	return true;
}



inline jule::Bool _1c8b9b83b_Const::_method_sub(_1c8b9b83b_Const _35126_x) {
	{
		if (!(((*this)._method_is_f64()))) { goto _case_end_5016307776; }
		_case_begin_5016307776:;
		{
			(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_read_f64() - _35126_x._method_as_f64()));
		}
		goto _match_end_5016305968;
		_case_end_5016307776:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_5016307872; }
		_case_begin_5016307872:;
		{
			if (_35126_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() - _35126_x._method_read_f64()));
			} else {
				(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() - _35126_x._method_as_i64()));
			}
		}
		goto _match_end_5016305968;
		_case_end_5016307872:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5016306432; }
		_case_begin_5016306432:;
		{
			if (_35126_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() - _35126_x._method_read_f64()));
			} else {
				(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() - _35126_x._method_as_u64()));
			}
		}
		goto _match_end_5016305968;
		_case_end_5016306432:;
		_case_begin_5016306144:;
		{
			return false;
		}
		goto _match_end_5016305968;
		_case_end_5016306144:;
		_match_end_5016305968:;
	}
	return true;
}



inline jule::Bool _1c8b9b83b_Const::_method_mul(_1c8b9b83b_Const _37826_x) {
	{
		if (!(((*this)._method_is_f64()))) { goto _case_end_5016322608; }
		_case_begin_5016322608:;
		{
			(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_read_f64() * _37826_x._method_as_f64()));
		}
		goto _match_end_5016320800;
		_case_end_5016322608:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_5016322704; }
		_case_begin_5016322704:;
		{
			if (_37826_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() * _37826_x._method_read_f64()));
			} else {
				(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() * _37826_x._method_as_i64()));
			}
		}
		goto _match_end_5016320800;
		_case_end_5016322704:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5016321264; }
		_case_begin_5016321264:;
		{
			if (_37826_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() * _37826_x._method_read_f64()));
			} else {
				(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() * _37826_x._method_as_u64()));
			}
		}
		goto _match_end_5016320800;
		_case_end_5016321264:;
		_case_begin_5016320976:;
		{
			return false;
		}
		goto _match_end_5016320800;
		_case_end_5016320976:;
		_match_end_5016320800:;
	}
	return true;
}



inline jule::Bool _1c8b9b83b_Const::_method_div(_1c8b9b83b_Const _40926_x) {
	{
		if (!(((*this)._method_is_f64()))) { goto _case_end_5016337056; }
		_case_begin_5016337056:;
		{
			jule::F64 _41217_l = _40926_x._method_as_f64();
			if (_41217_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_read_f64(),_41217_l)));
		}
		goto _match_end_5016335248;
		_case_end_5016337056:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_5016337152; }
		_case_begin_5016337152:;
		{
			jule::F64 _41917_l = _40926_x._method_as_f64();
			if (_41917_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_41917_l)));
		}
		goto _match_end_5016335248;
		_case_end_5016337152:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5016335712; }
		_case_begin_5016335712:;
		{
			jule::F64 _42617_l = _40926_x._method_as_f64();
			if (_42617_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_42617_l)));
		}
		goto _match_end_5016335248;
		_case_end_5016335712:;
		_case_begin_5016335424:;
		{
			return false;
		}
		goto _match_end_5016335248;
		_case_end_5016335424:;
		_match_end_5016335248:;
	}
	return true;
}



inline jule::Bool _1c8b9b83b_Const::_method_mod(_1c8b9b83b_Const _44126_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_5016351424; }
		_case_begin_5016351424:;
		{
			jule::I64 _44417_l = _44126_x._method_as_i64();
			if (_44417_l == 0LL) {
				return false;
			}
			(*this)._method_set_i64(static_cast<jule::I64>(jule::mod((*this)._method_read_i64(),_44417_l)));
		}
		goto _match_end_5016349632;
		_case_end_5016351424:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5016351520; }
		_case_begin_5016351520:;
		{
			jule::U64 _45117_l = _44126_x._method_as_u64();
			if (_45117_l == 0LL) {
				return false;
			}
			(*this)._method_set_u64(static_cast<jule::U64>(jule::mod((*this)._method_read_u64(),_45117_l)));
		}
		goto _match_end_5016349632;
		_case_end_5016351520:;
		_case_begin_5016349808:;
		{
			return false;
		}
		goto _match_end_5016349632;
		_case_end_5016349808:;
		_match_end_5016349632:;
	}
	return true;
}



inline jule::Bool _1c8b9b83b_Const::_method_bitwise_and(_1c8b9b83b_Const _46534_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_5016362160; }
		_case_begin_5016362160:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() & _46534_x._method_as_i64()));
		}
		goto _match_end_5016360368;
		_case_end_5016362160:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5016362256; }
		_case_begin_5016362256:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() & _46534_x._method_as_u64()));
		}
		goto _match_end_5016360368;
		_case_end_5016362256:;
		_case_begin_5016360544:;
		{
			return false;
		}
		goto _match_end_5016360368;
		_case_end_5016360544:;
		_match_end_5016360368:;
	}
	return true;
}



inline jule::Bool _1c8b9b83b_Const::_method_bitwise_or(_1c8b9b83b_Const _48133_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_5016369824; }
		_case_begin_5016369824:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() | _48133_x._method_as_i64()));
		}
		goto _match_end_5016368032;
		_case_end_5016369824:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5016369920; }
		_case_begin_5016369920:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() | _48133_x._method_as_u64()));
		}
		goto _match_end_5016368032;
		_case_end_5016369920:;
		_case_begin_5016368208:;
		{
			return false;
		}
		goto _match_end_5016368032;
		_case_end_5016368208:;
		_match_end_5016368032:;
	}
	return true;
}



inline jule::Bool _1c8b9b83b_Const::_method_xor(_1c8b9b83b_Const _49726_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_5016377360; }
		_case_begin_5016377360:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() ^ _49726_x._method_as_i64()));
		}
		goto _match_end_5016375568;
		_case_end_5016377360:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5016377456; }
		_case_begin_5016377456:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() ^ _49726_x._method_as_u64()));
		}
		goto _match_end_5016375568;
		_case_end_5016377456:;
		_case_begin_5016375744:;
		{
			return false;
		}
		goto _match_end_5016375568;
		_case_end_5016375744:;
		_match_end_5016375568:;
	}
	return true;
}



inline jule::Bool _1c8b9b83b_Const::_method_lshift(_1c8b9b83b_Const _51329_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_5016385024; }
		_case_begin_5016385024:;
		{
			jule::I64 _51617_l = (*this)._method_as_i64();
			if (_51617_l < 0LL) {
				jule::U64 _51821_r = _51329_x._method_as_u64();
				(*this)._method_set_i64(static_cast<jule::I64>(_51617_l << _51821_r));
			} else {
				_1c8b9b83b_lshift_unsig((*this),_51329_x);
			}
		}
		goto _match_end_5016383232;
		_case_end_5016385024:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5016385120; }
		_case_begin_5016385120:;
		{
			_1c8b9b83b_lshift_unsig((*this),_51329_x);
		}
		goto _match_end_5016383232;
		_case_end_5016385120:;
		_case_begin_5016383408:;
		{
			return false;
		}
		goto _match_end_5016383232;
		_case_end_5016383408:;
		_match_end_5016383232:;
	}
	return true;
}



inline jule::Bool _1c8b9b83b_Const::_method_rshift(_1c8b9b83b_Const _53629_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4729100960; }
		_case_begin_4729100960:;
		{
			jule::I64 _53917_l = (*this)._method_as_i64();
			if (_53917_l < 0LL) {
				jule::U64 _54121_r = _53629_x._method_as_u64();
				(*this)._method_set_i64(static_cast<jule::I64>(_53917_l >> _54121_r));
			} else {
				_1c8b9b83b_rshift_unsig((*this),_53629_x);
			}
		}
		goto _match_end_4729099168;
		_case_end_4729100960:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4729101056; }
		_case_begin_4729101056:;
		{
			_1c8b9b83b_rshift_unsig((*this),_53629_x);
		}
		goto _match_end_4729099168;
		_case_end_4729101056:;
		_case_begin_4729099344:;
		{
			return false;
		}
		goto _match_end_4729099168;
		_case_end_4729099344:;
		_match_end_4729099168:;
	}
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c8b9b83b_Const &_Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e398ee72_FieldIns &_Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e398ee72_StructIns::_method_to_str(void) {
	jule::Str _22117_kind = jule::Str();
	_22117_kind+=(*this)._field_decl->_field_ident;
	if ((*this)._field_generics.len() > 0LL) {
		_22117_kind+=jule::Str("[", 1);
		{
			auto &expr = (*this)._field_generics;
			auto it = expr.begin();
			_iter_begin_4731242480:;
			if (it != expr.end()) {
				jule::Ptr<_1e6420856_TypeKind> &_1e398ee72_g = *it;
				{
					_22117_kind+=_1e398ee72_g->_method_to_str();
					_22117_kind+=jule::Str(",", 1);
				}
				_iter_next_4731242480:;
				++it;
				goto _iter_begin_4731242480;
			}
			_iter_end_4731242480:;
		}
		_22117_kind=_22117_kind.slice(0LL,_22117_kind.len() - 1LL);
		_22117_kind+=jule::Str("]", 1);
	}
	return _22117_kind;
}



inline jule::Bool _1e398ee72_StructIns::_method_equals(jule::Ptr<_1e6420856_TypeKind> _23622_other) {
	jule::Ptr<_1e398ee72_StructIns> _23713_s = _23622_other->_method_strct();
	if (_23713_s == nullptr) {
		return false;
	}
	if (this->self->_field_decl != _23713_s->_field_decl) {
		return false;
	}
	if (this->self->_field_generics.len() != _23713_s->_field_generics.len()) {
		return false;
	}
	jule::Int _25017_i = 0LL;
	for (; _25017_i < this->self->_field_generics.len(); (_25017_i)++) {
		{
			if ((!(this->self->_field_generics[_25017_i]->_method_equals(_23713_s->_field_generics[_25017_i])))) {
				return false;
			}
		}
	_iter_next_4731252592:;
	}
	_iter_end_4731252592:;
	return true;
}



inline jule::Bool _1e398ee72_StructIns::_method_same(jule::Ptr<_1e398ee72_StructIns> _26423_s) {
	if (((*this)._field_decl != _26423_s->_field_decl) || (_26423_s->_field_generics.len() != (*this)._field_generics.len())) {
		return false;
	}
	{
		auto &expr = (*this)._field_generics;
		auto it = expr.begin();
		_iter_begin_4731260256:;
		if (it != expr.end()) {
			jule::Int _1e398ee72_i = it - expr.begin();
			jule::Ptr<_1e6420856_TypeKind> &_1e398ee72_g = *it;
			{
				if ((!(_1e398ee72_g->_method_equals(_26423_s->_field_generics[_1e398ee72_i])))) {
					return false;
				}
			}
			_iter_next_4731260256:;
			++it;
			_1e398ee72_i++;
			goto _iter_begin_4731260256;
		}
		_iter_end_4731260256:;
	}
	return true;
}



inline jule::Ptr<_1e4b15a20_Fn> _1e398ee72_StructIns::_method_find_method(jule::Str _27934_ident,jule::Bool _27946_statically) {
	{
		auto &expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_4731267872:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_Fn> _1e398ee72_f = *it;
			{
				if ((_1e398ee72_f->_field_statically == _27946_statically) && (_1e398ee72_f->_field_ident == _27934_ident)) {
					return _1e398ee72_f;
				}
			}
			_iter_next_4731267872:;
			++it;
			goto _iter_begin_4731267872;
		}
		_iter_end_4731267872:;
	}
	return nullptr;
}



inline jule::Ptr<_1e398ee72_FieldIns> _1e398ee72_StructIns::_method_find_field(jule::Str _29033_ident) {
	{
		auto &expr = (*this)._field_fields;
		auto it = expr.begin();
		_iter_begin_4731272656:;
		if (it != expr.end()) {
			jule::Ptr<_1e398ee72_FieldIns> _1e398ee72_f = *it;
			{
				if (_1e398ee72_f->_field_decl->_field_ident == _29033_ident) {
					return _1e398ee72_f;
				}
			}
			_iter_next_4731272656:;
			++it;
			goto _iter_begin_4731272656;
		}
		_iter_end_4731272656:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e398ee72_StructIns &_Src) {
	_Stream << "StructIns{";
	_Stream << "checked:" << _Src._field_checked << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "references:" << _Src._field_references;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4b15a20_RetType &_Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e4b15a20_ParamIns::_method_to_str(void) {
	jule::Str _17917_s = jule::Str();
	if ((*this)._field_decl->_field_mutable) {
		_17917_s+=jule::Str("mut ", 4);
	}
	if ((*this)._field_decl->_field_reference) {
		_17917_s+=jule::Str("&_:", 3);
	}
	if ((*this)._field_decl->_method_is_self()) {
		if ((*this)._field_decl->_method_is_ref()) {
			_17917_s+=jule::Str("&", 1);
		}
		_17917_s+=jule::Str("self", 4);
		return _17917_s;
	}
	if ((*this)._field_decl->_field_variadic) {
		_17917_s+=jule::Str("...", 3);
	}
	if ((*this)._field_kind != nullptr) {
		_17917_s+=(*this)._field_kind->_method_to_str();
	}
	return _17917_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4b15a20_ParamIns &_Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e4b15a20_FnIns::_method_to_str(void) {
	
	return (*this)._method_get_kind_str(false);
}



inline jule::Bool _1e4b15a20_FnIns::_method_equals(jule::Ptr<_1e6420856_TypeKind> _23422_other) {
	jule::Ptr<_1e4b15a20_FnIns> _23513_f = _23422_other->_method_fnc();
	if (_23513_f == nullptr) {
		return false;
	}
	if (this->self->_field_decl->_field_statically != _23513_f->_field_decl->_field_statically) {
		return false;
	}
	if (this->self->_field_decl->_field_unsafety != _23513_f->_field_decl->_field_unsafety) {
		return false;
	}
	if (this->self->_field_generics.len() != _23513_f->_field_generics.len()) {
		return false;
	}
	if (this->self->_field_decl->_method_is_void() != _23513_f->_field_decl->_method_is_void()) {
		return false;
	}
	jule::Int _25617_i = 0LL;
	for (; _25617_i < this->self->_field_generics.len(); (_25617_i)++) {
		{
			if ((!(this->self->_field_generics[_25617_i]->_method_equals(_23513_f->_field_generics[_25617_i])))) {
				return false;
			}
		}
	_iter_next_4731353968:;
	}
	_iter_end_4731353968:;
	jule::Fn<jule::Bool(jule::Ptr<_1e4b15a20_ParamIns>,jule::Ptr<_1e4b15a20_ParamIns>)> _26313_check_params = jule::Fn<jule::Bool(jule::Ptr<_1e4b15a20_ParamIns>,jule::Ptr<_1e4b15a20_ParamIns>)>([=](jule::Ptr<_1e4b15a20_ParamIns> _26331_p1,jule::Ptr<_1e4b15a20_ParamIns> _26346_p2) mutable -> jule::Bool {
		if (_26331_p1->_field_decl->_field_mutable != _26346_p2->_field_decl->_field_mutable) {
			return false;
		}
		if (_26331_p1->_field_decl->_method_is_self()) {
			if ((!(_26346_p2->_field_decl->_method_is_self()))) {
				return false;
			}
			if (_26331_p1->_field_decl->_method_is_ref() != _26346_p2->_field_decl->_method_is_ref()) {
				return false;
			}
			return true;
		}
		if (_26331_p1->_field_decl->_field_reference != _26346_p2->_field_decl->_field_reference) {
			return false;
		}
		if (_26331_p1->_field_decl->_field_variadic != _26346_p2->_field_decl->_field_variadic) {
			return false;
		}
		return _26331_p1->_field_kind->_method_equals(_26346_p2->_field_kind);
	});
	_25617_i=0LL;
	for (; _25617_i < this->self->_field_params.len(); (_25617_i)++) {
		{
			if ((!(_26313_check_params(this->self->_field_params[_25617_i],_23513_f->_field_params[_25617_i])))) {
				return false;
			}
		}
	_iter_next_4731370608:;
	}
	_iter_end_4731370608:;
	if ((!(this->self->_field_decl->_method_is_void()))) {
		if ((!(this->self->_field_result->_method_equals(_23513_f->_field_result)))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _1e4b15a20_FnIns::_method_is_builtin(void) {
	return (*this)._field_caller != nullptr;
}



inline jule::Bool _1e4b15a20_FnIns::_method_is_anon(void) {
	return (*this)._field_anon || (((*this)._field_decl != nullptr) && (*this)._field_decl->_method_is_anon());
}



inline jule::Bool _1e4b15a20_FnIns::_method_same(jule::Ptr<_1e4b15a20_FnIns> _31723_f) {
	if (((*this)._field_decl != _31723_f->_field_decl) || (_31723_f->_field_generics.len() != (*this)._field_generics.len())) {
		return false;
	}
	{
		auto &expr = (*this)._field_generics;
		auto it = expr.begin();
		_iter_begin_4731383968:;
		if (it != expr.end()) {
			jule::Int _1e4b15a20_i = it - expr.begin();
			jule::Ptr<_1e6420856_TypeKind> &_1e4b15a20_g = *it;
			{
				if ((!(_1e4b15a20_g->_method_equals(_31723_f->_field_generics[_1e4b15a20_i])))) {
					return false;
				}
			}
			_iter_next_4731383968:;
			++it;
			_1e4b15a20_i++;
			goto _iter_begin_4731383968;
		}
		_iter_end_4731383968:;
	}
	return true;
}



inline jule::Str _1e4b15a20_FnIns::_method_get_kind_str(jule::Bool _33331_ident) {
	jule::Str _33417_s = jule::Str();
	if ((*this)._field_decl->_field_statically) {
		_33417_s+=jule::Str("static ", 7);
	}
	if ((*this)._field_decl->_field_unsafety) {
		_33417_s+=jule::Str("unsafe ", 7);
	}
	_33417_s+=jule::Str("fn", 2);
	if (_33331_ident && ((*this)._field_decl != nullptr)) {
		_33417_s+=jule::Str(" ", 1) + (*this)._field_decl->_field_ident;
	}
	if ((*this)._field_generics.len() > 0LL) {
		_33417_s+=jule::Str("[", 1);
		{
			auto &expr = (*this)._field_generics;
			auto it = expr.begin();
			_iter_begin_4731395344:;
			if (it != expr.end()) {
				jule::Int _1e4b15a20_i = it - expr.begin();
				jule::Ptr<_1e6420856_TypeKind> &_1e4b15a20_t = *it;
				{
					_33417_s+=_1e4b15a20_t->_method_to_str();
					if ((_1e4b15a20_i + 1LL) < (*this)._field_generics.len()) {
						_33417_s+=jule::Str(",", 1);
					}
				}
				_iter_next_4731395344:;
				++it;
				_1e4b15a20_i++;
				goto _iter_begin_4731395344;
			}
			_iter_end_4731395344:;
		}
		_33417_s+=jule::Str("]", 1);
	} else if ((*this)._field_decl->_field_generics.len() > 0LL) {
		_33417_s+=jule::Str("[", 1);
		{
			auto &expr = (*this)._field_decl->_field_generics;
			auto it = expr.begin();
			_iter_begin_4731400032:;
			if (it != expr.end()) {
				jule::Int _1e4b15a20_i = it - expr.begin();
				jule::Ptr<_1e38d4ec7_GenericDecl> &_1e4b15a20_g = *it;
				{
					_33417_s+=_1e4b15a20_g->_field_ident;
					if ((_1e4b15a20_i + 1LL) < (*this)._field_decl->_field_generics.len()) {
						_33417_s+=jule::Str(",", 1);
					}
				}
				_iter_next_4731400032:;
				++it;
				_1e4b15a20_i++;
				goto _iter_begin_4731400032;
			}
			_iter_end_4731400032:;
		}
		_33417_s+=jule::Str("]", 1);
	}
	_33417_s+=jule::Str("(", 1);
	jule::I64 _37113_n = (*this)._field_params.len();
	if (_37113_n > 0LL) {
		{
			auto &expr = (*this)._field_params;
			auto it = expr.begin();
			_iter_begin_4731406288:;
			if (it != expr.end()) {
				jule::Ptr<_1e4b15a20_ParamIns> &_1e4b15a20_p = *it;
				{
					_33417_s+=_1e4b15a20_p->_method_to_str();
					_33417_s+=jule::Str(",", 1);
				}
				_iter_next_4731406288:;
				++it;
				goto _iter_begin_4731406288;
			}
			_iter_end_4731406288:;
		}
		_33417_s=_33417_s.slice(0LL,_33417_s.len() - 1LL);
	}
	_33417_s+=jule::Str(")", 1);
	if ((!((*this)._field_decl->_method_is_void()))) {
		_33417_s+=jule::Str(":", 1);
		_33417_s+=(*this)._field_result->_method_to_str();
	}
	return _33417_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4b15a20_FnIns &_Src) {
	_Stream << "FnIns{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "caller:" << _Src._field_caller << ", ";
	_Stream << "reloaded:" << _Src._field_reloaded << ", ";
	_Stream << "anon:" << _Src._field_anon;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e4cc167b_ReferenceStack> _1e4cc167b_ReferenceStack::_static_method_new(void) {
	return jule::new_struct<_1e4cc167b_ReferenceStack>(new( std::nothrow ) _1e4cc167b_ReferenceStack());
}



inline jule::Int _1e4cc167b_ReferenceStack::_method_len(void) {
	return static_cast<jule::I64>((*this)._field_buffer.len());
}



inline jule::Any _1e4cc167b_ReferenceStack::_method_at(jule::Int _5825_i) {
	return (*this)._field_buffer[_5825_i];
}



inline void _1e4cc167b_ReferenceStack::_method_push(jule::Any _6331_ref) {
	(*this)._field_buffer = jule::alloc_for_append((*this)._field_buffer,1);(*this)._field_buffer.push(_6331_ref);
}



inline jule::Bool _1e4cc167b_ReferenceStack::_method_exist_0(jule::Ptr<_1e50b0492_Var> _6827_t) {
	{
		auto &expr = (*this)._field_buffer;
		auto it = expr.begin();
		_iter_begin_4734850192:;
		if (it != expr.end()) {
			jule::Any &_1e4cc167b_ref = *it;
			{
				if (_1e4cc167b_ref == _6827_t) {
					return true;
				}
			}
			_iter_next_4734850192:;
			++it;
			goto _iter_begin_4734850192;
		}
		_iter_end_4734850192:;
	}
	return false;
}

inline jule::Bool _1e4cc167b_ReferenceStack::_method_exist_1(jule::Ptr<_1e4b15a20_FnIns> _6827_t) {
	{
		auto &expr = (*this)._field_buffer;
		auto it = expr.begin();
		_iter_begin_4734858704:;
		if (it != expr.end()) {
			jule::Any &_1e4cc167b_ref = *it;
			{
				if (_1e4cc167b_ref == _6827_t) {
					return true;
				}
			}
			_iter_next_4734858704:;
			++it;
			goto _iter_begin_4734858704;
		}
		_iter_end_4734858704:;
	}
	return false;
}

inline jule::Bool _1e4cc167b_ReferenceStack::_method_exist_2(jule::Ptr<_1e398ee72_StructIns> _6827_t) {
	{
		auto &expr = (*this)._field_buffer;
		auto it = expr.begin();
		_iter_begin_4734893072:;
		if (it != expr.end()) {
			jule::Any &_1e4cc167b_ref = *it;
			{
				if (_1e4cc167b_ref == _6827_t) {
					return true;
				}
			}
			_iter_next_4734893072:;
			++it;
			goto _iter_begin_4734893072;
		}
		_iter_end_4734893072:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4cc167b_ReferenceStack &_Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e4cc167b_SymbolBuilder> _1e4cc167b_SymbolBuilder::_method_get_root(void) {
	jule::Ptr<_1e4cc167b_SymbolBuilder> _31117_root = this->self;
	while (_31117_root->_field_owner != nullptr) {
		{
			_31117_root=_31117_root->_field_owner;
		}
	_iter_next_4731420768:;
	}
	_iter_end_4731420768:;
	return _31117_root;
}



inline void _1e4cc167b_SymbolBuilder::_method_push_err(_1e3bad8dd_Token& _31828_token,jule::Str _31842_fmt,jule::Slice<jule::Any> _31855_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.push(_1e5054722_compiler_err(_31828_token,true,_31842_fmt,_31855_args));
}



inline void _1e4cc167b_SymbolBuilder::_method_push_err_text(_1e3bad8dd_Token& _32233_token,jule::Str _32247_fmt,jule::Slice<jule::Any> _32260_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.push(_1e5054722_compiler_err(_32233_token,false,_32247_fmt,_32260_args));
}



inline void _1e4cc167b_SymbolBuilder::_method_push_suggestion(jule::Str _32734_fmt,jule::Slice<jule::Any> _32747_args) {
	{
		_1e5054722_push_suggestion((&((*this)._field_errors[(*this)._field_errors.len() - 1LL])),_32734_fmt,_32747_args);
	}
}



inline jule::Bool _1e4cc167b_SymbolBuilder::_method_check_cpp_use_decl_path(jule::Ptr<_1e38d4ec7_UseDecl>& _33143_decl) {
	jule::Bool _33161_ok = jule::Bool();
	if (_1e243c019_is_std_header_path(_33143_decl->_field_link_path)) {
		_33161_ok = true;
		return _33161_ok;
	}
	jule::Str _33613_ext = _1e2517b61_ext(_33143_decl->_field_link_path);
	if ((!(_1e243c019_is_valid_header_ext(_33613_ext))) && (!(_1e243c019_is_valid_cpp_ext(_33613_ext)))) {
		(*this)._method_push_err(_33143_decl->_field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>({jule::Any(_33613_ext)}));
		_33161_ok = false;
		return _33161_ok;
	}
	jule::Ptr<_1e4798395_Status> _34214_info;
	jule::Int _34220_err;
	std::tie(_34214_info,_34220_err) = _1e4798395_Status::_static_method_of(_33143_decl->_field_link_path);
	if ((_34220_err != 0LLU) || _34214_info->_method_is_dir()) {
		(*this)._method_push_err(_33143_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_33143_decl->_field_link_path)}));
		_33161_ok = false;
		return _33161_ok;
	}
	_33161_ok = true;
	return _33161_ok;
}



inline jule::Ptr<_1e4ee54e8_ImportInfo> _1e4cc167b_SymbolBuilder::_method_build_cpp_header_import(jule::Ptr<_1e38d4ec7_UseDecl>& _35247_decl) {
	jule::Str _35317_path = _35247_decl->_field_link_path;
	if ((!(_1e243c019_is_std_header_path(_35247_decl->_field_link_path)))) {
		jule::Bool _35621_ok = (*this)._method_check_cpp_use_decl_path(_35247_decl);
		if ((!(_35621_ok))) {
			return nullptr;
		}
		std::tie(_35317_path,_35621_ok) = _1e2517b61_abs(_35247_decl->_field_link_path);
		if ((!(_35621_ok))) {
			(*this)._method_push_err(_35247_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_35247_decl->_field_link_path)}));
		}
	}
	return jule::new_struct<_1e4ee54e8_ImportInfo>(new( std::nothrow ) _1e4ee54e8_ImportInfo(_35247_decl->_field_token,_35317_path,_35247_decl->_field_link_path,jule::Str(),jule::Str(),jule::Bool(),true,false,jule::Bool(),jule::Slice<_1e3bad8dd_Token>(),nullptr));
}



inline jule::Ptr<_1e4ee54e8_ImportInfo> _1e4cc167b_SymbolBuilder::_method_build_std_import(jule::Ptr<_1e38d4ec7_UseDecl>& _37940_decl) {
	jule::Str _38017_path = _37940_decl->_field_link_path.slice(jule::Str("std::", 5).len());
	_38017_path=_38017_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_38017_path=_1e2517b61_join(jule::Slice<jule::Str>({_1e24c38db_PATH_STDLIB,_38017_path}));
	jule::Bool _38320_ok;
	std::tie(_38017_path,_38320_ok) = _1e2517b61_abs(_38017_path);
	if ((!(_38320_ok))) {
		(*this)._method_push_err(_37940_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_37940_decl->_field_link_path)}));
		return nullptr;
	}
	jule::Ptr<_1e4798395_Status> _38914_info;
	jule::Int _38920_err;
	std::tie(_38914_info,_38920_err) = _1e4798395_Status::_static_method_of(_38017_path);
	if ((_38920_err != 0LLU) || (!(_38914_info->_method_is_dir()))) {
		(*this)._method_push_err(_37940_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_37940_decl->_field_link_path)}));
		return nullptr;
	}
	jule::Str _39713_ident = _37940_decl->_field_link_path.slice(_37940_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL);
	return jule::new_struct<_1e4ee54e8_ImportInfo>(new( std::nothrow ) _1e4ee54e8_ImportInfo(_37940_decl->_field_token,_38017_path,_37940_decl->_field_link_path,_39713_ident,_37940_decl->_field_alias,jule::Bool(),false,true,_37940_decl->_field_full,jule::Slice<_1e3bad8dd_Token>(),jule::new_struct<_1e4ee54e8_Package>(new( std::nothrow ) _1e4ee54e8_Package(nullptr))));
}



inline jule::Ptr<_1e4ee54e8_ImportInfo> _1e4cc167b_SymbolBuilder::_method_build_ident_import(jule::Ptr<_1e38d4ec7_UseDecl>& _41443_decl) {
	jule::Str _41517_path = _41443_decl->_field_link_path;
	_41517_path=_41517_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_41517_path=_1e2517b61_join(jule::Slice<jule::Str>({this->self->_method_get_root()->_field_ast->_field_file->_method_dir(),_41517_path}));
	jule::Bool _41920_ok;
	std::tie(_41517_path,_41920_ok) = _1e2517b61_abs(_41517_path);
	if ((!(_41920_ok))) {
		this->self->_method_push_err(_41443_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_41443_decl->_field_link_path)}));
		return nullptr;
	}
	jule::Ptr<_1e4798395_Status> _42514_info;
	jule::Int _42520_err;
	std::tie(_42514_info,_42520_err) = _1e4798395_Status::_static_method_of(_41517_path);
	if ((_42520_err != 0LLU) || (!(_42514_info->_method_is_dir()))) {
		this->self->_method_push_err(_41443_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_41443_decl->_field_link_path)}));
		return nullptr;
	}
	jule::Str _43313_ident = _41443_decl->_field_link_path.slice(_41443_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL);
	return jule::new_struct<_1e4ee54e8_ImportInfo>(new( std::nothrow ) _1e4ee54e8_ImportInfo(_41443_decl->_field_token,_41517_path,_41443_decl->_field_link_path,_43313_ident,_41443_decl->_field_alias,jule::Bool(),false,false,_41443_decl->_field_full,jule::Slice<_1e3bad8dd_Token>(),jule::new_struct<_1e4ee54e8_Package>(new( std::nothrow ) _1e4ee54e8_Package(nullptr))));
}



inline jule::Ptr<_1e4ee54e8_ImportInfo> _1e4cc167b_SymbolBuilder::_method_build_import(jule::Ptr<_1e38d4ec7_UseDecl>& _45037_decl) {
	{
		if (!((_45037_decl->_field_cpp_linked))) { goto _case_end_4731504512; }
		_case_begin_4731504512:;
		{
			return this->self->_method_build_cpp_header_import(_45037_decl);
		}
		goto _match_end_4731502992;
		_case_end_4731504512:;
		if (!((_45037_decl->_field_std))) { goto _case_end_4731504144; }
		_case_begin_4731504144:;
		{
			return this->self->_method_build_std_import(_45037_decl);
		}
		goto _match_end_4731502992;
		_case_end_4731504144:;
		_case_begin_4731503168:;
		{
			return this->self->_method_build_ident_import(_45037_decl);
		}
		goto _match_end_4731502992;
		_case_end_4731503168:;
		_match_end_4731502992:;
	}
}



inline jule::Bool _1e4cc167b_SymbolBuilder::_method_check_duplicate_use_decl(jule::Ptr<_1e4ee54e8_ImportInfo>& _45844_pkg) {
	jule::Bool _45864_ok = jule::Bool();
	jule::Ptr<_1e4ee54e8_ImportInfo> _46013_lpkg = (*this)._field_table->_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1e4ee54e8_ImportInfo>)>([=](jule::Ptr<_1e4ee54e8_ImportInfo> _46049_spkg) mutable -> jule::Bool {
		return _45844_pkg->_field_path == _46049_spkg->_field_path;
	}));
	if (_46013_lpkg == nullptr) {
		_45864_ok = true;
		return _45864_ok;
	}
	(*this)._method_push_err(_45844_pkg->_field_token,jule::Str("duplicate use declaration: @", 28),jule::Slice<jule::Any>({jule::Any(_45844_pkg->_field_link_path)}));
	(*this)._method_push_suggestion(jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_45864_ok = false;
	return _45864_ok;
}



inline void _1e4cc167b_SymbolBuilder::_method_impl_import_selections(jule::Ptr<_1e4ee54e8_ImportInfo>& _47246_imp,jule::Ptr<_1e38d4ec7_UseDecl>& _47269_decl) {
	{
		auto &expr = _47269_decl->_field_selected;
		auto it = expr.begin();
		_iter_begin_4731523328:;
		if (it != expr.end()) {
			_1e3bad8dd_Token _1e4cc167b_ident = *it;
			{
				if (_47246_imp->_method_exist_ident(_1e4cc167b_ident._field_kind)) {
					(*this)._method_push_err(_1e4cc167b_ident,jule::Str("duplicated identifier selection: @", 34),jule::Slice<jule::Any>({jule::Any(_1e4cc167b_ident._field_kind)}));
					(*this)._method_push_suggestion(jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
					goto _iter_next_4731523328;
				}
				_47246_imp->_field_selected = jule::alloc_for_append(_47246_imp->_field_selected,1);_47246_imp->_field_selected.push(_1e4cc167b_ident);
			}
			_iter_next_4731523328:;
			++it;
			goto _iter_begin_4731523328;
		}
		_iter_end_4731523328:;
	}
}



inline jule::Str _1e4cc167b_SymbolBuilder::_method_get_as_link_path(jule::Str _48440_path) {
	if (_48440_path.has_prefix(_1e24c38db_PATH_STDLIB)) {
		_48440_path=_48440_path.slice(_1e24c38db_PATH_STDLIB.len());
		return jule::Str("std", 3) + _48440_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
	}
	jule::Str _49014_root;
	std::tie(_49014_root,std::ignore) = _1e2517b61_abs(this->self->_method_get_root()->_field_ast->_field_file->_method_dir());
	_48440_path=_48440_path.slice(_49014_root.len());
	if (_48440_path[0LL] == 47LL) {
		_48440_path=_48440_path.slice(1LL);
	}
	return _48440_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _1e4cc167b_SymbolBuilder::_method_push_cycle_error(jule::Ptr<_1e4cc167b_SymbolBuilder>& _49837_sb,jule::Str _49857_path,jule::Str& _49873_message) {
	
	jule::Str _50113_refers_to = _1e24777a2_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_49837_sb->_field_table->_field_file->_method_dir())),jule::Any(this->self->_method_get_as_link_path(_49857_path))}));
	_49873_message=((_1e4cc167b_str_repeat(jule::Str(" ", 1),4LL) + _50113_refers_to) + jule::Str("\n", 1)) + _49873_message;
}



inline void _1e4cc167b_SymbolBuilder::_method_push_cross_cycle_error(jule::Ptr<_1e4cc167b_SymbolBuilder>& _50843_target,jule::Ptr<_1e4ee54e8_ImportInfo>& _50868_imp,_1e3bad8dd_Token& _50887_error_token) {
	jule::Str _50917_message = jule::Str();
	this->self->_method_push_cycle_error(this->self,_50868_imp->_field_path,_50917_message);
	jule::Ptr<_1e4cc167b_SymbolBuilder> _51317_owner = this->self->_field_owner;
	jule::Ptr<_1e4cc167b_SymbolBuilder> _51417_old = this->self;
	while (_51317_owner->_field_owner != nullptr) {
		{
			this->self->_method_push_cycle_error(_51417_old->_field_owner,_51417_old->_field_table->_field_file->_method_dir(),_50917_message);
			if (_51317_owner->_field_owner == _50843_target) {
				this->self->_method_push_cycle_error(_50843_target,_51317_owner->_field_table->_field_file->_method_dir(),_50917_message);
				goto _iter_end_4731557696;
			}
			_51417_old=_51317_owner;
			_51317_owner=_51317_owner->_field_owner;
		}
	_iter_next_4731557696:;
	}
	_iter_end_4731557696:;
	this->self->_method_push_err(_50887_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>({jule::Any(_50917_message)}));
}



inline jule::Bool _1e4cc167b_SymbolBuilder::_method_check_import_cycles(jule::Ptr<_1e4ee54e8_ImportInfo> _53139_imp,jule::Ptr<_1e38d4ec7_UseDecl>& _53158_decl) {
	if (_53139_imp->_field_path == this->self->_field_table->_field_file->_method_dir()) {
		this->self->_method_push_err(_53158_decl->_field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_53139_imp->_field_path))}));
		return false;
	}
	if (this->self->_field_owner == nullptr) {
		return true;
	}
	if (this->self->_field_owner->_field_table->_field_file->_method_dir() == _53139_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(this->self->_field_owner,_53139_imp,_53158_decl->_field_token);
		return false;
	}
	jule::Ptr<_1e4cc167b_SymbolBuilder> _54617_owner = this->self->_field_owner;
	_julec_label_iter:;
	if (_54617_owner->_field_table->_field_file->_method_dir() == _53139_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(_54617_owner,_53139_imp,_53158_decl->_field_token);
		return false;
	}
	if (_54617_owner->_field_owner != nullptr) {
		_54617_owner=_54617_owner->_field_owner;
		goto _julec_label_iter;
	}
	return true;
}



inline jule::Bool _1e4cc167b_SymbolBuilder::_method_import_package(jule::Ptr<_1e4ee54e8_ImportInfo>& _56139_imp,jule::Ptr<_1e38d4ec7_UseDecl>& _56162_decl) {
	jule::Bool _56180_ok = jule::Bool();
	if (_56139_imp->_field_cpp_linked) {
		_56180_ok = true;
		return _56180_ok;
	}
	jule::Ptr<_1e4ee54e8_ImportInfo> _56617_port = this->self->_field_importer.get()._method_get_import(_56139_imp->_field_path);
	if (_56617_port != nullptr) {
		_56139_imp->_field_package=_56617_port->_field_package;
		_56139_imp->_field_duplicate=true;
	} else {
		if ((!(this->self->_method_check_import_cycles(_56139_imp,_56162_decl)))) {
			_56180_ok = false;
			return _56180_ok;
		}
		jule::Slice<jule::Ptr<_1e38d45c0_Ast>> _57522_asts;
		jule::Slice<_1e24777a2_Log> _57528_errors;
		std::tie(_57522_asts,_57528_errors) = this->self->_field_importer.get()._method_import_package(_56139_imp->_field_path);
		if (_57528_errors.len() > 0LL) {
			this->self->_field_errors=jule::append(this->self->_field_errors,_57528_errors);
			_56180_ok = false;
			return _56180_ok;
		}
		{
			auto &expr = _57522_asts;
			auto it = expr.begin();
			_iter_begin_4731596720:;
			if (it != expr.end()) {
				jule::Ptr<_1e38d45c0_Ast> _1e4cc167b_ast = *it;
				{
					jule::Ptr<_1e5291035_SymbolTable> _58226_table;
					jule::Slice<_1e24777a2_Log> _58233_errors;
					std::tie(_58226_table,_58233_errors) = _1c8aaab68_build_symbols(_1e4cc167b_ast,this->self->_field_importer,this->self);
					if (_58233_errors.len() > 0LL) {
						this->self->_field_errors=jule::append(this->self->_field_errors,_58233_errors);
						this->self->_method_push_err_text(_56139_imp->_field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_56139_imp->_field_link_path)}));
						_56180_ok = false;
						return _56180_ok;
					}
					_56139_imp->_field_package->_field_files = jule::alloc_for_append(_56139_imp->_field_package->_field_files,1);_56139_imp->_field_package->_field_files.push(_58226_table);
				}
				_iter_next_4731596720:;
				++it;
				goto _iter_begin_4731596720;
			}
			_iter_end_4731596720:;
		}
	}
	this->self->_method_impl_import_selections(_56139_imp,_56162_decl);
	_56180_ok = true;
	return _56180_ok;
}



inline jule::Ptr<_1e4ee54e8_ImportInfo> _1e4cc167b_SymbolBuilder::_method_import_use_decl(jule::Ptr<_1e38d4ec7_UseDecl>& _60040_decl) {
	jule::Ptr<_1e4ee54e8_ImportInfo> _60117_imp = this->self->_method_build_import(_60040_decl);
	if (_60117_imp == nullptr) {
		return nullptr;
	}
	jule::Bool _60717_ok = this->self->_method_check_duplicate_use_decl(_60117_imp);
	if ((!(_60717_ok))) {
		return nullptr;
	}
	if ((_60117_imp->_field_alias.len() != 0LL) && (_60040_decl->_field_selected.len() > 0LL)) {
		this->self->_method_push_err(_60040_decl->_field_token,jule::Str("use aliases cannot useable for selected package defines", 55),jule::Slice<jule::Any>());
	}
	_60717_ok=this->self->_method_import_package(_60117_imp,_60040_decl);
	this->self->_field_table->_field_imports = jule::alloc_for_append(this->self->_field_table->_field_imports,1);this->self->_field_table->_field_imports.push(_60117_imp);
	if (_60717_ok) {
		this->self->_field_importer.get()._method_imported(_60117_imp);
		return _60117_imp;
	}
	return nullptr;
}



inline void _1e4cc167b_SymbolBuilder::_method_import_use_decls(void) {
	{
		auto &expr = this->self->_field_ast->_field_use_decls;
		auto it = expr.begin();
		_iter_begin_4731620400:;
		if (it != expr.end()) {
			jule::Ptr<_1e38d4ec7_UseDecl> _1e4cc167b_decl = *it;
			{
				this->self->_method_import_use_decl(_1e4cc167b_decl);
				if (this->self->_field_errors.len() > 0LL) {
					goto _iter_end_4731620400;
				}
			}
			_iter_next_4731620400:;
			++it;
			goto _iter_begin_4731620400;
		}
		_iter_end_4731620400:;
	}
}



inline void _1e4cc167b_SymbolBuilder::_method_append_decl(_1e38d4ec7_Node& _63635_decl) {
	{
		auto &_match_expr{ _63635_decl._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_TypeAliasDecl>>())) { goto _case_end_4731625632; }
		_case_begin_4731625632:;
		{
			jule::Ptr<_1e6420856_TypeAlias> _63921_ta = _1e4cc167b_build_type_alias(_63635_decl._field_data.operator jule::Ptr<_1e38d4ec7_TypeAliasDecl>());
			(*this)._field_table->_field_type_aliases = jule::alloc_for_append((*this)._field_table->_field_type_aliases,1);(*this)._field_table->_field_type_aliases.push(_63921_ta);
		}
		goto _match_end_4731625184;
		_case_end_4731625632:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_StructDecl>>())) { goto _case_end_4731625728; }
		_case_begin_4731625728:;
		{
			jule::Ptr<_1e398ee72_Struct> _64321_srct = _1e4cc167b_build_struct(_63635_decl._field_data.operator jule::Ptr<_1e38d4ec7_StructDecl>());
			(*this)._field_table->_field_structs = jule::alloc_for_append((*this)._field_table->_field_structs,1);(*this)._field_table->_field_structs.push(_64321_srct);
		}
		goto _match_end_4731625184;
		_case_end_4731625728:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_FnDecl>>())) { goto _case_end_4731625824; }
		_case_begin_4731625824:;
		{
			jule::Ptr<_1e4b15a20_Fn> _64721_f = _1e4cc167b_build_fn(_63635_decl._field_data.operator jule::Ptr<_1e38d4ec7_FnDecl>());
			(*this)._field_table->_field_funcs = jule::alloc_for_append((*this)._field_table->_field_funcs,1);(*this)._field_table->_field_funcs.push(_64721_f);
		}
		goto _match_end_4731625184;
		_case_end_4731625824:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_TraitDecl>>())) { goto _case_end_4731625920; }
		_case_begin_4731625920:;
		{
			jule::Ptr<_1e4d61232_Trait> _65121_t = _1e4cc167b_build_trait(_63635_decl._field_data.operator jule::Ptr<_1e38d4ec7_TraitDecl>());
			(*this)._field_table->_field_traits = jule::alloc_for_append((*this)._field_table->_field_traits,1);(*this)._field_table->_field_traits.push(_65121_t);
		}
		goto _match_end_4731625184;
		_case_end_4731625920:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_VarDecl>>())) { goto _case_end_4731627232; }
		_case_begin_4731627232:;
		{
			jule::Ptr<_1e50b0492_Var> _65521_v = _1e4cc167b_build_var(_63635_decl._field_data.operator jule::Ptr<_1e38d4ec7_VarDecl>());
			(*this)._field_table->_field_vars = jule::alloc_for_append((*this)._field_table->_field_vars,1);(*this)._field_table->_field_vars.push(_65521_v);
		}
		goto _match_end_4731625184;
		_case_end_4731627232:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_EnumDecl>>())) { goto _case_end_4731627344; }
		_case_begin_4731627344:;
		{
			jule::Ptr<_1e4d62387_Enum> _65921_e = _1e4cc167b_build_enum(_63635_decl._field_data.operator jule::Ptr<_1e38d4ec7_EnumDecl>());
			(*this)._field_table->_field_enums = jule::alloc_for_append((*this)._field_table->_field_enums,1);(*this)._field_table->_field_enums.push(_65921_e);
		}
		goto _match_end_4731625184;
		_case_end_4731627344:;
		_case_begin_4731624640:;
		{
			(*this)._method_push_err(_63635_decl._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		goto _match_end_4731625184;
		_case_end_4731624640:;
		_match_end_4731625184:;
	}
}



inline void _1e4cc167b_SymbolBuilder::_method_append_decls(void) {
	{
		auto &expr = (*this)._field_ast->_field_decls;
		auto it = expr.begin();
		_iter_begin_4731647328:;
		if (it != expr.end()) {
			_1e38d4ec7_Node _1e4cc167b_decl = *it;
			{
				(*this)._method_append_decl(_1e4cc167b_decl);
			}
			_iter_next_4731647328:;
			++it;
			goto _iter_begin_4731647328;
		}
		_iter_end_4731647328:;
	}
}



inline void _1e4cc167b_SymbolBuilder::_method_append_impls(void) {
	(*this)._field_table->_field_impls=jule::Slice<jule::Ptr<_1e39e721b_Impl>>::alloc(0LL,static_cast<jule::I64>((*this)._field_ast->_field_impls.len()));
	{
		auto &expr = (*this)._field_ast->_field_impls;
		auto it = expr.begin();
		_iter_begin_4731652064:;
		if (it != expr.end()) {
			jule::Ptr<_1e38d4ec7_Impl> _1e4cc167b_decl = *it;
			{
				(*this)._field_table->_field_impls = jule::alloc_for_append((*this)._field_table->_field_impls,1);(*this)._field_table->_field_impls.push(_1e4cc167b_build_impl(_1e4cc167b_decl));
			}
			_iter_next_4731652064:;
			++it;
			goto _iter_begin_4731652064;
		}
		_iter_end_4731652064:;
	}
}



inline void _1e4cc167b_SymbolBuilder::_method_push_directive_pass(jule::Ptr<_1e38d4ec7_Directive>& _68043_d) {
	if (_68043_d->_field_args.len() == 0LL) {
		(*this)._method_push_err(_68043_d->_field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;
	} else if (_68043_d->_field_args.len() > 1LL) {
		_1e3bad8dd_Token _68517_arg = _68043_d->_field_args[1LL];
		(*this)._method_push_err(_68517_arg,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	_1e3bad8dd_Token _68913_arg = _68043_d->_field_args[0LL];
	if (_68913_arg._field_id != 6LLU) {
		(*this)._method_push_err(_68913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_68913_arg._field_kind[0LL] != '\"') {
		(*this)._method_push_err(_68913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	(*this)._field_table->_field_passes = jule::alloc_for_append((*this)._field_table->_field_passes,1);(*this)._field_table->_field_passes.push(_1e4cc167b_Pass(_68043_d->_field_tag,_68913_arg._field_kind.slice(1LL,_68913_arg._field_kind.len() - 1LL)));
}



inline void _1e4cc167b_SymbolBuilder::_method_append_top_directives(void) {
	{
		auto &expr = (*this)._field_ast->_field_top_directives;
		auto it = expr.begin();
		_iter_begin_4731670624:;
		if (it != expr.end()) {
			jule::Ptr<_1e38d4ec7_Directive> _1e4cc167b_d = *it;
			{
				{
					auto &_match_expr{ _1e4cc167b_d->_field_tag._field_kind };
					if (!((jule::Str("pass", 4)) == _match_expr)) { goto _case_end_4731676080; }
					_case_begin_4731676080:;
					{
						(*this)._method_push_directive_pass(_1e4cc167b_d);
					}
					goto _match_end_4731675968;
					_case_end_4731676080:;
					_match_end_4731675968:;
				}
			}
			_iter_next_4731670624:;
			++it;
			goto _iter_begin_4731670624;
		}
		_iter_end_4731670624:;
	}
}



inline void _1e4cc167b_SymbolBuilder::_method_build(void) {
	this->self->_field_table=jule::new_struct<_1e5291035_SymbolTable>(new( std::nothrow ) _1e5291035_SymbolTable(this->self->_field_ast->_field_file,jule::Slice<_1e4cc167b_Pass>(),jule::Slice<jule::Ptr<_1e4ee54e8_ImportInfo>>(),jule::Slice<jule::Ptr<_1e50b0492_Var>>(),jule::Slice<jule::Ptr<_1e6420856_TypeAlias>>(),jule::Slice<jule::Ptr<_1e398ee72_Struct>>(),jule::Slice<jule::Ptr<_1e4b15a20_Fn>>(),jule::Slice<jule::Ptr<_1e4d61232_Trait>>(),jule::Slice<jule::Ptr<_1e4d62387_Enum>>(),jule::Slice<jule::Ptr<_1e39e721b_Impl>>()));
	this->self->_method_append_top_directives();
	this->self->_method_import_use_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_impls();
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4cc167b_SymbolBuilder &_Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d6ee22_Scope &_Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d6ee22_If &_Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d6ee22_Else &_Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d6ee22_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d6ee22_InfIter &_Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e4d6ee22_WhileIter::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d6ee22_WhileIter &_Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d6ee22_RangeIter &_Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d6ee22_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d6ee22_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d6ee22_Label &_Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d6ee22_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d6ee22_Postfix &_Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d6ee22_Assign &_Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d6ee22_MultiAssign &_Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e4d6ee22_Match::_method_is_generic_type_match(void) {
	return ((*this)._field_type_match && ((*this)._field_expr != nullptr)) && (*this)._field_expr->_field_kind->_field_generic;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d6ee22_Match &_Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e4d6ee22_Case::_method_is_default(void) {
	return (*this)._field_exprs == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d6ee22_Case &_Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d6ee22_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d6ee22_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d6ee22_Recover &_Src) {
	_Stream << "Recover{";
	_Stream << "handler:" << _Src._field_handler << ", ";
	_Stream << "handler_expr:" << _Src._field_handler_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "scope_owner:" << _Src._field_scope_owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d6ee22_ScopeGoto &_Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e4ee54e8_ImportInfo> _1e4d6ee22_ScopeChecker::_method_find_package(jule::Str _42235_ident) {
	return (*this)._field_s->_method_find_package(_42235_ident);
}



inline jule::Ptr<_1e4ee54e8_ImportInfo> _1e4d6ee22_ScopeChecker::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1e4ee54e8_ImportInfo>)> _43237_selector) {
	return (*this)._field_s->_method_select_package(_43237_selector);
}



inline jule::Ptr<_1e50b0492_Var> _1e4d6ee22_ScopeChecker::_method_find_var(jule::Str _44331_ident,jule::Bool _44343_cpp_linked) {
	
	jule::Ptr<_1e50b0492_Var> _44617_v = (*this)._field_table->_method___find_var(_44331_ident,_44343_cpp_linked,true);
	if (_44617_v != nullptr) {
		return _44617_v;
	}
	jule::Ptr<_1e4d6ee22_ScopeChecker> _45117_parent = (*this)._field_parent;
	while (_45117_parent != nullptr) {
		{
			_44617_v=_45117_parent->_field_table->_method___find_var(_44331_ident,_44343_cpp_linked,true);
			if (_44617_v != nullptr) {
				return _44617_v;
			}
			_45117_parent=_45117_parent->_field_parent;
		}
	_iter_next_4731738288:;
	}
	_iter_end_4731738288:;
	return (*this)._field_s->_method_find_var(_44331_ident,_44343_cpp_linked);
}



inline jule::Ptr<_1e6420856_TypeAlias> _1e4d6ee22_ScopeChecker::_method_find_type_alias(jule::Str _47038_ident,jule::Bool _47050_cpp_linked) {
	
	jule::Ptr<_1e6420856_TypeAlias> _47317_ta = (*this)._field_table->_method___find_type_alias(_47038_ident,_47050_cpp_linked,true);
	if (_47317_ta != nullptr) {
		return _47317_ta;
	}
	jule::Ptr<_1e4d6ee22_ScopeChecker> _47817_parent = (*this)._field_parent;
	while (_47817_parent != nullptr) {
		{
			_47317_ta=_47817_parent->_field_table->_method___find_type_alias(_47038_ident,_47050_cpp_linked,true);
			if (_47317_ta != nullptr) {
				return _47317_ta;
			}
			_47817_parent=_47817_parent->_field_parent;
		}
	_iter_next_4731751248:;
	}
	_iter_end_4731751248:;
	return (*this)._field_s->_method_find_type_alias(_47038_ident,_47050_cpp_linked);
}



inline jule::Ptr<_1e398ee72_Struct> _1e4d6ee22_ScopeChecker::_method_find_struct(jule::Str _49534_ident,jule::Bool _49546_cpp_linked) {
	return (*this)._field_s->_method_find_struct(_49534_ident,_49546_cpp_linked);
}



inline jule::Ptr<_1e4b15a20_Fn> _1e4d6ee22_ScopeChecker::_method_find_fn(jule::Str _50430_ident,jule::Bool _50442_cpp_linked) {
	return (*this)._field_s->_method_find_fn(_50430_ident,_50442_cpp_linked);
}



inline jule::Ptr<_1e4d61232_Trait> _1e4d6ee22_ScopeChecker::_method_find_trait(jule::Str _51333_ident) {
	return (*this)._field_s->_method_find_trait(_51333_ident);
}



inline jule::Ptr<_1e4d62387_Enum> _1e4d6ee22_ScopeChecker::_method_find_enum(jule::Str _52232_ident) {
	return (*this)._field_s->_method_find_enum(_52232_ident);
}



inline jule::Bool _1e4d6ee22_ScopeChecker::_method_is_unsafe(void) {
	jule::Ptr<_1e4d6ee22_ScopeChecker> _53017_scope = this->self;
	_julec_label_iter:;
	if (_53017_scope->_field_scope->_field_unsafety) {
		return true;
	}
	if (_53017_scope->_field_parent != nullptr) {
		_53017_scope=_53017_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _1e4d6ee22_ScopeChecker::_method_is_root(void) {
	return ((*this)._field_parent == nullptr) || ((*this)._field_owner != nullptr);
}



inline jule::Ptr<_1e4d6ee22_ScopeChecker> _1e4d6ee22_ScopeChecker::_method_get_root(void) {
	jule::Ptr<_1e4d6ee22_ScopeChecker> _55217_root = this->self;
	while ((_55217_root->_field_parent != nullptr) && (_55217_root->_field_owner == nullptr)) {
		{
			_55217_root=_55217_root->_field_parent;
		}
	_iter_next_4731784752:;
	}
	_iter_end_4731784752:;
	return _55217_root;
}



inline jule::Ptr<_1e4d6ee22_Label> _1e4d6ee22_ScopeChecker::_method_find_label(jule::Str _56229_ident) {
	{
		auto &expr = (*this)._field_scope->_field_stmts;
		auto it = expr.begin();
		_iter_begin_4731789696:;
		if (it != expr.end()) {
			jule::Any _1e4d6ee22_st = *it;
			{
				{
					auto &_match_expr{ _1e4d6ee22_st };
					if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_Label>>())) { goto _case_end_4731790912; }
					_case_begin_4731790912:;
					{
						jule::Ptr<_1e4d6ee22_Label> _56625_label = _1e4d6ee22_st.operator jule::Ptr<_1e4d6ee22_Label>();
						if (_56625_label->_field_ident == _56229_ident) {
							return _56625_label;
						}
					}
					goto _match_end_4731791376;
					_case_end_4731790912:;
					_match_end_4731791376:;
				}
			}
			_iter_next_4731789696:;
			++it;
			goto _iter_begin_4731789696;
		}
		_iter_end_4731789696:;
	}
	return nullptr;
}



inline jule::Ptr<_1e4d6ee22_ScopeLabel> _1e4d6ee22_ScopeChecker::_method_find_label_scope(jule::Str _57836_ident) {
	jule::Ptr<_1e4d6ee22_ScopeLabel> _57917_label = this->self->_method_find_label_all(_57836_ident);
	if ((_57917_label != nullptr) && (_57917_label->_field_scope == this->self)) {
		return _57917_label;
	}
	return nullptr;
}



inline jule::Ptr<_1e4d6ee22_ScopeLabel> _1e4d6ee22_ScopeChecker::_method_find_label_all(jule::Str _59033_ident) {
	{
		auto &expr = (*((*this)._field_labels));
		auto it = expr.begin();
		_iter_begin_4731799616:;
		if (it != expr.end()) {
			jule::Ptr<_1e4d6ee22_ScopeLabel> _1e4d6ee22_lbl = *it;
			{
				if (_1e4d6ee22_lbl->_field_label->_field_ident == _59033_ident) {
					return _1e4d6ee22_lbl;
				}
			}
			_iter_next_4731799616:;
			++it;
			goto _iter_begin_4731799616;
		}
		_iter_end_4731799616:;
	}
	return nullptr;
}



inline jule::Bool _1e4d6ee22_ScopeChecker::_method_is_duplicated_ident(jule::Uintptr _60238_itself,jule::Str _60255_ident) {
	jule::Ptr<_1e50b0492_Var> _60313_v = (*this)._method_find_var(_60255_ident,false);
	if ((_60313_v != nullptr) && (static_cast<jule::Uintptr>(_60313_v) != _60238_itself)) {
		if (_60313_v->_field_scope == nullptr) {
			return false;
		}
		return (_60313_v->_field_scope == (*this)._field_scope) || (!((*this)._field_s->_method_is_flag(1LL)));
	}
	jule::Ptr<_1e6420856_TypeAlias> _61113_ta = (*this)._method_find_type_alias(_60255_ident,false);
	if ((_61113_ta != nullptr) && (static_cast<jule::Uintptr>(_61113_ta) != _60238_itself)) {
		if (_61113_ta->_field_scope == nullptr) {
			return false;
		}
		return (_61113_ta->_field_scope == (*this)._field_tree) || (!((*this)._field_s->_method_is_flag(1LL)));
	}
	return false;
}



inline void _1e4d6ee22_ScopeChecker::_method_check_var_decl(jule::Ptr<_1e38d4ec7_VarDecl> _62238_decl) {
	jule::Ptr<_1e50b0492_Var> _62317_v = _1e4cc167b_build_var(_62238_decl);
	_62317_v->_field_scope=this->self->_field_scope;
	__JULE_DEFER({
		this->self->_field_table->_field_vars = jule::alloc_for_append(this->self->_field_table->_field_vars,1);this->self->_field_table->_field_vars.push(_62317_v);
		this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_62317_v));
	});
	if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_62317_v),_62317_v->_field_ident)) {
		this->self->_field_s->_method_push_err(_62317_v->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_62317_v->_field_ident)}));
		this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	this->self->_field_s->_method_check_var_decl(_62317_v,this->self);
	if ((!(_62317_v->_method_is_type_inferred())) && ((_62317_v->_field_kind == nullptr) || (_62317_v->_field_kind->_field_kind == nullptr))) {
		return;
	}
	this->self->_field_s->_method_check_type_var(_62317_v,this->self);
}



inline void _1e4d6ee22_ScopeChecker::_method_check_type_alias_decl(jule::Ptr<_1e38d4ec7_TypeAliasDecl> _64445_decl) {
	jule::Ptr<_1e6420856_TypeAlias> _64517_ta = _1e4cc167b_build_type_alias(_64445_decl);
	if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_64517_ta),_64517_ta->_field_ident)) {
		this->self->_field_s->_method_push_err(_64517_ta->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_64517_ta->_field_ident)}));
		this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	this->self->_field_s->_method_check_type_alias_decl(_64517_ta,this->self);
	this->self->_field_table->_field_type_aliases = jule::alloc_for_append(this->self->_field_table->_field_type_aliases,1);this->self->_field_table->_field_type_aliases.push(_64517_ta);
}



inline jule::Ptr<_1e4d6ee22_Scope> _1e4d6ee22_ScopeChecker::_method_get_child(void) {
	return jule::new_struct<_1e4d6ee22_Scope>(new( std::nothrow ) _1e4d6ee22_Scope((*this)._field_scope,jule::Bool(),jule::Bool(),jule::Slice<jule::Any>()));
}



inline void _1e4d6ee22_ScopeChecker::_method_check_child_ssc(jule::Ptr<_1e38d4ec7_ScopeTree>& _66140_tree,jule::Ptr<_1e4d6ee22_Scope>& _66163_s,jule::Ptr<_1e4d6ee22_ScopeChecker>& _66179_ssc) {
	_66179_ssc->_field_parent=this->self;
	_66179_ssc->_method_check(_66140_tree,_66163_s);
}



inline jule::Ptr<_1e4d6ee22_Scope> _1e4d6ee22_ScopeChecker::_method_check_child_sc(jule::Ptr<_1e38d4ec7_ScopeTree>& _66639_tree,jule::Ptr<_1e4d6ee22_ScopeChecker>& _66662_ssc) {
	jule::Ptr<_1e4d6ee22_Scope> _66717_s = this->self->_method_get_child();
	this->self->_method_check_child_ssc(_66639_tree,_66717_s,_66662_ssc);
	return _66717_s;
}



inline jule::Ptr<_1e4d6ee22_Scope> _1e4d6ee22_ScopeChecker::_method_check_child(jule::Ptr<_1e38d4ec7_ScopeTree>& _67236_tree) {
	jule::Ptr<_1e4d6ee22_ScopeChecker> _67317_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_child_sc(_67236_tree,_67317_ssc);
}



inline void _1e4d6ee22_ScopeChecker::_method_check_anon_scope(jule::Ptr<_1e38d4ec7_ScopeTree> _67740_tree) {
	jule::Ptr<_1e4d6ee22_Scope> _67817_s = this->self->_method_check_child(_67740_tree);
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_67817_s));
}



inline jule::Bool _1e4d6ee22_ScopeChecker::_method_try_call_recover(jule::Ptr<_1e50ac4b1_Data>& _68241_d) {
	{
		auto &_match_expr{ _68241_d->_field_model };
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_Recover>>())) { goto _case_end_4731872432; }
		goto _match_end_4731870912;
		_case_end_4731872432:;
		_case_begin_4731870368:;
		{
			return false;
		}
		goto _match_end_4731870912;
		_case_end_4731870368:;
		_match_end_4731870912:;
	}
	jule::Ptr<_1e4d6ee22_Recover> _68817_rec = _68241_d->_field_model.operator jule::Ptr<_1e4d6ee22_Recover>();
	_68817_rec->_field_handler=_68241_d->_field_kind->_method_fnc();
	_68817_rec->_field_scope=jule::new_struct<_1e4d6ee22_Scope>(new( std::nothrow ) _1e4d6ee22_Scope());
	_68817_rec->_field_scope_owner=this->self->_method_get_root()->_field_owner;
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_68817_rec));
	this->self->_field_tree->_field_stmts=this->self->_field_tree->_field_stmts.slice(this->self->_field_i + 1LL);
	this->self->_field_scope=_68817_rec->_field_scope;
	this->self->_method_check_tree();
	return true;
}



inline void _1e4d6ee22_ScopeChecker::_method_check_expr(jule::Ptr<_1e38d4ec7_Expr> _70134_expr) {
	jule::Ptr<_1e50ac4b1_Data> _70217_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_70134_expr);
	if (_70217_d == nullptr) {
		return;
	}
	if (_70134_expr->_method_is_fn_call()) {
		jule::Bool _70817_ok = this->self->_method_try_call_recover(_70217_d);
		if (_70817_ok) {
			return;
		}
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_70217_d));
}



inline jule::Ptr<_1e4d6ee22_If> _1e4d6ee22_ScopeChecker::_method_check_if(jule::Ptr<_1e38d4ec7_If> _71732_i) {
	jule::Ptr<_1e4d6ee22_Scope> _71817_s = this->self->_method_check_child(_71732_i->_field_scope);
	jule::Ptr<_1e50ac4b1_Data> _72017_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_71732_i->_field_expr);
	if (_72017_d == nullptr) {
		return nullptr;
	}
	jule::Ptr<_1e6420856_Prim> _72517_prim = _72017_d->_field_kind->_method_prim();
	if ((_72517_prim == nullptr) || (!(_72517_prim->_method_is_bool()))) {
		this->self->_field_s->_method_push_err(_71732_i->_field_expr->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_1e4d6ee22_If>(new( std::nothrow ) _1e4d6ee22_If(_72017_d->_field_model,_71817_s));
}



inline jule::Ptr<_1e4d6ee22_Else> _1e4d6ee22_ScopeChecker::_method_check_else(jule::Ptr<_1e38d4ec7_Else> _73734_e) {
	return jule::new_struct<_1e4d6ee22_Else>(new( std::nothrow ) _1e4d6ee22_Else(this->self->_method_check_child(_73734_e->_field_scope)));
}



inline void _1e4d6ee22_ScopeChecker::_method_check_conditional(jule::Ptr<_1e38d4ec7_Conditional> _74341_conditional) {
	jule::Ptr<_1e4d6ee22_Conditional> _74417_c = jule::new_struct<_1e4d6ee22_Conditional>(new( std::nothrow ) _1e4d6ee22_Conditional());
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_74417_c));
	_74417_c->_field_elifs=jule::Slice<jule::Ptr<_1e4d6ee22_If>>::alloc(0LL,static_cast<jule::I64>(_74341_conditional->_field_tail.len() + 1LL));
	_74417_c->_field_elifs = jule::alloc_for_append(_74417_c->_field_elifs,1);_74417_c->_field_elifs.push(this->self->_method_check_if(_74341_conditional->_field_head));
	{
		auto &expr = _74341_conditional->_field_tail;
		auto it = expr.begin();
		_iter_begin_4731909072:;
		if (it != expr.end()) {
			jule::Ptr<_1e38d4ec7_If> _1e4d6ee22_elif = *it;
			{
				_74417_c->_field_elifs = jule::alloc_for_append(_74417_c->_field_elifs,1);_74417_c->_field_elifs.push(this->self->_method_check_if(_1e4d6ee22_elif));
			}
			_iter_next_4731909072:;
			++it;
			goto _iter_begin_4731909072;
		}
		_iter_end_4731909072:;
	}
	if (_74341_conditional->_field_default != nullptr) {
		_74417_c->_field_default=this->self->_method_check_else(_74341_conditional->_field_default);
	}
}



inline jule::Ptr<_1e4d6ee22_Scope> _1e4d6ee22_ScopeChecker::_method_check_iter_scope_sc(jule::Uintptr _75939_it,jule::Ptr<_1e38d4ec7_ScopeTree> _75956_tree,jule::Ptr<_1e4d6ee22_ScopeChecker> _75978_ssc) {
	_75978_ssc->_field_it=_75939_it;
	return this->self->_method_check_child_sc(_75956_tree,_75978_ssc);
}



inline jule::Ptr<_1e4d6ee22_Scope> _1e4d6ee22_ScopeChecker::_method_check_iter_scope(jule::Uintptr _76436_it,jule::Ptr<_1e38d4ec7_ScopeTree>& _76454_tree) {
	jule::Ptr<_1e4d6ee22_ScopeChecker> _76517_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_iter_scope_sc(_76436_it,_76454_tree,_76517_ssc);
}



inline void _1e4d6ee22_ScopeChecker::_method_check_inf_iter(jule::Ptr<_1e38d4ec7_Iter>& _76939_it) {
	jule::Ptr<_1e4d6ee22_InfIter> _77017_kind = jule::new_struct<_1e4d6ee22_InfIter>(new( std::nothrow ) _1e4d6ee22_InfIter());
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_77017_kind));
	_77017_kind->_field_scope=this->self->_method_check_iter_scope(static_cast<jule::Uintptr>(_77017_kind),_76939_it->_field_scope);
}



inline void _1e4d6ee22_ScopeChecker::_method_check_while_iter(jule::Ptr<_1e38d4ec7_Iter>& _77741_it) {
	jule::Ptr<_1e38d4ec7_WhileKind> _77817_wh = _77741_it->_field_kind.operator jule::Ptr<_1e38d4ec7_WhileKind>();
	if ((_77817_wh->_field_expr == nullptr) && (_77817_wh->_field_next == nullptr)) {
		this->self->_method_check_inf_iter(_77741_it);
		return;
	}
	jule::Ptr<_1e4d6ee22_WhileIter> _78417_kind = jule::new_struct<_1e4d6ee22_WhileIter>(new( std::nothrow ) _1e4d6ee22_WhileIter());
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_78417_kind));
	_78417_kind->_field_scope=this->self->_method_check_iter_scope(static_cast<jule::Uintptr>(_78417_kind),_77741_it->_field_scope);
	if (_77817_wh->_field_expr != nullptr) {
		jule::Ptr<_1e50ac4b1_Data> _79121_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_77817_wh->_field_expr);
		if (_79121_d == nullptr) {
			return;
		}
		jule::Ptr<_1e6420856_Prim> _79617_prim = _79121_d->_field_kind->_method_prim();
		if (_79617_prim == nullptr) {
			this->self->_field_s->_method_push_err(_77741_it->_field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;
		}
		if ((!(_79617_prim->_method_is_bool()))) {
			this->self->_field_s->_method_push_err(_77741_it->_field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;
		}
		_78417_kind->_field_expr=_79121_d->_field_model;
	}
	if (_77817_wh->_method_is_while_next()) {
		if ((!(_1e4d6ee22_is_valid_ast_st_for_next_st(_77817_wh->_field_next)))) {
			this->self->_field_s->_method_push_err(_77817_wh->_field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;
		}
		jule::I64 _81617_n = this->self->_field_scope->_field_stmts.len();
		this->self->_method_check_node(_77817_wh->_field_next);
		if (_81617_n < this->self->_field_scope->_field_stmts.len()) {
			jule::Any _81925_st = this->self->_field_scope->_field_stmts[_81617_n];
			this->self->_field_scope->_field_stmts=this->self->_field_scope->_field_stmts.slice(0LL,_81617_n);
			if ((!(_1e4d6ee22_is_valid_st_for_next_st(_81925_st)))) {
				this->self->_field_s->_method_push_err(_77817_wh->_field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			}
			_78417_kind->_field_next=_81925_st;
		}
	}
}



inline void _1e4d6ee22_ScopeChecker::_method_check_range_iter(jule::Ptr<_1e38d4ec7_Iter>& _83041_it) {
	jule::Ptr<_1e38d4ec7_RangeKind> _83117_rang = _83041_it->_field_kind.operator jule::Ptr<_1e38d4ec7_RangeKind>();
	jule::Ptr<_1e50ac4b1_Data> _83317_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_83117_rang->_field_expr);
	if (_83317_d == nullptr) {
		return;
	}
	jule::Ptr<_1e4d6ee22_RangeIter> _83817_kind = jule::new_struct<_1e4d6ee22_RangeIter>(new( std::nothrow ) _1e4d6ee22_RangeIter(_83317_d,jule::Ptr<_1e4d6ee22_Scope>(),jule::Ptr<_1e50b0492_Var>(),jule::Ptr<_1e50b0492_Var>()));
	_1e522c29b_RangeChecker _84217_rc = _1e522c29b_RangeChecker(this->self,_83117_rang,_83817_kind,_83317_d);
	jule::Bool _84813_ok = _84217_rc._method_check();
	if ((!(_84813_ok))) {
		return;
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_83817_kind));
	jule::Ptr<_1e4d6ee22_ScopeChecker> _85517_ssc = this->self->_method_new_child_checker();
	if (_83817_kind->_field_key_a != nullptr) {
		if ((!(this->self->_field_s->_method_is_flag(1LL))) && this->self->_method_is_duplicated_ident(0LLU,_83817_kind->_field_key_a->_field_ident)) {
			this->self->_field_s->_method_push_err(_83817_kind->_field_key_a->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_83817_kind->_field_key_a->_field_ident)}));
			this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		}
		_85517_ssc->_field_table->_field_vars = jule::alloc_for_append(_85517_ssc->_field_table->_field_vars,1);_85517_ssc->_field_table->_field_vars.push(_83817_kind->_field_key_a);
	}
	if (_83817_kind->_field_key_b != nullptr) {
		if ((!(this->self->_field_s->_method_is_flag(1LL))) && this->self->_method_is_duplicated_ident(0LLU,_83817_kind->_field_key_b->_field_ident)) {
			this->self->_field_s->_method_push_err(_83817_kind->_field_key_b->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_83817_kind->_field_key_b->_field_ident)}));
			this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		}
		_85517_ssc->_field_table->_field_vars = jule::alloc_for_append(_85517_ssc->_field_table->_field_vars,1);_85517_ssc->_field_table->_field_vars.push(_83817_kind->_field_key_b);
	}
	_83817_kind->_field_scope=this->self->_method_check_iter_scope_sc(static_cast<jule::Uintptr>(_83817_kind),_83041_it->_field_scope,_85517_ssc);
}



inline void _1e4d6ee22_ScopeChecker::_method_check_iter(jule::Ptr<_1e38d4ec7_Iter> _87634_it) {
	if (_87634_it->_method_is_inf()) {
		this->self->_method_check_inf_iter(_87634_it);
		return;
	}
	{
		auto &_match_expr{ _87634_it->_field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_WhileKind>>())) { goto _case_end_4732005600; }
		_case_begin_4732005600:;
		{
			this->self->_method_check_while_iter(_87634_it);
		}
		goto _match_end_4732004784;
		_case_end_4732005600:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_RangeKind>>())) { goto _case_end_4732006224; }
		_case_begin_4732006224:;
		{
			this->self->_method_check_range_iter(_87634_it);
		}
		goto _match_end_4732004784;
		_case_end_4732006224:;
		_case_begin_4732004448:;
		{
			jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
		}
		goto _match_end_4732004784;
		_case_end_4732004448:;
		_match_end_4732004784:;
	}
}



inline jule::Bool _1e4d6ee22_ScopeChecker::_method_check_valid_cont_label(jule::Uintptr _88942_it) {
	jule::Ptr<_1e4d6ee22_ScopeChecker> _89017_scope = this->self;
	_julec_label_iter:;
	if (_89017_scope->_field_it == _88942_it) {
		return true;
	}
	if (_89017_scope->_field_parent != nullptr) {
		_89017_scope=_89017_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _1e4d6ee22_ScopeChecker::_method_check_valid_break_label(jule::Uintptr _90543_ptr) {
	jule::Ptr<_1e4d6ee22_ScopeChecker> _90617_scope = this->self;
	_julec_label_iter:;
	if (_90617_scope->_field_it == _90543_ptr) {
		return true;
	}
	if (_90617_scope->_field_cse != 0LL) {
		jule::Uintptr _91417_mtch = static_cast<jule::Uintptr>(((_1e4d6ee22_Case*)(_90617_scope->_field_cse))->_field_owner);
		if (_91417_mtch == _90543_ptr) {
			return true;
		}
	}
	if (_90617_scope->_field_parent != nullptr) {
		_90617_scope=_90617_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ptr<_1e4d6ee22_ContSt> _1e4d6ee22_ScopeChecker::_method_check_cont_valid_scope(jule::Ptr<_1e38d4ec7_ContSt> _92842_c) {
	if (_92842_c->_field_label._field_id != 0LLU) {
		return jule::new_struct<_1e4d6ee22_ContSt>(new( std::nothrow ) _1e4d6ee22_ContSt());
	}
	jule::Ptr<_1e4d6ee22_ScopeChecker> _93317_scope = this->self;
	_julec_label_iter:;
	{
		if (!((((_93317_scope->_field_it == 0LL) && (_93317_scope->_field_parent != nullptr)) && (_93317_scope->_field_owner == nullptr)))) { goto _case_end_4732030720; }
		_case_begin_4732030720:;
		{
			_93317_scope=_93317_scope->_field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_4732030560;
		_case_end_4732030720:;
		if (!((_93317_scope->_field_it != 0LL))) { goto _case_end_4732030832; }
		_case_begin_4732030832:;
		{
			return jule::new_struct<_1e4d6ee22_ContSt>(new( std::nothrow ) _1e4d6ee22_ContSt(_93317_scope->_field_it));
		}
		goto _match_end_4732030560;
		_case_end_4732030832:;
		_match_end_4732030560:;
	}
	this->self->_field_s->_method_push_err(_92842_c->_field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1e4d6ee22_ScopeChecker::_method_check_cont(jule::Ptr<_1e38d4ec7_ContSt> _94830_c) {
	jule::Ptr<_1e4d6ee22_ContSt> _94917_cont = this->self->_method_check_cont_valid_scope(_94830_c);
	if (_94917_cont == nullptr) {
		return;
	}
	if (_94830_c->_field_label._field_id != 0LLU) {
		jule::Ptr<_1e4d6ee22_ScopeLabel> _95521_label = _1e4d6ee22_find_label_parent(_94830_c->_field_label._field_kind,this->self->_field_parent);
		if (_95521_label == nullptr) {
			this->self->_field_s->_method_push_err(_94830_c->_field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_94830_c->_field_label._field_kind)}));
			return;
		}
		_95521_label->_field_used=true;
		if ((_95521_label->_field_pos + 1LL) >= _95521_label->_field_scope->_field_scope->_field_stmts.len()) {
			this->self->_field_s->_method_push_err(_94830_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
			return;
		}
		jule::Int _96817_i = _95521_label->_field_pos + 1LL;
		if (_96817_i >= _95521_label->_field_scope->_field_scope->_field_stmts.len()) {
			this->self->_field_s->_method_push_err(_94830_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
		} else {
			jule::Any _97225_st = _95521_label->_field_scope->_field_scope->_field_stmts[_96817_i];
			{
				auto &_match_expr{ _97225_st };
				if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_InfIter>>())) { goto _case_end_4732056816; }
				_case_begin_4732056816:;
				{
					_94917_cont->_field_it=static_cast<jule::Uintptr>(_97225_st.operator jule::Ptr<_1e4d6ee22_InfIter>());
				}
				goto _match_end_4732056432;
				_case_end_4732056816:;
				if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_RangeIter>>())) { goto _case_end_4732056912; }
				_case_begin_4732056912:;
				{
					_94917_cont->_field_it=static_cast<jule::Uintptr>(_97225_st.operator jule::Ptr<_1e4d6ee22_RangeIter>());
				}
				goto _match_end_4732056432;
				_case_end_4732056912:;
				if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_WhileIter>>())) { goto _case_end_4732057008; }
				_case_begin_4732057008:;
				{
					_94917_cont->_field_it=static_cast<jule::Uintptr>(_97225_st.operator jule::Ptr<_1e4d6ee22_WhileIter>());
				}
				goto _match_end_4732056432;
				_case_end_4732057008:;
				_case_begin_4732051200:;
				{
					this->self->_field_s->_method_push_err(_94830_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
				}
				goto _match_end_4732056432;
				_case_end_4732051200:;
				_match_end_4732056432:;
			}
		}
	}
	if (_94917_cont->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_cont_label(_94917_cont->_field_it)))) {
			this->self->_field_s->_method_push_err(_94830_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
		}
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_94917_cont));
}



inline void _1e4d6ee22_ScopeChecker::_method_check_label(jule::Ptr<_1e38d4ec7_LabelSt> _99135_l) {
	if (this->self->_method_find_label(_99135_l->_field_ident) != nullptr) {
		this->self->_field_s->_method_push_err(_99135_l->_field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>({jule::Any(_99135_l->_field_ident)}));
		return;
	}
	jule::Ptr<_1e4d6ee22_Label> _99717_label = jule::new_struct<_1e4d6ee22_Label>(new( std::nothrow ) _1e4d6ee22_Label(_99135_l->_field_ident));
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_99717_label));
	(*(this->self->_field_labels))=jule::append((*(this->self->_field_labels)),jule::Slice<jule::Ptr<_1e4d6ee22_ScopeLabel>>({jule::new_struct<_1e4d6ee22_ScopeLabel>(new( std::nothrow ) _1e4d6ee22_ScopeLabel(_99135_l->_field_token,_99717_label,static_cast<jule::I64>(this->self->_field_scope->_field_stmts.len() - 1LL),this->self,jule::Bool()))}));
}



inline void _1e4d6ee22_ScopeChecker::_method_push_goto(jule::Ptr<_1e38d4ec7_GotoSt> _101033_gt) {
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(jule::new_struct<_1e4d6ee22_GotoSt>(new( std::nothrow ) _1e4d6ee22_GotoSt(_101033_gt->_field_label._field_kind))));
	(*(this->self->_field_gotos))=jule::append((*(this->self->_field_gotos)),jule::Slice<jule::Ptr<_1e4d6ee22_ScopeGoto>>({jule::new_struct<_1e4d6ee22_ScopeGoto>(new( std::nothrow ) _1e4d6ee22_ScopeGoto(_101033_gt,this->self,static_cast<jule::I64>(this->self->_field_scope->_field_stmts.len() - 1LL)))}));
}



inline void _1e4d6ee22_ScopeChecker::_method_check_postfix(jule::Ptr<_1e38d4ec7_AssignSt> _102237_a) {
	if (_102237_a->_field_left.len() > 1LL) {
		this->self->_field_s->_method_push_err(_102237_a->_field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1e38d4ec7_Expr> _102817_expr = _102237_a->_field_left[0LL]->_field_expr;
	jule::Ptr<_1e50ac4b1_Data> _102917_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_102817_expr);
	if (_102917_d == nullptr) {
		return;
	}
	_1e4d6ee22_check_assign(this->self->_field_s,_102917_d,nullptr,_102237_a->_field_setter);
	if (_102917_d->_field_kind->_method_ptr() != nullptr) {
		jule::Ptr<_1e6420856_Ptr> _103721_ptr = _102917_d->_field_kind->_method_ptr();
		if (_103721_ptr->_method_is_unsafe()) {
			this->self->_field_s->_method_push_err(_102237_a->_field_setter,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any(_102237_a->_field_setter._field_kind),jule::Any(_102917_d->_field_kind->_method_to_str())}));
			return;
		}
	} else {
		if ((_102917_d->_field_kind->_method_prim() == nullptr) || (!(_1c8c8ad04_is_num(_102917_d->_field_kind->_method_prim()->_field_kind)))) {
			this->self->_field_s->_method_push_err(_102237_a->_field_setter,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any(_102237_a->_field_setter._field_kind),jule::Any(_102917_d->_field_kind->_method_to_str())}));
			return;
		}
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(jule::new_struct<_1e4d6ee22_Postfix>(new( std::nothrow ) _1e4d6ee22_Postfix(_102917_d->_field_model,_102237_a->_field_setter._field_kind))));
}



inline jule::Bool _1e4d6ee22_ScopeChecker::_method_is_new_assign_ident(jule::Str _105538_ident) {
	if (_1e3bad8dd_is_ignore_ident(_105538_ident) || (_105538_ident == jule::Str())) {
		return false;
	}
	return (*this)._field_table->_method_def_by_ident(_105538_ident,false) == nullptr;
}



inline void _1e4d6ee22_ScopeChecker::_method_check_single_assign(jule::Ptr<_1e38d4ec7_AssignSt>& _106344_a) {
	jule::Ptr<_1e50ac4b1_Data> _106417_l = nullptr;
	if ((!(_1e3bad8dd_is_ignore_ident(_106344_a->_field_left[0LL]->_field_ident)))) {
		jule::Ptr<_1e38d4ec7_Expr> _106721_expr = _106344_a->_field_left[0LL]->_field_expr;
		_106417_l=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_106721_expr);
		if (_106417_l == nullptr) {
			return;
		}
	}
	jule::Ptr<_1e50ac4b1_Eval> _107417_eval = (((_106417_l != nullptr)) ? (this->self->_field_s->_method_evalp(this->self,_106417_l->_field_kind)) : (this->self->_field_s->_method_eval(this->self)));
	jule::Ptr<_1e50ac4b1_Data> _107917_r = _107417_eval->_method_eval_expr(_106344_a->_field_right);
	if (_107917_r == nullptr) {
		return;
	}
	if (_106417_l == nullptr) {
		if (_107917_r->_field_kind->_method_void()) {
			this->self->_field_s->_method_push_err(_106344_a->_field_right->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		}
		this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_107917_r));
		return;
	}
	if ((!(_1e4d6ee22_check_assign(this->self->_field_s,_106417_l,_107917_r,_106344_a->_field_setter)))) {
		return;
	}
	if (_107917_r->_field_kind->_method_tup() != nullptr) {
		this->self->_field_s->_method_push_err(_106344_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(jule::new_struct<_1e4d6ee22_Assign>(new( std::nothrow ) _1e4d6ee22_Assign(_106417_l->_field_model,_107917_r->_field_model,_106344_a->_field_setter._field_kind))));
	if (_106344_a->_field_setter._field_kind != jule::Str("=", 1)) {
		_106344_a->_field_setter._field_kind=_106344_a->_field_setter._field_kind.slice(0LL,_106344_a->_field_setter._field_kind.len() - 1LL);
		_1e50ac4b1_BinopSolver _111121_solver = _1e50ac4b1_BinopSolver(jule::new_struct_ptr<_1e50ac4b1_Eval>(new( std::nothrow ) _1e50ac4b1_Eval(this->self->_field_s,this->self,jule::Ptr<_1e6420856_TypeKind>(),this->self->_method_is_unsafe(),jule::Bool(),jule::Ptr<_1e50b0492_Var>())),jule::Ptr<_1e50ac4b1_Data>(),jule::Ptr<_1e50ac4b1_Data>(),_106344_a->_field_setter);
		_107917_r=_111121_solver._method_solve_explicit(_106417_l,_107917_r);
		if (_107917_r == nullptr) {
			return;
		}
		_106344_a->_field_setter._field_kind+=jule::Str("=", 1);
		return;
	}
	_1e522c29b_AssignTypeChecker _112817_checker = _1e522c29b_AssignTypeChecker(this->self->_field_s,_106417_l->_field_kind,_107917_r,_106344_a->_field_setter);
	_112817_checker._method_check();
}



inline void _1e4d6ee22_ScopeChecker::_method___process_end_part_of_multi_assign(jule::Ptr<_1e4d6ee22_MultiAssign> _113757_st,jule::Ptr<_1e38d4ec7_AssignSt> _113813_a,jule::Ptr<_1e38d4ec7_AssignLeft> _113831_lexpr,jule::Ptr<_1e50ac4b1_Data> _113855_l,jule::Ptr<_1e50ac4b1_Data> _113869_r) {
	if (_1e3bad8dd_is_ignore_ident(_113831_lexpr->_field_ident)) {
		if (_113869_r->_field_kind->_method_void()) {
			(*this)._field_s->_method_push_err(_113813_a->_field_right->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		}
		_113757_st->_field_l = jule::alloc_for_append(_113757_st->_field_l,1);_113757_st->_field_l.push(jule::Any(nullptr));
		return;
	}
	if (_113813_a->_field_declarative && (*this)._method_is_new_assign_ident(_113831_lexpr->_field_ident)) {
		jule::Ptr<_1e50b0492_Var> _115021_v = jule::new_struct<_1e50b0492_Var>(new( std::nothrow ) _1e50b0492_Var((*this)._field_scope,_113831_lexpr->_field_token,_113831_lexpr->_field_ident,jule::Bool(),jule::Bool(),_113831_lexpr->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),_113831_lexpr->_field_reference,jule::Str(),jule::Ptr<_1e6420856_TypeSymbol>(),jule::new_struct<_1e50ac4b1_Value>(new( std::nothrow ) _1e50ac4b1_Value(_113813_a->_field_right,_113869_r)),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>(),jule::Ptr<_1e50b0492_IterRelation>(),jule::Slice<jule::Ptr<_1e50b0492_Var>>()));
		(*this)._field_s->_method_check_var(_115021_v);
		_113757_st->_field_l = jule::alloc_for_append(_113757_st->_field_l,1);_113757_st->_field_l.push(jule::Any(_115021_v));
		(*this)._field_table->_field_vars = jule::alloc_for_append((*this)._field_table->_field_vars,1);(*this)._field_table->_field_vars.push(_115021_v);
		(*this)._field_scope->_field_stmts = jule::alloc_for_append((*this)._field_scope->_field_stmts,1);(*this)._field_scope->_field_stmts.push(jule::Any(_115021_v));
		return;
	}
	if (_113831_lexpr->_field_mutable || _113831_lexpr->_field_reference) {
		(*this)._field_s->_method_push_err(_113831_lexpr->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_113831_lexpr->_field_ident)}));
		(*this)._field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if ((!(_1e4d6ee22_check_assign((*this)._field_s,_113855_l,_113869_r,_113813_a->_field_setter)))) {
		return;
	}
	
	(*this)._field_s->_method_check_validity_for_init_expr(_113855_l->_field_mutable,false,_113855_l->_field_kind,_113869_r,_113813_a->_field_setter);
	_1e522c29b_AssignTypeChecker _118517_checker = _1e522c29b_AssignTypeChecker((*this)._field_s,_113855_l->_field_kind,_113869_r,_113813_a->_field_setter);
	_118517_checker._method_check();
	_113757_st->_field_l = jule::alloc_for_append(_113757_st->_field_l,1);_113757_st->_field_l.push(_113855_l->_field_model);
}



inline void _1e4d6ee22_ScopeChecker::_method_check_ret_multi_assign(jule::Ptr<_1e38d4ec7_AssignSt>& _119647_a) {
	jule::Ptr<_1e50ac4b1_Data> _119717_rd = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_119647_a->_field_right);
	if (_119717_rd == nullptr) {
		return;
	}
	jule::Slice<jule::Ptr<_1e50ac4b1_Data>> _120217_r = _1e4d6ee22_get_datas_from_tuple_data(_119717_rd);
	{
		if (!((_119647_a->_field_left.len() > _120217_r.len()))) { goto _case_end_4732203456; }
		_case_begin_4732203456:;
		{
			this->self->_field_s->_method_push_err(_119647_a->_field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
			return;
		}
		goto _match_end_4732203248;
		_case_end_4732203456:;
		if (!((_119647_a->_field_left.len() < _120217_r.len()))) { goto _case_end_4732203552; }
		_case_begin_4732203552:;
		{
			this->self->_field_s->_method_push_err(_119647_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
			return;
		}
		goto _match_end_4732203248;
		_case_end_4732203552:;
		_match_end_4732203248:;
	}
	jule::Ptr<_1e4d6ee22_MultiAssign> _121417_st = jule::new_struct<_1e4d6ee22_MultiAssign>(new( std::nothrow ) _1e4d6ee22_MultiAssign(jule::Slice<jule::Any>(),_119717_rd->_field_model));
	if (_119717_rd->_field_kind->_method_tup() == nullptr) {
		_121417_st->_field_r=jule::Any(jule::new_struct<_1e4d70a6b_TupleExprModel>(new( std::nothrow ) _1e4d70a6b_TupleExprModel(_120217_r)));
	}
	{
		auto &expr = _119647_a->_field_left;
		auto it = expr.begin();
		_iter_begin_4732212304:;
		if (it != expr.end()) {
			jule::Int _1e4d6ee22_i = it - expr.begin();
			{
				jule::Ptr<_1e38d4ec7_AssignLeft> _122321_lexpr = _119647_a->_field_left[_1e4d6ee22_i];
				jule::Ptr<_1e50ac4b1_Data> _122421_l = nullptr;
				if ((!(_1e3bad8dd_is_ignore_ident(_122321_lexpr->_field_ident))) && ((!(_119647_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_122321_lexpr->_field_ident))))) {
					_122421_l=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_122321_lexpr->_field_expr);
					if (_122421_l == nullptr) {
						goto _iter_next_4732212304;
					}
				}
				this->self->_method___process_end_part_of_multi_assign(_121417_st,_119647_a,_122321_lexpr,_122421_l,_120217_r[_1e4d6ee22_i]);
			}
			_iter_next_4732212304:;
			++it;
			_1e4d6ee22_i++;
			goto _iter_begin_4732212304;
		}
		_iter_end_4732212304:;
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_121417_st));
}



inline void _1e4d6ee22_ScopeChecker::_method_check_multi_assign(jule::Ptr<_1e38d4ec7_AssignSt>& _124043_a) {
	{
		auto &_match_expr{ _124043_a->_field_right->_field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_FnCallExpr>>())) { goto _case_end_4732223184; }
		_case_begin_4732223184:;
		{
			this->self->_method_check_ret_multi_assign(_124043_a);
			return;
		}
		goto _match_end_4732241904;
		_case_end_4732223184:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_UnsafeExpr>>())) { goto _case_end_4732242032; }
		_case_begin_4732242032:;
		{
			{
				auto &_match_expr{ _124043_a->_field_right->_field_kind.operator jule::Ptr<_1e38d4ec7_UnsafeExpr>()->_field_expr };
				if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_FnCallExpr>>())) { goto _case_end_4732242928; }
				_case_begin_4732242928:;
				{
					this->self->_method_check_ret_multi_assign(_124043_a);
					return;
				}
				goto _match_end_4732245776;
				_case_end_4732242928:;
				_match_end_4732245776:;
			}
		}
		goto _match_end_4732241904;
		_case_end_4732242032:;
		_match_end_4732241904:;
	}
	jule::Slice<jule::Any> _125417_right = _1e4d6ee22_get_expr_models(_124043_a->_field_right->_field_kind);
	{
		if (!((_124043_a->_field_left.len() > _125417_right.len()))) { goto _case_end_4732248496; }
		_case_begin_4732248496:;
		{
			this->self->_field_s->_method_push_err(_124043_a->_field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
			return;
		}
		goto _match_end_4732248256;
		_case_end_4732248496:;
		if (!((_124043_a->_field_left.len() < _125417_right.len()))) { goto _case_end_4732248592; }
		_case_begin_4732248592:;
		{
			this->self->_field_s->_method_push_err(_124043_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
			return;
		}
		goto _match_end_4732248256;
		_case_end_4732248592:;
		_match_end_4732248256:;
	}
	jule::Ptr<_1e4d70a6b_TupleExprModel> _126617_right_tuple = jule::new_struct<_1e4d70a6b_TupleExprModel>(new( std::nothrow ) _1e4d70a6b_TupleExprModel());
	jule::Ptr<_1e4d6ee22_MultiAssign> _126817_st = jule::new_struct<_1e4d6ee22_MultiAssign>(new( std::nothrow ) _1e4d6ee22_MultiAssign(jule::Slice<jule::Any>(),jule::Any(_126617_right_tuple)));
	{
		auto &expr = _124043_a->_field_left;
		auto it = expr.begin();
		_iter_begin_4732256752:;
		if (it != expr.end()) {
			jule::Int _1e4d6ee22_i = it - expr.begin();
			{
				jule::Ptr<_1e38d4ec7_AssignLeft> _127321_lexpr = _124043_a->_field_left[_1e4d6ee22_i];
				jule::Ptr<_1e50ac4b1_Data> _127421_l = nullptr;
				if ((!(_1e3bad8dd_is_ignore_ident(_127321_lexpr->_field_ident))) && ((!(_124043_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_127321_lexpr->_field_ident))))) {
					_127421_l=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_127321_lexpr->_field_expr);
					if (_127421_l == nullptr) {
						goto _iter_next_4732256752;
					}
				}
				jule::Ptr<_1e38d4ec7_Expr> _128421_expr = jule::new_struct<_1e38d4ec7_Expr>(new( std::nothrow ) _1e38d4ec7_Expr(_124043_a->_field_right->_field_token,_125417_right[_1e4d6ee22_i]));
				jule::Ptr<_1e50ac4b1_Eval> _128521_eval = (((_127421_l != nullptr)) ? (this->self->_field_s->_method_evalp(this->self,_127421_l->_field_kind)) : (this->self->_field_s->_method_eval(this->self)));
				jule::Ptr<_1e50ac4b1_Data> _129021_r = _128521_eval->_method_eval_expr(_128421_expr);
				if (_129021_r == nullptr) {
					goto _iter_next_4732256752;
				}
				_126617_right_tuple->_field_datas = jule::alloc_for_append(_126617_right_tuple->_field_datas,1);_126617_right_tuple->_field_datas.push(_129021_r);
				this->self->_method___process_end_part_of_multi_assign(_126817_st,_124043_a,_127321_lexpr,_127421_l,_129021_r);
			}
			_iter_next_4732256752:;
			++it;
			_1e4d6ee22_i++;
			goto _iter_begin_4732256752;
		}
		_iter_end_4732256752:;
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_126817_st));
}



inline void _1e4d6ee22_ScopeChecker::_method_check_assign_st(jule::Ptr<_1e38d4ec7_AssignSt> _130339_a) {
	if (_1e3bad8dd_is_postfix_op(_130339_a->_field_setter._field_kind)) {
		this->self->_method_check_postfix(_130339_a);
		return;
	}
	if ((_130339_a->_field_left.len() == 1LL) && (!(_130339_a->_field_declarative))) {
		this->self->_method_check_single_assign(_130339_a);
		return;
	}
	this->self->_method_check_multi_assign(_130339_a);
}



inline jule::Ptr<_1e4d6ee22_Scope> _1e4d6ee22_ScopeChecker::_method_check_case_scope(jule::Ptr<_1e4d6ee22_Case>& _131737_c,jule::Ptr<_1e38d4ec7_ScopeTree>& _131752_tree) {
	jule::Ptr<_1e4d6ee22_ScopeChecker> _131817_ssc = this->self->_method_new_child_checker();
	_131817_ssc->_field_cse=static_cast<jule::Uintptr>(_131737_c);
	return this->self->_method_check_child_sc(_131752_tree,_131817_ssc);
}



inline jule::Ptr<_1e4d6ee22_Case> _1e4d6ee22_ScopeChecker::_method_check_case(jule::Ptr<_1e4d6ee22_Match> _132334_m,jule::Int _132345_i,jule::Ptr<_1e38d4ec7_Case> _132357_c,jule::Ptr<_1e50ac4b1_Data> _132387_expr) {
	jule::Ptr<_1e4d6ee22_Case> _132417__case = _132334_m->_field_cases[_132345_i];
	_132417__case->_field_exprs=jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_132357_c->_field_exprs.len()));
	jule::Bool _132617_generic_matched = false;
	{
		auto &expr = _132357_c->_field_exprs;
		auto it = expr.begin();
		_iter_begin_4732296320:;
		if (it != expr.end()) {
			jule::Ptr<_1e38d4ec7_Expr> _1e4d6ee22_e = *it;
			{
				if (_132334_m->_field_type_match) {
					jule::Ptr<_1e50ac4b1_Eval> _133025_eval = jule::new_struct_ptr<_1e50ac4b1_Eval>(new( std::nothrow ) _1e50ac4b1_Eval(this->self->_field_s,this->self,jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Ptr<_1e50b0492_Var>()));
					jule::Ptr<_1e50ac4b1_Data> _133525_d = _133025_eval->_method_eval(_1e4d6ee22_e);
					if (_133525_d != nullptr) {
						_132417__case->_field_exprs = jule::alloc_for_append(_132417__case->_field_exprs,1);_132417__case->_field_exprs.push(jule::Any(_133525_d->_field_kind));
						if (_1e4d6ee22_count_match_type(_132334_m,_133525_d->_field_kind) > 1LL) {
							this->self->_field_s->_method_push_err(_1e4d6ee22_e->_field_token,jule::Str("type is already checked: @", 26),jule::Slice<jule::Any>({jule::Any(_133525_d->_field_kind->_method_to_str())}));
						}
					}
					if (_132387_expr->_field_kind->_field_generic) {
						_132617_generic_matched=_132617_generic_matched || _132387_expr->_field_kind->_method_equals(_133525_d->_field_kind);
					} else {
						jule::Ptr<_1e4d61232_Trait> _134625_trt = _132387_expr->_field_kind->_method_trt();
						if (_134625_trt != nullptr) {
							this->self->_field_s->_method_check_type_compatibility(_132387_expr->_field_kind,_133525_d->_field_kind,_1e4d6ee22_e->_field_token);
						}
					}
					goto _iter_next_4732296320;
				}
				jule::Ptr<_1e50ac4b1_Data> _135521_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_1e4d6ee22_e);
				if (_135521_d == nullptr) {
					goto _iter_next_4732296320;
				}
				_132417__case->_field_exprs = jule::alloc_for_append(_132417__case->_field_exprs,1);_132417__case->_field_exprs.push(_135521_d->_field_model);
				_1e522c29b_AssignTypeChecker _136221_checker = _1e522c29b_AssignTypeChecker(this->self->_field_s,_132387_expr->_field_kind,_135521_d,_1e4d6ee22_e->_field_token);
				_136221_checker._method_check();
			}
			_iter_next_4732296320:;
			++it;
			goto _iter_begin_4732296320;
		}
		_iter_end_4732296320:;
	}
	if (((!(_132334_m->_field_type_match)) || (!(_132387_expr->_field_kind->_field_generic))) || _132617_generic_matched) {
		_132417__case->_field_scope=this->self->_method_check_case_scope(_132417__case,_132357_c->_field_scope);
	}
	return _132417__case;
}



inline void _1e4d6ee22_ScopeChecker::_method_check_cases(jule::Ptr<_1e38d4ec7_MatchCase>& _137736_m,jule::Ptr<_1e4d6ee22_Match> _137755_rm,jule::Ptr<_1e50ac4b1_Data> _137771_expr) {
	_137755_rm->_field_cases=jule::Slice<jule::Ptr<_1e4d6ee22_Case>>::alloc(static_cast<jule::I64>(_137736_m->_field_cases.len()));
	{
		auto &expr = _137736_m->_field_cases;
		auto it = expr.begin();
		_iter_begin_4732327056:;
		if (it != expr.end()) {
			jule::Int _1e4d6ee22_i = it - expr.begin();
			{
				jule::Ptr<_1e4d6ee22_Case> _138021__case = jule::new_struct<_1e4d6ee22_Case>(new( std::nothrow ) _1e4d6ee22_Case(_137755_rm,jule::Ptr<_1e4d6ee22_Scope>(),jule::Slice<jule::Any>(),jule::Ptr<_1e4d6ee22_Case>()));
				if (_1e4d6ee22_i > 0LL) {
					_137755_rm->_field_cases[_1e4d6ee22_i - 1LL]->_field_next=_138021__case;
				}
				_137755_rm->_field_cases[_1e4d6ee22_i]=_138021__case;
			}
			_iter_next_4732327056:;
			++it;
			_1e4d6ee22_i++;
			goto _iter_begin_4732327056;
		}
		_iter_end_4732327056:;
	}
	if ((_137755_rm->_field_default != nullptr) && (_137736_m->_field_cases.len() > 0LL)) {
		_137755_rm->_field_cases[_137755_rm->_field_cases.len() - 1LL]->_field_next=_137755_rm->_field_default;
	}
	{
		auto &expr = _137736_m->_field_cases;
		auto it = expr.begin();
		_iter_begin_4732335248:;
		if (it != expr.end()) {
			jule::Int _1e4d6ee22_i = it - expr.begin();
			jule::Ptr<_1e38d4ec7_Case> _1e4d6ee22_c = *it;
			{
				this->self->_method_check_case(_137755_rm,_1e4d6ee22_i,_1e4d6ee22_c,_137771_expr);
			}
			_iter_next_4732335248:;
			++it;
			_1e4d6ee22_i++;
			goto _iter_begin_4732335248;
		}
		_iter_end_4732335248:;
	}
}



inline jule::Ptr<_1e4d6ee22_Case> _1e4d6ee22_ScopeChecker::_method_check_default(jule::Ptr<_1e4d6ee22_Match> _140037_m,jule::Ptr<_1e38d4ec7_Else> _140052_d) {
	jule::Ptr<_1e4d6ee22_Case> _140117_def = jule::new_struct<_1e4d6ee22_Case>(new( std::nothrow ) _1e4d6ee22_Case(_140037_m,jule::Ptr<_1e4d6ee22_Scope>(),jule::Slice<jule::Any>(),jule::Ptr<_1e4d6ee22_Case>()));
	_140117_def->_field_scope=this->self->_method_check_case_scope(_140117_def,_140052_d->_field_scope);
	return _140117_def;
}



inline void _1e4d6ee22_ScopeChecker::_method_check_comptime_panic(jule::Ptr<_1e4d6ee22_Scope>& _140840_s,_1e3bad8dd_Token _140851_error_token) {
	if (_140840_s->_field_stmts.len() != 1LL) {
		return;
	}
	jule::Any _141313_stmt = _140840_s->_field_stmts[0LL];
	{
		auto &_match_expr{ _141313_stmt };
		if (!(_match_expr.type_is<jule::Ptr<_1e50ac4b1_Data>>())) { goto _case_end_4732347440; }
		_case_begin_4732347440:;
		{
			jule::Ptr<_1e50ac4b1_Data> _141617_d = _141313_stmt.operator jule::Ptr<_1e50ac4b1_Data>();
			{
				auto &_match_expr{ _141617_d->_field_model };
				if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_BuiltinPanicCallExprModel>>())) { goto _case_end_4732348832; }
				_case_begin_4732348832:;
				{
					jule::Ptr<_1e4d70a6b_BuiltinPanicCallExprModel> _141921_m = _141617_d->_field_model.operator jule::Ptr<_1e4d70a6b_BuiltinPanicCallExprModel>();
					{
						auto &_match_expr{ _141921_m->_field_expr };
						if (!(_match_expr.type_is<jule::Ptr<_1c8b9b83b_Const>>())) { goto _case_end_4732351744; }
						_case_begin_4732351744:;
						{
							jule::Ptr<_1c8b9b83b_Const> _142225_c = _141921_m->_field_expr.operator jule::Ptr<_1c8b9b83b_Const>();
							if (_142225_c->_method_is_str()) {
								(*this)._field_s->_method_push_err(_140851_error_token,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>({jule::Any(_142225_c->_method_read_str())}));
							}
						}
						goto _match_end_4732354752;
						_case_end_4732351744:;
						_match_end_4732354752:;
					}
				}
				goto _match_end_4732351584;
				_case_end_4732348832:;
				_match_end_4732351584:;
			}
		}
		goto _match_end_4732348704;
		_case_end_4732347440:;
		_match_end_4732348704:;
	}
}



inline void _1e4d6ee22_ScopeChecker::_method_push_type_match(jule::Ptr<_1e4d6ee22_Match> _143139_tm,jule::Ptr<_1e38d4ec7_MatchCase>& _143152_m) {
	if (_143139_tm->_field_expr->_field_kind->_field_generic) {
		{
			auto &expr = _143139_tm->_field_cases;
			auto it = expr.begin();
			_iter_begin_4732362240:;
			if (it != expr.end()) {
				jule::Int _1e4d6ee22_i = it - expr.begin();
				jule::Ptr<_1e4d6ee22_Case> _1e4d6ee22_c = *it;
				{
					if (_1e4d6ee22_c->_field_scope != nullptr) {
						_143139_tm->_field_cases=nullptr;
						_143139_tm->_field_default=_1e4d6ee22_c;
						this->self->_method_check_comptime_panic(_1e4d6ee22_c->_field_scope,_143152_m->_field_cases[_1e4d6ee22_i]->_field_token);
						goto _julec_label_push;
					}
				}
				_iter_next_4732362240:;
				++it;
				_1e4d6ee22_i++;
				goto _iter_begin_4732362240;
			}
			_iter_end_4732362240:;
		}
		if (_143139_tm->_field_default != nullptr) {
			this->self->_method_check_comptime_panic(_143139_tm->_field_default->_field_scope,_143152_m->_field_default->_field_token);
		}
		_143139_tm->_field_cases=nullptr;
	}
	_julec_label_push:;
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_143139_tm));
}



inline void _1e4d6ee22_ScopeChecker::_method_check_type_match(jule::Ptr<_1e38d4ec7_MatchCase>& _145341_m) {
	jule::Ptr<_1e50ac4b1_Data> _145417_d = this->self->_field_s->_method_eval(this->self)->_method_eval(_145341_m->_field_expr);
	if (_145417_d == nullptr) {
		return;
	}
	if ((!(_145417_d->_field_kind->_field_generic)) && (!(((_145417_d->_field_kind->_method_prim() != nullptr) && _145417_d->_field_kind->_method_prim()->_method_is_any()) || (_145417_d->_field_kind->_method_trt() != nullptr)))) {
		this->self->_field_s->_method_push_err(_145341_m->_field_expr->_field_token,jule::Str("type-case must be have <any>, <trait> or <generic> typed expression", 67),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1e4d6ee22_Match> _146517_tm = jule::new_struct<_1e4d6ee22_Match>(new( std::nothrow ) _1e4d6ee22_Match(_145417_d,true,jule::Slice<jule::Ptr<_1e4d6ee22_Case>>(),jule::Ptr<_1e4d6ee22_Case>()));
	if (_145341_m->_field_default != nullptr) {
		_146517_tm->_field_default=this->self->_method_check_default(_146517_tm,_145341_m->_field_default);
	}
	this->self->_method_check_cases(_145341_m,_146517_tm,_145417_d);
	this->self->_method_push_type_match(_146517_tm,_145341_m);
}



inline void _1e4d6ee22_ScopeChecker::_method_check_common_match(jule::Ptr<_1e38d4ec7_MatchCase>& _147843_m) {
	jule::Ptr<_1e50ac4b1_Data> _147917_d = nullptr;
	if (_147843_m->_field_expr == nullptr) {
		_147917_d=jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1c8b9b83b_Const::_static_method_new_bool(true)));
		_147917_d->_field_model=jule::Any(_147917_d->_field_constant);
	} else {
		_147917_d=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_147843_m->_field_expr);
		if (_147917_d == nullptr) {
			return;
		}
	}
	jule::Ptr<_1e4d6ee22_Match> _149317_mc = jule::new_struct<_1e4d6ee22_Match>(new( std::nothrow ) _1e4d6ee22_Match(_147917_d,jule::Bool(),jule::Slice<jule::Ptr<_1e4d6ee22_Case>>(),jule::Ptr<_1e4d6ee22_Case>()));
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_149317_mc));
	if (_147843_m->_field_default != nullptr) {
		_149317_mc->_field_default=this->self->_method_check_default(_149317_mc,_147843_m->_field_default);
	}
	this->self->_method_check_cases(_147843_m,_149317_mc,_147917_d);
}



inline void _1e4d6ee22_ScopeChecker::_method_check_match(jule::Ptr<_1e38d4ec7_MatchCase> _150535_m) {
	if (_150535_m->_field_type_match) {
		this->self->_method_check_type_match(_150535_m);
		return;
	}
	this->self->_method_check_common_match(_150535_m);
}



inline void _1e4d6ee22_ScopeChecker::_method_check_fall(jule::Ptr<_1e38d4ec7_FallSt> _151329_f) {
	if (((*this)._field_cse == 0LL) || (((*this)._field_scope->_field_stmts.len() + 1LL) < (*this)._field_scope->_field_stmts.len())) {
		(*this)._field_s->_method_push_err(_151329_f->_field_token,jule::Str("fallthrough keyword can only useable at end of the case scopes", 62),jule::Slice<jule::Any>());
		return;
	}
	_1e4d6ee22_Case* _151917__case = ((_1e4d6ee22_Case*)((*this)._field_cse));
	if (_151917__case->_field_next == nullptr) {
		(*this)._field_s->_method_push_err(_151329_f->_field_token,jule::Str("fallthrough cannot useable at final case", 40),jule::Slice<jule::Any>());
		(*this)._field_s->_method_push_suggestion(jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;
	}
	(*this)._field_scope->_field_stmts = jule::alloc_for_append((*this)._field_scope->_field_stmts,1);(*this)._field_scope->_field_stmts.push(jule::Any(jule::new_struct<_1e4d6ee22_FallSt>(new( std::nothrow ) _1e4d6ee22_FallSt(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_151917__case->_field_next))))));
}



inline jule::Ptr<_1e4d6ee22_BreakSt> _1e4d6ee22_ScopeChecker::_method_check_break_with_label(jule::Ptr<_1e38d4ec7_BreakSt> _153142_b) {
	jule::Ptr<_1e4d6ee22_BreakSt> _153217_brk = this->self->_method_check_plain_break(_153142_b);
	if (_153217_brk == nullptr) {
		return nullptr;
	}
	_153217_brk->_field_it=0LL;
	_153217_brk->_field_mtch=0LL;
	jule::Ptr<_1e4d6ee22_ScopeLabel> _154217_label = _1e4d6ee22_find_label_parent(_153142_b->_field_label._field_kind,this->self->_field_parent);
	if (_154217_label == nullptr) {
		this->self->_field_s->_method_push_err(_153142_b->_field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_153142_b->_field_label._field_kind)}));
		return nullptr;
	}
	_154217_label->_field_used=true;
	if ((_154217_label->_field_pos + 1LL) >= _154217_label->_field_scope->_field_scope->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_153142_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Int _155513_i = _154217_label->_field_pos + 1LL;
	if (_155513_i >= _154217_label->_field_scope->_field_scope->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_153142_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
	} else {
		jule::Any _155921_st = _154217_label->_field_scope->_field_scope->_field_stmts[_155513_i];
		{
			auto &_match_expr{ _155921_st };
			if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_InfIter>>())) { goto _case_end_4732441328; }
			_case_begin_4732441328:;
			{
				_153217_brk->_field_it=static_cast<jule::Uintptr>(_155921_st.operator jule::Ptr<_1e4d6ee22_InfIter>());
			}
			goto _match_end_4732440944;
			_case_end_4732441328:;
			if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_RangeIter>>())) { goto _case_end_4732441424; }
			_case_begin_4732441424:;
			{
				_153217_brk->_field_it=static_cast<jule::Uintptr>(_155921_st.operator jule::Ptr<_1e4d6ee22_RangeIter>());
			}
			goto _match_end_4732440944;
			_case_end_4732441424:;
			if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_WhileIter>>())) { goto _case_end_4732441520; }
			_case_begin_4732441520:;
			{
				_153217_brk->_field_it=static_cast<jule::Uintptr>(_155921_st.operator jule::Ptr<_1e4d6ee22_WhileIter>());
			}
			goto _match_end_4732440944;
			_case_end_4732441520:;
			if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_Match>>())) { goto _case_end_4732441616; }
			_case_begin_4732441616:;
			{
				_153217_brk->_field_mtch=static_cast<jule::Uintptr>(_155921_st.operator jule::Ptr<_1e4d6ee22_Match>());
			}
			goto _match_end_4732440944;
			_case_end_4732441616:;
			_case_begin_4732435296:;
			{
				this->self->_field_s->_method_push_err(_153142_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
			}
			goto _match_end_4732440944;
			_case_end_4732435296:;
			_match_end_4732440944:;
		}
	}
	if (_153217_brk->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_153217_brk->_field_it)))) {
			this->self->_field_s->_method_push_err(_153142_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
		}
	}
	if (_153217_brk->_field_mtch != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_153217_brk->_field_mtch)))) {
			this->self->_field_s->_method_push_err(_153142_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
		}
	}
	return _153217_brk;
}



inline jule::Ptr<_1e4d6ee22_BreakSt> _1e4d6ee22_ScopeChecker::_method_check_plain_break(jule::Ptr<_1e38d4ec7_BreakSt> _158437_b) {
	jule::Ptr<_1e4d6ee22_ScopeChecker> _158517_scope = this->self;
	_julec_label_iter:;
	{
		if (!(((((_158517_scope->_field_it == 0LL) && (_158517_scope->_field_cse == 0LL)) && (_158517_scope->_field_parent != nullptr)) && (_158517_scope->_field_owner == nullptr)))) { goto _case_end_4732457184; }
		_case_begin_4732457184:;
		{
			_158517_scope=_158517_scope->_field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_4732456944;
		_case_end_4732457184:;
		if (!((_158517_scope->_field_it != 0LL))) { goto _case_end_4732457296; }
		_case_begin_4732457296:;
		{
			return jule::new_struct<_1e4d6ee22_BreakSt>(new( std::nothrow ) _1e4d6ee22_BreakSt(_158517_scope->_field_it,jule::Uintptr()));
		}
		goto _match_end_4732456944;
		_case_end_4732457296:;
		if (!((_158517_scope->_field_cse != 0LL))) { goto _case_end_4732457408; }
		_case_begin_4732457408:;
		{
			return jule::new_struct<_1e4d6ee22_BreakSt>(new( std::nothrow ) _1e4d6ee22_BreakSt(jule::Uintptr(),static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1e4d6ee22_Case*)(_158517_scope->_field_cse))->_field_owner))));
		}
		goto _match_end_4732456944;
		_case_end_4732457408:;
		_match_end_4732456944:;
	}
	this->self->_field_s->_method_push_err(_158437_b->_field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1e4d6ee22_ScopeChecker::_method_check_break(jule::Ptr<_1e38d4ec7_BreakSt> _160331_b) {
	if (_160331_b->_field_label._field_id != 0LLU) {
		jule::Ptr<_1e4d6ee22_BreakSt> _160521_brk = this->self->_method_check_break_with_label(_160331_b);
		this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_160521_brk));
		return;
	}
	jule::Ptr<_1e4d6ee22_BreakSt> _161017_brk = this->self->_method_check_plain_break(_160331_b);
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_161017_brk));
}



inline void _1e4d6ee22_ScopeChecker::_method_check_ret(jule::Ptr<_1e38d4ec7_RetSt> _161433_r) {
	jule::Ptr<_1e4d6ee22_RetSt> _161517_rt = jule::new_struct<_1e4d6ee22_RetSt>(new( std::nothrow ) _1e4d6ee22_RetSt());
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_161517_rt));
	jule::Ptr<_1e522c29b_RetTypeChecker> _161817_rtc = jule::new_struct<_1e522c29b_RetTypeChecker>(new( std::nothrow ) _1e522c29b_RetTypeChecker(this->self,this->self->_method_get_root()->_field_owner,jule::Slice<jule::Ptr<_1e6420856_TypeKind>>(),jule::Slice<jule::Ptr<_1e38d4ec7_Expr>>(),jule::Slice<jule::Ptr<_1e50b0492_Var>>(),_161433_r->_field_token,jule::Any()));
	jule::Bool _162313_ok = _161817_rtc->_method_check(_161433_r->_field_expr);
	if ((!(_162313_ok))) {
		return;
	}
	if ((_161433_r->_field_expr == nullptr) && (_161817_rtc->_field_vars.len() == 0LL)) {
		return;
	}
	_161517_rt->_field_vars=_161817_rtc->_field_vars;
	if (_161433_r->_field_expr != nullptr) {
		_161517_rt->_field_expr=_161817_rtc->_field_model;
	}
}



inline void _1e4d6ee22_ScopeChecker::_method_check_node(jule::Any& _163935_node) {
	{
		auto &_match_expr{ _163935_node };
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_Comment>>())) { goto _case_end_4732495824; }
		_case_begin_4732495824:;
		{
			goto _match_end_4732494288;
		}
		goto _match_end_4732494288;
		_case_end_4732495824:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_ScopeTree>>())) { goto _case_end_4732495360; }
		_case_begin_4732495360:;
		{
			this->self->_method_check_anon_scope(_163935_node.operator jule::Ptr<_1e38d4ec7_ScopeTree>());
		}
		goto _match_end_4732494288;
		_case_end_4732495360:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_VarDecl>>())) { goto _case_end_4732495040; }
		_case_begin_4732495040:;
		{
			this->self->_method_check_var_decl(_163935_node.operator jule::Ptr<_1e38d4ec7_VarDecl>());
		}
		goto _match_end_4732494288;
		_case_end_4732495040:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_TypeAliasDecl>>())) { goto _case_end_4732495136; }
		_case_begin_4732495136:;
		{
			this->self->_method_check_type_alias_decl(_163935_node.operator jule::Ptr<_1e38d4ec7_TypeAliasDecl>());
		}
		goto _match_end_4732494288;
		_case_end_4732495136:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_Expr>>())) { goto _case_end_4732496256; }
		_case_begin_4732496256:;
		{
			this->self->_method_check_expr(_163935_node.operator jule::Ptr<_1e38d4ec7_Expr>());
		}
		goto _match_end_4732494288;
		_case_end_4732496256:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_Conditional>>())) { goto _case_end_4732496352; }
		_case_begin_4732496352:;
		{
			this->self->_method_check_conditional(_163935_node.operator jule::Ptr<_1e38d4ec7_Conditional>());
		}
		goto _match_end_4732494288;
		_case_end_4732496352:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_Iter>>())) { goto _case_end_4732496448; }
		_case_begin_4732496448:;
		{
			this->self->_method_check_iter(_163935_node.operator jule::Ptr<_1e38d4ec7_Iter>());
		}
		goto _match_end_4732494288;
		_case_end_4732496448:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_ContSt>>())) { goto _case_end_4732496544; }
		_case_begin_4732496544:;
		{
			this->self->_method_check_cont(_163935_node.operator jule::Ptr<_1e38d4ec7_ContSt>());
		}
		goto _match_end_4732494288;
		_case_end_4732496544:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_LabelSt>>())) { goto _case_end_4732496640; }
		_case_begin_4732496640:;
		{
			this->self->_method_check_label(_163935_node.operator jule::Ptr<_1e38d4ec7_LabelSt>());
		}
		goto _match_end_4732494288;
		_case_end_4732496640:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_GotoSt>>())) { goto _case_end_4732496736; }
		_case_begin_4732496736:;
		{
			this->self->_method_push_goto(_163935_node.operator jule::Ptr<_1e38d4ec7_GotoSt>());
		}
		goto _match_end_4732494288;
		_case_end_4732496736:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_AssignSt>>())) { goto _case_end_4732496832; }
		_case_begin_4732496832:;
		{
			this->self->_method_check_assign_st(_163935_node.operator jule::Ptr<_1e38d4ec7_AssignSt>());
		}
		goto _match_end_4732494288;
		_case_end_4732496832:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_MatchCase>>())) { goto _case_end_4732496928; }
		_case_begin_4732496928:;
		{
			this->self->_method_check_match(_163935_node.operator jule::Ptr<_1e38d4ec7_MatchCase>());
		}
		goto _match_end_4732494288;
		_case_end_4732496928:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_FallSt>>())) { goto _case_end_4732497024; }
		_case_begin_4732497024:;
		{
			this->self->_method_check_fall(_163935_node.operator jule::Ptr<_1e38d4ec7_FallSt>());
		}
		goto _match_end_4732494288;
		_case_end_4732497024:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_BreakSt>>())) { goto _case_end_4732497120; }
		_case_begin_4732497120:;
		{
			this->self->_method_check_break(_163935_node.operator jule::Ptr<_1e38d4ec7_BreakSt>());
		}
		goto _match_end_4732494288;
		_case_end_4732497120:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_RetSt>>())) { goto _case_end_4732497216; }
		_case_begin_4732497216:;
		{
			this->self->_method_check_ret(_163935_node.operator jule::Ptr<_1e38d4ec7_RetSt>());
		}
		goto _match_end_4732494288;
		_case_end_4732497216:;
		_case_begin_4732494176:;
		{
			jule::outln(jule::Str("error <unimplemented scope node>", 32));
		}
		goto _match_end_4732494288;
		_case_end_4732494176:;
		_match_end_4732494288:;
	}
}



inline void _1e4d6ee22_ScopeChecker::_method_check_tree(void) {
	this->self->_field_i=0LL;
	for (; this->self->_field_i < this->self->_field_tree->_field_stmts.len(); (this->self->_field_i)++) {
		{
			jule::Any _166321_stmt = this->self->_field_tree->_field_stmts[this->self->_field_i];
			this->self->_method_check_node(_166321_stmt);
		}
	_iter_next_4732522560:;
	}
	_iter_end_4732522560:;
}



inline void _1e4d6ee22_ScopeChecker::_method_check_goto(jule::Ptr<_1e4d6ee22_ScopeGoto>& _166834_gt,jule::Ptr<_1e4d6ee22_ScopeLabel>& _166855_label) {
	jule::Ptr<_1e4d6ee22_ScopeChecker> _166917_gtsc = _166834_gt->_field_scope;
	while ((_166917_gtsc->_field_child_index - 1LL) > _166855_label->_field_scope->_field_child_index) {
		{
			_166917_gtsc=_166917_gtsc->_field_parent;
		}
	_iter_next_4732529808:;
	}
	_iter_end_4732529808:;
	jule::Int _167417_n = 0LL;
	if (_166917_gtsc->_field_scope == _166855_label->_field_scope->_field_scope) {
		if (_166834_gt->_field_pos > _166855_label->_field_pos) {
			return;
		}
		_167417_n=_166834_gt->_field_pos;
	}
	jule::Int _168717_i = _166855_label->_field_pos - 1LL;
	if (_167417_n == 0LL) {
		{
			auto &expr = _166855_label->_field_scope->_field_scope->_field_stmts;
			auto it = expr.begin();
			_iter_begin_4732537824:;
			if (it != expr.end()) {
				jule::Int _1e4d6ee22_j = it - expr.begin();
				jule::Any &_1e4d6ee22_stmt = *it;
				{
					if (_1e4d6ee22_stmt_is_goto_scope(_1e4d6ee22_stmt,_166917_gtsc->_field_scope)) {
						_167417_n=_1e4d6ee22_j;
						goto _iter_end_4732537824;
					}
				}
				_iter_next_4732537824:;
				++it;
				_1e4d6ee22_j++;
				goto _iter_begin_4732537824;
			}
			_iter_end_4732537824:;
		}
	}
	for (; _168717_i >= _167417_n; (_168717_i)--) {
		{
			jule::Any _170021_stmt = _166855_label->_field_scope->_field_scope->_field_stmts[_168717_i];
			if (_1e4d6ee22_st_is_def(_170021_stmt)) {
				(*this)._field_s->_method_push_err(_166834_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_166834_gt->_field_gt->_field_label._field_kind)}));
				return;
			}
		}
	_iter_next_4732538864:;
	}
	_iter_end_4732538864:;
}



inline void _1e4d6ee22_ScopeChecker::_method_check_gotos(void) {
	{
		auto &expr = (*((*this)._field_gotos));
		auto it = expr.begin();
		_iter_begin_4732546752:;
		if (it != expr.end()) {
			jule::Ptr<_1e4d6ee22_ScopeGoto> _1e4d6ee22_gt = *it;
			{
				jule::Ptr<_1e4d6ee22_ScopeLabel> _171021_label = (*this)._method_find_label_all(_1e4d6ee22_gt->_field_gt->_field_label._field_kind);
				if (_171021_label == nullptr) {
					(*this)._field_s->_method_push_err(_1e4d6ee22_gt->_field_gt->_field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_1e4d6ee22_gt->_field_gt->_field_label._field_kind)}));
					goto _iter_next_4732546752;
				}
				_171021_label->_field_used=true;
				(*this)._method_check_goto(_1e4d6ee22_gt,_171021_label);
			}
			_iter_next_4732546752:;
			++it;
			goto _iter_begin_4732546752;
		}
		_iter_end_4732546752:;
	}
}



inline void _1e4d6ee22_ScopeChecker::_method_check_labels(void) {
	{
		auto &expr = (*((*this)._field_labels));
		auto it = expr.begin();
		_iter_begin_4732554912:;
		if (it != expr.end()) {
			jule::Ptr<_1e4d6ee22_ScopeLabel> &_1e4d6ee22_l = *it;
			{
				if ((!(_1e4d6ee22_l->_field_used))) {
					(*this)._field_s->_method_push_err(_1e4d6ee22_l->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1e4d6ee22_l->_field_label->_field_ident)}));
				}
			}
			_iter_next_4732554912:;
			++it;
			goto _iter_begin_4732554912;
		}
		_iter_end_4732554912:;
	}
}



inline void _1e4d6ee22_ScopeChecker::_method_check_vars(void) {
	{
		auto &expr = (*this)._field_table->_field_vars;
		auto it = expr.begin();
		_iter_begin_4732560368:;
		if (it != expr.end()) {
			jule::Ptr<_1e50b0492_Var> &_1e4d6ee22_v = *it;
			{
				if ((((!(_1e4d6ee22_v->_field_used)) && (!(_1e3bad8dd_is_ignore_ident(_1e4d6ee22_v->_field_ident)))) && (!(_1e3bad8dd_is_anon_ident(_1e4d6ee22_v->_field_ident)))) && (_1e4d6ee22_v->_field_ident != jule::Str("self", 4))) {
					(*this)._field_s->_method_push_err(_1e4d6ee22_v->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1e4d6ee22_v->_field_ident)}));
				}
			}
			_iter_next_4732560368:;
			++it;
			goto _iter_begin_4732560368;
		}
		_iter_end_4732560368:;
	}
}



inline void _1e4d6ee22_ScopeChecker::_method_check_aliases(void) {
	{
		auto &expr = (*this)._field_table->_field_type_aliases;
		auto it = expr.begin();
		_iter_begin_4732567008:;
		if (it != expr.end()) {
			jule::Ptr<_1e6420856_TypeAlias> &_1e4d6ee22_a = *it;
			{
				if (((!(_1e4d6ee22_a->_field_used)) && (!(_1e3bad8dd_is_ignore_ident(_1e4d6ee22_a->_field_ident)))) && (!(_1e3bad8dd_is_anon_ident(_1e4d6ee22_a->_field_ident)))) {
					(*this)._field_s->_method_push_err(_1e4d6ee22_a->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1e4d6ee22_a->_field_ident)}));
				}
			}
			_iter_next_4732567008:;
			++it;
			goto _iter_begin_4732567008;
		}
		_iter_end_4732567008:;
	}
}



inline void _1e4d6ee22_ScopeChecker::_method_check(jule::Ptr<_1e38d4ec7_ScopeTree>& _174630_tree,jule::Ptr<_1e4d6ee22_Scope>& _174653_s) {
	_174653_s->_field_deferred=_174630_tree->_field_deferred;
	_174653_s->_field_unsafety=_174630_tree->_field_unsafety;
	jule::I64 _175013_errors = this->self->_field_s->_field_errors.len();
	this->self->_field_tree=_174630_tree;
	this->self->_field_scope=_174653_s;
	this->self->_method_check_tree();
	if (_175013_errors == this->self->_field_s->_field_errors.len()) {
		this->self->_method_check_vars();
		this->self->_method_check_aliases();
		if (this->self->_method_is_root()) {
			this->self->_method_check_gotos();
			this->self->_method_check_labels();
		}
	}
}



inline jule::Ptr<_1e4d6ee22_ScopeChecker> _1e4d6ee22_ScopeChecker::_method_new_child_checker(void) {
	jule::Ptr<_1e4d6ee22_ScopeChecker> _177017_base = _1e4d6ee22_new_scope_checker_base(this->self->_field_s,nullptr);
	_177017_base->_field_parent=this->self;
	_177017_base->_field_labels=this->self->_field_labels;
	_177017_base->_field_gotos=this->self->_field_gotos;
	_177017_base->_field_child_index=static_cast<jule::Int>(this->self->_field_child_index + 1LL);
	return _177017_base;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d6ee22_ScopeChecker &_Src) {
	_Stream << "ScopeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_BinopExprModel &_Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_UnaryExprModel &_Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_StructArgExprModel &_Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_StructLitExprModel &_Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_AllocStructLitExprModel &_Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_CastingExprModel &_Src) {
	_Stream << "CastingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_FnCallExprModel &_Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_SliceExprModel &_Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_IndexigExprModel &_Src) {
	_Stream << "IndexigExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_AnonFnExprModel &_Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_KeyValPairExprModel &_Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_MapExprModel &_Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_SlicingExprModel &_Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_TraitSubIdentExprModel &_Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_StructSubIdentExprModel &_Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_StructStaticIdentExprModel &_Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_ArrayExprModel &_Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_CommonIdentExprModel &_Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_CommonSubIdentExprModel &_Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_TupleExprModel &_Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_BuiltinOutCallExprModel &_Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_BuiltinOutlnCallExprModel &_Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_BuiltinCloneCallExprModel &_Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_BuiltinNewCallExprModel &_Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_BuiltinRealCallExprModel &_Src) {
	_Stream << "BuiltinRealCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_BuiltinDropCallExprModel &_Src) {
	_Stream << "BuiltinDropCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_BuiltinPanicCallExprModel &_Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_BuiltinMakeCallExprModel &_Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_BuiltinAppendCallExprModel &_Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_BuiltinErrorTraitSubIdentExprModel &_Src) {
	_Stream << "BuiltinErrorTraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_SizeofExprModel &_Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_AlignofExprModel &_Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_RuneExprModel &_Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_IntegratedToStrExprModel &_Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d70a6b_TernaryExprModel &_Src) {
	_Stream << "TernaryExprModel{";
	_Stream << "condition:" << _Src._field_condition << ", ";
	_Stream << "true_expr:" << _Src._field_true_expr << ", ";
	_Stream << "false_expr:" << _Src._field_false_expr;
	_Stream << "}";
	return _Stream;
}



inline void _1e4d6cb45_DirectiveChecker::_method_check_cdef(jule::Ptr<_1e38d4ec7_Directive>& _1630_d) {
	{
		auto &_match_expr{ (*this)._field_o };
		if (!(_match_expr.type_is<jule::Ptr<_1e4b15a20_Fn>>())) { goto _case_end_4732600416; }
		_case_begin_4732600416:;
		{
			if ((*this)._field_o.operator jule::Ptr<_1e4b15a20_Fn>()->_field_cpp_linked) {
				goto _match_end_4732600016;
			}
			goto _case_begin_4732599488;
		}
		goto _match_end_4732600016;
		_case_end_4732600416:;
		_case_begin_4732599488:;
		{
			(*this)._field_s->_method_push_err(_1630_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_1630_d->_field_tag._field_kind)}));
		}
		goto _match_end_4732600016;
		_case_end_4732599488:;
		_match_end_4732600016:;
	}
	if (_1630_d->_field_args.len() > 0LL) {
		(*this)._field_s->_method_push_err(_1630_d->_field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1e4d6cb45_DirectiveChecker::_method_check_typedef(jule::Ptr<_1e38d4ec7_Directive>& _3233_d) {
	{
		auto &_match_expr{ (*this)._field_o };
		if (!(_match_expr.type_is<jule::Ptr<_1e398ee72_Struct>>())) { goto _case_end_4732609888; }
		_case_begin_4732609888:;
		{
			if ((*this)._field_o.operator jule::Ptr<_1e398ee72_Struct>()->_field_cpp_linked) {
				goto _match_end_4732609488;
			}
			goto _case_begin_4732608960;
		}
		goto _match_end_4732609488;
		_case_end_4732609888:;
		_case_begin_4732608960:;
		{
			(*this)._field_s->_method_push_err(_3233_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_3233_d->_field_tag._field_kind)}));
		}
		goto _match_end_4732609488;
		_case_end_4732608960:;
		_match_end_4732609488:;
	}
	if (_3233_d->_field_args.len() > 0LL) {
		(*this)._field_s->_method_push_err(_3233_d->_field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1e4d6cb45_DirectiveChecker::_method_check_derive(jule::Ptr<_1e38d4ec7_Directive>& _4832_d) {
	{
		auto &_match_expr{ (*this)._field_o };
		if (!(_match_expr.type_is<jule::Ptr<_1e398ee72_Struct>>())) { goto _case_end_4732619360; }
		_case_begin_4732619360:;
		{
			if ((!((*this)._field_o.operator jule::Ptr<_1e398ee72_Struct>()->_field_cpp_linked))) {
				goto _match_end_4732618960;
			}
			goto _case_begin_4732618432;
		}
		goto _match_end_4732618960;
		_case_end_4732619360:;
		_case_begin_4732618432:;
		{
			(*this)._field_s->_method_push_err(_4832_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>());
		}
		goto _match_end_4732618960;
		_case_end_4732618432:;
		_match_end_4732618960:;
	}
	if (_4832_d->_field_args.len() == 0LL) {
		(*this)._field_s->_method_push_err(_4832_d->_field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		(*this)._field_s->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	} else if (_4832_d->_field_args.len() > 1LL) {
		(*this)._field_s->_method_push_err(_4832_d->_field_args[1LL],jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	{
		auto &_match_expr{ _4832_d->_field_args[0LL]._field_kind };
		if (!((jule::Str("Clone", 5)) == _match_expr)) { goto _case_end_4732630848; }
		goto _match_end_4732629952;
		_case_end_4732630848:;
		_case_begin_4732623344:;
		{
			(*this)._field_s->_method_push_err(_4832_d->_field_args[0LL],jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_4832_d->_field_args[0LL]._field_kind)}));
		}
		goto _match_end_4732629952;
		_case_end_4732623344:;
		_match_end_4732629952:;
	}
}



inline void _1e4d6cb45_DirectiveChecker::_method_check_namespace(jule::Ptr<_1e38d4ec7_Directive>& _7439_d) {
	{
		auto &_match_expr{ (*this)._field_o };
		if (!(_match_expr.type_is<jule::Ptr<_1e398ee72_Struct>>())) { goto _case_end_4732636880; }
		_case_begin_4732636880:;
		{
			if ((!((*this)._field_o.operator jule::Ptr<_1e398ee72_Struct>()->_field_cpp_linked))) {
				(*this)._field_s->_method_push_err(_7439_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_7439_d->_field_tag._field_kind)}));
			}
		}
		goto _match_end_4732636416;
		_case_end_4732636880:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4b15a20_Fn>>())) { goto _case_end_4732636976; }
		_case_begin_4732636976:;
		{
			if ((!((*this)._field_o.operator jule::Ptr<_1e4b15a20_Fn>()->_field_cpp_linked))) {
				(*this)._field_s->_method_push_err(_7439_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_7439_d->_field_tag._field_kind)}));
			}
		}
		goto _match_end_4732636416;
		_case_end_4732636976:;
		if (!(_match_expr.type_is<jule::Ptr<_1e50b0492_Var>>())) { goto _case_end_4732637072; }
		_case_begin_4732637072:;
		{
			if ((!((*this)._field_o.operator jule::Ptr<_1e50b0492_Var>()->_field_cpp_linked))) {
				(*this)._field_s->_method_push_err(_7439_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_7439_d->_field_tag._field_kind)}));
			}
		}
		goto _match_end_4732636416;
		_case_end_4732637072:;
		_case_begin_4732635888:;
		{
			(*this)._field_s->_method_push_err(_7439_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_7439_d->_field_tag._field_kind)}));
		}
		goto _match_end_4732636416;
		_case_end_4732635888:;
		_match_end_4732636416:;
	}
	if (_7439_d->_field_args.len() == 0LL) {
		(*this)._field_s->_method_push_err(_7439_d->_field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;
	} else if (_7439_d->_field_args.len() > 1LL) {
		(*this)._field_s->_method_push_err(_7439_d->_field_args[1LL],jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	_1e3bad8dd_Token _10213_arg = _7439_d->_field_args[0LL];
	if (_10213_arg._field_id != 6LLU) {
		(*this)._field_s->_method_push_err(_10213_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_10213_arg._field_kind[0LL] != '\"') {
		(*this)._field_s->_method_push_err(_10213_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_7439_d->_field_args[0LL]._field_kind=_10213_arg._field_kind.slice(1LL,_10213_arg._field_kind.len() - 1LL);
}



inline void _1e4d6cb45_DirectiveChecker::_method_check_directive(jule::Ptr<_1e38d4ec7_Directive>& _11639_d) {
	{
		auto &_match_expr{ _11639_d->_field_tag._field_kind };
		if (!((jule::Str("cdef", 4)) == _match_expr)) { goto _case_end_4732665984; }
		_case_begin_4732665984:;
		{
			(*this)._method_check_cdef(_11639_d);
		}
		goto _match_end_4732665664;
		_case_end_4732665984:;
		if (!((jule::Str("typedef", 7)) == _match_expr)) { goto _case_end_4732666080; }
		_case_begin_4732666080:;
		{
			(*this)._method_check_typedef(_11639_d);
		}
		goto _match_end_4732665664;
		_case_end_4732666080:;
		if (!((jule::Str("derive", 6)) == _match_expr)) { goto _case_end_4732666176; }
		_case_begin_4732666176:;
		{
			(*this)._method_check_derive(_11639_d);
		}
		goto _match_end_4732665664;
		_case_end_4732666176:;
		if (!((jule::Str("namespace", 9)) == _match_expr)) { goto _case_end_4732666272; }
		_case_begin_4732666272:;
		{
			(*this)._method_check_namespace(_11639_d);
		}
		goto _match_end_4732665664;
		_case_end_4732666272:;
		if (!((jule::Str("build", 5)) == _match_expr || (jule::Str("pass", 4)) == _match_expr)) { goto _case_end_4732668672; }
		_case_begin_4732668672:;
		{
			(*this)._field_s->_method_push_err(_11639_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_11639_d->_field_tag._field_kind)}));
		}
		goto _match_end_4732665664;
		_case_end_4732668672:;
		_case_begin_4732664992:;
		{
			(*this)._field_s->_method_push_err(_11639_d->_field_tag,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
		}
		goto _match_end_4732665664;
		_case_end_4732664992:;
		_match_end_4732665664:;
	}
}



inline void _1e4d6cb45_DirectiveChecker::_method_check(void) {
	{
		auto &expr = (*this)._field_d;
		auto it = expr.begin();
		_iter_begin_4732676704:;
		if (it != expr.end()) {
			jule::Ptr<_1e38d4ec7_Directive> _1e4d6cb45_d = *it;
			{
				(*this)._method_check_directive(_1e4d6cb45_d);
			}
			_iter_next_4732676704:;
			++it;
			goto _iter_begin_4732676704;
		}
		_iter_end_4732676704:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d6cb45_DirectiveChecker &_Src) {
	_Stream << "DirectiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e4ee54e8_ImportInfo> _1e4ee54e8_Package::_method_find_package(jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1e4ee54e8_ImportInfo> _1e4ee54e8_Package::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1e4ee54e8_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1e50b0492_Var> _1e4ee54e8_Package::_method_find_var(jule::Str _26631_ident,jule::Bool _26643_cpp_linked) {
	return _1e4ee54e8_find_var_in_package((*this)._field_files,_26631_ident,_26643_cpp_linked);
}



inline jule::Ptr<_1e6420856_TypeAlias> _1e4ee54e8_Package::_method_find_type_alias(jule::Str _27238_ident,jule::Bool _27250_cpp_linked) {
	return _1e4ee54e8_find_type_alias_in_package((*this)._field_files,_27238_ident,_27250_cpp_linked);
}



inline jule::Ptr<_1e398ee72_Struct> _1e4ee54e8_Package::_method_find_struct(jule::Str _27834_ident,jule::Bool _27846_cpp_linked) {
	return _1e4ee54e8_find_struct_in_package((*this)._field_files,_27834_ident,_27846_cpp_linked);
}



inline jule::Ptr<_1e4b15a20_Fn> _1e4ee54e8_Package::_method_find_fn(jule::Str _28430_ident,jule::Bool _28442_cpp_linked) {
	return _1e4ee54e8_find_fn_in_package((*this)._field_files,_28430_ident,_28442_cpp_linked);
}



inline jule::Ptr<_1e4d61232_Trait> _1e4ee54e8_Package::_method_find_trait(jule::Str _29033_ident) {
	return _1e4ee54e8_find_trait_in_package((*this)._field_files,_29033_ident);
}



inline jule::Ptr<_1e4d62387_Enum> _1e4ee54e8_Package::_method_find_enum(jule::Str _29632_ident) {
	return _1e4ee54e8_find_enum_in_package((*this)._field_files,_29632_ident);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4ee54e8_Package &_Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e4ee54e8_ImportInfo> _1e5054722_Sema::_method_find_package(jule::Str _33635_ident) {
	return (*this)._field_file->_method_find_package(_33635_ident);
}



inline jule::Ptr<_1e4ee54e8_ImportInfo> _1e5054722_Sema::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1e4ee54e8_ImportInfo>)> _34637_selector) {
	return (*this)._field_file->_method_select_package(_34637_selector);
}



inline jule::Ptr<_1e50b0492_Var> _1e5054722_Sema::_method_find_var(jule::Str _35631_ident,jule::Bool _35643_cpp_linked) {
	jule::Ptr<_1e50b0492_Var> _35817_v = _1e4ee54e8_find_var_in_package((*this)._field_files,_35631_ident,_35643_cpp_linked);
	if (_35817_v != nullptr) {
		return _35817_v;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4732752192:;
		if (it != expr.end()) {
			jule::Ptr<_1e4ee54e8_ImportInfo> _1e5054722_imp = *it;
			{
				if ((!(_1e5054722_imp_is_lookupable(_1e5054722_imp,_35631_ident)))) {
					goto _iter_next_4732752192;
				}
				_35817_v=_1e5054722_imp->_method_find_var(_35631_ident,_35643_cpp_linked);
				if ((_35817_v != nullptr) && (*this)._method_is_accessible_define(_35817_v->_field_public,_35817_v->_field_token)) {
					return _35817_v;
				}
			}
			_iter_next_4732752192:;
			++it;
			goto _iter_begin_4732752192;
		}
		_iter_end_4732752192:;
	}
	return nullptr;
}



inline jule::Ptr<_1e6420856_TypeAlias> _1e5054722_Sema::_method_find_type_alias(jule::Str _38338_ident,jule::Bool _38350_cpp_linked) {
	jule::Ptr<_1e6420856_TypeAlias> _38517_ta = _1e4ee54e8_find_type_alias_in_package((*this)._field_files,_38338_ident,_38350_cpp_linked);
	if (_38517_ta != nullptr) {
		return _38517_ta;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4732761936:;
		if (it != expr.end()) {
			jule::Ptr<_1e4ee54e8_ImportInfo> _1e5054722_imp = *it;
			{
				if ((!(_1e5054722_imp_is_lookupable(_1e5054722_imp,_38338_ident)))) {
					goto _iter_next_4732761936;
				}
				_38517_ta=_1e5054722_imp->_method_find_type_alias(_38338_ident,_38350_cpp_linked);
				if ((_38517_ta != nullptr) && (*this)._method_is_accessible_define(_38517_ta->_field_public,_38517_ta->_field_token)) {
					return _38517_ta;
				}
			}
			_iter_next_4732761936:;
			++it;
			goto _iter_begin_4732761936;
		}
		_iter_end_4732761936:;
	}
	return nullptr;
}



inline jule::Ptr<_1e398ee72_Struct> _1e5054722_Sema::_method_find_struct(jule::Str _41034_ident,jule::Bool _41046_cpp_linked) {
	jule::Ptr<_1e398ee72_Struct> _41217_s = _1e4ee54e8_find_struct_in_package((*this)._field_files,_41034_ident,_41046_cpp_linked);
	if (_41217_s != nullptr) {
		return _41217_s;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4732769792:;
		if (it != expr.end()) {
			jule::Ptr<_1e4ee54e8_ImportInfo> _1e5054722_imp = *it;
			{
				if ((!(_1e5054722_imp_is_lookupable(_1e5054722_imp,_41034_ident)))) {
					goto _iter_next_4732769792;
				}
				_41217_s=_1e5054722_imp->_method_find_struct(_41034_ident,_41046_cpp_linked);
				if ((_41217_s != nullptr) && (*this)._method_is_accessible_define(_41217_s->_field_public,_41217_s->_field_token)) {
					return _41217_s;
				}
			}
			_iter_next_4732769792:;
			++it;
			goto _iter_begin_4732769792;
		}
		_iter_end_4732769792:;
	}
	return nullptr;
}



inline jule::Ptr<_1e4b15a20_Fn> _1e5054722_Sema::_method_find_fn(jule::Str _43730_ident,jule::Bool _43742_cpp_linked) {
	jule::Ptr<_1e4b15a20_Fn> _43917_f = _1e4ee54e8_find_fn_in_package((*this)._field_files,_43730_ident,_43742_cpp_linked);
	if (_43917_f != nullptr) {
		return _43917_f;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4732778064:;
		if (it != expr.end()) {
			jule::Ptr<_1e4ee54e8_ImportInfo> _1e5054722_imp = *it;
			{
				if ((!(_1e5054722_imp_is_lookupable(_1e5054722_imp,_43730_ident)))) {
					goto _iter_next_4732778064;
				}
				_43917_f=_1e5054722_imp->_method_find_fn(_43730_ident,_43742_cpp_linked);
				if ((_43917_f != nullptr) && (*this)._method_is_accessible_define(_43917_f->_field_public,_43917_f->_field_token)) {
					return _43917_f;
				}
			}
			_iter_next_4732778064:;
			++it;
			goto _iter_begin_4732778064;
		}
		_iter_end_4732778064:;
	}
	return nullptr;
}



inline jule::Ptr<_1e4d61232_Trait> _1e5054722_Sema::_method_find_trait(jule::Str _46433_ident) {
	jule::Ptr<_1e4d61232_Trait> _46617_t = _1e4ee54e8_find_trait_in_package((*this)._field_files,_46433_ident);
	if (_46617_t != nullptr) {
		return _46617_t;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4732785632:;
		if (it != expr.end()) {
			jule::Ptr<_1e4ee54e8_ImportInfo> _1e5054722_imp = *it;
			{
				if ((!(_1e5054722_imp_is_lookupable(_1e5054722_imp,_46433_ident)))) {
					goto _iter_next_4732785632;
				}
				_46617_t=_1e5054722_imp->_method_find_trait(_46433_ident);
				if ((_46617_t != nullptr) && (*this)._method_is_accessible_define(_46617_t->_field_public,_46617_t->_field_token)) {
					return _46617_t;
				}
			}
			_iter_next_4732785632:;
			++it;
			goto _iter_begin_4732785632;
		}
		_iter_end_4732785632:;
	}
	return nullptr;
}



inline jule::Ptr<_1e4d62387_Enum> _1e5054722_Sema::_method_find_enum(jule::Str _49132_ident) {
	jule::Ptr<_1e4d62387_Enum> _49317_e = _1e4ee54e8_find_enum_in_package((*this)._field_files,_49132_ident);
	if (_49317_e != nullptr) {
		return _49317_e;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4732793088:;
		if (it != expr.end()) {
			jule::Ptr<_1e4ee54e8_ImportInfo> _1e5054722_imp = *it;
			{
				if ((!(_1e5054722_imp_is_lookupable(_1e5054722_imp,_49132_ident)))) {
					goto _iter_next_4732793088;
				}
				_49317_e=_1e5054722_imp->_method_find_enum(_49132_ident);
				if ((_49317_e != nullptr) && (*this)._method_is_accessible_define(_49317_e->_field_public,_49317_e->_field_token)) {
					return _49317_e;
				}
			}
			_iter_next_4732793088:;
			++it;
			goto _iter_begin_4732793088;
		}
		_iter_end_4732793088:;
	}
	return nullptr;
}



inline jule::Bool _1e5054722_Sema::_method_is_flag(jule::Int _51522_flags) {
	return ((*this)._field_flags & _51522_flags) == _51522_flags;
}



inline void _1e5054722_Sema::_method_set_current_file(jule::Ptr<_1e5291035_SymbolTable> _51739_f) {
	(*this)._field_file=_51739_f;
}



inline void _1e5054722_Sema::_method_push_err(_1e3bad8dd_Token _51927_token,jule::Str _51941_fmt,jule::Slice<jule::Any> _51954_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.push(_1e5054722_compiler_err(_51927_token,true,_51941_fmt,_51954_args));
}



inline void _1e5054722_Sema::_method_push_suggestion(jule::Str _52434_fmt,jule::Slice<jule::Any> _52447_args) {
	{
		_1e5054722_push_suggestion((&((*this)._field_errors[(*this)._field_errors.len() - 1LL])),_52434_fmt,_52447_args);
	}
}



inline jule::Bool _1e5054722_Sema::_method_is_accessible_define(jule::Bool _52935_public,_1e3bad8dd_Token _52949_token) {
	return (_52935_public || (_52949_token._field_file == nullptr)) || ((*this)._field_file->_field_file->_method_dir() == _52949_token._field_file->_method_dir());
}



inline jule::Bool _1e5054722_Sema::_method_is_duplicated_ident(jule::Uintptr _53634_itself,jule::Str _53651_ident,jule::Bool _53663_cpp_linked) {
	{
		auto &expr = (*this)._field_files;
		auto it = expr.begin();
		_iter_begin_4732817440:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> &_1e5054722_f = *it;
			{
				if (_1e5054722_f->_method_is_duplicated_ident(_53634_itself,_53651_ident,_53663_cpp_linked)) {
					return true;
				}
				{
					auto &expr = _1e5054722_f->_field_imports;
					auto it = expr.begin();
					_iter_begin_4732821696:;
					if (it != expr.end()) {
						jule::Ptr<_1e4ee54e8_ImportInfo> &_1e5054722_imp = *it;
						{
							{
								auto &expr = _1e5054722_imp->_field_selected;
								auto it = expr.begin();
								_iter_begin_4732823888:;
								if (it != expr.end()) {
									_1e3bad8dd_Token &_1e5054722_selected = *it;
									{
										if (_1e5054722_selected._field_kind == _53651_ident) {
											return true;
										}
									}
									_iter_next_4732823888:;
									++it;
									goto _iter_begin_4732823888;
								}
								_iter_end_4732823888:;
							}
						}
						_iter_next_4732821696:;
						++it;
						goto _iter_begin_4732821696;
					}
					_iter_end_4732821696:;
				}
			}
			_iter_next_4732817440:;
			++it;
			goto _iter_begin_4732817440;
		}
		_iter_end_4732817440:;
	}
	return false;
}



inline void _1e5054722_Sema::_method_check_directives(jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>& _55341_d,jule::Any _55362_o) {
	_1e4d6cb45_DirectiveChecker _55417_dc = _1e4d6cb45_DirectiveChecker(this->self,_55341_d,_55362_o);
	_55417_dc._method_check();
}



inline jule::Bool _1e5054722_Sema::_method_check_generic_quantity(jule::Int _56241_required,jule::Int _56256_given,_1e3bad8dd_Token _56268_error_token) {
	jule::Bool _56290_ok = jule::Bool();
	{
		if (!(((_56241_required == 0LL) && (_56256_given > 0LL)))) { goto _case_end_4732835616; }
		_case_begin_4732835616:;
		{
			(*this)._method_push_err(_56268_error_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
			_56290_ok = false;
			return _56290_ok;
		}
		goto _match_end_4732833984;
		_case_end_4732835616:;
		if (!(((_56241_required > 0LL) && (_56256_given == 0LL)))) { goto _case_end_4732835776; }
		_case_begin_4732835776:;
		{
			(*this)._method_push_err(_56268_error_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
			_56290_ok = false;
			return _56290_ok;
		}
		goto _match_end_4732833984;
		_case_end_4732835776:;
		if (!((_56241_required < _56256_given))) { goto _case_end_4732835888; }
		_case_begin_4732835888:;
		{
			(*this)._method_push_err(_56268_error_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
			_56290_ok = false;
			return _56290_ok;
		}
		goto _match_end_4732833984;
		_case_end_4732835888:;
		if (!((_56241_required > _56256_given))) { goto _case_end_4732835136; }
		_case_begin_4732835136:;
		{
			(*this)._method_push_err(_56268_error_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
			_56290_ok = false;
			return _56290_ok;
		}
		goto _match_end_4732833984;
		_case_end_4732835136:;
		_case_begin_4732834160:;
		{
			_56290_ok = true;
			return _56290_ok;
		}
		goto _match_end_4732833984;
		_case_end_4732834160:;
		_match_end_4732833984:;
	}
}



inline jule::Bool _1e5054722_Sema::_method_is_duplicated_import_selection(jule::Uintptr _58545_itself,jule::Str _58562_ident) {
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4732845184:;
		if (it != expr.end()) {
			jule::Ptr<_1e4ee54e8_ImportInfo> &_1e5054722_imp = *it;
			{
				if (static_cast<jule::Uintptr>(_1e5054722_imp) == _58545_itself) {
					goto _iter_end_4732845184;
				}
				if (_1e5054722_imp->_method_exist_ident(_58562_ident)) {
					return true;
				}
			}
			_iter_next_4732845184:;
			++it;
			goto _iter_begin_4732845184;
		}
		_iter_end_4732845184:;
	}
	return false;
}



inline jule::Any _1e5054722_Sema::_method_get_import_def(jule::Str _60029_ident,jule::Ptr<_1e4ee54e8_ImportInfo>& _60046_imp) {
	if (_1c8ac49ea_find_package_builtin_def(_60046_imp->_field_link_path,_60029_ident) != nullptr) {
		return jule::Any(true);
	}
	{
		auto &expr = _60046_imp->_field_package->_field_files;
		auto it = expr.begin();
		_iter_begin_4732851408:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e5054722_f = *it;
			{
				
				jule::Any _60721_def = _1e5054722_f->_method_def_by_ident(_60029_ident,false);
				if (_60721_def != nullptr) {
					return _60721_def;
				}
			}
			_iter_next_4732851408:;
			++it;
			goto _iter_begin_4732851408;
		}
		_iter_end_4732851408:;
	}
	return jule::Any(nullptr);
}



inline void _1e5054722_Sema::_method_check_import_selections(jule::Ptr<_1e4ee54e8_ImportInfo>& _61647_imp) {
	{
		auto &expr = _61647_imp->_field_selected;
		auto it = expr.begin();
		_iter_begin_4732858608:;
		if (it != expr.end()) {
			_1e3bad8dd_Token &_1e5054722_ident = *it;
			{
				if (_1e5054722_ident._field_kind == jule::Str("self", 4)) {
					goto _iter_next_4732858608;
				}
				if ((*this)._method_is_duplicated_import_selection(static_cast<jule::Uintptr>(_61647_imp),_1e5054722_ident._field_kind)) {
					(*this)._method_push_err(_1e5054722_ident,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1e5054722_ident._field_kind)}));
					(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					goto _iter_next_4732858608;
				}
				jule::Any _62821_def = (*this)._method_get_import_def(_1e5054722_ident._field_kind,_61647_imp);
				{
					auto &_match_expr{ _62821_def };
					if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_4732866816; }
					_case_begin_4732866816:;
					{
						goto _iter_next_4732858608;
					}
					goto _match_end_4732866384;
					_case_end_4732866816:;
					if (!(_match_expr.type_is<jule::Ptr<_1e50b0492_Var>>())) { goto _case_end_4732866912; }
					_case_begin_4732866912:;
					{
						jule::Ptr<_1e50b0492_Var> _63525_v = _62821_def.operator jule::Ptr<_1e50b0492_Var>();
						if ((*this)._method_is_accessible_define(_63525_v->_field_public,_63525_v->_field_token)) {
							goto _iter_next_4732858608;
						}
					}
					goto _match_end_4732866384;
					_case_end_4732866912:;
					if (!(_match_expr.type_is<jule::Ptr<_1e6420856_TypeAlias>>())) { goto _case_end_4732868736; }
					_case_begin_4732868736:;
					{
						jule::Ptr<_1e6420856_TypeAlias> _64125_ta = _62821_def.operator jule::Ptr<_1e6420856_TypeAlias>();
						if ((*this)._method_is_accessible_define(_64125_ta->_field_public,_64125_ta->_field_token)) {
							goto _iter_next_4732858608;
						}
					}
					goto _match_end_4732866384;
					_case_end_4732868736:;
					if (!(_match_expr.type_is<jule::Ptr<_1e398ee72_Struct>>())) { goto _case_end_4732868832; }
					_case_begin_4732868832:;
					{
						jule::Ptr<_1e398ee72_Struct> _64725_strct = _62821_def.operator jule::Ptr<_1e398ee72_Struct>();
						if ((*this)._method_is_accessible_define(_64725_strct->_field_public,_64725_strct->_field_token)) {
							goto _iter_next_4732858608;
						}
					}
					goto _match_end_4732866384;
					_case_end_4732868832:;
					if (!(_match_expr.type_is<jule::Ptr<_1e4d61232_Trait>>())) { goto _case_end_4732868928; }
					_case_begin_4732868928:;
					{
						jule::Ptr<_1e4d61232_Trait> _65325_t = _62821_def.operator jule::Ptr<_1e4d61232_Trait>();
						if ((*this)._method_is_accessible_define(_65325_t->_field_public,_65325_t->_field_token)) {
							goto _iter_next_4732858608;
						}
					}
					goto _match_end_4732866384;
					_case_end_4732868928:;
					if (!(_match_expr.type_is<jule::Ptr<_1e4d62387_Enum>>())) { goto _case_end_4732869024; }
					_case_begin_4732869024:;
					{
						jule::Ptr<_1e4d62387_Enum> _65925_e = _62821_def.operator jule::Ptr<_1e4d62387_Enum>();
						if ((*this)._method_is_accessible_define(_65925_e->_field_public,_65925_e->_field_token)) {
							goto _iter_next_4732858608;
						}
					}
					goto _match_end_4732866384;
					_case_end_4732869024:;
					if (!(_match_expr.type_is<jule::Ptr<_1e4b15a20_Fn>>())) { goto _case_end_4732869120; }
					_case_begin_4732869120:;
					{
						jule::Ptr<_1e4b15a20_Fn> _66525_f = _62821_def.operator jule::Ptr<_1e4b15a20_Fn>();
						if ((*this)._method_is_accessible_define(_66525_f->_field_public,_66525_f->_field_token)) {
							goto _iter_next_4732858608;
						}
					}
					goto _match_end_4732866384;
					_case_end_4732869120:;
					_case_begin_4732861600:;
					{
						(*this)._method_push_err(_1e5054722_ident,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_1e5054722_ident._field_kind)}));
						goto _iter_next_4732858608;
					}
					goto _match_end_4732866384;
					_case_end_4732861600:;
					_match_end_4732866384:;
				}
				(*this)._method_push_err(_1e5054722_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_1e5054722_ident._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
			}
			_iter_next_4732858608:;
			++it;
			goto _iter_begin_4732858608;
		}
		_iter_end_4732858608:;
	}
}



inline jule::Bool _1e5054722_Sema::_method_is_use_alias_duplication(jule::Ptr<_1e4ee54e8_ImportInfo>& _68044_imp) {
	if (_68044_imp->_field_alias.len() == 0LL) {
		return false;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4732890528:;
		if (it != expr.end()) {
			jule::Ptr<_1e4ee54e8_ImportInfo> _1e5054722_imp2 = *it;
			{
				if (_1e5054722_imp2 == _68044_imp) {
					goto _iter_end_4732890528;
				}
				if (_1e5054722_imp2->_field_alias == _68044_imp->_field_alias) {
					return true;
				}
			}
			_iter_next_4732890528:;
			++it;
			goto _iter_begin_4732890528;
		}
		_iter_end_4732890528:;
	}
	return false;
}



inline jule::Bool _1e5054722_Sema::_method_check_import(jule::Ptr<_1e4ee54e8_ImportInfo>& _69636_imp) {
	if (_69636_imp->_field_cpp_linked || (_69636_imp->_field_package->_field_files.len() == 0LL)) {
		return true;
	}
	if ((*this)._method_is_use_alias_duplication(_69636_imp)) {
		(*this)._method_push_err(_69636_imp->_field_token,jule::Str("identifier \"@\" is already used for another use declaration", 58),jule::Slice<jule::Any>({jule::Any(_69636_imp->_field_alias)}));
		(*this)._method_push_suggestion(jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	}
	if (_69636_imp->_field_duplicate) {
		return true;
	}
	jule::Ptr<_1e5054722_Sema> _71017_sema = jule::new_struct_ptr<_1e5054722_Sema>(new( std::nothrow ) _1e5054722_Sema(jule::Slice<_1e24777a2_Log>(),jule::Slice<jule::Ptr<_1e5291035_SymbolTable>>(),jule::Ptr<_1e5291035_SymbolTable>(),(*this)._field_flags));
	_71017_sema->_method_check(_69636_imp->_field_package->_field_files);
	if (_71017_sema->_field_errors.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_71017_sema->_field_errors);
		return false;
	}
	(*this)._method_check_import_selections(_69636_imp);
	return true;
}



inline void _1e5054722_Sema::_method_check_imports(void) {
	{
		auto &expr = (*this)._field_files;
		auto it = expr.begin();
		_iter_begin_4732908976:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e5054722_file = *it;
			{
				(*this)._method_set_current_file(_1e5054722_file);
				{
					auto &expr = _1e5054722_file->_field_imports;
					auto it = expr.begin();
					_iter_begin_4732911792:;
					if (it != expr.end()) {
						jule::Ptr<_1e4ee54e8_ImportInfo> _1e5054722_imp = *it;
						{
							jule::Bool _72821_ok = (*this)._method_check_import(_1e5054722_imp);
							if ((!(_72821_ok))) {
								(*this)._method_push_err(_1e5054722_imp->_field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_1e5054722_imp->_field_link_path)}));
								return;
							}
						}
						_iter_next_4732911792:;
						++it;
						goto _iter_begin_4732911792;
					}
					_iter_end_4732911792:;
				}
			}
			_iter_next_4732908976:;
			++it;
			goto _iter_begin_4732908976;
		}
		_iter_end_4732908976:;
	}
}



inline void _1e5054722_Sema::_method_impl_file_impls(void) {
	{
		auto &expr = this->self->_field_file->_field_impls;
		auto it = expr.begin();
		_iter_begin_4732917072:;
		if (it != expr.end()) {
			jule::Ptr<_1e39e721b_Impl> _1e5054722_imp = *it;
			{
				this->self->_method_impl_impl(_1e5054722_imp);
			}
			_iter_next_4732917072:;
			++it;
			goto _iter_begin_4732917072;
		}
		_iter_end_4732917072:;
	}
}



inline void _1e5054722_Sema::_method_impl_impls(void) {
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4732921296:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e5054722_file = *it;
			{
				this->self->_method_set_current_file(_1e5054722_file);
				this->self->_method_impl_file_impls();
			}
			_iter_next_4732921296:;
			++it;
			goto _iter_begin_4732921296;
		}
		_iter_end_4732921296:;
	}
}



inline void _1e5054722_Sema::_method_check_enums(void) {
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4732925216:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e5054722_file = *it;
			{
				this->self->_method_set_current_file(_1e5054722_file);
				this->self->_method_check_enum_decls();
			}
			_iter_next_4732925216:;
			++it;
			goto _iter_begin_4732925216;
		}
		_iter_end_4732925216:;
	}
}



inline jule::Bool _1e5054722_Sema::_method_check_type_with_refers(jule::Ptr<_1e6420856_TypeSymbol>& _76147_t,jule::Trait<_1e5425ab0_Lookup> _76213_l,jule::Ptr<_1e6420856_Referencer> _76228_referencer) {
	jule::Bool _76255_ok = jule::Bool();
	if (_76147_t->_method_checked()) {
		_76255_ok = true;
		return _76255_ok;
	}
	_1e6420856_TypeChecker _76617_tc = _1e6420856_TypeChecker(this->self,_76213_l,_76228_referencer,_1e3bad8dd_Token(),jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>>(),jule::Slice<jule::Ptr<_1e6420856_TypeAlias>>(),jule::Bool());
	_76617_tc._method_check(_76147_t);
	_76255_ok = _76147_t->_method_checked();
	return _76255_ok;
}



inline jule::Bool _1e5054722_Sema::_method_check_type(jule::Ptr<_1e6420856_TypeSymbol>& _77735_t,jule::Trait<_1e5425ab0_Lookup> _77755_l) {
	jule::Bool _77768_ok = jule::Bool();
	_77768_ok = this->self->_method_check_type_with_refers(_77735_t,_77755_l,nullptr);
	return _77768_ok;
}



inline jule::Ptr<_1e6420856_TypeKind> _1e5054722_Sema::_method_build_type_with_generics(jule::Ptr<_1e38d4ec7_TypeDecl>& _78349_t,jule::Slice<jule::Ptr<_1e6420856_TypeAlias>> _78413_generics) {
	jule::Ptr<_1e6420856_TypeChecker> _78517_tc = jule::new_struct<_1e6420856_TypeChecker>(new( std::nothrow ) _1e6420856_TypeChecker(this->self,this->self,jule::Ptr<_1e6420856_Referencer>(),_1e3bad8dd_Token(),jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>>(),_78413_generics,jule::Bool()));
	return _78517_tc->_method_check_decl(_78349_t);
}



inline jule::Ptr<_1e6420856_TypeKind> _1e5054722_Sema::_method_build_type(jule::Ptr<_1e38d4ec7_TypeDecl>& _79435_t) {
	return this->self->_method_build_type_with_generics(_79435_t,nullptr);
}



inline jule::Ptr<_1e50ac4b1_Eval> _1e5054722_Sema::_method_evalpd(jule::Trait<_1e5425ab0_Lookup> _80030_l,jule::Ptr<_1e6420856_TypeKind> _80045_p,jule::Ptr<_1e50b0492_Var> _80063_owner) {
	jule::Ptr<_1e50ac4b1_Eval> _80117_e = jule::new_struct_ptr<_1e50ac4b1_Eval>(new( std::nothrow ) _1e50ac4b1_Eval(this->self,_80030_l,jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),_80063_owner));
	{
		auto &_match_expr{ _80030_l };
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_ScopeChecker>>())) { goto _case_end_4732969936; }
		_case_begin_4732969936:;
		{
			_80117_e->_field_unsafety=_80030_l.operator jule::Ptr<_1e4d6ee22_ScopeChecker>()->_method_is_unsafe();
		}
		goto _match_end_4732971312;
		_case_end_4732969936:;
		_match_end_4732971312:;
	}
	_80117_e->_field_prefix=_80045_p;
	return _80117_e;
}



inline jule::Ptr<_1e50ac4b1_Eval> _1e5054722_Sema::_method_evalp(jule::Trait<_1e5425ab0_Lookup> _81829_l,jule::Ptr<_1e6420856_TypeKind> _81844_p) {
	return this->self->_method_evalpd(_81829_l,_81844_p,nullptr);
}



inline jule::Ptr<_1e50ac4b1_Eval> _1e5054722_Sema::_method_eval(jule::Trait<_1e5425ab0_Lookup> _82328_l) {
	return this->self->_method_evalp(_82328_l,nullptr);
}



inline void _1e5054722_Sema::_method_check_assign_type(jule::Bool _82737_dest_is_ref,jule::Ptr<_1e6420856_TypeKind>& _82761_dest,jule::Ptr<_1e50ac4b1_Data>& _82814_d,_1e3bad8dd_Token _82828_error_token) {
	if (_82737_dest_is_ref) {
		if ((!(_82761_dest->_method_equals(_82814_d->_field_kind)))) {
			this->self->_method_push_err(_82828_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_82761_dest->_method_to_str()),jule::Any(_82814_d->_field_kind->_method_to_str())}));
		}
	} else {
		jule::Ptr<_1e522c29b_AssignTypeChecker> _83421_atc = jule::new_struct<_1e522c29b_AssignTypeChecker>(new( std::nothrow ) _1e522c29b_AssignTypeChecker(this->self,_82761_dest,_82814_d,_82828_error_token));
		jule::Bool _84017_ok = _83421_atc->_method_check();
		if ((!(_84017_ok))) {
			return;
		}
	}
	if ((!(_82814_d->_method_is_const())) || (_82761_dest->_method_prim() == nullptr)) {
		return;
	}
	jule::Str _85017_kind = _82761_dest->_method_prim()->_field_kind;
	{
		if (!((_1c8c8ad04_is_sig_int(_85017_kind)))) { goto _case_end_4732991424; }
		_case_begin_4732991424:;
		{
			_82814_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_82814_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4732991280;
		_case_end_4732991424:;
		if (!((_1c8c8ad04_is_unsig_int(_85017_kind)))) { goto _case_end_4732991520; }
		_case_begin_4732991520:;
		{
			_82814_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_82814_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4732991280;
		_case_end_4732991520:;
		if (!((_1c8c8ad04_is_float(_85017_kind)))) { goto _case_end_4732991616; }
		_case_begin_4732991616:;
		{
			_82814_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_82814_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4732991280;
		_case_end_4732991616:;
		_match_end_4732991280:;
	}
}



inline jule::Bool _1e5054722_Sema::_method_check_type_compatibility(jule::Ptr<_1e6420856_TypeKind>& _85949_dest,jule::Ptr<_1e6420856_TypeKind>& _86014_src,_1e3bad8dd_Token& _86035_error_token) {
	if (_86014_src == nullptr) {
		this->self->_method_push_err(_86035_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_85949_dest->_method_to_str()),jule::Any(_86014_src->_method_to_str())}));
		return false;
	}
	if (_86014_src->_method_tup() != nullptr) {
		this->self->_method_push_err(_86035_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_85949_dest->_method_to_str()),jule::Any(_86014_src->_method_to_str())}));
		return false;
	}
	_1e522c29b_TypeCompatibilityChecker _87417_tcc = _1e522c29b_TypeCompatibilityChecker(this->self,_85949_dest,_86014_src,_86035_error_token);
	if (_87417_tcc._method_check()) {
		return true;
	}
	this->self->_method_push_err(_86035_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_85949_dest->_method_to_str()),jule::Any(_86014_src->_method_to_str())}));
	return false;
}



inline jule::Ptr<_1e6420856_TypeKind> _1e5054722_Sema::_method_build_non_generic_type_kind(jule::Ptr<_1e38d4ec7_TypeDecl>& _89552_ast,jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>>& _89614_generics) {
	jule::Ptr<_1e6420856_TypeChecker> _89717_tc = jule::new_struct<_1e6420856_TypeChecker>(new( std::nothrow ) _1e6420856_TypeChecker(this->self,this->self,jule::Ptr<_1e6420856_Referencer>(),_1e3bad8dd_Token(),_89614_generics,jule::Slice<jule::Ptr<_1e6420856_TypeAlias>>(),jule::Bool()));
	return _89717_tc->_method_check_decl(_89552_ast);
}



inline void _1e5054722_Sema::_method_build_fn_non_generic_type_kinds(jule::Ptr<_1e4b15a20_FnIns>& _90556_f) {
	jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>> _90617_generics = nullptr;
	if (_90556_f->_field_decl->_method_is_method()) {
		_90617_generics=jule::append(_90556_f->_field_decl->_field_generics,_90556_f->_field_decl->_field_owner->_field_generics);
	} else {
		_90617_generics=_90556_f->_field_decl->_field_generics;
	}
	{
		auto &expr = _90556_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4733018992:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_ParamIns> _1e5054722_p = *it;
			{
				if ((!(_1e5054722_p->_field_decl->_method_is_self()))) {
					_1e5054722_p->_field_kind=this->self->_method_build_non_generic_type_kind(_1e5054722_p->_field_decl->_field_kind->_field_decl,_90617_generics);
				}
			}
			_iter_next_4733018992:;
			++it;
			goto _iter_begin_4733018992;
		}
		_iter_end_4733018992:;
	}
	if ((!(_90556_f->_field_decl->_method_is_void()))) {
		_90556_f->_field_result=this->self->_method_build_non_generic_type_kind(_90556_f->_field_decl->_field_result->_field_kind->_field_decl,_90617_generics);
	}
}



inline jule::Ptr<_1e4b15a20_FnIns> _1e5054722_Sema::_method_get_trait_check_fn_kind(jule::Ptr<_1e4b15a20_Fn>& _92348_f) {
	jule::Ptr<_1e4b15a20_FnIns> _92417_ins = _92348_f->_method_instance_force();
	this->self->_method_build_fn_non_generic_type_kinds(_92417_ins);
	return _92417_ins;
}



inline jule::Bool _1e5054722_Sema::_method_reload_fn_ins_types(jule::Ptr<_1e4b15a20_FnIns>& _92944_f) {
	jule::Bool _92957_ok = jule::Bool();
	if (_92944_f->_method_is_builtin() || _92944_f->_method_is_anon()) {
		_92957_ok = true;
		return _92957_ok;
	}
	jule::Ptr<_1e5054722_Sema> _93417_sema = _92944_f->_field_decl->_field_sema;
	jule::Ptr<_1e5291035_SymbolTable> _93617_old = _92944_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_92944_f->_field_decl->_field_sema->_method_set_current_file(_93617_old);
	});
	jule::Ptr<_1e5291035_SymbolTable> _93817_file = _1e5054722_find_file(_92944_f->_field_decl->_field_sema->_field_files,_92944_f->_field_decl->_field_token._field_file);
	if (_93817_file != nullptr) {
		_92944_f->_field_decl->_field_sema->_method_set_current_file(_93817_file);
	}
	jule::I64 _94317_size = _92944_f->_field_generics.len();
	if ((_92944_f->_field_decl != nullptr) && (_92944_f->_field_decl->_field_owner != nullptr)) {
		_94317_size+=static_cast<jule::I64>(_92944_f->_field_decl->_field_owner->_field_generics.len());
	}
	jule::Slice<jule::Ptr<_1e6420856_TypeAlias>> _94817_generics = jule::Slice<jule::Ptr<_1e6420856_TypeAlias>>::alloc(0LL,_94317_size);
	{
		auto &expr = _92944_f->_field_generics;
		auto it = expr.begin();
		_iter_begin_4733049504:;
		if (it != expr.end()) {
			jule::Int _1e5054722_i = it - expr.begin();
			jule::Ptr<_1e6420856_TypeKind> _1e5054722_g = *it;
			{
				_94817_generics.push(jule::new_struct<_1e6420856_TypeAlias>(new( std::nothrow ) _1e6420856_TypeAlias(jule::Ptr<_1e38d4ec7_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_1e3bad8dd_Token(),_92944_f->_field_decl->_field_generics[_1e5054722_i]->_field_ident,jule::new_struct<_1e6420856_TypeSymbol>(new( std::nothrow ) _1e6420856_TypeSymbol(jule::Ptr<_1e38d4ec7_TypeDecl>(),_1e5054722_g)),jule::Str(),jule::Slice<jule::Any>())));
			}
			_iter_next_4733049504:;
			++it;
			_1e5054722_i++;
			goto _iter_begin_4733049504;
		}
		_iter_end_4733049504:;
	}
	if ((_92944_f->_field_decl != nullptr) && (_92944_f->_field_decl->_field_owner != nullptr)) {
		jule::Ptr<_1e398ee72_StructIns> _96021_owner = _92944_f->_field_owner;
		{
			auto &expr = _96021_owner->_field_generics;
			auto it = expr.begin();
			_iter_begin_4733052816:;
			if (it != expr.end()) {
				jule::Int _1e5054722_i = it - expr.begin();
				jule::Ptr<_1e6420856_TypeKind> _1e5054722_g = *it;
				{
					_94817_generics.push(jule::new_struct<_1e6420856_TypeAlias>(new( std::nothrow ) _1e6420856_TypeAlias(jule::Ptr<_1e38d4ec7_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_1e3bad8dd_Token(),_96021_owner->_field_decl->_field_generics[_1e5054722_i]->_field_ident,jule::new_struct<_1e6420856_TypeSymbol>(new( std::nothrow ) _1e6420856_TypeSymbol(jule::Ptr<_1e38d4ec7_TypeDecl>(),_1e5054722_g)),jule::Str(),jule::Slice<jule::Any>())));
				}
				_iter_next_4733052816:;
				++it;
				_1e5054722_i++;
				goto _iter_begin_4733052816;
			}
			_iter_end_4733052816:;
		}
	}
	_92957_ok=true;
	{
		auto &expr = _92944_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4733051232:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_ParamIns> _1e5054722_p = *it;
			{
				if ((!(_1e5054722_p->_field_decl->_method_is_self()))) {
					_1e5054722_p->_field_kind=_93417_sema->_method_build_type_with_generics(_1e5054722_p->_field_decl->_field_kind->_field_decl,_94817_generics);
					if (_1e5054722_p->_field_kind != nullptr) {
						_1e5054722_p->_field_kind->_field_variadic=_1e5054722_p->_field_decl->_field_variadic;
						if (_1e5054722_p->_field_decl->_field_reference && (!(_1e6420856_is_valid_for_ref(_1e5054722_p->_field_kind)))) {
							this->self->_method_push_err(_1e5054722_p->_field_decl->_field_token,jule::Str("references cannot points to \"@\" type", 36),jule::Slice<jule::Any>({jule::Any(_1e5054722_p->_field_kind->_method_to_str())}));
						}
					} else {
						_92957_ok=false;
					}
				}
			}
			_iter_next_4733051232:;
			++it;
			goto _iter_begin_4733051232;
		}
		_iter_end_4733051232:;
	}
	if ((!(_92944_f->_field_decl->_method_is_void()))) {
		_92944_f->_field_result=_93417_sema->_method_build_type_with_generics(_92944_f->_field_decl->_field_result->_field_kind->_field_decl,_94817_generics);
		_92957_ok=(_92944_f->_field_result != nullptr) && _92957_ok;
	}
	if (_93417_sema != this->self) {
		this->self->_field_errors=jule::append(this->self->_field_errors,_93417_sema->_field_errors);
		_93417_sema->_field_errors=nullptr;
	}
	return _92957_ok;
}



inline void _1e5054722_Sema::_method_check_ref_validity_for_init_expr(jule::Bool _99952_left_mut,jule::Ptr<_1e50ac4b1_Data>& _99969_d,_1e3bad8dd_Token& _99984_error_token) {
	{
		auto &_match_expr{ _99969_d->_field_model };
		if (!(_match_expr.type_is<jule::Ptr<_1e50b0492_Var>>())) { goto _case_end_4733078416; }
		goto _match_end_4733077664;
		_case_end_4733078416:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_TraitSubIdentExprModel>>())) { goto _case_end_4733078016; }
		_case_begin_4733078016:;
		{
			jule::Ptr<_1e4d70a6b_TraitSubIdentExprModel> _100517_model = _99969_d->_field_model.operator jule::Ptr<_1e4d70a6b_TraitSubIdentExprModel>();
			if ((!(_1e5054722_is_valid_model_for_ref(_100517_model->_field_expr)))) {
				this->self->_method_push_err(_99984_error_token,jule::Str("you cannot use \"@\" reference variable, because reference is dangling", 68),jule::Slice<jule::Any>({jule::Any(_100517_model->_field_ident)}));
			}
		}
		goto _match_end_4733077664;
		_case_end_4733078016:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_StructSubIdentExprModel>>())) { goto _case_end_4733078112; }
		_case_begin_4733078112:;
		{
			jule::Ptr<_1e4d70a6b_StructSubIdentExprModel> _101117_model = _99969_d->_field_model.operator jule::Ptr<_1e4d70a6b_StructSubIdentExprModel>();
			if ((!(_1e5054722_is_valid_model_for_ref(_101117_model->_field_expr)))) {
				this->self->_method_push_err(_99984_error_token,jule::Str("you cannot use \"@\" reference variable, because reference is dangling", 68),jule::Slice<jule::Any>({jule::Any(_101117_model->_field_field->_field_decl->_field_ident)}));
			}
		}
		goto _match_end_4733077664;
		_case_end_4733078112:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_1e4d70a6b_CommonSubIdentExprModel>>())) { goto _case_end_4733078208; }
		_case_begin_4733078208:;
		{
			this->self->_method_push_err(_99984_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
		}
		goto _match_end_4733077664;
		_case_end_4733078208:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_UnaryExprModel>>())) { goto _case_end_4733078304; }
		_case_begin_4733078304:;
		{
			jule::Ptr<_1e4d70a6b_UnaryExprModel> _102117_unary = _99969_d->_field_model.operator jule::Ptr<_1e4d70a6b_UnaryExprModel>();
			if (_102117_unary->_field_op == jule::Str("*", 1)) {
				goto _match_end_4733077664;
			}
			goto _case_begin_4733077200;
		}
		goto _match_end_4733077664;
		_case_end_4733078304:;
		_case_begin_4733077200:;
		{
			this->self->_method_push_err(_99984_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
		}
		goto _match_end_4733077664;
		_case_end_4733077200:;
		_match_end_4733077664:;
	}
	if (_99952_left_mut && (!(_99969_d->_field_mutable))) {
		this->self->_method_push_err(_99984_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
	}
}



inline void _1e5054722_Sema::_method_check_validity_for_init_expr(jule::Bool _103748_left_mut,jule::Bool _103764_left_ref,jule::Ptr<_1e6420856_TypeKind>& _103810_left_kind,jule::Ptr<_1e50ac4b1_Data>& _103837_d,_1e3bad8dd_Token& _103852_error_token) {
	if ((_103748_left_mut && (!(_103837_d->_field_mutable))) && _103837_d->_field_kind->_method_mutable()) {
		this->self->_method_push_err(_103852_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>());
	}
	if (_103764_left_ref) {
		this->self->_method_check_ref_validity_for_init_expr(_103748_left_mut,_103837_d,_103852_error_token);
	}
	jule::Ptr<_1e522c29b_AssignTypeChecker> _104617_atc = jule::new_struct<_1e522c29b_AssignTypeChecker>(new( std::nothrow ) _1e522c29b_AssignTypeChecker(this->self,jule::Ptr<_1e6420856_TypeKind>(),_103837_d,_103852_error_token));
	_104617_atc->_method_check_validity();
}



inline jule::Bool _1e5054722_Sema::_method_check_type_alias_decl_kind(jule::Ptr<_1e6420856_TypeAlias>& _105451_ta,jule::Trait<_1e5425ab0_Lookup> _105471_l) {
	jule::Bool _105484_ok = jule::Bool();
	jule::Ptr<_1e5291035_SymbolTable> _105517_old = this->self->_field_file;
	__JULE_DEFER({
		this->self->_method_set_current_file(_105517_old);
	});
	jule::Ptr<_1e5291035_SymbolTable> _105717_file = _1e5054722_find_file(this->self->_field_files,_105451_ta->_field_token._field_file);
	if (_105717_file != nullptr) {
		this->self->_method_set_current_file(_105717_file);
	}
	_105484_ok=this->self->_method_check_type_with_refers(_105451_ta->_field_kind,_105471_l,jule::new_struct<_1e6420856_Referencer>(new( std::nothrow ) _1e6420856_Referencer(_105451_ta->_field_ident,jule::Any(_105451_ta),(&(_105451_ta->_field_refers)))));
	if ((_105484_ok && (_105451_ta->_field_kind->_field_kind->_method_arr() != nullptr)) && _105451_ta->_field_kind->_field_kind->_method_arr()->_field_auto) {
		this->self->_method_push_err(_105451_ta->_field_kind->_field_decl->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_105484_ok=false;
	}
	return _105484_ok;
}



inline void _1e5054722_Sema::_method_check_type_alias_decl(jule::Ptr<_1e6420856_TypeAlias>& _107446_ta,jule::Trait<_1e5425ab0_Lookup> _107466_l) {
	if (_1e3bad8dd_is_ignore_ident(_107446_ta->_field_ident)) {
		this->self->_method_push_err(_107446_ta->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	this->self->_method_check_type_alias_decl_kind(_107446_ta,_107466_l);
}



inline void _1e5054722_Sema::_method_check_type_alias_decl_dup(jule::Ptr<_1e6420856_TypeAlias>& _108250_ta) {
	if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_108250_ta),_108250_ta->_field_ident,_108250_ta->_field_cpp_linked)) {
		this->self->_method_push_err(_108250_ta->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_108250_ta->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	this->self->_method_check_type_alias_decl_kind(_108250_ta,this->self);
}



inline jule::Bool _1e5054722_Sema::_method_check_type_alias_decls(void) {
	jule::Bool _109144_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_type_aliases;
		auto it = expr.begin();
		_iter_begin_4733132800:;
		if (it != expr.end()) {
			jule::Ptr<_1e6420856_TypeAlias> _1e5054722_ta = *it;
			{
				this->self->_method_check_type_alias_decl_dup(_1e5054722_ta);
				if (this->self->_field_errors.len() > 0LL) {
					_109144_ok = false;
					return _109144_ok;
				}
			}
			_iter_next_4733132800:;
			++it;
			goto _iter_begin_4733132800;
		}
		_iter_end_4733132800:;
	}
	_109144_ok = true;
	return _109144_ok;
}



inline void _1e5054722_Sema::_method_check_enum_items_dup(jule::Ptr<_1e4d62387_Enum> _110339_e) {
	{
		auto &expr = _110339_e->_field_items;
		auto it = expr.begin();
		_iter_begin_4733138240:;
		if (it != expr.end()) {
			jule::Ptr<_1e4d62387_EnumItem> &_1e5054722_item = *it;
			{
				if (_1e3bad8dd_is_ignore_ident(_1e5054722_item->_field_ident)) {
					(*this)._method_push_err(_1e5054722_item->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _110339_e->_field_items;
						auto it = expr.begin();
						_iter_begin_4733142736:;
						if (it != expr.end()) {
							jule::Ptr<_1e4d62387_EnumItem> &_1e5054722_citem = *it;
							{
								if (_1e5054722_item == _1e5054722_citem) {
									goto _iter_end_4733142736;
								} else if (_1e5054722_item->_field_ident == _1e5054722_citem->_field_ident) {
									(*this)._method_push_err(_1e5054722_item->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1e5054722_item->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_4733142736;
								}
							}
							_iter_next_4733142736:;
							++it;
							goto _iter_begin_4733142736;
						}
						_iter_end_4733142736:;
					}
				}
			}
			_iter_next_4733138240:;
			++it;
			goto _iter_begin_4733138240;
		}
		_iter_end_4733138240:;
	}
}



inline void _1e5054722_Sema::_method_check_enum_items_str(jule::Ptr<_1e4d62387_Enum>& _112145_e) {
	{
		auto &expr = _112145_e->_field_items;
		auto it = expr.begin();
		_iter_begin_4733143728:;
		if (it != expr.end()) {
			jule::Ptr<_1e4d62387_EnumItem> _1e5054722_item = *it;
			{
				if (_1e5054722_item->_method_auto_expr()) {
					_1e5054722_item->_field_value=jule::new_struct<_1e50ac4b1_Value>(new( std::nothrow ) _1e50ac4b1_Value(jule::Ptr<_1e38d4ec7_Expr>(),jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::Ptr<_1e6420856_TypeKind>(),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1c8b9b83b_Const::_static_method_new_str(_1e5054722_item->_field_ident)))));
					_1e5054722_item->_field_value->_field_data->_field_model=jule::Any(_1e5054722_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ptr<_1e50ac4b1_Data> _113125_d = this->self->_method_eval(this->self)->_method_eval_expr(_1e5054722_item->_field_value->_field_expr);
					if (_113125_d == nullptr) {
						goto _iter_next_4733143728;
					}
					if ((!(_113125_d->_method_is_const()))) {
						this->self->_method_push_err(_1e5054722_item->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					}
					this->self->_method_check_assign_type(false,_112145_e->_field_kind->_field_kind,_113125_d,_1e5054722_item->_field_token);
					_1e5054722_item->_field_value->_field_data=_113125_d;
				}
			}
			_iter_next_4733143728:;
			++it;
			goto _iter_begin_4733143728;
		}
		_iter_end_4733143728:;
	}
}



inline void _1e5054722_Sema::_method_check_enum_items_int(jule::Ptr<_1e4d62387_Enum>& _114645_e) {
	jule::U64 _114717_max = static_cast<jule::U64>(_1c8ba438d_max(_114645_e->_field_kind->_field_kind->_method_prim()->_method_to_str()));
	{
		auto &expr = _114645_e->_field_items;
		auto it = expr.begin();
		_iter_begin_4733164832:;
		if (it != expr.end()) {
			jule::Int _1e5054722_i = it - expr.begin();
			jule::Ptr<_1e4d62387_EnumItem> _1e5054722_item = *it;
			{
				if (_114717_max == 0LL) {
					this->self->_method_push_err(_1e5054722_item->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_114717_max)--;
				}
				if (_1e5054722_item->_method_auto_expr()) {
					_1e5054722_item->_field_value=jule::new_struct<_1e50ac4b1_Value>(new( std::nothrow ) _1e50ac4b1_Value(jule::Ptr<_1e38d4ec7_Expr>(),jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::Ptr<_1e6420856_TypeKind>(),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1c8b9b83b_Const::_static_method_new_u64(static_cast<jule::U64>(_114717_max - (_114717_max - static_cast<jule::U64>(_1e5054722_i))))))));
					_1e5054722_item->_field_value->_field_data->_field_model=jule::Any(_1e5054722_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ptr<_1e50ac4b1_Data> _116325_d = this->self->_method_eval(this->self)->_method_eval_expr(_1e5054722_item->_field_value->_field_expr);
					if (_116325_d == nullptr) {
						goto _iter_next_4733164832;
					}
					if ((!(_116325_d->_method_is_const()))) {
						this->self->_method_push_err(_1e5054722_item->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					}
					this->self->_method_check_assign_type(false,_114645_e->_field_kind->_field_kind,_116325_d,_1e5054722_item->_field_token);
					_1e5054722_item->_field_value->_field_data=_116325_d;
				}
			}
			_iter_next_4733164832:;
			++it;
			_1e5054722_i++;
			goto _iter_begin_4733164832;
		}
		_iter_end_4733164832:;
	}
}



inline void _1e5054722_Sema::_method_check_enum_decl(jule::Ptr<_1e4d62387_Enum>& _117840_e) {
	if (_1e3bad8dd_is_ignore_ident(_117840_e->_field_ident)) {
		this->self->_method_push_err(_117840_e->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_117840_e),_117840_e->_field_ident,false)) {
		this->self->_method_push_err(_117840_e->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_117840_e->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if (_117840_e->_field_items.len() == 0LL) {
		this->self->_method_push_err(_117840_e->_field_token,jule::Str("there is no member for enum: @", 30),jule::Slice<jule::Any>({jule::Any(_117840_e->_field_ident)}));
	}
	this->self->_method_check_enum_items_dup(_117840_e);
	if (_117840_e->_field_kind != nullptr) {
		if ((!(this->self->_method_check_type(_117840_e->_field_kind,this->self)))) {
			return;
		}
	} else {
		_117840_e->_field_kind=jule::new_struct<_1e6420856_TypeSymbol>(new( std::nothrow ) _1e6420856_TypeSymbol(jule::Ptr<_1e38d4ec7_TypeDecl>(),jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("int", 3))))));
	}
	jule::Ptr<_1e6420856_Prim> _120517_t = _117840_e->_field_kind->_field_kind->_method_prim();
	if (_120517_t == nullptr) {
		this->self->_method_push_err(_117840_e->_field_token,jule::Str("invalid data-type source", 24),jule::Slice<jule::Any>());
		return;
	}
	{
		if (!((_120517_t->_method_is_str()))) { goto _case_end_4733197808; }
		_case_begin_4733197808:;
		{
			this->self->_method_check_enum_items_str(_117840_e);
		}
		goto _match_end_4733195408;
		_case_end_4733197808:;
		if (!((_1c8c8ad04_is_int(_120517_t->_method_to_str())))) { goto _case_end_4733197904; }
		_case_begin_4733197904:;
		{
			this->self->_method_check_enum_items_int(_117840_e);
		}
		goto _match_end_4733195408;
		_case_end_4733197904:;
		_case_begin_4733190656:;
		{
			this->self->_method_push_err(_117840_e->_field_token,jule::Str("invalid data-type source", 24),jule::Slice<jule::Any>());
		}
		goto _match_end_4733195408;
		_case_end_4733190656:;
		_match_end_4733195408:;
	}
}



inline jule::Bool _1e5054722_Sema::_method_check_enum_decls(void) {
	jule::Bool _122538_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_enums;
		auto it = expr.begin();
		_iter_begin_4733204736:;
		if (it != expr.end()) {
			jule::Ptr<_1e4d62387_Enum> _1e5054722_e = *it;
			{
				this->self->_method_check_enum_decl(_1e5054722_e);
				if (this->self->_field_errors.len() > 0LL) {
					_122538_ok = false;
					return _122538_ok;
				}
			}
			_iter_next_4733204736:;
			++it;
			goto _iter_begin_4733204736;
		}
		_iter_end_4733204736:;
	}
	_122538_ok = true;
	return _122538_ok;
}



inline jule::Bool _1e5054722_Sema::_method_check_decl_generics(jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>>& _123739_generics) {
	jule::Bool _123767_ok = jule::Bool();
	_123767_ok=true;
	{
		auto &expr = _123739_generics;
		auto it = expr.begin();
		_iter_begin_4733210736:;
		if (it != expr.end()) {
			jule::Int _1e5054722_i = it - expr.begin();
			jule::Ptr<_1e38d4ec7_GenericDecl> &_1e5054722_g = *it;
			{
				if (_1e3bad8dd_is_ignore_ident(_1e5054722_g->_field_ident)) {
					(*this)._method_push_err(_1e5054722_g->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_123767_ok=false;
					goto _iter_next_4733210736;
				}
				_julec_label_duplication_lookup:;
				{
					auto &expr = _123739_generics;
					auto it = expr.begin();
					_iter_begin_4733213440:;
					if (it != expr.end()) {
						jule::Int _1e5054722_j = it - expr.begin();
						jule::Ptr<_1e38d4ec7_GenericDecl> &_1e5054722_ct = *it;
						{
							{
								if (!((_1e5054722_j >= _1e5054722_i))) { goto _case_end_4733218176; }
								_case_begin_4733218176:;
								{
									goto _iter_end_4733213440;
								}
								goto _match_end_4733217952;
								_case_end_4733218176:;
								if (!((_1e5054722_g->_field_ident == _1e5054722_ct->_field_ident))) { goto _case_end_4733218288; }
								_case_begin_4733218288:;
								{
									(*this)._method_push_err(_1e5054722_g->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1e5054722_g->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									_123767_ok=false;
									goto _iter_end_4733213440;
								}
								goto _match_end_4733217952;
								_case_end_4733218288:;
								_match_end_4733217952:;
							}
						}
						_iter_next_4733213440:;
						++it;
						_1e5054722_j++;
						goto _iter_begin_4733213440;
					}
					_iter_end_4733213440:;
				}
			}
			_iter_next_4733210736:;
			++it;
			_1e5054722_i++;
			goto _iter_begin_4733210736;
		}
		_iter_end_4733210736:;
	}
	return _123767_ok;
}



inline jule::Bool _1e5054722_Sema::_method_check_fn_decl_params_dup(jule::Ptr<_1e4b15a20_Fn>& _126544_f) {
	jule::Bool _126554_ok = jule::Bool();
	_126554_ok=true;
	_julec_label_check:;
	{
		auto &expr = _126544_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4733226640:;
		if (it != expr.end()) {
			jule::Int _1e5054722_i = it - expr.begin();
			jule::Ptr<_1e4b15a20_Param> &_1e5054722_p = *it;
			{
				{
					auto &expr = _126544_f->_field_generics;
					auto it = expr.begin();
					_iter_begin_4733228960:;
					if (it != expr.end()) {
						jule::Ptr<_1e38d4ec7_GenericDecl> &_1e5054722_g = *it;
						{
							if (_1e5054722_p->_field_ident == _1e5054722_g->_field_ident) {
								_126554_ok=false;
								(*this)._method_push_err(_1e5054722_p->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1e5054722_p->_field_ident)}));
								(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_4733226640;
							}
						}
						_iter_next_4733228960:;
						++it;
						goto _iter_begin_4733228960;
					}
					_iter_end_4733228960:;
				}
				_julec_label_params_lookup:;
				{
					auto &expr = _126544_f->_field_params;
					auto it = expr.begin();
					_iter_begin_4733230800:;
					if (it != expr.end()) {
						jule::Int _1e5054722_j = it - expr.begin();
						jule::Ptr<_1e4b15a20_Param> &_1e5054722_jp = *it;
						{
							{
								if (!((_1e5054722_j >= _1e5054722_i))) { goto _case_end_4733236448; }
								_case_begin_4733236448:;
								{
									goto _iter_end_4733230800;
								}
								goto _match_end_4733236208;
								_case_end_4733236448:;
								if (!((_1e3bad8dd_is_anon_ident(_1e5054722_p->_field_ident) || _1e3bad8dd_is_anon_ident(_1e5054722_jp->_field_ident)))) { goto _case_end_4733236560; }
								_case_begin_4733236560:;
								{
									goto _iter_end_4733230800;
								}
								goto _match_end_4733236208;
								_case_end_4733236560:;
								if (!((_1e5054722_p->_field_ident == _1e5054722_jp->_field_ident))) { goto _case_end_4733236672; }
								_case_begin_4733236672:;
								{
									_126554_ok=false;
									(*this)._method_push_err(_1e5054722_p->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1e5054722_p->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_next_4733226640;
								}
								goto _match_end_4733236208;
								_case_end_4733236672:;
								_match_end_4733236208:;
							}
						}
						_iter_next_4733230800:;
						++it;
						_1e5054722_j++;
						goto _iter_begin_4733230800;
					}
					_iter_end_4733230800:;
				}
			}
			_iter_next_4733226640:;
			++it;
			_1e5054722_i++;
			goto _iter_begin_4733226640;
		}
		_iter_end_4733226640:;
	}
	return _126554_ok;
}



inline jule::Bool _1e5054722_Sema::_method_check_fn_decl_result_dup(jule::Ptr<_1e4b15a20_Fn>& _130144_f) {
	jule::Bool _130154_ok = jule::Bool();
	_130154_ok=true;
	if (_130144_f->_method_is_void()) {
		return _130154_ok;
	}
	{
		auto &expr = _130144_f->_field_result->_field_idents;
		auto it = expr.begin();
		_iter_begin_4733246848:;
		if (it != expr.end()) {
			jule::Int _1e5054722_i = it - expr.begin();
			_1e3bad8dd_Token &_1e5054722_v = *it;
			{
				if (_1e3bad8dd_is_ignore_ident(_1e5054722_v._field_kind)) {
					goto _iter_next_4733246848;
				}
				{
					auto &expr = _130144_f->_field_generics;
					auto it = expr.begin();
					_iter_begin_4733250128:;
					if (it != expr.end()) {
						jule::Ptr<_1e38d4ec7_GenericDecl> &_1e5054722_g = *it;
						{
							if (_1e5054722_v._field_kind == _1e5054722_g->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_4733250128:;
						++it;
						goto _iter_begin_4733250128;
					}
					_iter_end_4733250128:;
				}
				{
					auto &expr = _130144_f->_field_params;
					auto it = expr.begin();
					_iter_begin_4733253456:;
					if (it != expr.end()) {
						jule::Ptr<_1e4b15a20_Param> &_1e5054722_p = *it;
						{
							if (_1e5054722_v._field_kind == _1e5054722_p->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_4733253456:;
						++it;
						goto _iter_begin_4733253456;
					}
					_iter_end_4733253456:;
				}
				_julec_label_itself_lookup:;
				{
					auto &expr = _130144_f->_field_result->_field_idents;
					auto it = expr.begin();
					_iter_begin_4733257504:;
					if (it != expr.end()) {
						jule::Int _1e5054722_j = it - expr.begin();
						_1e3bad8dd_Token &_1e5054722_jv = *it;
						{
							{
								if (!((_1e5054722_j >= _1e5054722_i))) { goto _case_end_4733259760; }
								_case_begin_4733259760:;
								{
									goto _iter_end_4733257504;
								}
								goto _match_end_4733259536;
								_case_end_4733259760:;
								if (!((_1e5054722_jv._field_kind == _1e5054722_v._field_kind))) { goto _case_end_4733259872; }
								_case_begin_4733259872:;
								{
									goto _julec_label_exist;
								}
								goto _match_end_4733259536;
								_case_end_4733259872:;
								_match_end_4733259536:;
							}
						}
						_iter_next_4733257504:;
						++it;
						_1e5054722_j++;
						goto _iter_begin_4733257504;
					}
					_iter_end_4733257504:;
				}
				goto _iter_next_4733246848;
				_julec_label_exist:;
				(*this)._method_push_err(_1e5054722_v,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1e5054722_v._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_130154_ok=false;
			}
			_iter_next_4733246848:;
			++it;
			_1e5054722_i++;
			goto _iter_begin_4733246848;
		}
		_iter_end_4733246848:;
	}
	return _130154_ok;
}



inline jule::Bool _1e5054722_Sema::_method_check_fn_decl_types(jule::Ptr<_1e4b15a20_Fn>& _135044_f) {
	jule::Bool _135054_ok = jule::Bool();
	_135054_ok=true;
	jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>> _135317_generics = _135044_f->_field_generics;
	if (_135044_f->_field_owner != nullptr) {
		_135317_generics=jule::append(_135317_generics,_135044_f->_field_owner->_field_generics);
	}
	{
		auto &expr = _135044_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4733271776:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_Param> _1e5054722_p = *it;
			{
				if ((!(_1e5054722_p->_method_is_self()))) {
					jule::Ptr<_1e6420856_TypeKind> _136025_kind = this->self->_method_build_non_generic_type_kind(_1e5054722_p->_field_kind->_field_decl,_135317_generics);
					_135054_ok=(_136025_kind != nullptr) && _135054_ok;
					_1e5054722_p->_field_kind->_field_kind=_136025_kind;
				}
			}
			_iter_next_4733271776:;
			++it;
			goto _iter_begin_4733271776;
		}
		_iter_end_4733271776:;
	}
	if ((!(_135044_f->_method_is_void()))) {
		jule::Ptr<_1e6420856_TypeKind> _136721_kind = this->self->_method_build_non_generic_type_kind(_135044_f->_field_result->_field_kind->_field_decl,_135317_generics);
		_135054_ok=(_136721_kind != nullptr) && _135054_ok;
		_135044_f->_field_result->_field_kind->_field_kind=_136721_kind;
	}
	return _135054_ok;
}



inline jule::Bool _1e5054722_Sema::_method_check_fn_decl_prototype(jule::Ptr<_1e4b15a20_Fn>& _137748_f) {
	jule::Bool _137758_ok = jule::Bool();
	{
		if (!(((!(this->self->_method_check_decl_generics(_137748_f->_field_generics)))))) { goto _case_end_4733301088; }
		_case_begin_4733301088:;
		{
			_137758_ok = false;
			return _137758_ok;
		}
		goto _match_end_4733299456;
		_case_end_4733301088:;
		if (!(((!(this->self->_method_check_fn_decl_params_dup(_137748_f)))))) { goto _case_end_4733301248; }
		_case_begin_4733301248:;
		{
			_137758_ok = false;
			return _137758_ok;
		}
		goto _match_end_4733299456;
		_case_end_4733301248:;
		if (!(((!(this->self->_method_check_fn_decl_result_dup(_137748_f)))))) { goto _case_end_4733301360; }
		_case_begin_4733301360:;
		{
			_137758_ok = false;
			return _137758_ok;
		}
		goto _match_end_4733299456;
		_case_end_4733301360:;
		if (!(((!(this->self->_method_check_fn_decl_types(_137748_f)))))) { goto _case_end_4733300608; }
		_case_begin_4733300608:;
		{
			_137758_ok = false;
			return _137758_ok;
		}
		goto _match_end_4733299456;
		_case_end_4733300608:;
		_case_begin_4733299632:;
		{
			_137758_ok = true;
			return _137758_ok;
		}
		goto _match_end_4733299456;
		_case_end_4733299632:;
		_match_end_4733299456:;
	}
}



inline void _1e5054722_Sema::_method_check_trait_decl_method(jule::Ptr<_1e4b15a20_Fn>& _138748_f) {
	if (_1e3bad8dd_is_ignore_ident(_138748_f->_field_ident)) {
		this->self->_method_push_err(_138748_f->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	this->self->_method_check_fn_decl_prototype(_138748_f);
	_138748_f->_field_sema=this->self;
}



inline void _1e5054722_Sema::_method_check_trait_decl_methods(jule::Ptr<_1e4d61232_Trait>& _139649_t) {
	{
		auto &expr = _139649_t->_field_methods;
		auto it = expr.begin();
		_iter_begin_4733313040:;
		if (it != expr.end()) {
			jule::Int _1e5054722_i = it - expr.begin();
			jule::Ptr<_1e4b15a20_Fn> _1e5054722_f = *it;
			{
				this->self->_method_check_trait_decl_method(_1e5054722_f);
				_139649_t->_field_mutable=_139649_t->_field_mutable || _1e5054722_f->_field_params[0LL]->_field_mutable;
				if (this->self->_field_errors.len() > 0LL) {
					return;
				}
				_julec_label_duplicate_lookup:;
				{
					auto &expr = _139649_t->_field_methods;
					auto it = expr.begin();
					_iter_begin_4733318928:;
					if (it != expr.end()) {
						jule::Int _1e5054722_j = it - expr.begin();
						jule::Ptr<_1e4b15a20_Fn> &_1e5054722_jf = *it;
						{
							{
								if (!((_1e5054722_j >= _1e5054722_i))) { goto _case_end_4733321408; }
								_case_begin_4733321408:;
								{
									goto _iter_end_4733318928;
								}
								goto _match_end_4733321184;
								_case_end_4733321408:;
								if (!((_1e5054722_f->_field_ident == _1e5054722_jf->_field_ident))) { goto _case_end_4733321520; }
								_case_begin_4733321520:;
								{
									this->self->_method_push_err(_1e5054722_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1e5054722_f->_field_ident)}));
									this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_4733318928;
								}
								goto _match_end_4733321184;
								_case_end_4733321520:;
								_match_end_4733321184:;
							}
						}
						_iter_next_4733318928:;
						++it;
						_1e5054722_j++;
						goto _iter_begin_4733318928;
					}
					_iter_end_4733318928:;
				}
			}
			_iter_next_4733313040:;
			++it;
			_1e5054722_i++;
			goto _iter_begin_4733313040;
		}
		_iter_end_4733313040:;
	}
}



inline void _1e5054722_Sema::_method_check_trait_decl(jule::Ptr<_1e4d61232_Trait>& _142841_t) {
	if (_1e3bad8dd_is_ignore_ident(_142841_t->_field_ident)) {
		this->self->_method_push_err(_142841_t->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_142841_t),_142841_t->_field_ident,false)) {
		this->self->_method_push_err(_142841_t->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_142841_t->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	this->self->_method_check_trait_decl_methods(_142841_t);
}



inline jule::Bool _1e5054722_Sema::_method_check_trait_decls(void) {
	jule::Bool _144039_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_traits;
		auto it = expr.begin();
		_iter_begin_4733337344:;
		if (it != expr.end()) {
			jule::Ptr<_1e4d61232_Trait> _1e5054722_t = *it;
			{
				this->self->_method_check_trait_decl(_1e5054722_t);
				if (this->self->_field_errors.len() > 0LL) {
					_144039_ok = false;
					return _144039_ok;
				}
			}
			_iter_next_4733337344:;
			++it;
			goto _iter_begin_4733337344;
		}
		_iter_end_4733337344:;
	}
	_144039_ok = true;
	return _144039_ok;
}



inline jule::Bool _1e5054722_Sema::_method_check_trait_impl_methods(jule::Ptr<_1e4d61232_Trait>& _145248_base,jule::Ptr<_1e39e721b_Impl>& _145263_ipl) {
	jule::Bool _145277_ok = jule::Bool();
	_145277_ok=true;
	{
		auto &expr = _145263_ipl->_field_methods;
		auto it = expr.begin();
		_iter_begin_4733344192:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_Fn> &_1e5054722_f = *it;
			{
				if (_145248_base->_method_find_method(_1e5054722_f->_field_ident) == nullptr) {
					(*this)._method_push_err(_1e5054722_f->_field_token,jule::Str("trait @ have not any define in this identifier: @", 49),jule::Slice<jule::Any>({jule::Any(_145248_base->_field_ident),jule::Any(_1e5054722_f->_field_ident)}));
					_145277_ok=false;
				}
			}
			_iter_next_4733344192:;
			++it;
			goto _iter_begin_4733344192;
		}
		_iter_end_4733344192:;
	}
	return _145277_ok;
}



inline jule::Bool _1e5054722_Sema::_method_impl_to_struct(jule::Ptr<_1e398ee72_Struct>& _146339_dest,jule::Ptr<_1e39e721b_Impl>& _146359_ipl) {
	jule::Bool _146373_ok = jule::Bool();
	_146373_ok=true;
	{
		auto &expr = _146359_ipl->_field_methods;
		auto it = expr.begin();
		_iter_begin_4733352848:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_Fn> _1e5054722_f = *it;
			{
				if ((_146339_dest->_method_find_method(_1e5054722_f->_field_ident,_1e5054722_f->_field_statically) != nullptr) || (_146339_dest->_method_find_field(_1e5054722_f->_field_ident) != nullptr)) {
					this->self->_method_push_err(_1e5054722_f->_field_token,jule::Str("struct @ already have a define in this identifier: @", 52),jule::Slice<jule::Any>({jule::Any(_146339_dest->_field_ident),jule::Any(_1e5054722_f->_field_ident)}));
					_146373_ok=false;
					goto _iter_next_4733352848;
				}
				if ((_146339_dest->_field_generics.len() > 0LL) && (_1e5054722_f->_field_generics.len() > 0LL)) {
					{
						auto &expr = _1e5054722_f->_field_generics;
						auto it = expr.begin();
						_iter_begin_4733360672:;
						if (it != expr.end()) {
							jule::Ptr<_1e38d4ec7_GenericDecl> &_1e5054722_fg = *it;
							{
								{
									auto &expr = _146339_dest->_field_generics;
									auto it = expr.begin();
									_iter_begin_4733362384:;
									if (it != expr.end()) {
										jule::Ptr<_1e38d4ec7_GenericDecl> &_1e5054722_dg = *it;
										{
											if (_1e5054722_fg->_field_ident == _1e5054722_dg->_field_ident) {
												this->self->_method_push_err(_1e5054722_fg->_field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_146373_ok=false;
											}
										}
										_iter_next_4733362384:;
										++it;
										goto _iter_begin_4733362384;
									}
									_iter_end_4733362384:;
								}
							}
							_iter_next_4733360672:;
							++it;
							goto _iter_begin_4733360672;
						}
						_iter_end_4733360672:;
					}
				}
				_1e5054722_f->_field_sema=this->self;
				_1e5054722_f->_field_owner=_146339_dest;
				_146339_dest->_field_methods = jule::alloc_for_append(_146339_dest->_field_methods,1);_146339_dest->_field_methods.push(_1e5054722_f);
			}
			_iter_next_4733352848:;
			++it;
			goto _iter_begin_4733352848;
		}
		_iter_end_4733352848:;
	}
	{
		auto &expr = _146359_ipl->_field_statics;
		auto it = expr.begin();
		_iter_begin_4733363440:;
		if (it != expr.end()) {
			jule::Ptr<_1e50b0492_Var> _1e5054722_v = *it;
			{
				
				if ((_146339_dest->_method_find_method(_1e5054722_v->_field_ident,true) != nullptr) || (_146339_dest->_method_find_static(_1e5054722_v->_field_ident) != nullptr)) {
					this->self->_method_push_err(_1e5054722_v->_field_token,jule::Str("struct @ already have a define in this identifier: @", 52),jule::Slice<jule::Any>({jule::Any(_146339_dest->_field_ident),jule::Any(_1e5054722_v->_field_ident)}));
					_146373_ok=false;
					goto _iter_next_4733363440;
				}
				this->self->_method_check_var_decl(_1e5054722_v,this->self);
				this->self->_method_check_type_var(_1e5054722_v,this->self);
				_146339_dest->_field_statics = jule::alloc_for_append(_146339_dest->_field_statics,1);_146339_dest->_field_statics.push(_1e5054722_v);
			}
			_iter_next_4733363440:;
			++it;
			goto _iter_begin_4733363440;
		}
		_iter_end_4733363440:;
	}
	return _146373_ok;
}



inline void _1e5054722_Sema::_method_impl_trait(jule::Ptr<_1e39e721b_Impl>& _150635_decl) {
	jule::Ptr<_1e4d61232_Trait> _150717_base = this->self->_method_find_trait(_150635_decl->_field_base._field_kind);
	if (_150717_base == nullptr) {
		_150717_base=_1c8ac49ea_find_builtin_trait(_150635_decl->_field_base._field_kind);
	}
	if (_150717_base == nullptr) {
		this->self->_method_push_err(_150635_decl->_field_base,jule::Str("any valid base definition is not exist in this identifier: @", 60),jule::Slice<jule::Any>({jule::Any(_150635_decl->_field_base._field_kind)}));
		return;
	}
	
	jule::Ptr<_1e398ee72_Struct> _152017_dest = this->self->_method_find_struct(_150635_decl->_field_dest._field_kind,false);
	if (_152017_dest == nullptr) {
		this->self->_method_push_err(_150635_decl->_field_dest,jule::Str("any valid destination definition is not exist in this identifier: @", 67),jule::Slice<jule::Any>({jule::Any(_150635_decl->_field_dest._field_kind)}));
		return;
	}
	if (_152017_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_150635_decl->_field_dest,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;
	}
	_150717_base->_field_implemented = jule::alloc_for_append(_150717_base->_field_implemented,1);_150717_base->_field_implemented.push(_152017_dest);
	_152017_dest->_field_implements = jule::alloc_for_append(_152017_dest->_field_implements,1);_152017_dest->_field_implements.push(_150717_base);
	if (_150635_decl->_field_statics.len() > 0LL) {
		this->self->_method_push_err(_150635_decl->_field_statics[0LL]->_field_token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	}
	{
		if (!(((!(this->self->_method_check_trait_impl_methods(_150717_base,_150635_decl)))))) { goto _case_end_4733395440; }
		_case_begin_4733395440:;
		{
			return;
		}
		goto _match_end_4733391392;
		_case_end_4733395440:;
		if (!(((!(this->self->_method_impl_to_struct(_152017_dest,_150635_decl)))))) { goto _case_end_4733395536; }
		_case_begin_4733395536:;
		{
			return;
		}
		goto _match_end_4733391392;
		_case_end_4733395536:;
		_match_end_4733391392:;
	}
}



inline void _1e5054722_Sema::_method_impl_struct(jule::Ptr<_1e39e721b_Impl>& _154436_decl) {
	
	jule::Ptr<_1e398ee72_Struct> _154917_dest = this->self->_method_find_struct(_154436_decl->_field_dest._field_kind,false);
	if (_154917_dest == nullptr) {
		this->self->_method_push_err(_154436_decl->_field_dest,jule::Str("any valid destination definition is not exist in this identifier: @", 67),jule::Slice<jule::Any>({jule::Any(_154436_decl->_field_dest._field_kind)}));
		return;
	}
	if (_154917_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_154436_decl->_field_dest,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;
	}
	{
		if (!(((!(this->self->_method_impl_to_struct(_154917_dest,_154436_decl)))))) { goto _case_end_4733408208; }
		_case_begin_4733408208:;
		{
			return;
		}
		goto _match_end_4733408096;
		_case_end_4733408208:;
		_match_end_4733408096:;
	}
}



inline void _1e5054722_Sema::_method_impl_impl(jule::Ptr<_1e39e721b_Impl>& _156734_decl) {
	{
		if (!((_156734_decl->_method_is_trait_impl()))) { goto _case_end_4733411168; }
		_case_begin_4733411168:;
		{
			this->self->_method_impl_trait(_156734_decl);
		}
		goto _match_end_4733410944;
		_case_end_4733411168:;
		if (!((_156734_decl->_method_is_struct_impl()))) { goto _case_end_4733411280; }
		_case_begin_4733411280:;
		{
			this->self->_method_impl_struct(_156734_decl);
		}
		goto _match_end_4733410944;
		_case_end_4733411280:;
		_match_end_4733410944:;
	}
}



inline void _1e5054722_Sema::_method_check_var_decl(jule::Ptr<_1e50b0492_Var>& _157639_decl,jule::Trait<_1e5425ab0_Lookup> _157655_l) {
	if (_1e3bad8dd_is_ignore_ident(_157639_decl->_field_ident)) {
		this->self->_method_push_err(_157639_decl->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	if (_157639_decl->_method_is_type_inferred()) {
		if ((!(_157639_decl->_method_is_initialized()))) {
			this->self->_method_push_err(_157639_decl->_field_token,jule::Str("type inference declarations should have a initializer", 53),jule::Slice<jule::Any>());
		}
	} else {
		this->self->_method_check_type(_157639_decl->_field_kind,_157655_l);
	}
	if (_157639_decl->_field_constant && _157639_decl->_field_reference) {
		this->self->_method_push_err(_157639_decl->_field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	}
	if ((!(_157639_decl->_method_is_initialized()))) {
		if (_157639_decl->_field_constant) {
			this->self->_method_push_err(_157639_decl->_field_token,jule::Str("constant variable must have initialize expression", 49),jule::Slice<jule::Any>());
		}
		if (_157639_decl->_field_statically) {
			this->self->_method_push_err(_157639_decl->_field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		}
		if (_157639_decl->_field_reference) {
			this->self->_method_push_err(_157639_decl->_field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		}
	}
}



inline void _1e5054722_Sema::_method_check_global_var_decl(jule::Ptr<_1e50b0492_Var>& _161046_decl) {
	if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_161046_decl),_161046_decl->_field_ident,_161046_decl->_field_cpp_linked)) {
		this->self->_method_push_err(_161046_decl->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_161046_decl->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if (_161046_decl->_field_cpp_linked && _161046_decl->_field_constant) {
		this->self->_method_push_err(_161046_decl->_field_token,jule::Str("cpp linked variables cannot constant", 36),jule::Slice<jule::Any>());
	}
	if (((!(_161046_decl->_field_cpp_linked)) && (!(_161046_decl->_field_constant))) && (!(_161046_decl->_field_statically))) {
		this->self->_method_push_err(_161046_decl->_field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	}
	this->self->_method_check_directives(_161046_decl->_field_directives,jule::Any(_161046_decl));
	this->self->_method_check_var_decl(_161046_decl,this->self);
}



inline jule::Bool _1e5054722_Sema::_method_check_global_decls(void) {
	jule::Bool _162940_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_vars;
		auto it = expr.begin();
		_iter_begin_4733447040:;
		if (it != expr.end()) {
			jule::Ptr<_1e50b0492_Var> _1e5054722_decl = *it;
			{
				this->self->_method_check_global_var_decl(_1e5054722_decl);
				if (this->self->_field_errors.len() > 0LL) {
					_162940_ok = false;
					return _162940_ok;
				}
			}
			_iter_next_4733447040:;
			++it;
			goto _iter_begin_4733447040;
		}
		_iter_end_4733447040:;
	}
	_162940_ok = true;
	return _162940_ok;
}



inline jule::Bool _1e5054722_Sema::_method_check_struct_trait_impl(jule::Ptr<_1e398ee72_Struct>& _164148_strct,jule::Ptr<_1e4d61232_Trait>& _164169_trt) {
	jule::Bool _164184_ok = jule::Bool();
	{
		auto &expr = _164169_trt->_field_methods;
		auto it = expr.begin();
		_iter_begin_4733454288:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_Fn> _1e5054722_tf = *it;
			{
				jule::Bool _164321_exist = false;
				jule::Ptr<_1e4b15a20_Fn> _164421_sf = _164148_strct->_method_find_method(_1e5054722_tf->_field_ident,_1e5054722_tf->_field_statically);
				jule::Ptr<_1e4b15a20_FnIns> _164517_tf_k = this->self->_method_get_trait_check_fn_kind(_1e5054722_tf);
				if (_164421_sf != nullptr) {
					jule::Ptr<_1e4b15a20_FnIns> _164725_sf_k = this->self->_method_get_trait_check_fn_kind(_164421_sf);
					_164321_exist=((_164517_tf_k->_field_decl->_field_public == _164725_sf_k->_field_decl->_field_public) && (_164517_tf_k->_field_decl->_field_ident == _164725_sf_k->_field_decl->_field_ident)) && _164517_tf_k->_method_equals(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_164725_sf_k)));
				}
				if ((!(_164321_exist))) {
					
					jule::Str _165625_s = _164517_tf_k->_method_get_kind_str(true);
					if (_1e5054722_tf->_field_public) {
						_165625_s=jule::Str("pub ", 4) + _165625_s;
					}
					this->self->_method_push_err(_164148_strct->_field_token,jule::Str("trait @ derived but not implemented trait's \"@\" define", 54),jule::Slice<jule::Any>({jule::Any(_164169_trt->_field_ident),jule::Any(_165625_s)}));
					_164184_ok=false;
				}
			}
			_iter_next_4733454288:;
			++it;
			goto _iter_begin_4733454288;
		}
		_iter_end_4733454288:;
	}
	return _164184_ok;
}



inline jule::Bool _1e5054722_Sema::_method_check_struct_impls(jule::Ptr<_1e398ee72_Struct>& _166743_s) {
	jule::Bool _166757_ok = jule::Bool();
	_166757_ok=true;
	{
		auto &expr = _166743_s->_field_implements;
		auto it = expr.begin();
		_iter_begin_4733471536:;
		if (it != expr.end()) {
			jule::Ptr<_1e4d61232_Trait> _1e5054722_trt = *it;
			{
				_166757_ok=this->self->_method_check_struct_trait_impl(_166743_s,_1e5054722_trt) && _166757_ok;
			}
			_iter_next_4733471536:;
			++it;
			goto _iter_begin_4733471536;
		}
		_iter_end_4733471536:;
	}
	return _166757_ok;
}



inline jule::Bool _1e5054722_Sema::_method_check_struct_fields(jule::Ptr<_1e398ee72_Struct>& _167544_st) {
	jule::Bool _167559_ok = jule::Bool();
	_167559_ok=true;
	jule::Ptr<_1e6420856_TypeChecker> _167817_tc = jule::new_struct<_1e6420856_TypeChecker>(new( std::nothrow ) _1e6420856_TypeChecker(this->self,this->self,jule::new_struct<_1e6420856_Referencer>(new( std::nothrow ) _1e6420856_Referencer(_167544_st->_field_ident,jule::Any(_167544_st),nullptr)),_1e3bad8dd_Token(),_167544_st->_field_generics,jule::Slice<jule::Ptr<_1e6420856_TypeAlias>>(),jule::Bool()));
	jule::I64 _168813_n = _167544_st->_field_instances.len();
	{
		auto &expr = _167544_st->_field_fields;
		auto it = expr.begin();
		_iter_begin_4733480688:;
		if (it != expr.end()) {
			jule::Ptr<_1e398ee72_Field> _1e5054722_f = *it;
			{
				_1e5054722_f->_field_owner=_167544_st;
				_1e5054722_f->_field_kind->_field_kind=_167817_tc->_method_check_decl(_1e5054722_f->_field_kind->_field_decl);
				_167559_ok=(_1e5054722_f->_field_kind->_field_kind != nullptr) && _167559_ok;
				{
					auto &expr = _167544_st->_field_fields;
					auto it = expr.begin();
					_iter_begin_4733485408:;
					if (it != expr.end()) {
						jule::Ptr<_1e398ee72_Field> &_1e5054722_cf = *it;
						{
							if (_1e5054722_f == _1e5054722_cf) {
								goto _iter_end_4733485408;
							} else if (_1e5054722_f->_field_ident == _1e5054722_cf->_field_ident) {
								this->self->_method_push_err(_1e5054722_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1e5054722_f->_field_ident)}));
								this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_167559_ok=false;
							}
						}
						_iter_next_4733485408:;
						++it;
						goto _iter_begin_4733485408;
					}
					_iter_end_4733485408:;
				}
			}
			_iter_next_4733480688:;
			++it;
			goto _iter_begin_4733480688;
		}
		_iter_end_4733480688:;
	}
	if (_167559_ok && (_168813_n != _167544_st->_field_instances.len())) {
		_167817_tc->_field_referencer=nullptr;
		_167544_st->_field_instances=_167544_st->_field_instances.slice(0LL,_168813_n);
		{
			auto &expr = _167544_st->_field_fields;
			auto it = expr.begin();
			_iter_begin_4733481328:;
			if (it != expr.end()) {
				jule::Ptr<_1e398ee72_Field> _1e5054722_f = *it;
				{
					_1e5054722_f->_field_kind->_field_kind=_167817_tc->_method_check_decl(_1e5054722_f->_field_kind->_field_decl);
				}
				_iter_next_4733481328:;
				++it;
				goto _iter_begin_4733481328;
			}
			_iter_end_4733481328:;
		}
	}
	return _167559_ok;
}



inline jule::Bool _1e5054722_Sema::_method_check_struct_decl_methods(jule::Ptr<_1e398ee72_Struct>& _171750_s) {
	jule::Bool _171764_ok = jule::Bool();
	{
		auto &expr = _171750_s->_field_methods;
		auto it = expr.begin();
		_iter_begin_4733497232:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_Fn> _1e5054722_m = *it;
			{
				if ((!(this->self->_method_check_fn_decl_types(_1e5054722_m)))) {
					_171764_ok = false;
					return _171764_ok;
				}
			}
			_iter_next_4733497232:;
			++it;
			goto _iter_begin_4733497232;
		}
		_iter_end_4733497232:;
	}
	_171764_ok = true;
	return _171764_ok;
}



inline void _1e5054722_Sema::_method_check_struct_decl(jule::Ptr<_1e398ee72_Struct>& _172642_s) {
	if (_1e3bad8dd_is_ignore_ident(_172642_s->_field_ident)) {
		this->self->_method_push_err(_172642_s->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_172642_s),_172642_s->_field_ident,_172642_s->_field_cpp_linked)) {
		this->self->_method_push_err(_172642_s->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_172642_s->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	this->self->_method_check_directives(_172642_s->_field_directives,jule::Any(_172642_s));
	_172642_s->_field_sema=this->self;
	{
		if (!(((!(this->self->_method_check_decl_generics(_172642_s->_field_generics)))))) { goto _case_end_4733508976; }
		_case_begin_4733508976:;
		{
			return;
		}
		goto _match_end_4733508496;
		_case_end_4733508976:;
		if (!(((!(this->self->_method_check_struct_fields(_172642_s)))))) { goto _case_end_4733509408; }
		_case_begin_4733509408:;
		{
			return;
		}
		goto _match_end_4733508496;
		_case_end_4733509408:;
		if (!(((!(this->self->_method_check_struct_decl_methods(_172642_s)))))) { goto _case_end_4733509504; }
		_case_begin_4733509504:;
		{
			return;
		}
		goto _match_end_4733508496;
		_case_end_4733509504:;
		if (!(((!(this->self->_method_check_struct_impls(_172642_s)))))) { goto _case_end_4733509600; }
		_case_begin_4733509600:;
		{
			return;
		}
		goto _match_end_4733508496;
		_case_end_4733509600:;
		_match_end_4733508496:;
	}
}



inline jule::Bool _1e5054722_Sema::_method_check_struct_decls(void) {
	jule::Bool _174640_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_structs;
		auto it = expr.begin();
		_iter_begin_4733516000:;
		if (it != expr.end()) {
			jule::Ptr<_1e398ee72_Struct> _1e5054722_s = *it;
			{
				this->self->_method_check_struct_decl(_1e5054722_s);
				if (this->self->_field_errors.len() > 0LL) {
					_174640_ok = false;
					return _174640_ok;
				}
			}
			_iter_next_4733516000:;
			++it;
			goto _iter_begin_4733516000;
		}
		_iter_end_4733516000:;
	}
	_174640_ok = true;
	return _174640_ok;
}



inline void _1e5054722_Sema::_method_check_fn_decl(jule::Ptr<_1e4b15a20_Fn>& _175938_f) {
	if (_1e3bad8dd_is_ignore_ident(_175938_f->_field_ident)) {
		this->self->_method_push_err(_175938_f->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_175938_f),_175938_f->_field_ident,_175938_f->_field_cpp_linked)) {
		this->self->_method_push_err(_175938_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_175938_f->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	this->self->_method_check_directives(_175938_f->_field_directives,jule::Any(_175938_f));
	_175938_f->_field_sema=this->self;
	this->self->_method_check_fn_decl_prototype(_175938_f);
}



inline jule::Bool _1e5054722_Sema::_method_check_fn_decls(void) {
	jule::Bool _177436_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_funcs;
		auto it = expr.begin();
		_iter_begin_4733530736:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_Fn> _1e5054722_f = *it;
			{
				this->self->_method_check_fn_decl(_1e5054722_f);
				if (this->self->_field_errors.len() > 0LL) {
					_177436_ok = false;
					return _177436_ok;
				}
			}
			_iter_next_4733530736:;
			++it;
			goto _iter_begin_4733530736;
		}
		_iter_end_4733530736:;
	}
	_177436_ok = true;
	return _177436_ok;
}



inline void _1e5054722_Sema::_method_push_cycle_error(jule::Ptr<_1e398ee72_Struct>& _178632_st1,jule::Ptr<_1e398ee72_Struct>& _178647_st2,jule::Str& _178666_message) {
	
	jule::Str _178913_refers_to = _1e24777a2_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_178632_st1->_field_ident),jule::Any(_178647_st2->_field_ident)}));
	_178666_message=((_1e4cc167b_str_repeat(jule::Str(" ", 1),4LL) + _178913_refers_to) + jule::Str("\n", 1)) + _178666_message;
}



inline jule::Bool _1e5054722_Sema::_method_check_cross_cycle(jule::Ptr<_1e398ee72_Struct>& _179333_st1,jule::Ptr<_1e398ee72_Struct>& _179348_st2,jule::Str& _179367_message) {
	{
		auto &expr = _179348_st2->_field_uses;
		auto it = expr.begin();
		_iter_begin_4733545040:;
		if (it != expr.end()) {
			jule::Ptr<_1e398ee72_Struct> &_1e5054722_u = *it;
			{
				if (_1e5054722_u == _179333_st1) {
					(*this)._method_push_cycle_error(_179348_st2,_1e5054722_u,_179367_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_179333_st1,_1e5054722_u,_179367_message)))) {
					(*this)._method_push_cycle_error(_179348_st2,_1e5054722_u,_179367_message);
					return false;
				}
			}
			_iter_next_4733545040:;
			++it;
			goto _iter_begin_4733545040;
		}
		_iter_end_4733545040:;
	}
	return true;
}



inline jule::Bool _1e5054722_Sema::_method_check_struct_derive_illegal_cycles(jule::Str _180953_derive,jule::Ptr<_1e398ee72_Struct>& _180967_st1,jule::Ptr<_1e6420856_TypeKind>& _180986_k) {
	jule::Bool _1809102_ok = jule::Bool();
	jule::Ptr<_1e398ee72_Struct> _181017_st2 = _1e6420856_get_struct_from_kind(_180986_k);
	if (_181017_st2 == nullptr) {
		_1809102_ok = true;
		return _1809102_ok;
	}
	if (_180967_st1 == _181017_st2) {
		(*this)._method_push_err(_180967_st1->_field_token,jule::Str("illegal cycle for \"@\" derive, struct \"@\" refers to itself", 57),jule::Slice<jule::Any>({jule::Any(_180953_derive),jule::Any(_180967_st1->_field_ident)}));
		_1809102_ok = false;
		return _1809102_ok;
	}
	jule::Str _182217_message = jule::Str();
	if ((!((*this)._method_check_cross_cycle(_180967_st1,_181017_st2,_182217_message)))) {
		jule::Str _182521_err_msg = _182217_message;
		_182217_message=jule::Str();
		(*this)._method_push_cycle_error(_180967_st1,_181017_st2,_182217_message);
		_182521_err_msg=_182521_err_msg + _182217_message;
		(*this)._method_push_err(_180967_st1->_field_token,jule::Str("illegal cross cycle for \"@\" derive;\n@", 37),jule::Slice<jule::Any>({jule::Any(_180953_derive),jule::Any(_182521_err_msg)}));
		_1809102_ok = false;
		return _1809102_ok;
	}
	_1809102_ok = true;
	return _1809102_ok;
}



inline jule::Bool _1e5054722_Sema::_method_check_struct_ins_derive_clone(jule::Ptr<_1e398ee72_StructIns> _183652_st) {
	jule::Bool _183670_ok = jule::Bool();
	if ((!(_183652_st->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
		_183670_ok = true;
		return _183670_ok;
	}
	{
		auto &expr = _183652_st->_field_fields;
		auto it = expr.begin();
		_iter_begin_4733567280:;
		if (it != expr.end()) {
			jule::Ptr<_1e398ee72_FieldIns> _1e5054722_f = *it;
			{
				if ((_1e5054722_f->_field_kind == nullptr) || (!(_1e5054722_f->_field_kind->_method_mutable()))) {
					goto _iter_next_4733567280;
				}
				if ((!(_1e5054722_f->_field_kind->_method_supports_cloning()))) {
					(*this)._method_push_err(_183652_st->_field_decl->_field_token,jule::Str("type \"@\" is not compatible to derive \"@\"", 40),jule::Slice<jule::Any>({jule::Any(_1e5054722_f->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
					_183670_ok = false;
					return _183670_ok;
				}
				if ((!((*this)._method_check_struct_derive_illegal_cycles(jule::Str("Clone", 5),_183652_st->_field_decl,_1e5054722_f->_field_kind)))) {
					_183670_ok = false;
					return _183670_ok;
				}
			}
			_iter_next_4733567280:;
			++it;
			goto _iter_begin_4733567280;
		}
		_iter_end_4733567280:;
	}
	_183670_ok = true;
	return _183670_ok;
}



inline jule::Bool _1e5054722_Sema::_method_check_struct_derive_clone(jule::Ptr<_1e398ee72_Struct>& _185949_st) {
	jule::Bool _185964_ok = jule::Bool();
	_185964_ok = (*this)._method_check_struct_ins_derive_clone(_185949_st->_method_instance());
	return _185964_ok;
}



inline jule::Bool _1e5054722_Sema::_method_check_file_derives(void) {
	jule::Bool _186339_ok = jule::Bool();
	{
		auto &expr = (*this)._field_file->_field_structs;
		auto it = expr.begin();
		_iter_begin_4733582544:;
		if (it != expr.end()) {
			jule::Ptr<_1e398ee72_Struct> _1e5054722_st = *it;
			{
				_186339_ok=(*this)._method_check_struct_derive_clone(_1e5054722_st);
				if ((!(_186339_ok))) {
					goto _iter_end_4733582544;
				}
			}
			_iter_next_4733582544:;
			++it;
			goto _iter_begin_4733582544;
		}
		_iter_end_4733582544:;
	}
	return _186339_ok;
}



inline void _1e5054722_Sema::_method_check_package_derives(void) {
	{
		auto &expr = (*this)._field_files;
		auto it = expr.begin();
		_iter_begin_4733586176:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e5054722_f = *it;
			{
				(*this)._method_set_current_file(_1e5054722_f);
				jule::Bool _187817_ok = (*this)._method_check_file_derives();
				if ((!(_187817_ok))) {
					return;
				}
			}
			_iter_next_4733586176:;
			++it;
			goto _iter_begin_4733586176;
		}
		_iter_end_4733586176:;
	}
}



inline void _1e5054722_Sema::_method_check_package_decls(void) {
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4733591072:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e5054722_f = *it;
			{
				this->self->_method_set_current_file(_1e5054722_f);
				if ((!(this->self->_method_check_type_alias_decls()))) {
					return;
				}
			}
			_iter_next_4733591072:;
			++it;
			goto _iter_begin_4733591072;
		}
		_iter_end_4733591072:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4733591632:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e5054722_f = *it;
			{
				this->self->_method_set_current_file(_1e5054722_f);
				if ((!(this->self->_method_check_trait_decls()))) {
					return;
				}
			}
			_iter_next_4733591632:;
			++it;
			goto _iter_begin_4733591632;
		}
		_iter_end_4733591632:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4733594592:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e5054722_f = *it;
			{
				this->self->_method_set_current_file(_1e5054722_f);
				if ((!(this->self->_method_check_global_decls()))) {
					return;
				}
			}
			_iter_next_4733594592:;
			++it;
			goto _iter_begin_4733594592;
		}
		_iter_end_4733594592:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4733597344:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e5054722_f = *it;
			{
				this->self->_method_set_current_file(_1e5054722_f);
				if ((!(this->self->_method_check_fn_decls()))) {
					return;
				}
			}
			_iter_next_4733597344:;
			++it;
			goto _iter_begin_4733597344;
		}
		_iter_end_4733597344:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4733600160:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e5054722_f = *it;
			{
				this->self->_method_set_current_file(_1e5054722_f);
				if ((!(this->self->_method_check_struct_decls()))) {
					return;
				}
			}
			_iter_next_4733600160:;
			++it;
			goto _iter_begin_4733600160;
		}
		_iter_end_4733600160:;
	}
	this->self->_method_check_package_derives();
}



inline void _1e5054722_Sema::_method_check_data_for_type_inference(jule::Ptr<_1e50ac4b1_Data>& _192649_d,_1e3bad8dd_Token& _192660_err_token) {
	{
		if (!((_192649_d->_method_is_nil()))) { goto _case_end_4733608720; }
		_case_begin_4733608720:;
		{
			(*this)._method_push_err(_192660_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
		}
		goto _match_end_4733608512;
		_case_end_4733608720:;
		if (!((_192649_d->_method_is_void()))) { goto _case_end_4733608832; }
		_case_begin_4733608832:;
		{
			(*this)._method_push_err(_192660_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
		}
		goto _match_end_4733608512;
		_case_end_4733608832:;
		if (!((_192649_d->_field_kind->_field_variadic))) { goto _case_end_4733608944; }
		_case_begin_4733608944:;
		{
			(*this)._method_push_err(_192660_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
		}
		goto _match_end_4733608512;
		_case_end_4733608944:;
		_match_end_4733608512:;
	}
}



inline void _1e5054722_Sema::_method_check_var(jule::Ptr<_1e50b0492_Var>& _193934_v) {
	if (_193934_v->_field_cpp_linked) {
		return;
	}
	if (_193934_v->_method_is_type_inferred()) {
		_193934_v->_field_kind=jule::new_struct<_1e6420856_TypeSymbol>(new( std::nothrow ) _1e6420856_TypeSymbol(jule::Ptr<_1e38d4ec7_TypeDecl>(),_193934_v->_field_value->_field_data->_field_kind));
		this->self->_method_check_data_for_type_inference(_193934_v->_field_value->_field_data,_193934_v->_field_value->_field_expr->_field_token);
	} else {
		jule::Ptr<_1e6420856_Arr> _195121_arr = _193934_v->_field_kind->_field_kind->_method_arr();
		if (_195121_arr != nullptr) {
			if (_195121_arr->_field_auto) {
				jule::Ptr<_1e6420856_Arr> _195425_data_arr = _193934_v->_field_value->_field_data->_field_kind->_method_arr();
				if (_195425_data_arr != nullptr) {
					_195121_arr->_field_n=_195425_data_arr->_field_n;
				}
			}
		}
		this->self->_method_check_assign_type(_193934_v->_field_reference,_193934_v->_field_kind->_field_kind,_193934_v->_field_value->_field_data,_193934_v->_field_value->_field_expr->_field_token);
	}
	if (_193934_v->_field_reference && (!(_1e6420856_is_valid_for_ref(_193934_v->_field_kind->_field_kind)))) {
		this->self->_method_push_err(_193934_v->_field_token,jule::Str("references cannot points to \"@\" type", 36),jule::Slice<jule::Any>({jule::Any(_193934_v->_field_kind->_field_kind->_method_to_str())}));
	}
	this->self->_method_check_validity_for_init_expr(_193934_v->_field_mutable,_193934_v->_field_reference,_193934_v->_field_kind->_field_kind,_193934_v->_field_value->_field_data,_193934_v->_field_value->_field_expr->_field_token);
	if (_193934_v->_field_constant) {
		if ((!(_193934_v->_field_value->_field_data->_method_is_const()))) {
			this->self->_method_push_err(_193934_v->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		}
	} else {
		_193934_v->_field_value->_field_data->_field_constant=nullptr;
	}
	if (_193934_v->_field_kind->_field_kind->_method_tup() != nullptr) {
		_193934_v->_field_kind->_field_kind=nullptr;
	}
}



inline void _1e5054722_Sema::_method_check_type_var(jule::Ptr<_1e50b0492_Var>& _198939_decl,jule::Trait<_1e5425ab0_Lookup> _198955_l) {
	if (_198939_decl->_field_cpp_linked || (!(_198939_decl->_method_is_initialized()))) {
		return;
	}
	jule::Ptr<_1e50ac4b1_Eval> _199417_eval = (((_198939_decl->_field_kind != nullptr)) ? (this->self->_method_evalpd(_198955_l,_198939_decl->_field_kind->_field_kind,_198939_decl)) : (this->self->_method_evalpd(_198955_l,nullptr,_198939_decl)));
	_199417_eval->_field_immutable=(!(_198939_decl->_field_mutable));
	_198939_decl->_field_value->_field_data=_199417_eval->_method_eval_expr(_198939_decl->_field_value->_field_expr);
	if (_198939_decl->_field_value->_field_data == nullptr) {
		return;
	}
	this->self->_method_check_var(_198939_decl);
}



inline void _1e5054722_Sema::_method_check_global_types(void) {
	{
		auto &expr = this->self->_field_file->_field_vars;
		auto it = expr.begin();
		_iter_begin_4733651840:;
		if (it != expr.end()) {
			jule::Ptr<_1e50b0492_Var> _1e5054722_decl = *it;
			{
				if ((_1e5054722_decl->_method_is_initialized() && (_1e5054722_decl->_field_value->_field_data == nullptr)) || (_1e5054722_decl->_method_is_type_inferred() && (_1e5054722_decl->_field_kind->_field_kind == nullptr))) {
					this->self->_method_check_type_var(_1e5054722_decl,this->self);
				}
			}
			_iter_next_4733651840:;
			++it;
			goto _iter_begin_4733651840;
		}
		_iter_end_4733651840:;
	}
}



inline void _1e5054722_Sema::_method_check_type_method(jule::Ptr<_1e398ee72_StructIns>& _201842_strct,jule::Ptr<_1e4b15a20_Fn>& _201866_f) {
	if (_201866_f->_field_cpp_linked) {
		return;
	}
	if (_201866_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_201866_f->_field_instances.len() == 0LL) {
		jule::Ptr<_1e4b15a20_FnIns> _202921_ins = _201866_f->_method_instance();
		_202921_ins->_field_owner=_201842_strct;
		_201866_f->_method_append_instance(_202921_ins);
		this->self->_method_reload_fn_ins_types(_202921_ins);
		_202921_ins->_field_reloaded=true;
	}
	{
		auto &expr = _201866_f->_field_instances;
		auto it = expr.begin();
		_iter_begin_4733661888:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_FnIns> _1e5054722_ins = *it;
			{
				if (_1e5054722_ins->_field_scope->_field_stmts.len() > 0LL) {
					goto _iter_next_4733661888;
				}
				this->self->_method_check_fn_ins(_1e5054722_ins);
			}
			_iter_next_4733661888:;
			++it;
			goto _iter_begin_4733661888;
		}
		_iter_end_4733661888:;
	}
}



inline void _1e5054722_Sema::_method_check_type_struct(jule::Ptr<_1e398ee72_Struct>& _204542_strct) {
	if (_204542_strct->_field_cpp_linked) {
		return;
	}
	if (_204542_strct->_field_generics.len() > 0LL) {
		return;
	}
	if (_204542_strct->_field_instances.len() == 0LL) {
		jule::Ptr<_1e398ee72_StructIns> _205621_ins = _204542_strct->_method_instance();
		_205621_ins->_field_checked=true;
		_204542_strct->_method_append_instance(_205621_ins);
	}
	{
		auto &expr = _204542_strct->_field_instances;
		auto it = expr.begin();
		_iter_begin_4733675856:;
		if (it != expr.end()) {
			jule::Ptr<_1e398ee72_StructIns> _1e5054722_ins = *it;
			{
				{
					auto &expr = _1e5054722_ins->_field_methods;
					auto it = expr.begin();
					_iter_begin_4733677728:;
					if (it != expr.end()) {
						jule::Ptr<_1e4b15a20_Fn> _1e5054722_f = *it;
						{
							this->self->_method_check_type_method(_1e5054722_ins,_1e5054722_f);
						}
						_iter_next_4733677728:;
						++it;
						goto _iter_begin_4733677728;
					}
					_iter_end_4733677728:;
				}
			}
			_iter_next_4733675856:;
			++it;
			goto _iter_begin_4733675856;
		}
		_iter_end_4733675856:;
	}
}



inline void _1e5054722_Sema::_method_check_struct_types(void) {
	{
		auto &expr = this->self->_field_file->_field_structs;
		auto it = expr.begin();
		_iter_begin_4733680448:;
		if (it != expr.end()) {
			jule::Ptr<_1e398ee72_Struct> _1e5054722_s = *it;
			{
				this->self->_method_check_type_struct(_1e5054722_s);
			}
			_iter_next_4733680448:;
			++it;
			goto _iter_begin_4733680448;
		}
		_iter_end_4733680448:;
	}
}



inline void _1e5054722_Sema::_method_check_rets(jule::Ptr<_1e4b15a20_FnIns>& _207434_f) {
	if (_207434_f->_field_decl->_method_is_void()) {
		return;
	}
	jule::Bool _207913_ok = _1e5054722_has_ret(_207434_f->_field_scope);
	if ((!(_207913_ok))) {
		(*this)._method_push_err(_207434_f->_field_decl->_field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	}
}



inline void _1e5054722_Sema::_method_check_fn_ins_sc(jule::Ptr<_1e4b15a20_FnIns>& _208539_f,jule::Ptr<_1e4d6ee22_ScopeChecker>& _208555_sc) {
	if (_208539_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Slice<jule::Ptr<_1e50b0492_Var>> _209017_vars = _1e5054722_build_ret_vars(_208539_f);
	_208555_sc->_field_table->_field_vars=jule::append(_208555_sc->_field_table->_field_vars,_209017_vars);
	_208555_sc->_field_table->_field_vars=jule::append(_208555_sc->_field_table->_field_vars,_1e5054722_build_param_vars(_208539_f));
	_208555_sc->_field_table->_field_type_aliases=jule::append(_208555_sc->_field_table->_field_type_aliases,_1e5054722_build_generic_type_aliases(_208539_f));
	_208555_sc->_method_check(_208539_f->_field_decl->_field_scope,_208539_f->_field_scope);
	if (_209017_vars.len() > 0LL) {
		jule::Slice<jule::Any> _210021_stmts = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_208539_f->_field_scope->_field_stmts.len() + _209017_vars.len()));
		{
			auto &expr = _209017_vars;
			auto it = expr.begin();
			_iter_begin_4733701712:;
			if (it != expr.end()) {
				jule::Ptr<_1e50b0492_Var> _1e5054722_v = *it;
				{
					_210021_stmts.push(jule::Any(_1e5054722_v));
				}
				_iter_next_4733701712:;
				++it;
				goto _iter_begin_4733701712;
			}
			_iter_end_4733701712:;
		}
		_210021_stmts=jule::append(_210021_stmts,_208539_f->_field_scope->_field_stmts);
		_208539_f->_field_scope->_field_stmts=_210021_stmts;
	}
	(*this)._method_check_rets(_208539_f);
}



inline void _1e5054722_Sema::_method_check_fn_ins(jule::Ptr<_1e4b15a20_FnIns>& _211237_f) {
	if (_211237_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Ptr<_1e5291035_SymbolTable> _211717_old = _211237_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_211237_f->_field_decl->_field_sema->_method_set_current_file(_211717_old);
	});
	jule::Ptr<_1e5291035_SymbolTable> _211917_file = _1e5054722_find_file(_211237_f->_field_decl->_field_sema->_field_files,_211237_f->_field_decl->_field_token._field_file);
	if (_211917_file != nullptr) {
		_211237_f->_field_decl->_field_sema->_method_set_current_file(_211917_file);
	}
	jule::Ptr<_1e4d6ee22_ScopeChecker> _212417_sc = _1e4d6ee22_new_scope_checker(_211237_f->_field_decl->_field_sema,_211237_f);
	this->self->_method_check_fn_ins_sc(_211237_f,_212417_sc);
	if (_211237_f->_field_decl->_field_sema != this->self) {
		this->self->_field_errors=jule::append(this->self->_field_errors,_211237_f->_field_decl->_field_sema->_field_errors);
		_211237_f->_field_decl->_field_sema->_field_errors=nullptr;
	}
}



inline void _1e5054722_Sema::_method_check_type_fn(jule::Ptr<_1e4b15a20_Fn>& _213338_f) {
	if (_213338_f->_field_cpp_linked) {
		return;
	}
	if (_213338_f->_field_generics.len() > 0LL) {
		return;
	}
	{
		auto &expr = _213338_f->_field_instances;
		auto it = expr.begin();
		_iter_begin_4733721728:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_FnIns> _1e5054722_ins = *it;
			{
				this->self->_method_check_fn_ins(_1e5054722_ins);
			}
			_iter_next_4733721728:;
			++it;
			goto _iter_begin_4733721728;
		}
		_iter_end_4733721728:;
	}
}



inline void _1e5054722_Sema::_method_precheck_type_fn(jule::Ptr<_1e4b15a20_Fn>& _214841_f) {
	if (_214841_f->_field_cpp_linked) {
		return;
	}
	if (_214841_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_214841_f->_field_instances.len() == 0LL) {
		jule::Ptr<_1e4b15a20_FnIns> _215921_ins = _214841_f->_method_instance();
		_214841_f->_field_instances = jule::alloc_for_append(_214841_f->_field_instances,1);_214841_f->_field_instances.push(_215921_ins);
		this->self->_method_reload_fn_ins_types(_215921_ins);
		_215921_ins->_field_reloaded=true;
	}
}



inline jule::Bool _1e5054722_Sema::_method_precheck_fn_types(void) {
	jule::Bool _216739_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_funcs;
		auto it = expr.begin();
		_iter_begin_4733734256:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_Fn> _1e5054722_decl = *it;
			{
				this->self->_method_precheck_type_fn(_1e5054722_decl);
			}
			_iter_next_4733734256:;
			++it;
			goto _iter_begin_4733734256;
		}
		_iter_end_4733734256:;
	}
	_216739_ok = true;
	return _216739_ok;
}



inline jule::Bool _1e5054722_Sema::_method_check_fn_types(void) {
	jule::Bool _217536_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_funcs;
		auto it = expr.begin();
		_iter_begin_4733738656:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_Fn> _1e5054722_decl = *it;
			{
				this->self->_method_check_type_fn(_1e5054722_decl);
			}
			_iter_next_4733738656:;
			++it;
			goto _iter_begin_4733738656;
		}
		_iter_end_4733738656:;
	}
	_217536_ok = true;
	return _217536_ok;
}



inline void _1e5054722_Sema::_method_check_package_types(void) {
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4733742176:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e5054722_f = *it;
			{
				this->self->_method_set_current_file(_1e5054722_f);
				this->self->_method_check_global_types();
			}
			_iter_next_4733742176:;
			++it;
			goto _iter_begin_4733742176;
		}
		_iter_end_4733742176:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4733742736:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e5054722_f = *it;
			{
				this->self->_method_set_current_file(_1e5054722_f);
				this->self->_method_precheck_fn_types();
			}
			_iter_next_4733742736:;
			++it;
			goto _iter_begin_4733742736;
		}
		_iter_end_4733742736:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4733743072:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e5054722_f = *it;
			{
				this->self->_method_set_current_file(_1e5054722_f);
				this->self->_method_check_fn_types();
			}
			_iter_next_4733743072:;
			++it;
			goto _iter_begin_4733743072;
		}
		_iter_end_4733743072:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4733747680:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e5054722_f = *it;
			{
				this->self->_method_set_current_file(_1e5054722_f);
				this->self->_method_check_struct_types();
			}
			_iter_next_4733747680:;
			++it;
			goto _iter_begin_4733747680;
		}
		_iter_end_4733747680:;
	}
}



inline void _1e5054722_Sema::_method_set_file_sema_fields(void) {
	{
		auto &expr = this->self->_field_file->_field_funcs;
		auto it = expr.begin();
		_iter_begin_4733753536:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_Fn> _1e5054722_f = *it;
			{
				_1e5054722_f->_field_sema=this->self;
			}
			_iter_next_4733753536:;
			++it;
			goto _iter_begin_4733753536;
		}
		_iter_end_4733753536:;
	}
	{
		auto &expr = this->self->_field_file->_field_structs;
		auto it = expr.begin();
		_iter_begin_4733754208:;
		if (it != expr.end()) {
			jule::Ptr<_1e398ee72_Struct> _1e5054722_st = *it;
			{
				_1e5054722_st->_field_sema=this->self;
			}
			_iter_next_4733754208:;
			++it;
			goto _iter_begin_4733754208;
		}
		_iter_end_4733754208:;
	}
}



inline void _1e5054722_Sema::_method_set_sema_fields(void) {
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4733757904:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e5054722_file = *it;
			{
				this->self->_method_set_current_file(_1e5054722_file);
				this->self->_method_set_file_sema_fields();
			}
			_iter_next_4733757904:;
			++it;
			goto _iter_begin_4733757904;
		}
		_iter_end_4733757904:;
	}
}



inline void _1e5054722_Sema::_method_check(jule::Slice<jule::Ptr<_1e5291035_SymbolTable>>& _222330_files) {
	this->self->_field_files=_222330_files;
	this->self->_method_check_imports();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_enums();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_set_sema_fields();
	this->self->_method_impl_impls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_types();
}







std::ostream &operator<<(std::ostream &_Stream, const _1e5054722_Sema &_Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e50b0492_IterRelation &_Src) {
	_Stream << "IterRelation{";
	_Stream << "range:" << _Src._field_range;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e50b0492_Var> _1e522c29b_RangeChecker::_method_build_var(jule::Ptr<_1e38d4ec7_VarDecl>& _88829_decl) {
	jule::Ptr<_1e50b0492_Var> _88917_v = _1e4cc167b_build_var(_88829_decl);
	return _88917_v;
}



inline void _1e522c29b_RangeChecker::_method_set_size_key(void) {
	if (((*this)._field_rang->_field_key_a == nullptr) || _1e3bad8dd_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_1e6420856_TypeSymbol>(new( std::nothrow ) _1e6420856_TypeSymbol(jule::Ptr<_1e38d4ec7_TypeDecl>(),jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("int", 3))))));
	{
		auto &_match_expr{ (*this)._field_d->_field_model };
		if (!(_match_expr.type_is<jule::Ptr<_1e50b0492_Var>>())) { goto _case_end_4734487472; }
		_case_begin_4734487472:;
		{
			(*this)._field_kind->_field_key_a->_field_iter_relation=jule::new_struct<_1e50b0492_IterRelation>(new( std::nothrow ) _1e50b0492_IterRelation((*this)._field_d->_field_model.operator jule::Ptr<_1e50b0492_Var>()));
		}
		goto _match_end_4734490672;
		_case_end_4734487472:;
		_match_end_4734490672:;
	}
}



inline void _1e522c29b_RangeChecker::_method_check_range_expr_validity(jule::Ptr<_1e50ac4b1_Data>& _91949_d,jule::Ptr<_1e50b0492_Var>& _91960_key,jule::Ptr<_1e6420856_TypeKind>& _91976_k) {
	jule::Bool _92017__mut = _91960_key->_field_mutable;
	if (_92017__mut && (!(_91976_k->_method_mutable()))) {
		_92017__mut=false;
	}
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr(_92017__mut,_91960_key->_field_reference,_91960_key->_field_kind->_field_kind,_91949_d,(*this)._field_rang->_field_in_token);
}



inline void _1e522c29b_RangeChecker::_method_check_slice(void) {
	(*this)._method_set_size_key();
	if (((*this)._field_rang->_field_key_b == nullptr) || _1e3bad8dd_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ptr<_1e6420856_Slc> _93817_slc = (*this)._field_d->_field_kind->_method_slc();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1e6420856_TypeSymbol>(new( std::nothrow ) _1e6420856_TypeSymbol(jule::Ptr<_1e38d4ec7_TypeDecl>(),_93817_slc->_field_elem));
	(*this)._method_check_range_expr_validity((*this)._field_d,(*this)._field_kind->_field_key_b,_93817_slc->_field_elem);
}



inline void _1e522c29b_RangeChecker::_method_check_array(void) {
	(*this)._method_set_size_key();
	if (((*this)._field_rang->_field_key_b == nullptr) || _1e3bad8dd_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ptr<_1e6420856_Arr> _95117_arr = (*this)._field_d->_field_kind->_method_arr();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1e6420856_TypeSymbol>(new( std::nothrow ) _1e6420856_TypeSymbol(jule::Ptr<_1e38d4ec7_TypeDecl>(),_95117_arr->_field_elem));
	(*this)._method_check_range_expr_validity((*this)._field_d,(*this)._field_kind->_field_key_b,_95117_arr->_field_elem);
}



inline void _1e522c29b_RangeChecker::_method_check_map_key_a(void) {
	if (((*this)._field_rang->_field_key_a == nullptr) || _1e3bad8dd_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	jule::Ptr<_1e6420856_Map> _96317_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_1e6420856_TypeSymbol>(new( std::nothrow ) _1e6420856_TypeSymbol(jule::Ptr<_1e38d4ec7_TypeDecl>(),_96317_m->_field_key));
	jule::Ptr<_1e50ac4b1_Data> _96717_d = jule::new_ptr<_1e50ac4b1_Data>((*((*this)._field_d)));
	_96717_d->_field_kind=_96317_m->_field_key;
	(*this)._method_check_range_expr_validity(_96717_d,(*this)._field_kind->_field_key_a,_96317_m->_field_key);
}



inline void _1e522c29b_RangeChecker::_method_check_map_key_b(void) {
	if (((*this)._field_rang->_field_key_b == nullptr) || _1e3bad8dd_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ptr<_1e6420856_Map> _97817_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1e6420856_TypeSymbol>(new( std::nothrow ) _1e6420856_TypeSymbol(jule::Ptr<_1e38d4ec7_TypeDecl>(),_97817_m->_field_val));
	jule::Ptr<_1e50ac4b1_Data> _98217_d = jule::new_ptr<_1e50ac4b1_Data>((*((*this)._field_d)));
	_98217_d->_field_kind=_97817_m->_field_val;
	(*this)._method_check_range_expr_validity(_98217_d,(*this)._field_kind->_field_key_b,_97817_m->_field_val);
}



inline void _1e522c29b_RangeChecker::_method_check_map(void) {
	(*this)._method_check_map_key_a();
	(*this)._method_check_map_key_b();
}



inline void _1e522c29b_RangeChecker::_method_check_str(void) {
	(*this)._method_set_size_key();
	if (((*this)._field_rang->_field_key_b == nullptr) || _1e3bad8dd_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1e6420856_TypeSymbol>(new( std::nothrow ) _1e6420856_TypeSymbol(jule::Ptr<_1e38d4ec7_TypeDecl>(),jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("u8", 2))))));
}



inline jule::Bool _1e522c29b_RangeChecker::_method_check(void) {
	{
		if (!(((*this)._field_d->_field_kind->_field_variadic))) { goto _case_end_4734556992; }
		goto _match_end_4734550704;
		_case_end_4734556992:;
		if (!(((*this)._field_d->_field_kind->_method_slc() != nullptr))) { goto _case_end_4734556768; }
		_case_begin_4734556768:;
		{
			(*this)._method_check_slice();
			return true;
		}
		goto _match_end_4734550704;
		_case_end_4734556768:;
		if (!(((*this)._field_d->_field_kind->_method_arr() != nullptr))) { goto _case_end_4734555216; }
		_case_begin_4734555216:;
		{
			(*this)._method_check_array();
			return true;
		}
		goto _match_end_4734550704;
		_case_end_4734555216:;
		if (!(((*this)._field_d->_field_kind->_method_map() != nullptr))) { goto _case_end_4734555312; }
		_case_begin_4734555312:;
		{
			(*this)._method_check_map();
			return true;
		}
		goto _match_end_4734550704;
		_case_end_4734555312:;
		_case_begin_4734551984:;
		{
			jule::Ptr<_1e6420856_Prim> _102517_prim = (*this)._field_d->_field_kind->_method_prim();
			if ((_102517_prim != nullptr) && _102517_prim->_method_is_str()) {
				(*this)._method_check_str();
				return true;
			}
		}
		goto _match_end_4734550704;
		_case_end_4734551984:;
		_match_end_4734550704:;
	}
	(*this)._field_sc->_field_s->_method_push_err((*this)._field_rang->_field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e522c29b_RangeChecker &_Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e4ee54e8_ImportInfo> _1e5291035_SymbolTable::_method_find_package(jule::Str _2535_ident) {
	{
		auto &expr = (*this)._field_imports;
		auto it = expr.begin();
		_iter_begin_4734627968:;
		if (it != expr.end()) {
			jule::Ptr<_1e4ee54e8_ImportInfo> _1e5291035_pkg = *it;
			{
				if (_1e5291035_pkg->_field_ident == _2535_ident) {
					return _1e5291035_pkg;
				}
			}
			_iter_next_4734627968:;
			++it;
			goto _iter_begin_4734627968;
		}
		_iter_end_4734627968:;
	}
	return nullptr;
}



inline jule::Ptr<_1e4ee54e8_ImportInfo> _1e5291035_SymbolTable::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1e4ee54e8_ImportInfo>)> _3737_selector) {
	if (_3737_selector == nullptr) {
		return nullptr;
	}
	{
		auto &expr = (*this)._field_imports;
		auto it = expr.begin();
		_iter_begin_4734632320:;
		if (it != expr.end()) {
			jule::Ptr<_1e4ee54e8_ImportInfo> _1e5291035_pkg = *it;
			{
				if (_3737_selector(_1e5291035_pkg)) {
					return _1e5291035_pkg;
				}
			}
			_iter_next_4734632320:;
			++it;
			goto _iter_begin_4734632320;
		}
		_iter_end_4734632320:;
	}
	return nullptr;
}



inline jule::Ptr<_1e50b0492_Var> _1e5291035_SymbolTable::_method_find_var(jule::Str _5231_ident,jule::Bool _5243_cpp_linked) {
	return (*this)._method___find_var(_5231_ident,_5243_cpp_linked,false);
}



inline jule::Ptr<_1e6420856_TypeAlias> _1e5291035_SymbolTable::_method_find_type_alias(jule::Str _5838_ident,jule::Bool _5850_cpp_linked) {
	return (*this)._method___find_type_alias(_5838_ident,_5850_cpp_linked,false);
}



inline jule::Ptr<_1e398ee72_Struct> _1e5291035_SymbolTable::_method_find_struct(jule::Str _6434_ident,jule::Bool _6446_cpp_linked) {
	{
		auto &expr = (*this)._field_structs;
		auto it = expr.begin();
		_iter_begin_4734640880:;
		if (it != expr.end()) {
			jule::Ptr<_1e398ee72_Struct> _1e5291035_s = *it;
			{
				if ((_1e5291035_s->_field_ident == _6434_ident) && (_1e5291035_s->_field_cpp_linked == _6446_cpp_linked)) {
					return _1e5291035_s;
				}
			}
			_iter_next_4734640880:;
			++it;
			goto _iter_begin_4734640880;
		}
		_iter_end_4734640880:;
	}
	return nullptr;
}



inline jule::Ptr<_1e4b15a20_Fn> _1e5291035_SymbolTable::_method_find_fn(jule::Str _7530_ident,jule::Bool _7542_cpp_linked) {
	{
		auto &expr = (*this)._field_funcs;
		auto it = expr.begin();
		_iter_begin_4734645184:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_Fn> _1e5291035_f = *it;
			{
				if ((_1e5291035_f->_field_ident == _7530_ident) && (_1e5291035_f->_field_cpp_linked == _7542_cpp_linked)) {
					return _1e5291035_f;
				}
			}
			_iter_next_4734645184:;
			++it;
			goto _iter_begin_4734645184;
		}
		_iter_end_4734645184:;
	}
	return nullptr;
}



inline jule::Ptr<_1e4d61232_Trait> _1e5291035_SymbolTable::_method_find_trait(jule::Str _8633_ident) {
	{
		auto &expr = (*this)._field_traits;
		auto it = expr.begin();
		_iter_begin_4734648912:;
		if (it != expr.end()) {
			jule::Ptr<_1e4d61232_Trait> _1e5291035_t = *it;
			{
				if (_1e5291035_t->_field_ident == _8633_ident) {
					return _1e5291035_t;
				}
			}
			_iter_next_4734648912:;
			++it;
			goto _iter_begin_4734648912;
		}
		_iter_end_4734648912:;
	}
	return nullptr;
}



inline jule::Ptr<_1e4d62387_Enum> _1e5291035_SymbolTable::_method_find_enum(jule::Str _9732_ident) {
	{
		auto &expr = (*this)._field_enums;
		auto it = expr.begin();
		_iter_begin_4734649856:;
		if (it != expr.end()) {
			jule::Ptr<_1e4d62387_Enum> _1e5291035_e = *it;
			{
				if (_1e5291035_e->_field_ident == _9732_ident) {
					return _1e5291035_e;
				}
			}
			_iter_next_4734649856:;
			++it;
			goto _iter_begin_4734649856;
		}
		_iter_end_4734649856:;
	}
	return nullptr;
}



inline jule::Ptr<_1e50b0492_Var> _1e5291035_SymbolTable::_method___find_var(jule::Str _10829_ident,jule::Bool _10841_cpp_linked,jule::Bool _10859_reverse) {
	if (_10859_reverse) {
		jule::I64 _11021_i = (*this)._field_vars.len() - 1LL;
		for (; _11021_i >= 0LL; (_11021_i)--) {
			{
				jule::Ptr<_1e50b0492_Var> _11225_v = (*this)._field_vars[_11021_i];
				if ((_11225_v->_field_ident == _10829_ident) && (_11225_v->_field_cpp_linked == _10841_cpp_linked)) {
					return _11225_v;
				}
			}
		_iter_next_4734657488:;
		}
		_iter_end_4734657488:;
	} else {
		{
			auto &expr = (*this)._field_vars;
			auto it = expr.begin();
			_iter_begin_4734661392:;
			if (it != expr.end()) {
				jule::Ptr<_1e50b0492_Var> _1e5291035_v = *it;
				{
					if ((_1e5291035_v->_field_ident == _10829_ident) && (_1e5291035_v->_field_cpp_linked == _10841_cpp_linked)) {
						return _1e5291035_v;
					}
				}
				_iter_next_4734661392:;
				++it;
				goto _iter_begin_4734661392;
			}
			_iter_end_4734661392:;
		}
	}
	return nullptr;
}



inline jule::Ptr<_1e6420856_TypeAlias> _1e5291035_SymbolTable::_method___find_type_alias(jule::Str _12736_ident,jule::Bool _12748_cpp_linked,jule::Bool _12766_reverse) {
	if (_12766_reverse) {
		jule::I64 _12921_i = (*this)._field_type_aliases.len() - 1LL;
		for (; _12921_i >= 0LL; (_12921_i)--) {
			{
				jule::Ptr<_1e6420856_TypeAlias> _13125_ta = (*this)._field_type_aliases[_12921_i];
				if ((_13125_ta->_field_ident == _12736_ident) && (_13125_ta->_field_cpp_linked == _12748_cpp_linked)) {
					return _13125_ta;
				}
			}
		_iter_next_4734667472:;
		}
		_iter_end_4734667472:;
	} else {
		{
			auto &expr = (*this)._field_type_aliases;
			auto it = expr.begin();
			_iter_begin_4734671376:;
			if (it != expr.end()) {
				jule::Ptr<_1e6420856_TypeAlias> _1e5291035_ta = *it;
				{
					if ((_1e5291035_ta->_field_ident == _12736_ident) && (_1e5291035_ta->_field_cpp_linked == _12748_cpp_linked)) {
						return _1e5291035_ta;
					}
				}
				_iter_next_4734671376:;
				++it;
				goto _iter_begin_4734671376;
			}
			_iter_end_4734671376:;
		}
	}
	return nullptr;
}



inline jule::Any _1e5291035_SymbolTable::_method_def_by_ident(jule::Str _14831_ident,jule::Bool _14843_cpp_linked) {
	{
		auto &expr = (*this)._field_vars;
		auto it = expr.begin();
		_iter_begin_4734676032:;
		if (it != expr.end()) {
			jule::Ptr<_1e50b0492_Var> _1e5291035_v = *it;
			{
				if ((_1e5291035_v->_field_ident == _14831_ident) && (_1e5291035_v->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1e5291035_v);
				}
			}
			_iter_next_4734676032:;
			++it;
			goto _iter_begin_4734676032;
		}
		_iter_end_4734676032:;
	}
	{
		auto &expr = (*this)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_4734676496:;
		if (it != expr.end()) {
			jule::Ptr<_1e6420856_TypeAlias> _1e5291035_ta = *it;
			{
				if ((_1e5291035_ta->_field_ident == _14831_ident) && (_1e5291035_ta->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1e5291035_ta);
				}
			}
			_iter_next_4734676496:;
			++it;
			goto _iter_begin_4734676496;
		}
		_iter_end_4734676496:;
	}
	{
		auto &expr = (*this)._field_structs;
		auto it = expr.begin();
		_iter_begin_4734681760:;
		if (it != expr.end()) {
			jule::Ptr<_1e398ee72_Struct> _1e5291035_s = *it;
			{
				if ((_1e5291035_s->_field_ident == _14831_ident) && (_1e5291035_s->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1e5291035_s);
				}
			}
			_iter_next_4734681760:;
			++it;
			goto _iter_begin_4734681760;
		}
		_iter_end_4734681760:;
	}
	{
		auto &expr = (*this)._field_funcs;
		auto it = expr.begin();
		_iter_begin_4734676816:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_Fn> _1e5291035_f = *it;
			{
				if ((_1e5291035_f->_field_ident == _14831_ident) && (_1e5291035_f->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1e5291035_f);
				}
			}
			_iter_next_4734676816:;
			++it;
			goto _iter_begin_4734676816;
		}
		_iter_end_4734676816:;
	}
	if (_14843_cpp_linked) {
		return jule::Any(nullptr);
	}
	{
		auto &expr = (*this)._field_traits;
		auto it = expr.begin();
		_iter_begin_4734686896:;
		if (it != expr.end()) {
			jule::Ptr<_1e4d61232_Trait> _1e5291035_t = *it;
			{
				if (_1e5291035_t->_field_ident == _14831_ident) {
					return jule::Any(_1e5291035_t);
				}
			}
			_iter_next_4734686896:;
			++it;
			goto _iter_begin_4734686896;
		}
		_iter_end_4734686896:;
	}
	{
		auto &expr = (*this)._field_enums;
		auto it = expr.begin();
		_iter_begin_4734687184:;
		if (it != expr.end()) {
			jule::Ptr<_1e4d62387_Enum> _1e5291035_e = *it;
			{
				if (_1e5291035_e->_field_ident == _14831_ident) {
					return jule::Any(_1e5291035_e);
				}
			}
			_iter_next_4734687184:;
			++it;
			goto _iter_begin_4734687184;
		}
		_iter_end_4734687184:;
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1e5291035_SymbolTable::_method_is_duplicated_ident(jule::Uintptr _19534_itself,jule::Str _19551_ident,jule::Bool _19563_cpp_linked) {
	{
		auto &expr = (*this)._field_vars;
		auto it = expr.begin();
		_iter_begin_4734693840:;
		if (it != expr.end()) {
			jule::Ptr<_1e50b0492_Var> &_1e5291035_v = *it;
			{
				if (((static_cast<jule::Uintptr>(_1e5291035_v) != _19534_itself) && (_1e5291035_v->_field_ident == _19551_ident)) && (_1e5291035_v->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4734693840:;
			++it;
			goto _iter_begin_4734693840;
		}
		_iter_end_4734693840:;
	}
	{
		auto &expr = (*this)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_4734694288:;
		if (it != expr.end()) {
			jule::Ptr<_1e6420856_TypeAlias> &_1e5291035_ta = *it;
			{
				if (((static_cast<jule::Uintptr>(_1e5291035_ta) != _19534_itself) && (_1e5291035_ta->_field_ident == _19551_ident)) && (_1e5291035_ta->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4734694288:;
			++it;
			goto _iter_begin_4734694288;
		}
		_iter_end_4734694288:;
	}
	{
		auto &expr = (*this)._field_structs;
		auto it = expr.begin();
		_iter_begin_4734699456:;
		if (it != expr.end()) {
			jule::Ptr<_1e398ee72_Struct> &_1e5291035_s = *it;
			{
				if (((static_cast<jule::Uintptr>(_1e5291035_s) != _19534_itself) && (_1e5291035_s->_field_ident == _19551_ident)) && (_1e5291035_s->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4734699456:;
			++it;
			goto _iter_begin_4734699456;
		}
		_iter_end_4734699456:;
	}
	{
		auto &expr = (*this)._field_funcs;
		auto it = expr.begin();
		_iter_begin_4734701760:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_Fn> &_1e5291035_f = *it;
			{
				if (((static_cast<jule::Uintptr>(_1e5291035_f) != _19534_itself) && (_1e5291035_f->_field_ident == _19551_ident)) && (_1e5291035_f->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4734701760:;
			++it;
			goto _iter_begin_4734701760;
		}
		_iter_end_4734701760:;
	}
	if (_19563_cpp_linked) {
		return false;
	}
	{
		auto &expr = (*this)._field_traits;
		auto it = expr.begin();
		_iter_begin_4734703936:;
		if (it != expr.end()) {
			jule::Ptr<_1e4d61232_Trait> &_1e5291035_t = *it;
			{
				if ((static_cast<jule::Uintptr>(_1e5291035_t) != _19534_itself) && (_1e5291035_t->_field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_4734703936:;
			++it;
			goto _iter_begin_4734703936;
		}
		_iter_end_4734703936:;
	}
	{
		auto &expr = (*this)._field_enums;
		auto it = expr.begin();
		_iter_begin_4734708496:;
		if (it != expr.end()) {
			jule::Ptr<_1e4d62387_Enum> &_1e5291035_e = *it;
			{
				if ((static_cast<jule::Uintptr>(_1e5291035_e) != _19534_itself) && (_1e5291035_e->_field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_4734708496:;
			++it;
			goto _iter_begin_4734708496;
		}
		_iter_end_4734708496:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e5291035_SymbolTable &_Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e50ac4b1_Data::_method_is_nil(void) {
	return (*this)._field_kind->_method_is_nil();
}



inline jule::Bool _1e50ac4b1_Data::_method_is_void(void) {
	return (*this)._field_kind->_method_void();
}



inline jule::Bool _1e50ac4b1_Data::_method_is_const(void) {
	return (*this)._field_constant != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e50ac4b1_Data &_Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "cast_kind:" << _Src._field_cast_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "variadiced:" << _Src._field_variadiced << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e50ac4b1_Value &_Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _1e50ac4b1_Eval::_method_push_err(_1e3bad8dd_Token _26927_token,jule::Str _26941_fmt,jule::Slice<jule::Any> _26954_args) {
	(*this)._field_s->_method_push_err(_26927_token,_26941_fmt,_26954_args);
}



inline void _1e50ac4b1_Eval::_method_push_suggestion(jule::Str _27434_fmt,jule::Slice<jule::Any> _27447_args) {
	(*this)._field_s->_method_push_suggestion(_27434_fmt,_27447_args);
}



inline jule::Bool _1e50ac4b1_Eval::_method_is_unsafe(void) {
	return (*this)._field_unsafety;
}



inline jule::Bool _1e50ac4b1_Eval::_method_is_global(void) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_1e5054722_Sema>>())) { goto _case_end_4734726192; }
		_case_begin_4734726192:;
		{
			return true;
		}
		goto _match_end_4734724672;
		_case_end_4734726192:;
		_case_begin_4734724224:;
		{
			return false;
		}
		goto _match_end_4734724672;
		_case_end_4734724224:;
		_match_end_4734724672:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_lit_nil(void) {
	jule::Ptr<_1c8b9b83b_Const> _29317_constant = _1c8b9b83b_Const::_static_method_new_nil();
	return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),nullptr)),jule::Ptr<_1e6420856_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_29317_constant),false,_29317_constant));
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_lit_str(jule::Ptr<_1e38d4ec7_LitExpr>& _30423_l) {
	jule::Str _30517_s = _30423_l->_field_value.slice(1LL,_30423_l->_field_value.len() - 1LL);
	if (_1e3bad8dd_is_raw_str(_30423_l->_field_value)) {
		_30517_s=_1c8d06aa6_to_raw_str(static_cast<jule::Slice<jule::U8>>(_30517_s));
	} else {
		_30517_s=_1c8d06aa6_to_str(static_cast<jule::Slice<jule::U8>>(_30517_s));
	}
	jule::Ptr<_1c8b9b83b_Const> _31117_constant = _1c8b9b83b_Const::_static_method_new_str(_30517_s);
	return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("str", 3)))),jule::Ptr<_1e6420856_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_31117_constant),false,_31117_constant));
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_lit_bool(jule::Ptr<_1e38d4ec7_LitExpr>& _32524_l) {
	jule::Ptr<_1c8b9b83b_Const> _32617_constant = _1c8b9b83b_Const::_static_method_new_bool(_32524_l->_field_value == jule::Str("true", 4));
	return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1e6420856_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_32617_constant),false,_32617_constant));
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_lit_rune(jule::Ptr<_1e38d4ec7_LitExpr>& _33924_l) {
	
	
	jule::Str _34313_lt = _33924_l->_field_value.slice(1LL,_33924_l->_field_value.len() - 1LL);
	jule::I32 _34413_r = _1c8d06aa6_to_rune(static_cast<jule::Slice<jule::U8>>(_34313_lt));
	jule::Ptr<_1e50ac4b1_Data> _34517_data = jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::Ptr<_1e6420856_TypeKind>(),jule::Ptr<_1e6420856_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,_1c8b9b83b_Const::_static_method_new_i64(static_cast<jule::I64>(_34413_r))));
	jule::Bool _35213_is_ascii = _1c8d06aa6_is_ascii(_34413_r);
	if (_35213_is_ascii) {
		_34517_data->_field_kind=jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("u8", 2))));
	} else {
		_34517_data->_field_kind=jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("i32", 3))));
	}
	_34517_data->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_RuneExprModel>(new( std::nothrow ) _1e4d70a6b_RuneExprModel(_34413_r)));
	_34517_data->_field_is_rune=true;
	return _34517_data;
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_lit_float(jule::Ptr<_1e38d4ec7_LitExpr>& _36825_l) {
	
	jule::F64 _37114_f;
	std::tie(_37114_f,std::ignore) = _1e3307ee4_parse_float(_36825_l->_field_value,64LL);
	jule::Ptr<_1c8b9b83b_Const> _37217_constant = _1c8b9b83b_Const::_static_method_new_f64(_37114_f);
	return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("f64", 3)))),jule::Ptr<_1e6420856_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_37217_constant),false,_37217_constant));
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_lit_int(jule::Ptr<_1e38d4ec7_LitExpr>& _38627_l) {
	
	jule::Str _38917_lit = _38627_l->_field_value;
	jule::Int _39017_base = 0LL;
	{
		if (!((_38917_lit.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4734770768; }
		_case_begin_4734770768:;
		{
			_38917_lit=_38917_lit.slice(2LL);
			_39017_base=16LL;
		}
		goto _match_end_4734769264;
		_case_end_4734770768:;
		if (!((_38917_lit.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4734770496; }
		_case_begin_4734770496:;
		{
			_38917_lit=_38917_lit.slice(2LL);
			_39017_base=2LL;
		}
		goto _match_end_4734769264;
		_case_end_4734770496:;
		if (!((_38917_lit.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4734770592; }
		_case_begin_4734770592:;
		{
			_38917_lit=_38917_lit.slice(2LL);
			_39017_base=8LL;
		}
		goto _match_end_4734769264;
		_case_end_4734770592:;
		if (!(((_38917_lit[0LL] == '0') && (_38917_lit.len() > 1LL)))) { goto _case_end_4734769664; }
		_case_begin_4734769664:;
		{
			_38917_lit=_38917_lit.slice(1LL);
			_39017_base=8LL;
		}
		goto _match_end_4734769264;
		_case_end_4734769664:;
		_case_begin_4734769376:;
		{
			_39017_base=10LL;
		}
		goto _match_end_4734769264;
		_case_end_4734769376:;
		_match_end_4734769264:;
	}
	jule::Ptr<_1e50ac4b1_Data> _41317_d = jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::Ptr<_1e6420856_TypeKind>(),jule::Ptr<_1e6420856_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ptr<_1c8b9b83b_Const>()));
	jule::Any _41917_value = jule::Any(nullptr);
	jule::I64 _42014_sig;
	jule::Int _42019_err;
	std::tie(_42014_sig,_42019_err) = _1e24a4812_parse_int(_38917_lit,_39017_base,64LL);
	if (_42019_err == 0LLU) {
		_41917_value=jule::Any(_42014_sig);
		_41317_d->_field_constant=_1c8b9b83b_Const::_static_method_new_i64(_42014_sig);
	} else {
		jule::U64 _42518_unsig;
		jule::Int _42525_err;
		std::tie(_42518_unsig,_42525_err) = _1e24a4812_parse_uint(_38917_lit,_39017_base,64LL);
		if (_42525_err != 0LLU) {
			(*this)._method_push_err(_38627_l->_field_token,jule::Str("arithmetic value overflow", 25),jule::Slice<jule::Any>());
			(*this)._method_push_suggestion(jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
		}
		_41317_d->_field_constant=_1c8b9b83b_Const::_static_method_new_u64(_42518_unsig);
		_41917_value=jule::Any(_42518_unsig);
	}
	_41317_d->_field_kind=jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(_1e50ac4b1_kind_by_bitsize(_41917_value))));
	_1e50ac4b1_normalize_bitsize(_41317_d);
	_41317_d->_field_model=jule::Any(_41317_d->_field_constant);
	return _41317_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_lit_num(jule::Ptr<_1e38d4ec7_LitExpr>& _44427_l) {
	{
		if (!((_1e3bad8dd_is_float(_44427_l->_field_value)))) { goto _case_end_4734796224; }
		_case_begin_4734796224:;
		{
			return (*this)._method_lit_float(_44427_l);
		}
		goto _match_end_4734794704;
		_case_end_4734796224:;
		_case_begin_4734794880:;
		{
			return (*this)._method_lit_int(_44427_l);
		}
		goto _match_end_4734794704;
		_case_end_4734794880:;
		_match_end_4734794704:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_lit(jule::Ptr<_1e38d4ec7_LitExpr> _45127_lit) {
	{
		if (!((_45127_lit->_method_is_nil()))) { goto _case_end_4734801584; }
		_case_begin_4734801584:;
		{
			return (*this)._method_lit_nil();
		}
		goto _match_end_4734799872;
		_case_end_4734801584:;
		if (!((_1e3bad8dd_is_str(_45127_lit->_field_value)))) { goto _case_end_4734801680; }
		_case_begin_4734801680:;
		{
			return (*this)._method_lit_str(_45127_lit);
		}
		goto _match_end_4734799872;
		_case_end_4734801680:;
		if (!((_1e3bad8dd_is_bool(_45127_lit->_field_value)))) { goto _case_end_4734801024; }
		_case_begin_4734801024:;
		{
			return (*this)._method_lit_bool(_45127_lit);
		}
		goto _match_end_4734799872;
		_case_end_4734801024:;
		if (!((_1e3bad8dd_is_rune(_45127_lit->_field_value)))) { goto _case_end_4734801120; }
		_case_begin_4734801120:;
		{
			return (*this)._method_lit_rune(_45127_lit);
		}
		goto _match_end_4734799872;
		_case_end_4734801120:;
		if (!((_1e3bad8dd_is_num(_45127_lit->_field_value)))) { goto _case_end_4734801216; }
		_case_begin_4734801216:;
		{
			return (*this)._method_lit_num(_45127_lit);
		}
		goto _match_end_4734799872;
		_case_end_4734801216:;
		_case_begin_4734800048:;
		{
			return nullptr;
		}
		goto _match_end_4734799872;
		_case_end_4734800048:;
		_match_end_4734799872:;
	}
}



inline jule::Any _1e50ac4b1_Eval::_method_find_builtins(jule::Str _46232_ident) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_1e4ee54e8_ImportInfo>>())) { goto _case_end_4734809440; }
		_case_begin_4734809440:;
		{
			jule::Any _46521_def = _1e50ac4b1_find_builtins_import(_46232_ident,(*this)._field_lookup.operator jule::Ptr<_1e4ee54e8_ImportInfo>());
			if (_46521_def != nullptr) {
				return _46521_def;
			}
		}
		goto _match_end_4734809968;
		_case_end_4734809440:;
		if (!(_match_expr.type_is<jule::Ptr<_1e5054722_Sema>>())) { goto _case_end_4734810112; }
		_case_begin_4734810112:;
		{
			jule::Any _47121_def = _1e50ac4b1_find_builtins_sema(_46232_ident,(*this)._field_lookup.operator jule::Ptr<_1e5054722_Sema>());
			if (_47121_def != nullptr) {
				return _47121_def;
			}
		}
		goto _match_end_4734809968;
		_case_end_4734810112:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_ScopeChecker>>())) { goto _case_end_4734810208; }
		_case_begin_4734810208:;
		{
			jule::Any _47721_def = _1e50ac4b1_find_builtins_sema(_46232_ident,(*this)._field_lookup.operator jule::Ptr<_1e4d6ee22_ScopeChecker>()->_field_s);
			if (_47721_def != nullptr) {
				return _47721_def;
			}
		}
		goto _match_end_4734809968;
		_case_end_4734810208:;
		_match_end_4734809968:;
	}
	return _1c8ac49ea_find_builtin_def(_46232_ident);
}



inline jule::Any _1e50ac4b1_Eval::_method_get_def(jule::Str _48626_ident,jule::Bool _48638_cpp_linked) {
	if ((!(_48638_cpp_linked))) {
		jule::Ptr<_1e4d62387_Enum> _48821_enm = (*this)._field_lookup.get()._method_find_enum(_48626_ident);
		if (_48821_enm != nullptr) {
			return jule::Any(_48821_enm);
		}
	}
	jule::Ptr<_1e50b0492_Var> _49417_v = (*this)._field_lookup.get()._method_find_var(_48626_ident,_48638_cpp_linked);
	if (_49417_v != nullptr) {
		return jule::Any(_49417_v);
	}
	jule::Ptr<_1e4b15a20_Fn> _49917_f = (*this)._field_lookup.get()._method_find_fn(_48626_ident,_48638_cpp_linked);
	if (_49917_f != nullptr) {
		return jule::Any(_49917_f);
	}
	jule::Ptr<_1e398ee72_Struct> _50417_s = (*this)._field_lookup.get()._method_find_struct(_48626_ident,_48638_cpp_linked);
	if (_50417_s != nullptr) {
		return jule::Any(_50417_s);
	}
	jule::Ptr<_1e6420856_TypeAlias> _50917_ta = (*this)._field_lookup.get()._method_find_type_alias(_48626_ident,_48638_cpp_linked);
	if (_50917_ta != nullptr) {
		return jule::Any(_50917_ta);
	}
	return (*this)._method_find_builtins(_48626_ident);
}



inline void _1e50ac4b1_Eval::_method_push_reference(jule::Ptr<_1e4cc167b_ReferenceStack>& _51738_references) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_ScopeChecker>>())) { goto _case_end_4734853120; }
		_case_begin_4734853120:;
		{
			jule::Ptr<_1e4d6ee22_ScopeChecker> _52021_sc = (*this)._field_lookup.operator jule::Ptr<_1e4d6ee22_ScopeChecker>()->_method_get_root();
			if ((!(_51738_references->_method_exist_1(_52021_sc->_field_owner)))) {
				_51738_references->_method_push(jule::Any(_52021_sc->_field_owner));
			}
		}
		goto _match_end_4734842288;
		_case_end_4734853120:;
		_case_begin_4734841760:;
		{
			if (((*this)._field_owner != nullptr) && (!(_51738_references->_method_exist_0((*this)._field_owner)))) {
				_51738_references->_method_push(jule::Any((*this)._field_owner));
			}
		}
		goto _match_end_4734842288;
		_case_end_4734841760:;
		_match_end_4734842288:;
	}
}



inline void _1e50ac4b1_Eval::_method_push_reference_to_fn(jule::Ptr<_1e4b15a20_FnIns>& _53244_f) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_ScopeChecker>>())) { goto _case_end_4734840480; }
		_case_begin_4734840480:;
		{
			jule::Ptr<_1e4d6ee22_ScopeChecker> _53521_sc = (*this)._field_lookup.operator jule::Ptr<_1e4d6ee22_ScopeChecker>()->_method_get_root();
			if (_53521_sc->_field_owner->_field_decl->_method_is_init() && (!(_53521_sc->_field_owner->_field_references->_method_exist_1(_53244_f)))) {
				_53521_sc->_field_owner->_field_refers->_method_push(jule::Any(_53244_f));
			}
		}
		goto _match_end_4734840688;
		_case_end_4734840480:;
		_match_end_4734840688:;
	}
	(*this)._method_push_reference(_53244_f->_field_references);
}



inline void _1e50ac4b1_Eval::_method_push_reference_to_var(jule::Ptr<_1e50b0492_Var>& _54345_v) {
	if (_54345_v->_field_references == nullptr) {
		return;
	}
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_ScopeChecker>>())) { goto _case_end_4734871696; }
		_case_begin_4734871696:;
		{
			jule::Ptr<_1e4d6ee22_ScopeChecker> _55021_sc = (*this)._field_lookup.operator jule::Ptr<_1e4d6ee22_ScopeChecker>()->_method_get_root();
			if (_55021_sc->_field_owner->_field_decl->_method_is_init() && (!(_55021_sc->_field_owner->_field_references->_method_exist_0(_54345_v)))) {
				_55021_sc->_field_owner->_field_refers->_method_push(jule::Any(_54345_v));
			}
		}
		goto _match_end_4734872304;
		_case_end_4734871696:;
		_match_end_4734872304:;
	}
	(*this)._method_push_reference(_54345_v->_field_references);
}



inline void _1e50ac4b1_Eval::_method_push_reference_to_struct(jule::Ptr<_1e398ee72_StructIns>& _55948_s) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_ScopeChecker>>())) { goto _case_end_4734881920; }
		_case_begin_4734881920:;
		{
			jule::Ptr<_1e4d6ee22_ScopeChecker> _56221_sc = (*this)._field_lookup.operator jule::Ptr<_1e4d6ee22_ScopeChecker>()->_method_get_root();
			if (_56221_sc->_field_owner->_field_decl->_method_is_init() && (!(_56221_sc->_field_owner->_field_references->_method_exist_2(_55948_s)))) {
				_56221_sc->_field_owner->_field_refers->_method_push(jule::Any(_55948_s));
			}
		}
		goto _match_end_4734882448;
		_case_end_4734881920:;
		_match_end_4734882448:;
	}
	(*this)._method_push_reference(_55948_s->_field_references);
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method___eval_enum(jule::Ptr<_1e4d62387_Enum> _57030_enm) {
	return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_57030_enm)),jule::Ptr<_1e6420856_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),true,nullptr));
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_enum(jule::Ptr<_1e4d62387_Enum> _58232_enm,_1e3bad8dd_Token _58244_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_58232_enm->_field_public,_58232_enm->_field_token)))) {
		(*this)._method_push_err(_58244_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_58232_enm->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	return (*this)._method___eval_enum(_58232_enm);
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method___eval_struct(jule::Ptr<_1e398ee72_StructIns> _59232_s) {
	return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_59232_s)),jule::Ptr<_1e6420856_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_59232_s),true,nullptr));
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_struct(jule::Ptr<_1e398ee72_StructIns> _60534_s,_1e3bad8dd_Token _60549_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_60534_s->_field_decl->_field_public,_60534_s->_field_decl->_field_token)))) {
		(*this)._method_push_err(_60549_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_60534_s->_field_decl->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	return (*this)._method___eval_struct(_60534_s);
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_fn_ins(jule::Ptr<_1e4b15a20_FnIns> _61530_f) {
	return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_61530_f)),jule::Ptr<_1e6420856_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_61530_f),false,nullptr));
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_fn(jule::Ptr<_1e4b15a20_Fn> _62830_f,_1e3bad8dd_Token _62838_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_62830_f->_field_public,_62830_f->_field_token)))) {
		(*this)._method_push_err(_62838_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_62830_f->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1e4b15a20_FnIns> _63517_ins = _62830_f->_method_instance();
	(*this)._method_push_reference_to_fn(_63517_ins);
	return (*this)._method_eval_fn_ins(_63517_ins);
}



inline void _1e50ac4b1_Eval::_method_push_illegal_cycle_error(jule::Ptr<_1e50b0492_Var>& _64044_v1,jule::Ptr<_1e50b0492_Var>& _64055_v2,jule::Str& _64070_message) {
	
	jule::Str _64313_refers_to = _1e24777a2_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_64044_v1->_field_ident),jule::Any(_64055_v2->_field_ident)}));
	_64070_message=((_1e4cc167b_str_repeat(jule::Str(" ", 1),4LL) + _64313_refers_to) + jule::Str("\n", 1)) + _64070_message;
}



inline jule::Bool _1e50ac4b1_Eval::_method_check_cross_cycle(jule::Ptr<_1e50b0492_Var>& _64737_v,jule::Str& _64751_message) {
	{
		auto &expr = _64737_v->_field_depends;
		auto it = expr.begin();
		_iter_begin_4734940592:;
		if (it != expr.end()) {
			jule::Ptr<_1e50b0492_Var> &_1e50ac4b1_d = *it;
			{
				if (_1e50ac4b1_d == (*this)._field_owner) {
					(*this)._method_push_illegal_cycle_error(_64737_v,_1e50ac4b1_d,_64751_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_1e50ac4b1_d,_64751_message)))) {
					(*this)._method_push_illegal_cycle_error(_64737_v,_1e50ac4b1_d,_64751_message);
					return false;
				}
			}
			_iter_next_4734940592:;
			++it;
			goto _iter_begin_4734940592;
		}
		_iter_end_4734940592:;
	}
	return true;
}



inline jule::Bool _1e50ac4b1_Eval::_method_check_illegal_cycles(jule::Ptr<_1e50b0492_Var>& _66644_v,_1e3bad8dd_Token _66653_decl_token) {
	jule::Bool _66674_ok = jule::Bool();
	if ((*this)._field_owner == nullptr) {
		_66674_ok = true;
		return _66674_ok;
	}
	if ((*this)._field_owner == _66644_v) {
		(*this)._method_push_err((*this)._field_owner->_field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*this)._field_owner->_field_ident)}));
		_66674_ok = false;
		return _66674_ok;
	}
	jule::Str _67817_message = jule::Str();
	if ((!((*this)._method_check_cross_cycle(_66644_v,_67817_message)))) {
		jule::Str _68121_err_msg = _67817_message;
		_67817_message=jule::Str();
		(*this)._method_push_illegal_cycle_error((*this)._field_owner,_66644_v,_67817_message);
		_68121_err_msg=_68121_err_msg + _67817_message;
		(*this)._method_push_err(_66653_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_68121_err_msg)}));
		_66674_ok = false;
		return _66674_ok;
	}
	(*this)._field_owner->_field_depends = jule::alloc_for_append((*this)._field_owner->_field_depends,1);(*this)._field_owner->_field_depends.push(_66644_v);
	_66674_ok = true;
	return _66674_ok;
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_var(jule::Ptr<_1e50b0492_Var> _69331_v,_1e3bad8dd_Token _69340_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_69331_v->_field_public,_69331_v->_field_token)))) {
		(*this)._method_push_err(_69340_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_69331_v->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_69331_v->_field_used=true;
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_1e5054722_Sema>>())) { goto _case_end_4734966816; }
		_case_begin_4734966816:;
		{
			jule::Bool _70517_ok = (*this)._method_check_illegal_cycles(_69331_v,_69340_error_token);
			if ((!(_70517_ok))) {
				return nullptr;
			}
		}
		goto _match_end_4734967088;
		_case_end_4734966816:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_ScopeChecker>>())) { goto _case_end_4734967456; }
		_case_begin_4734967456:;
		{
			if ((!(_69331_v->_field_reference)) || (*this)._method_is_unsafe()) {
				goto _match_end_4734967088;
			}
			jule::Ptr<_1e4d6ee22_ScopeChecker> _71521_s = (*this)._field_lookup.operator jule::Ptr<_1e4d6ee22_ScopeChecker>();
			while ((_71521_s->_field_owner == nullptr) && (_71521_s->_field_parent != nullptr)) {
				{
					_71521_s=_71521_s->_field_parent;
				}
			_iter_next_4734968336:;
			}
			_iter_end_4734968336:;
			if (((_71521_s->_field_owner != nullptr) && _71521_s->_field_owner->_field_anon) && (_69331_v->_field_scope != _71521_s->_field_owner->_field_scope)) {
				(*this)._method_push_err(_69340_error_token,jule::Str("anonymous functions cannot access to reference \"@\" definition of parent scope", 77),jule::Slice<jule::Any>({jule::Any(_69331_v->_field_ident)}));
			}
		}
		goto _match_end_4734967088;
		_case_end_4734967456:;
		_match_end_4734967088:;
	}
	(*this)._method_push_reference_to_var(_69331_v);
	if ((!(_69331_v->_field_cpp_linked)) && ((_69331_v->_field_value == nullptr) || (_69331_v->_field_value->_field_data == nullptr))) {
		if (_69331_v->_field_constant) {
			(*this)._field_s->_method_check_type_var(_69331_v,(*this)._field_s);
			if (_69331_v->_field_value->_field_data == nullptr) {
				return nullptr;
			}
		}
	}
	if ((_69331_v->_field_kind == nullptr) || (_69331_v->_field_kind->_field_kind == nullptr)) {
		(*this)._field_s->_method_check_type_var(_69331_v,(*this)._field_lookup);
		if ((_69331_v->_field_kind == nullptr) || (_69331_v->_field_kind->_field_kind == nullptr)) {
			return nullptr;
		}
	}
	jule::Ptr<_1e50ac4b1_Data> _74917_d = jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(_69331_v->_field_kind->_field_kind->_method_clone(),jule::Ptr<_1e6420856_TypeKind>(),_69331_v->_field_mutable,_69331_v->_field_reference,(!(_69331_v->_field_constant)),jule::Bool(),jule::Bool(),jule::Any(_69331_v),false,jule::Ptr<_1c8b9b83b_Const>()));
	if (((!(_69331_v->_field_cpp_linked)) && _69331_v->_method_is_initialized()) && (_69331_v->_field_value->_field_data != nullptr)) {
		_74917_d->_field_is_rune=_69331_v->_field_value->_field_data->_field_is_rune;
	}
	if (_69331_v->_field_constant && (_69331_v->_field_value->_field_data->_field_constant != nullptr)) {
		_74917_d->_field_constant=jule::new_ptr<_1c8b9b83b_Const>((*(_69331_v->_field_value->_field_data->_field_constant)));
		_74917_d->_field_model=jule::Any(_74917_d->_field_constant);
	}
	if (_74917_d->_field_kind->_method_fnc() != nullptr) {
		jule::Ptr<_1e4b15a20_FnIns> _76821_f = _74917_d->_field_kind->_method_fnc();
		if (_76821_f->_field_decl != nullptr) {
			_76821_f->_field_decl->_field_ident=_69331_v->_field_ident;
		}
	}
	return _74917_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_type_alias(jule::Ptr<_1e6420856_TypeAlias> _77938_ta,_1e3bad8dd_Token _77954_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_77938_ta->_field_public,_77938_ta->_field_token)))) {
		(*this)._method_push_err(_77954_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_77938_ta->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_77938_ta->_field_used=true;
	jule::Trait<_1e6420856_Kind> _78817_kind = _77938_ta->_field_kind->_field_kind->_field_kind;
	{
		auto &_match_expr{ _78817_kind };
		if (!(_match_expr.type_is<jule::Ptr<_1e398ee72_StructIns>>())) { goto _case_end_4735014464; }
		_case_begin_4735014464:;
		{
			return (*this)._method___eval_struct(_78817_kind.operator jule::Ptr<_1e398ee72_StructIns>());
		}
		goto _match_end_4735009024;
		_case_end_4735014464:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d62387_Enum>>())) { goto _case_end_4735009424; }
		_case_begin_4735009424:;
		{
			return (*this)._method___eval_enum(_78817_kind.operator jule::Ptr<_1e4d62387_Enum>());
		}
		goto _match_end_4735009024;
		_case_end_4735009424:;
		_case_begin_4735003104:;
		{
			jule::Ptr<_1e50ac4b1_Data> _79721_d = jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(_77938_ta->_field_kind->_field_kind->_method_clone(),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),true,jule::Ptr<_1c8b9b83b_Const>()));
			_79721_d->_field_kind->_field_generic=_77938_ta->_field_generic;
			if (_77938_ta->_field_cpp_linked) {
				_79721_d->_field_kind->_field_cpp_ident=_77938_ta->_field_ident;
			}
			_79721_d->_field_model=jule::Any(_79721_d->_field_kind);
			return _79721_d;
		}
		goto _match_end_4735009024;
		_case_end_4735003104:;
		_match_end_4735009024:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_def(jule::Any _81431_def,_1e3bad8dd_Token _81441_ident) {
	{
		auto &_match_expr{ _81431_def };
		if (!(_match_expr.type_is<jule::Ptr<_1e50b0492_Var>>())) { goto _case_end_4735023856; }
		_case_begin_4735023856:;
		{
			return (*this)._method_eval_var(_81431_def.operator jule::Ptr<_1e50b0492_Var>(),_81441_ident);
		}
		goto _match_end_4735020736;
		_case_end_4735023856:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d62387_Enum>>())) { goto _case_end_4735023952; }
		_case_begin_4735023952:;
		{
			return (*this)._method_eval_enum(_81431_def.operator jule::Ptr<_1e4d62387_Enum>(),_81441_ident);
		}
		goto _match_end_4735020736;
		_case_end_4735023952:;
		if (!(_match_expr.type_is<jule::Ptr<_1e398ee72_Struct>>())) { goto _case_end_4735023328; }
		_case_begin_4735023328:;
		{
			return (*this)._method_eval_struct(_81431_def.operator jule::Ptr<_1e398ee72_Struct>()->_method_instance(),_81441_ident);
		}
		goto _match_end_4735020736;
		_case_end_4735023328:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4b15a20_Fn>>())) { goto _case_end_4735023424; }
		_case_begin_4735023424:;
		{
			return (*this)._method_eval_fn(_81431_def.operator jule::Ptr<_1e4b15a20_Fn>(),_81441_ident);
		}
		goto _match_end_4735020736;
		_case_end_4735023424:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4b15a20_FnIns>>())) { goto _case_end_4735023520; }
		_case_begin_4735023520:;
		{
			return (*this)._method_eval_fn_ins(_81431_def.operator jule::Ptr<_1e4b15a20_FnIns>());
		}
		goto _match_end_4735020736;
		_case_end_4735023520:;
		if (!(_match_expr.type_is<jule::Ptr<_1e6420856_TypeAlias>>())) { goto _case_end_4735021216; }
		_case_begin_4735021216:;
		{
			return (*this)._method_eval_type_alias(_81431_def.operator jule::Ptr<_1e6420856_TypeAlias>(),_81441_ident);
		}
		goto _match_end_4735020736;
		_case_end_4735021216:;
		_case_begin_4735020640:;
		{
			(*this)._method_push_err(_81441_ident,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_81441_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4735020736;
		_case_end_4735020640:;
		_match_end_4735020736:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_ident(jule::Ptr<_1e38d4ec7_IdentExpr> _84029_ident) {
	jule::Any _84117_def = (*this)._method_get_def(_84029_ident->_field_ident,_84029_ident->_field_cpp_linked);
	return (*this)._method_eval_def(_84117_def,_84029_ident->_field_token);
}



inline void _1e50ac4b1_Eval::_method_eval_unary_minus(jule::Ptr<_1e50ac4b1_Data>& _84536_d) {
	jule::Ptr<_1e6420856_Prim> _84613_t = _84536_d->_field_kind->_method_prim();
	if ((_84613_t == nullptr) || (!(_1c8c8ad04_is_num(_84613_t->_method_to_str())))) {
		_84536_d=nullptr;
		return;
	}
	if (_84536_d->_method_is_const()) {
		{
			if (!((_84536_d->_field_constant->_method_is_f64()))) { goto _case_end_4735044272; }
			_case_begin_4735044272:;
			{
				_84536_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_84536_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_4735044032;
			_case_end_4735044272:;
			if (!((_84536_d->_field_constant->_method_is_i64()))) { goto _case_end_4735044384; }
			_case_begin_4735044384:;
			{
				_84536_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_84536_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4735044032;
			_case_end_4735044384:;
			if (!((_84536_d->_field_constant->_method_is_u64()))) { goto _case_end_4735044496; }
			_case_begin_4735044496:;
			{
				_84536_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_84536_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4735044032;
			_case_end_4735044496:;
			_match_end_4735044032:;
		}
		_1e50ac4b1_normalize_type(_84536_d);
	}
	_84536_d->_field_lvalue=false;
	_84536_d->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_UnaryExprModel>(new( std::nothrow ) _1e4d70a6b_UnaryExprModel(_84536_d->_field_model,jule::Str("-", 1))));
}



inline void _1e50ac4b1_Eval::_method_eval_unary_plus(jule::Ptr<_1e50ac4b1_Data>& _86835_d) {
	jule::Ptr<_1e6420856_Prim> _86913_t = _86835_d->_field_kind->_method_prim();
	if ((_86913_t == nullptr) || (!(_1c8c8ad04_is_num(_86913_t->_method_to_str())))) {
		_86835_d=nullptr;
		return;
	}
	if (_86835_d->_method_is_const()) {
		{
			if (!((_86835_d->_field_constant->_method_is_f64()))) { goto _case_end_4735059440; }
			_case_begin_4735059440:;
			{
				_86835_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_86835_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_4735059200;
			_case_end_4735059440:;
			if (!((_86835_d->_field_constant->_method_is_i64()))) { goto _case_end_4735059552; }
			_case_begin_4735059552:;
			{
				_86835_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_86835_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4735059200;
			_case_end_4735059552:;
			if (!((_86835_d->_field_constant->_method_is_u64()))) { goto _case_end_4735059664; }
			_case_begin_4735059664:;
			{
				_86835_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_86835_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4735059200;
			_case_end_4735059664:;
			_match_end_4735059200:;
		}
		_1e50ac4b1_normalize_type(_86835_d);
	}
	_86835_d->_field_lvalue=false;
	_86835_d->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_UnaryExprModel>(new( std::nothrow ) _1e4d70a6b_UnaryExprModel(_86835_d->_field_model,jule::Str("+", 1))));
}



inline void _1e50ac4b1_Eval::_method_eval_unary_caret(jule::Ptr<_1e50ac4b1_Data>& _89136_d) {
	jule::Ptr<_1e6420856_Prim> _89213_t = _89136_d->_field_kind->_method_prim();
	if ((_89213_t == nullptr) || (!(_1c8c8ad04_is_int(_89213_t->_method_to_str())))) {
		_89136_d=nullptr;
		return;
	}
	if (_89136_d->_method_is_const()) {
		{
			if (!((_89136_d->_field_constant->_method_is_i64()))) { goto _case_end_4735074864; }
			_case_begin_4735074864:;
			{
				_89136_d->_field_constant->_method_set_i64(static_cast<jule::I64>((~(_89136_d->_field_constant->_method_read_i64()))));
			}
			goto _match_end_4735074640;
			_case_end_4735074864:;
			if (!((_89136_d->_field_constant->_method_is_u64()))) { goto _case_end_4735074976; }
			_case_begin_4735074976:;
			{
				_89136_d->_field_constant->_method_set_u64(static_cast<jule::U64>((~(_89136_d->_field_constant->_method_read_u64()))));
			}
			goto _match_end_4735074640;
			_case_end_4735074976:;
			_match_end_4735074640:;
		}
	}
	_89136_d->_field_lvalue=false;
	_89136_d->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_UnaryExprModel>(new( std::nothrow ) _1e4d70a6b_UnaryExprModel(_89136_d->_field_model,jule::Str("^", 1))));
}



inline void _1e50ac4b1_Eval::_method_eval_unary_excl(jule::Ptr<_1e50ac4b1_Data>& _91535_d) {
	jule::Ptr<_1e6420856_Prim> _91613_t = _91535_d->_field_kind->_method_prim();
	if ((_91613_t == nullptr) || (!(_91613_t->_method_is_bool()))) {
		_91535_d=nullptr;
		return;
	}
	if (_91535_d->_method_is_const()) {
		{
			if (!((_91535_d->_field_constant->_method_is_bool()))) { goto _case_end_4735087664; }
			_case_begin_4735087664:;
			{
				_91535_d->_field_constant->_method_set_bool((!(_91535_d->_field_constant->_method_read_bool())));
			}
			goto _match_end_4735087456;
			_case_end_4735087664:;
			_match_end_4735087456:;
		}
	}
	_91535_d->_field_lvalue=false;
	_91535_d->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_UnaryExprModel>(new( std::nothrow ) _1e4d70a6b_UnaryExprModel(_91535_d->_field_model,jule::Str("!", 1))));
}



inline void _1e50ac4b1_Eval::_method_eval_unary_star(jule::Ptr<_1e50ac4b1_Data>& _93639_d,_1e3bad8dd_Token& _93650_op) {
	{
		if (!((_93639_d->_field_kind->_method_ptr() != nullptr))) { goto _case_end_4735096128; }
		_case_begin_4735096128:;
		{
			if ((!((*this)._method_is_unsafe()))) {
				(*this)._method_push_err(_93650_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
			jule::Ptr<_1e6420856_Ptr> _94321_t = _93639_d->_field_kind->_method_ptr();
			if (_94321_t->_method_is_unsafe()) {
				_93639_d=nullptr;
				return;
			}
			_93639_d->_field_kind=_94321_t->_field_elem;
		}
		goto _match_end_4735094912;
		_case_end_4735096128:;
		if (!((_93639_d->_field_kind->_method_sptr() != nullptr))) { goto _case_end_4735096224; }
		_case_begin_4735096224:;
		{
			_93639_d->_field_kind=_93639_d->_field_kind->_method_sptr()->_field_elem;
		}
		goto _match_end_4735094912;
		_case_end_4735096224:;
		_case_begin_4735095056:;
		{
			_93639_d=nullptr;
			return;
		}
		goto _match_end_4735094912;
		_case_end_4735095056:;
		_match_end_4735094912:;
	}
	_93639_d->_field_constant=nullptr;
	_93639_d->_field_lvalue=true;
	_93639_d->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_UnaryExprModel>(new( std::nothrow ) _1e4d70a6b_UnaryExprModel(_93639_d->_field_model,jule::Str("*", 1))));
}



inline void _1e50ac4b1_Eval::_method_eval_unary_amper(jule::Ptr<_1e50ac4b1_Data>& _96636_d) {
	{
		auto &_match_expr{ _96636_d->_field_model };
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_StructLitExprModel>>())) { goto _case_end_4735113088; }
		_case_begin_4735113088:;
		{
			jule::Ptr<_1e4d70a6b_StructLitExprModel> _96921_lit = _96636_d->_field_model.operator jule::Ptr<_1e4d70a6b_StructLitExprModel>();
			_1e50ac4b1_make_struct_lit_alloc(_96636_d,_96921_lit);
		}
		goto _match_end_4735108256;
		_case_end_4735113088:;
		_case_begin_4735107712:;
		{
			{
				if (!((_1e6420856_can_get_ptr(_96636_d)))) { goto _case_end_4735110272; }
				_case_begin_4735110272:;
				{
					_96636_d->_field_kind=jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1e6420856_Ptr>(new( std::nothrow ) _1e6420856_Ptr(_96636_d->_field_kind->_method_clone()))));
					_96636_d->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_UnaryExprModel>(new( std::nothrow ) _1e4d70a6b_UnaryExprModel(_96636_d->_field_model,jule::Str("&", 1))));
				}
				goto _match_end_4735109312;
				_case_end_4735110272:;
				_case_begin_4735109488:;
				{
					_96636_d=nullptr;
				}
				goto _match_end_4735109312;
				_case_end_4735109488:;
				_match_end_4735109312:;
			}
		}
		goto _match_end_4735108256;
		_case_end_4735107712:;
		_match_end_4735108256:;
	}
	if (_96636_d != nullptr) {
		_96636_d->_field_constant=nullptr;
		_96636_d->_field_lvalue=false;
		_96636_d->_field_mutable=true;
	}
}



inline void _1e50ac4b1_Eval::_method_eval_unary_type_decl(jule::Ptr<_1e50ac4b1_Data>& _99544_d,jule::Ptr<_1e38d4ec7_UnaryExpr>& _99559_u) {
	_1e6420856_TypeChecker _99617_tc = _1e6420856_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ptr<_1e6420856_Referencer>(),_99559_u->_field_op,jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>>(),jule::Slice<jule::Ptr<_1e6420856_TypeAlias>>(),jule::Bool());
	{
		auto &_match_expr{ _99559_u->_field_op._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4735125024; }
		_case_begin_4735125024:;
		{
			_99544_d->_field_kind=jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_99617_tc._method_build_ptr_from_type(_99544_d->_field_kind)));
		}
		goto _match_end_4735121952;
		_case_end_4735125024:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4735125120; }
		_case_begin_4735125120:;
		{
			_99544_d->_field_kind=jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_99617_tc._method_build_sptr_from_type(_99544_d->_field_kind)));
		}
		goto _match_end_4735121952;
		_case_end_4735125120:;
		_case_begin_4735119936:;
		{
			(*this)._method_push_err(_99559_u->_field_op,jule::Str("invalid expression for unary @ operator", 39),jule::Slice<jule::Any>({jule::Any(_99559_u->_field_op._field_kind)}));
			_99544_d=nullptr;
			return;
		}
		goto _match_end_4735121952;
		_case_end_4735119936:;
		_match_end_4735121952:;
	}
	_99544_d->_field_decl=true;
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_unary(jule::Ptr<_1e38d4ec7_UnaryExpr> _101834_u) {
	jule::Ptr<_1e6420856_TypeKind> _101917_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_101917_prefix;
	});
	jule::Ptr<_1e50ac4b1_Data> _102317_d = this->self->_method_eval_expr_kind(_101834_u->_field_expr);
	if (_102317_d == nullptr) {
		return nullptr;
	}
	if (_102317_d->_field_decl) {
		this->self->_method_eval_unary_type_decl(_102317_d,_101834_u);
		return _102317_d;
	}
	jule::Ptr<_1e6420856_TypeKind> _103317_cast_kind = _102317_d->_field_cast_kind;
	{
		auto &_match_expr{ _101834_u->_field_op._field_kind };
		if (!((jule::Str("-", 1)) == _match_expr)) { goto _case_end_4735140416; }
		_case_begin_4735140416:;
		{
			this->self->_method_eval_unary_minus(_102317_d);
		}
		goto _match_end_4735140144;
		_case_end_4735140416:;
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4735140512; }
		_case_begin_4735140512:;
		{
			this->self->_method_eval_unary_plus(_102317_d);
		}
		goto _match_end_4735140144;
		_case_end_4735140512:;
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4735140608; }
		_case_begin_4735140608:;
		{
			this->self->_method_eval_unary_caret(_102317_d);
		}
		goto _match_end_4735140144;
		_case_end_4735140608:;
		if (!((jule::Str("!", 1)) == _match_expr)) { goto _case_end_4735140704; }
		_case_begin_4735140704:;
		{
			this->self->_method_eval_unary_excl(_102317_d);
		}
		goto _match_end_4735140144;
		_case_end_4735140704:;
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4735141152; }
		_case_begin_4735141152:;
		{
			this->self->_method_eval_unary_star(_102317_d,_101834_u->_field_op);
		}
		goto _match_end_4735140144;
		_case_end_4735141152:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4735141248; }
		_case_begin_4735141248:;
		{
			this->self->_method_eval_unary_amper(_102317_d);
		}
		goto _match_end_4735140144;
		_case_end_4735141248:;
		_case_begin_4735136016:;
		{
			_102317_d=nullptr;
		}
		goto _match_end_4735140144;
		_case_end_4735136016:;
		_match_end_4735140144:;
	}
	if (_102317_d == nullptr) {
		this->self->_method_push_err(_101834_u->_field_op,jule::Str("invalid expression for unary @ operator", 39),jule::Slice<jule::Any>({jule::Any(_101834_u->_field_op._field_kind)}));
	} else if (_102317_d->_method_is_const()) {
		_102317_d->_field_model=jule::Any(_102317_d->_field_constant);
	} else if (_103317_cast_kind != nullptr) {
		_102317_d->_field_cast_kind=_103317_cast_kind;
		_1e50ac4b1_apply_cast_kind(_102317_d);
	}
	return _102317_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_variadic(jule::Ptr<_1e38d4ec7_VariadicExpr> _105637_v) {
	jule::Ptr<_1e6420856_TypeKind> _105717_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_105717_prefix;
	});
	jule::Ptr<_1e50ac4b1_Data> _106117_d = this->self->_method_eval_expr_kind(_105637_v->_field_expr);
	if (_106117_d == nullptr) {
		return nullptr;
	}
	if ((!(_106117_d->_field_kind->_method_variadicable()))) {
		this->self->_method_push_err(_105637_v->_field_token,jule::Str("@ data-type is not variadicable", 31),jule::Slice<jule::Any>({jule::Any(_106117_d->_field_kind->_method_to_str())}));
		return nullptr;
	}
	_106117_d->_field_variadiced=true;
	_106117_d->_field_kind=_106117_d->_field_kind->_method_slc()->_field_elem;
	_106117_d->_field_kind->_field_variadic=true;
	return _106117_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_unsafe(jule::Ptr<_1e38d4ec7_UnsafeExpr> _107735_u) {
	jule::Bool _107813_unsafety = this->self->_field_unsafety;
	this->self->_field_unsafety=true;
	jule::Ptr<_1e50ac4b1_Data> _108117_d = this->self->_method_eval_expr_kind(_107735_u->_field_expr);
	this->self->_field_unsafety=_107813_unsafety;
	return _108117_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_arr(jule::Ptr<_1e38d4ec7_SliceExpr> _108832_s) {
	jule::Ptr<_1e6420856_Arr> _109017_pt = this->self->_field_prefix->_method_arr();
	jule::Ptr<_1e6420856_Arr> _109217_arr = jule::new_struct_ptr<_1e6420856_Arr>(new( std::nothrow ) _1e6420856_Arr(false,0LL,_109017_pt->_field_elem));
	if (_109017_pt->_field_auto) {
		_109217_arr->_field_n=static_cast<jule::I64>(_108832_s->_field_elems.len());
	} else {
		_109217_arr->_field_n=static_cast<jule::I64>(_108832_s->_field_elems.len());
		if (_109217_arr->_field_n > _109017_pt->_field_n) {
			this->self->_method_push_err(_108832_s->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if (_109217_arr->_field_n < _109017_pt->_field_n) {
			_109217_arr->_field_n=_109017_pt->_field_n;
		}
	}
	jule::Ptr<_1e4d70a6b_ArrayExprModel> _110917_model = jule::new_struct<_1e4d70a6b_ArrayExprModel>(new( std::nothrow ) _1e4d70a6b_ArrayExprModel(_109217_arr,jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_108832_s->_field_elems.len()))));
	jule::Ptr<_1e6420856_TypeKind> _111417_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_109217_arr->_field_elem;
	{
		auto &expr = _108832_s->_field_elems;
		auto it = expr.begin();
		_iter_begin_4734059072:;
		if (it != expr.end()) {
			jule::Any _1e50ac4b1_elem = *it;
			{
				jule::Ptr<_1e50ac4b1_Data> _111721_d = this->self->_method_eval_expr_kind(_1e50ac4b1_elem);
				if (_111721_d == nullptr) {
					goto _iter_next_4734059072;
				}
				this->self->_field_s->_method_check_assign_type(false,_109217_arr->_field_elem,_111721_d,_108832_s->_field_token);
				_110917_model->_field_elems = jule::alloc_for_append(_110917_model->_field_elems,1);_110917_model->_field_elems.push(_111721_d->_field_model);
			}
			_iter_next_4734059072:;
			++it;
			goto _iter_begin_4734059072;
		}
		_iter_end_4734059072:;
	}
	this->self->_field_prefix=_111417_prefix;
	return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_109217_arr)),jule::Ptr<_1e6420856_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_110917_model),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_exp_slc(jule::Ptr<_1e38d4ec7_SliceExpr> _113436_s,jule::Ptr<_1e6420856_TypeKind> _113455_elem_type) {
	jule::Ptr<_1e6420856_Slc> _113517_slc = jule::new_struct_ptr<_1e6420856_Slc>(new( std::nothrow ) _1e6420856_Slc(_113455_elem_type));
	jule::Ptr<_1e4d70a6b_SliceExprModel> _113917_model = jule::new_struct<_1e4d70a6b_SliceExprModel>(new( std::nothrow ) _1e4d70a6b_SliceExprModel(_113455_elem_type,jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_113436_s->_field_elems.len()))));
	jule::Ptr<_1e6420856_TypeKind> _114417_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_113517_slc->_field_elem;
	{
		auto &expr = _113436_s->_field_elems;
		auto it = expr.begin();
		_iter_begin_4734073696:;
		if (it != expr.end()) {
			jule::Any _1e50ac4b1_elem = *it;
			{
				jule::Ptr<_1e50ac4b1_Data> _114721_d = this->self->_method_eval_expr_kind(_1e50ac4b1_elem);
				if (_114721_d == nullptr) {
					goto _iter_next_4734073696;
				}
				this->self->_field_s->_method_check_assign_type(false,_113517_slc->_field_elem,_114721_d,_113436_s->_field_token);
				_113917_model->_field_elems = jule::alloc_for_append(_113917_model->_field_elems,1);_113917_model->_field_elems.push(_114721_d->_field_model);
			}
			_iter_next_4734073696:;
			++it;
			goto _iter_begin_4734073696;
		}
		_iter_end_4734073696:;
	}
	this->self->_field_prefix=_114417_prefix;
	return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_113517_slc)),jule::Ptr<_1e6420856_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_113917_model),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_slice_expr(jule::Ptr<_1e38d4ec7_SliceExpr> _116439_s) {
	if (this->self->_field_prefix != nullptr) {
		{
			if (!((this->self->_field_prefix->_method_arr() != nullptr))) { goto _case_end_4734085216; }
			_case_begin_4734085216:;
			{
				return this->self->_method_eval_arr(_116439_s);
			}
			goto _match_end_4734084992;
			_case_end_4734085216:;
			if (!((this->self->_field_prefix->_method_slc() != nullptr))) { goto _case_end_4734085328; }
			_case_begin_4734085328:;
			{
				jule::Ptr<_1e6420856_Slc> _117125_pt = this->self->_field_prefix->_method_slc();
				return this->self->_method_eval_exp_slc(_116439_s,_117125_pt->_field_elem);
			}
			goto _match_end_4734084992;
			_case_end_4734085328:;
			_match_end_4734084992:;
		}
	}
	jule::Ptr<_1e6420856_TypeKind> _117617_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	if (_116439_s->_field_elems.len() == 0LL) {
		this->self->_method_push_err(_116439_s->_field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1e50ac4b1_Data> _118417_first_elem = this->self->_method_eval_expr_kind(_116439_s->_field_elems[0LL]);
	if (_118417_first_elem == nullptr) {
		return nullptr;
	}
	jule::Ptr<_1e50ac4b1_Data> _118917_d = this->self->_method_eval_exp_slc(_116439_s,_118417_first_elem->_field_kind);
	this->self->_field_prefix=_117617_prefix;
	return _118917_d;
}



inline void _1e50ac4b1_Eval::_method_check_integer_indexing_by_data(jule::Ptr<_1e50ac4b1_Data>& _119554_d,_1e3bad8dd_Token _119564_token) {
	jule::Str _119613_err_key = _1e50ac4b1_check_data_for_integer_indexing(_119554_d);
	{
		auto &_match_expr{ _119613_err_key };
		if (!((jule::Str()) == _match_expr)) { goto _case_end_4734102480; }
		_case_begin_4734102480:;
		{
			return;
		}
		goto _match_end_4734100672;
		_case_end_4734102480:;
		if (!((jule::Str("type \"@\" is invalid for indexing", 32)) == _match_expr)) { goto _case_end_4734102576; }
		_case_begin_4734102576:;
		{
			(*this)._method_push_err(_119564_token,_119613_err_key,jule::Slice<jule::Any>({jule::Any(_119554_d->_field_kind->_method_to_str())}));
		}
		goto _match_end_4734100672;
		_case_end_4734102576:;
		_case_begin_4734099712:;
		{
			(*this)._method_push_err(_119564_token,_119613_err_key,jule::Slice<jule::Any>());
		}
		goto _match_end_4734100672;
		_case_end_4734099712:;
		_match_end_4734100672:;
	}
}



inline void _1e50ac4b1_Eval::_method_indexing_ptr(jule::Ptr<_1e50ac4b1_Data>& _120936_d,jule::Ptr<_1e50ac4b1_Data>& _120951_index,jule::Ptr<_1e38d4ec7_IndexingExpr>& _120966_i) {
	(*this)._method_check_integer_indexing_by_data(_120951_index,_120966_i->_field_token);
	jule::Ptr<_1e6420856_Ptr> _121217_ptr = _120936_d->_field_kind->_method_ptr();
	{
		if (!((_121217_ptr->_method_is_unsafe()))) { goto _case_end_4734110848; }
		_case_begin_4734110848:;
		{
			(*this)._method_push_err(_120966_i->_field_token,jule::Str("unsafe pointers not supports indexing", 37),jule::Slice<jule::Any>());
			return;
		}
		goto _match_end_4734110608;
		_case_end_4734110848:;
		if (!(((!((*this)._method_is_unsafe()))))) { goto _case_end_4734110944; }
		_case_begin_4734110944:;
		{
			(*this)._method_push_err(_120966_i->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		}
		goto _match_end_4734110608;
		_case_end_4734110944:;
		_match_end_4734110608:;
	}
	_120936_d->_field_kind=_121217_ptr->_field_elem->_method_clone();
}



inline void _1e50ac4b1_Eval::_method_indexing_arr(jule::Ptr<_1e50ac4b1_Data>& _122536_d,jule::Ptr<_1e50ac4b1_Data>& _122551_index,jule::Ptr<_1e38d4ec7_IndexingExpr>& _122566_i) {
	jule::Ptr<_1e6420856_Arr> _122617_arr = _122536_d->_field_kind->_method_arr();
	_122536_d->_field_kind=_122617_arr->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_122551_index,_122566_i->_field_token);
	if (_122551_index->_method_is_const() && (_122551_index->_field_constant->_method_as_f64() >= static_cast<jule::F64>(_122617_arr->_field_n))) {
		(*this)._method_push_err(_122566_i->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	}
}



inline void _1e50ac4b1_Eval::_method_indexing_slc(jule::Ptr<_1e50ac4b1_Data>& _123436_d,jule::Ptr<_1e50ac4b1_Data>& _123451_index,jule::Ptr<_1e38d4ec7_IndexingExpr>& _123466_i) {
	jule::Ptr<_1e6420856_Slc> _123517_slc = _123436_d->_field_kind->_method_slc();
	_123436_d->_field_kind=_123517_slc->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_123451_index,_123466_i->_field_token);
	if ((!(_123451_index->_method_is_const()))) {
		return;
	}
	{
		auto &_match_expr{ _123436_d->_field_model };
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_SliceExprModel>>())) { goto _case_end_4734135392; }
		_case_begin_4734135392:;
		{
			jule::Ptr<_1e4d70a6b_SliceExprModel> _124521_m = _123436_d->_field_model.operator jule::Ptr<_1e4d70a6b_SliceExprModel>();
			jule::F64 _124617_indx = _123451_index->_field_constant->_method_as_f64();
			if (_124617_indx >= static_cast<jule::F64>(_124521_m->_field_elems.len())) {
				(*this)._method_push_err(_123466_i->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			} else {
				_123436_d->_field_model=_124521_m->_field_elems[static_cast<jule::Int>(static_cast<jule::U64>(_124617_indx))];
				_123436_d->_field_decl=true;
			}
		}
		goto _match_end_4734135872;
		_case_end_4734135392:;
		_match_end_4734135872:;
	}
}



inline void _1e50ac4b1_Eval::_method_indexing_map(jule::Ptr<_1e50ac4b1_Data>& _125636_d,jule::Ptr<_1e50ac4b1_Data>& _125651_index,jule::Ptr<_1e38d4ec7_IndexingExpr>& _125670_i) {
	if (_125651_index == nullptr) {
		return;
	}
	jule::Ptr<_1e6420856_Map> _126117_m = _125636_d->_field_kind->_method_map();
	_1e522c29b_AssignTypeChecker _126217_atc = _1e522c29b_AssignTypeChecker((*this)._field_s,_126117_m->_field_key,_125651_index,_125670_i->_field_token);
	_126217_atc._method_check();
	_125636_d->_field_kind=_126117_m->_field_val->_method_clone();
}



inline void _1e50ac4b1_Eval::_method_indexing_str(jule::Ptr<_1e50ac4b1_Data>& _127336_d,jule::Ptr<_1e50ac4b1_Data>& _127351_index,jule::Ptr<_1e38d4ec7_IndexingExpr>& _127366_i) {
	
	_127336_d->_field_kind->_field_kind=_1e6420856_build_prim_type(jule::Str("u8", 2));
	if (_127351_index == nullptr) {
		return;
	}
	(*this)._method_check_integer_indexing_by_data(_127351_index,_127366_i->_field_token);
	if ((!(_127351_index->_method_is_const()))) {
		_127336_d->_field_constant=nullptr;
		return;
	}
	if (_127336_d->_method_is_const()) {
		_1e3bad8dd_Token _128917_error_token = _127366_i->_field_token;
		jule::I64 _129017_j = _127351_index->_field_constant->_method_as_i64();
		jule::Str _129117_s = _127336_d->_field_constant->_method_read_str();
		if (static_cast<jule::Int>(_129017_j) >= _129117_s.len()) {
			(*this)._method_push_err(_128917_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_127336_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_129117_s[_129017_j]));
		}
	}
}



inline void _1e50ac4b1_Eval::_method_to_indexing(jule::Ptr<_1e50ac4b1_Data>& _130035_d,jule::Ptr<_1e50ac4b1_Data>& _130050_index,jule::Ptr<_1e38d4ec7_IndexingExpr>& _130069_i) {
	{
		if (!((_130035_d->_field_kind->_method_ptr() != nullptr))) { goto _case_end_4734173744; }
		_case_begin_4734173744:;
		{
			(*this)._method_indexing_ptr(_130035_d,_130050_index,_130069_i);
			return;
		}
		goto _match_end_4734173472;
		_case_end_4734173744:;
		if (!((_130035_d->_field_kind->_method_arr() != nullptr))) { goto _case_end_4734173856; }
		_case_begin_4734173856:;
		{
			(*this)._method_indexing_arr(_130035_d,_130050_index,_130069_i);
			return;
		}
		goto _match_end_4734173472;
		_case_end_4734173856:;
		if (!((_130035_d->_field_kind->_method_slc() != nullptr))) { goto _case_end_4734173968; }
		_case_begin_4734173968:;
		{
			(*this)._method_indexing_slc(_130035_d,_130050_index,_130069_i);
			return;
		}
		goto _match_end_4734173472;
		_case_end_4734173968:;
		if (!((_130035_d->_field_kind->_method_map() != nullptr))) { goto _case_end_4734174080; }
		_case_begin_4734174080:;
		{
			(*this)._method_indexing_map(_130035_d,_130050_index,_130069_i);
			return;
		}
		goto _match_end_4734173472;
		_case_end_4734174080:;
		if (!((_130035_d->_field_kind->_method_prim() != nullptr))) { goto _case_end_4734174192; }
		_case_begin_4734174192:;
		{
			jule::Ptr<_1e6420856_Prim> _131917_prim = _130035_d->_field_kind->_method_prim();
			{
				if (!((_131917_prim->_method_is_str()))) { goto _case_end_4734184816; }
				_case_begin_4734184816:;
				{
					(*this)._method_indexing_str(_130035_d,_130050_index,_130069_i);
					return;
				}
				goto _match_end_4734184672;
				_case_end_4734184816:;
				_match_end_4734184672:;
			}
		}
		goto _match_end_4734173472;
		_case_end_4734174192:;
		_match_end_4734173472:;
	}
	(*this)._method_push_err(_130069_i->_field_token,jule::Str("@ data type is not support indexing", 35),jule::Slice<jule::Any>({jule::Any(_130035_d->_field_kind->_method_to_str())}));
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_ident_decl_from_indexing(jule::Ptr<_1e38d4ec7_IndexingExpr>& _133054_i) {
	{
		auto &_match_expr{ _133054_i->_field_expr };
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_IdentExpr>>())) { goto _case_end_4734193184; }
		goto _match_end_4734190800;
		_case_end_4734193184:;
		_case_begin_4734190256:;
		{
			this->self->_method_push_err(_133054_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		goto _match_end_4734190800;
		_case_end_4734190256:;
		_match_end_4734190800:;
	}
	jule::Ptr<_1e38d4ec7_IdentTypeDecl> _133817_decl = jule::new_struct<_1e38d4ec7_IdentTypeDecl>(new( std::nothrow ) _1e38d4ec7_IdentTypeDecl(_1e3bad8dd_Token(),_133054_i->_field_expr.operator jule::Ptr<_1e38d4ec7_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>>()));
	{
		auto &_match_expr{ _133054_i->_field_index };
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_UnaryExpr>>())) { goto _case_end_4734197872; }
		_case_begin_4734197872:;
		{
			jule::Ptr<_1e50ac4b1_Data> _134621_d = this->self->_method_eval_unary(_133054_i->_field_index.operator jule::Ptr<_1e38d4ec7_UnaryExpr>());
			if ((!(_134621_d->_field_decl))) {
				this->self->_method_push_err(_133054_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
			_133817_decl->_field_generics = jule::alloc_for_append(_133817_decl->_field_generics,1);_133817_decl->_field_generics.push(jule::new_struct<_1e38d4ec7_TypeDecl>(new( std::nothrow ) _1e38d4ec7_TypeDecl(_1e3bad8dd_Token(),jule::Any(_134621_d->_field_kind))));
		}
		goto _match_end_4734195264;
		_case_end_4734197872:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_TypeDecl>>())) { goto _case_end_4734197968; }
		_case_begin_4734197968:;
		{
			_133817_decl->_field_generics = jule::alloc_for_append(_133817_decl->_field_generics,1);_133817_decl->_field_generics.push(_133054_i->_field_index.operator jule::Ptr<_1e38d4ec7_TypeDecl>());
		}
		goto _match_end_4734195264;
		_case_end_4734197968:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_IdentExpr>>())) { goto _case_end_4734197344; }
		_case_begin_4734197344:;
		{
			_133817_decl->_field_generics = jule::alloc_for_append(_133817_decl->_field_generics,1);_133817_decl->_field_generics.push(jule::new_struct<_1e38d4ec7_TypeDecl>(new( std::nothrow ) _1e38d4ec7_TypeDecl(_1e3bad8dd_Token(),jule::Any(jule::new_struct<_1e38d4ec7_IdentTypeDecl>(new( std::nothrow ) _1e38d4ec7_IdentTypeDecl(_1e3bad8dd_Token(),_133054_i->_field_index.operator jule::Ptr<_1e38d4ec7_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>>()))))));
		}
		goto _match_end_4734195264;
		_case_end_4734197344:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_TupleExpr>>())) { goto _case_end_4734197440; }
		_case_begin_4734197440:;
		{
			{
				auto &expr = _133054_i->_field_index.operator jule::Ptr<_1e38d4ec7_TupleExpr>()->_field_expr;
				auto it = expr.begin();
				_iter_begin_4734203296:;
				if (it != expr.end()) {
					jule::Ptr<_1e38d4ec7_Expr> _1e50ac4b1_expr = *it;
					{
						{
							auto &_match_expr{ _1e50ac4b1_expr->_field_kind };
							if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_TypeDecl>>())) { goto _case_end_4734211408; }
							_case_begin_4734211408:;
							{
								_133817_decl->_field_generics = jule::alloc_for_append(_133817_decl->_field_generics,1);_133817_decl->_field_generics.push(_1e50ac4b1_expr->_field_kind.operator jule::Ptr<_1e38d4ec7_TypeDecl>());
							}
							goto _match_end_4734212096;
							_case_end_4734211408:;
							if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_IdentExpr>>())) { goto _case_end_4734212176; }
							_case_begin_4734212176:;
							{
								_133817_decl->_field_generics = jule::alloc_for_append(_133817_decl->_field_generics,1);_133817_decl->_field_generics.push(jule::new_struct<_1e38d4ec7_TypeDecl>(new( std::nothrow ) _1e38d4ec7_TypeDecl(_1e3bad8dd_Token(),jule::Any(jule::new_struct<_1e38d4ec7_IdentTypeDecl>(new( std::nothrow ) _1e38d4ec7_IdentTypeDecl(_1e3bad8dd_Token(),_1e50ac4b1_expr->_field_kind.operator jule::Ptr<_1e38d4ec7_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ptr<_1e38d4ec7_TypeDecl>>()))))));
							}
							goto _match_end_4734212096;
							_case_end_4734212176:;
							_match_end_4734212096:;
						}
					}
					_iter_next_4734203296:;
					++it;
					goto _iter_begin_4734203296;
				}
				_iter_end_4734203296:;
			}
		}
		goto _match_end_4734195264;
		_case_end_4734197440:;
		_case_begin_4734191232:;
		{
			this->self->_method_push_err(_133054_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		goto _match_end_4734195264;
		_case_end_4734191232:;
		_match_end_4734195264:;
	}
	return this->self->_method_eval_type(jule::new_struct<_1e38d4ec7_TypeDecl>(new( std::nothrow ) _1e38d4ec7_TypeDecl(_1e3bad8dd_Token(),jule::Any(_133817_decl))));
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_indexing(jule::Ptr<_1e38d4ec7_IndexingExpr> _138237_i) {
	jule::Ptr<_1e6420856_TypeKind> _138317_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_138317_prefix;
	});
	jule::Ptr<_1e50ac4b1_Data> _138717_d = this->self->_method_eval_expr_kind(_138237_i->_field_expr);
	if (_138717_d == nullptr) {
		return nullptr;
	}
	if (_138717_d->_field_decl) {
		return this->self->_method_eval_ident_decl_from_indexing(_138237_i);
	}
	_1e50ac4b1_Data _139717_old_d = (*(_138717_d));
	jule::Ptr<_1e50ac4b1_Data> _139917_index = this->self->_method_eval_expr_kind(_138237_i->_field_index);
	if (_139917_index == nullptr) {
		return nullptr;
	}
	_138717_d->_field_decl=false;
	this->self->_method_to_indexing(_138717_d,_139917_index,_138237_i);
	if (_138717_d->_method_is_const()) {
		_138717_d->_field_decl=false;
		_138717_d->_field_model=jule::Any(_138717_d->_field_constant);
	} else if (_138717_d->_field_decl) {
		_138717_d->_field_decl=false;
	} else {
		_138717_d->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_IndexigExprModel>(new( std::nothrow ) _1e4d70a6b_IndexigExprModel(jule::new_ptr<_1e50ac4b1_Data>(_139717_old_d),_139917_index)));
	}
	return _138717_d;
}



inline std::tuple<jule::Ptr<_1e50ac4b1_Data>,jule::Ptr<_1e50ac4b1_Data>> _1e50ac4b1_Eval::_method_eval_slicing_exprs(jule::Ptr<_1e38d4ec7_SlicingExpr>& _142943_s) {
	jule::Ptr<_1e6420856_TypeKind> _143017_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_143017_prefix;
	});
	jule::Ptr<_1e50ac4b1_Data> _143417_l = nullptr;
	jule::Ptr<_1e50ac4b1_Data> _143517_r = nullptr;
	if (_142943_s->_field_start != nullptr) {
		_143417_l=this->self->_method_eval_expr_kind(_142943_s->_field_start);
		if (_143417_l != nullptr) {
			this->self->_method_check_integer_indexing_by_data(_143417_l,_142943_s->_field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		}
	} else {
		_143417_l=jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1c8b9b83b_Const::_static_method_new_i64(0LL)));
		_143417_l->_field_model=jule::Any(_143417_l->_field_constant);
	}
	if (_142943_s->_field_to != nullptr) {
		_143517_r=this->self->_method_eval_expr_kind(_142943_s->_field_to);
		if (_143517_r != nullptr) {
			this->self->_method_check_integer_indexing_by_data(_143517_r,_142943_s->_field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		}
	}
	return std::make_tuple(_143417_l,_143517_r);
}



inline void _1e50ac4b1_Eval::_method_slicing_arr(jule::Ptr<_1e50ac4b1_Data>& _146431_d) {
	jule::Ptr<_1e6420856_TypeKind> _146517_elem_type = _146431_d->_field_kind->_method_arr()->_field_elem->_method_clone();
	_146431_d->_field_kind->_field_kind=jule::new_struct_ptr<_1e6420856_Slc>(new( std::nothrow ) _1e6420856_Slc(_146517_elem_type));
	_146431_d->_field_lvalue=false;
	_146431_d->_field_mutable=_146431_d->_field_mutable || (!(_146517_elem_type->_method_mutable()));
}



inline void _1e50ac4b1_Eval::_method_slicing_slc(jule::Ptr<_1e50ac4b1_Data>& _147531_d) {
	_147531_d->_field_lvalue=false;
}



inline void _1e50ac4b1_Eval::_method_slicing_str(jule::Ptr<_1e50ac4b1_Data>& _147931_d,jule::Ptr<_1e50ac4b1_Data>& _147942_l,jule::Ptr<_1e50ac4b1_Data>& _147953_r) {
	_147931_d->_field_lvalue=false;
	_147931_d->_field_mutable=true;
	if ((!(_147931_d->_method_is_const()))) {
		return;
	}
	if ((_147942_l == nullptr) || (_147953_r == nullptr)) {
		_147931_d->_field_constant=nullptr;
		return;
	}
	if (_147942_l->_method_is_const() && _147953_r->_method_is_const()) {
		jule::I64 _149217_left = _147942_l->_field_constant->_method_as_i64();
		if (_149217_left < 0LL) {
			return;
		}
		jule::Str _149717_s = _147931_d->_field_constant->_method_read_str();
		jule::I64 _149821_right = 0LL;
		if (_147953_r == nullptr) {
			_149821_right=static_cast<jule::I64>(_149717_s.len());
		} else {
			_149821_right=static_cast<jule::I64>(_147953_r->_field_constant->_method_as_i64());
		}
		if (_149217_left > _149821_right) {
			return;
		}
		_147931_d->_field_constant->_method_set_str(_149717_s.slice(_149217_left,_149821_right));
		_147931_d->_field_decl=true;
	} else {
		_147931_d->_field_constant=nullptr;
	}
}



inline void _1e50ac4b1_Eval::_method_check_slicing(jule::Ptr<_1e50ac4b1_Data>& _151537_d,jule::Ptr<_1e50ac4b1_Data>& _151548_l,jule::Ptr<_1e50ac4b1_Data>& _151559_r,jule::Ptr<_1e38d4ec7_SlicingExpr>& _151570_s) {
	{
		if (!((_151537_d->_field_kind->_method_arr() != nullptr))) { goto _case_end_4734280704; }
		_case_begin_4734280704:;
		{
			(*this)._method_slicing_arr(_151537_d);
			return;
		}
		goto _match_end_4734280528;
		_case_end_4734280704:;
		if (!((_151537_d->_field_kind->_method_slc() != nullptr))) { goto _case_end_4734280816; }
		_case_begin_4734280816:;
		{
			(*this)._method_slicing_slc(_151537_d);
			return;
		}
		goto _match_end_4734280528;
		_case_end_4734280816:;
		if (!((_151537_d->_field_kind->_method_prim() != nullptr))) { goto _case_end_4734280928; }
		_case_begin_4734280928:;
		{
			jule::Ptr<_1e6420856_Prim> _152617_prim = _151537_d->_field_kind->_method_prim();
			{
				if (!((_152617_prim->_method_is_str()))) { goto _case_end_4734287648; }
				_case_begin_4734287648:;
				{
					(*this)._method_slicing_str(_151537_d,_151548_l,_151559_r);
					return;
				}
				goto _match_end_4734287504;
				_case_end_4734287648:;
				_match_end_4734287504:;
			}
		}
		goto _match_end_4734280528;
		_case_end_4734280928:;
		_match_end_4734280528:;
	}
	(*this)._method_push_err(_151570_s->_field_token,jule::Str("@ data type is not support slicing", 34),jule::Slice<jule::Any>({jule::Any(_151537_d->_field_kind->_method_to_str())}));
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_slicing(jule::Ptr<_1e38d4ec7_SlicingExpr> _153736_s) {
	jule::Ptr<_1e50ac4b1_Data> _153817_d = this->self->_method_eval_expr_kind(_153736_s->_field_expr);
	if (_153817_d == nullptr) {
		return nullptr;
	}
	jule::Ptr<_1e50ac4b1_Data> _154318_l;
	jule::Ptr<_1e50ac4b1_Data> _154325_r;
	std::tie(_154318_l,_154325_r) = this->self->_method_eval_slicing_exprs(_153736_s);
	if (_154318_l == nullptr) {
		return _153817_d;
	}
	_153817_d->_field_decl=false;
	this->self->_method_check_slicing(_153817_d,_154318_l,_154325_r,_153736_s);
	_153817_d->_field_cast_kind=nullptr;
	if (_153817_d->_method_is_const()) {
		_153817_d->_field_decl=false;
		_153817_d->_field_model=jule::Any(_153817_d->_field_constant);
	} else if (_153817_d->_field_decl) {
		_153817_d->_field_decl=false;
	} else {
		jule::Ptr<_1e4d70a6b_SlicingExprModel> _156221_model = jule::new_struct<_1e4d70a6b_SlicingExprModel>(new( std::nothrow ) _1e4d70a6b_SlicingExprModel(_153817_d->_field_model,_154318_l->_field_model,jule::Any()));
		if (_154325_r != nullptr) {
			_156221_model->_field_right=_154325_r->_field_model;
		}
		_153817_d->_field_model=jule::Any(_156221_model);
	}
	return _153817_d;
}



inline void _1e50ac4b1_Eval::_method_cast_ptr(jule::Ptr<_1e6420856_TypeKind> _157731_t,jule::Ptr<_1e50ac4b1_Data> _157749_d,_1e3bad8dd_Token _157759_error_token) {
	jule::Ptr<_1e6420856_Sptr> _157813_sptr = _157749_d->_field_kind->_method_sptr();
	if (_157813_sptr != nullptr) {
		if ((!(_157731_t->_method_ptr()->_field_elem->_method_equals(_157813_sptr->_field_elem)))) {
			(*this)._method_push_err(_157759_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_157749_d->_field_kind->_method_to_str()),jule::Any(_157731_t->_method_to_str())}));
		}
		return;
	}
	if ((!((*this)._method_is_unsafe()))) {
		(*this)._method_push_err(_157759_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1e6420856_Prim> _159113_prim = _157749_d->_field_kind->_method_prim();
	if ((_157749_d->_field_kind->_method_ptr() == nullptr) && ((_159113_prim == nullptr) || (!(_1c8c8ad04_is_int(_159113_prim->_method_to_str()))))) {
		(*this)._method_push_err(_157759_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_157749_d->_field_kind->_method_to_str()),jule::Any(_157731_t->_method_to_str())}));
	}
	_157749_d->_field_constant=nullptr;
}



inline void _1e50ac4b1_Eval::_method_cast_struct(jule::Ptr<_1e6420856_TypeKind> _159934_t,jule::Ptr<_1e50ac4b1_Data> _159952_d,_1e3bad8dd_Token _159962_error_token) {
	jule::Ptr<_1e4d61232_Trait> _160017_tr = _159952_d->_field_kind->_method_trt();
	if (_160017_tr == nullptr) {
		(*this)._method_push_err(_159962_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_159952_d->_field_kind->_method_to_str()),jule::Any(_159934_t->_method_to_str())}));
		return;
	}
	jule::Ptr<_1e398ee72_StructIns> _160617_s = _159934_t->_method_strct();
	(*this)._method_push_reference_to_struct(_160617_s);
	if ((!(_160617_s->_field_decl->_method_is_implements(_160017_tr)))) {
		(*this)._method_push_err(_159962_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_159952_d->_field_kind->_method_to_str()),jule::Any(_159934_t->_method_to_str())}));
	}
}



inline void _1e50ac4b1_Eval::_method_cast_ref(jule::Ptr<_1e6420856_TypeKind> _161431_t,jule::Ptr<_1e50ac4b1_Data> _161449_d,_1e3bad8dd_Token _161459_error_token) {
	jule::Ptr<_1e6420856_Sptr> _161517_sptr = _161431_t->_method_sptr();
	jule::Ptr<_1e6420856_Ptr> _161717_ptr = _161449_d->_field_kind->_method_ptr();
	if ((_161717_ptr != nullptr) && _161517_sptr->_field_elem->_method_equals(_161717_ptr->_field_elem)) {
		if ((!((*this)._method_is_unsafe()))) {
			(*this)._method_push_err(_161459_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		}
		return;
	}
	if (_161517_sptr->_field_elem->_method_strct() != nullptr) {
		(*this)._method_cast_struct(_161517_sptr->_field_elem,_161449_d,_161459_error_token);
		return;
	}
	(*this)._method_push_err(_161459_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_161449_d->_field_kind->_method_to_str()),jule::Any(_161431_t->_method_to_str())}));
}



inline void _1e50ac4b1_Eval::_method_cast_slc(jule::Ptr<_1e6420856_TypeKind> _163631_t,jule::Ptr<_1e50ac4b1_Data> _163649_d,_1e3bad8dd_Token _163659_error_token) {
	if (_163649_d->_field_kind->_method_enm() != nullptr) {
		if ((_163649_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim() == nullptr) || (!(_163649_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()->_method_is_str()))) {
			(*this)._method_push_err(_163659_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_163649_d->_field_kind->_method_to_str()),jule::Any(_163631_t->_method_to_str())}));
			return;
		}
	} else if ((_163649_d->_field_kind->_method_prim() == nullptr) || (!(_163649_d->_field_kind->_method_prim()->_method_is_str()))) {
		(*this)._method_push_err(_163659_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_163649_d->_field_kind->_method_to_str()),jule::Any(_163631_t->_method_to_str())}));
		return;
	}
	_163631_t=_163631_t->_method_slc()->_field_elem;
	jule::Ptr<_1e6420856_Prim> _164813_prim = _163631_t->_method_prim();
	if ((_164813_prim == nullptr) || ((!(_164813_prim->_method_is_u8())) && (!(_164813_prim->_method_is_i32())))) {
		(*this)._method_push_err(_163659_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_163649_d->_field_kind->_method_to_str()),jule::Any(_163631_t->_method_to_str())}));
	}
}



inline void _1e50ac4b1_Eval::_method_cast_str(jule::Ptr<_1e50ac4b1_Data> _165431_d,_1e3bad8dd_Token _165441_error_token) {
	if (_165431_d->_field_kind->_method_enm() != nullptr) {
		jule::Ptr<_1e4d62387_Enum> _165621_e = _165431_d->_field_kind->_method_enm();
		if ((_165621_e->_field_kind->_field_kind->_method_prim() != nullptr) && _165621_e->_field_kind->_field_kind->_method_prim()->_method_is_str()) {
			return;
		}
	}
	if (_165431_d->_field_kind->_method_prim() != nullptr) {
		jule::Ptr<_1e6420856_Prim> _166317_prim = _165431_d->_field_kind->_method_prim();
		if ((!(_166317_prim->_method_is_u8())) && (!(_166317_prim->_method_is_i32()))) {
			(*this)._method_push_err(_165441_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_165431_d->_field_kind->_method_to_str())}));
		}
		return;
	}
	if (_165431_d->_field_kind->_method_slc() == nullptr) {
		(*this)._method_push_err(_165441_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_165431_d->_field_kind->_method_to_str())}));
		return;
	}
	jule::Ptr<_1e6420856_TypeKind> _167517_t = _165431_d->_field_kind->_method_slc()->_field_elem;
	jule::Ptr<_1e6420856_Prim> _167613_prim = _167517_t->_method_prim();
	if ((_167613_prim == nullptr) || ((!(_167613_prim->_method_is_u8())) && (!(_167613_prim->_method_is_i32())))) {
		(*this)._method_push_err(_165441_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_165431_d->_field_kind->_method_to_str())}));
	}
}



inline void _1e50ac4b1_Eval::_method_cast_int(jule::Ptr<_1e6420856_TypeKind> _168231_t,jule::Ptr<_1e50ac4b1_Data> _168249_d,_1e3bad8dd_Token _168259_error_token) {
	if (_168249_d->_method_is_const()) {
		jule::Ptr<_1e6420856_Prim> _168417_prim = _168231_t->_method_prim();
		{
			if (!((_1c8c8ad04_is_sig_int(_168417_prim->_field_kind)))) { goto _case_end_4735462416; }
			_case_begin_4735462416:;
			{
				_168249_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_168249_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_4735462256;
			_case_end_4735462416:;
			if (!((_1c8c8ad04_is_unsig_int(_168417_prim->_field_kind)))) { goto _case_end_4735462528; }
			_case_begin_4735462528:;
			{
				_168249_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_168249_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_4735462256;
			_case_end_4735462528:;
			_match_end_4735462256:;
		}
	}
	if (_168249_d->_field_kind->_method_enm() != nullptr) {
		jule::Ptr<_1e4d62387_Enum> _169517_e = _168249_d->_field_kind->_method_enm();
		if (_1c8c8ad04_is_num(_169517_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	if (_168249_d->_field_kind->_method_sptr() != nullptr) {
		jule::Ptr<_1e6420856_Prim> _170217_prim = _168231_t->_method_prim();
		if ((!(_170217_prim->_method_is_uintptr()))) {
			(*this)._method_push_err(_168259_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_168249_d->_field_kind->_method_to_str()),jule::Any(_168231_t->_method_to_str())}));
		}
		return;
	}
	if (_168249_d->_field_kind->_method_ptr() != nullptr) {
		jule::Ptr<_1e6420856_Prim> _170917_prim = _168231_t->_method_prim();
		if (_170917_prim->_method_is_uintptr()) {
		} else if ((!((*this)._method_is_unsafe()))) {
			(*this)._method_push_err(_168259_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if (((((!(_170917_prim->_method_is_i32())) && (!(_170917_prim->_method_is_i64()))) && (!(_170917_prim->_method_is_u16()))) && (!(_170917_prim->_method_is_u32()))) && (!(_170917_prim->_method_is_u64()))) {
			(*this)._method_push_err(_168259_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_168249_d->_field_kind->_method_to_str()),jule::Any(_168231_t->_method_to_str())}));
		}
		return;
	}
	jule::Ptr<_1e6420856_Prim> _172013_prim = _168249_d->_field_kind->_method_prim();
	if ((_172013_prim != nullptr) && _1c8c8ad04_is_num(_172013_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_168259_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_168249_d->_field_kind->_method_to_str()),jule::Any(_168231_t->_method_to_str())}));
}



inline void _1e50ac4b1_Eval::_method_cast_num(jule::Ptr<_1e6420856_TypeKind> _172831_t,jule::Ptr<_1e50ac4b1_Data> _172849_d,_1e3bad8dd_Token _172859_error_token) {
	if (_172849_d->_method_is_const()) {
		jule::Ptr<_1e6420856_Prim> _173017_prim = _172831_t->_method_prim();
		{
			if (!((_1c8c8ad04_is_float(_173017_prim->_field_kind)))) { goto _case_end_4735499152; }
			_case_begin_4735499152:;
			{
				_172849_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_172849_d->_field_constant->_method_as_f64()));
			}
			goto _match_end_4735498976;
			_case_end_4735499152:;
			if (!((_1c8c8ad04_is_sig_int(_173017_prim->_field_kind)))) { goto _case_end_4735499264; }
			_case_begin_4735499264:;
			{
				_172849_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_172849_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_4735498976;
			_case_end_4735499264:;
			if (!((_1c8c8ad04_is_unsig_int(_173017_prim->_field_kind)))) { goto _case_end_4735499376; }
			_case_begin_4735499376:;
			{
				_172849_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_172849_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_4735498976;
			_case_end_4735499376:;
			_match_end_4735498976:;
		}
	}
	if (_172849_d->_field_kind->_method_enm() != nullptr) {
		jule::Ptr<_1e4d62387_Enum> _174417_e = _172849_d->_field_kind->_method_enm();
		if (_1c8c8ad04_is_num(_174417_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	jule::Ptr<_1e6420856_Prim> _175013_prim = _172849_d->_field_kind->_method_prim();
	if ((_175013_prim != nullptr) && _1c8c8ad04_is_num(_175013_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_172859_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_172849_d->_field_kind->_method_to_str()),jule::Any(_172831_t->_method_to_str())}));
}



inline void _1e50ac4b1_Eval::_method_cast_prim(jule::Ptr<_1e6420856_TypeKind> _175832_t,jule::Ptr<_1e50ac4b1_Data> _175850_d,_1e3bad8dd_Token _175860_error_token) {
	jule::Ptr<_1e6420856_Prim> _175913_prim = _175832_t->_method_prim();
	{
		if (!((_175913_prim->_method_is_any()))) { goto _case_end_4735519408; }
		goto _match_end_4735519008;
		_case_end_4735519408:;
		if (!((_175913_prim->_method_is_str()))) { goto _case_end_4735519504; }
		_case_begin_4735519504:;
		{
			(*this)._method_cast_str(_175850_d,_175860_error_token);
		}
		goto _match_end_4735519008;
		_case_end_4735519504:;
		if (!((_1c8c8ad04_is_int(_175913_prim->_method_to_str())))) { goto _case_end_4735519600; }
		_case_begin_4735519600:;
		{
			(*this)._method_cast_int(_175832_t,_175850_d,_175860_error_token);
		}
		goto _match_end_4735519008;
		_case_end_4735519600:;
		if (!((_1c8c8ad04_is_num(_175913_prim->_method_to_str())))) { goto _case_end_4735519696; }
		_case_begin_4735519696:;
		{
			(*this)._method_cast_num(_175832_t,_175850_d,_175860_error_token);
		}
		goto _match_end_4735519008;
		_case_end_4735519696:;
		_case_begin_4735519120:;
		{
			(*this)._method_push_err(_175860_error_token,jule::Str("@ data-type not supports casting", 32),jule::Slice<jule::Any>({jule::Any(_175832_t->_method_to_str())}));
		}
		goto _match_end_4735519008;
		_case_end_4735519120:;
		_match_end_4735519008:;
	}
}



inline void _1e50ac4b1_Eval::_method_cast_constant(jule::Ptr<_1e6420856_TypeKind>& _177837_t,jule::Ptr<_1e50ac4b1_Data>& _177856_d) {
	jule::Ptr<_1e6420856_Prim> _177913_prim = _177837_t->_method_prim();
	if ((_177913_prim == nullptr) || (!(_177856_d->_method_is_const()))) {
		return;
	}
	{
		if (!((_1c8c8ad04_is_sig_int(_177913_prim->_field_kind)))) { goto _case_end_4735532688; }
		_case_begin_4735532688:;
		{
			_177856_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_177856_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4735531520;
		_case_end_4735532688:;
		if (!((_1c8c8ad04_is_unsig_int(_177913_prim->_field_kind)))) { goto _case_end_4735532784; }
		_case_begin_4735532784:;
		{
			_177856_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_177856_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4735531520;
		_case_end_4735532784:;
		if (!((_1c8c8ad04_is_float(_177913_prim->_field_kind)))) { goto _case_end_4735532880; }
		_case_begin_4735532880:;
		{
			_177856_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_177856_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4735531520;
		_case_end_4735532880:;
		_match_end_4735531520:;
	}
	_177856_d->_field_model=jule::Any(_177856_d->_field_constant);
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_cast_by_type_n_data(jule::Ptr<_1e6420856_TypeKind> _179847_t,jule::Ptr<_1e50ac4b1_Data> _179865_d,_1e3bad8dd_Token _179875_error_token) {
	{
		if (!(((_179865_d->_field_kind->_method_prim() != nullptr) && _179865_d->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_4735546912; }
		_case_begin_4735546912:;
		{
			if (_179847_t->_method_enm() != nullptr) {
				(*this)._method_push_err(_179875_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
				(*this)._method_push_suggestion(jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
			}
		}
		goto _match_end_4735544128;
		_case_end_4735546912:;
		if (!((_179847_t->_method_ptr() != nullptr))) { goto _case_end_4735547008; }
		_case_begin_4735547008:;
		{
			(*this)._method_cast_ptr(_179847_t,_179865_d,_179875_error_token);
		}
		goto _match_end_4735544128;
		_case_end_4735547008:;
		if (!((_179847_t->_method_sptr() != nullptr))) { goto _case_end_4735547104; }
		_case_begin_4735547104:;
		{
			(*this)._method_cast_ref(_179847_t,_179865_d,_179875_error_token);
		}
		goto _match_end_4735544128;
		_case_end_4735547104:;
		if (!((_179847_t->_method_slc() != nullptr))) { goto _case_end_4735544592; }
		_case_begin_4735544592:;
		{
			(*this)._method_cast_slc(_179847_t,_179865_d,_179875_error_token);
		}
		goto _match_end_4735544128;
		_case_end_4735544592:;
		if (!((_179847_t->_method_strct() != nullptr))) { goto _case_end_4735544688; }
		_case_begin_4735544688:;
		{
			(*this)._method_cast_struct(_179847_t,_179865_d,_179875_error_token);
		}
		goto _match_end_4735544128;
		_case_end_4735544688:;
		if (!((_179847_t->_method_prim() != nullptr))) { goto _case_end_4735544784; }
		_case_begin_4735544784:;
		{
			(*this)._method_cast_prim(_179847_t,_179865_d,_179875_error_token);
		}
		goto _match_end_4735544128;
		_case_end_4735544784:;
		_case_begin_4735544304:;
		{
			(*this)._method_push_err(_179875_error_token,jule::Str("@ data-type not supports casting", 32),jule::Slice<jule::Any>({jule::Any(_179847_t->_method_to_str())}));
			_179865_d=nullptr;
		}
		goto _match_end_4735544128;
		_case_end_4735544304:;
		_match_end_4735544128:;
	}
	if (_179865_d == nullptr) {
		return nullptr;
	}
	_179865_d->_field_mutable=_179865_d->_field_mutable || ((!(_179865_d->_field_kind->_method_mutable())) && _179847_t->_method_mutable());
	_179865_d->_field_lvalue=false;
	_179865_d->_field_decl=false;
	(*this)._method_cast_constant(_179847_t,_179865_d);
	if ((_179865_d->_field_kind->_method_enm() == nullptr) || (_179865_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_to_str() != _179847_t->_method_to_str())) {
		_179865_d->_field_cast_kind=_179847_t;
	} else {
		_179865_d->_field_kind=_179847_t;
	}
	return _179865_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_cast(jule::Ptr<_1e38d4ec7_CastExpr> _184833_c) {
	jule::Ptr<_1e6420856_TypeSymbol> _184917_t = _1e4cc167b_build_type(_184833_c->_field_kind);
	jule::Bool _185013_ok = this->self->_field_s->_method_check_type(_184917_t,this->self->_field_lookup);
	if ((!(_185013_ok))) {
		return nullptr;
	}
	jule::Ptr<_1e6420856_TypeKind> _185517_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_185517_prefix;
	});
	jule::Ptr<_1e50ac4b1_Data> _185917_d = this->self->_method_eval_expr_kind(_184833_c->_field_expr);
	if (_185917_d == nullptr) {
		return nullptr;
	}
	_185917_d=this->self->_method_eval_cast_by_type_n_data(_184917_t->_field_kind,_185917_d,_184833_c->_field_kind->_field_token);
	return _185917_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_ns_selection(jule::Ptr<_1e38d4ec7_NsSelectionExpr> _186936_s) {
	jule::Str _187013_path = _1e6420856_build_link_path_by_tokens(_186936_s->_field_ns);
	jule::Ptr<_1e4ee54e8_ImportInfo> _187117_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1e4ee54e8_ImportInfo>)>([=](jule::Ptr<_1e4ee54e8_ImportInfo> _187153_p) mutable -> jule::Bool {
		if ((_186936_s->_field_ns.len() == 1LL) && (_187153_p->_field_alias == _187013_path)) {
			return true;
		}
		return _187153_p->_field_link_path == _187013_path;
	}));
	if ((_187117_imp == nullptr) || (!(_187117_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_186936_s->_field_ident,jule::Str("namespace not exist: @", 22),jule::Slice<jule::Any>({jule::Any(_187013_path)}));
		return nullptr;
	}
	jule::Trait<_1e5425ab0_Lookup> _188317_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_187117_imp;
	
	jule::Any _188717_def = (*this)._method_get_def(_186936_s->_field_ident._field_kind,false);
	(*this)._field_lookup=_188317_lookup;
	jule::Ptr<_1e50ac4b1_Data> _189017_d = (*this)._method_eval_def(_188717_def,_186936_s->_field_ident);
	return _189017_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_struct_lit_explicit(jule::Ptr<_1e398ee72_StructIns> _189548_s,jule::Slice<jule::Any> _189613_exprs,_1e3bad8dd_Token _189636_error_token) {
	jule::Bool _189713_ok = this->self->_field_s->_method_check_generic_quantity(static_cast<jule::I64>(_189548_s->_field_decl->_field_generics.len()),static_cast<jule::I64>(_189548_s->_field_generics.len()),_189636_error_token);
	if ((!(_189713_ok))) {
		return nullptr;
	}
	this->self->_method_push_reference_to_struct(_189548_s);
	_1e522c29b_StructLitChecker _190517_slc = _1e522c29b_StructLitChecker(this->self,_189636_error_token,_189548_s,jule::Slice<jule::Ptr<_1e4d70a6b_StructArgExprModel>>());
	_190517_slc._method_check(_189613_exprs);
	return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_189548_s)),jule::Ptr<_1e6420856_TypeKind>(),(!(this->self->_field_immutable)),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e4d70a6b_StructLitExprModel>(new( std::nothrow ) _1e4d70a6b_StructLitExprModel(_189548_s,_190517_slc._field_args))),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_struct_lit(jule::Ptr<_1e38d4ec7_StructLit> _192239_lit) {
	jule::Ptr<_1e6420856_TypeSymbol> _192317_t = _1e4cc167b_build_type(_192239_lit->_field_kind);
	jule::Bool _192413_ok = this->self->_field_s->_method_check_type(_192317_t,this->self->_field_lookup);
	if ((!(_192413_ok))) {
		return nullptr;
	}
	jule::Ptr<_1e398ee72_StructIns> _192917_s = _192317_t->_field_kind->_method_strct();
	if (_192917_s == nullptr) {
		if (_192317_t->_field_kind->_method_sptr() != nullptr) {
			_192917_s=_192317_t->_field_kind->_method_sptr()->_field_elem->_method_strct();
			if (_192917_s != nullptr) {
				goto _julec_label_eval;
			}
		}
		this->self->_method_push_err(_192239_lit->_field_kind->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_julec_label_eval:;
	jule::Ptr<_1e50ac4b1_Data> _194217_d = this->self->_method_eval_struct_lit_explicit(_192917_s,_192239_lit->_field_exprs,_192239_lit->_field_kind->_field_token);
	if (_192317_t->_field_kind->_method_sptr() != nullptr) {
		jule::Ptr<_1e4d70a6b_StructLitExprModel> _194421_model = _194217_d->_field_model.operator jule::Ptr<_1e4d70a6b_StructLitExprModel>();
		_1e50ac4b1_make_struct_lit_alloc(_194217_d,_194421_model);
	}
	return _194217_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_type(jule::Ptr<_1e38d4ec7_TypeDecl> _195032_t) {
	jule::Ptr<_1e6420856_TypeSymbol> _195117_tk = _1e4cc167b_build_type(_195032_t);
	jule::Bool _195213_ok = (*this)._field_s->_method_check_type(_195117_tk,(*this)._field_lookup);
	if ((!(_195213_ok))) {
		return nullptr;
	}
	return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(_195117_tk->_field_kind,jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_195117_tk->_field_kind),true,jule::Ptr<_1c8b9b83b_Const>()));
}



inline void _1e50ac4b1_Eval::_method_call_type_fn(jule::Ptr<_1e38d4ec7_FnCallExpr>& _196437_fc,jule::Ptr<_1e50ac4b1_Data>& _196459_d) {
	if (_196437_fc->_field_generics.len() > 0LL) {
		this->self->_method_push_err(_196437_fc->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_196459_d->_field_kind->_method_to_str())}));
	} else if (_196437_fc->_field_args.len() < 1LL) {
		this->self->_method_push_err(_196437_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
	} else if (_196437_fc->_field_args.len() > 1LL) {
		this->self->_method_push_err(_196437_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	if (_196437_fc->_field_args.len() > 0LL) {
		jule::Ptr<_1e50ac4b1_Data> _197421_arg = this->self->_method_eval_expr_kind(_196437_fc->_field_args[0LL]->_field_kind);
		if (_197421_arg != nullptr) {
			_196459_d=this->self->_method_eval_cast_by_type_n_data(_196459_d->_field_kind,_197421_arg,_196437_fc->_field_args[0LL]->_field_token);
		}
	}
	_196459_d->_field_decl=false;
}



inline std::tuple<jule::Bool,jule::Bool> _1e50ac4b1_Eval::_method_check_fn_call_generics(jule::Ptr<_1e4b15a20_FnIns> _198445_f,jule::Ptr<_1e38d4ec7_FnCallExpr> _198513_fc) {
	jule::Bool _198532_ok = jule::Bool();
	jule::Bool _198542_dynamic_annotation = jule::Bool();
	{
		if (!((((_198445_f->_field_decl->_field_generics.len() > 0LL) && (_198513_fc->_field_generics.len() == 0LL)) && (_198445_f->_field_params.len() > 0LL)))) { goto _case_end_4735666816; }
		_case_begin_4735666816:;
		{
			_198542_dynamic_annotation=true;
			_198445_f->_field_generics=jule::Slice<jule::Ptr<_1e6420856_TypeKind>>::alloc(static_cast<jule::I64>(_198445_f->_field_decl->_field_generics.len()));
			_198532_ok = true;
			_198542_dynamic_annotation = true;
			return std::make_tuple(_198532_ok,_198542_dynamic_annotation);
		}
		goto _match_end_4735657024;
		_case_end_4735666816:;
		if (!(((!((*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_198445_f->_field_decl->_field_generics.len()),static_cast<jule::I64>(_198513_fc->_field_generics.len()),_198513_fc->_field_token)))))) { goto _case_end_4735666912; }
		_case_begin_4735666912:;
		{
			_198532_ok = false;
			_198542_dynamic_annotation = false;
			return std::make_tuple(_198532_ok,_198542_dynamic_annotation);
		}
		goto _match_end_4735657024;
		_case_end_4735666912:;
		_case_begin_4735657168:;
		{
			_198445_f->_field_generics=jule::Slice<jule::Ptr<_1e6420856_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_198445_f->_field_decl->_field_generics.len()));
			{
				auto &expr = _198513_fc->_field_generics;
				auto it = expr.begin();
				_iter_begin_4735659184:;
				if (it != expr.end()) {
					jule::Ptr<_1e38d4ec7_TypeDecl> _1e50ac4b1_g = *it;
					{
						jule::Ptr<_1e6420856_TypeSymbol> _200025_k = _1e4cc167b_build_type(_1e50ac4b1_g);
						_198532_ok=(*this)._field_s->_method_check_type(_200025_k,(*this)._field_lookup);
						if ((!(_198532_ok))) {
							_198532_ok = false;
							_198542_dynamic_annotation = false;
							return std::make_tuple(_198532_ok,_198542_dynamic_annotation);
						}
						_198445_f->_field_generics = jule::alloc_for_append(_198445_f->_field_generics,1);_198445_f->_field_generics.push(_200025_k->_field_kind);
					}
					_iter_next_4735659184:;
					++it;
					goto _iter_begin_4735659184;
				}
				_iter_end_4735659184:;
			}
			_198532_ok = true;
			_198542_dynamic_annotation = false;
			return std::make_tuple(_198532_ok,_198542_dynamic_annotation);
		}
		goto _match_end_4735657024;
		_case_end_4735657168:;
		_match_end_4735657024:;
	}
}



inline void _1e50ac4b1_Eval::_method_call_builtin_fn(jule::Ptr<_1e38d4ec7_FnCallExpr>& _201240_fc,jule::Ptr<_1e50ac4b1_Data>& _201262_d) {
	jule::Ptr<_1e4b15a20_FnIns> _201317_f = _201262_d->_field_kind->_method_fnc();
	_201262_d=_201317_f->_field_caller(this->self,_201240_fc,_201262_d);
	if (_201262_d == nullptr) {
		return;
	}
	_201262_d->_field_mutable=true;
}



inline void _1e50ac4b1_Eval::_method_check_fn_of_concurrent_call(jule::Ptr<_1e4b15a20_FnIns>& _202347_f,_1e3bad8dd_Token _202358_error_token) {
	if ((*this)._method_is_unsafe()) {
		return;
	}
	{
		auto &expr = _202347_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4735684864:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_ParamIns> &_1e50ac4b1_p = *it;
			{
				if (_1e50ac4b1_p->_field_decl->_field_reference) {
					(*this)._method_push_err(_202358_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;
				}
			}
			_iter_next_4735684864:;
			++it;
			goto _iter_begin_4735684864;
		}
		_iter_end_4735684864:;
	}
}



inline void _1e50ac4b1_Eval::_method_call_fn(jule::Ptr<_1e38d4ec7_FnCallExpr>& _203632_fc,jule::Ptr<_1e50ac4b1_Data>& _203654_d) {
	jule::Ptr<_1e4b15a20_FnIns> _203717_f = _203654_d->_field_kind->_method_fnc();
	if (_203717_f->_method_is_builtin()) {
		this->self->_method_call_builtin_fn(_203632_fc,_203654_d);
		return;
	}
	if (_203632_fc->_field_concurrent) {
		this->self->_method_check_fn_of_concurrent_call(_203717_f,_203632_fc->_field_token);
	}
	if ((((!(_203654_d->_field_mutable)) && _203717_f->_field_decl->_method_is_method()) && (!(_203717_f->_field_decl->_field_statically))) && _203717_f->_field_decl->_field_params[0LL]->_field_mutable) {
		this->self->_method_push_err(_203632_fc->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>());
	} else if ((!(this->self->_method_is_unsafe())) && _203717_f->_field_decl->_field_unsafety) {
		this->self->_method_push_err(_203632_fc->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	}
	jule::Bool _205318_ok;
	jule::Bool _205322_dynamic_annotation;
	std::tie(_205318_ok,_205322_dynamic_annotation) = this->self->_method_check_fn_call_generics(_203717_f,_203632_fc);
	if ((!(_205318_ok))) {
		_203654_d=nullptr;
		return;
	}
	jule::Ptr<_1e5054722_Sema> _205917_old = this->self->_field_s;
	if (_203717_f->_field_decl->_field_owner != nullptr) {
		this->self->_field_s=_203717_f->_field_decl->_field_owner->_field_sema;
	}
	__JULE_DEFER({
		if (_205917_old != this->self->_field_s) {
			_205917_old->_field_errors=jule::append(_205917_old->_field_errors,this->self->_field_s->_field_errors);
			this->self->_field_s->_field_errors=nullptr;
		}
		this->self->_field_s=_205917_old;
	});
	if ((!(_205322_dynamic_annotation))) {
		if ((!(_203717_f->_field_reloaded))) {
			_205318_ok=this->self->_field_s->_method_reload_fn_ins_types(_203717_f);
			if ((!(_205318_ok))) {
				_203654_d=nullptr;
				return;
			}
			_203717_f->_field_reloaded=true;
		}
	} else {
		this->self->_field_s->_method_build_fn_non_generic_type_kinds(_203717_f);
	}
	_1e522c29b_FnCallArgChecker _208517_fcac = _1e522c29b_FnCallArgChecker(this->self,_203632_fc->_field_args,_203632_fc->_field_token,_203717_f,_205322_dynamic_annotation,jule::Slice<jule::Any>());
	if (_203717_f->_field_decl->_field_owner != nullptr) {
		std::tie(_205917_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_205917_old);
		_205318_ok=_208517_fcac._method_check();
		std::tie(_205917_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_205917_old);
	} else {
		_205318_ok=_208517_fcac._method_check();
	}
	if ((!(_205318_ok)) && _205322_dynamic_annotation) {
		_203654_d=nullptr;
		return;
	}
	jule::Bool _210514_is_unique_ins;
	jule::Int _210529_pos;
	std::tie(_210514_is_unique_ins,_210529_pos) = _203717_f->_field_decl->_method_append_instance(_203717_f);
	if ((!(_210514_is_unique_ins))) {
		_203717_f=_203717_f->_field_decl->_field_instances[_210529_pos];
	}
	jule::Any _211017_call_model = _203654_d->_field_model;
	if (_203717_f->_field_decl->_method_is_void()) {
		_203654_d=_1e50ac4b1_build_void_data();
	} else {
		if (_205322_dynamic_annotation) {
			_205318_ok=this->self->_field_s->_method_reload_fn_ins_types(_203717_f);
			if ((!(_205318_ok))) {
				_203654_d=nullptr;
				return;
			}
			_203717_f->_field_reloaded=true;
		}
		_203654_d->_field_kind=_203717_f->_field_result;
		_203654_d->_field_lvalue=false;
	}
	_203654_d->_field_mutable=true;
	_203654_d->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_FnCallExprModel>(new( std::nothrow ) _1e4d70a6b_FnCallExprModel(_203717_f,_203632_fc->_field_concurrent,_211017_call_model,_208517_fcac._field_arg_models)));
	if ((_203717_f->_field_generics.len() > 0LL) && _210514_is_unique_ins) {
		this->self->_field_s->_method_check_fn_ins(_203717_f);
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_fn_call(jule::Ptr<_1e38d4ec7_FnCallExpr> _214236_fc) {
	jule::Ptr<_1e6420856_TypeKind> _214317_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_214317_prefix;
	});
	jule::Ptr<_1e50ac4b1_Data> _214717_d = this->self->_method_eval_expr_kind(_214236_fc->_field_expr->_field_kind);
	if (_214717_d == nullptr) {
		return nullptr;
	}
	if (_214717_d->_field_decl) {
		this->self->_method_call_type_fn(_214236_fc,_214717_d);
		return _214717_d;
	}
	if (_214717_d->_field_kind->_method_fnc() == nullptr) {
		this->self->_method_push_err(_214236_fc->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	this->self->_method_call_fn(_214236_fc,_214717_d);
	return _214717_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_enum_static(jule::Ptr<_1e4d62387_Enum> _216639_enm,_1e3bad8dd_Token _216651_ident) {
	jule::Ptr<_1e50ac4b1_Data> _216717_d = jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_216639_enm)),jule::Ptr<_1e6420856_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ptr<_1c8b9b83b_Const>()));
	jule::Ptr<_1e4d62387_EnumItem> _217417_item = _216639_enm->_method_find_item(_216651_ident._field_kind);
	if (_217417_item == nullptr) {
		(*this)._method_push_err(_216651_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_216651_ident._field_kind)}));
	} else {
		_216717_d->_field_constant=jule::new_ptr<_1c8b9b83b_Const>((*(_217417_item->_field_value->_field_data->_field_constant)));
		_216717_d->_field_model=jule::Any(_216717_d->_field_constant);
	}
	return _216717_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_struct_static(jule::Ptr<_1e398ee72_StructIns> _218541_s,_1e3bad8dd_Token _218556_ident) {
	jule::Ptr<_1e50ac4b1_Data> _218617_d = jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::Ptr<_1e6420856_TypeKind>(),jule::Ptr<_1e6420856_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ptr<_1c8b9b83b_Const>()));
	
	jule::Ptr<_1e4b15a20_Fn> _219417_method = _218541_s->_method_find_method(_218556_ident._field_kind,true);
	if (_219417_method != nullptr) {
		if ((!((*this)._field_s->_method_is_accessible_define(_219417_method->_field_public,_219417_method->_field_token)))) {
			(*this)._method_push_err(_218556_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_218556_ident._field_kind)}));
			(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		}
		jule::Ptr<_1e4b15a20_FnIns> _220121_ins = _219417_method->_method_instance();
		_220121_ins->_field_owner=_218541_s;
		(*this)._method_push_reference_to_fn(_220121_ins);
		_218617_d->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_StructStaticIdentExprModel>(new( std::nothrow ) _1e4d70a6b_StructStaticIdentExprModel(_218541_s,_218617_d->_field_model,_220121_ins)));
		_218617_d->_field_kind=jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_220121_ins));
		return _218617_d;
	}
	jule::Ptr<_1e50b0492_Var> _221317_sttc = _218541_s->_field_decl->_method_find_static(_218556_ident._field_kind);
	if (_221317_sttc != nullptr) {
		return (*this)._method_eval_var(_221317_sttc,_218556_ident);
	}
	(*this)._method_push_err(_218556_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_218556_ident._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_trait_sub_ident(jule::Ptr<_1e50ac4b1_Data> _222243_d,jule::Ptr<_1e4d61232_Trait> _222257_trt,_1e3bad8dd_Token _222270_ident) {
	jule::Ptr<_1e4b15a20_Fn> _222317_f = _222257_trt->_method_find_method(_222270_ident._field_kind);
	if (_222317_f == nullptr) {
		(*this)._method_push_err(_222270_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_222270_ident._field_kind)}));
		return nullptr;
	}
	jule::Any _222917_model = jule::Any(nullptr);
	if (_222257_trt == _1c8ac49ea_BUILTIN_TRAIT_ERROR) {
		_222917_model=jule::Any(jule::new_struct<_1e4d70a6b_BuiltinErrorTraitSubIdentExprModel>(new( std::nothrow ) _1e4d70a6b_BuiltinErrorTraitSubIdentExprModel(_222243_d->_field_model,_222270_ident._field_kind)));
	} else {
		_222917_model=jule::Any(jule::new_struct<_1e4d70a6b_TraitSubIdentExprModel>(new( std::nothrow ) _1e4d70a6b_TraitSubIdentExprModel(_222243_d->_field_model,_222270_ident._field_kind)));
	}
	return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_222317_f->_method_instance())),jule::Ptr<_1e6420856_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),_222917_model,false,jule::Ptr<_1c8b9b83b_Const>()));
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_struct_sub_ident(jule::Ptr<_1e50ac4b1_Data> _225144_d,jule::Ptr<_1e398ee72_StructIns> _225158_s,jule::Ptr<_1e38d4ec7_SubIdentExpr> _225173_si,jule::Bool _225192_ref) {
	jule::Ptr<_1e398ee72_FieldIns> _225217_f = _225158_s->_method_find_field(_225173_si->_field_ident._field_kind);
	if (_225217_f != nullptr) {
		if ((!((*this)._field_s->_method_is_accessible_define(_225217_f->_field_decl->_field_public,_225217_f->_field_decl->_field_token)))) {
			(*this)._method_push_err(_225173_si->_field_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_225217_f->_field_decl->_field_ident)}));
			(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		}
		jule::Ptr<_1e4d70a6b_StructSubIdentExprModel> _225921_model = jule::new_struct<_1e4d70a6b_StructSubIdentExprModel>(new( std::nothrow ) _1e4d70a6b_StructSubIdentExprModel(_225144_d->_field_model,_225144_d->_field_kind,jule::Ptr<_1e4b15a20_FnIns>(),_225217_f));
		_225144_d->_field_model=jule::Any(_225921_model);
		_225144_d->_field_kind=_225217_f->_field_kind->_method_clone();
		_225144_d->_field_lvalue=true;
		if (_225217_f->_field_decl->_field_mutable && (!(_225144_d->_field_mutable))) {
			{
				auto &_match_expr{ (*this)._field_lookup };
				if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_ScopeChecker>>())) { goto _case_end_4735796896; }
				_case_begin_4735796896:;
				{
					jule::Ptr<_1e4d6ee22_ScopeChecker> _227225_scope = (*this)._field_lookup.operator jule::Ptr<_1e4d6ee22_ScopeChecker>()->_method_get_root();
					_225144_d->_field_mutable=(_227225_scope->_field_owner != nullptr) && (_227225_scope->_field_owner->_field_owner == _225158_s);
					if (_225144_d->_field_mutable) {
						jule::Ptr<_1e50b0492_Var> _227533_field = _225921_model->_field_expr.operator jule::Ptr<_1e50b0492_Var>();
						jule::Ptr<_1e50b0492_Var> _227633_v = jule::new_struct<_1e50b0492_Var>(new( std::nothrow ) _1e50b0492_Var(_227533_field->_field_scope,_227533_field->_field_token,_227533_field->_field_ident,_227533_field->_field_cpp_linked,_227533_field->_field_constant,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),_227533_field->_field_kind,_227533_field->_field_value,jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>(),jule::Ptr<_1e50b0492_IterRelation>(),jule::Slice<jule::Ptr<_1e50b0492_Var>>()));
						_227633_v->_field_mutable=true;
						_225921_model->_field_expr=jule::Any(_227633_v);
					}
				}
				goto _match_end_4735806208;
				_case_end_4735796896:;
				_match_end_4735806208:;
			}
		}
		return _225144_d;
	}
	
	jule::Ptr<_1e4b15a20_Fn> _229517_m = _225158_s->_method_find_method(_225173_si->_field_ident._field_kind,false);
	if (_229517_m == nullptr) {
		(*this)._method_push_err(_225173_si->_field_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_225173_si->_field_ident._field_kind)}));
		return nullptr;
	}
	if (_229517_m->_field_params[0LL]->_method_is_ref() && (!(_225192_ref))) {
		(*this)._method_push_err(_225173_si->_field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1e4b15a20_FnIns> _230517_ins = _229517_m->_method_instance();
	_230517_ins->_field_owner=_225158_s;
	(*this)._method_push_reference_to_fn(_230517_ins);
	_225144_d->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_StructSubIdentExprModel>(new( std::nothrow ) _1e4d70a6b_StructSubIdentExprModel(_225144_d->_field_model,_225144_d->_field_kind,_230517_ins,jule::Ptr<_1e398ee72_FieldIns>())));
	_225144_d->_field_kind=jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_230517_ins));
	return _225144_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_slice_sub_ident(jule::Ptr<_1e50ac4b1_Data> _231743_d,_1e3bad8dd_Token _231753_ident) {
	{
		auto &_match_expr{ _231753_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4735834528; }
		_case_begin_4735834528:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_1e6420856_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e4d70a6b_CommonSubIdentExprModel>(new( std::nothrow ) _1e4d70a6b_CommonSubIdentExprModel(_231743_d->_field_kind,_231743_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4735831648;
		_case_end_4735834528:;
		if (!((jule::Str("cap", 3)) == _match_expr)) { goto _case_end_4735834672; }
		_case_begin_4735834672:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_1e6420856_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e4d70a6b_CommonSubIdentExprModel>(new( std::nothrow ) _1e4d70a6b_CommonSubIdentExprModel(_231743_d->_field_kind,_231743_d->_field_model,jule::Str("cap()", 5)))),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4735831648;
		_case_end_4735834672:;
		_case_begin_4735831168:;
		{
			(*this)._method_push_err(_231753_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_231753_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4735831648;
		_case_end_4735831168:;
		_match_end_4735831648:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_array_sub_ident(jule::Ptr<_1e50ac4b1_Data> _234743_d,_1e3bad8dd_Token _234753_ident) {
	{
		auto &_match_expr{ _234753_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4735847008; }
		_case_begin_4735847008:;
		{
			jule::Ptr<_1c8b9b83b_Const> _235021_c = _1c8b9b83b_Const::_static_method_new_i64(static_cast<jule::I64>(_234743_d->_field_kind->_method_arr()->_field_n));
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_1e6420856_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_235021_c),jule::Bool(),_235021_c));
		}
		goto _match_end_4735844176;
		_case_end_4735847008:;
		_case_begin_4735843696:;
		{
			(*this)._method_push_err(_234753_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_234753_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4735844176;
		_case_end_4735843696:;
		_match_end_4735844176:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_map_sub_ident(jule::Ptr<_1e50ac4b1_Data> _236441_d,_1e3bad8dd_Token _236451_ident) {
	jule::Ptr<_1e6420856_Map> _236517_map_kind = _236441_d->_field_kind->_method_map();
	{
		auto &_match_expr{ _236451_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4735857520; }
		_case_begin_4735857520:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_1e6420856_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e4d70a6b_CommonSubIdentExprModel>(new( std::nothrow ) _1e4d70a6b_CommonSubIdentExprModel(_236441_d->_field_kind,_236441_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4735854560;
		_case_end_4735857520:;
		if (!((jule::Str("clear", 5)) == _match_expr)) { goto _case_end_4735857616; }
		_case_begin_4735857616:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns(jule::Ptr<_1e398ee72_StructIns>(),jule::Ptr<_1e4b15a20_Fn>(),jule::Slice<jule::Ptr<_1e6420856_TypeKind>>(),jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>(),jule::Ptr<_1e6420856_TypeKind>(),jule::Ptr<_1e4d6ee22_Scope>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ptr<_1e6420856_TypeKind>(),_236441_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e4d70a6b_CommonSubIdentExprModel>(new( std::nothrow ) _1e4d70a6b_CommonSubIdentExprModel(_236441_d->_field_kind,_236441_d->_field_model,jule::Str("clear", 5)))),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4735854560;
		_case_end_4735857616:;
		if (!((jule::Str("keys", 4)) == _match_expr)) { goto _case_end_4735856992; }
		_case_begin_4735856992:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns(jule::Ptr<_1e398ee72_StructIns>(),jule::Ptr<_1e4b15a20_Fn>(),jule::Slice<jule::Ptr<_1e6420856_TypeKind>>(),jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>(),jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1e6420856_Slc>(new( std::nothrow ) _1e6420856_Slc(_236517_map_kind->_field_key)))),jule::Ptr<_1e4d6ee22_Scope>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ptr<_1e6420856_TypeKind>(),_236441_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e4d70a6b_CommonSubIdentExprModel>(new( std::nothrow ) _1e4d70a6b_CommonSubIdentExprModel(_236441_d->_field_kind,_236441_d->_field_model,jule::Str("keys", 4)))),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4735854560;
		_case_end_4735856992:;
		if (!((jule::Str("values", 6)) == _match_expr)) { goto _case_end_4735857088; }
		_case_begin_4735857088:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns(jule::Ptr<_1e398ee72_StructIns>(),jule::Ptr<_1e4b15a20_Fn>(),jule::Slice<jule::Ptr<_1e6420856_TypeKind>>(),jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>(),jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1e6420856_Slc>(new( std::nothrow ) _1e6420856_Slc(_236517_map_kind->_field_val)))),jule::Ptr<_1e4d6ee22_Scope>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ptr<_1e6420856_TypeKind>(),_236441_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e4d70a6b_CommonSubIdentExprModel>(new( std::nothrow ) _1e4d70a6b_CommonSubIdentExprModel(_236441_d->_field_kind,_236441_d->_field_model,jule::Str("values", 6)))),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4735854560;
		_case_end_4735857088:;
		if (!((jule::Str("has", 3)) == _match_expr)) { goto _case_end_4735857184; }
		_case_begin_4735857184:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns(jule::Ptr<_1e398ee72_StructIns>(),jule::Ptr<_1e4b15a20_Fn>(),jule::Slice<jule::Ptr<_1e6420856_TypeKind>>(),jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>({jule::new_struct<_1e4b15a20_ParamIns>(new( std::nothrow ) _1e4b15a20_ParamIns(jule::new_struct_ptr<_1e4b15a20_Param>(new( std::nothrow ) _1e4b15a20_Param(_1e3bad8dd_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1e6420856_TypeSymbol>(),jule::Str("key", 3))),_236517_map_kind->_field_key))}),jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1e4d6ee22_Scope>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_1e6420856_TypeKind>(),_236441_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e4d70a6b_CommonSubIdentExprModel>(new( std::nothrow ) _1e4d70a6b_CommonSubIdentExprModel(_236441_d->_field_kind,_236441_d->_field_model,jule::Str("has", 3)))),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4735854560;
		_case_end_4735857184:;
		if (!((jule::Str("del", 3)) == _match_expr)) { goto _case_end_4735854912; }
		_case_begin_4735854912:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns(jule::Ptr<_1e398ee72_StructIns>(),jule::Ptr<_1e4b15a20_Fn>(),jule::Slice<jule::Ptr<_1e6420856_TypeKind>>(),jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>({jule::new_struct<_1e4b15a20_ParamIns>(new( std::nothrow ) _1e4b15a20_ParamIns(jule::new_struct_ptr<_1e4b15a20_Param>(new( std::nothrow ) _1e4b15a20_Param(_1e3bad8dd_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1e6420856_TypeSymbol>(),jule::Str("key", 3))),_236517_map_kind->_field_key))}),jule::Ptr<_1e6420856_TypeKind>(),jule::Ptr<_1e4d6ee22_Scope>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ptr<_1e6420856_TypeKind>(),_236441_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e4d70a6b_CommonSubIdentExprModel>(new( std::nothrow ) _1e4d70a6b_CommonSubIdentExprModel(_236441_d->_field_kind,_236441_d->_field_model,jule::Str("del", 3)))),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4735854560;
		_case_end_4735854912:;
		_case_begin_4735853328:;
		{
			(*this)._method_push_err(_236451_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_236451_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4735854560;
		_case_end_4735853328:;
		_match_end_4735854560:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_str_sub_ident(jule::Ptr<_1e50ac4b1_Data> _248741_d,_1e3bad8dd_Token _248751_ident) {
	jule::Ptr<_1e6420856_TypeKind> _248817_str_kind = jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("str", 3))));
	{
		auto &_match_expr{ _248751_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4735885760; }
		_case_begin_4735885760:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_1e6420856_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e4d70a6b_CommonSubIdentExprModel>(new( std::nothrow ) _1e4d70a6b_CommonSubIdentExprModel(_248741_d->_field_kind,_248741_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4735883024;
		_case_end_4735885760:;
		if (!((jule::Str("has_prefix", 10)) == _match_expr)) { goto _case_end_4735885424; }
		_case_begin_4735885424:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns(jule::Ptr<_1e398ee72_StructIns>(),jule::Ptr<_1e4b15a20_Fn>(),jule::Slice<jule::Ptr<_1e6420856_TypeKind>>(),jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>({jule::new_struct<_1e4b15a20_ParamIns>(new( std::nothrow ) _1e4b15a20_ParamIns(jule::new_struct_ptr<_1e4b15a20_Param>(new( std::nothrow ) _1e4b15a20_Param(_1e3bad8dd_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1e6420856_TypeSymbol>(),jule::Str("sub", 3))),_248817_str_kind))}),jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1e4d6ee22_Scope>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e4d70a6b_CommonSubIdentExprModel>(new( std::nothrow ) _1e4d70a6b_CommonSubIdentExprModel(_248741_d->_field_kind,_248741_d->_field_model,jule::Str("has_prefix", 10)))),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4735883024;
		_case_end_4735885424:;
		if (!((jule::Str("has_suffix", 10)) == _match_expr)) { goto _case_end_4735885520; }
		_case_begin_4735885520:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns(jule::Ptr<_1e398ee72_StructIns>(),jule::Ptr<_1e4b15a20_Fn>(),jule::Slice<jule::Ptr<_1e6420856_TypeKind>>(),jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>({jule::new_struct<_1e4b15a20_ParamIns>(new( std::nothrow ) _1e4b15a20_ParamIns(jule::new_struct_ptr<_1e4b15a20_Param>(new( std::nothrow ) _1e4b15a20_Param(_1e3bad8dd_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1e6420856_TypeSymbol>(),jule::Str("sub", 3))),_248817_str_kind))}),jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1e4d6ee22_Scope>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e4d70a6b_CommonSubIdentExprModel>(new( std::nothrow ) _1e4d70a6b_CommonSubIdentExprModel(_248741_d->_field_kind,_248741_d->_field_model,jule::Str("has_suffix", 10)))),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4735883024;
		_case_end_4735885520:;
		if (!((jule::Str("find", 4)) == _match_expr)) { goto _case_end_4735885616; }
		_case_begin_4735885616:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns(jule::Ptr<_1e398ee72_StructIns>(),jule::Ptr<_1e4b15a20_Fn>(),jule::Slice<jule::Ptr<_1e6420856_TypeKind>>(),jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>({jule::new_struct<_1e4b15a20_ParamIns>(new( std::nothrow ) _1e4b15a20_ParamIns(jule::new_struct_ptr<_1e4b15a20_Param>(new( std::nothrow ) _1e4b15a20_Param(_1e3bad8dd_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1e6420856_TypeSymbol>(),jule::Str("sub", 3))),_248817_str_kind))}),jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_1e4d6ee22_Scope>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e4d70a6b_CommonSubIdentExprModel>(new( std::nothrow ) _1e4d70a6b_CommonSubIdentExprModel(_248741_d->_field_kind,_248741_d->_field_model,jule::Str("find", 4)))),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4735883024;
		_case_end_4735885616:;
		if (!((jule::Str("rfind", 5)) == _match_expr)) { goto _case_end_4735883376; }
		_case_begin_4735883376:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns(jule::Ptr<_1e398ee72_StructIns>(),jule::Ptr<_1e4b15a20_Fn>(),jule::Slice<jule::Ptr<_1e6420856_TypeKind>>(),jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>({jule::new_struct<_1e4b15a20_ParamIns>(new( std::nothrow ) _1e4b15a20_ParamIns(jule::new_struct_ptr<_1e4b15a20_Param>(new( std::nothrow ) _1e4b15a20_Param(_1e3bad8dd_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1e6420856_TypeSymbol>(),jule::Str("sub", 3))),_248817_str_kind))}),jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_1e4d6ee22_Scope>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e4d70a6b_CommonSubIdentExprModel>(new( std::nothrow ) _1e4d70a6b_CommonSubIdentExprModel(_248741_d->_field_kind,_248741_d->_field_model,jule::Str("rfind", 5)))),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4735883024;
		_case_end_4735883376:;
		if (!((jule::Str("trim", 4)) == _match_expr)) { goto _case_end_4735883472; }
		_case_begin_4735883472:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns(jule::Ptr<_1e398ee72_StructIns>(),jule::Ptr<_1e4b15a20_Fn>(),jule::Slice<jule::Ptr<_1e6420856_TypeKind>>(),jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>({jule::new_struct<_1e4b15a20_ParamIns>(new( std::nothrow ) _1e4b15a20_ParamIns(jule::new_struct_ptr<_1e4b15a20_Param>(new( std::nothrow ) _1e4b15a20_Param(_1e3bad8dd_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1e6420856_TypeSymbol>(),jule::Str("bytes", 5))),_248817_str_kind))}),_248817_str_kind,jule::Ptr<_1e4d6ee22_Scope>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e4d70a6b_CommonSubIdentExprModel>(new( std::nothrow ) _1e4d70a6b_CommonSubIdentExprModel(_248741_d->_field_kind,_248741_d->_field_model,jule::Str("trim", 4)))),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4735883024;
		_case_end_4735883472:;
		if (!((jule::Str("ltrim", 5)) == _match_expr)) { goto _case_end_4735883568; }
		_case_begin_4735883568:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns(jule::Ptr<_1e398ee72_StructIns>(),jule::Ptr<_1e4b15a20_Fn>(),jule::Slice<jule::Ptr<_1e6420856_TypeKind>>(),jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>({jule::new_struct<_1e4b15a20_ParamIns>(new( std::nothrow ) _1e4b15a20_ParamIns(jule::new_struct_ptr<_1e4b15a20_Param>(new( std::nothrow ) _1e4b15a20_Param(_1e3bad8dd_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1e6420856_TypeSymbol>(),jule::Str("bytes", 5))),_248817_str_kind))}),_248817_str_kind,jule::Ptr<_1e4d6ee22_Scope>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e4d70a6b_CommonSubIdentExprModel>(new( std::nothrow ) _1e4d70a6b_CommonSubIdentExprModel(_248741_d->_field_kind,_248741_d->_field_model,jule::Str("ltrim", 5)))),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4735883024;
		_case_end_4735883568:;
		if (!((jule::Str("rtrim", 5)) == _match_expr)) { goto _case_end_4735883664; }
		_case_begin_4735883664:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns(jule::Ptr<_1e398ee72_StructIns>(),jule::Ptr<_1e4b15a20_Fn>(),jule::Slice<jule::Ptr<_1e6420856_TypeKind>>(),jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>({jule::new_struct<_1e4b15a20_ParamIns>(new( std::nothrow ) _1e4b15a20_ParamIns(jule::new_struct_ptr<_1e4b15a20_Param>(new( std::nothrow ) _1e4b15a20_Param(_1e3bad8dd_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1e6420856_TypeSymbol>(),jule::Str("bytes", 5))),_248817_str_kind))}),_248817_str_kind,jule::Ptr<_1e4d6ee22_Scope>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e4d70a6b_CommonSubIdentExprModel>(new( std::nothrow ) _1e4d70a6b_CommonSubIdentExprModel(_248741_d->_field_kind,_248741_d->_field_model,jule::Str("rtrim", 5)))),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4735883024;
		_case_end_4735883664:;
		if (!((jule::Str("split", 5)) == _match_expr)) { goto _case_end_4735886176; }
		_case_begin_4735886176:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns(jule::Ptr<_1e398ee72_StructIns>(),jule::Ptr<_1e4b15a20_Fn>(),jule::Slice<jule::Ptr<_1e6420856_TypeKind>>(),jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>({jule::new_struct<_1e4b15a20_ParamIns>(new( std::nothrow ) _1e4b15a20_ParamIns(jule::new_struct_ptr<_1e4b15a20_Param>(new( std::nothrow ) _1e4b15a20_Param(_1e3bad8dd_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1e6420856_TypeSymbol>(),jule::Str("sub", 3))),_248817_str_kind)),jule::new_struct<_1e4b15a20_ParamIns>(new( std::nothrow ) _1e4b15a20_ParamIns(jule::new_struct_ptr<_1e4b15a20_Param>(new( std::nothrow ) _1e4b15a20_Param(_1e3bad8dd_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1e6420856_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("int", 3))))))}),jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1e6420856_Slc>(new( std::nothrow ) _1e6420856_Slc(_248817_str_kind)))),jule::Ptr<_1e4d6ee22_Scope>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e4d70a6b_CommonSubIdentExprModel>(new( std::nothrow ) _1e4d70a6b_CommonSubIdentExprModel(_248741_d->_field_kind,_248741_d->_field_model,jule::Str("split", 5)))),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4735883024;
		_case_end_4735886176:;
		if (!((jule::Str("replace", 7)) == _match_expr)) { goto _case_end_4735886272; }
		_case_begin_4735886272:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns(jule::Ptr<_1e398ee72_StructIns>(),jule::Ptr<_1e4b15a20_Fn>(),jule::Slice<jule::Ptr<_1e6420856_TypeKind>>(),jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>({jule::new_struct<_1e4b15a20_ParamIns>(new( std::nothrow ) _1e4b15a20_ParamIns(jule::new_struct_ptr<_1e4b15a20_Param>(new( std::nothrow ) _1e4b15a20_Param(_1e3bad8dd_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1e6420856_TypeSymbol>(),jule::Str("sub", 3))),_248817_str_kind)),jule::new_struct<_1e4b15a20_ParamIns>(new( std::nothrow ) _1e4b15a20_ParamIns(jule::new_struct_ptr<_1e4b15a20_Param>(new( std::nothrow ) _1e4b15a20_Param(_1e3bad8dd_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1e6420856_TypeSymbol>(),jule::Str("new", 3))),_248817_str_kind)),jule::new_struct<_1e4b15a20_ParamIns>(new( std::nothrow ) _1e4b15a20_ParamIns(jule::new_struct_ptr<_1e4b15a20_Param>(new( std::nothrow ) _1e4b15a20_Param(_1e3bad8dd_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1e6420856_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("int", 3))))))}),_248817_str_kind,jule::Ptr<_1e4d6ee22_Scope>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e4d70a6b_CommonSubIdentExprModel>(new( std::nothrow ) _1e4d70a6b_CommonSubIdentExprModel(_248741_d->_field_kind,_248741_d->_field_model,jule::Str("replace", 7)))),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4735883024;
		_case_end_4735886272:;
		_case_begin_4735881488:;
		{
			(*this)._method_push_err(_248751_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_248751_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4735883024;
		_case_end_4735881488:;
		_match_end_4735883024:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_int_type_static(_1e3bad8dd_Token _273639_ident) {
	
	{
		auto &_match_expr{ _273639_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4735930960; }
		_case_begin_4735930960:;
		{
			jule::Ptr<_1c8b9b83b_Const> _274121_c = _1c8b9b83b_Const::_static_method_new_i64(static_cast<jule::I64>(_1c8ba438d_max(jule::Str("int", 3))));
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_274121_c),jule::Bool(),_274121_c));
		}
		goto _match_end_4735927920;
		_case_end_4735930960:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4735931152; }
		_case_begin_4735931152:;
		{
			jule::Ptr<_1c8b9b83b_Const> _274921_c = _1c8b9b83b_Const::_static_method_new_i64(static_cast<jule::I64>(_1c8ba438d_min(jule::Str("int", 3))));
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_274921_c),jule::Bool(),_274921_c));
		}
		goto _match_end_4735927920;
		_case_end_4735931152:;
		_case_begin_4735926848:;
		{
			(*this)._method_push_err(_273639_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("int", 3)),jule::Any(_273639_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4735927920;
		_case_end_4735926848:;
		_match_end_4735927920:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_uint_type_static(_1e3bad8dd_Token _276240_ident) {
	
	{
		auto &_match_expr{ _276240_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4735942912; }
		_case_begin_4735942912:;
		{
			jule::Ptr<_1c8b9b83b_Const> _276721_c = _1c8b9b83b_Const::_static_method_new_u64(static_cast<jule::U64>(_1c8ba438d_max(jule::Str("uint", 4))));
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("uint", 4)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_276721_c),jule::Bool(),_276721_c));
		}
		goto _match_end_4735939872;
		_case_end_4735942912:;
		_case_begin_4735938800:;
		{
			(*this)._method_push_err(_276240_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("uint", 4)),jule::Any(_276240_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4735939872;
		_case_end_4735938800:;
		_match_end_4735939872:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_i8_type_static(_1e3bad8dd_Token _278038_ident) {
	
	
	
	{
		auto &_match_expr{ _278038_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4735952896; }
		_case_begin_4735952896:;
		{
			jule::Ptr<_1c8b9b83b_Const> _278721_c = _1c8b9b83b_Const::_static_method_new_i64(127LL);
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("i8", 2)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_278721_c),jule::Bool(),_278721_c));
		}
		goto _match_end_4735950736;
		_case_end_4735952896:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4735953024; }
		_case_begin_4735953024:;
		{
			jule::Ptr<_1c8b9b83b_Const> _279521_c = _1c8b9b83b_Const::_static_method_new_i64(-128LL);
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("i8", 2)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_279521_c),jule::Bool(),_279521_c));
		}
		goto _match_end_4735950736;
		_case_end_4735953024:;
		_case_begin_4735949280:;
		{
			(*this)._method_push_err(_278038_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i8", 2)),jule::Any(_278038_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4735950736;
		_case_end_4735949280:;
		_match_end_4735950736:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_i16_type_static(_1e3bad8dd_Token _280839_ident) {
	
	
	
	{
		auto &_match_expr{ _280839_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4735965888; }
		_case_begin_4735965888:;
		{
			jule::Ptr<_1c8b9b83b_Const> _281521_c = _1c8b9b83b_Const::_static_method_new_i64(32767LL);
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("i16", 3)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_281521_c),jule::Bool(),_281521_c));
		}
		goto _match_end_4735962736;
		_case_end_4735965888:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4735966032; }
		_case_begin_4735966032:;
		{
			jule::Ptr<_1c8b9b83b_Const> _282321_c = _1c8b9b83b_Const::_static_method_new_i64(-32768LL);
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("i16", 3)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_282321_c),jule::Bool(),_282321_c));
		}
		goto _match_end_4735962736;
		_case_end_4735966032:;
		_case_begin_4735962176:;
		{
			(*this)._method_push_err(_280839_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i16", 3)),jule::Any(_280839_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4735962736;
		_case_end_4735962176:;
		_match_end_4735962736:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_i32_type_static(_1e3bad8dd_Token _283639_ident) {
	
	
	
	{
		auto &_match_expr{ _283639_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4735980384; }
		_case_begin_4735980384:;
		{
			jule::Ptr<_1c8b9b83b_Const> _284321_c = _1c8b9b83b_Const::_static_method_new_i64(2147483647LL);
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("i32", 3)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_284321_c),jule::Bool(),_284321_c));
		}
		goto _match_end_4735977232;
		_case_end_4735980384:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4735980528; }
		_case_begin_4735980528:;
		{
			jule::Ptr<_1c8b9b83b_Const> _285121_c = _1c8b9b83b_Const::_static_method_new_i64(-2147483648LL);
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("i32", 3)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_285121_c),jule::Bool(),_285121_c));
		}
		goto _match_end_4735977232;
		_case_end_4735980528:;
		_case_begin_4735975776:;
		{
			(*this)._method_push_err(_283639_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i32", 3)),jule::Any(_283639_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4735977232;
		_case_end_4735975776:;
		_match_end_4735977232:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_i64_type_static(_1e3bad8dd_Token _286439_ident) {
	
	
	
	{
		auto &_match_expr{ _286439_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4735993264; }
		_case_begin_4735993264:;
		{
			jule::Ptr<_1c8b9b83b_Const> _287121_c = _1c8b9b83b_Const::_static_method_new_i64(jule::MAX_I64);
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_287121_c),jule::Bool(),_287121_c));
		}
		goto _match_end_4735990112;
		_case_end_4735993264:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4735993408; }
		_case_begin_4735993408:;
		{
			jule::Ptr<_1c8b9b83b_Const> _287921_c = _1c8b9b83b_Const::_static_method_new_i64(jule::MIN_I64);
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_287921_c),jule::Bool(),_287921_c));
		}
		goto _match_end_4735990112;
		_case_end_4735993408:;
		_case_begin_4735988720:;
		{
			(*this)._method_push_err(_286439_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i64", 3)),jule::Any(_286439_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4735990112;
		_case_end_4735988720:;
		_match_end_4735990112:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_u8_type_static(_1e3bad8dd_Token _289238_ident) {
	
	
	{
		auto &_match_expr{ _289238_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4736005248; }
		_case_begin_4736005248:;
		{
			jule::Ptr<_1c8b9b83b_Const> _289821_c = _1c8b9b83b_Const::_static_method_new_u64(255LLU);
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("u8", 2)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_289821_c),jule::Bool(),_289821_c));
		}
		goto _match_end_4736002080;
		_case_end_4736005248:;
		_case_begin_4736000544:;
		{
			(*this)._method_push_err(_289238_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u8", 2)),jule::Any(_289238_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4736002080;
		_case_end_4736000544:;
		_match_end_4736002080:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_u16_type_static(_1e3bad8dd_Token _291139_ident) {
	
	
	{
		auto &_match_expr{ _291139_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4736014704; }
		_case_begin_4736014704:;
		{
			jule::Ptr<_1c8b9b83b_Const> _291721_c = _1c8b9b83b_Const::_static_method_new_u64(65535LLU);
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("u16", 3)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_291721_c),jule::Bool(),_291721_c));
		}
		goto _match_end_4736011536;
		_case_end_4736014704:;
		_case_begin_4736010000:;
		{
			(*this)._method_push_err(_291139_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u16", 3)),jule::Any(_291139_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4736011536;
		_case_end_4736010000:;
		_match_end_4736011536:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_u32_type_static(_1e3bad8dd_Token _293039_ident) {
	
	
	{
		auto &_match_expr{ _293039_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4736024160; }
		_case_begin_4736024160:;
		{
			jule::Ptr<_1c8b9b83b_Const> _293621_c = _1c8b9b83b_Const::_static_method_new_u64(4294967295LLU);
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("u32", 3)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_293621_c),jule::Bool(),_293621_c));
		}
		goto _match_end_4736020992;
		_case_end_4736024160:;
		_case_begin_4736019456:;
		{
			(*this)._method_push_err(_293039_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u32", 3)),jule::Any(_293039_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4736020992;
		_case_end_4736019456:;
		_match_end_4736020992:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_u64_type_static(_1e3bad8dd_Token _294939_ident) {
	
	
	{
		auto &_match_expr{ _294939_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4736033552; }
		_case_begin_4736033552:;
		{
			jule::Ptr<_1c8b9b83b_Const> _295521_c = _1c8b9b83b_Const::_static_method_new_u64(jule::MAX_U64);
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("u64", 3)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_295521_c),jule::Bool(),_295521_c));
		}
		goto _match_end_4736030384;
		_case_end_4736033552:;
		_case_begin_4736028912:;
		{
			(*this)._method_push_err(_294939_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u64", 3)),jule::Any(_294939_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4736030384;
		_case_end_4736028912:;
		_match_end_4736030384:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_f32_type_tatic(_1e3bad8dd_Token _296838_ident) {
	
	
	
	{
		auto &_match_expr{ _296838_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4736044032; }
		_case_begin_4736044032:;
		{
			jule::Ptr<_1c8b9b83b_Const> _297521_c = _1c8b9b83b_Const::_static_method_new_f64(340282346638528860000000000000000000000.0);
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("f32", 3)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_297521_c),jule::Bool(),_297521_c));
		}
		goto _match_end_4736040880;
		_case_end_4736044032:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4736044176; }
		_case_begin_4736044176:;
		{
			jule::Ptr<_1c8b9b83b_Const> _298321_c = _1c8b9b83b_Const::_static_method_new_f64(-340282346638528860000000000000000000000.0);
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("f32", 3)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_298321_c),jule::Bool(),_298321_c));
		}
		goto _match_end_4736040880;
		_case_end_4736044176:;
		_case_begin_4736039520:;
		{
			(*this)._method_push_err(_296838_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("f32", 3)),jule::Any(_296838_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4736040880;
		_case_end_4736039520:;
		_match_end_4736040880:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_f64_type_static(_1e3bad8dd_Token _299639_ident) {
	
	
	
	{
		auto &_match_expr{ _299639_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4736056816; }
		_case_begin_4736056816:;
		{
			jule::Ptr<_1c8b9b83b_Const> _300321_c = _1c8b9b83b_Const::_static_method_new_f64(jule::MAX_F64);
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("f64", 3)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_300321_c),jule::Bool(),_300321_c));
		}
		goto _match_end_4736053664;
		_case_end_4736056816:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4736056960; }
		_case_begin_4736056960:;
		{
			jule::Ptr<_1c8b9b83b_Const> _301121_c = _1c8b9b83b_Const::_static_method_new_f64(jule::MIN_F64);
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("f64", 3)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_301121_c),jule::Bool(),_301121_c));
		}
		goto _match_end_4736053664;
		_case_end_4736056960:;
		_case_begin_4736053360:;
		{
			(*this)._method_push_err(_299639_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("f64", 3)),jule::Any(_299639_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4736053664;
		_case_end_4736053360:;
		_match_end_4736053664:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_prim_static(jule::Str _302435_kind,_1e3bad8dd_Token _302446_ident) {
	{
		auto &_match_expr{ _302435_kind };
		if (!((jule::Str("int", 3)) == _match_expr)) { goto _case_end_4736067696; }
		_case_begin_4736067696:;
		{
			return (*this)._method_eval_int_type_static(_302446_ident);
		}
		goto _match_end_4736064480;
		_case_end_4736067696:;
		if (!((jule::Str("uint", 4)) == _match_expr)) { goto _case_end_4736067360; }
		_case_begin_4736067360:;
		{
			return (*this)._method_eval_uint_type_static(_302446_ident);
		}
		goto _match_end_4736064480;
		_case_end_4736067360:;
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4736067456; }
		_case_begin_4736067456:;
		{
			return (*this)._method_eval_i8_type_static(_302446_ident);
		}
		goto _match_end_4736064480;
		_case_end_4736067456:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4736067552; }
		_case_begin_4736067552:;
		{
			return (*this)._method_eval_i16_type_static(_302446_ident);
		}
		goto _match_end_4736064480;
		_case_end_4736067552:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4736065184; }
		_case_begin_4736065184:;
		{
			return (*this)._method_eval_i32_type_static(_302446_ident);
		}
		goto _match_end_4736064480;
		_case_end_4736065184:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4736065280; }
		_case_begin_4736065280:;
		{
			return (*this)._method_eval_i64_type_static(_302446_ident);
		}
		goto _match_end_4736064480;
		_case_end_4736065280:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4736065376; }
		_case_begin_4736065376:;
		{
			return (*this)._method_eval_u8_type_static(_302446_ident);
		}
		goto _match_end_4736064480;
		_case_end_4736065376:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4736065472; }
		_case_begin_4736065472:;
		{
			return (*this)._method_eval_u16_type_static(_302446_ident);
		}
		goto _match_end_4736064480;
		_case_end_4736065472:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4736068112; }
		_case_begin_4736068112:;
		{
			return (*this)._method_eval_u32_type_static(_302446_ident);
		}
		goto _match_end_4736064480;
		_case_end_4736068112:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4736068208; }
		_case_begin_4736068208:;
		{
			return (*this)._method_eval_u64_type_static(_302446_ident);
		}
		goto _match_end_4736064480;
		_case_end_4736068208:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4736068304; }
		_case_begin_4736068304:;
		{
			return (*this)._method_eval_f32_type_tatic(_302446_ident);
		}
		goto _match_end_4736064480;
		_case_end_4736068304:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4736068400; }
		_case_begin_4736068400:;
		{
			return (*this)._method_eval_f64_type_static(_302446_ident);
		}
		goto _match_end_4736064480;
		_case_end_4736068400:;
		_case_begin_4736064384:;
		{
			(*this)._method_push_err(_302446_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_302435_kind),jule::Any(_302446_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4736064480;
		_case_end_4736064384:;
		_match_end_4736064480:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_type_static(jule::Ptr<_1e50ac4b1_Data> _304439_d,jule::Ptr<_1e38d4ec7_SubIdentExpr> _304453_si) {
	{
		if (!((_304439_d->_field_kind->_method_prim() != nullptr))) { goto _case_end_4736086400; }
		_case_begin_4736086400:;
		{
			return (*this)._method_eval_prim_static(_304439_d->_field_kind->_method_prim()->_method_to_str(),_304453_si->_field_ident);
		}
		goto _match_end_4736082480;
		_case_end_4736086400:;
		if (!((_304439_d->_field_kind->_method_enm() != nullptr))) { goto _case_end_4736086528; }
		_case_begin_4736086528:;
		{
			return (*this)._method_eval_enum_static(_304439_d->_field_kind->_method_enm(),_304453_si->_field_ident);
		}
		goto _match_end_4736082480;
		_case_end_4736086528:;
		if (!((_304439_d->_field_kind->_method_strct() != nullptr))) { goto _case_end_4736086624; }
		_case_begin_4736086624:;
		{
			return (*this)._method_eval_struct_static(_304439_d->_field_kind->_method_strct(),_304453_si->_field_ident);
		}
		goto _match_end_4736082480;
		_case_end_4736086624:;
		_case_begin_4736082624:;
		{
			(*this)._method_push_err(_304453_si->_field_ident,jule::Str("type @ is not supports sub fields", 33),jule::Slice<jule::Any>({jule::Any(_304439_d->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4736082480;
		_case_end_4736082624:;
		_match_end_4736082480:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_obj_sub_ident(jule::Ptr<_1e50ac4b1_Data> _306141_d,jule::Ptr<_1e38d4ec7_SubIdentExpr> _306155_si) {
	jule::Ptr<_1e6420856_TypeKind> _306217_kind = _306141_d->_field_kind;
	if (_306141_d->_field_kind->_method_ptr() != nullptr) {
		jule::Ptr<_1e6420856_Ptr> _306417_ptr = _306141_d->_field_kind->_method_ptr();
		if ((!(_306417_ptr->_method_is_unsafe()))) {
			if ((!(_306155_si->_field_is_self)) && (!((*this)._method_is_unsafe()))) {
				(*this)._method_push_err(_306155_si->_field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
			_306217_kind=_306141_d->_field_kind->_method_ptr()->_field_elem;
		}
	} else if (_306141_d->_field_kind->_method_sptr() != nullptr) {
		_306217_kind=_306141_d->_field_kind->_method_sptr()->_field_elem;
	}
	{
		if (!((_306141_d->_field_kind->_method_trt() != nullptr))) { goto _case_end_4736105680; }
		_case_begin_4736105680:;
		{
			return (*this)._method_eval_trait_sub_ident(_306141_d,_306141_d->_field_kind->_method_trt(),_306155_si->_field_ident);
		}
		goto _match_end_4736104208;
		_case_end_4736105680:;
		if (!((_306217_kind->_method_strct() != nullptr))) { goto _case_end_4736105776; }
		_case_begin_4736105776:;
		{
			jule::Ptr<_1e398ee72_StructIns> _308017_s = _306217_kind->_method_strct();
			if (_1e50ac4b1_is_instanced_struct(_308017_s)) {
				jule::Bool _308225_used_reference_elem = _306141_d->_field_kind->_method_sptr() != nullptr;
				return (*this)._method_eval_struct_sub_ident(_306141_d,_306217_kind->_method_strct(),_306155_si,_308225_used_reference_elem);
			}
		}
		goto _match_end_4736104208;
		_case_end_4736105776:;
		if (!((_306217_kind->_method_slc() != nullptr))) { goto _case_end_4736105872; }
		_case_begin_4736105872:;
		{
			return (*this)._method_eval_slice_sub_ident(_306141_d,_306155_si->_field_ident);
		}
		goto _match_end_4736104208;
		_case_end_4736105872:;
		if (!((_306217_kind->_method_arr() != nullptr))) { goto _case_end_4736105968; }
		_case_begin_4736105968:;
		{
			return (*this)._method_eval_array_sub_ident(_306141_d,_306155_si->_field_ident);
		}
		goto _match_end_4736104208;
		_case_end_4736105968:;
		if (!((_306217_kind->_method_map() != nullptr))) { goto _case_end_4736106064; }
		_case_begin_4736106064:;
		{
			return (*this)._method_eval_map_sub_ident(_306141_d,_306155_si->_field_ident);
		}
		goto _match_end_4736104208;
		_case_end_4736106064:;
		if (!((_306217_kind->_method_prim() != nullptr))) { goto _case_end_4736106160; }
		_case_begin_4736106160:;
		{
			jule::Ptr<_1e6420856_Prim> _309617_p = _306217_kind->_method_prim();
			{
				auto &_match_expr{ _309617_p->_field_kind };
				if (!((jule::Str("str", 3)) == _match_expr)) { goto _case_end_4736116336; }
				_case_begin_4736116336:;
				{
					return (*this)._method_eval_str_sub_ident(_306141_d,_306155_si->_field_ident);
				}
				goto _match_end_4736120880;
				_case_end_4736116336:;
				_match_end_4736120880:;
			}
		}
		goto _match_end_4736104208;
		_case_end_4736106160:;
		_match_end_4736104208:;
	}
	(*this)._method_push_err(_306155_si->_field_ident,jule::Str("object @ is not supports sub fields", 35),jule::Slice<jule::Any>({jule::Any(_306141_d->_field_kind->_method_to_str())}));
	return nullptr;
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_sub_ident(jule::Ptr<_1e38d4ec7_SubIdentExpr> _310738_si) {
	jule::Ptr<_1e6420856_TypeKind> _310817_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_310817_prefix;
	});
	jule::Ptr<_1e50ac4b1_Data> _311217_d = this->self->_method_eval_expr_kind(_310738_si->_field_expr);
	if (_311217_d == nullptr) {
		return nullptr;
	}
	if (_311217_d->_field_decl) {
		return this->self->_method_eval_type_static(_311217_d,_310738_si);
	}
	return this->self->_method_eval_obj_sub_ident(_311217_d,_310738_si);
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_tuple(jule::Ptr<_1e38d4ec7_TupleExpr> _312434_tup) {
	jule::Ptr<_1e6420856_Tuple> _312517_tup_t = jule::new_struct_ptr<_1e6420856_Tuple>(new( std::nothrow ) _1e6420856_Tuple());
	_312517_tup_t->_field_types=jule::Slice<jule::Ptr<_1e6420856_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_312434_tup->_field_expr.len()));
	jule::Ptr<_1e4d70a6b_TupleExprModel> _312817_model = jule::new_struct<_1e4d70a6b_TupleExprModel>(new( std::nothrow ) _1e4d70a6b_TupleExprModel(jule::Slice<jule::Ptr<_1e50ac4b1_Data>>::alloc(0LL,static_cast<jule::I64>(_312434_tup->_field_expr.len()))));
	jule::Bool _313217_ok = true;
	{
		auto &expr = _312434_tup->_field_expr;
		auto it = expr.begin();
		_iter_begin_4736140512:;
		if (it != expr.end()) {
			jule::Ptr<_1e38d4ec7_Expr> _1e50ac4b1_expr = *it;
			{
				jule::Ptr<_1e50ac4b1_Data> _313421_d = this->self->_method_eval_expr_kind(_1e50ac4b1_expr->_field_kind);
				if (_313421_d == nullptr) {
					_313217_ok=false;
					goto _iter_next_4736140512;
				}
				_312517_tup_t->_field_types = jule::alloc_for_append(_312517_tup_t->_field_types,1);_312517_tup_t->_field_types.push(_313421_d->_field_kind);
				_312817_model->_field_datas = jule::alloc_for_append(_312817_model->_field_datas,1);_312817_model->_field_datas.push(_313421_d);
			}
			_iter_next_4736140512:;
			++it;
			goto _iter_begin_4736140512;
		}
		_iter_end_4736140512:;
	}
	if ((!(_313217_ok))) {
		return nullptr;
	}
	return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_312517_tup_t)),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_312817_model),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_map(jule::Ptr<_1e6420856_Map> _315332_m,jule::Ptr<_1e38d4ec7_BraceLit> _315345_lit) {
	jule::Ptr<_1e4d70a6b_MapExprModel> _315417_model = jule::new_struct<_1e4d70a6b_MapExprModel>(new( std::nothrow ) _1e4d70a6b_MapExprModel(_315332_m->_field_key,_315332_m->_field_val,jule::Slice<jule::Ptr<_1e4d70a6b_KeyValPairExprModel>>()));
	{
		auto &expr = _315345_lit->_field_exprs;
		auto it = expr.begin();
		_iter_begin_4736152368:;
		if (it != expr.end()) {
			jule::Any _1e50ac4b1_expr = *it;
			{
				{
					auto &_match_expr{ _1e50ac4b1_expr };
					if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_KeyValPair>>())) { goto _case_end_4736156368; }
					goto _match_end_4736153984;
					_case_end_4736156368:;
					_case_begin_4736153520:;
					{
						this->self->_method_push_err(_315345_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						return nullptr;
					}
					goto _match_end_4736153984;
					_case_end_4736153520:;
					_match_end_4736153984:;
				}
				jule::Ptr<_1e38d4ec7_KeyValPair> _316921_pair = _1e50ac4b1_expr.operator jule::Ptr<_1e38d4ec7_KeyValPair>();
				jule::Ptr<_1e50ac4b1_Data> _317121_key = this->self->_method_eval_expr_kind(_316921_pair->_field_key);
				if (_317121_key == nullptr) {
					return nullptr;
				}
				jule::Ptr<_1e50ac4b1_Data> _317621_val = this->self->_method_eval_expr_kind(_316921_pair->_field_val);
				if (_317621_val == nullptr) {
					return nullptr;
				}
				this->self->_field_s->_method_check_assign_type(false,_315332_m->_field_key,_317121_key,_316921_pair->_field_colon);
				this->self->_field_s->_method_check_assign_type(false,_315332_m->_field_val,_317621_val,_316921_pair->_field_colon);
				_315417_model->_field_entries = jule::alloc_for_append(_315417_model->_field_entries,1);_315417_model->_field_entries.push(jule::new_struct<_1e4d70a6b_KeyValPairExprModel>(new( std::nothrow ) _1e4d70a6b_KeyValPairExprModel(_317121_key->_field_model,_317621_val->_field_model)));
			}
			_iter_next_4736152368:;
			++it;
			goto _iter_begin_4736152368;
		}
		_iter_end_4736152368:;
	}
	return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_315332_m)),jule::Ptr<_1e6420856_TypeKind>(),true,jule::Bool(),false,false,jule::Bool(),jule::Any(_315417_model),false,jule::Ptr<_1c8b9b83b_Const>()));
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_brace_lit(jule::Ptr<_1e38d4ec7_BraceLit> _320038_lit) {
	{
		if (!((this->self->_field_prefix == nullptr))) { goto _case_end_4736171952; }
		_case_begin_4736171952:;
		{
			this->self->_method_push_err(_320038_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		goto _match_end_4736169248;
		_case_end_4736171952:;
		if (!((this->self->_field_prefix->_method_map() != nullptr))) { goto _case_end_4736172080; }
		_case_begin_4736172080:;
		{
			return this->self->_method_eval_map(this->self->_field_prefix->_method_map(),_320038_lit);
		}
		goto _match_end_4736169248;
		_case_end_4736172080:;
		if (!((this->self->_field_prefix->_method_strct() != nullptr))) { goto _case_end_4736172176; }
		_case_begin_4736172176:;
		{
			return this->self->_method_eval_struct_lit_explicit(this->self->_field_prefix->_method_strct(),_320038_lit->_field_exprs,_320038_lit->_field_token);
		}
		goto _match_end_4736169248;
		_case_end_4736172176:;
		_case_begin_4736169424:;
		{
			this->self->_method_push_err(_320038_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		goto _match_end_4736169248;
		_case_end_4736169424:;
		_match_end_4736169248:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_anon_fn(jule::Ptr<_1e38d4ec7_FnDecl> _321835_decl) {
	_1e6420856_TypeChecker _321917_tc = _1e6420856_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ptr<_1e6420856_Referencer>(),_1e3bad8dd_Token(),jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>>(),jule::Slice<jule::Ptr<_1e6420856_TypeAlias>>(),jule::Bool());
	jule::Ptr<_1e4b15a20_FnIns> _322317_ins = _321917_tc._method_build_fn(_321835_decl);
	_322317_ins->_field_anon=true;
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_ScopeChecker>>())) { goto _case_end_4736186528; }
		_case_begin_4736186528:;
		{
			jule::Ptr<_1e4d6ee22_ScopeChecker> _322821_sc = (*this)._field_lookup.operator jule::Ptr<_1e4d6ee22_ScopeChecker>();
			jule::Ptr<_1e4d6ee22_ScopeChecker> _322921_scc = _322821_sc->_method_new_child_checker();
			_322921_scc->_field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1e4d6ee22_ScopeLabel>>>(nullptr);
			_322921_scc->_field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1e4d6ee22_ScopeGoto>>>(nullptr);
			_322921_scc->_field_owner=nullptr;
			_322921_scc->_field_child_index=0LL;
			_322921_scc->_field_it=0LL;
			_322921_scc->_field_cse=0LL;
			_322921_scc->_field_owner=_322317_ins;
			(*this)._field_s->_method_check_fn_ins_sc(_322317_ins,_322921_scc);
		}
		goto _match_end_4736184416;
		_case_end_4736186528:;
		_case_begin_4736181744:;
		{
			(*this)._field_s->_method_check_fn_ins(_322317_ins);
		}
		goto _match_end_4736184416;
		_case_end_4736181744:;
		_match_end_4736184416:;
	}
	return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_322317_ins)),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e4d70a6b_AnonFnExprModel>(new( std::nothrow ) _1e4d70a6b_AnonFnExprModel(_322317_ins,(*this)._method_is_global()))),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_binop(jule::Ptr<_1e38d4ec7_BinopExpr> _325234_op) {
	jule::Ptr<_1e6420856_TypeKind> _325317_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_325317_prefix;
	});
	_1e50ac4b1_BinopSolver _325717_bs = _1e50ac4b1_BinopSolver(this->self,jule::Ptr<_1e50ac4b1_Data>(),jule::Ptr<_1e50ac4b1_Data>(),_1e3bad8dd_Token());
	return _325717_bs._method_solve(_325234_op);
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_ternary(jule::Ptr<_1e38d4ec7_TernaryExpr> _326336_ter) {
	jule::Ptr<_1e50ac4b1_Data> _326417_d = this->self->_method_eval_expr_kind(_326336_ter->_field_condition);
	if (_326417_d == nullptr) {
		return nullptr;
	}
	jule::Ptr<_1e6420856_Prim> _326913_prim = _326417_d->_field_kind->_method_prim();
	if ((_326913_prim == nullptr) || (!(_326913_prim->_method_is_bool()))) {
		this->self->_method_push_err(_326336_ter->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1e50ac4b1_Data> _327517_td = this->self->_method_eval_expr_kind(_326336_ter->_field_true_expr);
	if (_327517_td == nullptr) {
		return nullptr;
	}
	if (_327517_td->_field_kind->_method_void()) {
		this->self->_method_push_err(_326336_ter->_field_token,jule::Str("void type cannot used for ternary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1e6420856_TypeKind> _328517_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_327517_td->_field_kind;
	jule::Ptr<_1e50ac4b1_Data> _328817_fd = this->self->_method_eval_expr_kind(_326336_ter->_field_false_expr);
	this->self->_field_prefix=_328517_prefix;
	if (_328817_fd == nullptr) {
		return nullptr;
	}
	_1e522c29b_AssignTypeChecker _329517_ac = _1e522c29b_AssignTypeChecker(this->self->_field_s,jule::Ptr<_1e6420856_TypeKind>(),jule::Ptr<_1e50ac4b1_Data>(),_326336_ter->_field_token);
	if (_327517_td->_method_is_const() && (!(_328817_fd->_method_is_const()))) {
		_329517_ac._field_dest=_328817_fd->_field_kind;
		_329517_ac._field_d=_327517_td;
	} else {
		_329517_ac._field_dest=_327517_td->_field_kind;
		_329517_ac._field_d=_328817_fd;
	}
	if ((!(_329517_ac._method_check()))) {
		this->self->_method_push_suggestion(jule::Str("use same or compatible values for ternary expressions", 53),jule::Slice<jule::Any>());
	}
	if (_326417_d->_method_is_const()) {
		if (_326417_d->_field_constant->_method_read_bool()) {
			return _327517_td;
		}
		return _328817_fd;
	}
	jule::Ptr<_1e50ac4b1_Data> _331717_r = jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data());
	_331717_r->_field_kind=_329517_ac._field_dest;
	_331717_r->_field_lvalue=false;
	_331717_r->_field_mutable=_331717_r->_field_kind->_method_mutable();
	_331717_r->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_TernaryExprModel>(new( std::nothrow ) _1e4d70a6b_TernaryExprModel(_326417_d->_field_model,_327517_td->_field_model,_328817_fd->_field_model)));
	return _331717_r;
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_expr_kind(jule::Any _332938_kind) {
	jule::Ptr<_1e50ac4b1_Data> _333017_d = nullptr;
	{
		auto &_match_expr{ _332938_kind };
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_LitExpr>>())) { goto _case_end_4736233280; }
		_case_begin_4736233280:;
		{
			_333017_d=this->self->_method_eval_lit(_332938_kind.operator jule::Ptr<_1e38d4ec7_LitExpr>());
		}
		goto _match_end_4736234048;
		_case_end_4736233280:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_IdentExpr>>())) { goto _case_end_4736234128; }
		_case_begin_4736234128:;
		{
			_333017_d=this->self->_method_eval_ident(_332938_kind.operator jule::Ptr<_1e38d4ec7_IdentExpr>());
		}
		goto _match_end_4736234048;
		_case_end_4736234128:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_UnaryExpr>>())) { goto _case_end_4736234608; }
		_case_begin_4736234608:;
		{
			_333017_d=this->self->_method_eval_unary(_332938_kind.operator jule::Ptr<_1e38d4ec7_UnaryExpr>());
		}
		goto _match_end_4736234048;
		_case_end_4736234608:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_VariadicExpr>>())) { goto _case_end_4736234704; }
		_case_begin_4736234704:;
		{
			_333017_d=this->self->_method_eval_variadic(_332938_kind.operator jule::Ptr<_1e38d4ec7_VariadicExpr>());
		}
		goto _match_end_4736234048;
		_case_end_4736234704:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_UnsafeExpr>>())) { goto _case_end_4736234800; }
		_case_begin_4736234800:;
		{
			_333017_d=this->self->_method_eval_unsafe(_332938_kind.operator jule::Ptr<_1e38d4ec7_UnsafeExpr>());
		}
		goto _match_end_4736234048;
		_case_end_4736234800:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_SliceExpr>>())) { goto _case_end_4736234896; }
		_case_begin_4736234896:;
		{
			_333017_d=this->self->_method_eval_slice_expr(_332938_kind.operator jule::Ptr<_1e38d4ec7_SliceExpr>());
		}
		goto _match_end_4736234048;
		_case_end_4736234896:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_IndexingExpr>>())) { goto _case_end_4736234992; }
		_case_begin_4736234992:;
		{
			_333017_d=this->self->_method_eval_indexing(_332938_kind.operator jule::Ptr<_1e38d4ec7_IndexingExpr>());
		}
		goto _match_end_4736234048;
		_case_end_4736234992:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_SlicingExpr>>())) { goto _case_end_4736235088; }
		_case_begin_4736235088:;
		{
			_333017_d=this->self->_method_eval_slicing(_332938_kind.operator jule::Ptr<_1e38d4ec7_SlicingExpr>());
		}
		goto _match_end_4736234048;
		_case_end_4736235088:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_CastExpr>>())) { goto _case_end_4736235184; }
		_case_begin_4736235184:;
		{
			_333017_d=this->self->_method_eval_cast(_332938_kind.operator jule::Ptr<_1e38d4ec7_CastExpr>());
		}
		goto _match_end_4736234048;
		_case_end_4736235184:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_NsSelectionExpr>>())) { goto _case_end_4736235280; }
		_case_begin_4736235280:;
		{
			_333017_d=this->self->_method_eval_ns_selection(_332938_kind.operator jule::Ptr<_1e38d4ec7_NsSelectionExpr>());
		}
		goto _match_end_4736234048;
		_case_end_4736235280:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_StructLit>>())) { goto _case_end_4736235376; }
		_case_begin_4736235376:;
		{
			_333017_d=this->self->_method_eval_struct_lit(_332938_kind.operator jule::Ptr<_1e38d4ec7_StructLit>());
		}
		goto _match_end_4736234048;
		_case_end_4736235376:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_TypeDecl>>())) { goto _case_end_4736235472; }
		_case_begin_4736235472:;
		{
			_333017_d=this->self->_method_eval_type(_332938_kind.operator jule::Ptr<_1e38d4ec7_TypeDecl>());
		}
		goto _match_end_4736234048;
		_case_end_4736235472:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_FnCallExpr>>())) { goto _case_end_4736235584; }
		_case_begin_4736235584:;
		{
			_333017_d=this->self->_method_eval_fn_call(_332938_kind.operator jule::Ptr<_1e38d4ec7_FnCallExpr>());
		}
		goto _match_end_4736234048;
		_case_end_4736235584:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_SubIdentExpr>>())) { goto _case_end_4736235696; }
		_case_begin_4736235696:;
		{
			_333017_d=this->self->_method_eval_sub_ident(_332938_kind.operator jule::Ptr<_1e38d4ec7_SubIdentExpr>());
		}
		goto _match_end_4736234048;
		_case_end_4736235696:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_TupleExpr>>())) { goto _case_end_4736235808; }
		_case_begin_4736235808:;
		{
			_333017_d=this->self->_method_eval_tuple(_332938_kind.operator jule::Ptr<_1e38d4ec7_TupleExpr>());
		}
		goto _match_end_4736234048;
		_case_end_4736235808:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_BraceLit>>())) { goto _case_end_4736235920; }
		_case_begin_4736235920:;
		{
			_333017_d=this->self->_method_eval_brace_lit(_332938_kind.operator jule::Ptr<_1e38d4ec7_BraceLit>());
		}
		goto _match_end_4736234048;
		_case_end_4736235920:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_FnDecl>>())) { goto _case_end_4736236032; }
		_case_begin_4736236032:;
		{
			_333017_d=this->self->_method_eval_anon_fn(_332938_kind.operator jule::Ptr<_1e38d4ec7_FnDecl>());
		}
		goto _match_end_4736234048;
		_case_end_4736236032:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_BinopExpr>>())) { goto _case_end_4736236144; }
		_case_begin_4736236144:;
		{
			_333017_d=this->self->_method_eval_binop(_332938_kind.operator jule::Ptr<_1e38d4ec7_BinopExpr>());
		}
		goto _match_end_4736234048;
		_case_end_4736236144:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_TernaryExpr>>())) { goto _case_end_4736236256; }
		_case_begin_4736236256:;
		{
			_333017_d=this->self->_method_eval_ternary(_332938_kind.operator jule::Ptr<_1e38d4ec7_TernaryExpr>());
		}
		goto _match_end_4736234048;
		_case_end_4736236256:;
		_match_end_4736234048:;
	}
	if (_333017_d == nullptr) {
		return nullptr;
	}
	if (_333017_d->_field_kind == nullptr) {
		return _333017_d;
	}
	if ((((_333017_d->_field_cast_kind == nullptr) && _333017_d->_method_is_const()) && (!(_333017_d->_field_is_rune))) && (_333017_d->_field_kind->_method_prim() != nullptr)) {
		{
			if (!((_333017_d->_field_constant->_method_is_i64()))) { goto _case_end_4736268128; }
			_case_begin_4736268128:;
			{
				if (_1e522c29b_int_assignable(jule::Str("int", 3),_333017_d)) {
					_333017_d->_field_kind->_field_kind=_1e6420856_build_prim_type(jule::Str("int", 3));
					_333017_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_333017_d->_field_constant->_method_as_i64()));
				}
			}
			goto _match_end_4736267232;
			_case_end_4736268128:;
			if (!((_333017_d->_field_constant->_method_is_u64()))) { goto _case_end_4736268240; }
			_case_begin_4736268240:;
			{
				if (_1e522c29b_int_assignable(jule::Str("uint", 4),_333017_d)) {
					_333017_d->_field_kind->_field_kind=_1e6420856_build_prim_type(jule::Str("uint", 4));
					_333017_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_333017_d->_field_constant->_method_as_u64()));
				}
			}
			goto _match_end_4736267232;
			_case_end_4736268240:;
			_match_end_4736267232:;
		}
	}
	if ((!(_333017_d->_field_decl))) {
		if ((((((((!(_333017_d->_field_kind->_method_cpp_linked())) && (this->self->_field_prefix != nullptr)) && (_333017_d->_field_cast_kind == nullptr)) && (!(_333017_d->_field_variadiced))) && (!(_333017_d->_field_lvalue))) && (!(_333017_d->_method_is_const()))) && (_333017_d->_field_kind->_method_prim() != nullptr)) && _1c8c8ad04_is_num(_333017_d->_field_kind->_method_prim()->_field_kind)) {
			_333017_d->_field_cast_kind=_333017_d->_field_kind;
		}
		_1e50ac4b1_apply_cast_kind(_333017_d);
		if ((_333017_d->_field_kind->_method_prim() == nullptr) || (!(_333017_d->_field_kind->_method_prim()->_method_is_any()))) {
			if (((this->self->_field_prefix != nullptr) && (this->self->_field_prefix->_method_prim() != nullptr)) && this->self->_field_prefix->_method_prim()->_method_is_any()) {
				_333017_d->_field_cast_kind=this->self->_field_prefix;
				_1e50ac4b1_apply_cast_kind_model(_333017_d);
				_333017_d->_field_cast_kind=nullptr;
			}
		}
	}
	return _333017_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval(jule::Ptr<_1e38d4ec7_Expr> _340628_expr) {
	jule::Ptr<_1e50ac4b1_Data> _340717_d = this->self->_method_eval_expr_kind(_340628_expr->_field_kind);
	if ((_340717_d == nullptr) || (_340717_d->_field_kind == nullptr)) {
		return nullptr;
	}
	{
		if (!((_340717_d->_field_kind->_method_fnc() != nullptr))) { goto _case_end_4736292496; }
		_case_begin_4736292496:;
		{
			jule::Ptr<_1e4b15a20_FnIns> _341421_f = _340717_d->_field_kind->_method_fnc();
			if (_341421_f->_method_is_builtin()) {
				goto _match_end_4736292208;
			}
			if (_341421_f->_field_generics.len() != _341421_f->_field_decl->_field_generics.len()) {
				this->self->_field_s->_method_push_err(_340628_expr->_field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
			}
			if (_341421_f->_field_decl->_method_is_method()) {
				this->self->_field_s->_method_push_err(_340628_expr->_field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
			}
		}
		goto _match_end_4736292208;
		_case_end_4736292496:;
		_match_end_4736292208:;
	}
	return _340717_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_Eval::_method_eval_expr(jule::Ptr<_1e38d4ec7_Expr> _343433_expr) {
	jule::Ptr<_1e50ac4b1_Data> _343517_d = this->self->_method_eval(_343433_expr);
	{
		if (!((_343517_d == nullptr))) { goto _case_end_4736305872; }
		_case_begin_4736305872:;
		{
			return nullptr;
		}
		goto _match_end_4736304416;
		_case_end_4736305872:;
		if (!((_343517_d->_field_decl))) { goto _case_end_4736305968; }
		_case_begin_4736305968:;
		{
			this->self->_method_push_err(_343433_expr->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
			return nullptr;
		}
		goto _match_end_4736304416;
		_case_end_4736305968:;
		_case_begin_4736304592:;
		{
			return _343517_d;
		}
		goto _match_end_4736304416;
		_case_end_4736304592:;
		_match_end_4736304416:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1e50ac4b1_Eval &_Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "owner:" << _Src._field_owner;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e6420856_TypeKind::_method_to_str(void) {
	if ((*this)._method_is_nil()) {
		return jule::Str("nil", 3);
	}
	jule::Str _6517_kind = jule::Str();
	if ((*this)._field_variadic) {
		_6517_kind+=jule::Str("...", 3);
	}
	if ((*this)._method_cpp_linked()) {
		_6517_kind+=jule::Str("cpp.", 4);
		_6517_kind+=(*this)._field_cpp_ident;
	} else {
		_6517_kind+=(*this)._field_kind.get()._method_to_str();
	}
	return _6517_kind;
}



inline jule::Bool _1e6420856_TypeKind::_method_equals(jule::Ptr<_1e6420856_TypeKind> _8122_other) {
	if (this->self->_method_is_nil()) {
		return _8122_other->_method_is_nil();
	}
	if (this->self->_method_cpp_linked()) {
		return _8122_other->_method_cpp_linked() && (this->self->_field_cpp_ident == _8122_other->_field_cpp_ident);
	}
	return this->self->_field_kind.get()._method_equals(_8122_other);
}



inline jule::Ptr<_1e6420856_TypeKind> _1e6420856_TypeKind::_method_clone(void) {
	if (this->self == nullptr) {
		return nullptr;
	}
	jule::Ptr<_1e6420856_TypeKind> _10217_kind = jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(this->self->_field_cpp_ident,jule::Bool(),jule::Bool(),this->self->_field_kind));
	return _10217_kind;
}



inline jule::Bool _1e6420856_TypeKind::_method_cpp_linked(void) {
	return (*this)._field_cpp_ident.len() != 0LL;
}



inline jule::Bool _1e6420856_TypeKind::_method_is_nil(void) {
	return (*this)._field_kind == nullptr;
}



inline jule::Bool _1e6420856_TypeKind::_method_void(void) {
	jule::Ptr<_1e6420856_Prim> _11713_prim = (*this)._method_prim();
	return (_11713_prim != nullptr) && (_11713_prim->_method_to_str() == jule::Str("void", 4));
}



inline jule::Bool _1e6420856_TypeKind::_method_mutable(void) {
	{
		_1e6420856_TypeKind* _12421__self = (&((*this)));
		if (_12421__self->_method_strct() != nullptr) {
			return _12421__self->_method_strct()->_field_mutable;
		}
		if (_12421__self->_method_trt() != nullptr) {
			return _12421__self->_method_trt()->_field_mutable;
		}
		if (_12421__self->_method_prim() != nullptr) {
			jule::Ptr<_1e6420856_Prim> _13321_p = _12421__self->_method_prim();
			return _13321_p->_method_is_any();
		}
		if (_12421__self->_method_arr() != nullptr) {
			return _12421__self->_method_arr()->_field_elem->_method_mutable();
		}
		return ((_12421__self->_method_slc() != nullptr) || (_12421__self->_method_ptr() != nullptr)) || (_12421__self->_method_sptr() != nullptr);
	}
}



inline jule::Bool _1e6420856_TypeKind::_method_nil_compatible(void) {
	{
		_1e6420856_TypeKind* _14821__self = (&((*this)));
		jule::Ptr<_1e6420856_Prim> _15017_prim = _14821__self->_method_prim();
		if ((_15017_prim != nullptr) && _15017_prim->_method_is_any()) {
			return true;
		}
		return (((((_14821__self->_method_is_nil() || (_14821__self->_method_fnc() != nullptr)) || (_14821__self->_method_sptr() != nullptr)) || (_14821__self->_method_ptr() != nullptr)) || (_14821__self->_method_trt() != nullptr)) || (_14821__self->_method_slc() != nullptr)) || (_14821__self->_method_map() != nullptr);
	}
}



inline jule::Bool _1e6420856_TypeKind::_method_supports_cloning(void) {
	{
		_1e6420856_TypeKind* _16821__self = (&((*this)));
		{
			if (!((_16821__self->_method_prim() != nullptr))) { goto _case_end_4736777888; }
			_case_begin_4736777888:;
			{
				return (!(_16821__self->_method_prim()->_method_is_any()));
			}
			goto _match_end_4736776048;
			_case_end_4736777888:;
			if (!((_16821__self->_method_enm() != nullptr))) { goto _case_end_4736776448; }
			_case_begin_4736776448:;
			{
				return true;
			}
			goto _match_end_4736776048;
			_case_end_4736776448:;
			if (!((_16821__self->_method_fnc() != nullptr))) { goto _case_end_4736776544; }
			_case_begin_4736776544:;
			{
				return true;
			}
			goto _match_end_4736776048;
			_case_end_4736776544:;
			if (!((_16821__self->_method_ptr() != nullptr))) { goto _case_end_4736776656; }
			_case_begin_4736776656:;
			{
				return true;
			}
			goto _match_end_4736776048;
			_case_end_4736776656:;
			if (!((_16821__self->_method_slc() != nullptr))) { goto _case_end_4736776768; }
			_case_begin_4736776768:;
			{
				return _16821__self->_method_slc()->_field_elem->_method_supports_cloning();
			}
			goto _match_end_4736776048;
			_case_end_4736776768:;
			if (!((_16821__self->_method_map() != nullptr))) { goto _case_end_4736777152; }
			_case_begin_4736777152:;
			{
				jule::Ptr<_1e6420856_Map> _18221_m = _16821__self->_method_map();
				return _18221_m->_field_key->_method_supports_cloning() && _18221_m->_field_val->_method_supports_cloning();
			}
			goto _match_end_4736776048;
			_case_end_4736777152:;
			if (!((_16821__self->_method_arr() != nullptr))) { goto _case_end_4736777264; }
			_case_begin_4736777264:;
			{
				return _16821__self->_method_arr()->_field_elem->_method_supports_cloning();
			}
			goto _match_end_4736776048;
			_case_end_4736777264:;
			if (!((_16821__self->_method_sptr() != nullptr))) { goto _case_end_4736777376; }
			_case_begin_4736777376:;
			{
				return _16821__self->_method_sptr()->_field_elem->_method_supports_cloning();
			}
			goto _match_end_4736776048;
			_case_end_4736777376:;
			if (!((_16821__self->_method_strct() != nullptr))) { goto _case_end_4736777488; }
			_case_begin_4736777488:;
			{
				jule::Ptr<_1e398ee72_StructIns> _19225_s = _16821__self->_method_strct();
				if ((!(_19225_s->_field_mutable))) {
					return true;
				}
				if (((_19225_s->_field_decl == nullptr) || _19225_s->_field_decl->_field_cpp_linked) || (!(_19225_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
					return false;
				}
				return true;
			}
			goto _match_end_4736776048;
			_case_end_4736777488:;
			_case_begin_4736776160:;
			{
				return false;
			}
			goto _match_end_4736776048;
			_case_end_4736776160:;
			_match_end_4736776048:;
		}
	}
}



inline jule::Bool _1e6420856_TypeKind::_method_variadicable(void) {
	{
		_1e6420856_TypeKind* _21221__self = (&((*this)));
		return _21221__self->_method_slc() != nullptr;
	}
}



inline jule::Ptr<_1e6420856_Prim> _1e6420856_TypeKind::_method_prim(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_1e6420856_Prim>>())) { goto _case_end_4737503072; }
		_case_begin_4737503072:;
		{
			return (*this)._field_kind.operator jule::Ptr<_1e6420856_Prim>();
		}
		goto _match_end_4737498656;
		_case_end_4737503072:;
		_case_begin_4737501584:;
		{
			return nullptr;
		}
		goto _match_end_4737498656;
		_case_end_4737501584:;
		_match_end_4737498656:;
	}
}



inline jule::Ptr<_1e6420856_Sptr> _1e6420856_TypeKind::_method_sptr(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_1e6420856_Sptr>>())) { goto _case_end_4737505856; }
		_case_begin_4737505856:;
		{
			return (*this)._field_kind.operator jule::Ptr<_1e6420856_Sptr>();
		}
		goto _match_end_4737503488;
		_case_end_4737505856:;
		_case_begin_4737498736:;
		{
			return nullptr;
		}
		goto _match_end_4737503488;
		_case_end_4737498736:;
		_match_end_4737503488:;
	}
}



inline jule::Ptr<_1e6420856_Ptr> _1e6420856_TypeKind::_method_ptr(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_1e6420856_Ptr>>())) { goto _case_end_4737508864; }
		_case_begin_4737508864:;
		{
			return (*this)._field_kind.operator jule::Ptr<_1e6420856_Ptr>();
		}
		goto _match_end_4737505152;
		_case_end_4737508864:;
		_case_begin_4737506720:;
		{
			return nullptr;
		}
		goto _match_end_4737505152;
		_case_end_4737506720:;
		_match_end_4737505152:;
	}
}



inline jule::Ptr<_1e4d62387_Enum> _1e6420856_TypeKind::_method_enm(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_1e4d62387_Enum>>())) { goto _case_end_4737511840; }
		_case_begin_4737511840:;
		{
			return (*this)._field_kind.operator jule::Ptr<_1e4d62387_Enum>();
		}
		goto _match_end_4737508128;
		_case_end_4737511840:;
		_case_begin_4737509696:;
		{
			return nullptr;
		}
		goto _match_end_4737508128;
		_case_end_4737509696:;
		_match_end_4737508128:;
	}
}



inline jule::Ptr<_1e6420856_Arr> _1e6420856_TypeKind::_method_arr(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_1e6420856_Arr>>())) { goto _case_end_4737514976; }
		_case_begin_4737514976:;
		{
			return (*this)._field_kind.operator jule::Ptr<_1e6420856_Arr>();
		}
		goto _match_end_4737511104;
		_case_end_4737514976:;
		_case_begin_4737512336:;
		{
			return nullptr;
		}
		goto _match_end_4737511104;
		_case_end_4737512336:;
		_match_end_4737511104:;
	}
}



inline jule::Ptr<_1e6420856_Slc> _1e6420856_TypeKind::_method_slc(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_1e6420856_Slc>>())) { goto _case_end_4737517952; }
		_case_begin_4737517952:;
		{
			return (*this)._field_kind.operator jule::Ptr<_1e6420856_Slc>();
		}
		goto _match_end_4737514240;
		_case_end_4737517952:;
		_case_begin_4737515808:;
		{
			return nullptr;
		}
		goto _match_end_4737514240;
		_case_end_4737515808:;
		_match_end_4737514240:;
	}
}



inline jule::Ptr<_1e4b15a20_FnIns> _1e6420856_TypeKind::_method_fnc(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_1e4b15a20_FnIns>>())) { goto _case_end_4737521280; }
		_case_begin_4737521280:;
		{
			return (*this)._field_kind.operator jule::Ptr<_1e4b15a20_FnIns>();
		}
		goto _match_end_4737517216;
		_case_end_4737521280:;
		_case_begin_4737518448:;
		{
			return nullptr;
		}
		goto _match_end_4737517216;
		_case_end_4737518448:;
		_match_end_4737517216:;
	}
}



inline jule::Ptr<_1e398ee72_StructIns> _1e6420856_TypeKind::_method_strct(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_1e398ee72_StructIns>>())) { goto _case_end_4737524256; }
		_case_begin_4737524256:;
		{
			return (*this)._field_kind.operator jule::Ptr<_1e398ee72_StructIns>();
		}
		goto _match_end_4737520544;
		_case_end_4737524256:;
		_case_begin_4737522112:;
		{
			return nullptr;
		}
		goto _match_end_4737520544;
		_case_end_4737522112:;
		_match_end_4737520544:;
	}
}



inline jule::Ptr<_1e4d61232_Trait> _1e6420856_TypeKind::_method_trt(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_1e4d61232_Trait>>())) { goto _case_end_4737527392; }
		_case_begin_4737527392:;
		{
			return (*this)._field_kind.operator jule::Ptr<_1e4d61232_Trait>();
		}
		goto _match_end_4737523520;
		_case_end_4737527392:;
		_case_begin_4737524752:;
		{
			return nullptr;
		}
		goto _match_end_4737523520;
		_case_end_4737524752:;
		_match_end_4737523520:;
	}
}



inline jule::Ptr<_1e6420856_Map> _1e6420856_TypeKind::_method_map(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_1e6420856_Map>>())) { goto _case_end_4737530368; }
		_case_begin_4737530368:;
		{
			return (*this)._field_kind.operator jule::Ptr<_1e6420856_Map>();
		}
		goto _match_end_4737526656;
		_case_end_4737530368:;
		_case_begin_4737528224:;
		{
			return nullptr;
		}
		goto _match_end_4737526656;
		_case_end_4737528224:;
		_match_end_4737526656:;
	}
}



inline jule::Ptr<_1e6420856_Tuple> _1e6420856_TypeKind::_method_tup(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_1e6420856_Tuple>>())) { goto _case_end_4737533408; }
		_case_begin_4737533408:;
		{
			return (*this)._field_kind.operator jule::Ptr<_1e6420856_Tuple>();
		}
		goto _match_end_4737529632;
		_case_end_4737533408:;
		_case_begin_4737530864:;
		{
			return nullptr;
		}
		goto _match_end_4737529632;
		_case_end_4737530864:;
		_match_end_4737529632:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1e6420856_TypeKind &_Src) {
	_Stream << "TypeKind{";
	_Stream << "cpp_ident:" << _Src._field_cpp_ident << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e6420856_TypeSymbol::_method_checked(void) {
	return (*this)._field_kind != nullptr;
}



inline void _1e6420856_TypeSymbol::_method_remove_kind(void) {
	(*this)._field_kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e6420856_TypeSymbol &_Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e6420856_Prim::_method_to_str(void) {
	return (*this)._field_kind;
}



inline jule::Bool _1e6420856_Prim::_method_equals(jule::Ptr<_1e6420856_TypeKind> _33122_other) {
	jule::Ptr<_1e6420856_Prim> _33213_prim = _33122_other->_method_prim();
	if (_33213_prim == nullptr) {
		return false;
	}
	return _1c8ba1104_real_kind_of(this->self->_field_kind) == _1c8ba1104_real_kind_of(_33213_prim->_field_kind);
}



inline jule::Bool _1e6420856_Prim::_method_is_i8(void) {
	return (*this)._field_kind == jule::Str("i8", 2);
}



inline jule::Bool _1e6420856_Prim::_method_is_i16(void) {
	return (*this)._field_kind == jule::Str("i16", 3);
}



inline jule::Bool _1e6420856_Prim::_method_is_i32(void) {
	return (*this)._field_kind == jule::Str("i32", 3);
}



inline jule::Bool _1e6420856_Prim::_method_is_i64(void) {
	return (*this)._field_kind == jule::Str("i64", 3);
}



inline jule::Bool _1e6420856_Prim::_method_is_u8(void) {
	return (*this)._field_kind == jule::Str("u8", 2);
}



inline jule::Bool _1e6420856_Prim::_method_is_u16(void) {
	return (*this)._field_kind == jule::Str("u16", 3);
}



inline jule::Bool _1e6420856_Prim::_method_is_u32(void) {
	return (*this)._field_kind == jule::Str("u32", 3);
}



inline jule::Bool _1e6420856_Prim::_method_is_u64(void) {
	return (*this)._field_kind == jule::Str("u64", 3);
}



inline jule::Bool _1e6420856_Prim::_method_is_f32(void) {
	return (*this)._field_kind == jule::Str("f32", 3);
}



inline jule::Bool _1e6420856_Prim::_method_is_f64(void) {
	return (*this)._field_kind == jule::Str("f64", 3);
}



inline jule::Bool _1e6420856_Prim::_method_is_int(void) {
	return (*this)._field_kind == jule::Str("int", 3);
}



inline jule::Bool _1e6420856_Prim::_method_is_uint(void) {
	return (*this)._field_kind == jule::Str("uint", 4);
}



inline jule::Bool _1e6420856_Prim::_method_is_uintptr(void) {
	return (*this)._field_kind == jule::Str("uintptr", 7);
}



inline jule::Bool _1e6420856_Prim::_method_is_bool(void) {
	return (*this)._field_kind == jule::Str("bool", 4);
}



inline jule::Bool _1e6420856_Prim::_method_is_str(void) {
	return (*this)._field_kind == jule::Str("str", 3);
}



inline jule::Bool _1e6420856_Prim::_method_is_any(void) {
	return (*this)._field_kind == jule::Str("any", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e6420856_Prim &_Src) {
	_Stream << "Prim{";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e6420856_Sptr::_method_to_str(void) {
	return jule::Str("&", 1) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _1e6420856_Sptr::_method_equals(jule::Ptr<_1e6420856_TypeKind> _40022_other) {
	jule::Ptr<_1e6420856_Sptr> _40113_sptr = _40022_other->_method_sptr();
	if (_40113_sptr == nullptr) {
		return false;
	}
	return this->self->_field_elem->_method_equals(_40113_sptr->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e6420856_Sptr &_Src) {
	_Stream << "Sptr{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e6420856_Slc::_method_to_str(void) {
	return jule::Str("[]", 2) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _1e6420856_Slc::_method_equals(jule::Ptr<_1e6420856_TypeKind> _41922_other) {
	jule::Ptr<_1e6420856_Slc> _42013_slc = _41922_other->_method_slc();
	if (_42013_slc == nullptr) {
		return false;
	}
	return this->self->_field_elem->_method_equals(_42013_slc->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e6420856_Slc &_Src) {
	_Stream << "Slc{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e6420856_Tuple::_method_to_str(void) {
	jule::Str _43617_s = jule::Str("(", 1);
	_43617_s+=(*this)._field_types[0LL]->_method_to_str();
	{
		auto expr = (*this)._field_types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_4737585552:;
		if (it != expr.end()) {
			jule::Ptr<_1e6420856_TypeKind> &_1e6420856_t = *it;
			{
				_43617_s+=jule::Str(",", 1);
				_43617_s+=_1e6420856_t->_method_to_str();
			}
			_iter_next_4737585552:;
			++it;
			goto _iter_begin_4737585552;
		}
		_iter_end_4737585552:;
	}
	_43617_s+=jule::Str(")", 1);
	return _43617_s;
}



inline jule::Bool _1e6420856_Tuple::_method_equals(jule::Ptr<_1e6420856_TypeKind> _44722_other) {
	jule::Ptr<_1e6420856_Tuple> _44813_tup = _44722_other->_method_tup();
	if (_44813_tup == nullptr) {
		return false;
	}
	if (this->self->_field_types.len() != _44813_tup->_field_types.len()) {
		return false;
	}
	jule::Int _45717_i = 0LL;
	for (; _45717_i < this->self->_field_types.len(); (_45717_i)++) {
		{
			if ((!(this->self->_field_types[_45717_i]->_method_equals(_44813_tup->_field_types[_45717_i])))) {
				return false;
			}
		}
	_iter_next_4737593520:;
	}
	_iter_end_4737593520:;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e6420856_Tuple &_Src) {
	_Stream << "Tuple{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e6420856_Map::_method_to_str(void) {
	jule::Str _47717_s = jule::Str("[", 1);
	_47717_s+=(*this)._field_key->_method_to_str();
	_47717_s+=jule::Str(":", 1);
	_47717_s+=(*this)._field_val->_method_to_str();
	_47717_s+=jule::Str("]", 1);
	return _47717_s;
}



inline jule::Bool _1e6420856_Map::_method_equals(jule::Ptr<_1e6420856_TypeKind> _48622_other) {
	jule::Ptr<_1e6420856_Map> _48713_map = _48622_other->_method_map();
	if (_48713_map == nullptr) {
		return false;
	}
	return this->self->_field_key->_method_equals(_48713_map->_field_key) && this->self->_field_val->_method_equals(_48713_map->_field_val);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e6420856_Map &_Src) {
	_Stream << "Map{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e6420856_Arr::_method_to_str(void) {
	jule::Str _50517_s = jule::Str("[", 1);
	_50517_s+=_1e3417be7_itoa((*this)._field_n);
	_50517_s+=jule::Str("]", 1);
	_50517_s+=(*this)._field_elem->_method_to_str();
	return _50517_s;
}



inline jule::Bool _1e6420856_Arr::_method_equals(jule::Ptr<_1e6420856_TypeKind> _51322_other) {
	jule::Ptr<_1e6420856_Arr> _51413_arr = _51322_other->_method_arr();
	if (_51413_arr == nullptr) {
		return false;
	}
	return (this->self->_field_n == _51413_arr->_field_n) && this->self->_field_elem->_method_equals(_51413_arr->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e6420856_Arr &_Src) {
	_Stream << "Arr{";
	_Stream << "auto:" << _Src._field_auto << ", ";
	_Stream << "n:" << _Src._field_n << ", ";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e6420856_Ptr::_method_to_str(void) {
	if ((*this)._method_is_unsafe()) {
		return jule::Str("*unsafe", 7);
	}
	return jule::Str("*", 1) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _1e6420856_Ptr::_method_equals(jule::Ptr<_1e6420856_TypeKind> _53722_other) {
	jule::Ptr<_1e6420856_Ptr> _53813_ptr = _53722_other->_method_ptr();
	if (_53813_ptr == nullptr) {
		return false;
	}
	return this->self->_field_elem->_method_equals(_53813_ptr->_field_elem);
}



inline jule::Bool _1e6420856_Ptr::_method_is_unsafe(void) {
	return (*this)._field_elem == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e6420856_Ptr &_Src) {
	_Stream << "Ptr{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e6420856_Referencer &_Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1e359ad25_DirectiveEval::_method_push_err(_1e3bad8dd_Token _2027_t,jule::Str _2037_fmt,jule::Slice<jule::Any> _2050_args) {
	(*this)._field_logs = jule::alloc_for_append((*this)._field_logs,1);(*this)._field_logs.push(_1e24777a2_Log(1LLU,_2027_t._field_row,_2027_t._field_column,_2027_t._field_file->_method_path(),_1e24777a2_logf(_2037_fmt,_2050_args),jule::Str(),jule::Str()));
}



inline jule::Slice<jule::Slice<_1e3bad8dd_Token>> _1e359ad25_DirectiveEval::_method_split_operans(jule::Str _3232_op,jule::Slice<_1e3bad8dd_Token>& _3252_tokens) {
	jule::Slice<jule::Slice<_1e3bad8dd_Token>> _3317_parts = jule::Slice<jule::Slice<_1e3bad8dd_Token>>::alloc(0LL,10LL);
	jule::Int _3517_i = 0LL;
	jule::Int _3617_range_n = 0LL;
	jule::Int _3717_last = 0LL;
	for (; _3517_i < (_3252_tokens.len() - 1LL); (_3517_i)++) {
		{
			_1e3bad8dd_Token _3917_b = _3252_tokens[_3517_i];
			if (_3917_b._field_id == 3LLU) {
				{
					auto &_match_expr{ _3917_b._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4738109088; }
					_case_begin_4738109088:;
					{
						(_3617_range_n)++;
						goto _iter_next_4738104864;
					}
					goto _match_end_4738108800;
					_case_end_4738109088:;
					if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4738109184; }
					_case_begin_4738109184:;
					{
						(_3617_range_n)--;
					}
					goto _match_end_4738108800;
					_case_end_4738109184:;
					_match_end_4738108800:;
				}
			}
			if ((_3617_range_n > 0LL) || (_3917_b._field_id != 7LLU)) {
				goto _iter_next_4738104864;
			}
			if (_3917_b._field_kind == _3232_op) {
				_3317_parts.push(_3252_tokens.slice(_3717_last,_3517_i));
				_3717_last=static_cast<jule::Int>(_3517_i + 1LL);
			}
		}
	_iter_next_4738104864:;
	}
	_iter_end_4738104864:;
	if (_3717_last < _3252_tokens.len()) {
		_3317_parts.push(_3252_tokens.slice(_3717_last));
	} else {
		(*this)._method_push_err(_3252_tokens[_3717_last - 1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _3317_parts;
}



inline jule::Bool _1e359ad25_DirectiveEval::_method_eval_directive_ident(jule::Str _7335_ident) {
	if (_7335_ident == jule::Str()) {
		return false;
	}
	{
		auto &expr = _1e36600a4_FLAGS;
		auto it = expr.begin();
		_iter_begin_4738119984:;
		if (it != expr.end()) {
			jule::Str &_1e359ad25_flag = *it;
			{
				if (_1e359ad25_flag == _7335_ident) {
					return true;
				}
			}
			_iter_next_4738119984:;
			++it;
			goto _iter_begin_4738119984;
		}
		_iter_end_4738119984:;
	}
	return false;
}



inline jule::Bool _1e359ad25_DirectiveEval::_method_eval_directive_part(jule::Slice<_1e3bad8dd_Token> _8942_part) {
	jule::Bool _9013_logical_not = (_8942_part[0LL]._field_id == 7LLU) && (_8942_part[0LL]._field_kind == jule::Str("!", 1));
	if (_9013_logical_not) {
		_8942_part=_8942_part.slice(1LL);
	}
	if (_8942_part.len() > 1LL) {
		(*this)._method_push_err(_8942_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	}
	jule::Bool _10017_result = (*this)._method_eval_directive_ident(_8942_part[0LL]._field_kind);
	if (_9013_logical_not) {
		_10017_result=(!(_10017_result));
	}
	return _10017_result;
}



inline jule::Bool _1e359ad25_DirectiveEval::_method_eval(void) {
	if ((*this)._field_d->_field_args.len() == 0LL) {
		(*this)._method_push_err((*this)._field_d->_field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	}
	jule::Bool _11317_result = false;
	jule::Slice<jule::Slice<_1e3bad8dd_Token>> _11517_logical_or_parts = (*this)._method_split_operans(jule::Str("||", 2),(*this)._field_d->_field_args);
	if (_11517_logical_or_parts == nullptr) {
		return false;
	}
	{
		auto &expr = _11517_logical_or_parts;
		auto it = expr.begin();
		_iter_begin_4738137056:;
		if (it != expr.end()) {
			jule::Slice<_1e3bad8dd_Token> _1e359ad25_part = *it;
			{
				jule::Bool _12121_and = true;
				jule::Slice<jule::Slice<_1e3bad8dd_Token>> _12221_logical_and_parts = (*this)._method_split_operans(jule::Str("&&", 2),_1e359ad25_part);
				if (_12221_logical_and_parts == nullptr) {
					return false;
				}
				{
					auto &expr = _12221_logical_and_parts;
					auto it = expr.begin();
					_iter_begin_4738141328:;
					if (it != expr.end()) {
						jule::Slice<_1e3bad8dd_Token> _1e359ad25_and_part = *it;
						{
							_1e3bad8dd_Token _12821_first = _1e359ad25_and_part[0LL];
							if ((_12821_first._field_id == 3LLU) && (_12821_first._field_kind == jule::Str("(", 1))) {
								_1e3bad8dd_Token _13025_end = _1e359ad25_and_part[_1e359ad25_and_part.len() - 1LL];
								if ((_13025_end._field_id != 3LLU) || (_13025_end._field_kind != jule::Str(")", 1))) {
									(*this)._method_push_err(_12821_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								}
								_1e359ad25_and_part=_1e359ad25_and_part.slice(1LL,_1e359ad25_and_part.len() - 1LL);
							}
							_12121_and=_12121_and && (*this)._method_eval_directive_part(_1e359ad25_and_part);
						}
						_iter_next_4738141328:;
						++it;
						goto _iter_begin_4738141328;
					}
					_iter_end_4738141328:;
				}
				_11317_result=_11317_result || _12121_and;
			}
			_iter_next_4738137056:;
			++it;
			goto _iter_begin_4738137056;
		}
		_iter_end_4738137056:;
	}
	return _11317_result;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e359ad25_DirectiveEval &_Src) {
	_Stream << "DirectiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e4ee54e8_ImportInfo> _1e36c2a1d_PlainImporter::_method_get_import(jule::Str _9633_path) {
	{
		auto &expr = (*this)._field_all_packages;
		auto it = expr.begin();
		_iter_begin_4738154784:;
		if (it != expr.end()) {
			jule::Ptr<_1e4ee54e8_ImportInfo> _1e36c2a1d_p = *it;
			{
				if (_1e36c2a1d_p->_field_path == _9633_path) {
					return _1e36c2a1d_p;
				}
			}
			_iter_next_4738154784:;
			++it;
			goto _iter_begin_4738154784;
		}
		_iter_end_4738154784:;
	}
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1e38d45c0_Ast>>,jule::Slice<_1e24777a2_Log>> _1e36c2a1d_PlainImporter::_method_import_package(jule::Str _10637_path) {
	jule::Slice<jule::Ptr<_1e4789980_DirEntry>> _10714_dirents;
	jule::Str _10723_err_msg;
	std::tie(_10714_dirents,_10723_err_msg) = _1e36c2a1d_read_package_dirents(_10637_path);
	if (_10723_err_msg != jule::Str()) {
		jule::Slice<_1e24777a2_Log> _10921_errors = jule::Slice<_1e24777a2_Log>({_1e36c2a1d_flat_compiler_err(_10723_err_msg)});
		return std::make_tuple(nullptr,_10921_errors);
	}
	jule::Slice<jule::Ptr<_1e38d45c0_Ast>> _11317_asts = jule::Slice<jule::Ptr<_1e38d45c0_Ast>>::alloc(0LL,static_cast<jule::I64>(_10714_dirents.len()));
	{
		auto &expr = _10714_dirents;
		auto it = expr.begin();
		_iter_begin_4738166000:;
		if (it != expr.end()) {
			jule::Ptr<_1e4789980_DirEntry> &_1e36c2a1d_dirent = *it;
			{
				jule::Str _11517__path = _1e2517b61_join(jule::Slice<jule::Str>({_10637_path,_1e36c2a1d_dirent->_field_name}));
				jule::Ptr<_1e3beedd5_File> _11621_file = _1e3beedd5_new_file_set(_11517__path);
				_11621_file->_method_fill(_1e36c2a1d_read_buff(_11621_file->_method_path()));
				jule::Slice<_1e24777a2_Log> _11821_errors = _1e390539e_lex(_11621_file);
				if (_11821_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_11821_errors);
				}
				jule::Ptr<_1e396d626_FileInfo> _12321_finfo = _1e396d626_parse_file(_11621_file);
				if (_12321_finfo->_field_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_12321_finfo->_field_errors);
				}
				if ((!(_1e354de71_is_pass_file_annotation(_1e36c2a1d_dirent->_field_name)))) {
					goto _iter_next_4738166000;
				}
				jule::Bool _13318_r;
				jule::Slice<_1e24777a2_Log> _13325_logs;
				std::tie(_13318_r,_13325_logs) = _1e36c2a1d_is_pass_build_directives(_12321_finfo->_field_ast);
				if (_13325_logs.len() > 0LL) {
					return std::make_tuple(nullptr,_13325_logs);
				}
				if ((!(_13318_r))) {
					goto _iter_next_4738166000;
				}
				_11317_asts.push(_12321_finfo->_field_ast);
			}
			_iter_next_4738166000:;
			++it;
			goto _iter_begin_4738166000;
		}
		_iter_end_4738166000:;
	}
	return std::make_tuple(_11317_asts,nullptr);
}



inline void _1e36c2a1d_PlainImporter::_method_imported(jule::Ptr<_1e4ee54e8_ImportInfo> _14935_imp) {
	{
		auto &expr = (*this)._field_all_packages;
		auto it = expr.begin();
		_iter_begin_4738181872:;
		if (it != expr.end()) {
			jule::Ptr<_1e4ee54e8_ImportInfo> &_1e36c2a1d_p = *it;
			{
				if ((_1e36c2a1d_p->_field_cpp_linked == _14935_imp->_field_cpp_linked) && (_1e36c2a1d_p->_field_link_path == _14935_imp->_field_link_path)) {
					return;
				}
			}
			_iter_next_4738181872:;
			++it;
			goto _iter_begin_4738181872;
		}
		_iter_end_4738181872:;
	}
	(*this)._field_all_packages = jule::alloc_for_append((*this)._field_all_packages,1);(*this)._field_all_packages.push(_14935_imp);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e36c2a1d_PlainImporter &_Src) {
	_Stream << "PlainImporter{";
	_Stream << "all_packages:" << _Src._field_all_packages;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e354d019_OrderedDefines &_Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e354d019_DefineOrderer::_static_method_is_common_ordered_0(jule::Slice<jule::Ptr<_1e50b0492_Var>>& _1837_s,jule::Ptr<_1e50b0492_Var> _1846_t) {
	jule::Ptr<_1e50b0492_Var>* _1917_p = (&(_1846_t->_field_depends[0LL]));
	jule::Ptr<_1e50b0492_Var>* _2013_end = _1917_p + _1846_t->_field_depends.len();
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_4738296992:;
		if (it != expr.end()) {
			jule::Ptr<_1e50b0492_Var> &_1e354d019_tt = *it;
			{
				{
					if (_1e354d019_tt == _1846_t) {
						goto _iter_end_4738296992;
					}
					if (((*(_1917_p))->_field_cpp_linked || ((*(_1917_p))->_field_depends.len() == 0LL)) || (_1e354d019_tt == (*(_1917_p)))) {
						(_1917_p)++;
						if (_1917_p == _2013_end) {
							return true;
						}
					}
				}
			}
			_iter_next_4738296992:;
			++it;
			goto _iter_begin_4738296992;
		}
		_iter_end_4738296992:;
	}
	return false;
}

inline jule::Bool _1e354d019_DefineOrderer::_static_method_is_common_ordered_1(jule::Slice<jule::Ptr<_1e398ee72_Struct>>& _1837_s,jule::Ptr<_1e398ee72_Struct> _1846_t) {
	jule::Ptr<_1e398ee72_Struct>* _1917_p = (&(_1846_t->_field_depends[0LL]));
	jule::Ptr<_1e398ee72_Struct>* _2013_end = _1917_p + _1846_t->_field_depends.len();
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_4738324128:;
		if (it != expr.end()) {
			jule::Ptr<_1e398ee72_Struct> &_1e354d019_tt = *it;
			{
				{
					if (_1e354d019_tt == _1846_t) {
						goto _iter_end_4738324128;
					}
					if (((*(_1917_p))->_field_cpp_linked || ((*(_1917_p))->_field_depends.len() == 0LL)) || (_1e354d019_tt == (*(_1917_p)))) {
						(_1917_p)++;
						if (_1917_p == _2013_end) {
							return true;
						}
					}
				}
			}
			_iter_next_4738324128:;
			++it;
			goto _iter_begin_4738324128;
		}
		_iter_end_4738324128:;
	}
	return false;
}



inline void _1e354d019_DefineOrderer::_static_method_order_common_0(jule::Slice<jule::Ptr<_1e50b0492_Var>>& _3940_s) {
	jule::Int _4017_i = 0LL;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_4738277440:;
		if (it != expr.end()) {
			jule::Int _1e354d019_j = it - expr.begin();
			jule::Ptr<_1e50b0492_Var> _1e354d019_t = *it;
			{
				if (_1e354d019_t->_field_cpp_linked || (_1e354d019_t->_field_depends.len() == 0LL)) {
					std::tie(_3940_s[_4017_i],_3940_s.__at(_1e354d019_j)) = std::make_tuple(_1e354d019_t,_3940_s[_4017_i]);
					(_4017_i)++;
				}
			}
			_iter_next_4738277440:;
			++it;
			_1e354d019_j++;
			goto _iter_begin_4738277440;
		}
		_iter_end_4738277440:;
	}
	jule::Int _4817_j = _4017_i;
	for (; _4817_j < _3940_s.len(); (_4817_j)++) {
		{
			jule::Int _5021_k = _4017_i;
			for (; _5021_k < (_3940_s.len() - 1LL); (_5021_k)++) {
				{
					if ((!(_1e354d019_DefineOrderer::_static_method_is_common_ordered_0(_3940_s,_3940_s[_5021_k])))) {
						std::tie(_3940_s[_5021_k],_3940_s[_5021_k + 1LL]) = std::make_tuple(_3940_s[_5021_k + 1LL],_3940_s[_5021_k]);
					}
				}
			_iter_next_4738282336:;
			}
			_iter_end_4738282336:;
		}
	_iter_next_4738277264:;
	}
	_iter_end_4738277264:;
}

inline void _1e354d019_DefineOrderer::_static_method_order_common_1(jule::Slice<jule::Ptr<_1e398ee72_Struct>>& _3940_s) {
	jule::Int _4017_i = 0LL;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_4738304640:;
		if (it != expr.end()) {
			jule::Int _1e354d019_j = it - expr.begin();
			jule::Ptr<_1e398ee72_Struct> _1e354d019_t = *it;
			{
				if (_1e354d019_t->_field_cpp_linked || (_1e354d019_t->_field_depends.len() == 0LL)) {
					std::tie(_3940_s[_4017_i],_3940_s.__at(_1e354d019_j)) = std::make_tuple(_1e354d019_t,_3940_s[_4017_i]);
					(_4017_i)++;
				}
			}
			_iter_next_4738304640:;
			++it;
			_1e354d019_j++;
			goto _iter_begin_4738304640;
		}
		_iter_end_4738304640:;
	}
	jule::Int _4817_j = _4017_i;
	for (; _4817_j < _3940_s.len(); (_4817_j)++) {
		{
			jule::Int _5021_k = _4017_i;
			for (; _5021_k < (_3940_s.len() - 1LL); (_5021_k)++) {
				{
					if ((!(_1e354d019_DefineOrderer::_static_method_is_common_ordered_1(_3940_s,_3940_s[_5021_k])))) {
						std::tie(_3940_s[_5021_k],_3940_s[_5021_k + 1LL]) = std::make_tuple(_3940_s[_5021_k + 1LL],_3940_s[_5021_k]);
					}
				}
			_iter_next_4738309536:;
			}
			_iter_end_4738309536:;
		}
	_iter_next_4738304464:;
	}
	_iter_end_4738304464:;
}



inline void _1e354d019_DefineOrderer::_static_method_order_variables(jule::Slice<jule::Ptr<_1e50b0492_Var>>& _6140_vars) {
	_1e354d019_DefineOrderer::_static_method_order_common_0(_6140_vars);
}



inline void _1e354d019_DefineOrderer::_static_method_order_structures(jule::Slice<jule::Ptr<_1e398ee72_Struct>>& _6741_structs) {
	_1e354d019_DefineOrderer::_static_method_order_common_1(_6741_structs);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e354d019_DefineOrderer &_Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}



inline void _1e39716e5_ScopeDeadCode::_method_optimize_child(jule::Ptr<_1e4d6ee22_Scope>& _2239_s) {
	jule::Ptr<_1e39716e5_ScopeDeadCode> _2317_sdc = jule::new_struct_ptr<_1e39716e5_ScopeDeadCode>(new( std::nothrow ) _1e39716e5_ScopeDeadCode(this->self,_2239_s,(&(_2239_s->_field_stmts)),jule::Int()));
	{
		_2317_sdc->_method_optimize_stmts();
	}
}



inline void _1e39716e5_ScopeDeadCode::_method_eliminate_followed(void) {
	(*((*this)._field_stmts))=(*((*this)._field_stmts)).slice(0LL,(*this)._field_i + 1LL);
	jule::Ptr<_1e39716e5_ScopeDeadCode> _3317_parent = (*this)._field_parent;
	while (_3317_parent != nullptr) {
		{
			(*(_3317_parent->_field_stmts))=(*(_3317_parent->_field_stmts)).slice(0LL,_3317_parent->_field_i + 1LL);
			_3317_parent=_3317_parent->_field_parent;
		}
	_iter_next_4738493840:;
	}
	_iter_end_4738493840:;
}



inline void _1e39716e5_ScopeDeadCode::_method_optimize_stmt(jule::Any _4044_st) {
	{
		auto &_match_expr{ _4044_st };
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_Scope>>())) { goto _case_end_4738500128; }
		_case_begin_4738500128:;
		{
			jule::Ptr<_1e4d6ee22_Scope> _4321_scope = _4044_st.operator jule::Ptr<_1e4d6ee22_Scope>();
			if (_4321_scope->_field_deferred) {
				_1e39716e5_eliminate_dead_code_of_scope(_4321_scope);
			} else {
				this->self->_method_optimize_child(_4321_scope);
			}
		}
		goto _match_end_4738500368;
		_case_end_4738500128:;
		if (!(_match_expr.type_is<jule::Ptr<_1e50ac4b1_Data>>())) { goto _case_end_4738500448; }
		_case_begin_4738500448:;
		{
			{
				auto &_match_expr{ _4044_st.operator jule::Ptr<_1e50ac4b1_Data>()->_field_model };
				if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_BuiltinPanicCallExprModel>>())) { goto _case_end_4738503424; }
				_case_begin_4738503424:;
				{
					this->self->_method_eliminate_followed();
				}
				goto _match_end_4738506352;
				_case_end_4738503424:;
				_match_end_4738506352:;
			}
		}
		goto _match_end_4738500368;
		_case_end_4738500448:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_RetSt>>())) { goto _case_end_4738500560; }
		_case_begin_4738500560:;
		{
			this->self->_method_eliminate_followed();
		}
		goto _match_end_4738500368;
		_case_end_4738500560:;
		_match_end_4738500368:;
	}
}



inline void _1e39716e5_ScopeDeadCode::_method_optimize_stmts(void) {
	this->self->_field_i=0LL;
	for (; this->self->_field_i < this->self->_field_stmts->len(); (this->self->_field_i)++) {
		{
			this->self->_method_optimize_stmt((*(this->self->_field_stmts))[this->self->_field_i]);
		}
	_iter_next_4738509008:;
	}
	_iter_end_4738509008:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e39716e5_ScopeDeadCode &_Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1c9110233_AbsTime::_method_unix(void) {
	jule::Bool _5417_leap = false;
	jule::Uint _5517_y = (*this)._field_year - 1900LL;
	jule::Uint _5617_m = (*this)._field_month - 1LL;
	if ((_5617_m >= 12LL) || (_5617_m < 0LL)) {
		jule::Uint _5821_adj = jule::unsafe_div(_5617_m,12LL);
		_5617_m = jule::unsafe_mod(_5617_m,12LL);
		if (_5617_m < 0LL) {
			(_5821_adj)--;
			_5617_m+=12LL;
		}
		_5517_y+=_5821_adj;
	}
	jule::U64 _6617_t = _1c9110233_unix_year_to_seconds(_5517_y,_5417_leap);
	_6617_t+=static_cast<jule::U64>(_1c9110233_unix_month_to_seconds(_5617_m,_5417_leap));
	_6617_t+=static_cast<jule::Uint>(86400LL * ((*this)._field_day - 1LL));
	_6617_t+=static_cast<jule::Uint>(3600LL * (*this)._field_hour);
	_6617_t+=static_cast<jule::Uint>(60LL * (*this)._field_minute);
	_6617_t+=(*this)._field_second;
	return _6617_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c9110233_AbsTime &_Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



inline _1c9110233_Time _1c9110233_Time::_static_method_unix(jule::U64 _8924_sec) {
	return _1c9110233_Time(_8924_sec);
}



inline _1c9110233_Time _1c9110233_Time::_static_method_now(void) {
	return _1c9110233_Time::_static_method_unix(static_cast<jule::U64>(_1c9110233_unix()));
}



inline jule::U64 _1c9110233_Time::_method_unix(void) {
	return (*this)._field_sec;
}



inline jule::Uint _1c9110233_Time::_method_day(void) {
	return (*this)._method_abs()._field_day;
}



inline jule::Uint _1c9110233_Time::_method_month(void) {
	return (*this)._method_abs()._field_month;
}



inline jule::Uint _1c9110233_Time::_method_year(void) {
	return (*this)._method_abs()._field_year;
}



inline jule::Uint _1c9110233_Time::_method_second(void) {
	return (*this)._method_abs()._field_second;
}



inline jule::Uint _1c9110233_Time::_method_minute(void) {
	return (*this)._method_abs()._field_minute;
}



inline jule::Uint _1c9110233_Time::_method_hour(void) {
	return (*this)._method_abs()._field_hour;
}



inline _1c9110233_AbsTime _1c9110233_Time::_method_abs(void) {
	jule::U64 _12513_secs = (*this)._field_sec - 951868800LL;
	jule::U64 _12617_days = jule::unsafe_div(_12513_secs,86400LL);
	jule::U64 _12717_rem_secs = jule::unsafe_mod(_12513_secs,86400LL);
	if (_12717_rem_secs < 0LL) {
		_12717_rem_secs+=86400LL;
		(_12617_days)--;
	}
	jule::U64 _13317_qc_cycles = jule::unsafe_div(_12617_days,146097LL);
	jule::U64 _13417_rem_days = jule::unsafe_mod(_12617_days,146097LL);
	if (_13417_rem_days < 0LL) {
		_13417_rem_days+=146097LL;
		(_13317_qc_cycles)--;
	}
	jule::U64 _14017_c_cycles = jule::unsafe_div(_13417_rem_days,36524LL);
	if (_14017_c_cycles == 4LL) {
		(_14017_c_cycles)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_14017_c_cycles * 36524LL);
	jule::U64 _14617_q_cycles = jule::unsafe_div(_13417_rem_days,1461LL);
	if (_14617_q_cycles == 25LL) {
		(_14617_q_cycles)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_14617_q_cycles * 1461LL);
	jule::U64 _15217_rem_years = jule::unsafe_div(_13417_rem_days,365LL);
	if (_15217_rem_years == 4LL) {
		(_15217_rem_years)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_15217_rem_years * 365LL);
	jule::Int _15813_leap = ((((_15217_rem_years == 0LL) && ((_14617_q_cycles > 0LL) || (_14017_c_cycles == 0LL)))) ? (1LL) : (0LL));
	jule::U64 _15917_y_day = ((_13417_rem_days + 31LL) + 28LL) + _15813_leap;
	if (_15917_y_day >= (365LL + _15813_leap)) {
		_15917_y_day-=static_cast<jule::Int>(365LL + _15813_leap);
	}
	jule::Int _16417_months = 0LL;
	for (; _1c9110233_MDAYS[_16417_months] <= _13417_rem_days; (_16417_months)++) {
		{
			_13417_rem_days-=_1c9110233_MDAYS[_16417_months];
		}
	_iter_next_4728889104:;
	}
	_iter_end_4728889104:;
	_1c9110233_AbsTime _16917_t = _1c9110233_AbsTime();
	_16917_t._field_year=static_cast<jule::U64>((((_15217_rem_years + (4LL * _14617_q_cycles)) + (100LL * _14017_c_cycles)) + (400LL * _13317_qc_cycles)) + 100LL);
	_16917_t._field_month=static_cast<jule::Uint>(_16417_months + 2LL);
	if (_16917_t._field_month >= 12LL) {
		_16917_t._field_month-=12LL;
		(_16917_t._field_year)++;
	}
	_16917_t._field_month+=1LL;
	_16917_t._field_year+=1900LL;
	_16917_t._field_day=static_cast<jule::U64>(_13417_rem_days + 1LL);
	_16917_t._field_week_day=static_cast<jule::U64>(jule::unsafe_mod(3LL + _12617_days,7LL));
	if (_16917_t._field_week_day < 0LL) {
		_16917_t._field_week_day+=7LL;
	}
	_16917_t._field_year_day=_15917_y_day;
	_16917_t._field_hour=static_cast<jule::U64>(jule::unsafe_div(_12717_rem_secs,3600LL));
	_16917_t._field_minute=static_cast<jule::U64>(jule::unsafe_mod(jule::unsafe_div(_12717_rem_secs,60LL),60LL));
	_16917_t._field_second=static_cast<jule::U64>(jule::unsafe_mod(_12717_rem_secs,60LL));
	return _16917_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c9110233_Time &_Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::I64 _1c9110233_Duration::_static_method_nanoseconds(jule::I64 _22231_d) {
	return static_cast<jule::I64>(_22231_d * 1LL);
}



inline jule::I64 _1c9110233_Duration::_static_method_microseconds(jule::I64 _22732_d) {
	return static_cast<jule::I64>(_22732_d * 1000LL);
}



inline jule::I64 _1c9110233_Duration::_static_method_milliseconds(jule::I64 _23232_d) {
	return static_cast<jule::I64>(_23232_d * 1000000LL);
}



inline jule::I64 _1c9110233_Duration::_static_method_seconds(jule::I64 _23727_d) {
	return static_cast<jule::I64>(_23727_d * 1000000000LL);
}



inline jule::I64 _1c9110233_Duration::_static_method_minutes(jule::I64 _24227_d) {
	return static_cast<jule::I64>(_24227_d * 60000000000LL);
}



inline jule::I64 _1c9110233_Duration::_static_method_hours(jule::I64 _24725_d) {
	return static_cast<jule::I64>(_24725_d * 3600000000000LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _1c9110233_Duration &_Src) {
	_Stream << "Duration{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e249dae7_Flag_0::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _1e249dae7_Flag_0::_method_what(void) {
	return (*this)._field__what;
}



inline void _1e249dae7_Flag_0::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _1e249dae7_Flag_0::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e249dae7_Flag_0 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1e249dae7_Flag_1::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _1e249dae7_Flag_1::_method_what(void) {
	return (*this)._field__what;
}



inline void _1e249dae7_Flag_1::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _1e249dae7_Flag_1::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e249dae7_Flag_1 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1e249dae7_Flag_2::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _1e249dae7_Flag_2::_method_what(void) {
	return (*this)._field__what;
}



inline void _1e249dae7_Flag_2::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _1e249dae7_Flag_2::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e249dae7_Flag_2 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1e249dae7_Flag_3::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _1e249dae7_Flag_3::_method_what(void) {
	return (*this)._field__what;
}



inline void _1e249dae7_Flag_3::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _1e249dae7_Flag_3::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e249dae7_Flag_3 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1e249dae7_Flag_4::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _1e249dae7_Flag_4::_method_what(void) {
	return (*this)._field__what;
}



inline void _1e249dae7_Flag_4::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _1e249dae7_Flag_4::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e249dae7_Flag_4 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e249dae7_FlagSet> _1e249dae7_FlagSet::_static_method_new(void) {
	return jule::new_struct<_1e249dae7_FlagSet>(new( std::nothrow ) _1e249dae7_FlagSet(jule::Slice<jule::Trait<_1e249dae7_CommonFlag>>::alloc(0LL,20LL),jule::Slice<jule::Str>()));
}



inline jule::Trait<_1e249dae7_CommonFlag> _1e249dae7_FlagSet::_method_find_flag(jule::Str _6732_name) {
	{
		auto &expr = (*this)._field__flags;
		auto it = expr.begin();
		_iter_begin_4740935952:;
		if (it != expr.end()) {
			jule::Trait<_1e249dae7_CommonFlag> _1e249dae7_flag = *it;
			{
				if (_1e249dae7_flag.get()._method_name() == _6732_name) {
					return _1e249dae7_flag;
				}
			}
			_iter_next_4740935952:;
			++it;
			goto _iter_begin_4740935952;
		}
		_iter_end_4740935952:;
	}
	return nullptr;
}



inline jule::Trait<_1e249dae7_CommonFlag> _1e249dae7_FlagSet::_method_find_flag_short(jule::I32 _7738_name) {
	{
		auto &expr = (*this)._field__flags;
		auto it = expr.begin();
		_iter_begin_4740940848:;
		if (it != expr.end()) {
			jule::Trait<_1e249dae7_CommonFlag> _1e249dae7_flag = *it;
			{
				if (_1e249dae7_flag.get()._method_short() == _7738_name) {
					return _1e249dae7_flag;
				}
			}
			_iter_next_4740940848:;
			++it;
			goto _iter_begin_4740940848;
		}
		_iter_end_4740940848:;
	}
	return nullptr;
}



inline jule::Slice<jule::Trait<_1e249dae7_CommonFlag>> _1e249dae7_FlagSet::_method_flags(void) {
	return (*this)._field__flags;
}



inline std::tuple<jule::Slice<jule::Str>,jule::Str> _1e249dae7_FlagSet::_method_parse(jule::Slice<jule::Str> _11128_args) {
	jule::Slice<jule::Str> _11143_content = jule::Slice<jule::Str>();
	jule::Str _11159_error = jule::Str();
	_1e249dae7_ArgParser _11217_ap = _1e249dae7_ArgParser((*this),_11128_args,jule::Str(),jule::Slice<jule::Str>(),jule::Int());
	_11217_ap._method_parse();
	_11143_content = _11217_ap._field_content;
	_11159_error = _11217_ap._field_error;
	return std::make_tuple(_11143_content,_11159_error);
}



inline void _1e249dae7_FlagSet::_method_reset(void) {
	{
		auto &expr = (*this)._field__flags;
		auto it = expr.begin();
		_iter_begin_4740958848:;
		if (it != expr.end()) {
			jule::Trait<_1e249dae7_CommonFlag> &_1e249dae7_f = *it;
			{
				_1e249dae7_f.get()._method_reset();
			}
			_iter_next_4740958848:;
			++it;
			goto _iter_begin_4740958848;
		}
		_iter_end_4740958848:;
	}
}



inline jule::Ptr<_1e249dae7_Flag_3> _1e249dae7_FlagSet::_method_add_flag_common_0(jule::Str _12741_name,jule::I32 _12752_short,jule::Str _12765_what) {
	
	if ((*this)._method_find_flag(_12741_name) != nullptr) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _12741_name);
	}
	if ((_12752_short != 0LL) && ((*this)._method_find_flag_short(_12752_short) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_12752_short));
	}
	jule::Ptr<_1e249dae7_Flag_3> _14417_flag = jule::new_struct<_1e249dae7_Flag_3>(new( std::nothrow ) _1e249dae7_Flag_3(_12741_name,_12752_short,jule::Bool(),_12765_what,jule::Ptr<jule::Bool>()));
	(*this)._field__flags = jule::alloc_for_append((*this)._field__flags,1);(*this)._field__flags.push(_14417_flag);
	return _14417_flag;
}

inline jule::Ptr<_1e249dae7_Flag_4> _1e249dae7_FlagSet::_method_add_flag_common_1(jule::Str _12741_name,jule::I32 _12752_short,jule::Str _12765_what) {
	
	if ((*this)._method_find_flag(_12741_name) != nullptr) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _12741_name);
	}
	if ((_12752_short != 0LL) && ((*this)._method_find_flag_short(_12752_short) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_12752_short));
	}
	jule::Ptr<_1e249dae7_Flag_4> _14417_flag = jule::new_struct<_1e249dae7_Flag_4>(new( std::nothrow ) _1e249dae7_Flag_4(_12741_name,_12752_short,jule::Str(),_12765_what,jule::Ptr<jule::Str>()));
	(*this)._field__flags = jule::alloc_for_append((*this)._field__flags,1);(*this)._field__flags.push(_14417_flag);
	return _14417_flag;
}





inline void _1e249dae7_FlagSet::_method_add_var_0(jule::Ptr<jule::Bool> _17137_var,jule::Str _17146_name,jule::I32 _17157_short,jule::Str _17170_what) {
	jule::Ptr<_1e249dae7_Flag_3> _17217_flag = (*this)._method_add_flag_common_0(_17146_name,_17157_short,_17170_what);
	_17217_flag->_field__default=(*(_17137_var));
	_17217_flag->_field__data=_17137_var;
}

inline void _1e249dae7_FlagSet::_method_add_var_1(jule::Ptr<jule::Str> _17137_var,jule::Str _17146_name,jule::I32 _17157_short,jule::Str _17170_what) {
	jule::Ptr<_1e249dae7_Flag_4> _17217_flag = (*this)._method_add_flag_common_1(_17146_name,_17157_short,_17170_what);
	_17217_flag->_field__default=(*(_17137_var));
	_17217_flag->_field__data=_17137_var;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e249dae7_FlagSet &_Src) {
	_Stream << "FlagSet{";
	_Stream << "_flags:" << _Src._field__flags << ", ";
	_Stream << "_errors:" << _Src._field__errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_UseDecl &_Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e38d4ec7_EnumItemDecl::_method_auto_expr(void) {
	return (*this)._field_expr == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_EnumItemDecl &_Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e38d4ec7_EnumDecl::_method_default_typed(void) {
	return (*this)._field_kind == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_EnumDecl &_Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_FieldDecl &_Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_StructDecl &_Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_TraitDecl &_Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e38d4ec7_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



inline jule::Bool _1e38d4ec7_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e38d4ec7_Expr::_method_is_fn_call(void) {
	if ((*this)._field_kind == nullptr) {
		return false;
	}
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_FnCallExpr>>())) { goto _case_end_4726485824; }
		_case_begin_4726485824:;
		{
			return true;
		}
		goto _match_end_4726484272;
		_case_end_4726485824:;
		_case_begin_4726484512:;
		{
			return false;
		}
		goto _match_end_4726484272;
		_case_end_4726484512:;
		_match_end_4726484272:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_Expr &_Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_TypeDecl &_Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e38d4ec7_LitExpr::_method_is_nil(void) {
	return (*this)._field_value == jule::Str("nil", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_LitExpr &_Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_UnsafeExpr &_Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e38d4ec7_IdentExpr::_method_is_self(void) {
	return (*this)._field_ident == jule::Str("self", 4);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_IdentExpr &_Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_UnaryExpr &_Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_VariadicExpr &_Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e3ca4682_AssignInfo &_Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e38d4ec7_IdentTypeDecl::_method_is_prim(void) {
	return (*this)._field_token._field_id == 1LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_IdentTypeDecl &_Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_NsSelectionExpr &_Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_SubIdentExpr &_Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e398ee72_FieldIns> _1e398ee72_Field::_method_instance(void) {
	return jule::new_struct<_1e398ee72_FieldIns>(new( std::nothrow ) _1e398ee72_FieldIns(this->self,this->self->_field_kind->_field_kind));
}







std::ostream &operator<<(std::ostream &_Stream, const _1e398ee72_Field &_Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e398ee72_StructIns> _1e398ee72_Struct::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[0LL];
	}
	jule::Ptr<_1e398ee72_StructIns> _6717_ins = jule::new_struct_ptr<_1e398ee72_StructIns>(new( std::nothrow ) _1e398ee72_StructIns(jule::Bool(),this->self,jule::Slice<jule::Ptr<_1e6420856_TypeKind>>(),jule::Slice<jule::Ptr<_1e398ee72_FieldIns>>::alloc(0LL,static_cast<jule::I64>(this->self->_field_fields.len())),jule::Slice<jule::Ptr<_1e4b15a20_Fn>>::alloc(0LL,static_cast<jule::I64>(this->self->_field_methods.len())),jule::Bool(),_1e4cc167b_ReferenceStack::_static_method_new()));
	{
		auto &expr = this->self->_field_fields;
		auto it = expr.begin();
		_iter_begin_4731168928:;
		if (it != expr.end()) {
			jule::Ptr<_1e398ee72_Field> _1e398ee72_f = *it;
			{
				_6717_ins->_field_fields = jule::alloc_for_append(_6717_ins->_field_fields,1);_6717_ins->_field_fields.push(_1e398ee72_f->_method_instance());
				if ((_1e398ee72_f->_field_kind->_field_kind != nullptr) && _1e398ee72_f->_field_kind->_field_kind->_method_mutable()) {
					_6717_ins->_field_mutable=true;
				}
			}
			_iter_next_4731168928:;
			++it;
			goto _iter_begin_4731168928;
		}
		_iter_end_4731168928:;
	}
	{
		auto &expr = this->self->_field_methods;
		auto it = expr.begin();
		_iter_begin_4731169680:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_Fn> _1e398ee72_f = *it;
			{
				jule::Ptr<_1e4b15a20_Fn> _8221_fins = jule::new_struct_ptr<_1e4b15a20_Fn>(new( std::nothrow ) _1e4b15a20_Fn(_1e398ee72_f->_field_sema,_1e398ee72_f->_field_token,_1e398ee72_f->_field_global,_1e398ee72_f->_field_unsafety,_1e398ee72_f->_field_public,_1e398ee72_f->_field_cpp_linked,_1e398ee72_f->_field_statically,_1e398ee72_f->_field_ident,_1e398ee72_f->_field_directives,_1e398ee72_f->_field_doc,_1e398ee72_f->_field_scope,_1e398ee72_f->_field_generics,_1e398ee72_f->_field_result,_1e398ee72_f->_field_params,_1e398ee72_f->_field_owner,nullptr));
				_6717_ins->_field_methods = jule::alloc_for_append(_6717_ins->_field_methods,1);_6717_ins->_field_methods.push(_8221_fins);
			}
			_iter_next_4731169680:;
			++it;
			goto _iter_begin_4731169680;
		}
		_iter_end_4731169680:;
	}
	return _6717_ins;
}



inline jule::Ptr<_1e398ee72_StructIns> _1e398ee72_Struct::_method_append_instance(jule::Ptr<_1e398ee72_StructIns>& _10839_ins) {
	if (((*this)._field_generics.len() == 0LL) && ((*this)._field_instances.len() == 1LL)) {
		return (*this)._field_instances[0LL];
	}
	{
		auto &expr = (*this)._field_instances;
		auto it = expr.begin();
		_iter_begin_4731198464:;
		if (it != expr.end()) {
			jule::Ptr<_1e398ee72_StructIns> _1e398ee72_ains = *it;
			{
				if (_1e398ee72_ains->_method_same(_10839_ins)) {
					return _1e398ee72_ains;
				}
			}
			_iter_next_4731198464:;
			++it;
			goto _iter_begin_4731198464;
		}
		_iter_end_4731198464:;
	}
	(*this)._field_instances = jule::alloc_for_append((*this)._field_instances,1);(*this)._field_instances.push(_10839_ins);
	return nullptr;
}



inline jule::Ptr<_1e4b15a20_Fn> _1e398ee72_Struct::_method_find_method(jule::Str _12634_ident,jule::Bool _12646_statically) {
	{
		auto &expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_4731209760:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_Fn> _1e398ee72_f = *it;
			{
				if ((_1e398ee72_f->_field_statically == _12646_statically) && (_1e398ee72_f->_field_ident == _12634_ident)) {
					return _1e398ee72_f;
				}
			}
			_iter_next_4731209760:;
			++it;
			goto _iter_begin_4731209760;
		}
		_iter_end_4731209760:;
	}
	return nullptr;
}



inline jule::Ptr<_1e50b0492_Var> _1e398ee72_Struct::_method_find_static(jule::Str _13734_ident) {
	{
		auto &expr = (*this)._field_statics;
		auto it = expr.begin();
		_iter_begin_4731214544:;
		if (it != expr.end()) {
			jule::Ptr<_1e50b0492_Var> _1e398ee72_v = *it;
			{
				if (_1e398ee72_v->_field_ident == _13734_ident) {
					return _1e398ee72_v;
				}
			}
			_iter_next_4731214544:;
			++it;
			goto _iter_begin_4731214544;
		}
		_iter_end_4731214544:;
	}
	return nullptr;
}



inline jule::Ptr<_1e398ee72_Field> _1e398ee72_Struct::_method_find_field(jule::Str _14833_ident) {
	{
		auto &expr = (*this)._field_fields;
		auto it = expr.begin();
		_iter_begin_4731218896:;
		if (it != expr.end()) {
			jule::Ptr<_1e398ee72_Field> _1e398ee72_f = *it;
			{
				if (_1e398ee72_f->_field_ident == _14833_ident) {
					return _1e398ee72_f;
				}
			}
			_iter_next_4731218896:;
			++it;
			goto _iter_begin_4731218896;
		}
		_iter_end_4731218896:;
	}
	return nullptr;
}



inline jule::Bool _1e398ee72_Struct::_method_is_implements(jule::Ptr<_1e4d61232_Trait> _15832_t) {
	{
		auto &expr = (*this)._field_implements;
		auto it = expr.begin();
		_iter_begin_4731219840:;
		if (it != expr.end()) {
			jule::Ptr<_1e4d61232_Trait> &_1e398ee72_it = *it;
			{
				if (_15832_t == _1e398ee72_it) {
					return true;
				}
			}
			_iter_next_4731219840:;
			++it;
			goto _iter_begin_4731219840;
		}
		_iter_end_4731219840:;
	}
	return false;
}



inline jule::Bool _1e398ee72_Struct::_method_is_derives(jule::Str _16829_ident) {
	{
		auto &expr = (*this)._field_directives;
		auto it = expr.begin();
		_iter_begin_4731225296:;
		if (it != expr.end()) {
			jule::Ptr<_1e38d4ec7_Directive> &_1e398ee72_d = *it;
			{
				if (_1e398ee72_d->_field_tag._field_kind == jule::Str("derive", 6)) {
					if ((_1e398ee72_d->_field_args.len() == 1LL) && (_1e398ee72_d->_field_args[0LL]._field_kind == _16829_ident)) {
						return true;
					}
				}
			}
			_iter_next_4731225296:;
			++it;
			goto _iter_begin_4731225296;
		}
		_iter_end_4731225296:;
	}
	return false;
}



inline jule::Bool _1e398ee72_Struct::_method_is_uses(jule::Ptr<_1e398ee72_Struct> _18026_s) {
	{
		auto &expr = (*this)._field_uses;
		auto it = expr.begin();
		_iter_begin_4731232112:;
		if (it != expr.end()) {
			jule::Ptr<_1e398ee72_Struct> &_1e398ee72_u = *it;
			{
				while (_18026_s == _1e398ee72_u) {
					{
						return true;
					}
				_iter_next_4731233264:;
				}
				_iter_end_4731233264:;
			}
			_iter_next_4731232112:;
			++it;
			goto _iter_begin_4731232112;
		}
		_iter_end_4731232112:;
	}
	return false;
}



inline jule::Bool _1e398ee72_Struct::_method_has_ref_accessible(void) {
	{
		auto &expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_4731235232:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_Fn> &_1e398ee72_m = *it;
			{
				if ((_1e398ee72_m->_field_params.len() > 0LL) && _1e398ee72_m->_field_params[0LL]->_method_is_ref()) {
					return true;
				}
			}
			_iter_next_4731235232:;
			++it;
			goto _iter_begin_4731235232;
		}
		_iter_end_4731235232:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e398ee72_Struct &_Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_BinopExpr &_Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_FnCallExpr &_Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "concurrent:" << _Src._field_concurrent;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e38d4ec7_FieldExprPair::_method_is_targeted(void) {
	return (*this)._field_field._field_id != 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_FieldExprPair &_Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e4b15a20_ParamIns> _1e4b15a20_Param::_method_instance(void) {
	return jule::new_struct<_1e4b15a20_ParamIns>(new( std::nothrow ) _1e4b15a20_ParamIns(this->self,jule::Ptr<_1e6420856_TypeKind>()));
}



inline jule::Bool _1e4b15a20_Param::_method_is_self(void) {
	return ((*this)._field_ident == jule::Str("&self", 5)) || ((*this)._field_ident == jule::Str("self", 4));
}



inline jule::Bool _1e4b15a20_Param::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str()) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4b15a20_Param &_Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e4b15a20_Fn::_method_is_void(void) {
	return (*this)._field_result == nullptr;
}



inline jule::Bool _1e4b15a20_Fn::_method_is_method(void) {
	return (*this)._field_owner != nullptr;
}



inline jule::Bool _1e4b15a20_Fn::_method_is_entry_point(void) {
	return (*this)._field_ident == jule::Str("main", 4);
}



inline jule::Bool _1e4b15a20_Fn::_method_is_init(void) {
	return (*this)._field_ident == jule::Str("init", 4);
}



inline jule::Bool _1e4b15a20_Fn::_method_is_anon(void) {
	return _1e3bad8dd_is_anon_ident((*this)._field_ident);
}



inline jule::Bool _1e4b15a20_Fn::_method_any_var(void) {
	return ((*this)._field_result != nullptr) && ((*this)._field_result->_field_idents.len() > 0LL);
}



inline jule::Bool _1e4b15a20_Fn::_method_parameters_uses_generics(void) {
	if ((*this)._field_generics.len() == 0LL) {
		return false;
	}
	{
		auto &expr = (*this)._field_params;
		auto it = expr.begin();
		_iter_begin_4731293808:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_Param> &_1e4b15a20_p = *it;
			{
				if (_1e4b15a20_parameter_uses_generics(_1e4b15a20_p,(*this)._field_generics)) {
					return true;
				}
			}
			_iter_next_4731293808:;
			++it;
			goto _iter_begin_4731293808;
		}
		_iter_end_4731293808:;
	}
	return false;
}



inline jule::Bool _1e4b15a20_Fn::_method_result_uses_generics(void) {
	if ((*this)._method_is_void()) {
		return false;
	} else if (((*this)._field_result->_field_kind == nullptr) || ((*this)._field_result->_field_kind->_field_kind == nullptr)) {
		return false;
	}
	return _1e4b15a20_kind_uses_generics((*this)._field_result->_field_kind->_field_kind,(*this)._field_generics);
}



inline jule::Ptr<_1e4b15a20_FnIns> _1e4b15a20_Fn::_method_instance_force(void) {
	jule::Ptr<_1e4b15a20_FnIns> _11017_ins = jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns(jule::Ptr<_1e398ee72_StructIns>(),this->self,jule::Slice<jule::Ptr<_1e6420856_TypeKind>>(),jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>(),jule::Ptr<_1e6420856_TypeKind>(),jule::new_struct<_1e4d6ee22_Scope>(new( std::nothrow ) _1e4d6ee22_Scope()),_1e4cc167b_ReferenceStack::_static_method_new(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(),jule::Bool(),jule::Bool()));
	if (this->self->_method_is_init()) {
		_11017_ins->_field_refers=_1e4cc167b_ReferenceStack::_static_method_new();
	}
	_11017_ins->_field_params=jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>::alloc(0LL,static_cast<jule::I64>(this->self->_field_params.len()));
	{
		auto &expr = this->self->_field_params;
		auto it = expr.begin();
		_iter_begin_4731305408:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_Param> _1e4b15a20_p = *it;
			{
				_11017_ins->_field_params = jule::alloc_for_append(_11017_ins->_field_params,1);_11017_ins->_field_params.push(_1e4b15a20_p->_method_instance());
			}
			_iter_next_4731305408:;
			++it;
			goto _iter_begin_4731305408;
		}
		_iter_end_4731305408:;
	}
	if (_11017_ins->_field_decl->_field_result != nullptr) {
		_11017_ins->_field_result=_11017_ins->_field_decl->_field_result->_field_kind->_field_kind;
	}
	return _11017_ins;
}



inline jule::Ptr<_1e4b15a20_FnIns> _1e4b15a20_Fn::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[0LL];
	}
	return this->self->_method_instance_force();
}



inline std::tuple<jule::Bool,jule::Int> _1e4b15a20_Fn::_method_append_instance(jule::Ptr<_1e4b15a20_FnIns>& _14139_ins) {
	if ((*this)._field_generics.len() == 0LL) {
		if ((*this)._field_instances.len() == 1LL) {
			return std::make_tuple(false,0LL);
		}
		(*this)._field_instances = jule::alloc_for_append((*this)._field_instances,1);(*this)._field_instances.push(_14139_ins);
		return std::make_tuple(true,-1LL);
	}
	if ((*this)._field_instances.len() == 0LL) {
		(*this)._field_instances = jule::alloc_for_append((*this)._field_instances,1);(*this)._field_instances.push(_14139_ins);
		return std::make_tuple(true,-1LL);
	}
	{
		auto &expr = (*this)._field_instances;
		auto it = expr.begin();
		_iter_begin_4731321728:;
		if (it != expr.end()) {
			jule::Int _1e4b15a20_j = it - expr.begin();
			jule::Ptr<_1e4b15a20_FnIns> &_1e4b15a20_ains = *it;
			{
				if (_1e4b15a20_ains->_method_same(_14139_ins)) {
					return std::make_tuple(false,_1e4b15a20_j);
				}
			}
			_iter_next_4731321728:;
			++it;
			_1e4b15a20_j++;
			goto _iter_begin_4731321728;
		}
		_iter_end_4731321728:;
	}
	(*this)._field_instances = jule::alloc_for_append((*this)._field_instances,1);(*this)._field_instances.push(_14139_ins);
	return std::make_tuple(true,-1LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4b15a20_Fn &_Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e38d4ec7_Node::_method_is_decl(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_EnumDecl>>() || _match_expr.type_is<jule::Ptr<_1e38d4ec7_FnDecl>>() || _match_expr.type_is<jule::Ptr<_1e38d4ec7_StructDecl>>() || _match_expr.type_is<jule::Ptr<_1e38d4ec7_TraitDecl>>() || _match_expr.type_is<jule::Ptr<_1e38d4ec7_TypeAliasDecl>>() || _match_expr.type_is<jule::Ptr<_1e38d4ec7_FieldDecl>>() || _match_expr.type_is<jule::Ptr<_1e38d4ec7_UseDecl>>() || _match_expr.type_is<jule::Ptr<_1e38d4ec7_VarDecl>>() || _match_expr.type_is<jule::Ptr<_1e38d4ec7_TypeDecl>>())) { goto _case_end_4726447216; }
		_case_begin_4726447216:;
		{
			return true;
		}
		goto _match_end_4726445648;
		_case_end_4726447216:;
		_case_begin_4726445136:;
		{
			return false;
		}
		goto _match_end_4726445648;
		_case_end_4726445136:;
		_match_end_4726445648:;
	}
}



inline jule::Bool _1e38d4ec7_Node::_method_is_comment(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_Comment>>() || _match_expr.type_is<jule::Ptr<_1e38d4ec7_CommentGroup>>())) { goto _case_end_4726462272; }
		_case_begin_4726462272:;
		{
			return true;
		}
		goto _match_end_4726460704;
		_case_end_4726462272:;
		_case_begin_4726460192:;
		{
			return false;
		}
		goto _match_end_4726460704;
		_case_end_4726460192:;
		_match_end_4726460704:;
	}
}



inline jule::Bool _1e38d4ec7_Node::_method_is_directive(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_Directive>>())) { goto _case_end_4726465664; }
		_case_begin_4726465664:;
		{
			return true;
		}
		goto _match_end_4726464096;
		_case_end_4726465664:;
		_case_begin_4726463584:;
		{
			return false;
		}
		goto _match_end_4726464096;
		_case_end_4726463584:;
		_match_end_4726464096:;
	}
}



inline jule::Bool _1e38d4ec7_Node::_method_is_impl(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_Impl>>())) { goto _case_end_4726468768; }
		_case_begin_4726468768:;
		{
			return true;
		}
		goto _match_end_4726467200;
		_case_end_4726468768:;
		_case_begin_4726466688:;
		{
			return false;
		}
		goto _match_end_4726467200;
		_case_end_4726466688:;
		_match_end_4726467200:;
	}
}



inline jule::Bool _1e38d4ec7_Node::_method_is_use_decl(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_UseDecl>>())) { goto _case_end_4726471872; }
		_case_begin_4726471872:;
		{
			return true;
		}
		goto _match_end_4726470304;
		_case_end_4726471872:;
		_case_begin_4726469792:;
		{
			return false;
		}
		goto _match_end_4726470304;
		_case_end_4726469792:;
		_match_end_4726470304:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_Node &_Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e38d4ec7_BraceLit::_method_is_empty(void) {
	return (*this)._field_exprs.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_BraceLit &_Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_KeyValPair &_Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4cc167b_Pass &_Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e38d4ec7_SliceExpr::_method_is_empty(void) {
	return (*this)._field_elems.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_SliceExpr &_Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e4d61232_Trait::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _1e4d61232_Trait::_method_equals(jule::Ptr<_1e6420856_TypeKind> _2522_other) {
	jule::Ptr<_1e4d61232_Trait> _2613_trt = _2522_other->_method_trt();
	return this->self == _2613_trt;
}



inline jule::Bool _1e4d61232_Trait::_method_is_builtin(void) {
	return (*this)._field_token._field_id == 0LLU;
}



inline jule::Ptr<_1e4b15a20_Fn> _1e4d61232_Trait::_method_find_method(jule::Str _3734_ident) {
	{
		auto &expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_4731693584:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_Fn> _1e4d61232_f = *it;
			{
				if (_1e4d61232_f->_field_ident == _3734_ident) {
					return _1e4d61232_f;
				}
			}
			_iter_next_4731693584:;
			++it;
			goto _iter_begin_4731693584;
		}
		_iter_end_4731693584:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d61232_Trait &_Src) {
	_Stream << "Trait{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "implemented:" << _Src._field_implemented;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e4d62387_EnumItem::_method_auto_expr(void) {
	return (*this)._field_value == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d62387_EnumItem &_Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e4ee54e8_ImportInfo> _1e4ee54e8_ImportInfo::_method_find_package(jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1e4ee54e8_ImportInfo> _1e4ee54e8_ImportInfo::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1e4ee54e8_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1e50b0492_Var> _1e4ee54e8_ImportInfo::_method_find_var(jule::Str _14731_ident,jule::Bool _14743_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_14731_ident)))) {
		return nullptr;
	}
	return _1e4ee54e8_find_var_in_package((*this)._field_package->_field_files,_14731_ident,false);
}



inline jule::Ptr<_1e6420856_TypeAlias> _1e4ee54e8_ImportInfo::_method_find_type_alias(jule::Str _16038_ident,jule::Bool _16050_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_16038_ident)))) {
		return nullptr;
	}
	return _1e4ee54e8_find_type_alias_in_package((*this)._field_package->_field_files,_16038_ident,false);
}



inline jule::Ptr<_1e398ee72_Struct> _1e4ee54e8_ImportInfo::_method_find_struct(jule::Str _17334_ident,jule::Bool _17346_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_17334_ident)))) {
		return nullptr;
	}
	return _1e4ee54e8_find_struct_in_package((*this)._field_package->_field_files,_17334_ident,false);
}



inline jule::Ptr<_1e4b15a20_Fn> _1e4ee54e8_ImportInfo::_method_find_fn(jule::Str _18630_ident,jule::Bool _18642_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_18630_ident)))) {
		return nullptr;
	}
	return _1e4ee54e8_find_fn_in_package((*this)._field_package->_field_files,_18630_ident,false);
}



inline jule::Ptr<_1e4d61232_Trait> _1e4ee54e8_ImportInfo::_method_find_trait(jule::Str _19833_ident) {
	if ((!((*this)._method_is_lookupable(_19833_ident)))) {
		return nullptr;
	}
	return _1e4ee54e8_find_trait_in_package((*this)._field_package->_field_files,_19833_ident);
}



inline jule::Ptr<_1e4d62387_Enum> _1e4ee54e8_ImportInfo::_method_find_enum(jule::Str _21032_ident) {
	if ((!((*this)._method_is_lookupable(_21032_ident)))) {
		return nullptr;
	}
	return _1e4ee54e8_find_enum_in_package((*this)._field_package->_field_files,_21032_ident);
}



inline jule::Bool _1e4ee54e8_ImportInfo::_method_is_lookupable(jule::Str _22028_ident) {
	if ((*this)._field_cpp_linked) {
		return false;
	}
	if ((!((*this)._field_import_all))) {
		if ((*this)._method_exist_ident(jule::Str("self", 4))) {
			return true;
		}
		if ((*this)._field_selected.len() > 0LL) {
			if ((!((*this)._method_exist_ident(_22028_ident)))) {
				return false;
			}
		}
	}
	return true;
}



inline jule::Bool _1e4ee54e8_ImportInfo::_method_exist_ident(jule::Str _24026_ident) {
	{
		auto &expr = (*this)._field_selected;
		auto it = expr.begin();
		_iter_begin_4732716832:;
		if (it != expr.end()) {
			_1e3bad8dd_Token &_1e4ee54e8_sident = *it;
			{
				if (_1e4ee54e8_sident._field_kind == _24026_ident) {
					return true;
				}
			}
			_iter_next_4732716832:;
			++it;
			goto _iter_begin_4732716832;
		}
		_iter_end_4732716832:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4ee54e8_ImportInfo &_Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e4d62387_Enum::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _1e4d62387_Enum::_method_equals(jule::Ptr<_1e6420856_TypeKind> _3522_other) {
	jule::Ptr<_1e4d62387_Enum> _3613_enm = _3522_other->_method_enm();
	return this->self == _3613_enm;
}



inline jule::Ptr<_1e4d62387_EnumItem> _1e4d62387_Enum::_method_find_item(jule::Str _4432_ident) {
	{
		auto &expr = (*this)._field_items;
		auto it = expr.begin();
		_iter_begin_4731705376:;
		if (it != expr.end()) {
			jule::Ptr<_1e4d62387_EnumItem> _1e4d62387_item = *it;
			{
				if (_1e4d62387_item->_field_ident == _4432_ident) {
					return _1e4d62387_item;
				}
			}
			_iter_next_4731705376:;
			++it;
			goto _iter_begin_4731705376;
		}
		_iter_end_4731705376:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d62387_Enum &_Src) {
	_Stream << "Enum{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc:" << _Src._field_doc;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e39e721b_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



inline jule::Bool _1e39e721b_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e39e721b_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_IndexingExpr &_Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e50b0492_Var::_method_is_initialized(void) {
	return (*this)._field_value != nullptr;
}



inline jule::Bool _1e50b0492_Var::_method_is_type_inferred(void) {
	return ((*this)._field_kind == nullptr) || ((*this)._field_kind->_field_decl == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e50b0492_Var &_Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "iter_relation:" << _Src._field_iter_relation << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline void _1e522c29b_TypeCompatibilityChecker::_method_push_err(jule::Str _13527_fmt,jule::Slice<jule::Any> _13540_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_13527_fmt,_13540_args);
}



inline jule::Bool _1e522c29b_TypeCompatibilityChecker::_method_check_trait(void) {
	jule::Bool _13932_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_13932_ok = true;
		return _13932_ok;
	}
	jule::Ptr<_1e4d61232_Trait> _14413_trt = (*this)._field_dest->_method_trt();
	jule::Bool _14517_ref = false;
	{
		if (!(((*this)._field_src->_method_sptr() != nullptr))) { goto _case_end_4733784960; }
		_case_begin_4733784960:;
		{
			_14517_ref=true;
			(*this)._field_src=(*this)._field_src->_method_sptr()->_field_elem;
			if ((*this)._field_src->_method_strct() == nullptr) {
				_13932_ok = false;
				return _13932_ok;
			}
			goto _case_begin_4733785136;
		}
		goto _match_end_4733783408;
		_case_end_4733784960:;
		if (!(((*this)._field_src->_method_strct() != nullptr))) { goto _case_end_4733785136; }
		_case_begin_4733785136:;
		{
			jule::Ptr<_1e398ee72_StructIns> _15617_s = (*this)._field_src->_method_strct();
			if ((!(_15617_s->_field_decl->_method_is_implements(_14413_trt)))) {
				_13932_ok = false;
				return _13932_ok;
			}
			if ((!(_14517_ref)) && _1e522c29b_trait_has_reference_receiver(_14413_trt)) {
				(*this)._method_push_err(jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
				_13932_ok = false;
				return _13932_ok;
			}
			_13932_ok = true;
			return _13932_ok;
		}
		goto _match_end_4733783408;
		_case_end_4733785136:;
		if (!(((*this)._field_src->_method_trt() != nullptr))) { goto _case_end_4733785232; }
		_case_begin_4733785232:;
		{
			_13932_ok = _14413_trt == (*this)._field_src->_method_trt();
			return _13932_ok;
		}
		goto _match_end_4733783408;
		_case_end_4733785232:;
		_case_begin_4733783520:;
		{
			_13932_ok = false;
			return _13932_ok;
		}
		goto _match_end_4733783408;
		_case_end_4733783520:;
		_match_end_4733783408:;
	}
}



inline jule::Bool _1e522c29b_TypeCompatibilityChecker::_method_check_ptr(void) {
	jule::Bool _17630_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_17630_ok = true;
		return _17630_ok;
	}
	jule::Ptr<_1e6420856_Ptr> _18117_dest = (*this)._field_dest->_method_ptr();
	if (_18117_dest->_method_is_unsafe()) {
		_17630_ok = true;
		return _17630_ok;
	}
	_17630_ok = (*this)._field_dest->_method_equals((*this)._field_src);
	return _17630_ok;
}



inline jule::Bool _1e522c29b_TypeCompatibilityChecker::_method_check_prim(void) {
	jule::Bool _19031_ok = jule::Bool();
	jule::Ptr<_1e6420856_Prim> _19113_prim = (*this)._field_dest->_method_prim();
	if ((_19113_prim != nullptr) && _19113_prim->_method_is_any()) {
		_19031_ok = true;
		return _19031_ok;
	}
	_19031_ok = (*this)._field_dest->_method_equals((*this)._field_src);
	return _19031_ok;
}



inline jule::Bool _1e522c29b_TypeCompatibilityChecker::_method_check(void) {
	jule::Bool _19826_ok = jule::Bool();
	if ((*this)._field_dest->_method_ptr() != nullptr) {
		_19826_ok = (*this)._method_check_ptr();
		return _19826_ok;
	}
	if ((*this)._field_dest->_method_nil_compatible()) {
		if ((*this)._field_src->_method_is_nil()) {
			_19826_ok = true;
			return _19826_ok;
		}
	}
	{
		if (!(((*this)._field_dest->_method_prim() != nullptr))) { goto _case_end_4733813936; }
		_case_begin_4733813936:;
		{
			_19826_ok = (*this)._method_check_prim();
			return _19826_ok;
		}
		goto _match_end_4733812400;
		_case_end_4733813936:;
		if (!(((*this)._field_dest->_method_trt() != nullptr))) { goto _case_end_4733813536; }
		_case_begin_4733813536:;
		{
			_19826_ok = (*this)._method_check_trait();
			return _19826_ok;
		}
		goto _match_end_4733812400;
		_case_end_4733813536:;
		_case_begin_4733812624:;
		{
			_19826_ok = (*this)._field_dest->_method_equals((*this)._field_src);
			return _19826_ok;
		}
		goto _match_end_4733812400;
		_case_end_4733812624:;
		_match_end_4733812400:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1e522c29b_TypeCompatibilityChecker &_Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1e522c29b_AssignTypeChecker::_method_push_err(jule::Str _22527_fmt,jule::Slice<jule::Any> _22540_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_22527_fmt,_22540_args);
}



inline jule::Bool _1e522c29b_AssignTypeChecker::_method_check_validity(void) {
	jule::Bool _23017_valid = true;
	{
		if (!(((*this)._field_d->_field_kind->_method_fnc() != nullptr))) { goto _case_end_4733822912; }
		_case_begin_4733822912:;
		{
			jule::Ptr<_1e4b15a20_FnIns> _23417_f = (*this)._field_d->_field_kind->_method_fnc();
			{
				if (!((_23417_f->_method_is_builtin()))) { goto _case_end_4733826688; }
				_case_begin_4733826688:;
				{
					(*this)._method_push_err(jule::Str("built-in define cannot use as anonymous function", 48),jule::Slice<jule::Any>());
					_23017_valid=false;
				}
				goto _match_end_4733826496;
				_case_end_4733826688:;
				if (!((_23417_f->_field_decl->_field_cpp_linked))) { goto _case_end_4733826800; }
				_case_begin_4733826800:;
				{
					(*this)._method_push_err(jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
					_23017_valid=false;
				}
				goto _match_end_4733826496;
				_case_end_4733826800:;
				if (!((_23417_f->_field_decl->_method_is_method()))) { goto _case_end_4733826912; }
				_case_begin_4733826912:;
				{
					(*this)._method_push_err(jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>());
					_23017_valid=false;
				}
				goto _match_end_4733826496;
				_case_end_4733826912:;
				if (!((_23417_f->_field_decl->_field_generics.len() > 0LL))) { goto _case_end_4733827024; }
				_case_begin_4733827024:;
				{
					(*this)._method_push_err(jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
					_23017_valid=false;
				}
				goto _match_end_4733826496;
				_case_end_4733827024:;
				_match_end_4733826496:;
			}
		}
		goto _match_end_4733822752;
		_case_end_4733822912:;
		if (!(((*this)._field_d->_field_kind->_method_tup() != nullptr))) { goto _case_end_4733823024; }
		_case_begin_4733823024:;
		{
			(*this)._method_push_err(jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
			_23017_valid=false;
		}
		goto _match_end_4733822752;
		_case_end_4733823024:;
		_match_end_4733822752:;
	}
	return _23017_valid;
}



inline jule::Bool _1e522c29b_AssignTypeChecker::_method_check_const(void) {
	if ((((!((*this)._field_d->_method_is_const())) || ((*this)._field_dest->_method_prim() == nullptr)) || ((*this)._field_d->_field_kind->_method_prim() == nullptr)) || (!(_1c8c8ad04_is_num((*this)._field_d->_field_kind->_method_prim()->_field_kind)))) {
		return false;
	}
	jule::Str _26913_kind = (*this)._field_dest->_method_prim()->_field_kind;
	{
		if (!((_1c8c8ad04_is_float(_26913_kind)))) { goto _case_end_4733844880; }
		_case_begin_4733844880:;
		{
			if ((!(_1e522c29b_float_assignable(_26913_kind,(*this)._field_d)))) {
				(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				return false;
			}
		}
		goto _match_end_4733843088;
		_case_end_4733844880:;
		if (!((_1c8c8ad04_is_int(_26913_kind)))) { goto _case_end_4733844976; }
		_case_begin_4733844976:;
		{
			if ((!(_1e522c29b_int_assignable(_26913_kind,(*this)._field_d)))) {
				(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				return false;
			}
		}
		goto _match_end_4733843088;
		_case_end_4733844976:;
		_case_begin_4733843328:;
		{
			return false;
		}
		goto _match_end_4733843088;
		_case_end_4733843328:;
		_match_end_4733843088:;
	}
	return true;
}



inline jule::Bool _1e522c29b_AssignTypeChecker::_method_is_prim(void) {
	if ((*this)._field_dest->_field_variadic || (*this)._field_d->_field_kind->_field_variadic) {
		return false;
	}
	if ((*this)._field_dest->_method_cpp_linked() || (*this)._field_d->_field_kind->_method_cpp_linked()) {
		return false;
	}
	return ((*this)._field_dest->_method_prim() != nullptr) && ((*this)._field_d->_field_kind->_method_prim() != nullptr);
}



inline jule::Bool _1e522c29b_AssignTypeChecker::_method_check(void) {
	{
		if (!(((*this)._field_d == nullptr))) { goto _case_end_4733859728; }
		_case_begin_4733859728:;
		{
			return false;
		}
		goto _match_end_4733857200;
		_case_end_4733859728:;
		if (!(((!((*this)._method_check_validity()))))) { goto _case_end_4733860880; }
		_case_begin_4733860880:;
		{
			return false;
		}
		goto _match_end_4733857200;
		_case_end_4733860880:;
		if (!(((*this)._method_check_const()))) { goto _case_end_4733860976; }
		_case_begin_4733860976:;
		{
			return true;
		}
		goto _match_end_4733857200;
		_case_end_4733860976:;
		if (!(((*this)._method_is_prim()))) { goto _case_end_4733857920; }
		_case_begin_4733857920:;
		{
			jule::Ptr<_1e6420856_Prim> _31817_dest = (*this)._field_dest->_method_prim();
			if (_31817_dest->_method_is_any()) {
				return true;
			}
			jule::Ptr<_1e6420856_Prim> _32221_src = (*this)._field_d->_field_kind->_method_prim();
			return _1c8b9ddd2_types_are_compatible(_31817_dest->_field_kind,_32221_src->_field_kind);
		}
		goto _match_end_4733857200;
		_case_end_4733857920:;
		_case_begin_4733857312:;
		{
			return (*this)._field_s->_method_check_type_compatibility((*this)._field_dest,(*this)._field_d->_field_kind,(*this)._field_error_token);
		}
		goto _match_end_4733857200;
		_case_end_4733857312:;
		_match_end_4733857200:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1e522c29b_AssignTypeChecker &_Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1e522c29b_DynamicTypeAnnotation::_method_push_generic(jule::Ptr<_1e6420856_TypeKind>& _34136_k,jule::Int _34150_i) {
	(*this)._field_f->_field_generics[_34150_i]=_34136_k;
}



inline jule::Bool _1e522c29b_DynamicTypeAnnotation::_method_annotate_prim(jule::Ptr<_1e6420856_TypeKind>& _34544_k) {
	jule::Bool _34560_ok = jule::Bool();
	jule::Str _34613_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto &expr = (*this)._field_f->_field_decl->_field_generics;
		auto it = expr.begin();
		_iter_begin_4733881344:;
		if (it != expr.end()) {
			jule::Int _1e522c29b_i = it - expr.begin();
			jule::Ptr<_1e38d4ec7_GenericDecl> &_1e522c29b_g = *it;
			{
				if (_34613_kind != _1e522c29b_g->_field_ident) {
					goto _iter_next_4733881344;
				}
				jule::Ptr<_1e6420856_TypeKind> _35217_t = (*this)._field_f->_field_generics[_1e522c29b_i];
				{
					if (!((_35217_t == nullptr))) { goto _case_end_4733886256; }
					_case_begin_4733886256:;
					{
						(*this)._method_push_generic(_34544_k,_1e522c29b_i);
					}
					goto _match_end_4733886016;
					_case_end_4733886256:;
					if (!(((!(_35217_t->_method_equals(_34544_k)))))) { goto _case_end_4733886352; }
					_case_begin_4733886352:;
					{
						_34560_ok = false;
						return _34560_ok;
					}
					goto _match_end_4733886016;
					_case_end_4733886352:;
					_match_end_4733886016:;
				}
				(*((*this)._field_k))->_field_kind=_34544_k->_field_kind;
				_34560_ok = true;
				return _34560_ok;
			}
			_iter_next_4733881344:;
			++it;
			_1e522c29b_i++;
			goto _iter_begin_4733881344;
		}
		_iter_end_4733881344:;
	}
	_34560_ok = false;
	return _34560_ok;
}



inline jule::Bool _1e522c29b_DynamicTypeAnnotation::_method_annotate_slc(jule::Ptr<_1e6420856_TypeKind>& _36943_k) {
	jule::Bool _36959_ok = jule::Bool();
	jule::Ptr<_1e6420856_Slc> _37017_pslc = (*((*this)._field_k))->_method_slc();
	if (_37017_pslc == nullptr) {
		_36959_ok = false;
		return _36959_ok;
	}
	jule::Ptr<_1e6420856_Slc> _37517_slc = _36943_k->_method_slc();
	(*this)._field_k=(&(_37017_pslc->_field_elem));
	_36959_ok = (*this)._method_annotate_kind(_37517_slc->_field_elem);
	return _36959_ok;
}



inline jule::Bool _1e522c29b_DynamicTypeAnnotation::_method_check_map_key(jule::Ptr<_1e6420856_TypeKind>* _38043_k,jule::Ptr<_1e6420856_TypeKind>& _38063_ck) {
	jule::Bool _38080_ok = jule::Bool();
	jule::Ptr<_1e6420856_TypeKind>* _38117_old = (*this)._field_k;
	(*this)._field_k=_38043_k;
	_38080_ok=(*this)._method_annotate_kind(_38063_ck);
	(*this)._field_k=_38117_old;
	return _38080_ok;
}



inline jule::Bool _1e522c29b_DynamicTypeAnnotation::_method_annotate_map(jule::Ptr<_1e6420856_TypeKind>& _38843_k) {
	jule::Bool _38859_ok = jule::Bool();
	jule::Ptr<_1e6420856_Map> _38917_pmap = (*((*this)._field_k))->_method_map();
	if (_38917_pmap == nullptr) {
		_38859_ok = false;
		return _38859_ok;
	}
	jule::Ptr<_1e6420856_Map> _39417_m = _38843_k->_method_map();
	_38859_ok = (*this)._method_check_map_key((&(_38917_pmap->_field_key)),_39417_m->_field_key) && (*this)._method_check_map_key((&(_38917_pmap->_field_val)),_39417_m->_field_val);
	return _38859_ok;
}



inline jule::Bool _1e522c29b_DynamicTypeAnnotation::_method_annotate_fn(jule::Ptr<_1e6420856_TypeKind>& _40042_k) {
	jule::Bool _40058_ok = jule::Bool();
	jule::Ptr<_1e4b15a20_FnIns> _40117_pf = (*((*this)._field_k))->_method_fnc();
	if (_40117_pf == nullptr) {
		_40058_ok = false;
		return _40058_ok;
	}
	jule::Ptr<_1e4b15a20_FnIns> _40517_f = _40042_k->_method_fnc();
	{
		if (!((_40117_pf->_field_params.len() != _40517_f->_field_params.len()))) { goto _case_end_4733917408; }
		_case_begin_4733917408:;
		{
			_40058_ok = false;
			return _40058_ok;
		}
		goto _match_end_4733917248;
		_case_end_4733917408:;
		if (!((_40117_pf->_field_decl->_method_is_void() != _40517_f->_field_decl->_method_is_void()))) { goto _case_end_4733917520; }
		_case_begin_4733917520:;
		{
			_40058_ok = false;
			return _40058_ok;
		}
		goto _match_end_4733917248;
		_case_end_4733917520:;
		_match_end_4733917248:;
	}
	_40058_ok=true;
	jule::Ptr<_1e6420856_TypeKind>* _41517_old = (*this)._field_k;
	{
		auto &expr = _40517_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4733922192:;
		if (it != expr.end()) {
			jule::Int _1e522c29b_i = it - expr.begin();
			jule::Ptr<_1e4b15a20_ParamIns> _1e522c29b_fp = *it;
			{
				(*this)._field_k=(&(_40117_pf->_field_params[_1e522c29b_i]->_field_kind));
				_40058_ok=(*this)._method_annotate_kind(_1e522c29b_fp->_field_kind) && _40058_ok;
			}
			_iter_next_4733922192:;
			++it;
			_1e522c29b_i++;
			goto _iter_begin_4733922192;
		}
		_iter_end_4733922192:;
	}
	if ((!(_40117_pf->_field_decl->_method_is_void()))) {
		(*this)._field_k=(&(_40117_pf->_field_result));
		_40058_ok=(*this)._method_annotate_kind(_40517_f->_field_result) && _40058_ok;
	}
	(*this)._field_k=_41517_old;
	return _40058_ok;
}



inline jule::Bool _1e522c29b_DynamicTypeAnnotation::_method_annotate_ptr(jule::Ptr<_1e6420856_TypeKind>& _43043_k) {
	jule::Bool _43059_ok = jule::Bool();
	jule::Ptr<_1e6420856_Ptr> _43117_pptr = (*((*this)._field_k))->_method_ptr();
	if (_43117_pptr == nullptr) {
		_43059_ok = false;
		return _43059_ok;
	}
	jule::Ptr<_1e6420856_Ptr> _43617_ptr = _43043_k->_method_ptr();
	(*this)._field_k=(&(_43117_pptr->_field_elem));
	_43059_ok = (*this)._method_annotate_kind(_43617_ptr->_field_elem);
	return _43059_ok;
}



inline jule::Bool _1e522c29b_DynamicTypeAnnotation::_method_annotate_sptr(jule::Ptr<_1e6420856_TypeKind>& _44144_k) {
	jule::Bool _44160_ok = jule::Bool();
	jule::Ptr<_1e6420856_Sptr> _44217_ssptr = (*((*this)._field_k))->_method_sptr();
	if (_44217_ssptr == nullptr) {
		_44160_ok = false;
		return _44160_ok;
	}
	jule::Ptr<_1e6420856_Sptr> _44717_sptr = _44144_k->_method_sptr();
	(*this)._field_k=(&(_44217_ssptr->_field_elem));
	_44160_ok = (*this)._method_annotate_kind(_44717_sptr->_field_elem);
	return _44160_ok;
}



inline jule::Bool _1e522c29b_DynamicTypeAnnotation::_method_annotate_any(jule::Ptr<_1e6420856_TypeKind>& _45243_k) {
	jule::Bool _45259_ok = jule::Bool();
	jule::Str _45313_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto &expr = (*this)._field_f->_field_decl->_field_generics;
		auto it = expr.begin();
		_iter_begin_4733947520:;
		if (it != expr.end()) {
			jule::Int _1e522c29b_i = it - expr.begin();
			jule::Ptr<_1e38d4ec7_GenericDecl> &_1e522c29b_g = *it;
			{
				if (_45313_kind != _1e522c29b_g->_field_ident) {
					goto _iter_next_4733947520;
				}
				jule::Ptr<_1e6420856_TypeKind> _45917_t = (*this)._field_f->_field_generics[_1e522c29b_i];
				{
					if (!((_45917_t == nullptr))) { goto _case_end_4733952384; }
					_case_begin_4733952384:;
					{
						(*this)._method_push_generic(_45243_k,_1e522c29b_i);
					}
					goto _match_end_4733952144;
					_case_end_4733952384:;
					if (!(((!(_45917_t->_method_equals(_45243_k)))))) { goto _case_end_4733952480; }
					_case_begin_4733952480:;
					{
						_45259_ok = false;
						return _45259_ok;
					}
					goto _match_end_4733952144;
					_case_end_4733952480:;
					_match_end_4733952144:;
				}
				(*((*this)._field_k))->_field_kind=_45243_k->_field_kind;
				_45259_ok = true;
				return _45259_ok;
			}
			_iter_next_4733947520:;
			++it;
			_1e522c29b_i++;
			goto _iter_begin_4733947520;
		}
		_iter_end_4733947520:;
	}
	_45259_ok = false;
	return _45259_ok;
}



inline jule::Bool _1e522c29b_DynamicTypeAnnotation::_method_annotate_kind(jule::Ptr<_1e6420856_TypeKind>& _47644_k) {
	jule::Bool _47660_ok = jule::Bool();
	if (((*this)._field_k == nullptr) || ((*((*this)._field_k)) == nullptr)) {
		return _47660_ok;
	}
	{
		if (!(((*this)._method_annotate_any(_47644_k)))) { goto _case_end_4733960192; }
		_case_begin_4733960192:;
		{
			_47660_ok = true;
			return _47660_ok;
		}
		goto _match_end_4733957392;
		_case_end_4733960192:;
		if (!((_47644_k->_method_prim() != nullptr))) { goto _case_end_4733960288; }
		_case_begin_4733960288:;
		{
			_47660_ok = (*this)._method_annotate_prim(_47644_k);
			return _47660_ok;
		}
		goto _match_end_4733957392;
		_case_end_4733960288:;
		if (!((_47644_k->_method_slc() != nullptr))) { goto _case_end_4733959552; }
		_case_begin_4733959552:;
		{
			_47660_ok = (*this)._method_annotate_slc(_47644_k);
			return _47660_ok;
		}
		goto _match_end_4733957392;
		_case_end_4733959552:;
		if (!((_47644_k->_method_map() != nullptr))) { goto _case_end_4733959648; }
		_case_begin_4733959648:;
		{
			_47660_ok = (*this)._method_annotate_map(_47644_k);
			return _47660_ok;
		}
		goto _match_end_4733957392;
		_case_end_4733959648:;
		if (!((_47644_k->_method_fnc() != nullptr))) { goto _case_end_4733959744; }
		_case_begin_4733959744:;
		{
			_47660_ok = (*this)._method_annotate_fn(_47644_k);
			return _47660_ok;
		}
		goto _match_end_4733957392;
		_case_end_4733959744:;
		if (!((_47644_k->_method_ptr() != nullptr))) { goto _case_end_4733959008; }
		_case_begin_4733959008:;
		{
			_47660_ok = (*this)._method_annotate_ptr(_47644_k);
			return _47660_ok;
		}
		goto _match_end_4733957392;
		_case_end_4733959008:;
		if (!((_47644_k->_method_sptr() != nullptr))) { goto _case_end_4733959104; }
		_case_begin_4733959104:;
		{
			_47660_ok = (*this)._method_annotate_sptr(_47644_k);
			return _47660_ok;
		}
		goto _match_end_4733957392;
		_case_end_4733959104:;
		_case_begin_4733958400:;
		{
			_47660_ok = false;
			return _47660_ok;
		}
		goto _match_end_4733957392;
		_case_end_4733958400:;
		_match_end_4733957392:;
	}
}



inline jule::Bool _1e522c29b_DynamicTypeAnnotation::_method_annotate(void) {
	jule::Bool _49336_ok = jule::Bool();
	(*this)._field_k=(&((*this)._field_p->_field_kind));
	_49336_ok = (*this)._method_annotate_kind((*this)._field_a->_field_kind);
	return _49336_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e522c29b_DynamicTypeAnnotation &_Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _1e522c29b_FnCallArgChecker::_method_push_err_token(_1e3bad8dd_Token _50933_token,jule::Str _50947_fmt,jule::Slice<jule::Any> _50960_args) {
	(*this)._field_e->_field_s->_method_push_err(_50933_token,_50947_fmt,_50960_args);
}



inline void _1e522c29b_FnCallArgChecker::_method_push_err(jule::Str _51327_fmt,jule::Slice<jule::Any> _51340_args) {
	(*this)._method_push_err_token((*this)._field_error_token,_51327_fmt,_51340_args);
}



inline jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>> _1e522c29b_FnCallArgChecker::_method_get_params(void) {
	if ((((*this)._field_f->_field_params.len() > 0LL) && ((*this)._field_f->_field_params[0LL]->_field_decl != nullptr)) && (*this)._field_f->_field_params[0LL]->_field_decl->_method_is_self()) {
		return (*this)._field_f->_field_params.slice(1LL);
	}
	return (*this)._field_f->_field_params;
}



inline jule::Bool _1e522c29b_FnCallArgChecker::_method_check_counts(jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>& _52632_params) {
	jule::Bool _52655_ok = jule::Bool();
	jule::I64 _52717_n = _52632_params.len();
	if ((_52717_n > 0LL) && _52632_params[0LL]->_field_decl->_method_is_self()) {
		(_52717_n)--;
	}
	jule::I64 _53217_diff = _52717_n - (*this)._field_args.len();
	{
		if (!((_53217_diff == 0LL))) { goto _case_end_4733996288; }
		_case_begin_4733996288:;
		{
			_52655_ok = true;
			return _52655_ok;
		}
		goto _match_end_4733996144;
		_case_end_4733996288:;
		if (!(((_52717_n > 0LL) && _52632_params[_52717_n - 1LL]->_field_decl->_field_variadic))) { goto _case_end_4733996400; }
		_case_begin_4733996400:;
		{
			_52655_ok = true;
			return _52655_ok;
		}
		goto _match_end_4733996144;
		_case_end_4733996400:;
		if (!(((_53217_diff < 0LL) || (_53217_diff > _52632_params.len())))) { goto _case_end_4733996512; }
		_case_begin_4733996512:;
		{
			(*this)._method_push_err(jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
			_52655_ok = false;
			return _52655_ok;
		}
		goto _match_end_4733996144;
		_case_end_4733996512:;
		_match_end_4733996144:;
	}
	jule::Str _54517_idents = jule::Str();
	for (; _53217_diff > 0LL; (_53217_diff)--) {
		{
			_54517_idents+=jule::Str(", ", 2) + _52632_params[_52717_n - _53217_diff]->_field_decl->_field_ident;
		}
	_iter_next_4734001888:;
	}
	_iter_end_4734001888:;
	_54517_idents=_54517_idents.slice(2LL);
	(*this)._method_push_err(jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_54517_idents)}));
	_52655_ok = false;
	return _52655_ok;
}



inline jule::Bool _1e522c29b_FnCallArgChecker::_method_check_arg(jule::Ptr<_1e4b15a20_ParamIns>& _55533_p,jule::Ptr<_1e50ac4b1_Data>& _55552_arg,_1e3bad8dd_Token& _55569_error_token) {
	jule::Bool _55591_ok = jule::Bool();
	if ((*this)._field_dynamic_annotation && _1e4b15a20_parameter_uses_generics(_55533_p->_field_decl,(*this)._field_f->_field_decl->_field_generics)) {
		_1e522c29b_DynamicTypeAnnotation _55721_dta = _1e522c29b_DynamicTypeAnnotation((*this)._field_e,(*this)._field_f,_55533_p,_55552_arg,_55569_error_token,nullptr);
		_55591_ok=_55721_dta._method_annotate();
		if ((!(_55591_ok))) {
			(*this)._method_push_err_token(_55569_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_55591_ok = false;
			return _55591_ok;
		}
	}
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr(_55533_p->_field_decl->_field_mutable,_55533_p->_field_decl->_field_reference,_55533_p->_field_kind,_55552_arg,_55569_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(_55533_p->_field_decl->_field_reference,_55533_p->_field_kind,_55552_arg,_55569_error_token);
	_55591_ok = true;
	return _55591_ok;
}



inline jule::Bool _1e522c29b_FnCallArgChecker::_method_push(jule::Ptr<_1e4b15a20_ParamIns>& _57728_p,jule::Ptr<_1e38d4ec7_Expr> _57746_arg) {
	jule::Bool _57760_ok = jule::Bool();
	jule::Ptr<_1e6420856_TypeKind> _57817_old = (*this)._field_e->_field_prefix;
	jule::Bool _57913_old_immut = (*this)._field_e->_field_immutable;
	jule::Ptr<_1e50ac4b1_Data> _58017_d = nullptr;
	(*this)._field_e->_field_immutable=(!(_57728_p->_field_decl->_field_mutable));
	if ((!((*this)._field_dynamic_annotation)) && (!(_57728_p->_field_decl->_field_variadic))) {
		(*this)._field_e->_field_prefix=_57728_p->_field_kind;
	} else {
		(*this)._field_e->_field_prefix=nullptr;
	}
	_58017_d=(*this)._field_e->_method_eval_expr_kind(_57746_arg->_field_kind);
	(*this)._field_e->_field_prefix=_57817_old;
	(*this)._field_e->_field_immutable=_57913_old_immut;
	if (_58017_d == nullptr) {
		_57760_ok = false;
		return _57760_ok;
	}
	(*this)._field_arg_models = jule::alloc_for_append((*this)._field_arg_models,1);(*this)._field_arg_models.push(_58017_d->_field_model);
	_57760_ok = (*this)._method_check_arg(_57728_p,_58017_d,_57746_arg->_field_token);
	return _57760_ok;
}



inline jule::Bool _1e522c29b_FnCallArgChecker::_method_push_variadic(jule::Ptr<_1e4b15a20_ParamIns>& _60137_p,jule::Int _60155_i) {
	jule::Bool _60165_ok = jule::Bool();
	_60165_ok=true;
	jule::Bool _60317_variadiced = false;
	jule::Bool _60413_more = (_60155_i + 1LL) < (*this)._field_args.len();
	jule::Ptr<_1e4d70a6b_SliceExprModel> _60517_model = jule::new_struct<_1e4d70a6b_SliceExprModel>(new( std::nothrow ) _1e4d70a6b_SliceExprModel(_60137_p->_field_kind,jule::Slice<jule::Any>()));
	jule::Ptr<_1e6420856_TypeKind> _60917_old = (*this)._field_e->_field_prefix;
	for (; _60155_i < (*this)._field_args.len(); (_60155_i)++) {
		{
			jule::Ptr<_1e38d4ec7_Expr> _61121_arg = (*this)._field_args[_60155_i];
			{
				auto &_match_expr{ _61121_arg->_field_kind };
				if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_VariadicExpr>>())) { goto _case_end_4734342960; }
				_case_begin_4734342960:;
				{
					(*this)._field_e->_field_prefix=jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1e6420856_Slc>(new( std::nothrow ) _1e6420856_Slc(_60137_p->_field_kind))));
				}
				goto _match_end_4734341952;
				_case_end_4734342960:;
				_case_begin_4734340208:;
				{
					(*this)._field_e->_field_prefix=_60137_p->_field_kind;
				}
				goto _match_end_4734341952;
				_case_end_4734340208:;
				_match_end_4734341952:;
			}
			jule::Ptr<_1e50ac4b1_Data> _62121_d = (*this)._field_e->_method_eval_expr_kind(_61121_arg->_field_kind);
			if (_62121_d == nullptr) {
				_60165_ok=false;
				goto _iter_next_4734338352;
			}
			if (_62121_d->_field_variadiced) {
				_60317_variadiced=true;
				_62121_d->_field_variadiced=false;
				_60137_p->_field_kind->_field_variadic=true;
				_62121_d->_field_kind->_field_variadic=true;
				__JULE_DEFER({
					_62121_d->_field_kind->_field_variadic=false;
					_60137_p->_field_kind->_field_variadic=false;
				});
				{
					auto &_match_expr{ _62121_d->_field_model };
					if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_SliceExprModel>>())) { goto _case_end_4734352336; }
					_case_begin_4734352336:;
					{
						_60517_model=_62121_d->_field_model.operator jule::Ptr<_1e4d70a6b_SliceExprModel>();
						_60517_model->_field_elem_kind=_60137_p->_field_kind;
					}
					goto _match_end_4734351856;
					_case_end_4734352336:;
					_case_begin_4734349264:;
					{
						_60517_model=nullptr;
						(*this)._field_arg_models = jule::alloc_for_append((*this)._field_arg_models,1);(*this)._field_arg_models.push(_62121_d->_field_model);
					}
					goto _match_end_4734351856;
					_case_end_4734349264:;
					_match_end_4734351856:;
				}
				_60165_ok=(*this)._method_check_arg(_60137_p,_62121_d,_61121_arg->_field_token) && _60165_ok;
				goto _iter_next_4734338352;
			}
			_60517_model->_field_elems = jule::alloc_for_append(_60517_model->_field_elems,1);_60517_model->_field_elems.push(_62121_d->_field_model);
			_60165_ok=(*this)._method_check_arg(_60137_p,_62121_d,_61121_arg->_field_token) && _60165_ok;
		}
	_iter_next_4734338352:;
	}
	_iter_end_4734338352:;
	(*this)._field_e->_field_prefix=_60917_old;
	if (_60317_variadiced && _60413_more) {
		(*this)._method_push_err(jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	}
	if (_60517_model != nullptr) {
		(*this)._field_arg_models = jule::alloc_for_append((*this)._field_arg_models,1);(*this)._field_arg_models.push(jule::Any(_60517_model));
	}
	return _60165_ok;
}



inline jule::Bool _1e522c29b_FnCallArgChecker::_method_check_args(jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>& _66734_params) {
	jule::Bool _66757_ok = jule::Bool();
	_66757_ok=true;
	jule::Int _66917_i = 0LL;
	_julec_label_iter:;
	while (_66917_i < _66734_params.len()) {
		{
			jule::Ptr<_1e4b15a20_ParamIns> _67221_p = _66734_params[_66917_i];
			{
				if (!((_67221_p->_field_decl->_method_is_self()))) { goto _case_end_4734370368; }
				goto _match_end_4734369472;
				_case_end_4734370368:;
				if (!((_67221_p->_field_decl->_field_variadic))) { goto _case_end_4734370672; }
				_case_begin_4734370672:;
				{
					_66757_ok=(*this)._method_push_variadic(_67221_p,_66917_i) && _66757_ok;
					goto _iter_end_4734366304;
				}
				goto _match_end_4734369472;
				_case_end_4734370672:;
				if (!(((*this)._field_args.len() <= _66917_i))) { goto _case_end_4734370768; }
				_case_begin_4734370768:;
				{
					_66757_ok=false;
					goto _iter_end_4734366304;
				}
				goto _match_end_4734369472;
				_case_end_4734370768:;
				_case_begin_4734369584:;
				{
					_66757_ok=(*this)._method_push(_67221_p,(*this)._field_args[_66917_i]) && _66757_ok;
				}
				goto _match_end_4734369472;
				_case_end_4734369584:;
				_match_end_4734369472:;
			}
			(_66917_i)++;
		}
	_iter_next_4734366304:;
	}
	_iter_end_4734366304:;
	return _66757_ok;
}



inline jule::Bool _1e522c29b_FnCallArgChecker::_method_check_dynamic_type_annotation(void) {
	jule::Bool _69450_ok = jule::Bool();
	{
		auto &expr = (*this)._field_f->_field_generics;
		auto it = expr.begin();
		_iter_begin_4734378048:;
		if (it != expr.end()) {
			jule::Ptr<_1e6420856_TypeKind> &_1e522c29b_g = *it;
			{
				if (_1e522c29b_g == nullptr) {
					(*this)._method_push_err(jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_69450_ok = false;
					return _69450_ok;
				}
			}
			_iter_next_4734378048:;
			++it;
			goto _iter_begin_4734378048;
		}
		_iter_end_4734378048:;
	}
	_69450_ok = true;
	return _69450_ok;
}



inline jule::Bool _1e522c29b_FnCallArgChecker::_method_check(void) {
	jule::Bool _70426_ok = jule::Bool();
	jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>> _70517_params = (*this)._method_get_params();
	_70426_ok=(*this)._method_check_counts(_70517_params);
	if ((!(_70426_ok))) {
		_70426_ok = false;
		return _70426_ok;
	}
	_70426_ok=(*this)._method_check_args(_70517_params);
	if (_70426_ok && (*this)._field_dynamic_annotation) {
		_70426_ok=(*this)._method_check_dynamic_type_annotation();
	}
	return _70426_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e522c29b_FnCallArgChecker &_Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _1e522c29b_StructLitChecker::_method_push_err(_1e3bad8dd_Token _72827_token,jule::Str _72841_fmt,jule::Slice<jule::Any> _72854_args) {
	(*this)._field_e->_method_push_err(_72827_token,_72841_fmt,_72854_args);
}



inline void _1e522c29b_StructLitChecker::_method_push_suggestion(jule::Str _73334_fmt,jule::Slice<jule::Any> _73347_args) {
	(*this)._field_e->_method_push_suggestion(_73334_fmt,_73347_args);
}



inline void _1e522c29b_StructLitChecker::_method_push_match(jule::Ptr<_1e398ee72_FieldIns>& _73734_f,jule::Ptr<_1e50ac4b1_Data>& _73753_d,_1e3bad8dd_Token& _73768_error_token) {
	(*this)._field_args = jule::alloc_for_append((*this)._field_args,1);(*this)._field_args.push(jule::new_struct<_1e4d70a6b_StructArgExprModel>(new( std::nothrow ) _1e4d70a6b_StructArgExprModel(_73734_f,_73753_d->_field_model)));
	
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr((!((*this)._field_e->_field_immutable)),false,_73734_f->_field_kind,_73753_d,_73768_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(false,_73734_f->_field_kind,_73753_d,_73768_error_token);
}



inline void _1e522c29b_StructLitChecker::_method_check_pair(jule::Ptr<_1e38d4ec7_FieldExprPair>& _74834_pair,jule::Slice<jule::Any>& _74861_exprs) {
	jule::Ptr<_1e398ee72_FieldIns> _75017_f = (*this)._field_s->_method_find_field(_74834_pair->_field_field._field_kind);
	if (_75017_f == nullptr) {
		(*this)._method_push_err(_74834_pair->_field_field,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_74834_pair->_field_field._field_kind)}));
		return;
	}
	if ((!((*this)._field_e->_field_s->_method_is_accessible_define(_75017_f->_field_decl->_field_public,_75017_f->_field_decl->_field_token)))) {
		(*this)._method_push_err(_74834_pair->_field_field,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_74834_pair->_field_field._field_kind)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	}
	_julec_label_dup_lookup:;
	{
		auto &expr = _74861_exprs;
		auto it = expr.begin();
		_iter_begin_4734422128:;
		if (it != expr.end()) {
			jule::Any _1e522c29b_expr = *it;
			{
				{
					auto &_match_expr{ _1e522c29b_expr };
					if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_FieldExprPair>>())) { goto _case_end_4734422400; }
					_case_begin_4734422400:;
					{
						jule::Ptr<_1e38d4ec7_FieldExprPair> _76625_dpair = _1e522c29b_expr.operator jule::Ptr<_1e38d4ec7_FieldExprPair>();
						{
							if (!((_74834_pair == _76625_dpair))) { goto _case_end_4734426576; }
							_case_begin_4734426576:;
							{
								goto _iter_end_4734422128;
							}
							goto _match_end_4734426416;
							_case_end_4734426576:;
							if (!((_74834_pair->_field_field._field_kind == _76625_dpair->_field_field._field_kind))) { goto _case_end_4734426688; }
							_case_begin_4734426688:;
							{
								(*this)._method_push_err(_74834_pair->_field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>({jule::Any(_74834_pair->_field_field._field_kind)}));
								goto _iter_end_4734422128;
							}
							goto _match_end_4734426416;
							_case_end_4734426688:;
							_match_end_4734426416:;
						}
					}
					goto _match_end_4734423840;
					_case_end_4734422400:;
					_match_end_4734423840:;
				}
			}
			_iter_next_4734422128:;
			++it;
			goto _iter_begin_4734422128;
		}
		_iter_end_4734422128:;
	}
	jule::Ptr<_1e6420856_TypeKind> _77817_prefix = (*this)._field_e->_field_prefix;
	__JULE_DEFER({
		(*this)._field_e->_field_prefix=_77817_prefix;
	});
	(*this)._field_e->_field_prefix=_75017_f->_field_kind;
	jule::Ptr<_1e50ac4b1_Data> _78217_d = (*this)._field_e->_method_eval_expr_kind(_74834_pair->_field_expr);
	if (_78217_d == nullptr) {
		return;
	}
	(*this)._method_push_match(_75017_f,_78217_d,_74834_pair->_field_field);
}



inline jule::Bool _1e522c29b_StructLitChecker::_method_ready_exprs(jule::Slice<jule::Any>& _78935_exprs) {
	jule::Bool _79017_ok = true;
	{
		auto &expr = _78935_exprs;
		auto it = expr.begin();
		_iter_begin_4734438816:;
		if (it != expr.end()) {
			jule::Int _1e522c29b_i = it - expr.begin();
			jule::Any _1e522c29b_expr = *it;
			{
				{
					auto &_match_expr{ _1e522c29b_expr };
					if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_KeyValPair>>())) { goto _case_end_4734440704; }
					_case_begin_4734440704:;
					{
						jule::Ptr<_1e38d4ec7_KeyValPair> _79425_pair = _1e522c29b_expr.operator jule::Ptr<_1e38d4ec7_KeyValPair>();
						{
							auto &_match_expr{ _79425_pair->_field_key };
							if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_IdentExpr>>())) { goto _case_end_4734444816; }
							goto _match_end_4734444064;
							_case_end_4734444816:;
							_case_begin_4734441360:;
							{
								(*this)._method_push_err(_79425_pair->_field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
								_79017_ok=false;
								goto _iter_next_4734438816;
							}
							goto _match_end_4734444064;
							_case_end_4734441360:;
							_match_end_4734444064:;
						}
						_78935_exprs.__at(_1e522c29b_i)=jule::Any(jule::new_struct<_1e38d4ec7_FieldExprPair>(new( std::nothrow ) _1e38d4ec7_FieldExprPair(_79425_pair->_field_key.operator jule::Ptr<_1e38d4ec7_IdentExpr>()->_field_token,_79425_pair->_field_val)));
					}
					goto _match_end_4734441168;
					_case_end_4734440704:;
					_match_end_4734441168:;
				}
			}
			_iter_next_4734438816:;
			++it;
			_1e522c29b_i++;
			goto _iter_begin_4734438816;
		}
		_iter_end_4734438816:;
	}
	return _79017_ok;
}



inline void _1e522c29b_StructLitChecker::_method_check(jule::Slice<jule::Any>& _81529_exprs) {
	if (_81529_exprs.len() == 0LL) {
		return;
	}
	if ((!((*this)._method_ready_exprs(_81529_exprs)))) {
		return;
	}
	jule::Bool _82417_paired = false;
	{
		auto &expr = _81529_exprs;
		auto it = expr.begin();
		_iter_begin_4734452704:;
		if (it != expr.end()) {
			jule::Int _1e522c29b_i = it - expr.begin();
			jule::Any _1e522c29b_expr = *it;
			{
				{
					auto &_match_expr{ _1e522c29b_expr };
					if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_FieldExprPair>>())) { goto _case_end_4734454592; }
					_case_begin_4734454592:;
					{
						jule::Ptr<_1e38d4ec7_FieldExprPair> _82825_pair = _1e522c29b_expr.operator jule::Ptr<_1e38d4ec7_FieldExprPair>();
						if ((_1e522c29b_i > 0LL) && (!(_82417_paired))) {
							(*this)._method_push_err(_82825_pair->_field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						}
						_82417_paired=true;
						(*this)._method_check_pair(_82825_pair,_81529_exprs);
					}
					goto _match_end_4734455056;
					_case_end_4734454592:;
					if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_Expr>>())) { goto _case_end_4734455136; }
					_case_begin_4734455136:;
					{
						jule::Ptr<_1e38d4ec7_Expr> _83625_e = _1e522c29b_expr.operator jule::Ptr<_1e38d4ec7_Expr>();
						if (_82417_paired) {
							(*this)._method_push_err(_83625_e->_field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
						}
						if (_1e522c29b_i >= (*this)._field_s->_field_fields.len()) {
							(*this)._method_push_err(_83625_e->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
							goto _iter_next_4734452704;
						}
						jule::Ptr<_1e398ee72_FieldIns> _84525_field = (*this)._field_s->_field_fields[_1e522c29b_i];
						jule::Ptr<_1e6420856_TypeKind> _84725_prefix = (*this)._field_e->_field_prefix;
						__JULE_DEFER({
							(*this)._field_e->_field_prefix=_84725_prefix;
						});
						(*this)._field_e->_field_prefix=_84525_field->_field_kind;
						jule::Ptr<_1e50ac4b1_Data> _85125_d = (*this)._field_e->_method_eval_expr_kind(_83625_e->_field_kind);
						if (_85125_d == nullptr) {
							goto _iter_next_4734452704;
						}
						(*this)._method_push_match(_84525_field,_85125_d,_83625_e->_field_token);
					}
					goto _match_end_4734455056;
					_case_end_4734455136:;
					_match_end_4734455056:;
				}
			}
			_iter_next_4734452704:;
			++it;
			_1e522c29b_i++;
			goto _iter_begin_4734452704;
		}
		_iter_end_4734452704:;
	}
	if ((!(_82417_paired))) {
		jule::I64 _86217_n = (*this)._field_s->_field_fields.len();
		jule::I64 _86321_diff = _86217_n - _81529_exprs.len();
		{
			if (!((_86321_diff <= 0LL))) { goto _case_end_4734475856; }
			_case_begin_4734475856:;
			{
				return;
			}
			goto _match_end_4734475664;
			_case_end_4734475856:;
			_match_end_4734475664:;
		}
		jule::Str _86921_idents = jule::Str();
		for (; _86321_diff > 0LL; (_86321_diff)--) {
			{
				_86921_idents+=jule::Str(", ", 2) + (*this)._field_s->_field_fields[_86217_n - _86321_diff]->_field_decl->_field_ident;
			}
		_iter_next_4734454448:;
		}
		_iter_end_4734454448:;
		_86921_idents=_86921_idents.slice(2LL);
		(*this)._method_push_err((*this)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_86921_idents)}));
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1e522c29b_StructLitChecker &_Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_SlicingExpr &_Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}



inline void _1e522c29b_RetTypeChecker::_method_prepare_types(void) {
	(*this)._field_types=_1e522c29b_get_fn_result_types((*this)._field_f);
}



inline void _1e522c29b_RetTypeChecker::_method_prepare_exprs(jule::Ptr<_1e38d4ec7_Expr>& _105337_e) {
	if (_105337_e == nullptr) {
		return;
	}
	{
		auto &_match_expr{ _105337_e->_field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_TupleExpr>>())) { goto _case_end_4734573776; }
		_case_begin_4734573776:;
		{
			(*this)._field_exprs=_105337_e->_field_kind.operator jule::Ptr<_1e38d4ec7_TupleExpr>()->_field_expr;
		}
		goto _match_end_4734569328;
		_case_end_4734573776:;
		_case_begin_4734570112:;
		{
			(*this)._field_exprs = jule::alloc_for_append((*this)._field_exprs,1);(*this)._field_exprs.push(_105337_e);
		}
		goto _match_end_4734569328;
		_case_end_4734570112:;
		_match_end_4734569328:;
	}
}



inline void _1e522c29b_RetTypeChecker::_method_ret_vars(void) {
	if ((*this)._field_f->_field_decl->_method_is_void()) {
		return;
	}
	(*this)._field_vars=jule::Slice<jule::Ptr<_1e50b0492_Var>>::alloc(0LL,static_cast<jule::I64>((*this)._field_f->_field_decl->_field_result->_field_idents.len()));
	jule::Ptr<_1e4d6ee22_ScopeChecker> _107317_root_scope = (*this)._field_sc->_method_get_root();
	jule::Int _107517_j = 0LL;
	{
		auto &expr = (*this)._field_f->_field_decl->_field_result->_field_idents;
		auto it = expr.begin();
		_iter_begin_4734580784:;
		if (it != expr.end()) {
			jule::Int _1e522c29b_i = it - expr.begin();
			_1e3bad8dd_Token &_1e522c29b_ident = *it;
			{
				if ((!(_1e3bad8dd_is_ignore_ident(_1e522c29b_ident._field_kind)))) {
					(*this)._field_vars = jule::alloc_for_append((*this)._field_vars,1);(*this)._field_vars.push(_107317_root_scope->_field_table->_field_vars[_107517_j]);
					(_107517_j)++;
				} else {
					(*this)._field_vars = jule::alloc_for_append((*this)._field_vars,1);(*this)._field_vars.push(jule::new_struct<_1e50b0492_Var>(new( std::nothrow ) _1e50b0492_Var(jule::Ptr<_1e4d6ee22_Scope>(),_1e3bad8dd_Token(),jule::Str("_", 1),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1e6420856_TypeSymbol>(new( std::nothrow ) _1e6420856_TypeSymbol(jule::Ptr<_1e38d4ec7_TypeDecl>(),(*this)._field_types[_1e522c29b_i])),jule::Ptr<_1e50ac4b1_Value>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>(),jule::Ptr<_1e50b0492_IterRelation>(),jule::Slice<jule::Ptr<_1e50b0492_Var>>())));
				}
			}
			_iter_next_4734580784:;
			++it;
			_1e522c29b_i++;
			goto _iter_begin_4734580784;
		}
		_iter_end_4734580784:;
	}
	if (_107517_j == 0LL) {
		(*this)._field_vars=nullptr;
	}
}



inline void _1e522c29b_RetTypeChecker::_method_check_exprs(void) {
	if ((*this)._field_exprs.len() == 0LL) {
		return;
	}
	jule::Slice<jule::Ptr<_1e50ac4b1_Data>> _109917_datas = jule::Slice<jule::Ptr<_1e50ac4b1_Data>>::alloc(0LL,static_cast<jule::I64>((*this)._field_exprs.len()));
	{
		auto &expr = (*this)._field_exprs;
		auto it = expr.begin();
		_iter_begin_4734591408:;
		if (it != expr.end()) {
			jule::Int _1e522c29b_i = it - expr.begin();
			jule::Ptr<_1e38d4ec7_Expr> _1e522c29b_expr = *it;
			{
				if (_1e522c29b_i >= (*this)._field_types.len()) {
					goto _iter_end_4734591408;
				}
				jule::Ptr<_1e6420856_TypeKind> _110621_t = (*this)._field_types[_1e522c29b_i];
				jule::Ptr<_1e50ac4b1_Data> _110821_d = (*this)._field_sc->_field_s->_method_evalp((*this)._field_sc,_110621_t)->_method_eval_expr(_1e522c29b_expr);
				if (_110821_d == nullptr) {
					goto _iter_next_4734591408;
				}
				_109917_datas.push(_110821_d);
				if ((!(_110821_d->_field_mutable)) && _110821_d->_field_kind->_method_mutable()) {
					(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;
				}
				_1e522c29b_AssignTypeChecker _112021_ac = _1e522c29b_AssignTypeChecker((*this)._field_sc->_field_s,_110621_t,_110821_d,(*this)._field_error_token);
				_112021_ac._method_check();
			}
			_iter_next_4734591408:;
			++it;
			_1e522c29b_i++;
			goto _iter_begin_4734591408;
		}
		_iter_end_4734591408:;
	}
	if (_109917_datas.len() > 1LL) {
		(*this)._field_model=jule::Any(jule::new_struct<_1e4d70a6b_TupleExprModel>(new( std::nothrow ) _1e4d70a6b_TupleExprModel(_109917_datas)));
	} else if (_109917_datas.len() == 1LL) {
		(*this)._field_model=_109917_datas[0LL]->_field_model;
	}
}



inline jule::Bool _1e522c29b_RetTypeChecker::_method_check(jule::Ptr<_1e38d4ec7_Expr>& _113929_e) {
	(*this)._method_prepare_types();
	(*this)._method_prepare_exprs(_113929_e);
	(*this)._method_ret_vars();
	jule::I64 _114413_n = (*this)._field_exprs.len();
	if ((_114413_n == 0LL) && (!((*this)._field_f->_field_decl->_method_is_void()))) {
		if ((!((*this)._field_f->_field_decl->_method_any_var()))) {
			(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		}
		return true;
	}
	if ((_114413_n > 0LL) && (*this)._field_f->_field_decl->_method_is_void()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	}
	if (_114413_n > (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if (_114413_n < (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("missing return expressions for multi return", 43),jule::Slice<jule::Any>());
	}
	(*this)._method_check_exprs();
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e522c29b_RetTypeChecker &_Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_TernaryExpr &_Src) {
	_Stream << "TernaryExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "condition:" << _Src._field_condition << ", ";
	_Stream << "true_expr:" << _Src._field_true_expr << ", ";
	_Stream << "false_expr:" << _Src._field_false_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_GenericDecl &_Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_LabelSt &_Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e50ac4b1_BinopSolver::_method_check_type_compatibility(void) {
	return (*this)._field_e->_field_s->_method_check_type_compatibility((*this)._field_l->_field_kind,(*this)._field_r->_field_kind,(*this)._field_op);
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_BinopSolver::_method_eval_nil(void) {
	if ((!((*this)._field_r->_field_kind->_method_nil_compatible()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("nil", 3)),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4736317600; }
		_case_begin_4736317600:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4736316832;
		_case_end_4736317600:;
		_case_begin_4736316208:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("nil", 3))}));
			return nullptr;
		}
		goto _match_end_4736316832;
		_case_end_4736316208:;
		_match_end_4736316832:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_BinopSolver::_method_eval_enum(void) {
	jule::Ptr<_1e4d62387_Enum> _348417_enm = (*this)._field_l->_field_kind->_method_enm();
	if (((*this)._field_r->_field_kind->_method_enm() == nullptr) || (_348417_enm != (*this)._field_r->_field_kind->_method_enm())) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_348417_enm->_field_ident),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str(">", 1)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4736333200; }
		_case_begin_4736333200:;
		{
			if ((!(_1c8c8ad04_is_num(_348417_enm->_field_kind->_field_kind->_method_to_str())))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_348417_enm->_field_ident)}));
				return nullptr;
			}
			goto _case_begin_4736333328;
		}
		goto _match_end_4736329136;
		_case_end_4736333200:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4736333328; }
		_case_begin_4736333328:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4736329136;
		_case_end_4736333328:;
		if (!((jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr)) { goto _case_end_4736333424; }
		_case_begin_4736333424:;
		{
			if ((_348417_enm->_field_kind->_field_kind->_method_prim() == nullptr) || (!(_1c8c8ad04_is_int(_348417_enm->_field_kind->_field_kind->_method_prim()->_method_to_str())))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_348417_enm->_field_ident)}));
			}
			return (*this)._field_l;
		}
		goto _match_end_4736329136;
		_case_end_4736333424:;
		_case_begin_4736327792:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_348417_enm->_field_ident)}));
			return nullptr;
		}
		goto _match_end_4736329136;
		_case_end_4736327792:;
		_match_end_4736329136:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_BinopSolver::_method_eval_sptr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4736354736; }
		_case_begin_4736354736:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4736346544;
		_case_end_4736354736:;
		_case_begin_4736350304:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4736346544;
		_case_end_4736350304:;
		_match_end_4736346544:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_BinopSolver::_method_eval_ptr(void) {
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str("<=", 2)) == _match_expr || (jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4736361600; }
		_case_begin_4736361600:;
		{
			if ((!((*this)._method_check_type_compatibility()))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
				return nullptr;
			}
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4736357376;
		_case_end_4736361600:;
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr)) { goto _case_end_4736361744; }
		_case_begin_4736361744:;
		{
			if ((*this)._field_l->_field_kind->_method_ptr() == nullptr) {
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
			}
			if ((*this)._field_l->_field_kind->_method_ptr()->_method_is_unsafe()) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			}
			if ((!(_1e50ac4b1_is_ptr_arithmetic_compatible_int((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("type \"@\" is incompatible to use for pointer arithmetic", 54),jule::Slice<jule::Any>({jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
				return nullptr;
			}
			return (*this)._field_l;
		}
		goto _match_end_4736357376;
		_case_end_4736361744:;
		_case_begin_4736355200:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4736357376;
		_case_end_4736355200:;
		_match_end_4736357376:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_BinopSolver::_method_eval_arr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4736388080; }
		_case_begin_4736388080:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4736379856;
		_case_end_4736388080:;
		_case_begin_4736383680:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4736379856;
		_case_end_4736383680:;
		_match_end_4736379856:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_BinopSolver::_method_eval_slc(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4736398768; }
		_case_begin_4736398768:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4736390576;
		_case_end_4736398768:;
		_case_begin_4736394736:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4736390576;
		_case_end_4736394736:;
		_match_end_4736390576:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_BinopSolver::_method_eval_fn(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4736409456; }
		_case_begin_4736409456:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4736401264;
		_case_end_4736409456:;
		_case_begin_4736405424:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4736401264;
		_case_end_4736405424:;
		_match_end_4736401264:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_BinopSolver::_method_eval_struct(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4736436656; }
		_case_begin_4736436656:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4736411952;
		_case_end_4736436656:;
		_case_begin_4736416112:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4736411952;
		_case_end_4736416112:;
		_match_end_4736411952:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_BinopSolver::_method_eval_trait(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4736447472; }
		_case_begin_4736447472:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4736439152;
		_case_end_4736447472:;
		_case_begin_4736443248:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4736439152;
		_case_end_4736443248:;
		_match_end_4736439152:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_BinopSolver::_method_eval_any(void) {
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4736453376; }
		_case_begin_4736453376:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4736450112;
		_case_end_4736453376:;
		_case_begin_4736447936:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return nullptr;
		}
		goto _match_end_4736450112;
		_case_end_4736447936:;
		_match_end_4736450112:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_BinopSolver::_method_eval_bool(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("&&", 2)) == _match_expr || (jule::Str("||", 2)) == _match_expr)) { goto _case_end_4736464496; }
		_case_begin_4736464496:;
		{
			return (*this)._field_l;
		}
		goto _match_end_4736456304;
		_case_end_4736464496:;
		_case_begin_4736460464:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4736456304;
		_case_end_4736460464:;
		_match_end_4736456304:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_BinopSolver::_method_eval_str(void) {
	jule::Str _372217_rk = (*this)._field_r->_field_kind->_method_to_str();
	if (_372217_rk != jule::Str("str", 3)) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any(_372217_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4736474496; }
		_case_begin_4736474496:;
		{
			return (*this)._field_l;
		}
		goto _match_end_4736467792;
		_case_end_4736474496:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4736471824; }
		_case_begin_4736471824:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4736467792;
		_case_end_4736471824:;
		_case_begin_4736471216:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return nullptr;
		}
		goto _match_end_4736467792;
		_case_end_4736471216:;
		_match_end_4736467792:;
	}
}



inline void _1e50ac4b1_BinopSolver::_method_set_type_to_greater(void) {
	if (((*this)._field_l->_method_is_const() && (*this)._field_r->_method_is_const()) || ((!((*this)._field_l->_method_is_const())) && (!((*this)._field_r->_method_is_const())))) {
		jule::Str _374817_lk = (*this)._field_l->_field_kind->_method_to_str();
		jule::Str _374917_rk = (*this)._field_r->_field_kind->_method_to_str();
		if (_1c8b9ddd2_is_greater(_374917_rk,_374817_lk)) {
			(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		}
		return;
	}
	if ((*this)._field_l->_method_is_const()) {
		(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		return;
	}
	(*this)._field_r->_field_kind=(*this)._field_l->_field_kind;
}



inline void _1e50ac4b1_BinopSolver::_method_check_mod_data(jule::Ptr<_1e50ac4b1_Data>& _376438_d) {
	if ((!(_376438_d->_method_is_const()))) {
		if ((_376438_d->_field_kind->_method_prim() == nullptr) || (!(_1c8c8ad04_is_int(_376438_d->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		}
		return;
	}
	{
		if (!((_1e522c29b_sig_assignable(jule::Str("i64", 3),_376438_d)))) { goto _case_end_4736494736; }
		_case_begin_4736494736:;
		{
			_376438_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_376438_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4736489840;
		_case_end_4736494736:;
		if (!((_1e522c29b_unsig_assignable(jule::Str("u64", 3),_376438_d)))) { goto _case_end_4736494832; }
		_case_begin_4736494832:;
		{
			_376438_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_376438_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4736489840;
		_case_end_4736494832:;
		_case_begin_4736489952:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		}
		goto _match_end_4736489840;
		_case_end_4736489952:;
		_match_end_4736489840:;
	}
}



inline void _1e50ac4b1_BinopSolver::_method_mod(void) {
	(*this)._method_check_mod_data((*this)._field_l);
	(*this)._method_check_mod_data((*this)._field_r);
}



inline jule::Bool _1e50ac4b1_BinopSolver::_method_numbers_are_compatibile(jule::Str& _378939_lk,jule::Str& _378949_rk) {
	if ((*this)._field_l->_method_is_const()) {
		return true;
	}
	if (_378939_lk == jule::Str("f32", 3)) {
		if ((*this)._field_r->_method_is_const()) {
			return true;
		}
		return _378949_rk == jule::Str("f32", 3);
	}
	if (_378939_lk == jule::Str("f64", 3)) {
		if ((*this)._field_r->_method_is_const()) {
			return true;
		}
		return _378949_rk == jule::Str("f64", 3);
	}
	if ((*this)._field_r->_method_is_const()) {
		if ((!((*this)._field_r->_field_constant->_method_is_f64()))) {
			return true;
		}
		{
			auto &_match_expr{ (*this)._field_r->_field_model };
			if (!(_match_expr.type_is<jule::Ptr<_1c8b9b83b_Const>>())) { goto _case_end_4736515456; }
			_case_begin_4736515456:;
			{
				return _1e522c29b_int_assignable(jule::Str("int", 3),(*this)._field_r) || _1e522c29b_int_assignable(jule::Str("uint", 4),(*this)._field_r);
			}
			goto _match_end_4736513952;
			_case_end_4736515456:;
			_case_begin_4736513472:;
			{
				return false;
			}
			goto _match_end_4736513952;
			_case_end_4736513472:;
			_match_end_4736513952:;
		}
	}
	return (!(_1c8c8ad04_is_float(_378949_rk)));
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_BinopSolver::_method_eval_float(void) {
	jule::Str _382813_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _382913_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_382813_lk,_382913_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_382813_lk),jule::Any(_382913_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4736524048; }
		_case_begin_4736524048:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4736524544;
		_case_end_4736524048:;
		_match_end_4736524544:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr)) { goto _case_end_4736530368; }
		_case_begin_4736530368:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4736525280;
		_case_end_4736530368:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4736530512; }
		_case_begin_4736530512:;
		{
			if ((!(_1c8c8ad04_is_int(_382913_rk)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_382813_lk),jule::Any(_382913_rk)}));
				return nullptr;
			}
			(*this)._method_mod();
			return (*this)._field_r;
		}
		goto _match_end_4736525280;
		_case_end_4736530512:;
		_case_begin_4736527408:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return nullptr;
		}
		goto _match_end_4736525280;
		_case_end_4736527408:;
		_match_end_4736525280:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_BinopSolver::_method_eval_unsig_int(void) {
	jule::Str _387413_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _387513_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_387413_lk,_387513_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_387413_lk),jule::Any(_387513_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4736542624; }
		_case_begin_4736542624:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4736539840;
		_case_end_4736542624:;
		_match_end_4736539840:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4736547856; }
		_case_begin_4736547856:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4736544400;
		_case_end_4736547856:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4736547984; }
		_case_begin_4736547984:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4736544400;
		_case_end_4736547984:;
		if (!((jule::Str("<<", 2)) == _match_expr || (jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4736548080; }
		_case_begin_4736548080:;
		{
			if ((!(_1e50ac4b1_is_ok_for_shifting((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
				return nullptr;
			}
			if ((*this)._field_l->_method_is_const()) {
				(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
			}
			return (*this)._field_l;
		}
		goto _match_end_4736544400;
		_case_end_4736548080:;
		_case_begin_4736544240:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for unsigned integer type(s)", 54),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return nullptr;
		}
		goto _match_end_4736544400;
		_case_end_4736544240:;
		_match_end_4736544400:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_BinopSolver::_method_eval_sig_int(void) {
	jule::Str _393313_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _393413_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_393313_lk,_393413_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_393313_lk),jule::Any(_393413_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4736565024; }
		_case_begin_4736565024:;
		{
			return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
		}
		goto _match_end_4736564944;
		_case_end_4736565024:;
		_match_end_4736564944:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4736570816; }
		_case_begin_4736570816:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4736565792;
		_case_end_4736570816:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4736570944; }
		_case_begin_4736570944:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4736565792;
		_case_end_4736570944:;
		if (!((jule::Str("<<", 2)) == _match_expr || (jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4736571040; }
		_case_begin_4736571040:;
		{
			if ((!(_1e50ac4b1_is_ok_for_shifting((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
				return nullptr;
			}
			return (*this)._field_l;
		}
		goto _match_end_4736565792;
		_case_end_4736571040:;
		_case_begin_4736568272:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for integer type(s)", 45),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return nullptr;
		}
		goto _match_end_4736565792;
		_case_end_4736568272:;
		_match_end_4736565792:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_BinopSolver::_method_eval_prim(void) {
	jule::Ptr<_1e6420856_Prim> _398813_prim = (*this)._field_l->_field_kind->_method_prim();
	{
		if (!((_398813_prim->_method_is_bool()))) { goto _case_end_4736580144; }
		_case_begin_4736580144:;
		{
			return (*this)._method_eval_bool();
		}
		goto _match_end_4736579984;
		_case_end_4736580144:;
		if (!((_398813_prim->_method_is_str()))) { goto _case_end_4736580256; }
		_case_begin_4736580256:;
		{
			return (*this)._method_eval_str();
		}
		goto _match_end_4736579984;
		_case_end_4736580256:;
		_match_end_4736579984:;
	}
	jule::Ptr<_1e6420856_Prim> _399413_rprim = (*this)._field_r->_field_kind->_method_prim();
	if (_399413_rprim == nullptr) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_398813_prim->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	jule::Str _400013_lk = _398813_prim->_method_to_str();
	{
		if (!((_1c8c8ad04_is_float(_400013_lk)))) { goto _case_end_4736590080; }
		_case_begin_4736590080:;
		{
			return (*this)._method_eval_float();
		}
		goto _match_end_4736588560;
		_case_end_4736590080:;
		if (!((_1c8c8ad04_is_unsig_int(_400013_lk)))) { goto _case_end_4736590208; }
		_case_begin_4736590208:;
		{
			return (*this)._method_eval_unsig_int();
		}
		goto _match_end_4736588560;
		_case_end_4736590208:;
		if (!((_1c8c8ad04_is_sig_int(_400013_lk)))) { goto _case_end_4736590320; }
		_case_begin_4736590320:;
		{
			return (*this)._method_eval_sig_int();
		}
		goto _match_end_4736588560;
		_case_end_4736590320:;
		_case_begin_4736588672:;
		{
			return nullptr;
		}
		goto _match_end_4736588560;
		_case_end_4736588672:;
		_match_end_4736588560:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_BinopSolver::_method_eval(void) {
	{
		if (!(((*this)._field_l->_field_kind->_method_void()))) { goto _case_end_4736595728; }
		_case_begin_4736595728:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("void", 4))}));
			return nullptr;
		}
		goto _match_end_4736594208;
		_case_end_4736595728:;
		if (!((((*this)._field_r->_field_kind->_method_prim() != nullptr) && (*this)._field_r->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_4736595920; }
		_case_begin_4736595920:;
		{
			std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
			goto _case_begin_4736596016;
		}
		goto _match_end_4736594208;
		_case_end_4736595920:;
		if (!((((*this)._field_l->_field_kind->_method_prim() != nullptr) && (*this)._field_l->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_4736596016; }
		_case_begin_4736596016:;
		{
			return (*this)._method_eval_any();
		}
		goto _match_end_4736594208;
		_case_end_4736596016:;
		if (!(((*this)._field_l->_field_kind->_method_is_nil()))) { goto _case_end_4736594672; }
		_case_begin_4736594672:;
		{
			return (*this)._method_eval_nil();
		}
		goto _match_end_4736594208;
		_case_end_4736594672:;
		if (!(((*this)._field_l->_field_kind->_method_enm() != nullptr))) { goto _case_end_4736594768; }
		_case_begin_4736594768:;
		{
			return (*this)._method_eval_enum();
		}
		goto _match_end_4736594208;
		_case_end_4736594768:;
		if (!(((*this)._field_r->_field_kind->_method_sptr() != nullptr))) { goto _case_end_4736594864; }
		_case_begin_4736594864:;
		{
			std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
			goto _case_begin_4736594960;
		}
		goto _match_end_4736594208;
		_case_end_4736594864:;
		if (!(((*this)._field_l->_field_kind->_method_sptr() != nullptr))) { goto _case_end_4736594960; }
		_case_begin_4736594960:;
		{
			return (*this)._method_eval_sptr();
		}
		goto _match_end_4736594208;
		_case_end_4736594960:;
		if (!(((*this)._field_r->_field_kind->_method_ptr() != nullptr))) { goto _case_end_4736596144; }
		_case_begin_4736596144:;
		{
			std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
			goto _case_begin_4736596240;
		}
		goto _match_end_4736594208;
		_case_end_4736596144:;
		if (!(((*this)._field_l->_field_kind->_method_ptr() != nullptr))) { goto _case_end_4736596240; }
		_case_begin_4736596240:;
		{
			return (*this)._method_eval_ptr();
		}
		goto _match_end_4736594208;
		_case_end_4736596240:;
		if (!(((*this)._field_l->_field_kind->_method_arr() != nullptr))) { goto _case_end_4736596336; }
		_case_begin_4736596336:;
		{
			return (*this)._method_eval_arr();
		}
		goto _match_end_4736594208;
		_case_end_4736596336:;
		if (!(((*this)._field_l->_field_kind->_method_slc() != nullptr))) { goto _case_end_4736596432; }
		_case_begin_4736596432:;
		{
			return (*this)._method_eval_slc();
		}
		goto _match_end_4736594208;
		_case_end_4736596432:;
		if (!(((*this)._field_l->_field_kind->_method_fnc() != nullptr))) { goto _case_end_4736596528; }
		_case_begin_4736596528:;
		{
			return (*this)._method_eval_fn();
		}
		goto _match_end_4736594208;
		_case_end_4736596528:;
		if (!(((*this)._field_r->_field_kind->_method_trt() != nullptr))) { goto _case_end_4736596624; }
		_case_begin_4736596624:;
		{
			std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
			goto _case_begin_4736596720;
		}
		goto _match_end_4736594208;
		_case_end_4736596624:;
		if (!(((*this)._field_l->_field_kind->_method_trt() != nullptr))) { goto _case_end_4736596720; }
		_case_begin_4736596720:;
		{
			return (*this)._method_eval_trait();
		}
		goto _match_end_4736594208;
		_case_end_4736596720:;
		if (!(((*this)._field_l->_field_kind->_method_strct() != nullptr))) { goto _case_end_4736596816; }
		_case_begin_4736596816:;
		{
			return (*this)._method_eval_struct();
		}
		goto _match_end_4736594208;
		_case_end_4736596816:;
		if (!(((*this)._field_l->_field_kind->_method_prim() != nullptr))) { goto _case_end_4736596928; }
		_case_begin_4736596928:;
		{
			return (*this)._method_eval_prim();
		}
		goto _match_end_4736594208;
		_case_end_4736596928:;
		_case_begin_4736594384:;
		{
			return nullptr;
		}
		goto _match_end_4736594208;
		_case_end_4736594384:;
		_match_end_4736594208:;
	}
}



inline void _1e50ac4b1_BinopSolver::_method_solve_const(jule::Ptr<_1e50ac4b1_Data>& _406535_d) {
	{
		if (!((_406535_d == nullptr))) { goto _case_end_4736633296; }
		_case_begin_4736633296:;
		{
			return;
		}
		goto _match_end_4736633072;
		_case_end_4736633296:;
		if (!(((!((*this)._field_l->_method_is_const()))) || ((!((*this)._field_r->_method_is_const()))))) { goto _case_end_4736633408; }
		_case_begin_4736633408:;
		{
			_406535_d->_field_constant=nullptr;
			return;
		}
		goto _match_end_4736633072;
		_case_end_4736633408:;
		_match_end_4736633072:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr)) { goto _case_end_4736635472; }
		_case_begin_4736635472:;
		{
			_406535_d->_field_constant=_1c8b9b83b_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_eqs((*((*this)._field_r->_field_constant))));
		}
		goto _match_end_4736635600;
		_case_end_4736635472:;
		if (!((jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4736635984; }
		_case_begin_4736635984:;
		{
			_406535_d->_field_constant=_1c8b9b83b_Const::_static_method_new_bool((!((*this)._field_l->_field_constant->_method_eqs((*((*this)._field_r->_field_constant))))));
		}
		goto _match_end_4736635600;
		_case_end_4736635984:;
		if (!((jule::Str("::", 2)) == _match_expr)) { goto _case_end_4736636080; }
		_case_begin_4736636080:;
		{
			_406535_d->_field_constant=_1c8b9b83b_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_or((*((*this)._field_r->_field_constant))));
		}
		goto _match_end_4736635600;
		_case_end_4736636080:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4736637184; }
		_case_begin_4736637184:;
		{
			_406535_d->_field_constant=_1c8b9b83b_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_and((*((*this)._field_r->_field_constant))));
		}
		goto _match_end_4736635600;
		_case_end_4736637184:;
		if (!((jule::Str(">", 1)) == _match_expr)) { goto _case_end_4736637296; }
		_case_begin_4736637296:;
		{
			_406535_d->_field_constant=_1c8b9b83b_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_gt((*((*this)._field_r->_field_constant))));
		}
		goto _match_end_4736635600;
		_case_end_4736637296:;
		if (!((jule::Str("<", 1)) == _match_expr)) { goto _case_end_4736637408; }
		_case_begin_4736637408:;
		{
			_406535_d->_field_constant=_1c8b9b83b_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_lt((*((*this)._field_r->_field_constant))));
		}
		goto _match_end_4736635600;
		_case_end_4736637408:;
		if (!((jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4736637520; }
		_case_begin_4736637520:;
		{
			_406535_d->_field_constant=_1c8b9b83b_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_gt((*((*this)._field_r->_field_constant))) || (*this)._field_l->_field_constant->_method_eqs((*((*this)._field_r->_field_constant))));
		}
		goto _match_end_4736635600;
		_case_end_4736637520:;
		if (!((jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4736637632; }
		_case_begin_4736637632:;
		{
			_406535_d->_field_constant=_1c8b9b83b_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_lt((*((*this)._field_r->_field_constant))) || (*this)._field_l->_field_constant->_method_eqs((*((*this)._field_r->_field_constant))));
		}
		goto _match_end_4736635600;
		_case_end_4736637632:;
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4736637744; }
		_case_begin_4736637744:;
		{
			(*this)._field_l->_field_constant->_method_add((*((*this)._field_r->_field_constant)));
			_406535_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4736635600;
		_case_end_4736637744:;
		if (!((jule::Str("-", 1)) == _match_expr)) { goto _case_end_4736637856; }
		_case_begin_4736637856:;
		{
			(*this)._field_l->_field_constant->_method_sub((*((*this)._field_r->_field_constant)));
			_406535_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4736635600;
		_case_end_4736637856:;
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4736637968; }
		_case_begin_4736637968:;
		{
			(*this)._field_l->_field_constant->_method_mul((*((*this)._field_r->_field_constant)));
			_406535_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4736635600;
		_case_end_4736637968:;
		if (!((jule::Str("/", 1)) == _match_expr)) { goto _case_end_4736638080; }
		_case_begin_4736638080:;
		{
			jule::Bool _411817_ok = (*this)._field_l->_field_constant->_method_div((*((*this)._field_r->_field_constant)));
			if ((!(_411817_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
			}
			_406535_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4736635600;
		_case_end_4736638080:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4736638192; }
		_case_begin_4736638192:;
		{
			jule::Bool _412517_ok = (*this)._field_l->_field_constant->_method_mod((*((*this)._field_r->_field_constant)));
			if ((!(_412517_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
			}
			_406535_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4736635600;
		_case_end_4736638192:;
		if (!((jule::Str("|", 1)) == _match_expr)) { goto _case_end_4736638304; }
		_case_begin_4736638304:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_or((*((*this)._field_r->_field_constant)));
			_406535_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4736635600;
		_case_end_4736638304:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4736638416; }
		_case_begin_4736638416:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_and((*((*this)._field_r->_field_constant)));
			_406535_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4736635600;
		_case_end_4736638416:;
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4736638528; }
		_case_begin_4736638528:;
		{
			(*this)._field_l->_field_constant->_method_xor((*((*this)._field_r->_field_constant)));
			_406535_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4736635600;
		_case_end_4736638528:;
		if (!((jule::Str("<<", 2)) == _match_expr)) { goto _case_end_4736638640; }
		_case_begin_4736638640:;
		{
			(*this)._field_l->_field_constant->_method_lshift((*((*this)._field_r->_field_constant)));
			_406535_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4736635600;
		_case_end_4736638640:;
		if (!((jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4736638752; }
		_case_begin_4736638752:;
		{
			(*this)._field_l->_field_constant->_method_rshift((*((*this)._field_r->_field_constant)));
			_406535_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4736635600;
		_case_end_4736638752:;
		_match_end_4736635600:;
	}
	_406535_d->_field_model=jule::Any(_406535_d->_field_constant);
}



inline void _1e50ac4b1_BinopSolver::_method_post_const(jule::Ptr<_1e50ac4b1_Data>& _415530_d) {
	if (_415530_d == nullptr) {
		return;
	}
	_1e50ac4b1_normalize_bitsize(_415530_d);
}



inline void _1e50ac4b1_BinopSolver::_method_check_data(jule::Ptr<_1e50ac4b1_Data>& _416334_d) {
	jule::Ptr<_1e4b15a20_FnIns> _416413_f = _416334_d->_field_kind->_method_fnc();
	if (((_416413_f != nullptr) && (_416413_f->_field_decl != nullptr)) && _416413_f->_field_decl->_method_is_method()) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	}
}



inline void _1e50ac4b1_BinopSolver::_method_check_datas(void) {
	(*this)._method_check_data((*this)._field_l);
	(*this)._method_check_data((*this)._field_r);
}



inline void _1e50ac4b1_BinopSolver::_method_set_model(jule::Ptr<_1e50ac4b1_Data>& _417533_d) {
	if (_417533_d->_method_is_const()) {
		return;
	}
	jule::Ptr<_1e50ac4b1_Data> _418018_l = (*this)._field_l;
	jule::Ptr<_1e50ac4b1_Data> _418025_r = (*this)._field_r;
	std::tie(_418018_l,_418025_r) = std::make_tuple((*this)._field_l,(*this)._field_r);
	{
		if (!((((*this)._field_r->_field_kind->_method_prim() != nullptr) && (*this)._field_r->_field_kind->_method_prim()->_method_is_any()) || ((*this)._field_l->_field_kind->_method_is_nil()) || ((*this)._field_r->_field_kind->_method_trt() != nullptr))) { goto _case_end_4736708336; }
		_case_begin_4736708336:;
		{
			std::tie(_418018_l,_418025_r) = std::make_tuple(_418025_r,_418018_l);
		}
		goto _match_end_4736708256;
		_case_end_4736708336:;
		_match_end_4736708256:;
	}
	_417533_d->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_BinopExprModel>(new( std::nothrow ) _1e4d70a6b_BinopExprModel(_418018_l->_field_model,_418025_r->_field_model,(*this)._field_op._field_kind)));
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_BinopSolver::_method_solve_explicit(jule::Ptr<_1e50ac4b1_Data>& _419538_l,jule::Ptr<_1e50ac4b1_Data>& _419553_r) {
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_419538_l,_419553_r);
	(*this)._method_check_datas();
	jule::Ptr<_1e50ac4b1_Data> _420017_d = (*this)._method_eval();
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_419538_l,_419553_r);
	(*this)._method_solve_const(_420017_d);
	(*this)._method_post_const(_420017_d);
	if (_420017_d != nullptr) {
		_420017_d->_field_lvalue=false;
		(*this)._method_set_model(_420017_d);
	}
	return _420017_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_BinopSolver::_method_solve(jule::Ptr<_1e38d4ec7_BinopExpr>& _421529_op) {
	jule::Ptr<_1e50ac4b1_Data> _421617_l = (*this)._field_e->_method_eval_expr_kind(_421529_op->_field_left);
	if ((_421617_l == nullptr) || (_421617_l->_field_kind == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1e50ac4b1_Data> _422117_r = (*this)._field_e->_method_eval_expr_kind(_421529_op->_field_right);
	if ((_422117_r == nullptr) || (_422117_r->_field_kind == nullptr)) {
		return nullptr;
	}
	(*this)._field_op=_421529_op->_field_op;
	jule::Ptr<_1e50ac4b1_Data> _422817_d = (*this)._method_solve_explicit(_421617_l,_422117_r);
	if (((_422817_d != nullptr) && _421617_l->_field_is_rune) && _422117_r->_field_is_rune) {
		_422817_d->_field_is_rune=true;
	}
	return _422817_d;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e50ac4b1_BinopSolver &_Src) {
	_Stream << "BinopSolver{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e6420856_TypeAlias &_Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "refers:" << _Src._field_refers;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_AssignLeft &_Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_AssignSt &_Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_Comment &_Src) {
	_Stream << "Comment{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e38d4ec7_ParamDecl::_method_is_self(void) {
	return (*this)._field_ident.has_suffix(jule::Str("self", 4));
}



inline jule::Bool _1e38d4ec7_ParamDecl::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str()) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_ParamDecl &_Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e38d4ec7_FnDecl::_method_is_anon(void) {
	return (*this)._field_ident == jule::Str("<anonymous>", 11);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_FnDecl &_Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_VarDecl &_Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e38d4ec7_Iter::_method_is_inf(void) {
	return (*this)._field_kind == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_Iter &_Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e38d4ec7_WhileKind::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_WhileKind &_Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}



inline void _1e6420856_TypeChecker::_method_push_err(_1e3bad8dd_Token _68427_token,jule::Str _68441_fmt,jule::Slice<jule::Any> _68454_args) {
	(*this)._field_s->_method_push_err(_68427_token,_68441_fmt,_68454_args);
}



inline jule::Ptr<_1e6420856_Prim> _1e6420856_TypeChecker::_method_build_prim(jule::Ptr<_1e38d4ec7_IdentTypeDecl>& _68830_decl) {
	if ((!(_1e6420856_is_prim(_68830_decl->_field_ident)))) {
		(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_68830_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_68830_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_68830_decl->_field_ident)}));
		return nullptr;
	}
	return _1e6420856_build_prim_type(_68830_decl->_field_ident);
}



inline void _1e6420856_TypeChecker::_method_push_cycle_error(jule::Any _70231_def1,jule::Any _70242_def2,jule::Str& _70258_message) {
	
	jule::Fn<jule::Str(jule::Any&)> _70513_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _70529_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _70529_def };
			if (!(_match_expr.type_is<jule::Ptr<_1e6420856_TypeAlias>>())) { goto _case_end_4737649248; }
			_case_begin_4737649248:;
			{
				return _70529_def.operator jule::Ptr<_1e6420856_TypeAlias>()->_field_ident;
			}
			goto _match_end_4737647744;
			_case_end_4737649248:;
			if (!(_match_expr.type_is<jule::Ptr<_1e398ee72_Struct>>())) { goto _case_end_4737649440; }
			_case_begin_4737649440:;
			{
				return _70529_def.operator jule::Ptr<_1e398ee72_Struct>()->_field_ident;
			}
			goto _match_end_4737647744;
			_case_end_4737649440:;
			if (!(_match_expr.type_is<jule::Ptr<_1e4d62387_Enum>>())) { goto _case_end_4737649536; }
			_case_begin_4737649536:;
			{
				return _70529_def.operator jule::Ptr<_1e4d62387_Enum>()->_field_ident;
			}
			goto _match_end_4737647744;
			_case_end_4737649536:;
			_case_begin_4737647552:;
			{
				return jule::Str();
			}
			goto _match_end_4737647744;
			_case_end_4737647552:;
			_match_end_4737647744:;
		}
	});
	jule::Str _71413_def1_ident = _70513_get_ident(_70231_def1);
	jule::Str _71513_def2_ident = _70513_get_ident(_70242_def2);
	jule::Str _71613_refers_to = _1e24777a2_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_71413_def1_ident),jule::Any(_71513_def2_ident)}));
	_70258_message=((_1e4cc167b_str_repeat(jule::Str(" ", 1),4LL) + _71613_refers_to) + jule::Str("\n", 1)) + _70258_message;
}



inline jule::Bool _1e6420856_TypeChecker::_method_check_cross_cycle(jule::Any _72032_decl,jule::Str& _72048_message) {
	{
		auto &_match_expr{ _72032_decl };
		if (!(_match_expr.type_is<jule::Ptr<_1e6420856_TypeAlias>>())) { goto _case_end_4737658368; }
		_case_begin_4737658368:;
		{
			jule::Ptr<_1e6420856_TypeAlias> _72317_ta = _72032_decl.operator jule::Ptr<_1e6420856_TypeAlias>();
			{
				auto &expr = _72317_ta->_field_refers;
				auto it = expr.begin();
				_iter_begin_4737661696:;
				if (it != expr.end()) {
					jule::Any &_1e6420856_d = *it;
					{
						if (_1e6420856_d == (*this)._field_referencer->_field_owner) {
							(*this)._method_push_cycle_error(jule::Any(_72317_ta),_1e6420856_d,_72048_message);
							return false;
						}
						if ((!((*this)._method_check_cross_cycle(_1e6420856_d,_72048_message)))) {
							(*this)._method_push_cycle_error(jule::Any(_72317_ta),_1e6420856_d,_72048_message);
							return false;
						}
					}
					_iter_next_4737661696:;
					++it;
					goto _iter_begin_4737661696;
				}
				_iter_end_4737661696:;
			}
		}
		goto _match_end_4737658464;
		_case_end_4737658368:;
		if (!(_match_expr.type_is<jule::Ptr<_1e398ee72_Struct>>())) { goto _case_end_4737658784; }
		_case_begin_4737658784:;
		{
			jule::Ptr<_1e398ee72_Struct> _73717_s = _72032_decl.operator jule::Ptr<_1e398ee72_Struct>();
			{
				auto &expr = _73717_s->_field_depends;
				auto it = expr.begin();
				_iter_begin_4737668576:;
				if (it != expr.end()) {
					jule::Ptr<_1e398ee72_Struct> &_1e6420856_d = *it;
					{
						if ((*this)._field_referencer->_field_owner == _1e6420856_d) {
							(*this)._method_push_cycle_error(jule::Any(_73717_s),jule::Any(_1e6420856_d),_72048_message);
							return false;
						}
						if ((!((*this)._method_check_cross_cycle(jule::Any(_1e6420856_d),_72048_message)))) {
							(*this)._method_push_cycle_error(jule::Any(_73717_s),jule::Any(_1e6420856_d),_72048_message);
							return false;
						}
					}
					_iter_next_4737668576:;
					++it;
					goto _iter_begin_4737668576;
				}
				_iter_end_4737668576:;
			}
		}
		goto _match_end_4737658464;
		_case_end_4737658784:;
		_match_end_4737658464:;
	}
	return true;
}



inline jule::Bool _1e6420856_TypeChecker::_method_check_illegal_cycles(jule::Ptr<_1e38d4ec7_IdentTypeDecl>& _75840_ident,jule::Any _75867_decl) {
	jule::Bool _75880_ok = jule::Bool();
	if ((*this)._field_referencer == nullptr) {
		_75880_ok = true;
		return _75880_ok;
	}
	{
		auto &_match_expr{ _75867_decl };
		if (!(_match_expr.type_is<jule::Ptr<_1e398ee72_Struct>>())) { goto _case_end_4737678208; }
		_case_begin_4737678208:;
		{
			if ((*this)._field_not_plain) {
				_75880_ok = true;
				return _75880_ok;
			}
		}
		goto _match_end_4737678592;
		_case_end_4737678208:;
		_match_end_4737678592:;
	}
	if (_75867_decl == (*this)._field_referencer->_field_owner) {
		(*this)._method_push_err(_75840_ident->_field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*this)._field_referencer->_field_ident)}));
		_75880_ok = false;
		return _75880_ok;
	}
	jule::Str _77717_message = jule::Str();
	if ((!((*this)._method_check_cross_cycle(_75867_decl,_77717_message)))) {
		jule::Str _78021_err_msg = _77717_message;
		_77717_message=jule::Str();
		(*this)._method_push_cycle_error((*this)._field_referencer->_field_owner,_75867_decl,_77717_message);
		_78021_err_msg=_78021_err_msg + _77717_message;
		(*this)._method_push_err(_75840_ident->_field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_78021_err_msg)}));
		_75880_ok = false;
		return _75880_ok;
	}
	{
		auto &_match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ptr<_1e6420856_TypeAlias>>())) { goto _case_end_4737685040; }
		_case_begin_4737685040:;
		{
			{
				(*((*this)._field_referencer->_field_refs))=jule::append((*((*this)._field_referencer->_field_refs)),jule::Slice<jule::Any>({_75867_decl}));
			}
		}
		goto _match_end_4737683632;
		_case_end_4737685040:;
		if (!(_match_expr.type_is<jule::Ptr<_1e398ee72_Struct>>())) { goto _case_end_4737683712; }
		_case_begin_4737683712:;
		{
			{
				auto &_match_expr{ _75867_decl };
				if (!(_match_expr.type_is<jule::Ptr<_1e398ee72_Struct>>())) { goto _case_end_4737689184; }
				_case_begin_4737689184:;
				{
					jule::Ptr<_1e398ee72_Struct> _79525_s = (*this)._field_referencer->_field_owner.operator jule::Ptr<_1e398ee72_Struct>();
					_79525_s->_field_depends = jule::alloc_for_append(_79525_s->_field_depends,1);_79525_s->_field_depends.push(_75867_decl.operator jule::Ptr<_1e398ee72_Struct>());
				}
				goto _match_end_4737693200;
				_case_end_4737689184:;
				_match_end_4737693200:;
			}
		}
		goto _match_end_4737683632;
		_case_end_4737683712:;
		_match_end_4737683632:;
	}
	_75880_ok = true;
	return _75880_ok;
}



inline jule::Trait<_1e6420856_Kind> _1e6420856_TypeChecker::_method_from_type_alias(jule::Ptr<_1e38d4ec7_IdentTypeDecl>& _80335_decl,jule::Ptr<_1e6420856_TypeAlias>& _80362_ta) {
	if ((!((*this)._field_s->_method_is_accessible_define(_80362_ta->_field_public,_80362_ta->_field_token)))) {
		(*this)._method_push_err(_80335_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_80335_decl->_field_ident)}));
		return nullptr;
	}
	_80362_ta->_field_used=true;
	if (_80335_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_80335_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_80335_decl->_field_ident)}));
		return nullptr;
	}
	jule::Bool _81617_ok = (*this)._method_check_illegal_cycles(_80335_decl,jule::Any(_80362_ta));
	if ((!(_81617_ok))) {
		return nullptr;
	}
	_81617_ok=(*this)._field_s->_method_check_type_alias_decl_kind(_80362_ta,(*this)._field_lookup);
	if ((!(_81617_ok))) {
		return nullptr;
	}
	jule::Ptr<_1e6420856_TypeKind> _82717_kind = _80362_ta->_field_kind->_field_kind->_method_clone();
	_82717_kind->_field_generic=_80362_ta->_field_generic;
	if (_80362_ta->_field_cpp_linked) {
		_82717_kind->_field_cpp_ident=_80362_ta->_field_ident;
	}
	return _82717_kind;
}



inline jule::Ptr<_1e4d62387_Enum> _1e6420856_TypeChecker::_method_from_enum(jule::Ptr<_1e38d4ec7_IdentTypeDecl>& _83729_decl,jule::Ptr<_1e4d62387_Enum>& _83756_e) {
	if ((!((*this)._field_s->_method_is_accessible_define(_83756_e->_field_public,_83756_e->_field_token)))) {
		(*this)._method_push_err(_83729_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_83729_decl->_field_ident)}));
		return nullptr;
	}
	if (_83729_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_83729_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_83729_decl->_field_ident)}));
		return nullptr;
	}
	return _83756_e;
}



inline jule::Bool _1e6420856_TypeChecker::_method_check_struct_ins(jule::Ptr<_1e398ee72_StructIns>& _85140_ins,_1e3bad8dd_Token& _85158_error_token) {
	jule::Bool _85180_ok = jule::Bool();
	if (_85140_ins->_field_checked) {
		_85180_ok = true;
		return _85180_ok;
	}
	_85140_ins->_field_checked=true;
	if (((*this)._field_referencer != nullptr) && ((*this)._field_referencer->_field_owner == _85140_ins->_field_decl)) {
		_85180_ok = true;
		return _85180_ok;
	}
	jule::Ptr<_1e5291035_SymbolTable> _86517_old_file = (*this)._field_s->_field_file;
	__JULE_DEFER({
		(*this)._field_s->_method_set_current_file(_86517_old_file);
	});
	jule::Ptr<_1e5291035_SymbolTable> _86817_file = _1e5054722_find_file((*this)._field_s->_field_files,_85140_ins->_field_decl->_field_token._field_file);
	if (_86817_file != nullptr) {
		(*this)._field_s->_method_set_current_file(_86817_file);
	}
	jule::Ptr<_1e6420856_Referencer> _87317_referencer = jule::new_struct<_1e6420856_Referencer>(new( std::nothrow ) _1e6420856_Referencer(_85140_ins->_field_decl->_field_ident,jule::Any(_85140_ins->_field_decl),nullptr));
	jule::Slice<jule::Ptr<_1e6420856_TypeAlias>> _87817_generics = jule::Slice<jule::Ptr<_1e6420856_TypeAlias>>::alloc(0LL,static_cast<jule::I64>(_85140_ins->_field_generics.len()));
	{
		auto &expr = _85140_ins->_field_generics;
		auto it = expr.begin();
		_iter_begin_4737737616:;
		if (it != expr.end()) {
			jule::Int _1e6420856_i = it - expr.begin();
			jule::Ptr<_1e6420856_TypeKind> _1e6420856_g = *it;
			{
				_87817_generics.push(jule::new_struct<_1e6420856_TypeAlias>(new( std::nothrow ) _1e6420856_TypeAlias(jule::Ptr<_1e38d4ec7_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_1e3bad8dd_Token(),_85140_ins->_field_decl->_field_generics[_1e6420856_i]->_field_ident,jule::new_struct<_1e6420856_TypeSymbol>(new( std::nothrow ) _1e6420856_TypeSymbol(jule::Ptr<_1e38d4ec7_TypeDecl>(),_1e6420856_g)),jule::Str(),jule::Slice<jule::Any>())));
			}
			_iter_next_4737737616:;
			++it;
			_1e6420856_i++;
			goto _iter_begin_4737737616;
		}
		_iter_end_4737737616:;
	}
	jule::Ptr<_1e5291035_SymbolTable> _88817_old_sema_file = _85140_ins->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_85140_ins->_field_decl->_field_sema->_method_set_current_file(_88817_old_sema_file);
	});
	_1e6420856_TypeChecker _89117_tc = _1e6420856_TypeChecker(_85140_ins->_field_decl->_field_sema,_85140_ins->_field_decl->_field_sema,_87317_referencer,_1e3bad8dd_Token(),jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>>(),_87817_generics,jule::Bool());
	{
		auto &expr = _85140_ins->_field_fields;
		auto it = expr.begin();
		_iter_begin_4737747568:;
		if (it != expr.end()) {
			jule::Ptr<_1e398ee72_FieldIns> _1e6420856_field = *it;
			{
				jule::Ptr<_1e6420856_TypeKind> _90021_kind = _89117_tc._method_check_decl(_1e6420856_field->_field_decl->_field_kind->_field_decl);
				_85180_ok=_90021_kind != nullptr;
				if (((_85140_ins->_field_decl->_field_sema != nullptr) && ((*this)._field_s != _85140_ins->_field_decl->_field_sema)) && (_85140_ins->_field_decl->_field_sema->_field_errors.len() > 0LL)) {
					(*this)._field_s->_field_errors=jule::append((*this)._field_s->_field_errors,_85140_ins->_field_decl->_field_sema->_field_errors);
				}
				if ((!(_85180_ok))) {
					_85180_ok = false;
					return _85180_ok;
				}
				_1e6420856_field->_field_kind=_90021_kind;
				if (_1e6420856_field->_field_kind->_method_mutable()) {
					_85140_ins->_field_mutable=true;
					(*this)._field_s->_method_check_struct_ins_derive_clone(_85140_ins);
				}
			}
			_iter_next_4737747568:;
			++it;
			goto _iter_begin_4737747568;
		}
		_iter_end_4737747568:;
	}
	if (_85140_ins->_field_generics.len() > 0LL) {
		{
			auto &expr = _85140_ins->_field_methods;
			auto it = expr.begin();
			_iter_begin_4737758976:;
			if (it != expr.end()) {
				jule::Ptr<_1e4b15a20_Fn> _1e6420856_m = *it;
				{
					(*this)._field_s->_method_check_type_method(_85140_ins,_1e6420856_m);
				}
				_iter_next_4737758976:;
				++it;
				goto _iter_begin_4737758976;
			}
			_iter_end_4737758976:;
		}
	}
	_85180_ok = true;
	return _85180_ok;
}



inline void _1e6420856_TypeChecker::_method_append_used_struct_reference(jule::Ptr<_1e398ee72_Struct>& _92752_s) {
	if ((*this)._field_referencer == nullptr) {
		return;
	}
	{
		auto &_match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ptr<_1e398ee72_Struct>>())) { goto _case_end_4737762976; }
		_case_begin_4737762976:;
		{
			jule::Ptr<_1e398ee72_Struct> _93421_ref_s = (*this)._field_referencer->_field_owner.operator jule::Ptr<_1e398ee72_Struct>();
			if ((!(_93421_ref_s->_method_is_uses(_92752_s)))) {
				_93421_ref_s->_field_uses = jule::alloc_for_append(_93421_ref_s->_field_uses,1);_93421_ref_s->_field_uses.push(_92752_s);
			}
		}
		goto _match_end_4737763712;
		_case_end_4737762976:;
		_match_end_4737763712:;
	}
}



inline jule::Ptr<_1e398ee72_StructIns> _1e6420856_TypeChecker::_method_from_struct(jule::Ptr<_1e38d4ec7_IdentTypeDecl>& _94135_decl,jule::Ptr<_1e398ee72_Struct>& _94162_s) {
	if ((!((*this)._field_s->_method_is_accessible_define(_94162_s->_field_public,_94162_s->_field_token)))) {
		(*this)._method_push_err(_94135_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_94135_decl->_field_ident)}));
		return nullptr;
	}
	if ((*this)._field_ignore_generics.len() > 0LL) {
		return nullptr;
	}
	jule::Bool _95217_ok = (*this)._field_not_plain || (*this)._method_check_illegal_cycles(_94135_decl,jule::Any(_94162_s));
	if ((!(_95217_ok))) {
		return nullptr;
	}
	(*this)._method_append_used_struct_reference(_94162_s);
	jule::Ptr<_1e398ee72_StructIns> _95817_ins = _94162_s->_method_instance();
	_95817_ins->_field_generics=jule::Slice<jule::Ptr<_1e6420856_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_94135_decl->_field_generics.len()));
	jule::Ptr<_1e6420856_Referencer> _96017_referencer = (*this)._field_referencer;
	(*this)._field_referencer=nullptr;
	{
		auto &expr = _94135_decl->_field_generics;
		auto it = expr.begin();
		_iter_begin_4737782080:;
		if (it != expr.end()) {
			jule::Ptr<_1e38d4ec7_TypeDecl> _1e6420856_g = *it;
			{
				jule::Ptr<_1e6420856_TypeKind> _96321_kind = (*this)._method_build(_1e6420856_g->_field_kind);
				if (_96321_kind == nullptr) {
					_95217_ok=false;
					goto _iter_next_4737782080;
				}
				_95817_ins->_field_generics = jule::alloc_for_append(_95817_ins->_field_generics,1);_95817_ins->_field_generics.push(_96321_kind);
			}
			_iter_next_4737782080:;
			++it;
			goto _iter_begin_4737782080;
		}
		_iter_end_4737782080:;
	}
	(*this)._field_referencer=_96017_referencer;
	if ((!(_95217_ok))) {
		return nullptr;
	}
	_95217_ok=(*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_95817_ins->_field_decl->_field_generics.len()),static_cast<jule::I64>(_95817_ins->_field_generics.len()),_94135_decl->_field_token);
	if ((!(_95217_ok))) {
		return nullptr;
	}
	jule::Ptr<_1e398ee72_StructIns> _98217_exist_instance = _94162_s->_method_append_instance(_95817_ins);
	if (_98217_exist_instance != nullptr) {
		return _98217_exist_instance;
	}
	_95217_ok=(*this)._method_check_struct_ins(_95817_ins,_94135_decl->_field_token);
	if ((!(_95217_ok))) {
		return nullptr;
	}
	return _95817_ins;
}



inline jule::Trait<_1e6420856_Kind> _1e6420856_TypeChecker::_method_get_def(jule::Ptr<_1e38d4ec7_IdentTypeDecl>& _99731_decl) {
	{
		auto &expr = (*this)._field_ignore_generics;
		auto it = expr.begin();
		_iter_begin_4737797392:;
		if (it != expr.end()) {
			jule::Ptr<_1e38d4ec7_GenericDecl> &_1e6420856_g = *it;
			{
				if (_1e6420856_g->_field_ident == _99731_decl->_field_ident) {
					return _1e6420856_build_prim_type(_1e6420856_g->_field_ident);
				}
			}
			_iter_next_4737797392:;
			++it;
			goto _iter_begin_4737797392;
		}
		_iter_end_4737797392:;
	}
	{
		auto &expr = (*this)._field_use_generics;
		auto it = expr.begin();
		_iter_begin_4737799936:;
		if (it != expr.end()) {
			jule::Ptr<_1e6420856_TypeAlias> _1e6420856_g = *it;
			{
				if (_1e6420856_g->_field_ident == _99731_decl->_field_ident) {
					jule::Ptr<_1e398ee72_StructIns> _100625_st = _1e6420856_g->_field_kind->_field_kind->_method_strct();
					if (_100625_st != nullptr) {
						jule::Bool _100825_ok = (*this)._method_check_illegal_cycles(_99731_decl,jule::Any(_100625_st->_field_decl));
						if ((!(_100825_ok))) {
							return nullptr;
						}
					}
					return _1e6420856_g->_field_kind->_field_kind->_field_kind;
				}
			}
			_iter_next_4737799936:;
			++it;
			goto _iter_begin_4737799936;
		}
		_iter_end_4737799936:;
	}
	if ((!(_99731_decl->_field_cpp_linked))) {
		jule::Ptr<_1e4d62387_Enum> _101821_e = (*this)._field_lookup.get()._method_find_enum(_99731_decl->_field_ident);
		if (_101821_e != nullptr) {
			return (*this)._method_from_enum(_99731_decl,_101821_e);
		}
		jule::Ptr<_1e4d61232_Trait> _102321_t = (*this)._field_lookup.get()._method_find_trait(_99731_decl->_field_ident);
		if (_102321_t == nullptr) {
			_102321_t=_1c8ac49ea_find_builtin_trait(_99731_decl->_field_ident);
		}
		if (_102321_t != nullptr) {
			if ((!((*this)._field_s->_method_is_accessible_define(_102321_t->_field_public,_102321_t->_field_token)))) {
				(*this)._method_push_err(_99731_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_99731_decl->_field_ident)}));
				return nullptr;
			}
			if (_99731_decl->_field_generics.len() > 0LL) {
				(*this)._method_push_err(_99731_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_99731_decl->_field_ident)}));
				return nullptr;
			}
			return _102321_t;
		}
	}
	jule::Ptr<_1e398ee72_Struct> _104117_s = (*this)._field_lookup.get()._method_find_struct(_99731_decl->_field_ident,_99731_decl->_field_cpp_linked);
	if (_104117_s != nullptr) {
		return (*this)._method_from_struct(_99731_decl,_104117_s);
	}
	jule::Ptr<_1e6420856_TypeAlias> _104617_ta = (*this)._field_lookup.get()._method_find_type_alias(_99731_decl->_field_ident,_99731_decl->_field_cpp_linked);
	if (_104617_ta == nullptr) {
		_104617_ta=_1c8ac49ea_find_builtin_type_alias(_99731_decl->_field_ident);
	}
	if (_104617_ta != nullptr) {
		return (*this)._method_from_type_alias(_99731_decl,_104617_ta);
	}
	(*this)._method_push_err(_99731_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_99731_decl->_field_ident)}));
	return nullptr;
}



inline jule::Trait<_1e6420856_Kind> _1e6420856_TypeChecker::_method_build_ident(jule::Ptr<_1e38d4ec7_IdentTypeDecl> _105834_decl) {
	{
		if (!((_1e6420856_is_prim(_105834_decl->_field_ident)))) { goto _case_end_4737831776; }
		_case_begin_4737831776:;
		{
			return (*this)._method_build_prim(_105834_decl);
		}
		goto _match_end_4737830256;
		_case_end_4737831776:;
		_case_begin_4737830432:;
		{
			return (*this)._method_get_def(_105834_decl);
		}
		goto _match_end_4737830256;
		_case_end_4737830432:;
		_match_end_4737830256:;
	}
}



inline jule::Ptr<_1e6420856_Sptr> _1e6420856_TypeChecker::_method_build_sptr_from_type(jule::Ptr<_1e6420856_TypeKind>& _106544_elem) {
	{
		if (!((_106544_elem == nullptr))) { goto _case_end_4737834464; }
		_case_begin_4737834464:;
		{
			return nullptr;
		}
		goto _match_end_4737830880;
		_case_end_4737834464:;
		if (!((_106544_elem->_method_strct() != nullptr))) { goto _case_end_4737834560; }
		_case_begin_4737834560:;
		{
			jule::Ptr<_1e398ee72_StructIns> _107217_s = _106544_elem->_method_strct();
			if ((_107217_s->_field_decl != nullptr) && _107217_s->_field_decl->_field_cpp_linked) {
				(*this)._method_push_err((*this)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		goto _match_end_4737830880;
		_case_end_4737834560:;
		if (!(((_106544_elem->_method_arr() != nullptr) && _106544_elem->_method_arr()->_field_auto))) { goto _case_end_4737834656; }
		_case_begin_4737834656:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
			return nullptr;
		}
		goto _match_end_4737830880;
		_case_end_4737834656:;
		_match_end_4737830880:;
	}
	return jule::new_struct_ptr<_1e6420856_Sptr>(new( std::nothrow ) _1e6420856_Sptr(_106544_elem));
}



inline jule::Ptr<_1e6420856_Sptr> _1e6420856_TypeChecker::_method_build_sptr(jule::Ptr<_1e38d4ec7_SptrTypeDecl> _108833_decl) {
	jule::Bool _108913_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_108913_not_plain;
	});
	jule::Ptr<_1e6420856_TypeKind> _109317_elem = (*this)._method_check_decl(_108833_decl->_field_elem);
	return (*this)._method_build_sptr_from_type(_109317_elem);
}



inline jule::Ptr<_1e6420856_Ptr> _1e6420856_TypeChecker::_method_build_ptr_from_type(jule::Ptr<_1e6420856_TypeKind>& _109743_elem) {
	{
		if (!((_109743_elem == nullptr))) { goto _case_end_4737850240; }
		_case_begin_4737850240:;
		{
			return nullptr;
		}
		goto _match_end_4737848480;
		_case_end_4737850240:;
		if (!(((_109743_elem->_method_arr() != nullptr) && _109743_elem->_method_arr()->_field_auto))) { goto _case_end_4737850352; }
		_case_begin_4737850352:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
			return jule::new_ptr<_1e6420856_Ptr>();
		}
		goto _match_end_4737848480;
		_case_end_4737850352:;
		_match_end_4737848480:;
	}
	return jule::new_struct_ptr<_1e6420856_Ptr>(new( std::nothrow ) _1e6420856_Ptr(_109743_elem));
}



inline jule::Ptr<_1e6420856_Ptr> _1e6420856_TypeChecker::_method_build_ptr(jule::Ptr<_1e38d4ec7_PtrTypeDecl> _111332_decl) {
	jule::Bool _111413_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_111413_not_plain;
	});
	jule::Ptr<_1e6420856_TypeKind> _111817_elem = nullptr;
	if ((!(_111332_decl->_method_is_unsafe()))) {
		_111817_elem=(*this)._method_check_decl(_111332_decl->_field_elem);
		return (*this)._method_build_ptr_from_type(_111817_elem);
	}
	return jule::new_struct_ptr<_1e6420856_Ptr>(new( std::nothrow ) _1e6420856_Ptr(_111817_elem));
}



inline jule::Ptr<_1e6420856_Slc> _1e6420856_TypeChecker::_method_build_slc(jule::Ptr<_1e38d4ec7_SlcTypeDecl> _113032_decl) {
	jule::Bool _113113_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_113113_not_plain;
	});
	jule::Ptr<_1e6420856_TypeKind> _113517_elem = (*this)._method_check_decl(_113032_decl->_field_elem);
	{
		if (!((_113517_elem == nullptr))) { goto _case_end_4737868240; }
		_case_begin_4737868240:;
		{
			return nullptr;
		}
		goto _match_end_4737868048;
		_case_end_4737868240:;
		if (!(((_113517_elem->_method_arr() != nullptr) && _113517_elem->_method_arr()->_field_auto))) { goto _case_end_4737868336; }
		_case_begin_4737868336:;
		{
			(*this)._method_push_err(_113032_decl->_field_elem->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
			return nullptr;
		}
		goto _match_end_4737868048;
		_case_end_4737868336:;
		_match_end_4737868048:;
	}
	return jule::new_struct_ptr<_1e6420856_Slc>(new( std::nothrow ) _1e6420856_Slc(_113517_elem));
}



inline jule::Ptr<_1e6420856_Arr> _1e6420856_TypeChecker::_method_build_arr(jule::Ptr<_1e38d4ec7_ArrTypeDecl> _115232_decl) {
	jule::Bool _115313_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_115313_not_plain;
	});
	jule::Int _115717_n = 0LL;
	if ((!(_115232_decl->_method_auto_sized()))) {
		jule::Ptr<_1e50ac4b1_Data> _116021_size = (*this)._field_s->_method_eval((*this)._field_lookup)->_method_eval_expr(_115232_decl->_field_size);
		if (_116021_size == nullptr) {
			return nullptr;
		}
		if ((!(_116021_size->_method_is_const()))) {
			(*this)._method_push_err(_115232_decl->_field_size->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if ((_116021_size->_field_kind->_method_prim() == nullptr) || (!(_1c8c8ad04_is_int(_116021_size->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._method_push_err(_115232_decl->_field_size->_field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		}
		_115717_n=static_cast<jule::Int>(_116021_size->_field_constant->_method_as_i64());
		if (_115717_n < 0LL) {
			(*this)._method_push_err(_115232_decl->_field_elem->_field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	jule::Ptr<_1e6420856_TypeKind> _118017_elem = (*this)._method_check_decl(_115232_decl->_field_elem);
	{
		if (!((_118017_elem == nullptr))) { goto _case_end_4737891456; }
		_case_begin_4737891456:;
		{
			return nullptr;
		}
		goto _match_end_4737891024;
		_case_end_4737891456:;
		if (!(((_118017_elem->_method_arr() != nullptr) && _118017_elem->_method_arr()->_field_auto))) { goto _case_end_4737891552; }
		_case_begin_4737891552:;
		{
			(*this)._method_push_err(_115232_decl->_field_elem->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
			return nullptr;
		}
		goto _match_end_4737891024;
		_case_end_4737891552:;
		_match_end_4737891024:;
	}
	return jule::new_struct_ptr<_1e6420856_Arr>(new( std::nothrow ) _1e6420856_Arr(_115232_decl->_method_auto_sized(),_115717_n,_118017_elem));
}



inline jule::Ptr<_1e6420856_Map> _1e6420856_TypeChecker::_method_build_map(jule::Ptr<_1e38d4ec7_MapTypeDecl> _119932_decl) {
	jule::Bool _120013_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_120013_not_plain;
	});
	jule::Ptr<_1e6420856_TypeKind> _120417_key = (*this)._method_check_decl(_119932_decl->_field_key);
	if (_120417_key == nullptr) {
		return nullptr;
	}
	jule::Ptr<_1e6420856_TypeKind> _120917_val = (*this)._method_check_decl(_119932_decl->_field_val);
	if (_120917_val == nullptr) {
		return nullptr;
	}
	if (_120917_val->_method_enm() != nullptr) {
		(*this)._method_push_err(_119932_decl->_field_val->_field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	}
	return jule::new_struct_ptr<_1e6420856_Map>(new( std::nothrow ) _1e6420856_Map(_120417_key,_120917_val));
}



inline jule::Ptr<_1e6420856_Tuple> _1e6420856_TypeChecker::_method_build_tuple(jule::Ptr<_1e38d4ec7_TupleTypeDecl> _122334_decl) {
	jule::Slice<jule::Ptr<_1e6420856_TypeKind>> _122417_types = jule::Slice<jule::Ptr<_1e6420856_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_122334_decl->_field_types.len()));
	{
		auto &expr = _122334_decl->_field_types;
		auto it = expr.begin();
		_iter_begin_4737910480:;
		if (it != expr.end()) {
			jule::Ptr<_1e38d4ec7_TypeDecl> _1e6420856_t = *it;
			{
				jule::Ptr<_1e6420856_TypeKind> _122621_kind = (*this)._method_check_decl(_1e6420856_t);
				if (_122621_kind == nullptr) {
					return nullptr;
				}
				_122417_types.push(_122621_kind);
			}
			_iter_next_4737910480:;
			++it;
			goto _iter_begin_4737910480;
		}
		_iter_end_4737910480:;
	}
	return jule::new_struct_ptr<_1e6420856_Tuple>(new( std::nothrow ) _1e6420856_Tuple(_122417_types));
}



inline jule::Bool _1e6420856_TypeChecker::_method_check_fn_types(jule::Ptr<_1e4b15a20_FnIns>& _123638_f) {
	jule::Bool _123651_ok = jule::Bool();
	{
		auto &expr = _123638_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4737918224:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_ParamIns> _1e6420856_p = *it;
			{
				_1e6420856_p->_field_kind=(*this)._method_build(_1e6420856_p->_field_decl->_field_kind->_field_decl->_field_kind);
				_123651_ok=_1e6420856_p->_field_kind != nullptr;
				if ((!(_123651_ok))) {
					_123651_ok = false;
					return _123651_ok;
				}
			}
			_iter_next_4737918224:;
			++it;
			goto _iter_begin_4737918224;
		}
		_iter_end_4737918224:;
	}
	if ((!(_123638_f->_field_decl->_method_is_void()))) {
		_123638_f->_field_result=(*this)._method_build(_123638_f->_field_decl->_field_result->_field_kind->_field_decl->_field_kind);
		_123651_ok = _123638_f->_field_result != nullptr;
		return _123651_ok;
	}
	_123651_ok = true;
	return _123651_ok;
}



inline jule::Ptr<_1e4b15a20_FnIns> _1e6420856_TypeChecker::_method_build_fn(jule::Ptr<_1e38d4ec7_FnDecl> _125331_decl) {
	if (_125331_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_125331_decl->_field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1e4b15a20_Fn> _125917_f = _1e4cc167b_build_fn(_125331_decl);
	jule::Ptr<_1e4b15a20_FnIns> _126017_ins = _125917_f->_method_instance_force();
	_126017_ins->_field_anon=true;
	jule::Bool _126313_ok = (*this)._method_check_fn_types(_126017_ins);
	if ((!(_126313_ok))) {
		return nullptr;
	}
	return _126017_ins;
}



inline jule::Trait<_1e6420856_Kind> _1e6420856_TypeChecker::_method_build_by_namespace(jule::Ptr<_1e38d4ec7_NamespaceTypeDecl> _127141_decl) {
	jule::Str _127213_path = _1e6420856_build_link_path_by_tokens(_127141_decl->_field_idents);
	jule::Ptr<_1e4ee54e8_ImportInfo> _127317_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1e4ee54e8_ImportInfo>)>([=](jule::Ptr<_1e4ee54e8_ImportInfo> _127353_imp) mutable -> jule::Bool {
		if ((_127141_decl->_field_idents.len() == 1LL) && (_127353_imp->_field_alias == _127213_path)) {
			return true;
		}
		return _127353_imp->_field_link_path == _127213_path;
	}));
	if ((_127317_imp == nullptr) || (!(_127317_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_127141_decl->_field_idents[0LL],jule::Str("namespace not exist: @", 22),jule::Slice<jule::Any>({jule::Any(_127213_path)}));
		return nullptr;
	}
	jule::Trait<_1e5425ab0_Lookup> _128517_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_127317_imp;
	jule::Trait<_1e6420856_Kind> _128817_kind = (*this)._method_build_ident(_127141_decl->_field_kind);
	(*this)._field_lookup=_128517_lookup;
	return _128817_kind;
}



inline jule::Ptr<_1e6420856_TypeKind> _1e6420856_TypeChecker::_method_build(jule::Any& _129529_decl_kind) {
	jule::Trait<_1e6420856_Kind> _129617_kind = nullptr;
	{
		auto &_match_expr{ _129529_decl_kind };
		if (!(_match_expr.type_is<jule::Ptr<_1e6420856_TypeKind>>())) { goto _case_end_4737953920; }
		_case_begin_4737953920:;
		{
			_129617_kind=_129529_decl_kind.operator jule::Ptr<_1e6420856_TypeKind>();
		}
		goto _match_end_4737951584;
		_case_end_4737953920:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_IdentTypeDecl>>())) { goto _case_end_4737953600; }
		_case_begin_4737953600:;
		{
			jule::Trait<_1e6420856_Kind> _130321_t = (*this)._method_build_ident(_129529_decl_kind.operator jule::Ptr<_1e38d4ec7_IdentTypeDecl>());
			if (_130321_t != nullptr) {
				_129617_kind=_130321_t;
			}
		}
		goto _match_end_4737951584;
		_case_end_4737953600:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_SptrTypeDecl>>())) { goto _case_end_4737953696; }
		_case_begin_4737953696:;
		{
			jule::Ptr<_1e6420856_Sptr> _130921_t = (*this)._method_build_sptr(_129529_decl_kind.operator jule::Ptr<_1e38d4ec7_SptrTypeDecl>());
			if (_130921_t != nullptr) {
				_129617_kind=_130921_t;
			}
		}
		goto _match_end_4737951584;
		_case_end_4737953696:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_PtrTypeDecl>>())) { goto _case_end_4737953792; }
		_case_begin_4737953792:;
		{
			jule::Ptr<_1e6420856_Ptr> _131521_t = (*this)._method_build_ptr(_129529_decl_kind.operator jule::Ptr<_1e38d4ec7_PtrTypeDecl>());
			if (_131521_t != nullptr) {
				_129617_kind=_131521_t;
			}
		}
		goto _match_end_4737951584;
		_case_end_4737953792:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_SlcTypeDecl>>())) { goto _case_end_4737952016; }
		_case_begin_4737952016:;
		{
			jule::Ptr<_1e6420856_Slc> _132121_t = (*this)._method_build_slc(_129529_decl_kind.operator jule::Ptr<_1e38d4ec7_SlcTypeDecl>());
			if (_132121_t != nullptr) {
				_129617_kind=_132121_t;
			}
		}
		goto _match_end_4737951584;
		_case_end_4737952016:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_ArrTypeDecl>>())) { goto _case_end_4737952112; }
		_case_begin_4737952112:;
		{
			jule::Ptr<_1e6420856_Arr> _132721_t = (*this)._method_build_arr(_129529_decl_kind.operator jule::Ptr<_1e38d4ec7_ArrTypeDecl>());
			if (_132721_t != nullptr) {
				_129617_kind=_132721_t;
			}
		}
		goto _match_end_4737951584;
		_case_end_4737952112:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_MapTypeDecl>>())) { goto _case_end_4737952208; }
		_case_begin_4737952208:;
		{
			jule::Ptr<_1e6420856_Map> _133321_t = (*this)._method_build_map(_129529_decl_kind.operator jule::Ptr<_1e38d4ec7_MapTypeDecl>());
			if (_133321_t != nullptr) {
				_129617_kind=_133321_t;
			}
		}
		goto _match_end_4737951584;
		_case_end_4737952208:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_TupleTypeDecl>>())) { goto _case_end_4737952304; }
		_case_begin_4737952304:;
		{
			jule::Ptr<_1e6420856_Tuple> _133921_t = (*this)._method_build_tuple(_129529_decl_kind.operator jule::Ptr<_1e38d4ec7_TupleTypeDecl>());
			if (_133921_t != nullptr) {
				_129617_kind=_133921_t;
			}
		}
		goto _match_end_4737951584;
		_case_end_4737952304:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_FnDecl>>())) { goto _case_end_4737954336; }
		_case_begin_4737954336:;
		{
			jule::Ptr<_1e4b15a20_FnIns> _134521_t = (*this)._method_build_fn(_129529_decl_kind.operator jule::Ptr<_1e38d4ec7_FnDecl>());
			if (_134521_t != nullptr) {
				_129617_kind=_134521_t;
			}
		}
		goto _match_end_4737951584;
		_case_end_4737954336:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_NamespaceTypeDecl>>())) { goto _case_end_4737954432; }
		_case_begin_4737954432:;
		{
			jule::Trait<_1e6420856_Kind> _135121_t = (*this)._method_build_by_namespace(_129529_decl_kind.operator jule::Ptr<_1e38d4ec7_NamespaceTypeDecl>());
			if (_135121_t != nullptr) {
				_129617_kind=_135121_t;
			}
		}
		goto _match_end_4737951584;
		_case_end_4737954432:;
		_case_begin_4737950944:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>());
			return nullptr;
		}
		goto _match_end_4737951584;
		_case_end_4737950944:;
		_match_end_4737951584:;
	}
	if (_129617_kind == nullptr) {
		return nullptr;
	}
	{
		auto &_match_expr{ _129617_kind };
		if (!(_match_expr.type_is<jule::Ptr<_1e6420856_TypeKind>>())) { goto _case_end_4737982336; }
		_case_begin_4737982336:;
		{
			return _129617_kind.operator jule::Ptr<_1e6420856_TypeKind>();
		}
		goto _match_end_4737980176;
		_case_end_4737982336:;
		_case_begin_4737980688:;
		{
			return jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_129617_kind));
		}
		goto _match_end_4737980176;
		_case_end_4737980688:;
		_match_end_4737980176:;
	}
}



inline jule::Ptr<_1e6420856_TypeKind> _1e6420856_TypeChecker::_method_check_decl(jule::Ptr<_1e38d4ec7_TypeDecl>& _137634_decl) {
	_1e3bad8dd_Token _137817_error_token = (*this)._field_error_token;
	(*this)._field_error_token=_137634_decl->_field_token;
	jule::Ptr<_1e6420856_TypeKind> _138117_kind = (*this)._method_build(_137634_decl->_field_kind);
	(*this)._field_error_token=_137817_error_token;
	return _138117_kind;
}



inline void _1e6420856_TypeChecker::_method_check(jule::Ptr<_1e6420856_TypeSymbol>& _138729_t) {
	if (_138729_t->_field_decl == nullptr) {
		return;
	}
	jule::Ptr<_1e6420856_TypeKind> _139217_kind = (*this)._method_check_decl(_138729_t->_field_decl);
	if (_139217_kind == nullptr) {
		_138729_t->_method_remove_kind();
		return;
	}
	_138729_t->_field_kind=_139217_kind;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e6420856_TypeChecker &_Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_RangeKind &_Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_1e376ec74_IR>,jule::Slice<_1e24777a2_Log>> _1e376ec74_IR::_static_method_build(jule::Str _2525_path,jule::Int _2536_flags) {
	jule::Ptr<_1e36c2a1d_PlainImporter> _2617_importer = jule::new_struct<_1e36c2a1d_PlainImporter>(new( std::nothrow ) _1e36c2a1d_PlainImporter());
	jule::Slice<jule::Ptr<_1e38d45c0_Ast>> _2718_files;
	jule::Slice<_1e24777a2_Log> _2729_logs;
	std::tie(_2718_files,_2729_logs) = _2617_importer->_method_import_package(_2525_path);
	if (_2729_logs.len() > 0LL) {
		return std::make_tuple(nullptr,_2729_logs);
	}
	if (_2718_files.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Ptr<_1e4ee54e8_Package> _3618_pkg;
	std::tie(_3618_pkg,_2729_logs) = _1c8aaab68_analyze_package(_2718_files,_2617_importer,_2536_flags);
	if (_2729_logs.len() > 0LL) {
		return std::make_tuple(nullptr,_2729_logs);
	}
	jule::Ptr<_1e376ec74_IR> _4117_ir = jule::new_struct<_1e376ec74_IR>(new( std::nothrow ) _1e376ec74_IR(jule::Slice<jule::Str>(),_3618_pkg,_2617_importer->_field_all_packages,_1e354d019_OrderedDefines()));
	_4117_ir->_field_passes=_1e376ec74_get_all_unique_passes(_4117_ir->_field_main,_4117_ir->_field_used);
	return std::make_tuple(_4117_ir,nullptr);
}



inline void _1e376ec74_IR::_method_append_structs(jule::Ptr<_1e4ee54e8_Package>& _5234_p,jule::Slice<jule::Ptr<_1e398ee72_Struct>>& _5258_buffer) {
	{
		auto &expr = _5234_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4738236096:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e376ec74_f = *it;
			{
				{
					auto &expr = _1e376ec74_f->_field_structs;
					auto it = expr.begin();
					_iter_begin_4738237984:;
					if (it != expr.end()) {
						jule::Ptr<_1e398ee72_Struct> _1e376ec74_s = *it;
						{
							if ((!(_1e376ec74_s->_field_cpp_linked))) {
								_5258_buffer.push(_1e376ec74_s);
							}
						}
						_iter_next_4738237984:;
						++it;
						goto _iter_begin_4738237984;
					}
					_iter_end_4738237984:;
				}
			}
			_iter_next_4738236096:;
			++it;
			goto _iter_begin_4738236096;
		}
		_iter_end_4738236096:;
	}
}



inline jule::Slice<jule::Ptr<_1e398ee72_Struct>> _1e376ec74_IR::_method_get_all_structures(void) {
	jule::Slice<jule::Ptr<_1e398ee72_Struct>> _6517_buffer = nullptr;
	(*this)._method_append_structs((*this)._field_main,_6517_buffer);
	{
		auto &expr = (*this)._field_used;
		auto it = expr.begin();
		_iter_begin_4738241344:;
		if (it != expr.end()) {
			jule::Ptr<_1e4ee54e8_ImportInfo> _1e376ec74_u = *it;
			{
				if ((!(_1e376ec74_u->_field_cpp_linked))) {
					(*this)._method_append_structs(_1e376ec74_u->_field_package,_6517_buffer);
				}
			}
			_iter_next_4738241344:;
			++it;
			goto _iter_begin_4738241344;
		}
		_iter_end_4738241344:;
	}
	return _6517_buffer;
}



inline void _1e376ec74_IR::_method_append_vars(jule::Ptr<_1e4ee54e8_Package>& _7831_p,jule::Slice<jule::Ptr<_1e50b0492_Var>>& _7855_buffer) {
	{
		auto &expr = _7831_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4738248752:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e376ec74_f = *it;
			{
				{
					auto &expr = _1e376ec74_f->_field_vars;
					auto it = expr.begin();
					_iter_begin_4738250640:;
					if (it != expr.end()) {
						jule::Ptr<_1e50b0492_Var> _1e376ec74_v = *it;
						{
							if ((!(_1e376ec74_v->_field_cpp_linked)) && (!(_1e376ec74_v->_field_constant))) {
								_7855_buffer.push(_1e376ec74_v);
							}
						}
						_iter_next_4738250640:;
						++it;
						goto _iter_begin_4738250640;
					}
					_iter_end_4738250640:;
				}
			}
			_iter_next_4738248752:;
			++it;
			goto _iter_begin_4738248752;
		}
		_iter_end_4738248752:;
	}
}



inline jule::Slice<jule::Ptr<_1e50b0492_Var>> _1e376ec74_IR::_method_get_all_variables(void) {
	jule::Slice<jule::Ptr<_1e50b0492_Var>> _9117_buffer = nullptr;
	(*this)._method_append_vars((*this)._field_main,_9117_buffer);
	{
		auto &expr = (*this)._field_used;
		auto it = expr.begin();
		_iter_begin_4738255792:;
		if (it != expr.end()) {
			jule::Ptr<_1e4ee54e8_ImportInfo> _1e376ec74_u = *it;
			{
				if ((!(_1e376ec74_u->_field_cpp_linked))) {
					(*this)._method_append_vars(_1e376ec74_u->_field_package,_9117_buffer);
				}
			}
			_iter_next_4738255792:;
			++it;
			goto _iter_begin_4738255792;
		}
		_iter_end_4738255792:;
	}
	return _9117_buffer;
}



inline void _1e376ec74_IR::_method_order(void) {
	(*this)._field_ordered._field_structs=(*this)._method_get_all_structures();
	(*this)._field_ordered._field_globals=(*this)._method_get_all_variables();
	_1e354d019_DefineOrderer::_static_method_order_variables((*this)._field_ordered._field_globals);
	_1e354d019_DefineOrderer::_static_method_order_structures((*this)._field_ordered._field_structs);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e376ec74_IR &_Src) {
	_Stream << "IR{";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e4d6ee22_ScopeLabel &_Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_If &_Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_Else &_Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_Directive &_Src) {
	_Stream << "Directive{";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_TypeAliasDecl &_Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_Case &_Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e38d4ec7_MatchCase &_Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Int,jule::Bool> _1e249dae7_ArgParser::_method_parse_integer_0(jule::Str& _18732_s,jule::Fn<std::tuple<jule::Int,jule::Bool>(jule::Str,jule::Int)> _18740_parser) {
	jule::Int _18784_x = jule::Int();
	jule::Bool _18790_ok = jule::Bool();
	{
		if (!((_18732_s == jule::Str()))) { goto _case_end_4740992736; }
		_case_begin_4740992736:;
		{
			_18784_x = 0LL;
			_18790_ok = false;
			return std::make_tuple(_18784_x,_18790_ok);
		}
		goto _match_end_4740990864;
		_case_end_4740992736:;
		if (!((_18732_s.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4740992112; }
		_case_begin_4740992112:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(2LL),16LL);
		}
		goto _match_end_4740990864;
		_case_end_4740992112:;
		if (!((_18732_s.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4740991824; }
		_case_begin_4740991824:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(2LL),2LL);
		}
		goto _match_end_4740990864;
		_case_end_4740991824:;
		if (!((_18732_s.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4740993280; }
		_case_begin_4740993280:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(2LL),8LL);
		}
		goto _match_end_4740990864;
		_case_end_4740993280:;
		if (!((_18732_s[0LL] == '0'))) { goto _case_end_4740993072; }
		_case_begin_4740993072:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(1LL),8LL);
		}
		goto _match_end_4740990864;
		_case_end_4740993072:;
		_case_begin_4740991040:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s,10LL);
		}
		goto _match_end_4740990864;
		_case_end_4740991040:;
		_match_end_4740990864:;
	}
	return std::make_tuple(_18784_x,_18790_ok);
}

inline std::tuple<jule::Uint,jule::Bool> _1e249dae7_ArgParser::_method_parse_integer_1(jule::Str& _18732_s,jule::Fn<std::tuple<jule::Uint,jule::Bool>(jule::Str,jule::Int)> _18740_parser) {
	jule::Uint _18784_x = jule::Uint();
	jule::Bool _18790_ok = jule::Bool();
	{
		if (!((_18732_s == jule::Str()))) { goto _case_end_4741020784; }
		_case_begin_4741020784:;
		{
			_18784_x = 0LL;
			_18790_ok = false;
			return std::make_tuple(_18784_x,_18790_ok);
		}
		goto _match_end_4741018912;
		_case_end_4741020784:;
		if (!((_18732_s.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4741020160; }
		_case_begin_4741020160:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(2LL),16LL);
		}
		goto _match_end_4741018912;
		_case_end_4741020160:;
		if (!((_18732_s.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4741019872; }
		_case_begin_4741019872:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(2LL),2LL);
		}
		goto _match_end_4741018912;
		_case_end_4741019872:;
		if (!((_18732_s.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4741021328; }
		_case_begin_4741021328:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(2LL),8LL);
		}
		goto _match_end_4741018912;
		_case_end_4741021328:;
		if (!((_18732_s[0LL] == '0'))) { goto _case_end_4741021120; }
		_case_begin_4741021120:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(1LL),8LL);
		}
		goto _match_end_4741018912;
		_case_end_4741021120:;
		_case_begin_4741019088:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s,10LL);
		}
		goto _match_end_4741018912;
		_case_end_4741019088:;
		_match_end_4741018912:;
	}
	return std::make_tuple(_18784_x,_18790_ok);
}



inline jule::Str _1e249dae7_ArgParser::_method_get_data(void) {
	if (((*this)._field_i + 1LL) >= (*this)._field_args.len()) {
		return jule::Str();
	}
	((*this)._field_i)++;
	return (*this)._field_args[(*this)._field_i];
}



inline void _1e249dae7_ArgParser::_method_process_flag(jule::Trait<_1e249dae7_CommonFlag>& _21836_flag) {
	{
		auto &_match_expr{ _21836_flag };
		if (!(_match_expr.type_is<jule::Ptr<_1e249dae7_Flag_3>>())) { goto _case_end_4740967088; }
		_case_begin_4740967088:;
		{
			jule::Ptr<_1e249dae7_Flag_3> _22121_bf = _21836_flag.operator jule::Ptr<_1e249dae7_Flag_3>();
			(*(_22121_bf->_field__data))=(!(_22121_bf->_field__default));
			return;
		}
		goto _match_end_4740967472;
		_case_end_4740967088:;
		_match_end_4740967472:;
	}
	jule::Str _22613_data = (*this)._method_get_data();
	if (_22613_data == jule::Str()) {
		(*this)._field_error=(jule::Str("--", 2) + _21836_flag.get()._method_name()) + jule::Str(": expression missing", 20);
		return;
	}
	{
		auto &_match_expr{ _21836_flag };
		if (!(_match_expr.type_is<jule::Ptr<_1e249dae7_Flag_0>>())) { goto _case_end_4740972656; }
		_case_begin_4740972656:;
		{
			jule::Ptr<_1e249dae7_Flag_0> _23421_intf = _21836_flag.operator jule::Ptr<_1e249dae7_Flag_0>();
			jule::Bool _23533_ok;
			std::tie((*(_23421_intf->_field__data)),_23533_ok) = (*this)._method_parse_integer_0(_22613_data,jule::Fn<std::tuple<jule::Int,jule::Bool>(jule::Str,jule::Int)>([=](jule::Str _23572_s,jule::Int _23580_base) mutable -> std::tuple<jule::Int,jule::Bool> {
				jule::I64 _23622_x;
				jule::Int _23625_err;
				std::tie(_23622_x,_23625_err) = _1e24a4812_parse_int(_23572_s,_23580_base,64LL);
				return std::make_tuple(_23622_x,_23625_err == 0LLU);
			}));
			if ((!(_23533_ok))) {
				(*this)._field_error=(jule::Str("--", 2) + _21836_flag.get()._method_name()) + jule::Str(": expression must be valid signed integer", 41);
			}
		}
		goto _match_end_4740972112;
		_case_end_4740972656:;
		if (!(_match_expr.type_is<jule::Ptr<_1e249dae7_Flag_1>>())) { goto _case_end_4740973408; }
		_case_begin_4740973408:;
		{
			jule::Ptr<_1e249dae7_Flag_1> _24421_uintf = _21836_flag.operator jule::Ptr<_1e249dae7_Flag_1>();
			jule::Bool _24534_ok;
			std::tie((*(_24421_uintf->_field__data)),_24534_ok) = (*this)._method_parse_integer_1(_22613_data,jule::Fn<std::tuple<jule::Uint,jule::Bool>(jule::Str,jule::Int)>([=](jule::Str _24574_s,jule::Int _24582_base) mutable -> std::tuple<jule::Uint,jule::Bool> {
				jule::U64 _24622_x;
				jule::Int _24625_err;
				std::tie(_24622_x,_24625_err) = _1e24a4812_parse_uint(_24574_s,_24582_base,64LL);
				return std::make_tuple(_24622_x,_24625_err == 0LLU);
			}));
			if ((!(_24534_ok))) {
				(*this)._field_error=(jule::Str("--", 2) + _21836_flag.get()._method_name()) + jule::Str(": expression must be valid unsigned integer", 43);
			}
		}
		goto _match_end_4740972112;
		_case_end_4740973408:;
		if (!(_match_expr.type_is<jule::Ptr<_1e249dae7_Flag_2>>())) { goto _case_end_4740971216; }
		_case_begin_4740971216:;
		{
			jule::Ptr<_1e249dae7_Flag_2> _25421_ff = _21836_flag.operator jule::Ptr<_1e249dae7_Flag_2>();
			jule::Int _25531_err;
			std::tie((*(_25421_ff->_field__data)),_25531_err) = _1e3307ee4_parse_float(_22613_data,64LL);
			if (_25531_err != 0LLU) {
				(*this)._field_error=(jule::Str("--", 2) + _21836_flag.get()._method_name()) + jule::Str(": expression must be valid floating-point", 41);
			}
		}
		goto _match_end_4740972112;
		_case_end_4740971216:;
		if (!(_match_expr.type_is<jule::Ptr<_1e249dae7_Flag_4>>())) { goto _case_end_4740971312; }
		_case_begin_4740971312:;
		{
			(*(_21836_flag.operator jule::Ptr<_1e249dae7_Flag_4>()->_field__data))=_22613_data;
		}
		goto _match_end_4740972112;
		_case_end_4740971312:;
		_match_end_4740972112:;
	}
}



inline void _1e249dae7_ArgParser::_method_single_dash(jule::Str& _26531_arg) {
	jule::Slice<jule::I32> _26613_rarg = static_cast<jule::Slice<jule::I32>>(_26531_arg).slice(1LL);
	{
		auto &expr = _26613_rarg;
		auto it = expr.begin();
		_iter_begin_4741038624:;
		if (it != expr.end()) {
			jule::I32 &_1e249dae7_r = *it;
			{
				jule::Trait<_1e249dae7_CommonFlag> _26821_flag = (*this)._field_set._method_find_flag_short(_1e249dae7_r);
				if (_26821_flag == nullptr) {
					(*this)._field_error=(_26531_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_1e249dae7_r);
					return;
				}
				(*this)._method_process_flag(_26821_flag);
			}
			_iter_next_4741038624:;
			++it;
			goto _iter_begin_4741038624;
		}
		_iter_end_4741038624:;
	}
}



inline void _1e249dae7_ArgParser::_method_double_dash(jule::Str& _27831_arg) {
	jule::Trait<_1e249dae7_CommonFlag> _27917_flag = (*this)._field_set._method_find_flag(_27831_arg.slice(2LL));
	if (_27917_flag == nullptr) {
		(*this)._field_error=_27831_arg + jule::Str(": flag is not exist", 19);
		return;
	}
	(*this)._method_process_flag(_27917_flag);
}



inline void _1e249dae7_ArgParser::_method_try_arg(void) {
	jule::Str _28913_arg = (*this)._field_args[(*this)._field_i];
	if ((*this)._field_args.len() == 0LL) {
		return;
	}
	if (_28913_arg[0LL] == '-') {
		if (((*this)._field_args.len() > 1LL) && (_28913_arg[1LL] == '-')) {
			(*this)._method_double_dash(_28913_arg);
			return;
		}
		(*this)._method_single_dash(_28913_arg);
		return;
	}
	(*this)._field_content = jule::alloc_for_append((*this)._field_content,1);(*this)._field_content.push(_28913_arg);
}



inline void _1e249dae7_ArgParser::_method_parse(void) {
	for (; (*this)._field_i < (*this)._field_args.len(); ((*this)._field_i)++) {
		{
			(*this)._method_try_arg();
			if ((*this)._field_error.len() != 0LL) {
				goto _iter_end_4741053216;
			}
		}
	_iter_next_4741053216:;
	}
	_iter_end_4741053216:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e249dae7_ArgParser &_Src) {
	_Stream << "ArgParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error:" << _Src._field_error << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1e25d1664_free(void* _5124_ptr) {
	free(_5124_ptr);
}



inline jule::Str _1e25ebd33_byte_ptr_to_str(jule::U8* _7431_s) {
	if (_7431_s == nullptr) {
		return jule::Str();
	}
	return __jule_str_from_byte_ptr(_7431_s);
}



inline jule::Int _1e256bec3_get_last_errno(void) {
	return errno;
}



inline jule::Int _1e25838e1_stat(jule::U8* _4620_path,struct stat* _4637_stat) {
	return static_cast<jule::Int>(__jule_stat(((char*)(_4620_path)),_4637_stat));
}



inline jule::Int _1e25838e1_open(jule::U8* _5120_path,jule::Int _5133_flag,jule::Int _5144_mode) {
	return static_cast<jule::Int>(open(((char*)(_5120_path)),_5133_flag,_5144_mode));
}



inline jule::U8* _1e25838e1_getcwd(jule::U8* _5722_buff,jule::Uint _5735_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5722_buff)),_5735_bufflen)));
}



inline DIR* _1e25838e1_opendir(jule::U8* _6223_path) {
	return opendir(((char*)(_6223_path)));
}



inline struct dirent* _1e25838e1_readdir(DIR* _6527_dir) {
	return readdir(_6527_dir);
}



inline jule::Int _1e25838e1_closedir(DIR* _6828_dir) {
	return static_cast<jule::Int>(closedir(_6828_dir));
}



inline jule::Int _1e25838e1_mkdir(jule::U8* _7721_path,jule::Int _7734_mode) {
	return static_cast<jule::Int>(mkdir(((char*)(_7721_path)),_7734_mode));
}



inline jule::Int _1e25838e1_rmdir(jule::U8* _8221_path) {
	return static_cast<jule::Int>(rmdir(((char*)(_8221_path))));
}



inline jule::Int _1e25838e1_unlink(jule::U8* _8522_path) {
	return static_cast<jule::Int>(unlink(((char*)(_8522_path))));
}



inline jule::I64 _1e25c1544_seek(jule::Int _2613_handle,jule::I64 _2626_offset,jule::Int _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::Int _1e25c1544_read(jule::Int _3120_handle,void* _3137_buff,jule::Uint _3152_n) {
	return static_cast<jule::Int>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::Int _1e25c1544_close(jule::Int _3614_handle) {
	return static_cast<jule::Int>(close(_3614_handle));
}



inline jule::Int _1e25c1544_write(jule::Int _3921_handle,void* _3934_buff,jule::Uint _3949_n) {
	return static_cast<jule::Int>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _1e25c1544_exit(jule::Int _4413_code) {
	exit(_4413_code);
}



inline jule::Int _1e256c149_get_last_os_error(void) {
	jule::Int _319_err = _1e256bec3_get_last_errno();
	{
		auto &_match_expr{ _319_err };
		if (!((13LL) == _match_expr)) { goto _case_end_4717121456; }
		_case_begin_4717121456:;
		{
			return 1LLU;
		}
		goto _match_end_4717120384;
		_case_end_4717121456:;
		if (!((5LL) == _match_expr)) { goto _case_end_4717121552; }
		_case_begin_4717121552:;
		{
			return 2LLU;
		}
		goto _match_end_4717120384;
		_case_end_4717121552:;
		if (!((62LL) == _match_expr)) { goto _case_end_4717121648; }
		_case_begin_4717121648:;
		{
			return 3LLU;
		}
		goto _match_end_4717120384;
		_case_end_4717121648:;
		if (!((63LL) == _match_expr)) { goto _case_end_4717122032; }
		_case_begin_4717122032:;
		{
			return 4LLU;
		}
		goto _match_end_4717120384;
		_case_end_4717122032:;
		if (!((2LL) == _match_expr)) { goto _case_end_4717122128; }
		_case_begin_4717122128:;
		{
			return 5LLU;
		}
		goto _match_end_4717120384;
		_case_end_4717122128:;
		if (!((20LL) == _match_expr)) { goto _case_end_4717122224; }
		_case_begin_4717122224:;
		{
			return 6LLU;
		}
		goto _match_end_4717120384;
		_case_end_4717122224:;
		if (!((12LL) == _match_expr)) { goto _case_end_4717120848; }
		_case_begin_4717120848:;
		{
			return 7LLU;
		}
		goto _match_end_4717120384;
		_case_end_4717120848:;
		_case_begin_4717119536:;
		{
			return 0LLU;
		}
		goto _match_end_4717120384;
		_case_end_4717119536:;
		_match_end_4717120384:;
	}
}



inline jule::Slice<jule::Str> _1e256bd80_args(void) {
	return jule::args();
}



inline std::tuple<jule::Str,jule::Int> _1e256bd80_working_dir(void) {
	jule::Str _3010_p;
	jule::Int _3013_err;
	std::tie(_3010_p,_3013_err) = _1e257c489___getwd();
	return std::make_tuple(_3010_p,_3013_err);
}



inline std::tuple<jule::Str,jule::Int> _1e257c489___getwd(void) {
	jule::U8* _1113_buff = _1e25838e1_getcwd(nullptr,0LLU);
	if (_1113_buff == nullptr) {
		return std::make_tuple(jule::Str(),_1e256c149_get_last_os_error());
	}
	jule::Str _159_pwd = _1e25ebd33_byte_ptr_to_str(_1113_buff);
	{
		_1e25d1664_free(_1113_buff);
	}
	return std::make_tuple(_159_pwd,0LLU);
}



inline jule::Str _1e2517b61_clean(jule::Str _10718_path) {
	jule::Str _1089_original_path = _10718_path;
	jule::Int _1099_vol_len = _1e2516148_volume_name_len(_10718_path);
	_10718_path=_10718_path.slice(_1099_vol_len);
	if (_10718_path == jule::Str()) {
		if (((_1099_vol_len > 1LL) && _1e2516148_is_path_sep(_1089_original_path[0LL])) && _1e2516148_is_path_sep(_1089_original_path[1LL])) {
			return _1e2517b61_from_slash(_1089_original_path);
		}
		return _1089_original_path + jule::Str(".", 1);
	}
	jule::Bool _1189_rooted = _1e2516148_is_path_sep(_10718_path[0LL]);
	jule::I64 _1259_n = _10718_path.len();
	_1e2517b61_LazyBuff _12613_out = _1e2517b61_LazyBuff(_10718_path,jule::Slice<jule::U8>(),jule::Int(),_1089_original_path,_1099_vol_len);
	jule::Int _13114_r = 0LL;
	jule::Int _13121_dotdot = 0LL;
	std::tie(_13114_r,_13121_dotdot) = std::make_tuple(0LL,0LL);
	if (_1189_rooted) {
		_12613_out._method_append(47LLU);
		std::tie(_13114_r,_13121_dotdot) = std::make_tuple(1LL,1LL);
	}
	while (_13114_r < _1259_n) {
		{
			{
				if (!((_1e2516148_is_path_sep(_10718_path[_13114_r])))) { goto _case_end_4717185104; }
				_case_begin_4717185104:;
				{
					(_13114_r)++;
				}
				goto _match_end_4717180592;
				_case_end_4717185104:;
				if (!(((_10718_path[_13114_r] == '.') && (((_13114_r + 1LL) == _1259_n) || _1e2516148_is_path_sep(_10718_path[_13114_r + 1LL]))))) { goto _case_end_4717193344; }
				_case_begin_4717193344:;
				{
					(_13114_r)++;
				}
				goto _match_end_4717180592;
				_case_end_4717193344:;
				if (!((((_10718_path[_13114_r] == '.') && (_10718_path[_13114_r + 1LL] == '.')) && (((_13114_r + 2LL) == _1259_n) || _1e2516148_is_path_sep(_10718_path[_13114_r + 2LL]))))) { goto _case_end_4717191520; }
				_case_begin_4717191520:;
				{
					_13114_r+=2LL;
					{
						if (!((_12613_out._field_w > _13121_dotdot))) { goto _case_end_4717197328; }
						_case_begin_4717197328:;
						{
							(_12613_out._field_w)--;
							while ((_12613_out._field_w > _13121_dotdot) && (!(_1e2516148_is_path_sep(static_cast<jule::U8>(_12613_out._method_index(_12613_out._field_w)))))) {
								{
									(_12613_out._field_w)--;
								}
							_iter_next_4717202448:;
							}
							_iter_end_4717202448:;
						}
						goto _match_end_4717194416;
						_case_end_4717197328:;
						if (!(((!(_1189_rooted))))) { goto _case_end_4717200848; }
						_case_begin_4717200848:;
						{
							if (_12613_out._field_w > 0LL) {
								_12613_out._method_append(47LLU);
							}
							_12613_out._method_append('.');
							_12613_out._method_append('.');
							_13121_dotdot=_12613_out._field_w;
						}
						goto _match_end_4717194416;
						_case_end_4717200848:;
						_match_end_4717194416:;
					}
				}
				goto _match_end_4717180592;
				_case_end_4717191520:;
				_case_begin_4717180704:;
				{
					if ((_1189_rooted && (_12613_out._field_w != 1LL)) || ((!(_1189_rooted)) && (_12613_out._field_w != 0LL))) {
						_12613_out._method_append(47LLU);
					}
					if (((false && (_12613_out._field_w == 0LL)) && (_12613_out._field_vol_len == 0LL)) && (_13114_r != 0LL)) {
						jule::Int _17425_i = _13114_r;
						for (; (_17425_i < _1259_n) && (!(_1e2516148_is_path_sep(_10718_path[_17425_i]))); (_17425_i)++) {
							{
								if (_10718_path[_17425_i] == ':') {
									_12613_out._method_append('.');
									_12613_out._method_append(47LLU);
									goto _iter_end_4717184288;
								}
							}
						_iter_next_4717184288:;
						}
						_iter_end_4717184288:;
					}
					for (; (_13114_r < _1259_n) && (!(_1e2516148_is_path_sep(_10718_path[_13114_r]))); (_13114_r)++) {
						{
							_12613_out._method_append(_10718_path[_13114_r]);
						}
					_iter_next_4717189216:;
					}
					_iter_end_4717189216:;
				}
				goto _match_end_4717180592;
				_case_end_4717180704:;
				_match_end_4717180592:;
			}
		}
	_iter_next_4717180224:;
	}
	_iter_end_4717180224:;
	if (_12613_out._field_w == 0LL) {
		_12613_out._method_append('.');
	}
	return _1e2517b61_from_slash(_12613_out._method_string());
}



inline jule::Str _1e2517b61_from_slash(jule::Str _21019_path) {
	if (true) {
		return _21019_path;
	}
	return _21019_path.replace(jule::Str("/", 1),static_cast<jule::Str>(47LL),-1LL);
}



inline jule::Str _1e2517b61_join(jule::Slice<jule::Str> _22413_elem) {
	return _1e2516148___join(_22413_elem);
}



inline jule::Str _1e2517b61_ext(jule::Str _22912_path) {
	jule::I64 _23013_i = _22912_path.len() - 1LL;
	for (; (_23013_i >= 0LL) && (!(_1e2516148_is_path_sep(_22912_path[_23013_i]))); (_23013_i)--) {
		{
			if (_22912_path[_23013_i] == '.') {
				return _22912_path.slice(_23013_i);
			}
		}
	_iter_next_4717218336:;
	}
	_iter_end_4717218336:;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _1e2517b61_abs(jule::Str _24412_path) {
	jule::Str _24510_abs_path;
	jule::Bool _24520_ok;
	std::tie(_24510_abs_path,_24520_ok) = _1e2516148___abs(_24412_path);
	return std::make_tuple(_24510_abs_path,_24520_ok);
}



inline jule::Str _1e2517b61_base(jule::Str _25317_path) {
	if (_25317_path == jule::Str()) {
		return jule::Str(".", 1);
	}
	while ((_25317_path.len() > 0LL) && _1e2516148_is_path_sep(_25317_path[_25317_path.len() - 1LL])) {
		{
			_25317_path=_25317_path.slice(0LL,_25317_path.len() - 1LL);
		}
	_iter_next_4717226336:;
	}
	_iter_end_4717226336:;
	_25317_path=_25317_path.slice(_1e2517b61_volume_name(_25317_path).len());
	jule::I64 _26413_i = _25317_path.len() - 1LL;
	while ((_26413_i >= 0LL) && (!(_1e2516148_is_path_sep(_25317_path[_26413_i])))) {
		{
			(_26413_i)--;
		}
	_iter_next_4717227840:;
	}
	_iter_end_4717227840:;
	if (_26413_i >= 0LL) {
		_25317_path=_25317_path.slice(_26413_i + 1LL);
	}
	if (_25317_path == jule::Str()) {
		return static_cast<jule::Str>(47LL);
	}
	return _25317_path;
}



inline jule::Str _1e2517b61_dir(jule::Str _28412_path) {
	jule::Str _2859_vol = _1e2517b61_volume_name(_28412_path);
	jule::I64 _28613_i = _28412_path.len() - 1LL;
	while ((_28613_i >= _2859_vol.len()) && (!(_1e2516148_is_path_sep(_28412_path[_28613_i])))) {
		{
			(_28613_i)--;
		}
	_iter_next_4717233312:;
	}
	_iter_end_4717233312:;
	jule::Str _2909_dir = _1e2517b61_clean(_28412_path.slice(_2859_vol.len(),_28613_i + 1LL));
	if ((_2909_dir == jule::Str(".", 1)) && (_2859_vol.len() > 2LL)) {
		return _2859_vol;
	}
	return _2859_vol + _2909_dir;
}



inline jule::Str _1e2517b61_volume_name(jule::Str _30220_path) {
	return _1e2517b61_from_slash(_30220_path.slice(0LL,_1e2516148_volume_name_len(_30220_path)));
}



inline jule::Bool _1e2516148_is_path_sep(jule::U8 _4720_c) {
	return 47LL == _4720_c;
}



inline jule::Bool _1e2516148_is_abs(jule::Str _5215_path) {
	return _5215_path.has_prefix(jule::Str("/", 1));
}



inline jule::Int _1e2516148_volume_name_len(jule::Str _5620_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _1e2516148___abs(jule::Str _5810_path) {
	jule::Bool _5828_ok = jule::Bool();
	if (_1e2516148_is_abs(_5810_path)) {
		_5828_ok = true;
		return std::make_tuple(_1e2517b61_clean(_5810_path),_5828_ok);
	}
	jule::Str _6210_wd;
	jule::Int _6214_err;
	std::tie(_6210_wd,_6214_err) = _1e256bd80_working_dir();
	if (_6214_err != 0LLU) {
		_5828_ok = false;
		return std::make_tuple(jule::Str(),_5828_ok);
	}
	_5828_ok = true;
	return std::make_tuple(_1e2516148___join(jule::Slice<jule::Str>({_6210_wd,_5810_path})),_5828_ok);
}



inline jule::Str _1e2516148_str_join(jule::Slice<jule::Str> _6913_elems,jule::Str _6927_sep) {
	{
		auto _match_expr{ _6913_elems.len() };
		if (!((0LL) == _match_expr)) { goto _case_end_4717256544; }
		_case_begin_4717256544:;
		{
			return jule::Str();
		}
		goto _match_end_4717255984;
		_case_end_4717256544:;
		if (!((1LL) == _match_expr)) { goto _case_end_4717256640; }
		_case_begin_4717256640:;
		{
			return _6913_elems[0LL];
		}
		goto _match_end_4717255984;
		_case_end_4717256640:;
		_match_end_4717255984:;
	}
	jule::Str _7513_s = _6913_elems[0LL];
	{
		auto expr = _6913_elems.slice(1LL);
		auto it = expr.begin();
		_iter_begin_4717259760:;
		if (it != expr.end()) {
			jule::Str &_1e2516148_elem = *it;
			{
				_7513_s+=_6927_sep + _1e2516148_elem;
			}
			_iter_next_4717259760:;
			++it;
			goto _iter_begin_4717259760;
		}
		_iter_end_4717259760:;
	}
	return _7513_s;
}



inline jule::Str _1e2516148___join(jule::Slice<jule::Str> _8211_elem) {
	{
		auto &expr = _8211_elem;
		auto it = expr.begin();
		_iter_begin_4717261008:;
		if (it != expr.end()) {
			jule::Int _1e2516148_i = it - expr.begin();
			jule::Str &_1e2516148_e = *it;
			{
				if (_1e2516148_e != jule::Str()) {
					return _1e2517b61_clean(_1e2516148_str_join(_8211_elem.slice(_1e2516148_i),static_cast<jule::Str>(47LL)));
				}
			}
			_iter_next_4717261008:;
			++it;
			_1e2516148_i++;
			goto _iter_begin_4717261008;
		}
		_iter_end_4717261008:;
	}
	return jule::Str();
}



inline void _1e2506e5d_exit(jule::Int _1213_code) {
	_1e25c1544_exit(_1213_code);
}



inline jule::Str _1e2506e5d_executable(void) {
	return jule::executable();
}



inline jule::Bool _1e243c019_is_std_header_path(jule::Str _2627_p) {
	return (_2627_p[0LL] == '<') && (_2627_p[_2627_p.len() - 1LL] == '>');
}



inline jule::Bool _1e243c019_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto &expr = _1e243c019_CPP_HEADER_EXTS;
		auto it = expr.begin();
		_iter_begin_4717421008:;
		if (it != expr.end()) {
			jule::Str &_1e243c019_valid_ext = *it;
			{
				if (_3128_ext == _1e243c019_valid_ext) {
					return true;
				}
			}
			_iter_next_4717421008:;
			++it;
			goto _iter_begin_4717421008;
		}
		_iter_end_4717421008:;
	}
	return false;
}



inline jule::Bool _1e243c019_is_valid_cpp_ext(jule::Str _4225_ext) {
	{
		auto &expr = _1e243c019_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_4717421712:;
		if (it != expr.end()) {
			jule::Str &_1e243c019_e = *it;
			{
				if (_4225_ext == _1e243c019_e) {
					return true;
				}
			}
			_iter_next_4717421712:;
			++it;
			goto _iter_begin_4717421712;
		}
		_iter_end_4717421712:;
	}
	{
		auto &expr = _1e243c019_OBJECTIVE_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_4717425664:;
		if (it != expr.end()) {
			jule::Str &_1e243c019_e = *it;
			{
				if (_4225_ext == _1e243c019_e) {
					return true;
				}
			}
			_iter_next_4717425664:;
			++it;
			goto _iter_begin_4717425664;
		}
		_iter_end_4717425664:;
	}
	return false;
}



inline jule::Str _1e24777a2_logf(jule::Str _25713_fmt,jule::Slice<jule::Any> _25726_args) {
	return _1e24777a2_apply_fmt(_25713_fmt,_25726_args);
}



inline jule::Str _1e24777a2_arg_to_str(jule::Any _26115_arg) {
	{
		auto &_match_expr{ _26115_arg };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_4717430608; }
		_case_begin_4717430608:;
		{
			return _26115_arg.operator jule::Str();
		}
		goto _match_end_4717428144;
		_case_end_4717430608:;
		if (!(_match_expr.type_is<jule::U8>())) { goto _case_end_4717430800; }
		_case_begin_4717430800:;
		{
			return static_cast<jule::Str>(_26115_arg.operator jule::U8());
		}
		goto _match_end_4717428144;
		_case_end_4717430800:;
		if (!(_match_expr.type_is<jule::I32>())) { goto _case_end_4717430896; }
		_case_begin_4717430896:;
		{
			return static_cast<jule::Str>(_26115_arg.operator jule::I32());
		}
		goto _match_end_4717428144;
		_case_end_4717430896:;
		_case_begin_4717428416:;
		{
			return jule::Str("<fmt?>", 6);
		}
		goto _match_end_4717428144;
		_case_end_4717428416:;
		_match_end_4717428144:;
	}
}



inline jule::Int _1e24777a2_find_next_fmt(jule::Str _27018_fmt) {
	{
		auto &expr = _27018_fmt;
		auto it = expr.begin();
		_iter_begin_4717433184:;
		if (it != expr.end()) {
			jule::Int _1e24777a2_i = it - expr.begin();
			jule::U8 &_1e24777a2_b = *it;
			{
				if (_1e24777a2_b == '@') {
					return _1e24777a2_i;
				}
			}
			_iter_next_4717433184:;
			++it;
			_1e24777a2_i++;
			goto _iter_begin_4717433184;
		}
		_iter_end_4717433184:;
	}
	return -1LL;
}



inline jule::Str _1e24777a2_apply_fmt(jule::Str _27918_fmt,jule::Slice<jule::Any> _27928_args) {
	jule::Str _28013_s = jule::Str();
	{
		auto &expr = _27928_args;
		auto it = expr.begin();
		_iter_begin_4717438480:;
		if (it != expr.end()) {
			jule::Any &_1e24777a2_arg = *it;
			{
				jule::Int _28313_i = _1e24777a2_find_next_fmt(_27918_fmt);
				if (_28313_i == -1LL) {
					goto _iter_end_4717438480;
				}
				_28013_s+=_27918_fmt.slice(0LL,_28313_i);
				_28013_s+=_1e24777a2_arg_to_str(_1e24777a2_arg);
				_27918_fmt=_27918_fmt.slice(_28313_i + 1LL);
			}
			_iter_next_4717438480:;
			++it;
			goto _iter_begin_4717438480;
		}
		_iter_end_4717438480:;
	}
	_28013_s+=_27918_fmt;
	return _28013_s;
}



inline jule::Bool _1e249080e_is_top_directive(jule::Str _2625_directive) {
	return (_2625_directive == jule::Str("pass", 4)) || (_2625_directive == jule::Str("build", 5));
}



inline jule::Bool _1e24c3798_is_windows(jule::Str _5119_os) {
	return _5119_os == jule::Str("windows", 7);
}



inline jule::Bool _1e24c3798_is_darwin(jule::Str _5318_os) {
	return _5318_os == jule::Str("darwin", 6);
}



inline jule::Bool _1e24c3798_is_linux(jule::Str _5517_os) {
	return _5517_os == jule::Str("linux", 5);
}



inline jule::Bool _1e24c3798_is_i386(jule::Str _5716_arch) {
	return _5716_arch == jule::Str("i386", 4);
}



inline jule::Bool _1e24c3798_is_amd64(jule::Str _5917_arch) {
	return _5917_arch == jule::Str("amd64", 5);
}



inline jule::Bool _1e24c3798_is_arm64(jule::Str _6117_arch) {
	return _6117_arch == jule::Str("arm64", 5);
}



inline jule::Bool _1e24c3798_is_unix(jule::Str _6316_os) {
	return _1e24c3798_is_darwin(_6316_os) || _1e24c3798_is_linux(_6316_os);
}



inline jule::Bool _1e24c3798_is_32bit(jule::Str _6517_arch) {
	return _1e24c3798_is_i386(_6517_arch);
}



inline jule::Bool _1e24c3798_is_64bit(jule::Str _6717_arch) {
	return _1e24c3798_is_amd64(_6717_arch) || _1e24c3798_is_arm64(_6717_arch);
}



inline void _1e24c38db_exit_err(jule::Str _1613_msg) {
	
	jule::outln(_1613_msg);
	_1e2506e5d_exit(1LL);
}



inline void _1e24c38db_init(void) {
	jule::Str _2413_path = _1e2506e5d_executable();
	if (_2413_path == jule::Str()) {
		_1e24c38db_exit_err(jule::Str("std::jule::build: executable file cannot found", 46));
	}
	jule::Str _2910_pwd;
	jule::Int _2915_err;
	std::tie(_2910_pwd,_2915_err) = _1e256bd80_working_dir();
	if (_2915_err != 0LLU) {
		_1e24c38db_exit_err(jule::Str("std::jule::build: working directory path cannot found", 53));
	}
	jule::Str _349_path_exec = _1e2517b61_dir(_2413_path);
	_2413_path=_1e2517b61_join(jule::Slice<jule::Str>({_349_path_exec,jule::Str("..", 2)}));
	{
		_1e24c38db_PATH_WD=_2910_pwd;
		_1e24c38db_PATH_EXEC=_349_path_exec;
		_1e24c38db_PATH_STDLIB=_1e2517b61_join(jule::Slice<jule::Str>({_2413_path,jule::Str("std", 3)}));
		_1e24c38db_PATH_API=_1e2517b61_join(jule::Slice<jule::Str>({_1e24c38db_PATH_EXEC,jule::Str("..", 2)}));
		_1e24c38db_PATH_API=_1e2517b61_join(jule::Slice<jule::Str>({_1e24c38db_PATH_API,jule::Str("api", 3)}));
		_1e24c38db_PATH_API=_1e2517b61_join(jule::Slice<jule::Str>({_1e24c38db_PATH_API,jule::Str("jule.hpp", 8)}));
	}
}



inline jule::Int _1e3ac34a1_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::Int>(64LL - _1e3ac34a1_len64(_6124_x));
}



inline jule::Int _1e3ac34a1_trailing_zeros(jule::Uint _8323_x) {
	if (false) {
		return static_cast<jule::Int>(_1e3ac34a1_trailing_zeros32(static_cast<jule::U32>(_8323_x)));
	}
	return static_cast<jule::Int>(_1e3ac34a1_trailing_zeros64(static_cast<jule::U64>(_8323_x)));
}



inline jule::Int _1e3ac34a1_trailing_zeros32(jule::U32 _10525_x) {
	if (_10525_x == 0LL) {
		return 32LL;
	}
	return static_cast<jule::Int>(_1e3ac34a1_DE_BRUIJN32_TAB[static_cast<jule::Int>(((_10525_x & (-(_10525_x))) * 125613361LL) >> 27LL)]);
}



inline jule::Int _1e3ac34a1_trailing_zeros64(jule::U64 _11425_x) {
	if (_11425_x == 0LL) {
		return 64LL;
	}
	return static_cast<jule::Int>(_1e3ac34a1_DE_BRUIJN64_TAB[static_cast<jule::Int>(((_11425_x & (-(_11425_x))) * 285870213051353865LL) >> 58LL)]);
}



inline jule::Int _1e3ac34a1_len32(jule::U32 _35218_x) {
	jule::Int _35228_n = jule::Int();
	if (_35218_x >= 65536LLU) {
		_35218_x>>=16LL;
		_35228_n=16LL;
	}
	if (_35218_x >= 256LLU) {
		_35218_x>>=8LL;
		_35228_n+=8LL;
	}
	_35228_n = static_cast<jule::Int>(_35228_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_35218_x)]));
	return _35228_n;
}



inline jule::Int _1e3ac34a1_len64(jule::U64 _36618_x) {
	jule::Int _36628_n = jule::Int();
	if (_36618_x >= 4294967296LLU) {
		_36618_x>>=32LL;
		_36628_n=32LL;
	}
	if (_36618_x >= 65536LLU) {
		_36618_x>>=16LL;
		_36628_n+=16LL;
	}
	if (_36618_x >= 256LLU) {
		_36618_x>>=8LL;
		_36628_n+=8LL;
	}
	_36628_n = static_cast<jule::Int>(_36628_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_36618_x)]));
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _1e3ac34a1_add64(jule::U64 _41514_x,jule::U64 _41522_y,jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>((_41514_x + _41522_y) + _41530_carry);
	_41554_carryout=static_cast<jule::U64>(((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LL);
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1e3ac34a1_mul64(jule::U64 _49914_x,jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	
	jule::U64 _5019_x0 = _49914_x & 4294967295LLU;
	jule::U64 _5029_x1 = _49914_x >> 32LL;
	jule::U64 _5039_y0 = _49922_y & 4294967295LLU;
	jule::U64 _5049_y1 = _49922_y >> 32LL;
	jule::U64 _5059_w0 = _5019_x0 * _5039_y0;
	jule::U64 _5069_t = (_5029_x1 * _5039_y0) + (_5059_w0 >> 32LL);
	jule::U64 _50713_w1 = _5069_t & 4294967295LLU;
	jule::U64 _5089_w2 = _5069_t >> 32LL;
	_50713_w1+=static_cast<jule::U64>(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>(((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LL));
	_49941_lo=static_cast<jule::U64>(_49914_x * _49922_y);
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _1e35250bd_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _1e35250bd_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _1e35250bd_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _1e35250bd_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline jule::F64 _1e35ee7b3_nan(void) {
	return static_cast<jule::F64>(_1e35250bd_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _1e35ee7b3_is_nan(jule::F64 _5215_f) {
	return _5215_f != _5215_f;
}



inline jule::F64 _1e35ee7b3_inf(jule::Int _6112_sign) {
	if (_6112_sign >= 0LL) {
		return static_cast<jule::F64>(_1e35250bd_f64_from_bits(9218868437227405312LLU));
	}
	return static_cast<jule::F64>(_1e35250bd_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _1e35ee7b3_is_inf(jule::F64 _7215_f,jule::Int _7223_sign) {
	return ((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64));
}



inline jule::F64 _1e36b997c_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_1e35250bd_f64_from_bits(static_cast<jule::U64>(_1e35250bd_f64_bits(_4312_x) & 9223372036854775807LLU)));
}



inline std::tuple<jule::F64,jule::F64> _1e3725ad7_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	
	jule::F64 _469_abs_f = _1e36b997c_abs(_4413_f);
	jule::F64 _4713_i = 0LL;
	if (_469_abs_f > 4503599627370496LL) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>(_469_abs_f + 4503599627370496LL);
		_4713_i-=4503599627370496LL;
		while (_4713_i > _469_abs_f) {
			{
				(_4713_i)--;
			}
		_iter_next_4718660080:;
		}
		_iter_end_4718660080:;
		if (_4413_f < 0LL) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		}
	}
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>(_4413_f - _4713_i);
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::Str _1e2495d64_fmt_float(jule::F64 _7818_f,jule::U8 _7826_fmt,jule::Int _7837_prec,jule::Int _7848_bit_size) {
	return static_cast<jule::Str>(_1e2495d64_generic_ftoa(nullptr,_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _1e2495d64_generic_ftoa(jule::Slice<jule::U8> _8221_dst,jule::F64 _8234_val,jule::U8 _8244_fmt,jule::Int _8259_prec,jule::Int _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;
	_1e2495d64_FloatInfo* _8413_flt = nullptr;
	{
		auto &_match_expr{ _8270_bit_size };
		if (!((32LL) == _match_expr)) { goto _case_end_4720007568; }
		_case_begin_4720007568:;
		{
			_8313_bits=static_cast<jule::U64>(_1e35250bd_f32_bits(static_cast<jule::F32>(_8234_val)));
			_8413_flt=(&(_1e2495d64_F32_INFO));
		}
		goto _match_end_4720006048;
		_case_end_4720007568:;
		if (!((64LL) == _match_expr)) { goto _case_end_4720007136; }
		_case_begin_4720007136:;
		{
			_8313_bits=static_cast<jule::U64>(_1e35250bd_f64_bits(_8234_val));
			_8413_flt=(&(_1e2495d64_F64_INFO));
		}
		goto _match_end_4720006048;
		_case_end_4720007136:;
		_case_begin_4720005520:;
		{
			jule::panic(jule::Str("std::conv: illegal bit_size", 27));
		}
		goto _match_end_4720006048;
		_case_end_4720005520:;
		_match_end_4720006048:;
	}
	jule::Bool _969_neg = (_8313_bits >> (_8413_flt->_field_expbits + _8413_flt->_field_mantbits)) != 0LL;
	jule::Int _9713_exp = static_cast<jule::Int>(_8313_bits >> _8413_flt->_field_mantbits) & ((1LL << _8413_flt->_field_expbits) - 1LL);
	jule::U64 _9813_mant = _8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits) - 1LL);
	{
		auto &_match_expr{ _9713_exp };
		if (!(((1LL << _8413_flt->_field_expbits) - 1LL) == _match_expr)) { goto _case_end_4720016400; }
		_case_begin_4720016400:;
		{
			jule::Str _10317_s = jule::Str();
			{
				if (!((_9813_mant != 0LL))) { goto _case_end_4720020624; }
				_case_begin_4720020624:;
				{
					_10317_s=jule::Str("nan", 3);
				}
				goto _match_end_4720019728;
				_case_end_4720020624:;
				if (!((_969_neg))) { goto _case_end_4720020800; }
				_case_begin_4720020800:;
				{
					_10317_s=jule::Str("-inf", 4);
				}
				goto _match_end_4720019728;
				_case_end_4720020800:;
				_case_begin_4720019840:;
				{
					_10317_s=jule::Str("+inf", 4);
				}
				goto _match_end_4720019728;
				_case_end_4720019840:;
				_match_end_4720019728:;
			}
			return jule::append(_8221_dst,static_cast<jule::Slice<jule::U8>>(_10317_s));
		}
		goto _match_end_4720015264;
		_case_end_4720016400:;
		if (!((0LL) == _match_expr)) { goto _case_end_4720017824; }
		_case_begin_4720017824:;
		{
			(_9713_exp)++;
		}
		goto _match_end_4720015264;
		_case_end_4720017824:;
		_case_begin_4720008480:;
		{
			_9813_mant|=static_cast<jule::Uint>(static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits);
		}
		goto _match_end_4720015264;
		_case_end_4720008480:;
		_match_end_4720015264:;
	}
	_9713_exp+=_8413_flt->_field_bias;
	if (_8244_fmt == 'b') {
		return _1e2495d64_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if ((_8244_fmt == 'x') || (_8244_fmt == 'X')) {
		return _1e2495d64_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if (false) {
		return _1e2495d64_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	_1e2495d64_DecimalSlice _13413_digs = _1e2495d64_DecimalSlice();
	jule::Bool _13513_ok = false;
	jule::Bool _1379_shortest = _8259_prec < 0LL;
	if (_1379_shortest) {
		jule::Array<jule::U8,32> _14013_buf = jule::Array<jule::U8,32>();
		_13413_digs._field_d=_14013_buf.slice(0LL);
		_1e3417147_ryu_ftoa_shortest(_13413_digs,_9813_mant,static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),(*(_8413_flt)));
		_13513_ok=true;
		{
			auto &_match_expr{ _8244_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4720034400; }
			_case_begin_4720034400:;
			{
				_8259_prec=static_cast<jule::Int>(_1e2495d64_max(static_cast<jule::Int>(_13413_digs._field_nd - 1LL),0LL));
			}
			goto _match_end_4720034128;
			_case_end_4720034400:;
			if (!(('f') == _match_expr)) { goto _case_end_4720034688; }
			_case_begin_4720034688:;
			{
				_8259_prec=static_cast<jule::Int>(_1e2495d64_max(static_cast<jule::Int>(_13413_digs._field_nd - _13413_digs._field_dp),0LL));
			}
			goto _match_end_4720034128;
			_case_end_4720034688:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4720034784; }
			_case_begin_4720034784:;
			{
				_8259_prec=_13413_digs._field_nd;
			}
			goto _match_end_4720034128;
			_case_end_4720034784:;
			_match_end_4720034128:;
		}
	} else if (_8244_fmt != 'f') {
		jule::Int _15517_digits = _8259_prec;
		{
			auto &_match_expr{ _8244_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4720040896; }
			_case_begin_4720040896:;
			{
				(_15517_digits)++;
			}
			goto _match_end_4720039600;
			_case_end_4720040896:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4720040448; }
			_case_begin_4720040448:;
			{
				if (_8259_prec == 0LL) {
					_8259_prec=1LL;
				}
				_15517_digits=_8259_prec;
			}
			goto _match_end_4720039600;
			_case_end_4720040448:;
			_case_begin_4720035104:;
			{
				_15517_digits=1LL;
			}
			goto _match_end_4720039600;
			_case_end_4720035104:;
			_match_end_4720039600:;
		}
		jule::Array<jule::U8,24> _16813_buf = jule::Array<jule::U8,24>();
		if ((_8270_bit_size == 32LL) && (_15517_digits <= 9LL)) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_1e3417147_ryu_ftoa_fixed32(_13413_digs,static_cast<jule::U32>(_9813_mant),static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),_15517_digits);
			_13513_ok=true;
		} else if (_15517_digits <= 18LL) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_1e3417147_ryu_ftoa_fixed64(_13413_digs,_9813_mant,static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),_15517_digits);
			_13513_ok=true;
		}
	}
	if ((!(_13513_ok))) {
		return _1e2495d64_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	return _1e2495d64_fmt_digits(_8221_dst,_1379_shortest,_969_neg,_13413_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _1e2495d64_big_ftoa(jule::Slice<jule::U8> _18617_dst,jule::Int _18634_prec,jule::U8 _18645_fmt,jule::Bool _18656_neg,jule::U64 _18713_mant,jule::Int _18724_exp,_1e2495d64_FloatInfo& _18735_flt) {
	_1e34a359b_Decimal _18813_d = _1e34a359b_Decimal();
	_18813_d._method_assign(_18713_mant);
	_18813_d._method_shift(static_cast<jule::Int>(_18724_exp - static_cast<jule::Int>(_18735_flt._field_mantbits)));
	_1e2495d64_DecimalSlice _19113_digs = _1e2495d64_DecimalSlice();
	jule::Bool _1929_shortest = _18634_prec < 0LL;
	if (_1929_shortest) {
		_1e2495d64_round_shortest(_18813_d,_18713_mant,_18724_exp,_18735_flt);
		_19113_digs=_1e2495d64_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
		{
			auto &_match_expr{ _18645_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4720062992; }
			_case_begin_4720062992:;
			{
				_18634_prec=static_cast<jule::Int>(_19113_digs._field_nd - 1LL);
			}
			goto _match_end_4720064464;
			_case_end_4720062992:;
			if (!(('f') == _match_expr)) { goto _case_end_4720061184; }
			_case_begin_4720061184:;
			{
				_18634_prec=static_cast<jule::Int>(_1e2495d64_max(static_cast<jule::Int>(_19113_digs._field_nd - _19113_digs._field_dp),0LL));
			}
			goto _match_end_4720064464;
			_case_end_4720061184:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4720064880; }
			_case_begin_4720064880:;
			{
				_18634_prec=_19113_digs._field_nd;
			}
			goto _match_end_4720064464;
			_case_end_4720064880:;
			_match_end_4720064464:;
		}
	} else {
		{
			auto &_match_expr{ _18645_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4720066960; }
			_case_begin_4720066960:;
			{
				_18813_d._method_round(static_cast<jule::Int>(_18634_prec + 1LL));
			}
			goto _match_end_4720065568;
			_case_end_4720066960:;
			if (!(('f') == _match_expr)) { goto _case_end_4720067056; }
			_case_begin_4720067056:;
			{
				_18813_d._method_round(static_cast<jule::Int>(_18813_d._field_dp + _18634_prec));
			}
			goto _match_end_4720065568;
			_case_end_4720067056:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4720067152; }
			_case_begin_4720067152:;
			{
				if (_18634_prec == 0LL) {
					_18634_prec=1LL;
				}
				_18813_d._method_round(_18634_prec);
			}
			goto _match_end_4720065568;
			_case_end_4720067152:;
			_match_end_4720065568:;
		}
		_19113_digs=_1e2495d64_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
	}
	return _1e2495d64_fmt_digits(_18617_dst,_1929_shortest,_18656_neg,_19113_digs,_18634_prec,_18645_fmt);
}



inline jule::Slice<jule::U8> _1e2495d64_fmt_digits(jule::Slice<jule::U8> _22319_dst,jule::Bool _22332_shortest,jule::Bool _22348_neg,_1e2495d64_DecimalSlice _22413_digs,jule::Int _22437_prec,jule::U8 _22448_fmt) {
	{
		auto &_match_expr{ _22448_fmt };
		if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4720079440; }
		_case_begin_4720079440:;
		{
			return _1e2495d64_fmt_e(_22319_dst,_22348_neg,_22413_digs,_22437_prec,_22448_fmt);
		}
		goto _match_end_4720079248;
		_case_end_4720079440:;
		if (!(('f') == _match_expr)) { goto _case_end_4720079552; }
		_case_begin_4720079552:;
		{
			return _1e2495d64_fmt_f(_22319_dst,_22348_neg,_22413_digs,_22437_prec);
		}
		goto _match_end_4720079248;
		_case_end_4720079552:;
		if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4720079648; }
		_case_begin_4720079648:;
		{
			jule::Int _23217_eprec = _22437_prec;
			if ((_23217_eprec > _22413_digs._field_nd) && (_22413_digs._field_nd >= _22413_digs._field_dp)) {
				_23217_eprec=_22413_digs._field_nd;
			}
			if (_22332_shortest) {
				_23217_eprec=6LL;
			}
			jule::Int _24213_exp = _22413_digs._field_dp - 1LL;
			if ((_24213_exp < -4LL) || (_24213_exp >= _23217_eprec)) {
				if (_22437_prec > _22413_digs._field_nd) {
					_22437_prec=_22413_digs._field_nd;
				}
				return _1e2495d64_fmt_e(_22319_dst,_22348_neg,_22413_digs,static_cast<jule::Int>(_22437_prec - 1LL),static_cast<jule::U8>((_22448_fmt + 'e') - 'g'));
			}
			if (_22437_prec > _22413_digs._field_dp) {
				_22437_prec=_22413_digs._field_nd;
			}
			return _1e2495d64_fmt_f(_22319_dst,_22348_neg,_22413_digs,static_cast<jule::Int>(_1e2495d64_max(static_cast<jule::Int>(_22437_prec - _22413_digs._field_dp),0LL)));
		}
		goto _match_end_4720079248;
		_case_end_4720079648:;
		_match_end_4720079248:;
	}
	return jule::append(_22319_dst,jule::Slice<jule::U8>({'%',_22448_fmt}));
}



inline void _1e2495d64_round_shortest(_1e34a359b_Decimal& _26124_d,jule::U64 _26136_mant,jule::Int _26147_exp,_1e2495d64_FloatInfo& _26158_flt) {
	if (_26136_mant == 0LL) {
		_26124_d._field_nd=0LL;
		return;
	}
	jule::Int _2829_minexp = _26158_flt._field_bias + 1LL;
	if ((_26147_exp > _2829_minexp) && ((332LL * (_26124_d._field_dp - _26124_d._field_nd)) >= (100LL * (_26147_exp - static_cast<jule::Int>(_26158_flt._field_mantbits))))) {
		return;
	}
	_1e34a359b_Decimal _29113_upper = _1e34a359b_Decimal();
	_29113_upper._method_assign(static_cast<jule::U64>((_26136_mant * 2LL) + 1LL));
	_29113_upper._method_shift(static_cast<jule::Int>((_26147_exp - static_cast<jule::Int>(_26158_flt._field_mantbits)) - 1LL));
	jule::U64 _30113_mantlo = 0LLU;
	jule::Int _30213_explo = 0LL;
	if ((_26136_mant > (1LL << _26158_flt._field_mantbits)) || (_26147_exp == _2829_minexp)) {
		_30113_mantlo=static_cast<jule::U64>(_26136_mant - 1LL);
		_30213_explo=_26147_exp;
	} else {
		_30113_mantlo=static_cast<jule::U64>((_26136_mant * 2LL) - 1LL);
		_30213_explo=static_cast<jule::Int>(_26147_exp - 1LL);
	}
	_1e34a359b_Decimal _31013_lower = _1e34a359b_Decimal();
	_31013_lower._method_assign(static_cast<jule::U64>((_30113_mantlo * 2LL) + 1LL));
	_31013_lower._method_shift(static_cast<jule::Int>((_30213_explo - static_cast<jule::Int>(_26158_flt._field_mantbits)) - 1LL));
	jule::Bool _3179_inclusive = jule::unsafe_mod(_26136_mant,2LL) == 0LL;
	jule::U8 _33013_upperdelta = 0LLU;
	jule::Int _33413_ui = 0LL;
	for (; ; (_33413_ui)++) {
		{
			jule::Int _33913_mi = (_33413_ui - _29113_upper._field_dp) + _26124_d._field_dp;
			if (_33913_mi >= _26124_d._field_nd) {
				goto _iter_end_4720103152;
			}
			jule::Int _34313_li = (_33413_ui - _29113_upper._field_dp) + _31013_lower._field_dp;
			jule::U8 _34417_l = static_cast<jule::U8>(48LLU);
			if ((_34313_li >= 0LL) && (_34313_li < _31013_lower._field_nd)) {
				_34417_l=_31013_lower._field_d[_34313_li];
			}
			jule::U8 _34817_m = static_cast<jule::U8>(48LLU);
			if (_33913_mi >= 0LL) {
				_34817_m=_26124_d._field_d[_33913_mi];
			}
			jule::U8 _35217_u = static_cast<jule::U8>(48LLU);
			if (_33413_ui < _29113_upper._field_nd) {
				_35217_u=_29113_upper._field_d[_33413_ui];
			}
			jule::Bool _36013_okdown = (_34417_l != _34817_m) || (_3179_inclusive && ((_34313_li + 1LL) == _31013_lower._field_nd));
			{
				if (!(((_33013_upperdelta == 0LL) && ((_34817_m + 1LL) < _35217_u)))) { goto _case_end_4720128176; }
				_case_begin_4720128176:;
				{
					_33013_upperdelta=2LL;
				}
				goto _match_end_4720126288;
				_case_end_4720128176:;
				if (!(((_33013_upperdelta == 0LL) && (_34817_m != _35217_u)))) { goto _case_end_4720128272; }
				_case_begin_4720128272:;
				{
					_33013_upperdelta=1LL;
				}
				goto _match_end_4720126288;
				_case_end_4720128272:;
				if (!(((_33013_upperdelta == 1LL) && ((_34817_m != '9') || (_35217_u != '0'))))) { goto _case_end_4720128848; }
				_case_begin_4720128848:;
				{
					_33013_upperdelta=2LL;
				}
				goto _match_end_4720126288;
				_case_end_4720128848:;
				_match_end_4720126288:;
			}
			jule::Bool _38113_okup = (_33013_upperdelta > 0LL) && ((_3179_inclusive || (_33013_upperdelta > 1LL)) || ((_33413_ui + 1LL) < _29113_upper._field_nd));
			{
				if (!((_36013_okdown && _38113_okup))) { goto _case_end_4720134160; }
				_case_begin_4720134160:;
				{
					_26124_d._method_round(static_cast<jule::Int>(_33913_mi + 1LL));
					return;
				}
				goto _match_end_4720131520;
				_case_end_4720134160:;
				if (!((_36013_okdown))) { goto _case_end_4720134400; }
				_case_begin_4720134400:;
				{
					_26124_d._method_round_down(static_cast<jule::Int>(_33913_mi + 1LL));
					return;
				}
				goto _match_end_4720131520;
				_case_end_4720134400:;
				if (!((_38113_okup))) { goto _case_end_4720134496; }
				_case_begin_4720134496:;
				{
					_26124_d._method_round_up(static_cast<jule::Int>(_33913_mi + 1LL));
					return;
				}
				goto _match_end_4720131520;
				_case_end_4720134496:;
				_match_end_4720131520:;
			}
		}
	_iter_next_4720103152:;
	}
	_iter_end_4720103152:;
}



inline jule::Slice<jule::U8> _1e2495d64_fmt_e(jule::Slice<jule::U8> _40014_dst,jule::Bool _40027_neg,_1e2495d64_DecimalSlice _40038_d,jule::Int _40055_prec,jule::U8 _40066_fmt) {
	if (_40027_neg) {
		_40014_dst.push('-');
	}
	jule::U8 _40713_ch = '0';
	if (_40038_d._field_nd != 0LL) {
		_40713_ch=_40038_d._field_d[0LL];
	}
	_40014_dst.push(_40713_ch);
	if (_40055_prec > 0LL) {
		_40014_dst.push('.');
		jule::Int _41617_i = 1LL;
		jule::Int _41713_m = _1e2495d64_min(_40038_d._field_nd,static_cast<jule::Int>(_40055_prec + 1LL));
		if (_41617_i < _41713_m) {
			_40014_dst=jule::append(_40014_dst,_40038_d._field_d.slice(_41617_i,_41713_m));
			_41617_i=_41713_m;
		}
		for (; _41617_i <= _40055_prec; (_41617_i)++) {
			{
				_40014_dst.push('0');
			}
		_iter_next_4720153856:;
		}
		_iter_end_4720153856:;
	}
	_40014_dst.push(_40066_fmt);
	jule::Int _42913_exp = _40038_d._field_dp - 1LL;
	if (_40038_d._field_nd == 0LL) {
		_42913_exp=0LL;
	}
	if (_42913_exp < 0LL) {
		_40713_ch='-';
		_42913_exp=static_cast<jule::Int>((-(_42913_exp)));
	} else {
		_40713_ch='+';
	}
	_40014_dst.push(_40713_ch);
	{
		if (!((_42913_exp < 10LL))) { goto _case_end_4720155792; }
		_case_begin_4720155792:;
		{
			_40014_dst.push('0');_40014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(_42913_exp) + '0'));
		}
		goto _match_end_4720155296;
		_case_end_4720155792:;
		if (!((_42913_exp < 100LL))) { goto _case_end_4720150912; }
		_case_begin_4720150912:;
		{
			_40014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_div(_42913_exp,10LL)) + '0'));_40014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(_42913_exp,10LL)) + '0'));
		}
		goto _match_end_4720155296;
		_case_end_4720150912:;
		_case_begin_4720158384:;
		{
			_40014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_div(_42913_exp,100LL)) + '0'));_40014_dst.push(static_cast<jule::U8>(jule::unsafe_mod(static_cast<jule::U8>(jule::unsafe_div(_42913_exp,10LL)),10LL) + '0'));_40014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(_42913_exp,10LL)) + '0'));
		}
		goto _match_end_4720155296;
		_case_end_4720158384:;
		_match_end_4720155296:;
	}
	return _40014_dst;
}



inline jule::Slice<jule::U8> _1e2495d64_fmt_f(jule::Slice<jule::U8> _45514_dst,jule::Bool _45527_neg,_1e2495d64_DecimalSlice _45538_d,jule::Int _45555_prec) {
	if (_45527_neg) {
		_45514_dst.push('-');
	}
	if (_45538_d._field_dp > 0LL) {
		jule::Int _46317_m = _1e2495d64_min(_45538_d._field_nd,_45538_d._field_dp);
		_45514_dst=jule::append(_45514_dst,_45538_d._field_d.slice(0LL,_46317_m));
		for (; _46317_m < _45538_d._field_dp; (_46317_m)++) {
			{
				_45514_dst.push('0');
			}
		_iter_next_4720171408:;
		}
		_iter_end_4720171408:;
	} else {
		_45514_dst.push('0');
	}
	if (_45555_prec > 0LL) {
		_45514_dst.push('.');
		jule::Int _47417_i = 0LL;
		for (; _47417_i < _45555_prec; (_47417_i)++) {
			{
				jule::U8 _47621_ch = static_cast<jule::U8>(48LLU);
				jule::Int _47717_j = _45538_d._field_dp + _47417_i;
				if ((0LL <= _47717_j) && (_47717_j < _45538_d._field_nd)) {
					_47621_ch=_45538_d._field_d[_47717_j];
				}
				_45514_dst.push(_47621_ch);
			}
		_iter_next_4720174096:;
		}
		_iter_end_4720174096:;
	}
	return _45514_dst;
}



inline jule::Slice<jule::U8> _1e2495d64_fmt_b(jule::Slice<jule::U8> _48814_dst,jule::Bool _48827_neg,jule::U64 _48838_mant,jule::Int _48853_exp,_1e2495d64_FloatInfo& _48864_flt) {
	if (_48827_neg) {
		_48814_dst.push('-');
	}
	std::tie(_48814_dst,std::ignore) = _1e3417be7_fmt_bits(_48814_dst,_48838_mant,10LL,false,true);
	_48814_dst.push('p');
	_48853_exp-=static_cast<jule::Int>(_48864_flt._field_mantbits);
	if (_48853_exp >= 0LL) {
		_48814_dst.push('+');
	}
	std::tie(_48814_dst,std::ignore) = _1e3417be7_fmt_bits(_48814_dst,static_cast<jule::U64>(_48853_exp),10LL,_48853_exp < 0LL,true);
	return _48814_dst;
}



inline jule::Slice<jule::U8> _1e2495d64_fmt_x(jule::Slice<jule::U8> _51014_dst,jule::Int _51027_prec,jule::U8 _51038_fmt,jule::Bool _51049_neg,jule::U64 _51113_mant,jule::Int _51128_exp,_1e2495d64_FloatInfo& _51139_flt) {
	if (_51113_mant == 0LL) {
		_51128_exp=0LL;
	}
	_51113_mant<<=static_cast<jule::Uint>(60LL - _51139_flt._field_mantbits);
	while ((_51113_mant != 0LL) && ((_51113_mant & 1152921504606846976LLU) == 0LL)) {
		{
			_51113_mant<<=1LL;
			(_51128_exp)--;
		}
	_iter_next_4720192928:;
	}
	_iter_end_4720192928:;
	if ((_51027_prec >= 0LL) && (_51027_prec < 15LL)) {
		jule::Uint _52513_shift = static_cast<jule::Uint>(_51027_prec * 4LL);
		jule::U64 _52613_extra = (_51113_mant << _52513_shift) & 1152921504606846975LLU;
		_51113_mant>>=static_cast<jule::Uint>(60LL - _52513_shift);
		if ((_52613_extra | (_51113_mant & 1LL)) > 576460752303423488LLU) {
			(_51113_mant)++;
		}
		_51113_mant<<=static_cast<jule::Uint>(60LL - _52513_shift);
		if ((_51113_mant & 2305843009213693952LLU) != 0LL) {
			_51113_mant>>=1LL;
			(_51128_exp)++;
		}
	}
	jule::Str _53913_hex = jule::Str("0123456789abcdef", 16);
	if (_51038_fmt == 'X') {
		_53913_hex=jule::Str("0123456789ABCDEF", 16);
	}
	if (_51049_neg) {
		_51014_dst.push('-');
	}
	_51014_dst.push('0');_51014_dst.push(_51038_fmt);_51014_dst.push(static_cast<jule::U8>('0' + static_cast<jule::U8>((_51113_mant >> 60LL) & 1LL)));
	_51113_mant<<=4LL;
	if ((_51027_prec < 0LL) && (_51113_mant != 0LL)) {
		_51014_dst.push('.');
		while (_51113_mant != 0LL) {
			{
				_51014_dst.push(_53913_hex[static_cast<jule::Int>((_51113_mant >> 60LL) & 15LL)]);
				_51113_mant<<=4LL;
			}
		_iter_next_4720201328:;
		}
		_iter_end_4720201328:;
	} else if (_51027_prec > 0LL) {
		_51014_dst.push('.');
		jule::Int _56017_i = 0LL;
		for (; _56017_i < _51027_prec; (_56017_i)++) {
			{
				_51014_dst.push(_53913_hex[static_cast<jule::Int>((_51113_mant >> 60LL) & 15LL)]);
				_51113_mant<<=4LL;
			}
		_iter_next_4720204512:;
		}
		_iter_end_4720204512:;
	}
	jule::U8 _56813_ch = static_cast<jule::U8>(80LLU);
	if (_51038_fmt == _1e24a4812_lower(_51038_fmt)) {
		_56813_ch='p';
	}
	_51014_dst.push(_56813_ch);
	if (_51128_exp < 0LL) {
		_56813_ch='-';
		_51128_exp=static_cast<jule::Int>((-(_51128_exp)));
	} else {
		_56813_ch='+';
	}
	_51014_dst.push(_56813_ch);
	{
		if (!((_51128_exp < 100LL))) { goto _case_end_4720216240; }
		_case_begin_4720216240:;
		{
			_51014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_div(_51128_exp,10LL)) + '0'));_51014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(_51128_exp,10LL)) + '0'));
		}
		goto _match_end_4720210528;
		_case_end_4720216240:;
		if (!((_51128_exp < 1000LL))) { goto _case_end_4720201664; }
		_case_begin_4720201664:;
		{
			_51014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_div(_51128_exp,100LL)) + '0'));_51014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(jule::unsafe_div(_51128_exp,10LL),10LL)) + '0'));_51014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(_51128_exp,10LL)) + '0'));
		}
		goto _match_end_4720210528;
		_case_end_4720201664:;
		_case_begin_4720211024:;
		{
			_51014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_div(_51128_exp,1000LL)) + '0'));_51014_dst.push(static_cast<jule::U8>(jule::unsafe_mod(static_cast<jule::U8>(jule::unsafe_div(_51128_exp,100LL)),10LL) + '0'));_51014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(jule::unsafe_div(_51128_exp,10LL),10LL)) + '0'));_51014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(_51128_exp,10LL)) + '0'));
		}
		goto _match_end_4720210528;
		_case_end_4720211024:;
		_match_end_4720210528:;
	}
	return _51014_dst;
}



inline jule::Int _1e2495d64_min(jule::Int _5938_a,jule::Int _59316_b) {
	if (_5938_a < _59316_b) {
		return _5938_a;
	}
	return _59316_b;
}



inline jule::Int _1e2495d64_max(jule::Int _6008_a,jule::Int _60016_b) {
	if (_6008_a > _60016_b) {
		return _6008_a;
	}
	return _60016_b;
}



inline jule::U8 _1e24a4812_lower(jule::U8 _4910_c) {
	return static_cast<jule::U8>(_4910_c | 32LL);
}



inline std::tuple<jule::U64,jule::Int> _1e24a4812_parse_uint(jule::Str _5423_s,jule::Int _5435_base,jule::Int _5450_bit_size) {
	if (_5423_s == jule::Str()) {
		return std::make_tuple(0LL,2LLU);
	}
	{
		if (!(((2LL <= _5435_base) && (_5435_base <= 36LL)))) { goto _case_end_4720235824; }
		goto _match_end_4720233200;
		_case_end_4720235824:;
		if (!((_5435_base == 0LL))) { goto _case_end_4720234944; }
		_case_begin_4720234944:;
		{
			_5435_base=10LL;
			if (_5423_s[0LL] == '0') {
				{
					if (!(((_5423_s.len() >= 3LL) && (_1e24a4812_lower(_5423_s[1LL]) == 'b')))) { goto _case_end_4720240192; }
					_case_begin_4720240192:;
					{
						_5435_base=2LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4720238272;
					_case_end_4720240192:;
					if (!(((_5423_s.len() >= 3LL) && (_1e24a4812_lower(_5423_s[1LL]) == 'o')))) { goto _case_end_4720239200; }
					_case_begin_4720239200:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4720238272;
					_case_end_4720239200:;
					if (!(((_5423_s.len() >= 3LL) && (_1e24a4812_lower(_5423_s[1LL]) == 'x')))) { goto _case_end_4720239728; }
					_case_begin_4720239728:;
					{
						_5435_base=16LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4720238272;
					_case_end_4720239728:;
					_case_begin_4720238416:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(1LL);
					}
					goto _match_end_4720238272;
					_case_end_4720238416:;
					_match_end_4720238272:;
				}
			}
		}
		goto _match_end_4720233200;
		_case_end_4720234944:;
		_case_begin_4720232320:;
		{
			return std::make_tuple(0LL,3LLU);
		}
		goto _match_end_4720233200;
		_case_end_4720232320:;
		_match_end_4720233200:;
	}
	if (_5450_bit_size == 0LL) {
		_5450_bit_size=64LLU;
	} else if ((_5450_bit_size < 0LL) || (_5450_bit_size > 64LL)) {
		return std::make_tuple(0LL,4LLU);
	}
	jule::U64 _9313_cutoff = 0LLU;
	{
		auto &_match_expr{ _5435_base };
		if (!((10LL) == _match_expr)) { goto _case_end_4720250368; }
		_case_begin_4720250368:;
		{
			_9313_cutoff=1844674407370955264LL;
		}
		goto _match_end_4720247456;
		_case_end_4720250368:;
		if (!((16LL) == _match_expr)) { goto _case_end_4720249984; }
		_case_begin_4720249984:;
		{
			_9313_cutoff=1152921504606846976LL;
		}
		goto _match_end_4720247456;
		_case_end_4720249984:;
		_case_begin_4720248496:;
		{
			_9313_cutoff=static_cast<jule::U64>(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5435_base)) + 1LL);
		}
		goto _match_end_4720247456;
		_case_end_4720248496:;
		_match_end_4720247456:;
	}
	jule::U64 _10013_max_val = 0LLU;
	{
		auto &_match_expr{ _5450_bit_size };
		if (!((32LL) == _match_expr)) { goto _case_end_4720246496; }
		_case_begin_4720246496:;
		{
			_10013_max_val=4294967295LLU;
		}
		goto _match_end_4720249696;
		_case_end_4720246496:;
		if (!((64LL) == _match_expr)) { goto _case_end_4720252480; }
		_case_begin_4720252480:;
		{
			_10013_max_val=jule::MAX_U64;
		}
		goto _match_end_4720249696;
		_case_end_4720252480:;
		_match_end_4720249696:;
	}
	jule::U64 _11213_n = 0LLU;
	{
		auto &expr = _5423_s;
		auto it = expr.begin();
		_iter_begin_4720253504:;
		if (it != expr.end()) {
			jule::U8 &_1e24a4812_c = *it;
			{
				jule::U8 _11417_d = 0LLU;
				{
					if (!((('0' <= _1e24a4812_c) && (_1e24a4812_c <= '9')))) { goto _case_end_4720259952; }
					_case_begin_4720259952:;
					{
						_11417_d=static_cast<jule::U8>(_1e24a4812_c - '0');
					}
					goto _match_end_4720257984;
					_case_end_4720259952:;
					if (!((('a' <= _1e24a4812_lower(_1e24a4812_c)) && (_1e24a4812_lower(_1e24a4812_c) <= 'z')))) { goto _case_end_4720259072; }
					_case_begin_4720259072:;
					{
						_11417_d=static_cast<jule::U8>((_1e24a4812_lower(_1e24a4812_c) - 'a') + 10LL);
					}
					goto _match_end_4720257984;
					_case_end_4720259072:;
					_case_begin_4720258096:;
					{
						return std::make_tuple(0LL,2LLU);
					}
					goto _match_end_4720257984;
					_case_end_4720258096:;
					_match_end_4720257984:;
				}
				if (_11417_d >= static_cast<jule::U8>(_5435_base)) {
					return std::make_tuple(0LL,2LLU);
				}
				if (_11213_n >= _9313_cutoff) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n*=static_cast<jule::U64>(_5435_base);
				jule::U64 _13413_n1 = _11213_n + static_cast<jule::U64>(_11417_d);
				if ((_13413_n1 < _11213_n) || (_13413_n1 > _10013_max_val)) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n=_13413_n1;
			}
			_iter_next_4720253504:;
			++it;
			goto _iter_begin_4720253504;
		}
		_iter_end_4720253504:;
	}
	return std::make_tuple(_11213_n,0LLU);
}



inline std::tuple<jule::I64,jule::Int> _1e24a4812_parse_int(jule::Str _16522_s,jule::Int _16530_base,jule::Int _16545_bit_size) {
	jule::I64 _16562_i = jule::I64();
	jule::Int _16570_err = 0LLU;
	if (_16522_s == jule::Str()) {
		_16562_i = 0LL;
		_16570_err = 2LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::Bool _17113_neg = false;
	if (_16522_s[0LL] == '+') {
		_16522_s=_16522_s.slice(1LL);
	} else if (_16522_s[0LL] == '-') {
		_17113_neg=true;
		_16522_s=_16522_s.slice(1LL);
	}
	jule::Uint _18013_un = 0LLU;
	std::tie(_18013_un,_16570_err) = _1e24a4812_parse_uint(_16522_s,_16530_base,_16545_bit_size);
	if ((_16570_err != 0LLU) && (_16570_err != 1LLU)) {
		_16562_i = 0LL;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_16545_bit_size == 0LL) {
		_16545_bit_size=64LLU;
	}
	jule::U64 _1909_cutoff = static_cast<jule::U64>(1LL << static_cast<jule::Uint>(_16545_bit_size - 1LL));
	if ((!(_17113_neg)) && (_18013_un >= _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>(_1909_cutoff - 1LL);
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_17113_neg && (_18013_un > _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>((-(static_cast<jule::I64>(_1909_cutoff))));
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::I64 _19713_n = static_cast<jule::I64>(_18013_un);
	if (_17113_neg) {
		_19713_n=static_cast<jule::I64>((-(_19713_n)));
	}
	_16562_i = _19713_n;
	_16570_err = 0LLU;
	return std::make_tuple(_16562_i,_16570_err);
}



inline std::tuple<jule::F64,jule::Bool> _1e32cb946_eisel_lemire64(jule::U64 _4123_man,jule::Int _4133_exp10,jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if (_4123_man == 0LL) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_1e35250bd_f64_from_bits(9223372036854775808LLU));
		}
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	if ((_4133_exp10 < -348LL) || (347LL < _4133_exp10)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::Int _579_clz = _1e3ac34a1_leading_zeros64(_4123_man);
	_4123_man<<=static_cast<jule::Uint>(_579_clz);
	
	jule::U64 _6013_ret_exp2 = static_cast<jule::U64>((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL) - static_cast<jule::U64>(_579_clz);
	jule::U64 _6314_x_hi;
	jule::U64 _6324_x_lo;
	std::tie(_6314_x_hi,_6324_x_lo) = _1e3ac34a1_mul64(_4123_man,_1e32cb946_DETAILED_POWS_OF_TEN[_4133_exp10 - -348LL].__at(1LL));
	if (((_6314_x_hi & 511LL) == 511LL) && ((_6324_x_lo + _4123_man) < _4123_man)) {
		jule::U64 _6714_y_hi;
		jule::U64 _6720_y_lo;
		std::tie(_6714_y_hi,_6720_y_lo) = _1e3ac34a1_mul64(_4123_man,_1e32cb946_DETAILED_POWS_OF_TEN[_4133_exp10 - -348LL].__at(0LL));
		jule::U64 _6818_merged_hi = _6314_x_hi;
		jule::U64 _6829_merged_lo = _6324_x_lo + _6714_y_hi;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,_6324_x_lo + _6714_y_hi);
		if (_6829_merged_lo < _6324_x_lo) {
			(_6818_merged_hi)++;
		}
		if ((((_6818_merged_hi & 511LL) == 511LL) && ((_6829_merged_lo + 1LL) == 0LL)) && ((_6720_y_lo + _4123_man) < _4123_man)) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		}
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	}
	jule::U64 _799_msb = _6314_x_hi >> 63LL;
	jule::U64 _8013_ret_mantissa = _6314_x_hi >> (_799_msb + 9LL);
	_6013_ret_exp2-=static_cast<jule::U64>(1LL ^ _799_msb);
	if (((_6324_x_lo == 0LL) && ((_6314_x_hi & 511LL) == 0LL)) && ((_8013_ret_mantissa & 3LL) == 1LL)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	_8013_ret_mantissa+=static_cast<jule::U64>(_8013_ret_mantissa & 1LL);
	_8013_ret_mantissa>>=1LL;
	if ((_8013_ret_mantissa >> 53LL) > 0LL) {
		_8013_ret_mantissa>>=1LL;
		_6013_ret_exp2+=1LL;
	}
	if ((_6013_ret_exp2 - 1LL) >= 2046LL) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::U64 _10313_ret_bits = (_6013_ret_exp2 << 52LL) | (_8013_ret_mantissa & 4503599627370495LL);
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	}
	_4158_f = static_cast<jule::F64>(_1e35250bd_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1e32cb946_eisel_lemire32(jule::U64 _11023_man,jule::Int _11033_exp10,jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if (_11023_man == 0LL) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_1e35250bd_f32_from_bits(2147483648LLU));
		}
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	if ((_11033_exp10 < -348LL) || (347LL < _11033_exp10)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::Int _1329_clz = _1e3ac34a1_leading_zeros64(_11023_man);
	_11023_man<<=static_cast<jule::Uint>(_1329_clz);
	
	jule::U64 _13513_ret_exp2 = static_cast<jule::U64>((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL) - static_cast<jule::U64>(_1329_clz);
	jule::U64 _13814_x_hi;
	jule::U64 _13824_x_lo;
	std::tie(_13814_x_hi,_13824_x_lo) = _1e3ac34a1_mul64(_11023_man,_1e32cb946_DETAILED_POWS_OF_TEN[_11033_exp10 - -348LL].__at(1LL));
	if (((_13814_x_hi & 274877906943LL) == 274877906943LL) && ((_13824_x_lo + _11023_man) < _11023_man)) {
		jule::U64 _14214_y_hi;
		jule::U64 _14220_y_lo;
		std::tie(_14214_y_hi,_14220_y_lo) = _1e3ac34a1_mul64(_11023_man,_1e32cb946_DETAILED_POWS_OF_TEN[_11033_exp10 - -348LL].__at(0LL));
		jule::U64 _14318_merged_hi = _13814_x_hi;
		jule::U64 _14329_merged_lo = _13824_x_lo + _14214_y_hi;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,_13824_x_lo + _14214_y_hi);
		if (_14329_merged_lo < _13824_x_lo) {
			(_14318_merged_hi)++;
		}
		if ((((_14318_merged_hi & 274877906943LL) == 274877906943LL) && ((_14329_merged_lo + 1LL) == 0LL)) && ((_14220_y_lo + _11023_man) < _11023_man)) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		}
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	}
	jule::U64 _1549_msb = _13814_x_hi >> 63LL;
	jule::U64 _15513_ret_mantissa = _13814_x_hi >> (_1549_msb + 38LL);
	_13513_ret_exp2-=static_cast<jule::U64>(1LL ^ _1549_msb);
	if (((_13824_x_lo == 0LL) && ((_13814_x_hi & 274877906943LL) == 0LL)) && ((_15513_ret_mantissa & 3LL) == 1LL)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	_15513_ret_mantissa+=static_cast<jule::U64>(_15513_ret_mantissa & 1LL);
	_15513_ret_mantissa>>=1LL;
	if ((_15513_ret_mantissa >> 24LL) > 0LL) {
		_15513_ret_mantissa>>=1LL;
		_13513_ret_exp2+=1LL;
	}
	if ((_13513_ret_exp2 - 1LL) >= 254LL) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::U64 _17813_ret_bits = (_13513_ret_exp2 << 23LL) | (_15513_ret_mantissa & 8388607LL);
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LL;
	}
	_11058_f = static_cast<jule::F32>(_1e35250bd_f32_from_bits(static_cast<jule::U32>(_17813_ret_bits)));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::Int _1e3307ee4_common_prefix_len_ignore_case(jule::Str _4534_s,jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();
	if (_4613_n > _4534_s.len()) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	}
	jule::Int _5013_i = 0LL;
	for (; _5013_i < _4613_n; (_5013_i)++) {
		{
			jule::U8 _5217_c = _4534_s[_5013_i];
			if (('A' <= _5217_c) && (_5217_c <= 'Z')) {
				_5217_c+=32LL;
			}
			if (_5217_c != _4542_prefix[_5013_i]) {
				return _5013_i;
			}
		}
	_iter_next_4720359424:;
	}
	_iter_end_4720359424:;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::Int,jule::Bool> _1e3307ee4_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::Int _6834_n = jule::Int();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s == jule::Str()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	}
	jule::Int _7213_sign = 1LL;
	jule::Int _7313_nsign = 0LL;
	{
		auto &_match_expr{ _6816_s[0LL] };
		if (!(('+') == _match_expr || ('-') == _match_expr)) { goto _case_end_4720372352; }
		_case_begin_4720372352:;
		{
			if (_6816_s[0LL] == '-') {
				_7213_sign=-1LL;
			}
			_7313_nsign=1LL;
			_6816_s=_6816_s.slice(1LL);
			goto _case_begin_4720372448;
		}
		goto _match_end_4720372272;
		_case_end_4720372352:;
		if (!(('i') == _match_expr || ('I') == _match_expr)) { goto _case_end_4720372448; }
		_case_begin_4720372448:;
		{
			jule::Int _8317_case_n = _1e3307ee4_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));
			if ((3LL < _8317_case_n) && (_8317_case_n < 8LL)) {
				_8317_case_n=3LL;
			}
			if ((_8317_case_n == 3LL) || (_8317_case_n == 8LL)) {
				_6826_f = static_cast<jule::F64>(_1e35ee7b3_inf(_7213_sign));
				_6834_n = static_cast<jule::Int>(_7313_nsign + _6834_n);
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_4720372272;
		_case_end_4720372448:;
		if (!(('n') == _match_expr || ('N') == _match_expr)) { goto _case_end_4720372544; }
		_case_begin_4720372544:;
		{
			if (_1e3307ee4_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL) {
				_6826_f = static_cast<jule::F64>(_1e35ee7b3_nan());
				_6834_n = 3LL;
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_4720372272;
		_case_end_4720372544:;
		_match_end_4720372272:;
	}
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _1e3307ee4_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::Int _10340_exp = jule::Int();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10425_trunc = jule::Bool();
	jule::Bool _10438_hex = jule::Bool();
	jule::Int _10449_i = jule::Int();
	jule::Bool _10457_ok = jule::Bool();
	if (_10449_i >= _10315_s.len()) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	{
		if (!((_10315_s[_10449_i] == '+'))) { goto _case_end_4720388896; }
		_case_begin_4720388896:;
		{
			(_10449_i)++;
		}
		goto _match_end_4720388768;
		_case_end_4720388896:;
		if (!((_10315_s[_10449_i] == '-'))) { goto _case_end_4720388240; }
		_case_begin_4720388240:;
		{
			_10350_neg=true;
			(_10449_i)++;
		}
		goto _match_end_4720388768;
		_case_end_4720388240:;
		_match_end_4720388768:;
	}
	jule::U64 _11813_base = 10LLU;
	jule::Int _11913_max_mant_digits = 19LL;
	jule::U8 _12013_exp_char = 'e';
	if ((((_10449_i + 2LL) < _10315_s.len()) && (_10315_s[_10449_i] == '0')) && (_1e24a4812_lower(_10315_s[_10449_i + 1LL]) == 'x')) {
		_11813_base=16LL;
		_11913_max_mant_digits=16LL;
		_10449_i+=2LL;
		_12013_exp_char='p';
		_10438_hex=true;
	}
	jule::Bool _12813_sawdot = false;
	jule::Bool _12913_sawdigits = false;
	jule::Int _13013_nd = 0LL;
	jule::Int _13113_nd_mant = 0LL;
	jule::Int _13213_dp = 0LL;
	for (; _10449_i < _10315_s.len(); (_10449_i)++) {
		{
			jule::U8 _13413_c = _10315_s[_10449_i];
			{
				if (!((_13413_c == '.'))) { goto _case_end_4720405040; }
				_case_begin_4720405040:;
				{
					if (_12813_sawdot) {
						goto _julec_label_loop_end;
					}
					_12813_sawdot=true;
					_13213_dp=_13013_nd;
					goto _iter_next_4720401552;
				}
				goto _match_end_4720404960;
				_case_end_4720405040:;
				if (!((('0' <= _13413_c) && (_13413_c <= '9')))) { goto _case_end_4720405136; }
				_case_begin_4720405136:;
				{
					_12913_sawdigits=true;
					if ((_13413_c == '0') && (_13013_nd == 0LL)) {
						(_13213_dp)--;
						goto _iter_next_4720401552;
					}
					(_13013_nd)++;
					if (_13113_nd_mant < _11913_max_mant_digits) {
						_10325_mantissa*=_11813_base;
						_10325_mantissa+=static_cast<jule::U64>(_13413_c - '0');
						(_13113_nd_mant)++;
					} else if (_13413_c != '0') {
						_10425_trunc=true;
					}
					goto _iter_next_4720401552;
				}
				goto _match_end_4720404960;
				_case_end_4720405136:;
				if (!((((_11813_base == 16LL) && ('a' <= _1e24a4812_lower(_13413_c))) && (_1e24a4812_lower(_13413_c) <= 'f')))) { goto _case_end_4720405232; }
				_case_begin_4720405232:;
				{
					_12913_sawdigits=true;
					(_13013_nd)++;
					if (_13113_nd_mant < _11913_max_mant_digits) {
						_10325_mantissa*=16LL;
						_10325_mantissa+=static_cast<jule::U64>((_1e24a4812_lower(_13413_c) - 'a') + 10LL);
						(_13113_nd_mant)++;
					} else {
						_10425_trunc=true;
					}
					goto _iter_next_4720401552;
				}
				goto _match_end_4720404960;
				_case_end_4720405232:;
				_match_end_4720404960:;
			}
			goto _iter_end_4720401552;
		}
	_iter_next_4720401552:;
	}
	_iter_end_4720401552:;
	_julec_label_loop_end:;
	if ((!(_12913_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if ((!(_12813_sawdot))) {
		_13213_dp=_13013_nd;
	}
	if (_11813_base == 16LL) {
		_13213_dp*=4LL;
		_13113_nd_mant*=4LL;
	}
	if ((_10449_i < _10315_s.len()) && (_1e24a4812_lower(_10315_s[_10449_i]) == _12013_exp_char)) {
		(_10449_i)++;
		if (_10449_i >= _10315_s.len()) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _19517_esign = 1LL;
		if (_10315_s[_10449_i] == '+') {
			(_10449_i)++;
		} else if (_10315_s[_10449_i] == '-') {
			(_10449_i)++;
			_19517_esign=-1LL;
		}
		if (((_10449_i >= _10315_s.len()) || (_10315_s[_10449_i] < '0')) || (_10315_s[_10449_i] > '9')) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _20517_e = 0LL;
		for (; (_10449_i < _10315_s.len()) && (('0' <= _10315_s[_10449_i]) && (_10315_s[_10449_i] <= '9')); (_10449_i)++) {
			{
				if (_20517_e < 10000LL) {
					_20517_e=static_cast<jule::Int>(((_20517_e * 10LL) + static_cast<jule::Int>(_10315_s[_10449_i])) - '0');
				}
			}
		_iter_next_4720424976:;
		}
		_iter_end_4720424976:;
		_13213_dp+=static_cast<jule::Int>(_20517_e * _19517_esign);
	} else if (_11813_base == 16LL) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if (_10325_mantissa != 0LL) {
		_10340_exp=static_cast<jule::Int>(_13213_dp - _13113_nd_mant);
	}
	_10457_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1e3307ee4_atof64exact(jule::U64 _47216_mantissa,jule::Int _47235_exp,jule::Bool _47245_neg) {
	jule::F64 _47258_f = jule::F64();
	jule::Bool _47266_ok = jule::Bool();
	if ((_47216_mantissa >> _1e2495d64_F64_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_47258_f,_47266_ok);
	}
	_47258_f=static_cast<jule::F64>(_47216_mantissa);
	if (_47245_neg) {
		_47258_f=static_cast<jule::F64>((-(_47258_f)));
	}
	{
		if (!((_47235_exp == 0LL))) { goto _case_end_4720454912; }
		_case_begin_4720454912:;
		{
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4720455648;
		_case_end_4720454912:;
		if (!(((_47235_exp > 0LL) && (_47235_exp <= 37LL)))) { goto _case_end_4720455008; }
		_case_begin_4720455008:;
		{
			if (_47235_exp > 22LL) {
				_47258_f*=_1e3307ee4_F64_POW10[_47235_exp - 22LL];
				_47235_exp=22LL;
			}
			if ((_47258_f > 1000000000000000LL) || (_47258_f < -1000000000000000LL)) {
				return std::make_tuple(_47258_f,_47266_ok);
			}
			_47258_f = static_cast<jule::F64>(_47258_f * _1e3307ee4_F64_POW10[_47235_exp]);
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4720455648;
		_case_end_4720455008:;
		if (!(((_47235_exp < 0LL) && (_47235_exp >= -22LL)))) { goto _case_end_4720455120; }
		_case_begin_4720455120:;
		{
			_47258_f = static_cast<jule::F64>(jule::div(_47258_f,_1e3307ee4_F64_POW10[(-(_47235_exp))]));
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4720455648;
		_case_end_4720455120:;
		_match_end_4720455648:;
	}
	return std::make_tuple(_47258_f,_47266_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1e3307ee4_atof32exact(jule::U64 _50616_mantissa,jule::Int _50635_exp,jule::Bool _50649_neg) {
	jule::F32 _50662_f = jule::F32();
	jule::Bool _50670_ok = jule::Bool();
	if ((_50616_mantissa >> _1e2495d64_F32_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_50662_f,_50670_ok);
	}
	_50662_f=static_cast<jule::F32>(_50616_mantissa);
	if (_50649_neg) {
		_50662_f=static_cast<jule::F32>((-(_50662_f)));
	}
	{
		if (!((_50635_exp == 0LL))) { goto _case_end_4720469008; }
		_case_begin_4720469008:;
		{
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4720468832;
		_case_end_4720469008:;
		if (!(((_50635_exp > 0LL) && (_50635_exp <= 17LL)))) { goto _case_end_4720469120; }
		_case_begin_4720469120:;
		{
			if (_50635_exp > 10LL) {
				_50662_f*=_1e3307ee4_F32_POW10[_50635_exp - 10LL];
				_50635_exp=10LL;
			}
			if ((_50662_f > 10000000LL) || (_50662_f < -10000000LL)) {
				return std::make_tuple(_50662_f,_50670_ok);
			}
			_50662_f = static_cast<jule::F32>(_50662_f * _1e3307ee4_F32_POW10[_50635_exp]);
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4720468832;
		_case_end_4720469120:;
		if (!(((_50635_exp < 0LL) && (_50635_exp >= -10LL)))) { goto _case_end_4720469232; }
		_case_begin_4720469232:;
		{
			_50662_f = static_cast<jule::F32>(jule::div(_50662_f,_1e3307ee4_F32_POW10[(-(_50635_exp))]));
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4720468832;
		_case_end_4720469232:;
		_match_end_4720468832:;
	}
	return std::make_tuple(_50662_f,_50670_ok);
}



inline std::tuple<jule::F64,jule::Int> _1e3307ee4_atof_hex(jule::Str _54213_s,_1e2495d64_FloatInfo& _54222_flt,jule::U64 _54242_mantissa,jule::Int _54261_exp,jule::Bool _54271_neg,jule::Bool _54282_trunc) {
	jule::Int _5439_max_exp = ((1LL << _54222_flt._field_expbits) + _54222_flt._field_bias) - 2LL;
	jule::Int _5449_min_exp = _54222_flt._field_bias + 1LL;
	_54261_exp+=static_cast<jule::Int>(_54222_flt._field_mantbits);
	while ((_54242_mantissa != 0LL) && ((_54242_mantissa >> (_54222_flt._field_mantbits + 2LL)) == 0LL)) {
		{
			_54242_mantissa<<=1LL;
			(_54261_exp)--;
		}
	_iter_next_4720483200:;
	}
	_iter_end_4720483200:;
	if (_54282_trunc) {
		_54242_mantissa|=1LL;
	}
	while ((_54242_mantissa >> ((1LL + _54222_flt._field_mantbits) + 2LL)) != 0LL) {
		{
			_54242_mantissa=static_cast<jule::U64>((_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL));
			(_54261_exp)++;
		}
	_iter_next_4720486544:;
	}
	_iter_end_4720486544:;
	while ((_54242_mantissa > 1LL) && (_54261_exp < (_5449_min_exp - 2LL))) {
		{
			_54242_mantissa=static_cast<jule::U64>((_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL));
			(_54261_exp)++;
		}
	_iter_next_4720488736:;
	}
	_iter_end_4720488736:;
	jule::U64 _57413_round = _54242_mantissa & 3LL;
	_54242_mantissa>>=2LL;
	_57413_round|=static_cast<jule::U64>(_54242_mantissa & 1LL);
	_54261_exp+=2LL;
	if (_57413_round == 3LL) {
		(_54242_mantissa)++;
		if (_54242_mantissa == (1LL << (1LL + _54222_flt._field_mantbits))) {
			_54242_mantissa>>=1LL;
			(_54261_exp)++;
		}
	}
	if ((_54242_mantissa >> _54222_flt._field_mantbits) == 0LL) {
		_54261_exp=_54222_flt._field_bias;
	}
	jule::Int _58913_err = 0LLU;
	if (_54261_exp > _5439_max_exp) {
		_54242_mantissa=static_cast<jule::U64>(1LL << _54222_flt._field_mantbits);
		_54261_exp=static_cast<jule::Int>(_5439_max_exp + 1LL);
		_58913_err=1LLU;
	}
	jule::U64 _59613_bits = _54242_mantissa & ((1LL << _54222_flt._field_mantbits) - 1LL);
	_59613_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_54261_exp - _54222_flt._field_bias) & ((1LL << _54222_flt._field_expbits) - 1LL)) << _54222_flt._field_mantbits);
	if (_54271_neg) {
		_59613_bits|=static_cast<jule::Int>((1LL << _54222_flt._field_mantbits) << _54222_flt._field_expbits);
	}
	if (_54222_flt == _1e2495d64_F32_INFO) {
		return std::make_tuple(static_cast<jule::F64>(_1e35250bd_f32_from_bits(static_cast<jule::U32>(_59613_bits))),_58913_err);
	}
	return std::make_tuple(static_cast<jule::F64>(_1e35250bd_f64_from_bits(_59613_bits)),_58913_err);
}



inline std::tuple<jule::F32,jule::Int,jule::Int> _1e3307ee4_atof32(jule::Str _60711_s) {
	jule::F32 _60721_f = jule::F32();
	jule::Int _60729_n = jule::Int();
	jule::Int _60737_err = 0LLU;
	{
		jule::F64 _60914_val;
		jule::Int _60919__n;
		jule::Bool _60923_ok;
		std::tie(_60914_val,_60919__n,_60923_ok) = _1e3307ee4_special(_60711_s);
		if (_60923_ok) {
			_60721_f = static_cast<jule::F32>(_60914_val);
			_60729_n = _60919__n;
			_60737_err = 0LLU;
			return std::make_tuple(_60721_f,_60729_n,_60737_err);
		}
	}
	jule::U64 _61510_mantissa;
	jule::Int _61520_exp;
	jule::Bool _61525_neg;
	jule::Bool _61530_trunc;
	jule::Bool _61537_hex;
	jule::Int _61542__n;
	jule::Bool _61550_ok;
	std::tie(_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc,_61537_hex,_61542__n,_61550_ok) = _1e3307ee4_read_float(_60711_s);
	_60729_n=_61542__n;
	if ((!(_61550_ok))) {
		_60721_f = 0LL;
		_60737_err = 2LLU;
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	if (_61537_hex) {
		jule::F64 _62217_ff = 0LL;
		std::tie(_62217_ff,_60737_err) = _1e3307ee4_atof_hex(_60711_s.slice(0LL,_60729_n),_1e2495d64_F32_INFO,_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc);
		_60721_f = static_cast<jule::F32>(_62217_ff);
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	if (true) {
		if ((!(_61530_trunc))) {
			std::tie(_60721_f,_61550_ok) = _1e3307ee4_atof32exact(_61510_mantissa,_61520_exp,_61525_neg);
			if (_61550_ok) {
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
		}
		std::tie(_60721_f,_61550_ok) = _1e32cb946_eisel_lemire32(_61510_mantissa,_61520_exp,_61525_neg);
		if (_61550_ok) {
			if ((!(_61530_trunc))) {
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
			jule::F32 _64421_f_up = 0LL;
			std::tie(_64421_f_up,_61550_ok) = _1e32cb946_eisel_lemire32(static_cast<jule::U64>(_61510_mantissa + 1LL),_61520_exp,_61525_neg);
			if (_61550_ok && (_60721_f == _64421_f_up)) {
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
		}
	}
	_1e34a359b_Decimal _65313_d = _1e34a359b_Decimal();
	if ((!(_65313_d._method_set(_60711_s.slice(0LL,_60729_n))))) {
		_60721_f = 0LL;
		_60737_err = 2LLU;
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	jule::U64 _65710_b;
	jule::Bool _65713_ovf;
	std::tie(_65710_b,_65713_ovf) = _65313_d._method_float_bits(_1e2495d64_F32_INFO);
	_60721_f=static_cast<jule::F32>(_1e35250bd_f32_from_bits(static_cast<jule::U32>(_65710_b)));
	if (_65713_ovf) {
		_60737_err=1LLU;
	}
	return std::make_tuple(_60721_f,_60729_n,_60737_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _1e3307ee4_atof64(jule::Str _66511_s) {
	jule::F64 _66521_f = jule::F64();
	jule::Int _66529_n = jule::Int();
	jule::Int _66537_err = 0LLU;
	{
		jule::F64 _66714_val;
		jule::Int _66719__n;
		jule::Bool _66723_ok;
		std::tie(_66714_val,_66719__n,_66723_ok) = _1e3307ee4_special(_66511_s);
		if (_66723_ok) {
			_66521_f = _66714_val;
			_66529_n = _66719__n;
			_66537_err = 0LLU;
			return std::make_tuple(_66521_f,_66529_n,_66537_err);
		}
	}
	jule::U64 _67310_mantissa;
	jule::Int _67320_exp;
	jule::Bool _67325_neg;
	jule::Bool _67330_trunc;
	jule::Bool _67337_hex;
	jule::Int _67342__n;
	jule::Bool _67350_ok;
	std::tie(_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc,_67337_hex,_67342__n,_67350_ok) = _1e3307ee4_read_float(_66511_s);
	_66529_n=_67342__n;
	if ((!(_67350_ok))) {
		_66521_f = 0LL;
		_66537_err = 2LLU;
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	if (_67337_hex) {
		std::tie(_66521_f,_66537_err) = _1e3307ee4_atof_hex(_66511_s.slice(0LL,_66529_n),_1e2495d64_F64_INFO,_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc);
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	if (true) {
		if ((!(_67330_trunc))) {
			std::tie(_66521_f,_67350_ok) = _1e3307ee4_atof64exact(_67310_mantissa,_67320_exp,_67325_neg);
			if (_67350_ok) {
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
		}
		std::tie(_66521_f,_67350_ok) = _1e32cb946_eisel_lemire64(_67310_mantissa,_67320_exp,_67325_neg);
		if (_67350_ok) {
			if ((!(_67330_trunc))) {
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
			jule::F64 _70121_f_up = 0LL;
			std::tie(_70121_f_up,_67350_ok) = _1e32cb946_eisel_lemire64(static_cast<jule::U64>(_67310_mantissa + 1LL),_67320_exp,_67325_neg);
			if (_67350_ok && (_66521_f == _70121_f_up)) {
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
		}
	}
	_1e34a359b_Decimal _71013_d = _1e34a359b_Decimal();
	if ((!(_71013_d._method_set(_66511_s.slice(0LL,_66529_n))))) {
		_66521_f = 0LL;
		_66537_err = 2LLU;
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	jule::U64 _71410_b;
	jule::Bool _71413_ovf;
	std::tie(_71410_b,_71413_ovf) = _71013_d._method_float_bits(_1e2495d64_F64_INFO);
	_66521_f=static_cast<jule::F64>(_1e35250bd_f64_from_bits(_71410_b));
	if (_71413_ovf) {
		_66537_err=1LLU;
	}
	return std::make_tuple(_66521_f,_66529_n,_66537_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _1e3307ee4_parse_float_prefix(jule::Str _72223_s,jule::Int _72231_bit_size) {
	if (_72231_bit_size == 32LL) {
		jule::F32 _72414_f;
		jule::Int _72417_n;
		jule::Int _72420_err;
		std::tie(_72414_f,_72417_n,_72420_err) = _1e3307ee4_atof32(_72223_s);
		return std::make_tuple(static_cast<jule::F64>(_72414_f),_72417_n,_72420_err);
	}
	jule::F64 _72810_f;
	jule::Int _72813_n;
	jule::Int _72816_err;
	std::tie(_72810_f,_72813_n,_72816_err) = _1e3307ee4_atof64(_72223_s);
	return std::make_tuple(_72810_f,_72813_n,_72816_err);
}



inline std::tuple<jule::F64,jule::Int> _1e3307ee4_parse_float(jule::Str _75620_s,jule::Int _75628_bit_size) {
	jule::F64 _75710_f;
	jule::Int _75713_n;
	jule::Int _75716_err;
	std::tie(_75710_f,_75713_n,_75716_err) = _1e3307ee4_parse_float_prefix(_75620_s,_75628_bit_size);
	if ((_75713_n != _75620_s.len()) && ((_75716_err == 0LLU) || (_75716_err != 2LLU))) {
		return std::make_tuple(0LL,2LLU);
	}
	return std::make_tuple(_75710_f,_75716_err);
}



inline void _1e3417147_ryu_ftoa_fixed32(_1e2495d64_DecimalSlice& _4926_d,jule::U32 _4947_mant,jule::Int _4958_exp,jule::Int _4968_prec) {
	if (_4968_prec < 0LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42));
	}
	if (_4968_prec > 9LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37));
	}
	if (_4947_mant == 0LL) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _6213_e2 = _4958_exp;
	jule::Int _639_b = _1e3ac34a1_len32(_4947_mant);
	if (_639_b < 25LL) {
		_4947_mant<<=static_cast<jule::Uint>(25LL - _639_b);
		_6213_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_639_b) - 25LL);
	}
	jule::Int _749_q = ((-(_1e3417147_mul_by_log2_log10(static_cast<jule::Int>(_6213_e2 + 24LL)))) + _4968_prec) - 1LL;
	jule::Bool _7913_exact = (_749_q <= 27LL) && (_749_q >= 0LL);
	jule::U32 _8114_di;
	jule::Int _8118_dexp2;
	jule::Bool _8129_d0;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1e3417147_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if (_8118_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49));
	}
	if (((_749_q < 0LL) && (_749_q >= -10LL)) && _1e3417147_divisible_by_pow5(static_cast<jule::U64>(_4947_mant),static_cast<jule::Int>((-(_749_q))))) {
		_7913_exact=true;
		_8129_d0=true;
	}
	jule::Uint _949_extra = static_cast<jule::Uint>((-(_8118_dexp2)));
	jule::U32 _959_extra_mask = static_cast<jule::U32>((1LL << _949_extra) - 1LL);
	jule::U32 _9713_dfrac = 0LLU;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>(_8114_di >> _949_extra),static_cast<jule::U32>(_8114_di & _959_extra_mask));
	jule::Bool _9913_round_up = false;
	if (_7913_exact) {
		_9913_round_up=((_9713_dfrac > (1LL << (_949_extra - 1LL))) || ((_9713_dfrac == (1LL << (_949_extra - 1LL))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LL << (_949_extra - 1LL))) && _8129_d0) && ((_8114_di & 1LL) == 1LL));
	} else {
		_9913_round_up=(_9713_dfrac >> (_949_extra - 1LL)) == 1LL;
	}
	if (_9713_dfrac != 0LL) {
		_8129_d0=false;
	}
	_1e3417147_format_decimal(_4926_d,static_cast<jule::U64>(_8114_di),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _1e3417147_ryu_ftoa_fixed64(_1e2495d64_DecimalSlice& _12326_d,jule::U64 _12347_mant,jule::Int _12358_exp,jule::Int _12368_prec) {
	if (_12368_prec > 18LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38));
	}
	if (_12347_mant == 0LL) {
		std::tie(_12326_d._field_nd,_12326_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _13313_e2 = _12358_exp;
	jule::Int _1349_b = _1e3ac34a1_len64(_12347_mant);
	if (_1349_b < 55LL) {
		_12347_mant=static_cast<jule::U64>(_12347_mant << static_cast<jule::Uint>(55LL - _1349_b));
		_13313_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_1349_b) - 55LL);
	}
	jule::Int _1489_q = ((-(_1e3417147_mul_by_log2_log10(static_cast<jule::Int>(_13313_e2 + 54LL)))) + _12368_prec) - 1LL;
	jule::Bool _15313_exact = (_1489_q <= 55LL) && (_1489_q >= 0LL);
	jule::U64 _15514_di;
	jule::Int _15518_dexp2;
	jule::Bool _15529_d0;
	std::tie(_15514_di,_15518_dexp2,_15529_d0) = _1e3417147_mult128bit_pow10(_12347_mant,_13313_e2,_1489_q);
	if (_15518_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if (((_1489_q < 0LL) && (_1489_q >= -22LL)) && _1e3417147_divisible_by_pow5(_12347_mant,static_cast<jule::Int>((-(_1489_q))))) {
		_15313_exact=true;
		_15529_d0=true;
	}
	jule::Uint _1689_extra = static_cast<jule::Uint>((-(_15518_dexp2)));
	jule::U64 _1699_extra_mask = static_cast<jule::U64>((1LL << _1689_extra) - 1LL);
	jule::U64 _17113_dfrac = 0LLU;
	std::tie(_15514_di,_17113_dfrac) = std::make_tuple(static_cast<jule::U64>(_15514_di >> _1689_extra),static_cast<jule::U64>(_15514_di & _1699_extra_mask));
	jule::Bool _17313_round_up = false;
	if (_15313_exact) {
		_17313_round_up=((_17113_dfrac > (1LL << (_1689_extra - 1LL))) || ((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && (!(_15529_d0)))) || (((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && _15529_d0) && ((_15514_di & 1LL) == 1LL));
	} else {
		_17313_round_up=(_17113_dfrac >> (_1689_extra - 1LL)) == 1LL;
	}
	if (_17113_dfrac != 0LL) {
		_15529_d0=false;
	}
	_1e3417147_format_decimal(_12326_d,_15514_di,(!(_15529_d0)),_17313_round_up,_12368_prec);
	_12326_d._field_dp-=_1489_q;
}



inline void _1e3417147_format_decimal(_1e2495d64_DecimalSlice& _20424_d,jule::U64 _20445_m,jule::Bool _20457_trunc,jule::Bool _20474_round_up,jule::Int _20490_prec) {
	jule::U64 _2059_max = _1e3417147_U64_POW10[_20490_prec];
	jule::Int _20613_trimmed = 0LL;
	while (_20445_m >= _2059_max) {
		{
			jule::U64 _20814_a = jule::unsafe_div(_20445_m,10LL);
			jule::U64 _20817_b = jule::unsafe_mod(_20445_m,10LL);
			std::tie(_20814_a,_20817_b) = std::make_tuple(jule::unsafe_div(_20445_m,10LL),jule::unsafe_mod(_20445_m,10LL));
			_20445_m=_20814_a;
			(_20613_trimmed)++;
			if (_20817_b > 5LL) {
				_20474_round_up=true;
			} else if (_20817_b < 5LL) {
				_20474_round_up=false;
			} else {
				_20474_round_up=_20457_trunc || ((_20445_m & 1LL) == 1LL);
			}
			if (_20817_b != 0LL) {
				_20457_trunc=true;
			}
		}
	_iter_next_4720646144:;
	}
	_iter_end_4720646144:;
	if (_20474_round_up) {
		(_20445_m)++;
	}
	if (_20445_m >= _2059_max) {
		_20445_m = jule::unsafe_div(_20445_m,10LL);
		(_20613_trimmed)++;
	}
	jule::Uint _23313_n = static_cast<jule::Uint>(_20490_prec);
	_20424_d._field_nd=static_cast<jule::Int>(_20490_prec);
	jule::U64 _23513_v = _20445_m;
	while (_23513_v >= 100LL) {
		{
			jule::U64 _23717_v1 = 0LLU;
			jule::U64 _23817_v2 = 0LLU;
			if ((_23513_v >> 32LL) == 0LL) {
				std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::unsafe_div(static_cast<jule::U32>(_23513_v),100LL)),static_cast<jule::U64>(jule::unsafe_mod(static_cast<jule::U32>(_23513_v),100LL)));
			} else {
				std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::unsafe_div(_23513_v,100LL)),static_cast<jule::U64>(jule::unsafe_mod(_23513_v,100LL)));
			}
			_23313_n-=2LL;
			_20424_d._field_d[static_cast<jule::Int>(_23313_n + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 1LL)]);
			_20424_d._field_d[static_cast<jule::Int>(_23313_n + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 0LL)]);
			_23513_v=_23717_v1;
		}
	_iter_next_4720646624:;
	}
	_iter_end_4720646624:;
	if (_23513_v > 0LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23513_v) + 1LL)]);
	}
	if (_23513_v >= 10LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(2LL * _23513_v)]);
	}
	while (_20424_d._field_d[_20424_d._field_nd - 1LL] == '0') {
		{
			(_20424_d._field_nd)--;
			(_20613_trimmed)++;
		}
	_iter_next_4720672496:;
	}
	_iter_end_4720672496:;
	_20424_d._field_dp=static_cast<jule::Int>(_20424_d._field_nd + _20613_trimmed);
}



inline void _1e3417147_ryu_ftoa_shortest(_1e2495d64_DecimalSlice& _26527_d,jule::U64 _26548_mant,jule::Int _26559_exp,_1e2495d64_FloatInfo& _26570_flt) {
	if (_26548_mant == 0LL) {
		std::tie(_26527_d._field_nd,_26527_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	if ((_26559_exp <= 0LL) && (_1e3ac34a1_trailing_zeros64(_26548_mant) >= (-(_26559_exp)))) {
		_26548_mant>>=static_cast<jule::Uint>((-(_26559_exp)));
		_1e3417147_ryu_digits(_26527_d,_26548_mant,_26548_mant,_26548_mant,true,false);
		return;
	}
	jule::U64 _27710_ml;
	jule::U64 _27714_mc;
	jule::U64 _27718_mu;
	jule::Int _27726_e2;
	std::tie(_27710_ml,_27714_mc,_27718_mu,_27726_e2) = _1e3417147_compute_bounds(_26548_mant,_26559_exp,_26570_flt);
	if (_27726_e2 == 0LL) {
		_1e3417147_ryu_digits(_26527_d,_27710_ml,_27714_mc,_27718_mu,true,false);
		return;
	}
	jule::Int _2839_q = _1e3417147_mul_by_log2_log10(static_cast<jule::Int>((-(_27726_e2)))) + 1LL;
	jule::U64 _28713_dl = 0LLU;
	jule::U64 _28813_dc = 0LLU;
	jule::U64 _28913_du = 0LLU;
	jule::Bool _29013_dl0 = false;
	jule::Bool _29113_dc0 = false;
	jule::Bool _29213_du0 = false;
	if (_26570_flt == _1e2495d64_F32_INFO) {
		jule::U32 _29417_dl32 = 0LLU;
		jule::U32 _29517_dc32 = 0LLU;
		jule::U32 _29617_du32 = 0LLU;
		std::tie(_29417_dl32,std::ignore,_29013_dl0) = _1e3417147_mult64bit_pow10(static_cast<jule::U32>(_27710_ml),_27726_e2,_2839_q);
		std::tie(_29517_dc32,std::ignore,_29113_dc0) = _1e3417147_mult64bit_pow10(static_cast<jule::U32>(_27714_mc),_27726_e2,_2839_q);
		std::tie(_29617_du32,_27726_e2,_29213_du0) = _1e3417147_mult64bit_pow10(static_cast<jule::U32>(_27718_mu),_27726_e2,_2839_q);
		std::tie(_28713_dl,_28813_dc,_28913_du) = std::make_tuple(static_cast<jule::U64>(_29417_dl32),static_cast<jule::U64>(_29517_dc32),static_cast<jule::U64>(_29617_du32));
	} else {
		std::tie(_28713_dl,std::ignore,_29013_dl0) = _1e3417147_mult128bit_pow10(_27710_ml,_27726_e2,_2839_q);
		std::tie(_28813_dc,std::ignore,_29113_dc0) = _1e3417147_mult128bit_pow10(_27714_mc,_27726_e2,_2839_q);
		std::tie(_28913_du,_27726_e2,_29213_du0) = _1e3417147_mult128bit_pow10(_27718_mu,_27726_e2,_2839_q);
	}
	if (_27726_e2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if (_2839_q > 55LL) {
		std::tie(_29013_dl0,_29113_dc0,_29213_du0) = std::make_tuple(false,false,false);
	}
	if ((_2839_q < 0LL) && (_2839_q >= -24LL)) {
		if (_1e3417147_divisible_by_pow5(_27710_ml,static_cast<jule::Int>((-(_2839_q))))) {
			_29013_dl0=true;
		}
		if (_1e3417147_divisible_by_pow5(_27714_mc,static_cast<jule::Int>((-(_2839_q))))) {
			_29113_dc0=true;
		}
		if (_1e3417147_divisible_by_pow5(_27718_mu,static_cast<jule::Int>((-(_2839_q))))) {
			_29213_du0=true;
		}
	}
	jule::Uint _3299_extra = static_cast<jule::Uint>((-(_27726_e2)));
	jule::U64 _3309_extra_mask = static_cast<jule::U64>((1LL << _3299_extra) - 1LL);
	jule::U64 _33213_fracl = 0LLU;
	std::tie(_28713_dl,_33213_fracl) = std::make_tuple(static_cast<jule::U64>(_28713_dl >> _3299_extra),static_cast<jule::U64>(_28713_dl & _3309_extra_mask));
	jule::U64 _33413_fracc = 0LLU;
	std::tie(_28813_dc,_33413_fracc) = std::make_tuple(static_cast<jule::U64>(_28813_dc >> _3299_extra),static_cast<jule::U64>(_28813_dc & _3309_extra_mask));
	jule::U64 _33613_fracu = 0LLU;
	std::tie(_28913_du,_33613_fracu) = std::make_tuple(static_cast<jule::U64>(_28913_du >> _3299_extra),static_cast<jule::U64>(_28913_du & _3309_extra_mask));
	jule::Bool _34213_uok = (!(_29213_du0)) || (_33613_fracu > 0LL);
	if (_29213_du0 && (_33613_fracu == 0LL)) {
		_34213_uok=(_26548_mant & 1LL) == 0LL;
	}
	if ((!(_34213_uok))) {
		(_28913_du)--;
	}
	jule::Bool _35113_cup = false;
	if (_29113_dc0) {
		_35113_cup=(_33413_fracc > (1LL << (_3299_extra - 1LL))) || ((_33413_fracc == (1LL << (_3299_extra - 1LL))) && ((_28813_dc & 1LL) == 1LL));
	} else {
		_35113_cup=(_33413_fracc >> (_3299_extra - 1LL)) == 1LL;
	}
	jule::Bool _3679_lok = (_29013_dl0 && (_33213_fracl == 0LL)) && ((_26548_mant & 1LL) == 0LL);
	if ((!(_3679_lok))) {
		(_28713_dl)++;
	}
	jule::Bool _3729_c0 = _29113_dc0 && (_33413_fracc == 0LL);
	_1e3417147_ryu_digits(_26527_d,_28713_dl,_28813_dc,_28913_du,_3729_c0,_35113_cup);
	_26527_d._field_dp-=_2839_q;
}



inline jule::Int _1e3417147_mul_by_log2_log10(jule::Int _38322_x) {
	return static_cast<jule::Int>((_38322_x * 78913LL) >> 18LL);
}



inline jule::Int _1e3417147_mul_by_log10_log2(jule::Int _39322_x) {
	return static_cast<jule::Int>((_39322_x * 108853LL) >> 15LL);
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _1e3417147_compute_bounds(jule::U64 _40119_mant,jule::Int _40130_exp,_1e2495d64_FloatInfo& _40218_flt) {
	jule::U64 _40236_lower = jule::U64();
	jule::U64 _40248_central = jule::U64();
	jule::U64 _40262_upper = jule::U64();
	jule::Int _40274_e2 = jule::Int();
	if ((_40119_mant != (1LL << _40218_flt._field_mantbits)) || (_40130_exp == ((_40218_flt._field_bias + 1LL) - static_cast<jule::Int>(_40218_flt._field_mantbits)))) {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((2LL * _40119_mant) - 1LL),static_cast<jule::U64>(2LL * _40119_mant),static_cast<jule::U64>((2LL * _40119_mant) + 1LL));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 1LL);
	} else {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((4LL * _40119_mant) - 1LL),static_cast<jule::U64>(4LL * _40119_mant),static_cast<jule::U64>((4LL * _40119_mant) + 2LL));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 2LL);
	}
	return std::make_tuple(_40236_lower,_40248_central,_40262_upper,_40274_e2);
}



inline void _1e3417147_ryu_digits(_1e2495d64_DecimalSlice& _41520_d,jule::U64 _41537_lower,jule::U64 _41549_central,jule::U64 _41563_upper,jule::Bool _41579_c0,jule::Bool _41593_cup) {
	jule::U32 _41614_lhi;
	jule::U32 _41619_llo;
	std::tie(_41614_lhi,_41619_llo) = _1e3417147_divmod1e9(_41537_lower);
	jule::U32 _41710_chi;
	jule::U32 _41715_clo;
	std::tie(_41710_chi,_41715_clo) = _1e3417147_divmod1e9(_41549_central);
	jule::U32 _41810_uhi;
	jule::U32 _41815_ulo;
	std::tie(_41810_uhi,_41815_ulo) = _1e3417147_divmod1e9(_41563_upper);
	if (_41810_uhi == 0LL) {
		_1e3417147_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,8LL);
	} else if (_41614_lhi < _41810_uhi) {
		if (_41619_llo != 0LL) {
			(_41614_lhi)++;
		}
		_41579_c0=_41579_c0 && (_41715_clo == 0LL);
		_41593_cup=(_41715_clo > 500000000LL) || ((_41715_clo == 500000000LL) && _41593_cup);
		_1e3417147_ryu_digits32(_41520_d,_41614_lhi,_41710_chi,_41810_uhi,_41579_c0,_41593_cup,8LL);
		_41520_d._field_dp+=9LL;
	} else {
		_41520_d._field_nd=0LL;
		jule::Uint _43417_n = static_cast<jule::Uint>(9LLU);
		jule::U32 _43517_v = _41710_chi;
		while (_43517_v > 0LL) {
			{
				jule::U32 _43718_v1 = jule::unsafe_div(_43517_v,10LL);
				jule::U32 _43722_v2 = jule::unsafe_mod(_43517_v,10LL);
				std::tie(_43718_v1,_43722_v2) = std::make_tuple(jule::unsafe_div(_43517_v,10LL),jule::unsafe_mod(_43517_v,10LL));
				_43517_v=_43718_v1;
				(_43417_n)--;
				_41520_d._field_d[static_cast<jule::Int>(_43417_n)]=static_cast<jule::U8>(_43722_v2 + '0');
			}
		_iter_next_4720777344:;
		}
		_iter_end_4720777344:;
		_41520_d._field_d=_41520_d._field_d.slice(static_cast<jule::Int>(_43417_n));
		_41520_d._field_nd=static_cast<jule::Int>(9LL - _43417_n);
		_1e3417147_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,static_cast<jule::Int>(_41520_d._field_nd + 8LL));
	}
	while ((_41520_d._field_nd > 0LL) && (_41520_d._field_d[_41520_d._field_nd - 1LL] == '0')) {
		{
			(_41520_d._field_nd)--;
		}
	_iter_next_4720771664:;
	}
	_iter_end_4720771664:;
	while ((_41520_d._field_nd > 0LL) && (_41520_d._field_d[0LL] == '0')) {
		{
			(_41520_d._field_nd)--;
			(_41520_d._field_dp)--;
			_41520_d._field_d=_41520_d._field_d.slice(1LL);
		}
	_iter_next_4720777168:;
	}
	_iter_end_4720777168:;
}



inline void _1e3417147_ryu_digits32(_1e2495d64_DecimalSlice& _46022_d,jule::U32 _46043_lower,jule::U32 _46059_central,jule::U32 _46121_upper,jule::Bool _46137_c0,jule::Bool _46151_cup,jule::Int _46166_endindex) {
	if (_46121_upper == 0LL) {
		_46022_d._field_dp=static_cast<jule::Int>(_46166_endindex + 1LL);
		return;
	}
	jule::Int _46613_trimmed = 0LL;
	jule::Int _46913_c_next_digit = 0LL;
	while (_46121_upper > 0LL) {
		{
			jule::U32 _47613_l = jule::unsafe_div(_46043_lower + 9LL,10LL);
			jule::U32 _47718_c = jule::unsafe_div(_46059_central,10LL);
			jule::U32 _47725_cdigit = jule::unsafe_mod(_46059_central,10LL);
			std::tie(_47718_c,_47725_cdigit) = std::make_tuple(jule::unsafe_div(_46059_central,10LL),jule::unsafe_mod(_46059_central,10LL));
			jule::U32 _47813_u = jule::unsafe_div(_46121_upper,10LL);
			if (_47613_l > _47813_u) {
				goto _iter_end_4720794912;
			}
			if ((_47613_l == (_47718_c + 1LL)) && (_47718_c < _47813_u)) {
				(_47718_c)++;
				_47725_cdigit=0LL;
				_46151_cup=false;
			}
			(_46613_trimmed)++;
			_46137_c0=_46137_c0 && (_46913_c_next_digit == 0LL);
			_46913_c_next_digit=static_cast<jule::Int>(_47725_cdigit);
			std::tie(_46043_lower,_46059_central,_46121_upper) = std::make_tuple(_47613_l,_47718_c,_47813_u);
		}
	_iter_next_4720794912:;
	}
	_iter_end_4720794912:;
	if (_46613_trimmed > 0LL) {
		_46151_cup=((_46913_c_next_digit > 5LL) || ((_46913_c_next_digit == 5LL) && (!(_46137_c0)))) || (((_46913_c_next_digit == 5LL) && _46137_c0) && ((_46059_central & 1LL) == 1LL));
	}
	if ((_46059_central < _46121_upper) && _46151_cup) {
		(_46059_central)++;
	}
	_46166_endindex-=_46613_trimmed;
	jule::U32 _51713_v = _46059_central;
	jule::Int _51813_n = _46166_endindex;
	while (_51813_n > _46022_d._field_nd) {
		{
			jule::U32 _52014_v1 = jule::unsafe_div(_51713_v,100LL);
			jule::U32 _52018_v2 = jule::unsafe_mod(_51713_v,100LL);
			std::tie(_52014_v1,_52018_v2) = std::make_tuple(jule::unsafe_div(_51713_v,100LL),jule::unsafe_mod(_51713_v,100LL));
			_46022_d._field_d[_51813_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 1LL)]);
			_46022_d._field_d[_51813_n - 1LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 0LL)]);
			_51813_n-=2LL;
			_51713_v=_52014_v1;
		}
	_iter_next_4720797776:;
	}
	_iter_end_4720797776:;
	if (_51813_n == _46022_d._field_nd) {
		_46022_d._field_d[_51813_n]=static_cast<jule::U8>(_51713_v + '0');
	}
	_46022_d._field_nd=static_cast<jule::Int>(_46166_endindex + 1LL);
	_46022_d._field_dp=static_cast<jule::Int>(_46022_d._field_nd + _46613_trimmed);
}



inline std::tuple<jule::U32,jule::Int,jule::Bool> _1e3417147_mult64bit_pow10(jule::U32 _54220_m,jule::Int _54232_e2,jule::Int _54241_q) {
	jule::U32 _54251_resM = jule::U32();
	jule::Int _54262_resE = jule::Int();
	jule::Bool _54273_exact = jule::Bool();
	if (_54241_q == 0LL) {
		_54251_resM = static_cast<jule::U32>(_54220_m << 6LL);
		_54262_resE = static_cast<jule::Int>(_54232_e2 - 6LL);
		_54273_exact = true;
		return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
	}
	if ((_54241_q < -348LL) || (347LL < _54241_q)) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44));
	}
	jule::U64 _55113_pow = _1e32cb946_DETAILED_POWS_OF_TEN[_54241_q - -348LL].__at(1LL);
	if (_54241_q < 0LL) {
		_55113_pow+=1LL;
	}
	jule::U64 _55610_hi;
	jule::U64 _55614_lo;
	std::tie(_55610_hi,_55614_lo) = _1e3ac34a1_mul64(static_cast<jule::U64>(_54220_m),_55113_pow);
	_54232_e2+=static_cast<jule::Int>((_1e3417147_mul_by_log10_log2(_54241_q) - 63LL) + 57LL);
	_54251_resM = static_cast<jule::U32>((_55610_hi << 7LL) | (_55614_lo >> 57LL));
	_54262_resE = _54232_e2;
	_54273_exact = (_55614_lo << 7LL) == 0LL;
	return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool> _1e3417147_mult128bit_pow10(jule::U64 _57021_m,jule::Int _57033_e2,jule::Int _57042_q) {
	jule::U64 _57052_resM = jule::U64();
	jule::Int _57063_resE = jule::Int();
	jule::Bool _57074_exact = jule::Bool();
	if (_57042_q == 0LL) {
		_57052_resM = static_cast<jule::U64>(_57021_m << 8LL);
		_57063_resE = static_cast<jule::Int>(_57033_e2 - 8LL);
		_57074_exact = true;
		return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
	}
	if ((_57042_q < -348LL) || (347LL < _57042_q)) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45));
	}
	jule::Array<jule::U64,2> _57913_pow = _1e32cb946_DETAILED_POWS_OF_TEN[_57042_q - -348LL];
	if (_57042_q < 0LL) {
		_57913_pow.__at(0LL)+=1LL;
	}
	_57033_e2+=static_cast<jule::Int>((_1e3417147_mul_by_log10_log2(_57042_q) - 127LL) + 119LL);
	jule::U64 _58710_l1;
	jule::U64 _58714_l0;
	std::tie(_58710_l1,_58714_l0) = _1e3ac34a1_mul64(_57021_m,_57913_pow.__at(0LL));
	jule::U64 _58814_h1;
	jule::U64 _58818_h0;
	std::tie(_58814_h1,_58818_h0) = _1e3ac34a1_mul64(_57021_m,_57913_pow.__at(1LL));
	jule::U64 _58910_mid;
	jule::U64 _58915_carry;
	std::tie(_58910_mid,_58915_carry) = _1e3ac34a1_add64(_58710_l1,_58818_h0,0LLU);
	_58814_h1+=_58915_carry;
	_57052_resM = static_cast<jule::U64>((_58814_h1 << 9LL) | (_58910_mid >> 55LL));
	_57063_resE = _57033_e2;
	_57074_exact = ((_58910_mid << 9LL) == 0LL) && (_58714_l0 == 0LL);
	return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
}



inline jule::Bool _1e3417147_divisible_by_pow5(jule::U64 _59426_m,jule::Int _59434_k) {
	if (_59426_m == 0LL) {
		return true;
	}
	jule::Int _59813_i = 0LL;
	for (; _59813_i < _59434_k; (_59813_i)++) {
		{
			if (jule::unsafe_mod(_59426_m,5LL) != 0LL) {
				return false;
			}
			_59426_m = jule::unsafe_div(_59426_m,5LL);
		}
	_iter_next_4720848960:;
	}
	_iter_end_4720848960:;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1e3417147_divmod1e9(jule::U64 _61014_x) {
	if (true) {
		return std::make_tuple(static_cast<jule::U32>(jule::unsafe_div(_61014_x,1000000000LL)),static_cast<jule::U32>(jule::unsafe_mod(_61014_x,1000000000LL)));
	}
	jule::U64 _61510_hi;
	std::tie(_61510_hi,std::ignore) = _1e3ac34a1_mul64(static_cast<jule::U64>(_61014_x >> 1LL),9903520314283042200LLU);
	jule::U64 _6169_q = _61510_hi >> 28LL;
	return std::make_tuple(static_cast<jule::U32>(_6169_q),static_cast<jule::U32>(_61014_x - (_6169_q * 1000000000LL)));
}



inline void _1e34a359b_trim(_1e34a359b_Decimal& _27514_a) {
	while ((_27514_a._field_nd > 0LL) && (_27514_a._field_d[_27514_a._field_nd - 1LL] == '0')) {
		{
			(_27514_a._field_nd)--;
		}
	_iter_next_4720866912:;
	}
	_iter_end_4720866912:;
	if (_27514_a._field_nd == 0LL) {
		_27514_a._field_dp=0LL;
	}
}



inline void _1e34a359b_right_shift(_1e34a359b_Decimal& _28521_a,jule::Uint _28533_k) {
	jule::Int _28613_r = 0LL;
	jule::Int _28713_w = 0LL;
	jule::Uint _29013_n = 0LLU;
	for (; (_29013_n >> _28533_k) == 0LL; (_28613_r)++) {
		{
			if (_28613_r >= _28521_a._field_nd) {
				if (_29013_n == 0LL) {
					_28521_a._field_nd=0LL;
					return;
				}
				while ((_29013_n >> _28533_k) == 0LL) {
					{
						_29013_n=static_cast<jule::Uint>(_29013_n * 10LL);
						(_28613_r)++;
					}
				_iter_next_4720878784:;
				}
				_iter_end_4720878784:;
				goto _iter_end_4720874080;
			}
			jule::Uint _30413_c = static_cast<jule::Uint>(_28521_a._field_d[_28613_r]);
			_29013_n=static_cast<jule::Uint>(((_29013_n * 10LL) + _30413_c) - '0');
		}
	_iter_next_4720874080:;
	}
	_iter_end_4720874080:;
	_28521_a._field_dp-=static_cast<jule::Int>(_28613_r - 1LL);
	jule::Uint _3099_mask = static_cast<jule::Uint>(static_cast<jule::Uint>(1LL << _28533_k) - 1LL);
	for (; _28613_r < _28521_a._field_nd; (_28613_r)++) {
		{
			jule::Uint _31313_c = static_cast<jule::Uint>(_28521_a._field_d[_28613_r]);
			jule::Uint _31413_dig = _29013_n >> _28533_k;
			_29013_n&=_3099_mask;
			_28521_a._field_d[_28713_w]=static_cast<jule::U8>(_31413_dig + '0');
			(_28713_w)++;
			_29013_n=static_cast<jule::Uint>(((_29013_n * 10LL) + _31313_c) - '0');
		}
	_iter_next_4720883600:;
	}
	_iter_end_4720883600:;
	while (_29013_n > 0LL) {
		{
			jule::Uint _32313_dig = _29013_n >> _28533_k;
			_29013_n&=_3099_mask;
			if (_28713_w < 800LL) {
				_28521_a._field_d[_28713_w]=static_cast<jule::U8>(_32313_dig + '0');
				(_28713_w)++;
			} else if (_32313_dig > 0LL) {
				_28521_a._field_trunc=true;
			}
			_29013_n=static_cast<jule::Uint>(_29013_n * 10LL);
		}
	_iter_next_4720885344:;
	}
	_iter_end_4720885344:;
	_28521_a._field_nd=_28713_w;
	_1e34a359b_trim(_28521_a);
}



inline jule::Bool _1e34a359b_prefix_is_less_than(jule::Slice<jule::U8> _33924_b,jule::Str _33935_s) {
	jule::Int _34013_i = 0LL;
	for (; _34013_i < _33935_s.len(); (_34013_i)++) {
		{
			if (_34013_i >= _33924_b.len()) {
				return true;
			}
			if (_33924_b[_34013_i] != _33935_s[_34013_i]) {
				return _33924_b[_34013_i] < _33935_s[_34013_i];
			}
		}
	_iter_next_4720897328:;
	}
	_iter_end_4720897328:;
	return false;
}



inline void _1e34a359b_left_shift(_1e34a359b_Decimal& _35320_a,jule::Uint _35332_k) {
	jule::Int _35413_delta = _1e34a359b_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_delta;
	if (_1e34a359b_prefix_is_less_than(_35320_a._field_d.slice(0LL,_35320_a._field_nd),_1e34a359b_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_cutoff)) {
		(_35413_delta)--;
	}
	jule::Int _35913_r = _35320_a._field_nd;
	jule::Int _36013_w = _35320_a._field_nd + _35413_delta;
	jule::Uint _36313_n = 0LLU;
	(_35913_r)--;
	for (; _35913_r >= 0LL; (_35913_r)--) {
		{
			_36313_n+=static_cast<jule::Uint>((static_cast<jule::Uint>(_35320_a._field_d[_35913_r]) - '0') << _35332_k);
			jule::Uint _36713_quo = jule::unsafe_div(_36313_n,10LL);
			jule::Uint _36813_rem = _36313_n - (10LL * _36713_quo);
			(_36013_w)--;
			if (_36013_w < 800LL) {
				_35320_a._field_d[_36013_w]=static_cast<jule::U8>(_36813_rem + '0');
			} else if (_36813_rem != 0LL) {
				_35320_a._field_trunc=true;
			}
			_36313_n=_36713_quo;
		}
	_iter_next_4720909520:;
	}
	_iter_end_4720909520:;
	while (_36313_n > 0LL) {
		{
			jule::Uint _38013_quo = jule::unsafe_div(_36313_n,10LL);
			jule::Uint _38113_rem = _36313_n - (10LL * _38013_quo);
			(_36013_w)--;
			if (_36013_w < 800LL) {
				_35320_a._field_d[_36013_w]=static_cast<jule::U8>(_38113_rem + '0');
			} else if (_38113_rem != 0LL) {
				_35320_a._field_trunc=true;
			}
			_36313_n=_38013_quo;
		}
	_iter_next_4720917488:;
	}
	_iter_end_4720917488:;
	_35320_a._field_nd+=_35413_delta;
	if (_35320_a._field_nd >= 800LL) {
		_35320_a._field_nd=800LL;
	}
	_35320_a._field_dp+=_35413_delta;
	_1e34a359b_trim(_35320_a);
}



inline jule::Bool _1e34a359b_should_round_up(_1e34a359b_Decimal& _40021_a,jule::Int _40033_nd) {
	if ((_40033_nd < 0LL) || (_40033_nd >= _40021_a._field_nd)) {
		return false;
	}
	if ((_40021_a._field_d[_40033_nd] == '5') && ((_40033_nd + 1LL) == _40021_a._field_nd)) {
		if (_40021_a._field_trunc) {
			return true;
		}
		return (_40033_nd > 0LL) && (jule::unsafe_mod(_40021_a._field_d[_40033_nd - 1LL] - '0',2LL) != 0LL);
	}
	return _40021_a._field_d[_40033_nd] >= '5';
}



inline jule::Str _1e3417be7_fmt_uint(jule::U64 _6217_i,jule::Int _6225_base) {
	if ((true && (_6217_i < 100LL)) && (_6225_base == 10LL)) {
		return _1e3417be7_small(static_cast<jule::Int>(_6217_i));
	}
	jule::Str _6613_s;
	std::tie(std::ignore,_6613_s) = _1e3417be7_fmt_bits(nullptr,_6217_i,_6225_base,false,false);
	return _6613_s;
}



inline jule::Str _1e3417be7_fmt_int(jule::I64 _7316_i,jule::Int _7324_base) {
	if (((true && (0LL <= _7316_i)) && (_7316_i < 100LL)) && (_7324_base == 10LL)) {
		return _1e3417be7_small(static_cast<jule::Int>(_7316_i));
	}
	jule::Str _7713_s;
	std::tie(std::ignore,_7713_s) = _1e3417be7_fmt_bits(nullptr,static_cast<jule::U64>(_7316_i),_7324_base,_7316_i < 0LL,false);
	return _7713_s;
}



inline jule::Str _1e3417be7_itoa(jule::Int _8213_i) {
	return _1e3417be7_fmt_int(static_cast<jule::I64>(_8213_i),10LL);
}



inline jule::Str _1e3417be7_small(jule::Int _8510_i) {
	if (_8510_i < 10LL) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,_8510_i + 1LL);
	}
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice(_8510_i * 2LL,(_8510_i * 2LL) + 2LL);
}



inline jule::Bool _1e3417be7_is_power_of_two(jule::Int _9220_x) {
	return (_9220_x & (_9220_x - 1LL)) == 0LL;
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1e3417be7_fmt_bits(jule::Slice<jule::U8> _9917_dst,jule::U64 _9934_u,jule::Int _9942_base,jule::Bool _9953_neg,jule::Bool _9964_append_) {
	jule::Slice<jule::U8> _9981_d = jule::Slice<jule::U8>();
	jule::Str _9992_s = jule::Str();
	if ((_9942_base < 2LL) || (_9942_base > jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).len())) {
		jule::panic(jule::Str("std::conv: illegal base", 23));
	}
	jule::Array<jule::U8,65> _10513_a = jule::Array<jule::U8,65>();
	jule::Int _10613_i = 65LL;
	if (_9953_neg) {
		_9934_u=static_cast<jule::U64>((-(_9934_u)));
	}
	if (_9942_base == 10LL) {
		if (false) {
			while (_9934_u >= 1000000000LL) {
				{
					jule::U64 _12521_q = jule::unsafe_div(_9934_u,1000000000LL);
					jule::Uint _12625_us = static_cast<jule::Uint>(_9934_u - (_12521_q * 1000000000LL));
					jule::Int _12725_j = 4LL;
					for (; _12725_j > 0LL; (_12725_j)--) {
						{
							jule::Uint _12925_is = jule::unsafe_mod(_12625_us,100LL) * 2LL;
							_12625_us = jule::unsafe_div(_12625_us,100LL);
							_10613_i-=2LL;
							_10513_a[_10613_i + 1LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 1LL)]);
							_10513_a[_10613_i + 0LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 0LL)]);
						}
					_iter_next_4720958752:;
					}
					_iter_end_4720958752:;
					(_10613_i)--;
					_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((_12625_us * 2LL) + 1LL)]);
					_9934_u=_12521_q;
				}
			_iter_next_4720956880:;
			}
			_iter_end_4720956880:;
		}
		jule::Uint _14717_us = static_cast<jule::Uint>(_9934_u);
		while (_14717_us >= 100LL) {
			{
				jule::Uint _14917_is = jule::unsafe_mod(_14717_us,100LL) * 2LL;
				_14717_us = jule::unsafe_div(_14717_us,100LL);
				_10613_i-=2LL;
				_10513_a[_10613_i + 1LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 1LL)]);
				_10513_a[_10613_i + 0LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 0LL)]);
			}
		_iter_next_4720963424:;
		}
		_iter_end_4720963424:;
		jule::Uint _15713_is = _14717_us * 2LL;
		(_10613_i)--;
		_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is + 1LL)]);
		if (_14717_us >= 10LL) {
			(_10613_i)--;
			_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is)]);
		}
	} else if (_1e3417be7_is_power_of_two(_9942_base)) {
		jule::Uint _17213_shift = static_cast<jule::Uint>(_1e3ac34a1_trailing_zeros(static_cast<jule::Uint>(_9942_base))) & 7LL;
		jule::U64 _17313_b = static_cast<jule::U64>(_9942_base);
		jule::Uint _17413_m = static_cast<jule::Uint>(_9942_base) - 1LL;
		while (_9934_u >= _17313_b) {
			{
				(_10613_i)--;
				_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u) & _17413_m)]);
				_9934_u>>=_17213_shift;
			}
		_iter_next_4720980608:;
		}
		_iter_end_4720980608:;
		(_10613_i)--;
		_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	} else {
		jule::U64 _18513_b = static_cast<jule::U64>(_9942_base);
		while (_9934_u >= _18513_b) {
			{
				(_10613_i)--;
				jule::U64 _19117_q = jule::div(_9934_u,_18513_b);
				_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u - (_19117_q * _18513_b)))]);
				_9934_u=_19117_q;
			}
		_iter_next_4720990640:;
		}
		_iter_end_4720990640:;
		(_10613_i)--;
		_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	}
	if (_9953_neg) {
		(_10613_i)--;
		_10513_a[_10613_i]='-';
	}
	if (_9964_append_) {
		_9981_d=jule::append(_9917_dst,_10513_a.slice(_10613_i));
		return std::make_tuple(_9981_d,_9992_s);
	}
	_9992_s=static_cast<jule::Str>(_10513_a.slice(_10613_i));
	return std::make_tuple(_9981_d,_9992_s);
}



inline void _1e2496a24_push_opt_level(jule::Int _3023_level) {
	_1e2496a24_OPT_COPY=_3023_level >= 1LLU;
	_1e2496a24_OPT_DEADCODE=_3023_level >= 1LLU;
	_1e2496a24_OPT_APPEND=_3023_level >= 1LLU;
	_1e2496a24_OPT_MATH=_3023_level >= 1LLU;
	_1e2496a24_OPT_ACCESS=_3023_level >= 1LLU;
	_1e2496a24_OPT_INLINE=_3023_level >= 1LLU;
	_1e2496a24_OPT_PTR=_3023_level >= 1LLU;
}



inline jule::Bool _1e390414a_is_letter(jule::I32 _7618_r) {
	if (static_cast<jule::U32>(_7618_r) <= 255LL) {
		return (_1e3ccedc7__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_7618_r))] & 96LL) != 0LL;
	}
	return _1e3cd67d5_is_excluding_latin(_1e3ccedc7_LETTER,_7618_r);
}



inline jule::Bool _1e3cd67d5_is16(jule::Slice<_1e3cd67d5_Range16> _1919_ranges,jule::U16 _19128_r) {
	if ((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LL)) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_4725198704:;
			if (it != expr.end()) {
				jule::Int _1e3cd67d5_i = it - expr.begin();
				{
					_1e3cd67d5_Range16* _19417_range = (&(_1919_ranges.__at(_1e3cd67d5_i)));
					{
						if (_19128_r < _19417_range->_field_lo) {
							return false;
						}
						if (_19128_r <= _19417_range->_field_hi) {
							return (_19417_range->_field_stride == 1LL) || (jule::mod(_19128_r - _19417_range->_field_lo,_19417_range->_field_stride) == 0LL);
						}
					}
				}
				_iter_next_4725198704:;
				++it;
				_1e3cd67d5_i++;
				goto _iter_begin_4725198704;
			}
			_iter_end_4725198704:;
		}
		return false;
	}
	jule::Int _20813_lo = 0LL;
	jule::I64 _20913_hi = _1919_ranges.len();
	while (_20813_lo < _20913_hi) {
		{
			jule::Int _21113_m = _20813_lo + jule::unsafe_div(_20913_hi - _20813_lo,2LL);
			_1e3cd67d5_Range16* _21213_range = (&(_1919_ranges[_21113_m]));
			{
				if ((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi)) {
					return (_21213_range->_field_stride == 1LL) || (jule::mod(_19128_r - _21213_range->_field_lo,_21213_range->_field_stride) == 0LL);
				}
				if (_19128_r < _21213_range->_field_lo) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::Int>(_21113_m + 1LL);
				}
			}
		}
	_iter_next_4725190608:;
	}
	_iter_end_4725190608:;
	return false;
}



inline jule::Bool _1e3cd67d5_is32(jule::Slice<_1e3cd67d5_Range32> _2289_ranges,jule::U32 _22828_r) {
	if (_2289_ranges.len() <= 18LL) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_4725215552:;
			if (it != expr.end()) {
				jule::Int _1e3cd67d5_i = it - expr.begin();
				{
					_1e3cd67d5_Range32* _23117_range = (&(_2289_ranges.__at(_1e3cd67d5_i)));
					{
						if (_22828_r < _23117_range->_field_lo) {
							return false;
						}
						if (_22828_r <= _23117_range->_field_hi) {
							return (_23117_range->_field_stride == 1LL) || (jule::mod(_22828_r - _23117_range->_field_lo,_23117_range->_field_stride) == 0LL);
						}
					}
				}
				_iter_next_4725215552:;
				++it;
				_1e3cd67d5_i++;
				goto _iter_begin_4725215552;
			}
			_iter_end_4725215552:;
		}
		return false;
	}
	jule::Int _24513_lo = 0LL;
	jule::I64 _24613_hi = _2289_ranges.len();
	while (_24513_lo < _24613_hi) {
		{
			jule::Int _24813_m = _24513_lo + jule::unsafe_div(_24613_hi - _24513_lo,2LL);
			_1e3cd67d5_Range32* _24913_range = (&(_2289_ranges[_24813_m]));
			{
				if ((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi)) {
					return (_24913_range->_field_stride == 1LL) || (jule::mod(_22828_r - _24913_range->_field_lo,_24913_range->_field_stride) == 0LL);
				}
				if (_22828_r < _24913_range->_field_lo) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::Int>(_24813_m + 1LL);
				}
			}
		}
	_iter_next_4725208544:;
	}
	_iter_end_4725208544:;
	return false;
}



inline jule::Bool _1e3cd67d5_is_excluding_latin(jule::Ptr<_1e3cd67d5_RangeTable> _27823_range_tab,jule::I32 _27847_r) {
	{
		jule::Slice<_1e3cd67d5_Range16> &_28014_r16 = _27823_range_tab->_field_r16;
		jule::Int _28213_off = _27823_range_tab->_field_latin_offset;
		if ((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(_28014_r16[_28014_r16.len() - 1LL]._field_hi))) {
			return _1e3cd67d5_is16(_28014_r16.slice(_28213_off),static_cast<jule::U16>(_27847_r));
		}
	}
	jule::Slice<_1e3cd67d5_Range32> &_28710_r32 = _27823_range_tab->_field_r32;
	if ((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(_28710_r32[0LL]._field_lo))) {
		return _1e3cd67d5_is32(_28710_r32,static_cast<jule::U32>(_27847_r));
	}
	return false;
}



inline std::tuple<jule::I32,jule::Int> _1e3cc002c_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::Int _18242_size = jule::Int();
	if (_18220_p.len() < 1LL) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _1869_p0 = _18220_p[0LL];
	jule::U8 _1879_x = _1e3cc002c_FIRST[static_cast<jule::Int>(_1869_p0)];
	if (_1879_x >= 240LL) {
		jule::I32 _19213_mask = static_cast<jule::U8>((_1879_x << 31LL) >> 31LL);
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_18220_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::Int _1959_sz = static_cast<jule::Int>(_1879_x & 7LL);
	_1e3cc002c_accept_range _1969_accept = _1e3cc002c_ACCEPT_RANGES[static_cast<jule::Int>(_1879_x >> 4LL)];
	if (_18220_p.len() < _1959_sz) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2009_b1 = _18220_p[1LL];
	if ((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 2LL) {
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_1869_p0 & 31LL) << 6LL) | static_cast<jule::I32>(_2009_b1 & 63LL));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2079_b2 = _18220_p[2LL];
	if ((_2079_b2 < 128LL) || (191LL < _2079_b2)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 3LL) {
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>(_1869_p0 & 15LL) << 12LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 6LL)) | static_cast<jule::I32>(_2079_b2 & 63LL));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2149_b3 = _18220_p[3LL];
	if ((_2149_b3 < 128LL) || (191LL < _2149_b3)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	_18233_r = static_cast<jule::I32>((((static_cast<jule::I32>(_1869_p0 & 7LL) << 18LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 12LL)) | (static_cast<jule::I32>(_2079_b2 & 63LL) << 6LL)) | static_cast<jule::I32>(_2149_b3 & 63LL));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline jule::Slice<jule::U8> _1e3cc002c_append_rune(jule::Slice<jule::U8> _39824_p,jule::I32 _39835_r) {
	if (_39835_r <= 127LLU) {
		return jule::append(_39824_p,jule::Slice<jule::U8>({static_cast<jule::U8>(_39835_r)}));
	}
	return _1e3cc002c_append_rune_non_ascii(_39824_p,_39835_r);
}



inline jule::Slice<jule::U8> _1e3cc002c_append_rune_non_ascii(jule::Slice<jule::U8> _40530_p,jule::I32 _40545_r) {
	jule::U32 _4079_i = static_cast<jule::U32>(_40545_r);
	{
		if (!((_4079_i <= 2047LLU))) { goto _case_end_4725469696; }
		_case_begin_4725469696:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(192LL | static_cast<jule::U8>(_40545_r >> 6LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_4725468048;
		_case_end_4725469696:;
		if (!((_4079_i > 1114111LL) || ((55296LL <= _4079_i) && (_4079_i <= 57343LL)))) { goto _case_end_4725470912; }
		_case_begin_4725470912:;
		{
			_40545_r=65533LL;
			goto _case_begin_4725471008;
		}
		goto _match_end_4725468048;
		_case_end_4725470912:;
		if (!((_4079_i <= 65535LLU))) { goto _case_end_4725471008; }
		_case_begin_4725471008:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(224LL | static_cast<jule::U8>(_40545_r >> 12LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 6LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_4725468048;
		_case_end_4725471008:;
		_case_begin_4725468160:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(240LL | static_cast<jule::U8>(_40545_r >> 18LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 12LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 6LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_4725468048;
		_case_end_4725468160:;
		_match_end_4725468048:;
	}
}



inline jule::Int _1e3cdbc80_get_last_fs_error(void) {
	jule::Int _739_err = _1e256bec3_get_last_errno();
	{
		auto &_match_expr{ _739_err };
		if (!((13LL) == _match_expr)) { goto _case_end_4725610592; }
		_case_begin_4725610592:;
		{
			return 1LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725610592:;
		if (!((5LL) == _match_expr)) { goto _case_end_4725610688; }
		_case_begin_4725610688:;
		{
			return 2LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725610688:;
		if (!((62LL) == _match_expr)) { goto _case_end_4725610224; }
		_case_begin_4725610224:;
		{
			return 3LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725610224:;
		if (!((63LL) == _match_expr)) { goto _case_end_4725610320; }
		_case_begin_4725610320:;
		{
			return 4LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725610320:;
		if (!((2LL) == _match_expr)) { goto _case_end_4725610416; }
		_case_begin_4725610416:;
		{
			return 5LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725610416:;
		if (!((20LL) == _match_expr)) { goto _case_end_4725610800; }
		_case_begin_4725610800:;
		{
			return 6LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725610800:;
		if (!((84LL) == _match_expr)) { goto _case_end_4725610896; }
		_case_begin_4725610896:;
		{
			return 7LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725610896:;
		if (!((9LL) == _match_expr)) { goto _case_end_4725610992; }
		_case_begin_4725610992:;
		{
			return 8LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725610992:;
		if (!((24LL) == _match_expr)) { goto _case_end_4725609616; }
		_case_begin_4725609616:;
		{
			return 9LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725609616:;
		if (!((23LL) == _match_expr)) { goto _case_end_4725609712; }
		_case_begin_4725609712:;
		{
			return 10LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725609712:;
		if (!((12LL) == _match_expr)) { goto _case_end_4725609808; }
		_case_begin_4725609808:;
		{
			return 11LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725609808:;
		if (!((17LL) == _match_expr)) { goto _case_end_4725609904; }
		_case_begin_4725609904:;
		{
			return 12LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725609904:;
		if (!((4LL) == _match_expr)) { goto _case_end_4725611680; }
		_case_begin_4725611680:;
		{
			return 13LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725611680:;
		if (!((22LL) == _match_expr)) { goto _case_end_4725611776; }
		_case_begin_4725611776:;
		{
			return 14LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725611776:;
		if (!((21LL) == _match_expr)) { goto _case_end_4725611888; }
		_case_begin_4725611888:;
		{
			return 15LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725611888:;
		if (!((98LL) == _match_expr)) { goto _case_end_4725612000; }
		_case_begin_4725612000:;
		{
			return 16LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725612000:;
		if (!((28LL) == _match_expr)) { goto _case_end_4725612112; }
		_case_begin_4725612112:;
		{
			return 17LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725612112:;
		if (!((6LL) == _match_expr)) { goto _case_end_4725612224; }
		_case_begin_4725612224:;
		{
			return 18LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725612224:;
		if (!((30LL) == _match_expr)) { goto _case_end_4725612336; }
		_case_begin_4725612336:;
		{
			return 19LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725612336:;
		if (!((35LL) == _match_expr)) { goto _case_end_4725612448; }
		_case_begin_4725612448:;
		{
			return 20LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725612448:;
		if (!((26LL) == _match_expr || (16LL) == _match_expr)) { goto _case_end_4725612560; }
		_case_begin_4725612560:;
		{
			return 21LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725612560:;
		if (!((27LL) == _match_expr)) { goto _case_end_4725612672; }
		_case_begin_4725612672:;
		{
			return 22LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725612672:;
		if (!((32LL) == _match_expr)) { goto _case_end_4725612784; }
		_case_begin_4725612784:;
		{
			return 23LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725612784:;
		if (!((34LL) == _match_expr)) { goto _case_end_4725612896; }
		_case_begin_4725612896:;
		{
			return 24LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725612896:;
		if (!((29LL) == _match_expr)) { goto _case_end_4725613008; }
		_case_begin_4725613008:;
		{
			return 25LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725613008:;
		if (!((55LL) == _match_expr)) { goto _case_end_4725613120; }
		_case_begin_4725613120:;
		{
			return 26LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725613120:;
		if (!((94LL) == _match_expr)) { goto _case_end_4725613232; }
		_case_begin_4725613232:;
		{
			return 27LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725613232:;
		if (!((66LL) == _match_expr)) { goto _case_end_4725613344; }
		_case_begin_4725613344:;
		{
			return 28LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725613344:;
		_case_begin_4725608400:;
		{
			return 0LLU;
		}
		goto _match_end_4725609152;
		_case_end_4725608400:;
		_match_end_4725609152:;
	}
}



inline jule::Bool _1e3bad8dd_is_unary_op(jule::Str _31320_kind) {
	{
		auto &expr = _1e3bad8dd_UNARY_OPS;
		auto it = expr.begin();
		_iter_begin_4725911408:;
		if (it != expr.end()) {
			jule::Str &_1e3bad8dd_op = *it;
			{
				if (_31320_kind == _1e3bad8dd_op) {
					return true;
				}
			}
			_iter_next_4725911408:;
			++it;
			goto _iter_begin_4725911408;
		}
		_iter_end_4725911408:;
	}
	return false;
}



inline jule::Bool _1e3bad8dd_is_bin_op(jule::Str _32418_kind) {
	{
		auto &expr = _1e3bad8dd_BIN_OPS;
		auto it = expr.begin();
		_iter_begin_4725914400:;
		if (it != expr.end()) {
			jule::Str &_1e3bad8dd_op = *it;
			{
				if (_32418_kind == _1e3bad8dd_op) {
					return true;
				}
			}
			_iter_next_4725914400:;
			++it;
			goto _iter_begin_4725914400;
		}
		_iter_end_4725914400:;
	}
	return false;
}



inline jule::Bool _1e3bad8dd_is_str(jule::Str _34615_k) {
	return (_34615_k != jule::Str()) && ((_34615_k[0LL] == '\"') || _1e3bad8dd_is_raw_str(_34615_k));
}



inline jule::Bool _1e3bad8dd_is_raw_str(jule::Str _34819_k) {
	return (_34819_k != jule::Str()) && (_34819_k[0LL] == '`');
}



inline jule::Bool _1e3bad8dd_is_rune(jule::Str _35116_k) {
	return (_35116_k != jule::Str()) && (_35116_k[0LL] == '\'');
}



inline jule::Bool _1e3bad8dd_is_bool(jule::Str _35516_k) {
	return (_35516_k == jule::Str("true", 4)) || (_35516_k == jule::Str("false", 5));
}



inline jule::Bool _1e3bad8dd_contains_any(jule::Str _35717_s,jule::Str _35725_bytes) {
	{
		auto &expr = _35725_bytes;
		auto it = expr.begin();
		_iter_begin_4725926432:;
		if (it != expr.end()) {
			jule::U8 &_1e3bad8dd_b = *it;
			{
				jule::Int _35913_i = _35717_s.find(static_cast<jule::Str>(_1e3bad8dd_b));
				if (_35913_i >= 0LL) {
					return true;
				}
			}
			_iter_next_4725926432:;
			++it;
			goto _iter_begin_4725926432;
		}
		_iter_end_4725926432:;
	}
	return false;
}



inline jule::Bool _1e3bad8dd_is_float(jule::Str _36917_k) {
	if (_36917_k.has_prefix(jule::Str("0x", 2))) {
		return _1e3bad8dd_contains_any(_36917_k,jule::Str(".pP", 3));
	}
	return _1e3bad8dd_contains_any(_36917_k,jule::Str(".eE", 3));
}



inline jule::Bool _1e3bad8dd_is_num(jule::Str _37815_k) {
	if (_37815_k == jule::Str()) {
		return false;
	}
	jule::U8 _3839_b = _37815_k[0LL];
	return (_3839_b == '.') || (('0' <= _3839_b) && (_3839_b <= '9'));
}



inline jule::Bool _1e3bad8dd_is_ignore_ident(jule::Str _39324_ident) {
	return _39324_ident == jule::Str("_", 1);
}



inline jule::Bool _1e3bad8dd_is_anon_ident(jule::Str _39522_ident) {
	return _39522_ident == jule::Str("<anonymous>", 11);
}



inline jule::Bool _1e3bad8dd_is_space(jule::I32 _40917_r) {
	{
		auto &expr = _1e3bad8dd_SPACES;
		auto it = expr.begin();
		_iter_begin_4725963168:;
		if (it != expr.end()) {
			jule::I32 &_1e3bad8dd_cr = *it;
			{
				if (_40917_r == _1e3bad8dd_cr) {
					return true;
				}
			}
			_iter_next_4725963168:;
			++it;
			goto _iter_begin_4725963168;
		}
		_iter_end_4725963168:;
	}
	return false;
}



inline jule::Bool _1e3bad8dd_is_letter(jule::I32 _42018_r) {
	return _1e390414a_is_letter(_42018_r);
}



inline jule::Bool _1e3bad8dd_is_decimal(jule::U8 _44219_b) {
	return ('0' <= _44219_b) && (_44219_b <= '9');
}



inline jule::Bool _1e3bad8dd_is_binary(jule::U8 _44418_b) {
	return (_44418_b == '0') || (_44418_b == '1');
}



inline jule::Bool _1e3bad8dd_is_octal(jule::U8 _44617_b) {
	return ('0' <= _44617_b) && (_44617_b <= '7');
}



inline jule::Bool _1e3bad8dd_is_hex(jule::U8 _44915_b) {
	{
		if (!((('0' <= _44915_b) && (_44915_b <= '9')))) { goto _case_end_4725976144; }
		_case_begin_4725976144:;
		{
			return true;
		}
		goto _match_end_4725974672;
		_case_end_4725976144:;
		if (!((('a' <= _44915_b) && (_44915_b <= 'f')))) { goto _case_end_4725976240; }
		_case_begin_4725976240:;
		{
			return true;
		}
		goto _match_end_4725974672;
		_case_end_4725976240:;
		if (!((('A' <= _44915_b) && (_44915_b <= 'F')))) { goto _case_end_4725975312; }
		_case_begin_4725975312:;
		{
			return true;
		}
		goto _match_end_4725974672;
		_case_end_4725975312:;
		_case_begin_4725970576:;
		{
			return false;
		}
		goto _match_end_4725974672;
		_case_end_4725970576:;
		_match_end_4725974672:;
	}
}



inline jule::Bool _1e3bad8dd_is_assign(jule::Uint _46118_id) {
	return ((((((_46118_id == 2LLU) || (_46118_id == 31LLU)) || (_46118_id == 34LLU)) || (_46118_id == 20LLU)) || (_46118_id == 28LLU)) || (_46118_id == 3LLU)) || (_46118_id == 7LLU);
}



inline jule::Bool _1e3bad8dd_is_postfix_op(jule::Str _47422_kind) {
	{
		auto &expr = _1e3bad8dd_POSTFIX_OPS;
		auto it = expr.begin();
		_iter_begin_4725979360:;
		if (it != expr.end()) {
			jule::Str &_1e3bad8dd_op = *it;
			{
				if (_47422_kind == _1e3bad8dd_op) {
					return true;
				}
			}
			_iter_next_4725979360:;
			++it;
			goto _iter_begin_4725979360;
		}
		_iter_end_4725979360:;
	}
	return false;
}



inline jule::Bool _1e3bad8dd_is_assign_op(jule::Str _48521_kind) {
	if (_1e3bad8dd_is_postfix_op(_48521_kind)) {
		return true;
	}
	{
		auto &expr = _1e3bad8dd_ASSING_OPS;
		auto it = expr.begin();
		_iter_begin_4725982192:;
		if (it != expr.end()) {
			jule::Str &_1e3bad8dd_op = *it;
			{
				if (_48521_kind == _1e3bad8dd_op) {
					return true;
				}
			}
			_iter_next_4725982192:;
			++it;
			goto _iter_begin_4725982192;
		}
		_iter_end_4725982192:;
	}
	return false;
}



inline jule::Ptr<_1e3beedd5_File> _1e3beedd5_new_file_set(jule::Str _6421_path) {
	return jule::new_struct<_1e3beedd5_File>(new( std::nothrow ) _1e3beedd5_File(jule::Slice<jule::U8>(),_6421_path,jule::Slice<_1e3bad8dd_Token>()));
}



inline _1e24777a2_Log _1e390539e_make_err(jule::Int _10413_row,jule::Int _10423_col,jule::Ptr<_1e3beedd5_File>& _10434_f,jule::Str _10444_fmt,jule::Slice<jule::Any> _10457_args) {
	return _1e24777a2_Log(1LLU,_10413_row,_10423_col,_10434_f->_method_path(),_1e24777a2_logf(_10444_fmt,_10457_args),jule::Str(),jule::Str());
}



inline jule::Bool _1e390539e_bytes_has_prefix(jule::Slice<jule::U8>& _11422_bytes,jule::Str _11437_prefix) {
	if (_11422_bytes.len() < _11437_prefix.len()) {
		return false;
	}
	{
		auto &expr = _11437_prefix;
		auto it = expr.begin();
		_iter_begin_4725994544:;
		if (it != expr.end()) {
			jule::Int _1e390539e_i = it - expr.begin();
			{
				if (_11422_bytes[_1e390539e_i] != _11437_prefix.__at(_1e390539e_i)) {
					return false;
				}
			}
			_iter_next_4725994544:;
			++it;
			_1e390539e_i++;
			goto _iter_begin_4725994544;
		}
		_iter_end_4725994544:;
	}
	return true;
}



inline jule::Str _1e390539e_float_fmt_e(jule::Slice<jule::U8>& _12617_txt,jule::Int _12634_i) {
	jule::Str _12644_lit = jule::Str();
	(_12634_i)++;
	if (_12634_i >= _12617_txt.len()) {
		return _12644_lit;
	}
	jule::U8 _13213_b = _12617_txt[_12634_i];
	if ((_13213_b == '+') || (_13213_b == '-')) {
		(_12634_i)++;
		if (_12634_i >= _12617_txt.len()) {
			return _12644_lit;
		}
	}
	jule::Int _1409_first = _12634_i;
	for (; _12634_i < _12617_txt.len(); (_12634_i)++) {
		{
			_13213_b=_12617_txt[_12634_i];
			if ((!(_1e3bad8dd_is_decimal(_13213_b)))) {
				goto _iter_end_4726004304;
			}
		}
	_iter_next_4726004304:;
	}
	_iter_end_4726004304:;
	if (_12634_i == _1409_first) {
		_12644_lit = jule::Str();
		return _12644_lit;
	}
	_12644_lit = static_cast<jule::Str>(_12617_txt.slice(0LL,_12634_i));
	return _12644_lit;
}



inline jule::Str _1e390539e_float_fmt_p(jule::Slice<jule::U8>& _15417_txt,jule::Int _15430_i) {
	return _1e390539e_float_fmt_e(_15417_txt,_15430_i);
}



inline jule::Str _1e390539e_float_fmt_dotnp(jule::Slice<jule::U8>& _15621_txt,jule::Int _15638_i) {
	if (_15621_txt[_15638_i] != '.') {
		return jule::Str();
	}
	(_15638_i)++;
	_julec_label_loop:;
	for (; _15638_i < _15621_txt.len(); (_15638_i)++) {
		{
			jule::U8 _16413_b = _15621_txt[_15638_i];
			{
				if (!((_1e3bad8dd_is_decimal(_16413_b)))) { goto _case_end_4726014944; }
				_case_begin_4726014944:;
				{
					goto _iter_next_4726007136;
				}
				goto _match_end_4726014496;
				_case_end_4726014944:;
				if (!((_1e390539e_is_float_fmt_p(_16413_b,_15638_i)))) { goto _case_end_4726015040; }
				_case_begin_4726015040:;
				{
					return _1e390539e_float_fmt_p(_15621_txt,_15638_i);
				}
				goto _match_end_4726014496;
				_case_end_4726015040:;
				_case_begin_4726014608:;
				{
					goto _iter_end_4726007136;
				}
				goto _match_end_4726014496;
				_case_end_4726014608:;
				_match_end_4726014496:;
			}
		}
	_iter_next_4726007136:;
	}
	_iter_end_4726007136:;
	return jule::Str();
}



inline jule::Str _1e390539e_float_fmt_dotfp(jule::Slice<jule::U8>& _17421_txt,jule::Int _17438_i) {
	_17438_i+=2LL;
	return _1e390539e_float_fmt_e(_17421_txt,_17438_i);
}



inline jule::Str _1e390539e_float_fmt_dotp(jule::Slice<jule::U8>& _18120_txt,jule::Int _18137_i) {
	(_18137_i)++;
	return _1e390539e_float_fmt_e(_18120_txt,_18137_i);
}



inline jule::Str _1e390539e_float_num(jule::Slice<jule::U8>& _18815_txt,jule::Int _18832_i) {
	jule::Str _18842_lit = jule::Str();
	(_18832_i)++;
	for (; _18832_i < _18815_txt.len(); (_18832_i)++) {
		{
			jule::U8 _19113_b = _18815_txt[_18832_i];
			if ((_18832_i > 1LL) && ((_19113_b == 'e') || (_19113_b == 'E'))) {
				_18842_lit = _1e390539e_float_fmt_e(_18815_txt,_18832_i);
				return _18842_lit;
			}
			if ((!(_1e3bad8dd_is_decimal(_19113_b)))) {
				goto _iter_end_4726021648;
			}
		}
	_iter_next_4726021648:;
	}
	_iter_end_4726021648:;
	if (_18832_i == 1LL) {
		return _18842_lit;
	}
	_18842_lit = static_cast<jule::Str>(_18815_txt.slice(0LL,_18832_i));
	return _18842_lit;
}



inline jule::Str _1e390539e_common_num(jule::Slice<jule::U8>& _20616_txt) {
	jule::Str _20631_lit = jule::Str();
	jule::Int _20713_i = 0LL;
	_julec_label_loop:;
	for (; _20713_i < _20616_txt.len(); (_20713_i)++) {
		{
			jule::U8 _21013_b = _20616_txt[_20713_i];
			{
				if (!((_21013_b == '.'))) { goto _case_end_4726033264; }
				_case_begin_4726033264:;
				{
					_20631_lit = _1e390539e_float_num(_20616_txt,_20713_i);
					return _20631_lit;
				}
				goto _match_end_4726033088;
				_case_end_4726033264:;
				if (!((_1e390539e_is_float_fmt_e(_21013_b,_20713_i)))) { goto _case_end_4726033376; }
				_case_begin_4726033376:;
				{
					_20631_lit = _1e390539e_float_fmt_e(_20616_txt,_20713_i);
					return _20631_lit;
				}
				goto _match_end_4726033088;
				_case_end_4726033376:;
				if (!(((!(_1e3bad8dd_is_decimal(_21013_b)))))) { goto _case_end_4726033488; }
				_case_begin_4726033488:;
				{
					goto _iter_end_4726028736;
				}
				goto _match_end_4726033088;
				_case_end_4726033488:;
				_match_end_4726033088:;
			}
		}
	_iter_next_4726028736:;
	}
	_iter_end_4726028736:;
	if (_20713_i == 0LL) {
		return _20631_lit;
	}
	_20631_lit = static_cast<jule::Str>(_20616_txt.slice(0LL,_20713_i));
	return _20631_lit;
}



inline jule::Str _1e390539e_binary_num(jule::Slice<jule::U8>& _22416_txt) {
	jule::Str _22431_lit = jule::Str();
	if ((!(_1e390539e_bytes_has_prefix(_22416_txt,jule::Str("0b", 2))))) {
		_22431_lit = jule::Str();
		return _22431_lit;
	}
	if (_22416_txt.len() < 2LL) {
		return _22431_lit;
	}
	
	jule::Int _23313_i = 2LL;
	for (; _23313_i < _22416_txt.len(); (_23313_i)++) {
		{
			if ((!(_1e3bad8dd_is_binary(_22416_txt[_23313_i])))) {
				goto _iter_end_4726039568;
			}
		}
	_iter_next_4726039568:;
	}
	_iter_end_4726039568:;
	if (_23313_i == 2LL) {
		return _22431_lit;
	}
	_22431_lit = static_cast<jule::Str>(_22416_txt.slice(0LL,_23313_i));
	return _22431_lit;
}



inline jule::Bool _1e390539e_is_float_fmt_e(jule::U8 _24619_b,jule::Int _24628_i) {
	return (_24628_i > 0LL) && ((_24619_b == 'e') || (_24619_b == 'E'));
}



inline jule::Bool _1e390539e_is_float_fmt_p(jule::U8 _24719_b,jule::Int _24728_i) {
	return (_24728_i > 0LL) && ((_24719_b == 'p') || (_24719_b == 'P'));
}



inline jule::Bool _1e390539e_is_float_fmt_dotnp(jule::Slice<jule::U8>& _24924_txt,jule::Int _24941_i) {
	if (_24924_txt[_24941_i] != '.') {
		return false;
	}
	(_24941_i)++;
	_julec_label_loop:;
	for (; _24941_i < _24924_txt.len(); (_24941_i)++) {
		{
			jule::U8 _25713_b = _24924_txt[_24941_i];
			{
				if (!((_1e3bad8dd_is_decimal(_25713_b)))) { goto _case_end_4726055600; }
				_case_begin_4726055600:;
				{
					goto _iter_next_4726052400;
				}
				goto _match_end_4726055152;
				_case_end_4726055600:;
				if (!((_1e390539e_is_float_fmt_p(_25713_b,_24941_i)))) { goto _case_end_4726055696; }
				_case_begin_4726055696:;
				{
					return true;
				}
				goto _match_end_4726055152;
				_case_end_4726055696:;
				_case_begin_4726055264:;
				{
					goto _iter_end_4726052400;
				}
				goto _match_end_4726055152;
				_case_end_4726055264:;
				_match_end_4726055152:;
			}
		}
	_iter_next_4726052400:;
	}
	_iter_end_4726052400:;
	return false;
}



inline jule::Bool _1e390539e_is_float_fmt_dotp(jule::Slice<jule::U8>& _26823_txt,jule::Int _26836_i) {
	{
		if (!((_26823_txt.len() < 3LL))) { goto _case_end_4726061024; }
		_case_begin_4726061024:;
		{
			goto _case_begin_4726061120;
		}
		goto _match_end_4726059216;
		_case_end_4726061024:;
		if (!((_26823_txt[_26836_i] != '.'))) { goto _case_end_4726061120; }
		_case_begin_4726061120:;
		{
			goto _case_begin_4726059680;
		}
		goto _match_end_4726059216;
		_case_end_4726061120:;
		if (!(((_26823_txt[_26836_i + 1LL] != 'p') && (_26823_txt[_26836_i + 1LL] != 'P')))) { goto _case_end_4726059680; }
		_case_begin_4726059680:;
		{
			return false;
		}
		goto _match_end_4726059216;
		_case_end_4726059680:;
		_case_begin_4726059392:;
		{
			return true;
		}
		goto _match_end_4726059216;
		_case_end_4726059392:;
		_match_end_4726059216:;
	}
}



inline jule::Bool _1e390539e_is_float_fmt_dotfp(jule::Slice<jule::U8>& _27724_txt,jule::Int _27737_i) {
	{
		if (!((_27724_txt.len() < 4LL))) { goto _case_end_4726067040; }
		_case_begin_4726067040:;
		{
			goto _case_begin_4726067136;
		}
		goto _match_end_4726065216;
		_case_end_4726067040:;
		if (!((_27724_txt[_27737_i] != '.'))) { goto _case_end_4726067136; }
		_case_begin_4726067136:;
		{
			goto _case_begin_4726065696;
		}
		goto _match_end_4726065216;
		_case_end_4726067136:;
		if (!(((_27724_txt[_27737_i + 1LL] != 'f') && (_27724_txt[_27737_i + 1LL] != 'F')))) { goto _case_end_4726065696; }
		_case_begin_4726065696:;
		{
			goto _case_begin_4726065808;
		}
		goto _match_end_4726065216;
		_case_end_4726065696:;
		if (!(((_27724_txt[_27737_i + 2LL] != 'p') && (_27724_txt[_27737_i + 1LL] != 'P')))) { goto _case_end_4726065808; }
		_case_begin_4726065808:;
		{
			return false;
		}
		goto _match_end_4726065216;
		_case_end_4726065808:;
		_case_begin_4726065392:;
		{
			return true;
		}
		goto _match_end_4726065216;
		_case_end_4726065392:;
		_match_end_4726065216:;
	}
}



inline jule::Str _1e390539e_octal_num(jule::Slice<jule::U8>& _28715_txt) {
	jule::Str _28730_lit = jule::Str();
	if (_28715_txt[0LL] != '0') {
		_28730_lit = jule::Str();
		return _28730_lit;
	}
	if (_28715_txt.len() < 2LL) {
		return _28730_lit;
	}
	jule::Int _29513_octal_start = 1LL;
	if (_28715_txt[1LL] == 'o') {
		if (_28715_txt.len() < 3LL) {
			return _28730_lit;
		}
		(_29513_octal_start)++;
	}
	jule::Int _30413_i = _29513_octal_start;
	for (; _30413_i < _28715_txt.len(); (_30413_i)++) {
		{
			jule::U8 _30613_b = _28715_txt[_30413_i];
			if (_1e390539e_is_float_fmt_e(_30613_b,_30413_i)) {
				_28730_lit = _1e390539e_float_fmt_e(_28715_txt,_30413_i);
				return _28730_lit;
			}
			if ((!(_1e3bad8dd_is_octal(_30613_b)))) {
				goto _iter_end_4726078704;
			}
		}
	_iter_next_4726078704:;
	}
	_iter_end_4726078704:;
	if (_30413_i == _29513_octal_start) {
		return _28730_lit;
	}
	_28730_lit = static_cast<jule::Str>(_28715_txt.slice(0LL,_30413_i));
	return _28730_lit;
}



inline jule::Str _1e390539e_hex_num(jule::Slice<jule::U8>& _32113_txt) {
	jule::Str _32128_lit = jule::Str();
	if (_32113_txt.len() < 3LL) {
		return _32128_lit;
	}
	if ((_32113_txt[0LL] != '0') || ((_32113_txt[1LL] != 'x') && (_32113_txt[1LL] != 'X'))) {
		return _32128_lit;
	}
	
	jule::Int _33013_i = 2LL;
	_julec_label_loop:;
	for (; _33013_i < _32113_txt.len(); (_33013_i)++) {
		{
			jule::U8 _33313_b = _32113_txt[_33013_i];
			{
				if (!((_1e390539e_is_float_fmt_dotp(_32113_txt,_33013_i)))) { goto _case_end_4726093424; }
				_case_begin_4726093424:;
				{
					_32128_lit = _1e390539e_float_fmt_dotp(_32113_txt,_33013_i);
					return _32128_lit;
				}
				goto _match_end_4726093216;
				_case_end_4726093424:;
				if (!((_1e390539e_is_float_fmt_dotfp(_32113_txt,_33013_i)))) { goto _case_end_4726093536; }
				_case_begin_4726093536:;
				{
					_32128_lit = _1e390539e_float_fmt_dotfp(_32113_txt,_33013_i);
					return _32128_lit;
				}
				goto _match_end_4726093216;
				_case_end_4726093536:;
				if (!((_1e390539e_is_float_fmt_p(_33313_b,_33013_i)))) { goto _case_end_4726093648; }
				_case_begin_4726093648:;
				{
					_32128_lit = _1e390539e_float_fmt_p(_32113_txt,_33013_i);
					return _32128_lit;
				}
				goto _match_end_4726093216;
				_case_end_4726093648:;
				if (!((_1e390539e_is_float_fmt_dotnp(_32113_txt,_33013_i)))) { goto _case_end_4726093760; }
				_case_begin_4726093760:;
				{
					_32128_lit = _1e390539e_float_fmt_dotnp(_32113_txt,_33013_i);
					return _32128_lit;
				}
				goto _match_end_4726093216;
				_case_end_4726093760:;
				if (!(((!(_1e3bad8dd_is_hex(_33313_b)))))) { goto _case_end_4726093872; }
				_case_begin_4726093872:;
				{
					goto _iter_end_4726090784;
				}
				goto _match_end_4726093216;
				_case_end_4726093872:;
				_match_end_4726093216:;
			}
		}
	_iter_next_4726090784:;
	}
	_iter_end_4726090784:;
	if (_33013_i == 2LL) {
		return _32128_lit;
	}
	_32128_lit = static_cast<jule::Str>(_32113_txt.slice(0LL,_33013_i));
	return _32128_lit;
}



inline jule::Str _1e390539e_hex_escape(jule::Slice<jule::U8>& _35816_txt,jule::Int _35829_n) {
	jule::Str _35839_seq = jule::Str();
	if (_35816_txt.len() < _35829_n) {
		return _35839_seq;
	}
	
	jule::Int _36413_i = 2LL;
	for (; _36413_i < _35829_n; (_36413_i)++) {
		{
			if ((!(_1e3bad8dd_is_hex(_35816_txt[_36413_i])))) {
				return _35839_seq;
			}
		}
	_iter_next_4726099504:;
	}
	_iter_end_4726099504:;
	_35839_seq=static_cast<jule::Str>(_35816_txt.slice(0LL,_35829_n));
	return _35839_seq;
}



inline jule::Str _1e390539e_big_unicode_point_escape(jule::Slice<jule::U8>& _37630_txt) {
	return _1e390539e_hex_escape(_37630_txt,10LL);
}



inline jule::Str _1e390539e_little_unicode_point_escape(jule::Slice<jule::U8>& _37833_txt) {
	return _1e390539e_hex_escape(_37833_txt,6LL);
}



inline jule::Str _1e390539e_hex_byte_escape(jule::Slice<jule::U8>& _38021_txt) {
	return _1e390539e_hex_escape(_38021_txt,4LL);
}



inline jule::Str _1e390539e_byte_escape(jule::Slice<jule::U8>& _38317_txt) {
	jule::Str _38332_seq = jule::Str();
	if (_38317_txt.len() < 4LL) {
		return _38332_seq;
	}
	if (((!(_1e3bad8dd_is_octal(_38317_txt[1LL]))) || (!(_1e3bad8dd_is_octal(_38317_txt[2LL])))) || (!(_1e3bad8dd_is_octal(_38317_txt[3LL])))) {
		return _38332_seq;
	}
	_38332_seq = static_cast<jule::Str>(_38317_txt.slice(0LL,4LL));
	return _38332_seq;
}



inline jule::Slice<_1e24777a2_Log> _1e390539e_lex(jule::Ptr<_1e3beedd5_File> _77916_f) {
	if (_77916_f == nullptr) {
		return nullptr;
	}
	_1e390539e_Lex _78413_lex = _1e390539e_Lex(jule::Slice<_1e3bad8dd_Token>(),_77916_f,0LL,jule::Int(),-1LL,jule::Slice<_1e24777a2_Log>());
	_78413_lex._method_new_line();
	_78413_lex._method_lex();
	if (_78413_lex._field_errors.len() > 0LL) {
		return _78413_lex._field_errors;
	}
	_77916_f->_field__tokens=_78413_lex._field_tokens;
	return nullptr;
}



inline jule::Ptr<_1e396d626_FileInfo> _1e396d626_parse_file(jule::Ptr<_1e3beedd5_File> _2223_f) {
	if (_2223_f == nullptr) {
		return nullptr;
	}
	jule::Ptr<_1e396d626_FileInfo> _2713_finf = jule::new_struct<_1e396d626_FileInfo>(new( std::nothrow ) _1e396d626_FileInfo());
	std::tie(_2713_finf->_field_ast,_2713_finf->_field_errors) = _1e396d626_parse_fileset(_2223_f);
	if (_2713_finf->_field_errors.len() > 0LL) {
		_2713_finf->_field_ast=nullptr;
	}
	return _2713_finf;
}



inline std::tuple<jule::Ptr<_1e38d45c0_Ast>,jule::Slice<_1e24777a2_Log>> _1e396d626_parse_fileset(jule::Ptr<_1e3beedd5_File> _5822_f) {
	jule::Ptr<_1e4a02445_Parser> _5913_p = jule::new_struct_ptr<_1e4a02445_Parser>(new( std::nothrow ) _1e4a02445_Parser());
	_5913_p->_method_parse(_5822_f);
	return std::make_tuple(_5913_p->_field_ast,_5913_p->_field_errors);
}



inline jule::Ptr<_1e38d4ec7_ScopeTree> _1e3c61e36_new_scope(void) {
	return jule::new_struct<_1e38d4ec7_ScopeTree>(new( std::nothrow ) _1e38d4ec7_ScopeTree());
}



inline std::tuple<jule::Bool,jule::Bool> _1e3c61e36_is_st(_1e3bad8dd_Token _4410_current,_1e3bad8dd_Token _4426_prev) {
	jule::Bool _4441_ok = jule::Bool();
	jule::Bool _4451_terminated = jule::Bool();
	_4441_ok=(_4410_current._field_id == 5LLU) || (_4426_prev._field_row < _4410_current._field_row);
	_4451_terminated=_4410_current._field_id == 5LLU;
	return std::make_tuple(_4441_ok,_4451_terminated);
}



inline jule::Bool _1e3c61e36_prev_is_incomplete_expr(jule::Slice<_1e3bad8dd_Token>& _5029_tokens,jule::Int& _5047_i) {
	if ((_5047_i > 1LL) && (_5029_tokens[_5047_i - 2LL]._field_id == 23LLU)) {
		return false;
	}
	{
		_1e3bad8dd_Token* _5713_prev = (&(_5029_tokens[_5047_i - 1LL]));
		return (_5713_prev->_field_id == 20LLU) || (((_5713_prev->_field_id == 7LLU) && _1e3bad8dd_is_bin_op(_5713_prev->_field_kind)) && (_5713_prev->_field_row < _5029_tokens[_5047_i]._field_row));
	}
}



inline std::tuple<jule::Int,jule::Bool> _1e3c61e36_next_st_pos(jule::Slice<_1e3bad8dd_Token>& _6617_tokens,jule::Int _6634_start) {
	jule::Int _6713_brace_n = 0LL;
	jule::Int _6813_i = _6634_start;
	for (; _6813_i < _6617_tokens.len(); (_6813_i)++) {
		{
			jule::Bool _7017_ok = false;
			jule::Bool _7117_terminated = false;
			_1e3bad8dd_Token _7213_tok = _6617_tokens[_6813_i];
			{
				auto &_match_expr{ _7213_tok._field_id };
				if (!((3LLU) == _match_expr)) { goto _case_end_4726761456; }
				_case_begin_4726761456:;
				{
					{
						auto &_match_expr{ _7213_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4726769840; }
						_case_begin_4726769840:;
						{
							if ((_6713_brace_n == 0LL) && (_6813_i > _6634_start)) {
								if ((!(_1e3c61e36_prev_is_incomplete_expr(_6617_tokens,_6813_i)))) {
									std::tie(_7017_ok,_7117_terminated) = _1e3c61e36_is_st(_7213_tok,_6617_tokens[_6813_i - 1LL]);
									if (_7017_ok) {
										goto _julec_label_return;
									}
								}
							}
							(_6713_brace_n)++;
						}
						goto _match_end_4726765888;
						_case_end_4726769840:;
						_case_begin_4726764608:;
						{
							(_6713_brace_n)--;
							if ((_6713_brace_n == 0LL) && ((_6813_i + 1LL) < _6617_tokens.len())) {
								std::tie(_7017_ok,_7117_terminated) = _1e3c61e36_is_st(_6617_tokens[_6813_i + 1LL],_7213_tok);
								if (_7017_ok) {
									(_6813_i)++;
									goto _julec_label_return;
								}
							}
						}
						goto _match_end_4726765888;
						_case_end_4726764608:;
						_match_end_4726765888:;
					}
					goto _iter_next_4726759472;
				}
				goto _match_end_4726764464;
				_case_end_4726761456:;
				_match_end_4726764464:;
			}
			if (_6713_brace_n != 0LL) {
				goto _iter_next_4726759472;
			}
			if (_6813_i > _6634_start) {
				if (_1e3c61e36_prev_is_incomplete_expr(_6617_tokens,_6813_i)) {
					goto _iter_next_4726759472;
				}
				std::tie(_7017_ok,_7117_terminated) = _1e3c61e36_is_st(_7213_tok,_6617_tokens[_6813_i - 1LL]);
			} else {
				std::tie(_7017_ok,_7117_terminated) = _1e3c61e36_is_st(_7213_tok,_7213_tok);
			}
			if ((!(_7017_ok))) {
				goto _iter_next_4726759472;
			}
			_julec_label_return:;
			if (_7117_terminated) {
				(_6813_i)++;
			}
			return std::make_tuple(_6813_i,_7117_terminated);
		}
	_iter_next_4726759472:;
	}
	_iter_end_4726759472:;
	return std::make_tuple(_6813_i,false);
}



inline std::tuple<jule::Slice<_1e3bad8dd_Token>,jule::Bool> _1e3c61e36_skip_st(jule::Int& _12917_i,jule::Slice<_1e3bad8dd_Token> _12929_tokens) {
	jule::Int _1309_start = _12917_i;
	jule::Bool _13113_terminated = false;
	std::tie(_12917_i,_13113_terminated) = _1e3c61e36_next_st_pos(_12929_tokens,_1309_start);
	jule::Slice<_1e3bad8dd_Token> _13313_st_tokens = _12929_tokens.slice(_1309_start,_12917_i);
	if (_13113_terminated) {
		if (_13313_st_tokens.len() == 1LL) {
			std::tie(_13313_st_tokens,_13113_terminated) = _1e3c61e36_skip_st(_12917_i,_12929_tokens);
			return std::make_tuple(_13313_st_tokens,_13113_terminated);
		}
		_13313_st_tokens=_13313_st_tokens.slice(0LL,_13313_st_tokens.len() - 1LL);
	}
	return std::make_tuple(_13313_st_tokens,_13113_terminated);
}



inline jule::Slice<jule::Ptr<_1e3c61e36_Stmt>> _1e3c61e36_split_stms(jule::Slice<_1e3bad8dd_Token>& _15120_tokens) {
	jule::Slice<jule::Ptr<_1e3c61e36_Stmt>> _15213_stms = nullptr;
	jule::Int _15313_pos = 0LL;
	while (_15313_pos < _15120_tokens.len()) {
		{
			jule::Slice<_1e3bad8dd_Token> _15518_tokens;
			jule::Bool _15526_terminated;
			std::tie(_15518_tokens,_15526_terminated) = _1e3c61e36_skip_st(_15313_pos,_15120_tokens);
			_15213_stms.push(jule::new_struct<_1e3c61e36_Stmt>(new( std::nothrow ) _1e3c61e36_Stmt(_15518_tokens,_15526_terminated)));
		}
	_iter_next_4726793904:;
	}
	_iter_end_4726793904:;
	return _15213_stms;
}



inline jule::Slice<_1e3bad8dd_Token> _1e3ca6387_is_fn_call(jule::Slice<_1e3bad8dd_Token>& _4020_tokens) {
	{
		auto &_match_expr{ _4020_tokens[0LL]._field_id };
		if (!((3LLU) == _match_expr || (2LLU) == _match_expr || (1LLU) == _match_expr)) { goto _case_end_4726802752; }
		goto _match_end_4726798592;
		_case_end_4726802752:;
		_case_begin_4726798400:;
		{
			_1e3bad8dd_Token _4813_tok = _4020_tokens[_4020_tokens.len() - 1LL];
			if ((_4813_tok._field_id != 3LLU) && (_4813_tok._field_kind != jule::Str(")", 1))) {
				return nullptr;
			}
		}
		goto _match_end_4726798592;
		_case_end_4726798400:;
		_match_end_4726798592:;
	}
	_1e3bad8dd_Token _5313_tok = _4020_tokens[_4020_tokens.len() - 1LL];
	if ((_5313_tok._field_id != 3LLU) || (_5313_tok._field_kind != jule::Str(")", 1))) {
		return nullptr;
	}
	jule::Int _5713_brace_n = 0LL;
	jule::I64 _6013_i = _4020_tokens.len() - 1LL;
	for (; _6013_i >= 1LL; (_6013_i)--) {
		{
			_5313_tok=_4020_tokens[_6013_i];
			if (_5313_tok._field_id == 3LLU) {
				{
					auto &_match_expr{ _5313_tok._field_kind };
					if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4726811904; }
					_case_begin_4726811904:;
					{
						(_5713_brace_n)++;
					}
					goto _match_end_4726811760;
					_case_end_4726811904:;
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4726812000; }
					_case_begin_4726812000:;
					{
						(_5713_brace_n)--;
					}
					goto _match_end_4726811760;
					_case_end_4726812000:;
					_match_end_4726811760:;
				}
				if (_5713_brace_n == 0LL) {
					return _4020_tokens.slice(0LL,_6013_i);
				}
			}
		}
	_iter_next_4726808480:;
	}
	_iter_end_4726808480:;
	return nullptr;
}



inline jule::Ptr<_1e3ca6387_CallData> _1e3ca6387_get_call_data(jule::Slice<_1e3bad8dd_Token>& _8223_tokens) {
	jule::Ptr<_1e3ca6387_CallData> _8313_data = jule::new_struct<_1e3ca6387_CallData>(new( std::nothrow ) _1e3ca6387_CallData());
	std::tie(_8313_data->_field_expr_tokens,_8313_data->_field_args_tokens) = _1e4a02445_range_last(_8223_tokens);
	if (_8313_data->_field_expr_tokens.len() == 0LL) {
		return _8313_data;
	}
	_1e3bad8dd_Token _909_token = _8313_data->_field_expr_tokens[_8313_data->_field_expr_tokens.len() - 1LL];
	if ((_909_token._field_id == 3LLU) && (_909_token._field_kind == jule::Str("]", 1))) {
		std::tie(_8313_data->_field_expr_tokens,_8313_data->_field_generics_tokens) = _1e4a02445_range_last(_8313_data->_field_expr_tokens);
	}
	return _8313_data;
}



inline jule::Slice<_1e3bad8dd_Token> _1e3ca6387_get_block_expr(jule::Slice<_1e3bad8dd_Token>& _9824_tokens) {
	jule::Int _9913_brace_n = 0LL;
	jule::Int _10013_skip_to_next_brace_close = 0LL;
	{
		auto &expr = _9824_tokens;
		auto it = expr.begin();
		_iter_begin_4726823984:;
		if (it != expr.end()) {
			jule::Int _1e3ca6387_i = it - expr.begin();
			_1e3bad8dd_Token &_1e3ca6387_tok = *it;
			{
				{
					auto &_match_expr{ _1e3ca6387_tok._field_id };
					if (!((16LLU) == _match_expr || (17LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4726826688; }
					_case_begin_4726826688:;
					{
						(_10013_skip_to_next_brace_close)++;
					}
					goto _match_end_4726826608;
					_case_end_4726826688:;
					if (!((3LLU) == _match_expr)) { goto _case_end_4726826784; }
					_case_begin_4726826784:;
					{
						{
							auto &_match_expr{ _1e3ca6387_tok._field_kind };
							if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4726829680; }
							_case_begin_4726829680:;
							{
								if ((_9913_brace_n > 0LL) || (_10013_skip_to_next_brace_close > 0LL)) {
									if (_10013_skip_to_next_brace_close > 0LL) {
										(_10013_skip_to_next_brace_close)--;
									}
									(_9913_brace_n)++;
									goto _match_end_4726828816;
								}
								return _9824_tokens.slice(0LL,_1e3ca6387_i);
							}
							goto _match_end_4726828816;
							_case_end_4726829680:;
							if (!((jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4726830240; }
							_case_begin_4726830240:;
							{
								(_9913_brace_n)++;
							}
							goto _match_end_4726828816;
							_case_end_4726830240:;
							_case_begin_4726826944:;
							{
								(_9913_brace_n)--;
							}
							goto _match_end_4726828816;
							_case_end_4726826944:;
							_match_end_4726828816:;
						}
					}
					goto _match_end_4726826608;
					_case_end_4726826784:;
					_match_end_4726826608:;
				}
			}
			_iter_next_4726823984:;
			++it;
			_1e3ca6387_i++;
			goto _iter_begin_4726823984;
		}
		_iter_end_4726823984:;
	}
	return nullptr;
}



inline std::tuple<jule::Slice<_1e3bad8dd_Token>,jule::Slice<_1e3bad8dd_Token>> _1e3ca6387_split_colon(jule::Slice<_1e3bad8dd_Token>& _13221_tokens) {
	jule::Int _13313_range_n = 0LL;
	{
		auto &expr = _13221_tokens;
		auto it = expr.begin();
		_iter_begin_4726831600:;
		if (it != expr.end()) {
			jule::Int _1e3ca6387_i = it - expr.begin();
			_1e3bad8dd_Token &_1e3ca6387_token = *it;
			{
				{
					auto &_match_expr{ _1e3ca6387_token._field_id };
					if (!((3LLU) == _match_expr)) { goto _case_end_4726835344; }
					_case_begin_4726835344:;
					{
						{
							auto &_match_expr{ _1e3ca6387_token._field_kind };
							if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4726838304; }
							_case_begin_4726838304:;
							{
								(_13313_range_n)++;
								goto _iter_next_4726831600;
							}
							goto _match_end_4726836880;
							_case_end_4726838304:;
							_case_begin_4726835600:;
							{
								(_13313_range_n)--;
							}
							goto _match_end_4726836880;
							_case_end_4726835600:;
							_match_end_4726836880:;
						}
					}
					goto _match_end_4726835264;
					_case_end_4726835344:;
					if (!((11LLU) == _match_expr)) { goto _case_end_4726835440; }
					_case_begin_4726835440:;
					{
						if (_13313_range_n < 1LL) {
							jule::Slice<_1e3bad8dd_Token> _15025_l = _13221_tokens.slice(0LL,_1e3ca6387_i);
							jule::Slice<_1e3bad8dd_Token> _15125_r = _13221_tokens.slice(_1e3ca6387_i + 1LL);
							return std::make_tuple(_15025_l,_15125_r);
						}
					}
					goto _match_end_4726835264;
					_case_end_4726835440:;
					_match_end_4726835264:;
				}
			}
			_iter_next_4726831600:;
			++it;
			_1e3ca6387_i++;
			goto _iter_begin_4726831600;
		}
		_iter_end_4726831600:;
	}
	return std::make_tuple(nullptr,nullptr);
}



inline jule::Slice<_1e3bad8dd_Token> _1e3ca6387_eliminate_comments(jule::Slice<_1e3bad8dd_Token>& _19028_tokens) {
	jule::Slice<_1e3bad8dd_Token> _19113_cutted = nullptr;
	{
		auto &expr = _19028_tokens;
		auto it = expr.begin();
		_iter_begin_4726842976:;
		if (it != expr.end()) {
			_1e3bad8dd_Token _1e3ca6387_token = *it;
			{
				if (_1e3ca6387_token._field_id != 18LLU) {
					_19113_cutted.push(_1e3ca6387_token);
				}
			}
			_iter_next_4726842976:;
			++it;
			goto _iter_begin_4726842976;
		}
		_iter_end_4726842976:;
	}
	return _19113_cutted;
}



inline jule::Int _1e3ca6387_find_lowest_prec_op(jule::Slice<_1e3bad8dd_Token>& _20225_tokens) {
	_1e3ca6387_Precedencer _20313_prec = _1e3ca6387_Precedencer();
	jule::Int _20413_brace_n = 0LL;
	jule::Bool _20513_skip_to_next_brace_open = false;
	{
		auto &expr = _20225_tokens;
		auto it = expr.begin();
		_iter_begin_4726850400:;
		if (it != expr.end()) {
			jule::Int _1e3ca6387_i = it - expr.begin();
			_1e3bad8dd_Token &_1e3ca6387_token = *it;
			{
				{
					if (!((_1e3ca6387_token._field_id == 3LLU))) { goto _case_end_4726852896; }
					_case_begin_4726852896:;
					{
						{
							auto &_match_expr{ _1e3ca6387_token._field_kind };
							if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4726856736; }
							_case_begin_4726856736:;
							{
								_20513_skip_to_next_brace_open=false;
								goto _case_begin_4726856144;
							}
							goto _match_end_4726855344;
							_case_end_4726856736:;
							if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4726856144; }
							_case_begin_4726856144:;
							{
								(_20413_brace_n)++;
							}
							goto _match_end_4726855344;
							_case_end_4726856144:;
							_case_begin_4726854368:;
							{
								(_20413_brace_n)--;
							}
							goto _match_end_4726855344;
							_case_end_4726854368:;
							_match_end_4726855344:;
						}
						goto _iter_next_4726850400;
					}
					goto _match_end_4726852608;
					_case_end_4726852896:;
					if (!((_20513_skip_to_next_brace_open))) { goto _case_end_4726853008; }
					_case_begin_4726853008:;
					{
						goto _iter_next_4726850400;
					}
					goto _match_end_4726852608;
					_case_end_4726853008:;
					if (!((_1e3ca6387_token._field_id == 16LLU))) { goto _case_end_4726853120; }
					_case_begin_4726853120:;
					{
						_20513_skip_to_next_brace_open=true;
						goto _iter_next_4726850400;
					}
					goto _match_end_4726852608;
					_case_end_4726853120:;
					if (!((_1e3ca6387_i == 0LL))) { goto _case_end_4726853232; }
					_case_begin_4726853232:;
					{
						goto _iter_next_4726850400;
					}
					goto _match_end_4726852608;
					_case_end_4726853232:;
					if (!((_1e3ca6387_token._field_id != 7LLU))) { goto _case_end_4726853344; }
					_case_begin_4726853344:;
					{
						goto _iter_next_4726850400;
					}
					goto _match_end_4726852608;
					_case_end_4726853344:;
					if (!((_20413_brace_n > 0LL))) { goto _case_end_4726853456; }
					_case_begin_4726853456:;
					{
						goto _iter_next_4726850400;
					}
					goto _match_end_4726852608;
					_case_end_4726853456:;
					_match_end_4726852608:;
				}
				_1e3bad8dd_Token _24013_left = _20225_tokens[_1e3ca6387_i - 1LL];
				if ((_24013_left._field_id == 7LLU) || (_24013_left._field_id == 11LLU)) {
					goto _iter_next_4726850400;
				}
				if (((_1e3ca6387_i > 1LL) && (_24013_left._field_id == 3LLU)) && (_24013_left._field_kind == jule::Str("]", 1))) {
					_1e3bad8dd_Token _24817_lleft = _20225_tokens[_1e3ca6387_i - 2LL];
					if ((_24817_lleft._field_id == 3LLU) && (_24817_lleft._field_kind == jule::Str("[", 1))) {
						if ((_1e3ca6387_token._field_kind == jule::Str("&", 1)) || (_1e3ca6387_token._field_kind == jule::Str("*", 1))) {
							goto _iter_next_4726850400;
						}
					}
				}
				jule::Int _25713_p = _1e3ca6387_token._method_prec();
				if (_25713_p != -1LL) {
					_20313_prec._method_set(_25713_p,jule::Any(_1e3ca6387_i));
				}
			}
			_iter_next_4726850400:;
			++it;
			_1e3ca6387_i++;
			goto _iter_begin_4726850400;
		}
		_iter_end_4726850400:;
	}
	jule::Any _2639_data = _20313_prec._method_get_lower();
	if (_2639_data == nullptr) {
		return -1LL;
	}
	return _2639_data.operator jule::Int();
}



inline jule::Ptr<_1e38d4ec7_IdentExpr> _1e3ca6387_build_ident_expr(_1e3bad8dd_Token& _27026_token) {
	return jule::new_struct<_1e38d4ec7_IdentExpr>(new( std::nothrow ) _1e38d4ec7_IdentExpr(_27026_token,_27026_token._field_kind,false));
}



inline std::tuple<jule::Slice<_1e3bad8dd_Token>,jule::Int> _1e3ca6387_get_range_expr_tokens(jule::Slice<_1e3bad8dd_Token>& _27831_tokens) {
	jule::Int _27913_range_n = 0LL;
	jule::I64 _28013_i = _27831_tokens.len() - 1LL;
	for (; _28013_i >= 0LL; (_28013_i)--) {
		{
			_1e3bad8dd_Token _28213_tok = _27831_tokens[_28013_i];
			if (_28213_tok._field_id == 3LLU) {
				{
					auto &_match_expr{ _28213_tok._field_kind };
					if (!((jule::Str("}", 1)) == _match_expr || (jule::Str("]", 1)) == _match_expr || (jule::Str(")", 1)) == _match_expr)) { goto _case_end_4726882272; }
					_case_begin_4726882272:;
					{
						(_27913_range_n)++;
					}
					goto _match_end_4726880912;
					_case_end_4726882272:;
					_case_begin_4726880224:;
					{
						(_27913_range_n)--;
					}
					goto _match_end_4726880912;
					_case_end_4726880224:;
					_match_end_4726880912:;
				}
			}
			if (_27913_range_n == 0LL) {
				return std::make_tuple(_27831_tokens.slice(0LL,_28013_i),_27913_range_n);
			}
		}
	_iter_next_4726874688:;
	}
	_iter_end_4726874688:;
	return std::make_tuple(nullptr,_27913_range_n);
}



inline jule::Bool _1e3ca4682_check_assign_tokens(jule::Slice<_1e3bad8dd_Token>& _1625_tokens) {
	if ((_1625_tokens.len() == 0LL) || (!(_1e3bad8dd_is_assign(_1625_tokens[0LL]._field_id)))) {
		return false;
	}
	jule::Int _2113_brace_n = 0LL;
	{
		auto &expr = _1625_tokens;
		auto it = expr.begin();
		_iter_begin_4726887392:;
		if (it != expr.end()) {
			_1e3bad8dd_Token &_1e3ca4682_t = *it;
			{
				if (_1e3ca4682_t._field_id == 3LLU) {
					{
						auto &_match_expr{ _1e3ca4682_t._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4726891520; }
						_case_begin_4726891520:;
						{
							(_2113_brace_n)++;
						}
						goto _match_end_4726890160;
						_case_end_4726891520:;
						_case_begin_4726889472:;
						{
							(_2113_brace_n)--;
						}
						goto _match_end_4726890160;
						_case_end_4726889472:;
						_match_end_4726890160:;
					}
				}
				if (_2113_brace_n < 0LL) {
					return false;
				} else if (_2113_brace_n > 0LL) {
					goto _iter_next_4726887392;
				} else if ((_1e3ca4682_t._field_id == 7LLU) && _1e3bad8dd_is_assign_op(_1e3ca4682_t._field_kind)) {
					return true;
				}
			}
			_iter_next_4726887392:;
			++it;
			goto _iter_begin_4726887392;
		}
		_iter_end_4726887392:;
	}
	return false;
}



inline _1e24777a2_Log _1e4a02445_make_err(jule::Int _5013_row,jule::Int _5023_col,jule::Ptr<_1e3beedd5_File>& _5034_f,jule::Str _5044_fmt,jule::Slice<jule::Any> _5057_args) {
	return _1e24777a2_Log(1LLU,_5013_row,_5023_col,_5034_f->_method_path(),_1e24777a2_logf(_5044_fmt,_5057_args),jule::Str(),jule::Str());
}



inline jule::Slice<_1e3bad8dd_Token> _1e4a02445_range(jule::Int& _6915_i,jule::Str _6923_open,jule::Str _6940_close,jule::Slice<_1e3bad8dd_Token>& _6963_tokens) {
	if (_6915_i >= _6963_tokens.len()) {
		return nullptr;
	}
	_1e3bad8dd_Token _749_tok = _6963_tokens[_6915_i];
	if ((_749_tok._field_id != 3LLU) || (_749_tok._field_kind != _6923_open)) {
		return nullptr;
	}
	(_6915_i)++;
	jule::Int _8013_range_n = 1LL;
	jule::Int _819_start = _6915_i;
	for (; (_8013_range_n != 0LL) && (_6915_i < _6963_tokens.len()); (_6915_i)++) {
		{
			_1e3bad8dd_Token _8313_token = _6963_tokens[_6915_i];
			if (_8313_token._field_id == 3LLU) {
				{
					auto &_match_expr{ _8313_token._field_kind };
					if (!((_6923_open) == _match_expr)) { goto _case_end_4726908704; }
					_case_begin_4726908704:;
					{
						(_8013_range_n)++;
					}
					goto _match_end_4726908624;
					_case_end_4726908704:;
					if (!((_6940_close) == _match_expr)) { goto _case_end_4726908800; }
					_case_begin_4726908800:;
					{
						(_8013_range_n)--;
					}
					goto _match_end_4726908624;
					_case_end_4726908800:;
					_match_end_4726908624:;
				}
			}
		}
	_iter_next_4726904048:;
	}
	_iter_end_4726904048:;
	return _6963_tokens.slice(_819_start,_6915_i - 1LL);
}



inline std::tuple<jule::Slice<_1e3bad8dd_Token>,jule::Slice<_1e3bad8dd_Token>> _1e4a02445_range_last(jule::Slice<_1e3bad8dd_Token>& _10220_tokens) {
	jule::Slice<_1e3bad8dd_Token> _10239_cutted = jule::Slice<_1e3bad8dd_Token>();
	jule::Slice<_1e3bad8dd_Token> _10256_cut = jule::Slice<_1e3bad8dd_Token>();
	if (_10220_tokens.len() == 0LL) {
		_10239_cutted = _10220_tokens;
		_10256_cut = nullptr;
		return std::make_tuple(_10239_cutted,_10256_cut);
	} else if (_10220_tokens[_10220_tokens.len() - 1LL]._field_id != 3LLU) {
		_10239_cutted = _10220_tokens;
		_10256_cut = nullptr;
		return std::make_tuple(_10239_cutted,_10256_cut);
	}
	jule::Int _10913_brace_n = 0LL;
	jule::I64 _11013_i = _10220_tokens.len() - 1LL;
	for (; _11013_i >= 0LL; (_11013_i)--) {
		{
			_1e3bad8dd_Token _11213_token = _10220_tokens[_11013_i];
			if (_11213_token._field_id == 3LLU) {
				{
					auto &_match_expr{ _11213_token._field_kind };
					if (!((jule::Str("}", 1)) == _match_expr || (jule::Str("]", 1)) == _match_expr || (jule::Str(")", 1)) == _match_expr)) { goto _case_end_4726922240; }
					_case_begin_4726922240:;
					{
						(_10913_brace_n)++;
						goto _iter_next_4726899904;
					}
					goto _match_end_4726920880;
					_case_end_4726922240:;
					_case_begin_4726920192:;
					{
						(_10913_brace_n)--;
					}
					goto _match_end_4726920880;
					_case_end_4726920192:;
					_match_end_4726920880:;
				}
			}
			if (_10913_brace_n == 0LL) {
				_10239_cutted = _10220_tokens.slice(0LL,_11013_i);
				_10256_cut = _10220_tokens.slice(_11013_i);
				return std::make_tuple(_10239_cutted,_10256_cut);
			}
		}
	_iter_next_4726899904:;
	}
	_iter_end_4726899904:;
	_10239_cutted = _10220_tokens;
	_10256_cut = nullptr;
	return std::make_tuple(_10239_cutted,_10256_cut);
}



inline std::tuple<jule::Slice<jule::Slice<_1e3bad8dd_Token>>,jule::Slice<_1e24777a2_Log>> _1e4a02445_parts(jule::Slice<_1e3bad8dd_Token>& _14015_tokens,jule::Uint _14032_id,jule::Bool _14045_expr_must) {
	if (_14015_tokens.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Slice<jule::Slice<_1e3bad8dd_Token>> _14513_parts = nullptr;
	jule::Slice<_1e24777a2_Log> _14613_errors = nullptr;
	jule::Int _14813_range_n = 0LL;
	jule::Int _14913_last = 0LL;
	{
		auto &expr = _14015_tokens;
		auto it = expr.begin();
		_iter_begin_4726925360:;
		if (it != expr.end()) {
			jule::Int _1e4a02445_i = it - expr.begin();
			_1e3bad8dd_Token &_1e4a02445_token = *it;
			{
				if (_1e4a02445_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _1e4a02445_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4726935872; }
						_case_begin_4726935872:;
						{
							(_14813_range_n)++;
							goto _iter_next_4726925360;
						}
						goto _match_end_4726934512;
						_case_end_4726935872:;
						_case_begin_4726933824:;
						{
							(_14813_range_n)--;
						}
						goto _match_end_4726934512;
						_case_end_4726933824:;
						_match_end_4726934512:;
					}
				}
				if (_14813_range_n > 0LL) {
					goto _iter_next_4726925360;
				}
				if (_1e4a02445_token._field_id == _14032_id) {
					if (_14045_expr_must && ((_1e4a02445_i - _14913_last) <= 0LL)) {
						_1e24777a2_Log _16921_err = _1e4a02445_make_err(_1e4a02445_token._field_row,_1e4a02445_token._field_column,_1e4a02445_token._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
						_14613_errors.push(_16921_err);
					}
					_14513_parts.push(_14015_tokens.slice(_14913_last,_1e4a02445_i));
					_14913_last=static_cast<jule::Int>(_1e4a02445_i + 1LL);
				}
			}
			_iter_next_4726925360:;
			++it;
			_1e4a02445_i++;
			goto _iter_begin_4726925360;
		}
		_iter_end_4726925360:;
	}
	if (_14913_last < _14015_tokens.len()) {
		_14513_parts.push(_14015_tokens.slice(_14913_last));
	} else if ((!(_14045_expr_must))) {
		_14513_parts.push(jule::Slice<_1e3bad8dd_Token>());
	}
	return std::make_tuple(_14513_parts,_14613_errors);
}



inline jule::Str _1e4a02445_get_close_kind_of_brace(jule::Str _18628_left) {
	{
		auto &_match_expr{ _18628_left };
		if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4726945600; }
		_case_begin_4726945600:;
		{
			return jule::Str("(", 1);
		}
		goto _match_end_4726930944;
		_case_end_4726945600:;
		if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4726945792; }
		_case_begin_4726945792:;
		{
			return jule::Str("{", 1);
		}
		goto _match_end_4726930944;
		_case_end_4726945792:;
		if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4726945888; }
		_case_begin_4726945888:;
		{
			return jule::Str("[", 1);
		}
		goto _match_end_4726930944;
		_case_end_4726945888:;
		_case_begin_4726932784:;
		{
			return jule::Str();
		}
		goto _match_end_4726930944;
		_case_end_4726932784:;
		_match_end_4726930944:;
	}
}



inline _1e24777a2_Log _1e4a02445_compiler_err(_1e3bad8dd_Token& _19518_token,jule::Str& _19533_fmt,jule::Slice<jule::Any> _19546_args) {
	return _1e24777a2_Log(1LLU,_19518_token._field_row,_19518_token._field_column,_19518_token._field_file->_method_path(),_1e24777a2_logf(_19533_fmt,_19546_args),_19518_token._field_file->_method_get_row(_19518_token._field_row),jule::Str());
}



inline void _1e4a02445_push_suggestion(_1e24777a2_Log* _20631_log,jule::Str _20642_fmt,jule::Slice<jule::Any> _20655_args) {
	_20631_log->_field_suggestion=_1e24777a2_logf(_20642_fmt,_20655_args);
}



inline jule::Ptr<_1e38d4ec7_Comment> _1e4a02445_build_comment(_1e3bad8dd_Token& _21023_token) {
	_21023_token._field_kind=_21023_token._field_kind.slice(2LL).trim(jule::Str(" \n\r\t\v", 5));
	return jule::new_struct<_1e38d4ec7_Comment>(new( std::nothrow ) _1e38d4ec7_Comment(_21023_token,_21023_token._field_kind));
}



inline jule::Str _1e4a02445_tokstoa(jule::Slice<_1e3bad8dd_Token>& _21913_tokens) {
	jule::Str _22013_s = jule::Str();
	{
		auto &expr = _21913_tokens;
		auto it = expr.begin();
		_iter_begin_4726958848:;
		if (it != expr.end()) {
			_1e3bad8dd_Token &_1e4a02445_token = *it;
			{
				_22013_s+=_1e4a02445_token._field_kind;
			}
			_iter_next_4726958848:;
			++it;
			goto _iter_begin_4726958848;
		}
		_iter_end_4726958848:;
	}
	return _22013_s;
}



inline jule::Ptr<_1e38d4ec7_TypeDecl> _1e4a2bb9a_build_void_type(void) {
	return jule::new_struct<_1e38d4ec7_TypeDecl>(new( std::nothrow ) _1e38d4ec7_TypeDecl());
}



inline jule::Ptr<_1e38d4ec7_TypeDecl> _1e4a2bb9a_build_prim_type(_1e3bad8dd_Token _2024_token) {
	return jule::new_struct<_1e38d4ec7_TypeDecl>(new( std::nothrow ) _1e38d4ec7_TypeDecl(_2024_token,jule::Any(jule::new_struct<_1e38d4ec7_IdentTypeDecl>(new( std::nothrow ) _1e38d4ec7_IdentTypeDecl(_2024_token,_2024_token._field_kind,false,nullptr)))));
}



inline std::tuple<jule::Slice<_1e3bad8dd_Token>,jule::Int> _1e4a2bb9a_split_map_range(jule::Slice<_1e3bad8dd_Token>& _3525_tokens,jule::Int& _3547_i) {
	jule::Slice<_1e3bad8dd_Token> _3557_range_tokens = jule::Slice<_1e3bad8dd_Token>();
	jule::Int _3580_colon = jule::Int();
	_3580_colon=-1LL;
	jule::Int _3713_range_n = 0LL;
	jule::Int _389_start = _3547_i;
	for (; _3547_i < _3525_tokens.len(); (_3547_i)++) {
		{
			_1e3bad8dd_Token _4013_token = _3525_tokens[_3547_i];
			if (_4013_token._field_id == 3LLU) {
				{
					auto &_match_expr{ _4013_token._field_kind };
					if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4726971744; }
					_case_begin_4726971744:;
					{
						(_3713_range_n)++;
						goto _iter_next_4726965600;
					}
					goto _match_end_4726970384;
					_case_end_4726971744:;
					_case_begin_4726969696:;
					{
						(_3713_range_n)--;
					}
					goto _match_end_4726970384;
					_case_end_4726969696:;
					_match_end_4726970384:;
				}
			}
			if (_3713_range_n == 0LL) {
				if ((_389_start + 1LL) > _3547_i) {
					return std::make_tuple(_3557_range_tokens,_3580_colon);
				}
				_3557_range_tokens=_3525_tokens.slice(_389_start + 1LL,_3547_i);
				goto _iter_end_4726965600;
			} else if (_3713_range_n != 1LL) {
				goto _iter_next_4726965600;
			}
			if ((_3580_colon == -1LL) && (_4013_token._field_id == 11LLU)) {
				_3580_colon=static_cast<jule::Int>((_3547_i - _389_start) - 1LL);
			}
		}
	_iter_next_4726965600:;
	}
	_iter_end_4726965600:;
	return std::make_tuple(_3557_range_tokens,_3580_colon);
}



inline void _1c8b9b83b_lshift_unsig(_1c8b9b83b_Const& _55822_c,_1c8b9b83b_Const& _55833_x) {
	jule::U64 _5599_l = _55822_c._method_as_u64();
	jule::U64 _5609_r = _55833_x._method_as_u64();
	_55822_c._method_set_u64(static_cast<jule::U64>(_5599_l << _5609_r));
}



inline void _1c8b9b83b_rshift_unsig(_1c8b9b83b_Const& _56422_c,_1c8b9b83b_Const& _56433_x) {
	jule::U64 _5659_l = _56422_c._method_as_u64();
	jule::U64 _5669_r = _56433_x._method_as_u64();
	_56422_c._method_set_u64(static_cast<jule::U64>(_5659_l >> _5669_r));
}



inline jule::Str _1c8ba1104_real_kind_of(jule::Str _2421_kind) {
	{
		auto &_match_expr{ _2421_kind };
		if (!((jule::Str("int", 3)) == _match_expr)) { goto _case_end_4729185824; }
		_case_begin_4729185824:;
		{
			return jule::Str("i64", 3);
		}
		goto _match_end_4729187744;
		_case_end_4729185824:;
		if (!((jule::Str("uint", 4)) == _match_expr || (jule::Str("uintptr", 7)) == _match_expr)) { goto _case_end_4729185920; }
		_case_begin_4729185920:;
		{
			return jule::Str("u64", 3);
		}
		goto _match_end_4729187744;
		_case_end_4729185920:;
		_case_begin_4729173968:;
		{
			return _2421_kind;
		}
		goto _match_end_4729187744;
		_case_end_4729173968:;
		_match_end_4729187744:;
	}
}



inline jule::Int _1c8ba1104_bitsize_of(jule::Str _4019_k) {
	{
		auto &_match_expr{ _4019_k };
		if (!((jule::Str("i8", 2)) == _match_expr || (jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4729192224; }
		_case_begin_4729192224:;
		{
			return 8LL;
		}
		goto _match_end_4729190992;
		_case_end_4729192224:;
		if (!((jule::Str("i16", 3)) == _match_expr || (jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4729192320; }
		_case_begin_4729192320:;
		{
			return 16LL;
		}
		goto _match_end_4729190992;
		_case_end_4729192320:;
		if (!((jule::Str("i32", 3)) == _match_expr || (jule::Str("u32", 3)) == _match_expr || (jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4729192576; }
		_case_begin_4729192576:;
		{
			return 32LL;
		}
		goto _match_end_4729190992;
		_case_end_4729192576:;
		if (!((jule::Str("i64", 3)) == _match_expr || (jule::Str("u64", 3)) == _match_expr || (jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4729192672; }
		_case_begin_4729192672:;
		{
			return 64LL;
		}
		goto _match_end_4729190992;
		_case_end_4729192672:;
		if (!((jule::Str("uint", 4)) == _match_expr || (jule::Str("int", 3)) == _match_expr)) { goto _case_end_4729192784; }
		_case_begin_4729192784:;
		{
			return 64LL;
		}
		goto _match_end_4729190992;
		_case_end_4729192784:;
		_case_begin_4729190672:;
		{
			return -1LL;
		}
		goto _match_end_4729190992;
		_case_end_4729190672:;
		_match_end_4729190992:;
	}
}



inline jule::Str _1c8ba1104_int_from_bits(jule::U64 _7222_bits) {
	{
		auto &_match_expr{ _7222_bits };
		if (!((8LL) == _match_expr)) { goto _case_end_4729197456; }
		_case_begin_4729197456:;
		{
			return jule::Str("i8", 2);
		}
		goto _match_end_4729195728;
		_case_end_4729197456:;
		if (!((16LL) == _match_expr)) { goto _case_end_4729197552; }
		_case_begin_4729197552:;
		{
			return jule::Str("i16", 3);
		}
		goto _match_end_4729195728;
		_case_end_4729197552:;
		if (!((32LL) == _match_expr)) { goto _case_end_4729197648; }
		_case_begin_4729197648:;
		{
			return jule::Str("i32", 3);
		}
		goto _match_end_4729195728;
		_case_end_4729197648:;
		if (!((64LL) == _match_expr)) { goto _case_end_4729196832; }
		_case_begin_4729196832:;
		{
			return jule::Str("i64", 3);
		}
		goto _match_end_4729195728;
		_case_end_4729196832:;
		_case_begin_4729196016:;
		{
			return jule::Str();
		}
		goto _match_end_4729195728;
		_case_end_4729196016:;
		_match_end_4729195728:;
	}
}



inline jule::Str _1c8ba1104_uint_from_bits(jule::U64 _8523_bits) {
	{
		auto &_match_expr{ _8523_bits };
		if (!((8LL) == _match_expr)) { goto _case_end_4729201136; }
		_case_begin_4729201136:;
		{
			return jule::Str("u8", 2);
		}
		goto _match_end_4729198384;
		_case_end_4729201136:;
		if (!((16LL) == _match_expr)) { goto _case_end_4729201232; }
		_case_begin_4729201232:;
		{
			return jule::Str("u16", 3);
		}
		goto _match_end_4729198384;
		_case_end_4729201232:;
		if (!((32LL) == _match_expr)) { goto _case_end_4729201328; }
		_case_begin_4729201328:;
		{
			return jule::Str("u32", 3);
		}
		goto _match_end_4729198384;
		_case_end_4729201328:;
		if (!((64LL) == _match_expr)) { goto _case_end_4729200512; }
		_case_begin_4729200512:;
		{
			return jule::Str("u64", 3);
		}
		goto _match_end_4729198384;
		_case_end_4729200512:;
		_case_begin_4729199248:;
		{
			return jule::Str();
		}
		goto _match_end_4729198384;
		_case_end_4729199248:;
		_match_end_4729198384:;
	}
}



inline jule::Str _1c8ba1104_float_from_bits(jule::U64 _9924_bits) {
	{
		auto &_match_expr{ _9924_bits };
		if (!((32LL) == _match_expr)) { goto _case_end_4729204608; }
		_case_begin_4729204608:;
		{
			return jule::Str("f32", 3);
		}
		goto _match_end_4729202064;
		_case_end_4729204608:;
		if (!((64LL) == _match_expr)) { goto _case_end_4729204816; }
		_case_begin_4729204816:;
		{
			return jule::Str("f64", 3);
		}
		goto _match_end_4729202064;
		_case_end_4729204816:;
		_case_begin_4729202928:;
		{
			return jule::Str();
		}
		goto _match_end_4729202064;
		_case_end_4729202928:;
		_match_end_4729202064:;
	}
}



inline jule::Bool _1c8ba1104_check_bit_float(jule::Str _12424_val,jule::Int _12434_bit) {
	jule::Int _12513_err;
	std::tie(std::ignore,_12513_err) = _1e3307ee4_parse_float(_12424_val,_12434_bit);
	return _12513_err == 0LLU;
}



inline jule::U64 _1c8ba1104_bitsize_of_float(jule::F64 _13425_x) {
	{
		if (!(((-340282346638528860000000000000000000000.0 <= _13425_x) && (_13425_x <= 340282346638528860000000000000000000000.0)))) { goto _case_end_4729224944; }
		_case_begin_4729224944:;
		{
			return 32LL;
		}
		goto _match_end_4729222496;
		_case_end_4729224944:;
		_case_begin_4729222672:;
		{
			return 64LL;
		}
		goto _match_end_4729222496;
		_case_end_4729222672:;
		_match_end_4729222496:;
	}
}



inline jule::U64 _1c8ba1104_bitsize_of_int(jule::I64 _14823_x) {
	{
		if (!(((-128LL <= _14823_x) && (_14823_x <= 127LL)))) { goto _case_end_4729227376; }
		_case_begin_4729227376:;
		{
			return 8LL;
		}
		goto _match_end_4729225376;
		_case_end_4729227376:;
		if (!(((-32768LL <= _14823_x) && (_14823_x <= 32767LL)))) { goto _case_end_4729227712; }
		_case_begin_4729227712:;
		{
			return 16LL;
		}
		goto _match_end_4729225376;
		_case_end_4729227712:;
		if (!(((-2147483648LL <= _14823_x) && (_14823_x <= 2147483647LL)))) { goto _case_end_4729227808; }
		_case_begin_4729227808:;
		{
			return 32LL;
		}
		goto _match_end_4729225376;
		_case_end_4729227808:;
		_case_begin_4729226032:;
		{
			return 64LL;
		}
		goto _match_end_4729225376;
		_case_end_4729226032:;
		_match_end_4729225376:;
	}
}



inline jule::U64 _1c8ba1104_bitsize_of_uint(jule::U64 _16424_x) {
	{
		if (!((_16424_x <= 255LL))) { goto _case_end_4729232176; }
		_case_begin_4729232176:;
		{
			return 8LL;
		}
		goto _match_end_4729231136;
		_case_end_4729232176:;
		if (!((_16424_x <= 65535LL))) { goto _case_end_4729232512; }
		_case_begin_4729232512:;
		{
			return 16LL;
		}
		goto _match_end_4729231136;
		_case_end_4729232512:;
		if (!((_16424_x <= 4294967295LL))) { goto _case_end_4729232608; }
		_case_begin_4729232608:;
		{
			return 32LL;
		}
		goto _match_end_4729231136;
		_case_end_4729232608:;
		_case_begin_4729230576:;
		{
			return 64LL;
		}
		goto _match_end_4729231136;
		_case_end_4729230576:;
		_match_end_4729231136:;
	}
}



inline jule::F64 _1c8ba438d_min(jule::Str _4316_k) {
	_4316_k=_1c8ba1104_real_kind_of(_4316_k);
	{
		auto &_match_expr{ _4316_k };
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4729236240; }
		_case_begin_4729236240:;
		{
			return -128LL;
		}
		goto _match_end_4729234544;
		_case_end_4729236240:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4729236576; }
		_case_begin_4729236576:;
		{
			return -32768LL;
		}
		goto _match_end_4729234544;
		_case_end_4729236576:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4729236672; }
		_case_begin_4729236672:;
		{
			return -2147483648LL;
		}
		goto _match_end_4729234544;
		_case_end_4729236672:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4729235872; }
		_case_begin_4729235872:;
		{
			return jule::MIN_I64;
		}
		goto _match_end_4729234544;
		_case_end_4729235872:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4729235968; }
		_case_begin_4729235968:;
		{
			return -340282346638528860000000000000000000000.0;
		}
		goto _match_end_4729234544;
		_case_end_4729235968:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4729236064; }
		_case_begin_4729236064:;
		{
			return jule::MIN_F64;
		}
		goto _match_end_4729234544;
		_case_end_4729236064:;
		_case_begin_4729233712:;
		{
			return 0LL;
		}
		goto _match_end_4729234544;
		_case_end_4729233712:;
		_match_end_4729234544:;
	}
}



inline jule::F64 _1c8ba438d_max(jule::Str _5816_k) {
	_5816_k=_1c8ba1104_real_kind_of(_5816_k);
	{
		auto &_match_expr{ _5816_k };
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4729241776; }
		_case_begin_4729241776:;
		{
			return 127LL;
		}
		goto _match_end_4729240464;
		_case_end_4729241776:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4729241920; }
		_case_begin_4729241920:;
		{
			return 32767LL;
		}
		goto _match_end_4729240464;
		_case_end_4729241920:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4729242016; }
		_case_begin_4729242016:;
		{
			return 2147483647LL;
		}
		goto _match_end_4729240464;
		_case_end_4729242016:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4729240832; }
		_case_begin_4729240832:;
		{
			return jule::MAX_I64;
		}
		goto _match_end_4729240464;
		_case_end_4729240832:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4729240928; }
		_case_begin_4729240928:;
		{
			return 255LL;
		}
		goto _match_end_4729240464;
		_case_end_4729240928:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4729241024; }
		_case_begin_4729241024:;
		{
			return 65535LL;
		}
		goto _match_end_4729240464;
		_case_end_4729241024:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4729241120; }
		_case_begin_4729241120:;
		{
			return 4294967295LL;
		}
		goto _match_end_4729240464;
		_case_end_4729241120:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4729241232; }
		_case_begin_4729241232:;
		{
			return jule::MAX_U64;
		}
		goto _match_end_4729240464;
		_case_end_4729241232:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4729241344; }
		_case_begin_4729241344:;
		{
			return 340282346638528860000000000000000000000.0;
		}
		goto _match_end_4729240464;
		_case_end_4729241344:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4729241456; }
		_case_begin_4729241456:;
		{
			return jule::MAX_F64;
		}
		goto _match_end_4729240464;
		_case_end_4729241456:;
		_case_begin_4729237104:;
		{
			return 0LL;
		}
		goto _match_end_4729240464;
		_case_end_4729237104:;
		_match_end_4729240464:;
	}
}



inline jule::Bool _1c8b9ddd2_is_i8_compatible(jule::Str _629_k) {
	_629_k=_1c8ba1104_real_kind_of(_629_k);
	return _629_k == jule::Str("i8", 2);
}



inline jule::Bool _1c8b9ddd2_is_i16_compatible(jule::Str _1230_k) {
	_1230_k=_1c8ba1104_real_kind_of(_1230_k);
	return ((_1230_k == jule::Str("i8", 2)) || (_1230_k == jule::Str("i16", 3))) || (_1230_k == jule::Str("u8", 2));
}



inline jule::Bool _1c8b9ddd2_is_i32_compatible(jule::Str _2030_k) {
	_2030_k=_1c8ba1104_real_kind_of(_2030_k);
	return ((((_2030_k == jule::Str("i8", 2)) || (_2030_k == jule::Str("i16", 3))) || (_2030_k == jule::Str("i32", 3))) || (_2030_k == jule::Str("u8", 2))) || (_2030_k == jule::Str("u16", 3));
}



inline jule::Bool _1c8b9ddd2_is_i64_compatible(jule::Str _3030_k) {
	_3030_k=_1c8ba1104_real_kind_of(_3030_k);
	return ((((((_3030_k == jule::Str("i8", 2)) || (_3030_k == jule::Str("i16", 3))) || (_3030_k == jule::Str("i32", 3))) || (_3030_k == jule::Str("i64", 3))) || (_3030_k == jule::Str("u8", 2))) || (_3030_k == jule::Str("u16", 3))) || (_3030_k == jule::Str("u32", 3));
}



inline jule::Bool _1c8b9ddd2_is_u8_compatible(jule::Str _4229_k) {
	_4229_k=_1c8ba1104_real_kind_of(_4229_k);
	return _4229_k == jule::Str("u8", 2);
}



inline jule::Bool _1c8b9ddd2_is_u16_compatible(jule::Str _4830_k) {
	_4830_k=_1c8ba1104_real_kind_of(_4830_k);
	return (_4830_k == jule::Str("u8", 2)) || (_4830_k == jule::Str("u16", 3));
}



inline jule::Bool _1c8b9ddd2_is_u32_compatible(jule::Str _5430_k) {
	_5430_k=_1c8ba1104_real_kind_of(_5430_k);
	return ((_5430_k == jule::Str("u8", 2)) || (_5430_k == jule::Str("u16", 3))) || (_5430_k == jule::Str("u32", 3));
}



inline jule::Bool _1c8b9ddd2_is_u64_compatible(jule::Str _6230_k) {
	_6230_k=_1c8ba1104_real_kind_of(_6230_k);
	return (((_6230_k == jule::Str("u8", 2)) || (_6230_k == jule::Str("u16", 3))) || (_6230_k == jule::Str("u32", 3))) || (_6230_k == jule::Str("u64", 3));
}



inline jule::Bool _1c8b9ddd2_is_f32_compatible(jule::Str _7130_k) {
	_7130_k=_1c8ba1104_real_kind_of(_7130_k);
	return _7130_k == jule::Str("f32", 3);
}



inline jule::Bool _1c8b9ddd2_is_f64_compatible(jule::Str _7730_k) {
	_7730_k=_1c8ba1104_real_kind_of(_7730_k);
	return (_7730_k == jule::Str("f64", 3)) || (_7730_k == jule::Str("f32", 3));
}



inline jule::Bool _1c8b9ddd2_types_are_compatible(jule::Str _8633_k1,jule::Str _8642_k2) {
	_8633_k1=_1c8ba1104_real_kind_of(_8633_k1);
	{
		auto &_match_expr{ _8633_k1 };
		if (!((jule::Str("any", 3)) == _match_expr)) { goto _case_end_4729267536; }
		_case_begin_4729267536:;
		{
			return true;
		}
		goto _match_end_4729266160;
		_case_end_4729267536:;
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4729267632; }
		_case_begin_4729267632:;
		{
			return _1c8b9ddd2_is_i8_compatible(_8642_k2);
		}
		goto _match_end_4729266160;
		_case_end_4729267632:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4729267728; }
		_case_begin_4729267728:;
		{
			return _1c8b9ddd2_is_i16_compatible(_8642_k2);
		}
		goto _match_end_4729266160;
		_case_end_4729267728:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4729267824; }
		_case_begin_4729267824:;
		{
			return _1c8b9ddd2_is_i32_compatible(_8642_k2);
		}
		goto _match_end_4729266160;
		_case_end_4729267824:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4729268016; }
		_case_begin_4729268016:;
		{
			return _1c8b9ddd2_is_i64_compatible(_8642_k2);
		}
		goto _match_end_4729266160;
		_case_end_4729268016:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4729268112; }
		_case_begin_4729268112:;
		{
			return _1c8b9ddd2_is_u8_compatible(_8642_k2);
		}
		goto _match_end_4729266160;
		_case_end_4729268112:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4729268208; }
		_case_begin_4729268208:;
		{
			return _1c8b9ddd2_is_u16_compatible(_8642_k2);
		}
		goto _match_end_4729266160;
		_case_end_4729268208:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4729268320; }
		_case_begin_4729268320:;
		{
			return _1c8b9ddd2_is_u32_compatible(_8642_k2);
		}
		goto _match_end_4729266160;
		_case_end_4729268320:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4729268432; }
		_case_begin_4729268432:;
		{
			return _1c8b9ddd2_is_u64_compatible(_8642_k2);
		}
		goto _match_end_4729266160;
		_case_end_4729268432:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4729268880; }
		_case_begin_4729268880:;
		{
			return _1c8b9ddd2_is_f32_compatible(_8642_k2);
		}
		goto _match_end_4729266160;
		_case_end_4729268880:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4729268992; }
		_case_begin_4729268992:;
		{
			return _1c8b9ddd2_is_f64_compatible(_8642_k2);
		}
		goto _match_end_4729266160;
		_case_end_4729268992:;
		if (!((jule::Str("bool", 4)) == _match_expr)) { goto _case_end_4729269104; }
		_case_begin_4729269104:;
		{
			return _8642_k2 == jule::Str("bool", 4);
		}
		goto _match_end_4729266160;
		_case_end_4729269104:;
		if (!((jule::Str("str", 3)) == _match_expr)) { goto _case_end_4729269216; }
		_case_begin_4729269216:;
		{
			return _8642_k2 == jule::Str("str", 3);
		}
		goto _match_end_4729266160;
		_case_end_4729269216:;
		_case_begin_4729265984:;
		{
			return false;
		}
		goto _match_end_4729266160;
		_case_end_4729265984:;
		_match_end_4729266160:;
	}
}



inline jule::Bool _1c8b9ddd2_is_i16_greater(jule::Str _10727_k) {
	_10727_k=_1c8ba1104_real_kind_of(_10727_k);
	return _10727_k == jule::Str("u8", 2);
}



inline jule::Bool _1c8b9ddd2_is_i32_greater(jule::Str _11327_k) {
	_11327_k=_1c8ba1104_real_kind_of(_11327_k);
	return (_11327_k == jule::Str("i8", 2)) || (_11327_k == jule::Str("i16", 3));
}



inline jule::Bool _1c8b9ddd2_is_i64_greater(jule::Str _11927_k) {
	_11927_k=_1c8ba1104_real_kind_of(_11927_k);
	return ((_11927_k == jule::Str("i8", 2)) || (_11927_k == jule::Str("i16", 3))) || (_11927_k == jule::Str("i32", 3));
}



inline jule::Bool _1c8b9ddd2_is_u8_greater(jule::Str _12726_k) {
	_12726_k=_1c8ba1104_real_kind_of(_12726_k);
	return _12726_k == jule::Str("i8", 2);
}



inline jule::Bool _1c8b9ddd2_is_u16_greater(jule::Str _13327_k) {
	_13327_k=_1c8ba1104_real_kind_of(_13327_k);
	return ((_13327_k == jule::Str("u8", 2)) || (_13327_k == jule::Str("i8", 2))) || (_13327_k == jule::Str("i16", 3));
}



inline jule::Bool _1c8b9ddd2_is_u32_greater(jule::Str _14127_k) {
	_14127_k=_1c8ba1104_real_kind_of(_14127_k);
	return ((((_14127_k == jule::Str("u8", 2)) || (_14127_k == jule::Str("u16", 3))) || (_14127_k == jule::Str("i8", 2))) || (_14127_k == jule::Str("i16", 3))) || (_14127_k == jule::Str("i32", 3));
}



inline jule::Bool _1c8b9ddd2_is_u64_greater(jule::Str _15127_k) {
	_15127_k=_1c8ba1104_real_kind_of(_15127_k);
	return ((((((_15127_k == jule::Str("u8", 2)) || (_15127_k == jule::Str("u16", 3))) || (_15127_k == jule::Str("u32", 3))) || (_15127_k == jule::Str("i8", 2))) || (_15127_k == jule::Str("i16", 3))) || (_15127_k == jule::Str("i32", 3))) || (_15127_k == jule::Str("i64", 3));
}



inline jule::Bool _1c8b9ddd2_is_f32_greater(jule::Str _16323_k) {
	return _16323_k != jule::Str("f64", 3);
}



inline jule::Bool _1c8b9ddd2_is_f64_greater(jule::Str _16523_k) {
	return true;
}



inline jule::Bool _1c8b9ddd2_is_greater(jule::Str _16823_k1,jule::Str _16832_k2) {
	_16823_k1=_1c8ba1104_real_kind_of(_16823_k1);
	{
		auto &_match_expr{ _16823_k1 };
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4729295936; }
		_case_begin_4729295936:;
		{
			return _1c8b9ddd2_is_i16_greater(_16832_k2);
		}
		goto _match_end_4729294336;
		_case_end_4729295936:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4729294608; }
		_case_begin_4729294608:;
		{
			return _1c8b9ddd2_is_i32_greater(_16832_k2);
		}
		goto _match_end_4729294336;
		_case_end_4729294608:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4729294720; }
		_case_begin_4729294720:;
		{
			return _1c8b9ddd2_is_i64_greater(_16832_k2);
		}
		goto _match_end_4729294336;
		_case_end_4729294720:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4729294832; }
		_case_begin_4729294832:;
		{
			return _1c8b9ddd2_is_u16_greater(_16832_k2);
		}
		goto _match_end_4729294336;
		_case_end_4729294832:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4729295168; }
		_case_begin_4729295168:;
		{
			return _1c8b9ddd2_is_u8_greater(_16832_k2);
		}
		goto _match_end_4729294336;
		_case_end_4729295168:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4729295264; }
		_case_begin_4729295264:;
		{
			return _1c8b9ddd2_is_u32_greater(_16832_k2);
		}
		goto _match_end_4729294336;
		_case_end_4729295264:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4729295360; }
		_case_begin_4729295360:;
		{
			return _1c8b9ddd2_is_u64_greater(_16832_k2);
		}
		goto _match_end_4729294336;
		_case_end_4729295360:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4729295456; }
		_case_begin_4729295456:;
		{
			return _1c8b9ddd2_is_f32_greater(_16832_k2);
		}
		goto _match_end_4729294336;
		_case_end_4729295456:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4729295552; }
		_case_begin_4729295552:;
		{
			return _1c8b9ddd2_is_f64_greater(_16832_k2);
		}
		goto _match_end_4729294336;
		_case_end_4729295552:;
		if (!((jule::Str("any", 3)) == _match_expr)) { goto _case_end_4729296032; }
		_case_begin_4729296032:;
		{
			return true;
		}
		goto _match_end_4729294336;
		_case_end_4729296032:;
		_case_begin_4729293488:;
		{
			return false;
		}
		goto _match_end_4729294336;
		_case_end_4729293488:;
		_match_end_4729294336:;
	}
}



inline jule::Bool _1c8c8ad04_is_sig_int(jule::Str _2723_k) {
	_2723_k=_1c8ba1104_real_kind_of(_2723_k);
	return (((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3));
}



inline jule::Bool _1c8c8ad04_is_unsig_int(jule::Str _3825_k) {
	_3825_k=_1c8ba1104_real_kind_of(_3825_k);
	return (((_3825_k == jule::Str("u8", 2)) || (_3825_k == jule::Str("u16", 3))) || (_3825_k == jule::Str("u32", 3))) || (_3825_k == jule::Str("u64", 3));
}



inline jule::Bool _1c8c8ad04_is_int(jule::Str _4915_k) {
	return _1c8c8ad04_is_sig_int(_4915_k) || _1c8c8ad04_is_unsig_int(_4915_k);
}



inline jule::Bool _1c8c8ad04_is_float(jule::Str _5417_k) {
	return (_5417_k == jule::Str("f32", 3)) || (_5417_k == jule::Str("f64", 3));
}



inline jule::Bool _1c8c8ad04_is_num(jule::Str _5915_k) {
	return _1c8c8ad04_is_int(_5915_k) || _1c8c8ad04_is_float(_5915_k);
}



inline jule::Bool _1c8d06aa6_is_ascii(jule::I32 _1017_r) {
	
	return _1017_r <= 127LLU;
}



inline jule::I32 _1c8d06aa6_to_rune(jule::Slice<jule::U8> _1816_bytes) {
	if (_1816_bytes.len() == 0LL) {
		return 0LL;
	}
	jule::I32 _2313_r = 0LL;
	if ((_1816_bytes[0LL] == '\\') && (_1816_bytes.len() > 1LL)) {
		jule::Int _2517_i = 0LL;
		_2313_r=static_cast<jule::I32>(_1c8d06aa6_rune_from_esq_seq(_1816_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _1e3cc002c_decode_rune(_1816_bytes);
	}
	return _2313_r;
}



inline jule::Str _1c8d06aa6_to_raw_str(jule::Slice<jule::U8> _3719_bytes) {
	return static_cast<jule::Str>(_3719_bytes);
}



inline jule::Str _1c8d06aa6_to_str(jule::Slice<jule::U8> _4215_bytes) {
	if (_4215_bytes.len() == 0LL) {
		return jule::Str();
	}
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::I64>(_4215_bytes.len()));
	jule::Int _4813_i = 0LL;
	while (_4813_i < _4215_bytes.len()) {
		{
			jule::U8 _5013_b = _4215_bytes[_4813_i];
			if (_5013_b == '\\') {
				_4713_s=jule::append(_4713_s,_1c8d06aa6_str_esq_seq(_4215_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;
				jule::Int _5421_size;
				std::tie(_5418_r,_5421_size) = _1e3cc002c_decode_rune(_4215_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_1e3cc002c_append_rune(_4713_s,_5418_r);
			}
		}
	_iter_next_4729332928:;
	}
	_iter_end_4729332928:;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _1c8d06aa6_try_btoa_common_esq(jule::Slice<jule::U8> _6224_bytes) {
	jule::U8 _6241_seq = jule::U8();
	jule::Bool _6252_ok = jule::Bool();
	if ((_6224_bytes.len() < 2LL) || (_6224_bytes[0LL] != '\\')) {
		return std::make_tuple(_6241_seq,_6252_ok);
	}
	{
		auto &_match_expr{ _6224_bytes[1LL] };
		if (!(('\\') == _match_expr)) { goto _case_end_4729344832; }
		_case_begin_4729344832:;
		{
			_6241_seq='\\';
		}
		goto _match_end_4729346320;
		_case_end_4729344832:;
		if (!(('\'') == _match_expr)) { goto _case_end_4729346768; }
		_case_begin_4729346768:;
		{
			_6241_seq='\'';
		}
		goto _match_end_4729346320;
		_case_end_4729346768:;
		if (!(('\"') == _match_expr)) { goto _case_end_4729346864; }
		_case_begin_4729346864:;
		{
			_6241_seq='\"';
		}
		goto _match_end_4729346320;
		_case_end_4729346864:;
		if (!(('a') == _match_expr)) { goto _case_end_4729346960; }
		_case_begin_4729346960:;
		{
			_6241_seq='\a';
		}
		goto _match_end_4729346320;
		_case_end_4729346960:;
		if (!(('b') == _match_expr)) { goto _case_end_4729347056; }
		_case_begin_4729347056:;
		{
			_6241_seq='\b';
		}
		goto _match_end_4729346320;
		_case_end_4729347056:;
		if (!(('f') == _match_expr)) { goto _case_end_4729347152; }
		_case_begin_4729347152:;
		{
			_6241_seq='\f';
		}
		goto _match_end_4729346320;
		_case_end_4729347152:;
		if (!(('n') == _match_expr)) { goto _case_end_4729347264; }
		_case_begin_4729347264:;
		{
			_6241_seq='\n';
		}
		goto _match_end_4729346320;
		_case_end_4729347264:;
		if (!(('r') == _match_expr)) { goto _case_end_4729347376; }
		_case_begin_4729347376:;
		{
			_6241_seq='\r';
		}
		goto _match_end_4729346320;
		_case_end_4729347376:;
		if (!(('t') == _match_expr)) { goto _case_end_4729347488; }
		_case_begin_4729347488:;
		{
			_6241_seq='\t';
		}
		goto _match_end_4729346320;
		_case_end_4729347488:;
		if (!(('v') == _match_expr)) { goto _case_end_4729347600; }
		_case_begin_4729347600:;
		{
			_6241_seq='\v';
		}
		goto _match_end_4729346320;
		_case_end_4729347600:;
		_match_end_4729346320:;
	}
	_6252_ok=_6241_seq != 0LL;
	return std::make_tuple(_6241_seq,_6252_ok);
}



inline jule::I32 _1c8d06aa6_rune_from_esq_seq(jule::Slice<jule::U8> _8422_bytes,jule::Int& _8442_i) {
	jule::U8 _8510_b;
	jule::Bool _8513_ok;
	std::tie(_8510_b,_8513_ok) = _1c8d06aa6_try_btoa_common_esq(_8422_bytes.slice(_8442_i));
	(_8442_i)++;
	if (_8513_ok) {
		(_8442_i)++;
		return static_cast<jule::I32>(_8510_b);
	}
	{
		auto &_match_expr{ _8422_bytes[_8442_i] };
		if (!(('u') == _match_expr)) { goto _case_end_4729361408; }
		_case_begin_4729361408:;
		{
			
			jule::U64 _9514_rc;
			std::tie(_9514_rc,std::ignore) = _1e24a4812_parse_uint(static_cast<jule::Str>(_8422_bytes.slice(_8442_i + 1LL,_8442_i + 5LL)),16LL,64LL);
			_8442_i+=5LL;
			jule::I32 _9713_r = static_cast<jule::I32>(_9514_rc);
			return _9713_r;
		}
		goto _match_end_4729357408;
		_case_end_4729361408:;
		if (!(('U') == _match_expr)) { goto _case_end_4729362064; }
		_case_begin_4729362064:;
		{
			
			jule::U64 _10214_rc;
			std::tie(_10214_rc,std::ignore) = _1e24a4812_parse_uint(static_cast<jule::Str>(_8422_bytes.slice(_8442_i + 1LL,_8442_i + 9LL)),16LL,64LL);
			_8442_i+=9LL;
			jule::I32 _10413_r = static_cast<jule::I32>(_10214_rc);
			return _10413_r;
		}
		goto _match_end_4729357408;
		_case_end_4729362064:;
		if (!(('x') == _match_expr)) { goto _case_end_4729362160; }
		_case_begin_4729362160:;
		{
			
			jule::Slice<jule::U8> _10913_seq = _8422_bytes.slice(_8442_i + 1LL,_8442_i + 3LL);
			_8442_i+=3LL;
			jule::U64 _11114_b;
			std::tie(_11114_b,std::ignore) = _1e24a4812_parse_uint(static_cast<jule::Str>(_10913_seq),16LL,64LL);
			return static_cast<jule::I32>(_11114_b);
		}
		goto _match_end_4729357408;
		_case_end_4729362160:;
		_case_begin_4729355456:;
		{
			
			jule::Slice<jule::U8> _11613_seq = _8422_bytes.slice(_8442_i,_8442_i + 3LL);
			_8442_i+=3LL;
			jule::U64 _11814_b;
			std::tie(_11814_b,std::ignore) = _1e24a4812_parse_uint(static_cast<jule::Str>(_11613_seq.slice(1LL)),8LL,64LL);
			return static_cast<jule::I32>(_11814_b);
		}
		goto _match_end_4729357408;
		_case_end_4729355456:;
		_match_end_4729357408:;
	}
}



inline jule::Slice<jule::U8> _1c8d06aa6_str_esq_seq(jule::Slice<jule::U8> _12316_bytes,jule::Int& _12336_i) {
	jule::I32 _1249_r = _1c8d06aa6_rune_from_esq_seq(_12316_bytes,_12336_i);
	if (_1249_r <= 255LL) {
		return jule::Slice<jule::U8>({static_cast<jule::U8>(_1249_r)});
	}
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1249_r));
}



inline jule::Bool _1e4b15a20_kind_uses_generics(jule::Ptr<_1e6420856_TypeKind> _38823_k,jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>>& _38838_generics) {
	jule::Str _3899_pk = _38823_k->_method_to_str();
	{
		auto &expr = _38838_generics;
		auto it = expr.begin();
		_iter_begin_4730224608:;
		if (it != expr.end()) {
			jule::Ptr<_1e38d4ec7_GenericDecl> &_1e4b15a20_g = *it;
			{
				if (_3899_pk.find(_1e4b15a20_g->_field_ident) != -1LL) {
					return true;
				}
			}
			_iter_next_4730224608:;
			++it;
			goto _iter_begin_4730224608;
		}
		_iter_end_4730224608:;
	}
	return false;
}



inline jule::Bool _1e4b15a20_parameter_uses_generics(jule::Ptr<_1e4b15a20_Param>& _39829_p,jule::Slice<jule::Ptr<_1e38d4ec7_GenericDecl>>& _39841_generics) {
	if (_39829_p->_method_is_self()) {
		return false;
	}
	return _1e4b15a20_kind_uses_generics(_39829_p->_field_kind->_field_kind,_39841_generics);
}



inline jule::Str _1e4cc167b_str_repeat(jule::Str _8415_sub,jule::Int _8429_n) {
	if (_8429_n == 0LL) {
		return jule::Str();
	}
	jule::Str _8913_s = jule::Str();
	for (; _8429_n > 0LL; (_8429_n)--) {
		{
			_8913_s+=_8415_sub;
		}
	_iter_next_4730234080:;
	}
	_iter_end_4730234080:;
	return _8913_s;
}



inline jule::Str _1e4cc167b_build_doc(jule::Ptr<_1e38d4ec7_CommentGroup> _9618_cg) {
	if (_9618_cg == nullptr) {
		return jule::Str();
	}
	jule::Str _10113_doc = jule::Str();
	{
		auto &expr = _9618_cg->_field_comments;
		auto it = expr.begin();
		_iter_begin_4730237712:;
		if (it != expr.end()) {
			jule::Ptr<_1e38d4ec7_Comment> &_1e4cc167b_c = *it;
			{
				_10113_doc+=_1e4cc167b_c->_field_text;
				_10113_doc+=jule::Str(" ", 1);
			}
			_iter_next_4730237712:;
			++it;
			goto _iter_begin_4730237712;
		}
		_iter_end_4730237712:;
	}
	return _10113_doc;
}



inline jule::Ptr<_1e6420856_TypeSymbol> _1e4cc167b_build_type(jule::Ptr<_1e38d4ec7_TypeDecl> _10919_t) {
	if (_10919_t == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_1e6420856_TypeSymbol>(new( std::nothrow ) _1e6420856_TypeSymbol(_10919_t,jule::Ptr<_1e6420856_TypeKind>()));
}



inline jule::Ptr<_1e50ac4b1_Value> _1e4cc167b_build_expr(jule::Ptr<_1e38d4ec7_Expr> _11819_expr) {
	if (_11819_expr == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_1e50ac4b1_Value>(new( std::nothrow ) _1e50ac4b1_Value(_11819_expr,jule::Ptr<_1e50ac4b1_Data>()));
}



inline jule::Ptr<_1e6420856_TypeAlias> _1e4cc167b_build_type_alias(jule::Ptr<_1e38d4ec7_TypeAliasDecl> _12825_decl) {
	return jule::new_struct<_1e6420856_TypeAlias>(new( std::nothrow ) _1e6420856_TypeAlias(_12825_decl->_field_scope,_12825_decl->_field_public,_12825_decl->_field_cpp_linked,jule::Bool(),jule::Bool(),_12825_decl->_field_token,_12825_decl->_field_ident,_1e4cc167b_build_type(_12825_decl->_field_kind),_1e4cc167b_build_doc(_12825_decl->_field_doc_comments),jule::Slice<jule::Any>()));
}



inline jule::Ptr<_1e398ee72_Field> _1e4cc167b_build_field(jule::Ptr<_1e38d4ec7_FieldDecl> _14020_decl) {
	return jule::new_struct_ptr<_1e398ee72_Field>(new( std::nothrow ) _1e398ee72_Field(jule::Ptr<_1e398ee72_Struct>(),_14020_decl->_field_token,_14020_decl->_field_public,_14020_decl->_field_mutable,_14020_decl->_field_ident,_1e4cc167b_build_type(_14020_decl->_field_kind)));
}



inline jule::Slice<jule::Ptr<_1e398ee72_Field>> _1e4cc167b_build_fields(jule::Slice<jule::Ptr<_1e38d4ec7_FieldDecl>>& _15022_decls) {
	jule::Slice<jule::Ptr<_1e398ee72_Field>> _15113_fields = jule::Slice<jule::Ptr<_1e398ee72_Field>>::alloc(0LL,static_cast<jule::I64>(_15022_decls.len()));
	{
		auto &expr = _15022_decls;
		auto it = expr.begin();
		_iter_begin_4730250752:;
		if (it != expr.end()) {
			jule::Ptr<_1e38d4ec7_FieldDecl> _1e4cc167b_decl = *it;
			{
				_15113_fields.push(_1e4cc167b_build_field(_1e4cc167b_decl));
			}
			_iter_next_4730250752:;
			++it;
			goto _iter_begin_4730250752;
		}
		_iter_end_4730250752:;
	}
	return _15113_fields;
}



inline jule::Ptr<_1e398ee72_Struct> _1e4cc167b_build_struct(jule::Ptr<_1e38d4ec7_StructDecl> _15821_decl) {
	return jule::new_struct_ptr<_1e398ee72_Struct>(new( std::nothrow ) _1e398ee72_Struct(jule::Ptr<_1e5054722_Sema>(),jule::Slice<jule::Ptr<_1e398ee72_Struct>>(),jule::Slice<jule::Ptr<_1e398ee72_Struct>>(),_15821_decl->_field_token,_15821_decl->_field_ident,_1e4cc167b_build_fields(_15821_decl->_field_fields),jule::Slice<jule::Ptr<_1e4b15a20_Fn>>(),jule::Slice<jule::Ptr<_1e50b0492_Var>>(),_15821_decl->_field_public,_15821_decl->_field_cpp_linked,_15821_decl->_field_directives,_1e4cc167b_build_doc(_15821_decl->_field_doc_comments),_15821_decl->_field_generics,jule::Slice<jule::Ptr<_1e4d61232_Trait>>(),jule::Slice<jule::Ptr<_1e398ee72_StructIns>>()));
}



inline jule::Ptr<_1e4b15a20_Param> _1e4cc167b_build_param(jule::Ptr<_1e38d4ec7_ParamDecl> _17120_decl) {
	return jule::new_struct_ptr<_1e4b15a20_Param>(new( std::nothrow ) _1e4b15a20_Param(_17120_decl->_field_token,_17120_decl->_field_mutable,_17120_decl->_field_variadic,_17120_decl->_field_reference,_1e4cc167b_build_type(_17120_decl->_field_kind),_17120_decl->_field_ident));
}



inline jule::Slice<jule::Ptr<_1e4b15a20_Param>> _1e4cc167b_build_params(jule::Slice<jule::Ptr<_1e38d4ec7_ParamDecl>>& _18222_decls) {
	jule::Slice<jule::Ptr<_1e4b15a20_Param>> _18313_params = jule::Slice<jule::Ptr<_1e4b15a20_Param>>::alloc(0LL,static_cast<jule::I64>(_18222_decls.len()));
	{
		auto &expr = _18222_decls;
		auto it = expr.begin();
		_iter_begin_4730261632:;
		if (it != expr.end()) {
			jule::Ptr<_1e38d4ec7_ParamDecl> _1e4cc167b_decl = *it;
			{
				_18313_params.push(_1e4cc167b_build_param(_1e4cc167b_decl));
			}
			_iter_next_4730261632:;
			++it;
			goto _iter_begin_4730261632;
		}
		_iter_end_4730261632:;
	}
	return _18313_params;
}



inline jule::Ptr<_1e4b15a20_RetType> _1e4cc167b_build_ret_type(jule::Ptr<_1e38d4ec7_RetTypeDecl> _19023_decl) {
	if ((_19023_decl->_field_idents == nullptr) && (_19023_decl->_field_kind == nullptr)) {
		return nullptr;
	}
	return jule::new_struct<_1e4b15a20_RetType>(new( std::nothrow ) _1e4b15a20_RetType(_1e4cc167b_build_type(_19023_decl->_field_kind),_19023_decl->_field_idents));
}



inline jule::Ptr<_1e4b15a20_Fn> _1e4cc167b_build_fn(jule::Ptr<_1e38d4ec7_FnDecl> _20017_decl) {
	return jule::new_struct_ptr<_1e4b15a20_Fn>(new( std::nothrow ) _1e4b15a20_Fn(jule::Ptr<_1e5054722_Sema>(),_20017_decl->_field_token,_20017_decl->_field_global,_20017_decl->_field_unsafety,_20017_decl->_field_public,_20017_decl->_field_cpp_linked,_20017_decl->_field_statically,_20017_decl->_field_ident,_20017_decl->_field_directives,_1e4cc167b_build_doc(_20017_decl->_field_doc_comments),_20017_decl->_field_scope,_20017_decl->_field_generics,_1e4cc167b_build_ret_type(_20017_decl->_field_result),_1e4cc167b_build_params(_20017_decl->_field_params),jule::Ptr<_1e398ee72_Struct>(),jule::Slice<jule::Ptr<_1e4b15a20_FnIns>>()));
}



inline jule::Slice<jule::Ptr<_1e4b15a20_Fn>> _1e4cc167b_build_methods(jule::Slice<jule::Ptr<_1e38d4ec7_FnDecl>>& _21823_decls) {
	jule::Slice<jule::Ptr<_1e4b15a20_Fn>> _21913_methods = jule::Slice<jule::Ptr<_1e4b15a20_Fn>>::alloc(0LL,static_cast<jule::I64>(_21823_decls.len()));
	{
		auto &expr = _21823_decls;
		auto it = expr.begin();
		_iter_begin_4730274224:;
		if (it != expr.end()) {
			jule::Ptr<_1e38d4ec7_FnDecl> _1e4cc167b_decl = *it;
			{
				_21913_methods.push(_1e4cc167b_build_fn(_1e4cc167b_decl));
			}
			_iter_next_4730274224:;
			++it;
			goto _iter_begin_4730274224;
		}
		_iter_end_4730274224:;
	}
	return _21913_methods;
}



inline jule::Ptr<_1e4d61232_Trait> _1e4cc167b_build_trait(jule::Ptr<_1e38d4ec7_TraitDecl> _22620_decl) {
	return jule::new_struct_ptr<_1e4d61232_Trait>(new( std::nothrow ) _1e4d61232_Trait(_22620_decl->_field_token,_22620_decl->_field_ident,_22620_decl->_field_public,jule::Bool(),_1e4cc167b_build_doc(_22620_decl->_field_doc_comments),_1e4cc167b_build_methods(_22620_decl->_field_methods),jule::Slice<jule::Ptr<_1e398ee72_Struct>>()));
}



inline jule::Ptr<_1e4d62387_EnumItem> _1e4cc167b_build_enum_item(jule::Ptr<_1e38d4ec7_EnumItemDecl> _23624_decl) {
	return jule::new_struct<_1e4d62387_EnumItem>(new( std::nothrow ) _1e4d62387_EnumItem(_23624_decl->_field_token,_23624_decl->_field_ident,_1e4cc167b_build_expr(_23624_decl->_field_expr)));
}



inline jule::Slice<jule::Ptr<_1e4d62387_EnumItem>> _1e4cc167b_build_enum_items(jule::Slice<jule::Ptr<_1e38d4ec7_EnumItemDecl>>& _24426_decls) {
	jule::Slice<jule::Ptr<_1e4d62387_EnumItem>> _24513_items = jule::Slice<jule::Ptr<_1e4d62387_EnumItem>>::alloc(0LL,static_cast<jule::I64>(_24426_decls.len()));
	{
		auto &expr = _24426_decls;
		auto it = expr.begin();
		_iter_begin_4730283472:;
		if (it != expr.end()) {
			jule::Ptr<_1e38d4ec7_EnumItemDecl> _1e4cc167b_decl = *it;
			{
				_24513_items.push(_1e4cc167b_build_enum_item(_1e4cc167b_decl));
			}
			_iter_next_4730283472:;
			++it;
			goto _iter_begin_4730283472;
		}
		_iter_end_4730283472:;
	}
	return _24513_items;
}



inline jule::Ptr<_1e4d62387_Enum> _1e4cc167b_build_enum(jule::Ptr<_1e38d4ec7_EnumDecl> _25219_decl) {
	return jule::new_struct_ptr<_1e4d62387_Enum>(new( std::nothrow ) _1e4d62387_Enum(_25219_decl->_field_token,_25219_decl->_field_public,_25219_decl->_field_ident,_1e4cc167b_build_type(_25219_decl->_field_kind),_1e4cc167b_build_enum_items(_25219_decl->_field_items),_1e4cc167b_build_doc(_25219_decl->_field_doc_comments)));
}



inline jule::Ptr<_1e50b0492_Var> _1e4cc167b_build_var(jule::Ptr<_1e38d4ec7_VarDecl> _26318_decl) {
	return jule::new_struct<_1e50b0492_Var>(new( std::nothrow ) _1e50b0492_Var(jule::Ptr<_1e4d6ee22_Scope>(),_26318_decl->_field_token,_26318_decl->_field_ident,_26318_decl->_field_cpp_linked,_26318_decl->_field_constant,_26318_decl->_field_mutable,_26318_decl->_field_public,jule::Bool(),_26318_decl->_field_statically,_26318_decl->_field_reference,_1e4cc167b_build_doc(_26318_decl->_field_doc_comments),_1e4cc167b_build_type(_26318_decl->_field_kind),_1e4cc167b_build_expr(_26318_decl->_field_expr),_1e4cc167b_ReferenceStack::_static_method_new(),_26318_decl->_field_directives,jule::Ptr<_1e50b0492_IterRelation>(),jule::Slice<jule::Ptr<_1e50b0492_Var>>()));
}



inline jule::Slice<jule::Ptr<_1e50b0492_Var>> _1e4cc167b_build_vars(jule::Slice<jule::Ptr<_1e38d4ec7_VarDecl>> _28119_decls) {
	jule::Slice<jule::Ptr<_1e50b0492_Var>> _28213_vars = jule::Slice<jule::Ptr<_1e50b0492_Var>>::alloc(0LL,static_cast<jule::I64>(_28119_decls.len()));
	{
		auto &expr = _28119_decls;
		auto it = expr.begin();
		_iter_begin_4730297056:;
		if (it != expr.end()) {
			jule::Ptr<_1e38d4ec7_VarDecl> _1e4cc167b_decl = *it;
			{
				_28213_vars.push(_1e4cc167b_build_var(_1e4cc167b_decl));
			}
			_iter_next_4730297056:;
			++it;
			goto _iter_begin_4730297056;
		}
		_iter_end_4730297056:;
	}
	return _28213_vars;
}



inline jule::Ptr<_1e39e721b_Impl> _1e4cc167b_build_impl(jule::Ptr<_1e38d4ec7_Impl> _28919_decl) {
	return jule::new_struct<_1e39e721b_Impl>(new( std::nothrow ) _1e39e721b_Impl(_28919_decl->_field_base,_28919_decl->_field_dest,_1e4cc167b_build_methods(_28919_decl->_field_methods),_1e4cc167b_build_vars(_28919_decl->_field_statics)));
}



inline jule::Ptr<_1e4d6ee22_ScopeChecker> _1e4d6ee22_new_scope_checker_base(jule::Ptr<_1e5054722_Sema>& _3932_s,jule::Ptr<_1e4b15a20_FnIns> _3946_owner) {
	return jule::new_struct_ptr<_1e4d6ee22_ScopeChecker>(new( std::nothrow ) _1e4d6ee22_ScopeChecker(_3932_s,_3946_owner,jule::Ptr<_1e4d6ee22_ScopeChecker>(),jule::Int(),jule::new_struct<_1e5291035_SymbolTable>(new( std::nothrow ) _1e5291035_SymbolTable()),jule::Ptr<_1e4d6ee22_Scope>(),jule::Ptr<_1e38d4ec7_ScopeTree>(),jule::Uintptr(),jule::Uintptr(),jule::Ptr<jule::Slice<jule::Ptr<_1e4d6ee22_ScopeLabel>>>(),jule::Ptr<jule::Slice<jule::Ptr<_1e4d6ee22_ScopeGoto>>>(),jule::Int()));
}



inline jule::Ptr<_1e4d6ee22_ScopeChecker> _1e4d6ee22_new_scope_checker(jule::Ptr<_1e5054722_Sema>& _4727_s,jule::Ptr<_1e4b15a20_FnIns> _4741_owner) {
	jule::Ptr<_1e4d6ee22_ScopeChecker> _4813_base = _1e4d6ee22_new_scope_checker_base(_4727_s,_4741_owner);
	_4813_base->_field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1e4d6ee22_ScopeLabel>>>(nullptr);
	_4813_base->_field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1e4d6ee22_ScopeGoto>>>(nullptr);
	return _4813_base;
}



inline jule::Ptr<_1e4d6ee22_ScopeLabel> _1e4d6ee22_find_label_parent(jule::Str _5722_ident,jule::Ptr<_1e4d6ee22_ScopeChecker> _5738_scope) {
	jule::Ptr<_1e4d6ee22_ScopeLabel> _5813_label = _5738_scope->_method_find_label_scope(_5722_ident);
	while (_5813_label == nullptr) {
		{
			if ((_5738_scope->_field_parent == nullptr) || (_5738_scope->_field_owner != nullptr)) {
				return nullptr;
			}
			_5738_scope=_5738_scope->_field_parent;
			_5813_label=_5738_scope->_method_find_label_scope(_5722_ident);
		}
	_iter_next_4730309008:;
	}
	_iter_end_4730309008:;
	return _5813_label;
}



inline jule::Bool _1e4d6ee22_stmt_is_goto_scope(jule::Any& _7124_stmt,jule::Ptr<_1e4d6ee22_Scope>& _7136_sc) {
	{
		auto &_match_expr{ _7124_stmt };
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_Scope>>())) { goto _case_end_4730317376; }
		_case_begin_4730317376:;
		{
			return _7124_stmt.operator jule::Ptr<_1e4d6ee22_Scope>() == _7136_sc;
		}
		goto _match_end_4730315824;
		_case_end_4730317376:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_InfIter>>())) { goto _case_end_4730316096; }
		_case_begin_4730316096:;
		{
			return _7124_stmt.operator jule::Ptr<_1e4d6ee22_InfIter>()->_field_scope == _7136_sc;
		}
		goto _match_end_4730315824;
		_case_end_4730316096:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_RangeIter>>())) { goto _case_end_4730316192; }
		_case_begin_4730316192:;
		{
			return _7124_stmt.operator jule::Ptr<_1e4d6ee22_RangeIter>()->_field_scope == _7136_sc;
		}
		goto _match_end_4730315824;
		_case_end_4730316192:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_WhileIter>>())) { goto _case_end_4730316288; }
		_case_begin_4730316288:;
		{
			return _7124_stmt.operator jule::Ptr<_1e4d6ee22_WhileIter>()->_field_scope == _7136_sc;
		}
		goto _match_end_4730315824;
		_case_end_4730316288:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_Match>>())) { goto _case_end_4730316384; }
		_case_begin_4730316384:;
		{
			jule::Ptr<_1e4d6ee22_Match> _8613_m = _7124_stmt.operator jule::Ptr<_1e4d6ee22_Match>();
			{
				auto &expr = _8613_m->_field_cases;
				auto it = expr.begin();
				_iter_begin_4730326688:;
				if (it != expr.end()) {
					jule::Ptr<_1e4d6ee22_Case> &_1e4d6ee22_c = *it;
					{
						if (_1e4d6ee22_c->_field_scope == _7136_sc) {
							return true;
						}
					}
					_iter_next_4730326688:;
					++it;
					goto _iter_begin_4730326688;
				}
				_iter_end_4730326688:;
			}
			return (_8613_m->_field_default != nullptr) && (_8613_m->_field_default->_field_scope == _7136_sc);
		}
		goto _match_end_4730315824;
		_case_end_4730316384:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_Conditional>>())) { goto _case_end_4730316672; }
		_case_begin_4730316672:;
		{
			jule::Ptr<_1e4d6ee22_Conditional> _9513_c = _7124_stmt.operator jule::Ptr<_1e4d6ee22_Conditional>();
			{
				auto &expr = _9513_c->_field_elifs;
				auto it = expr.begin();
				_iter_begin_4730331328:;
				if (it != expr.end()) {
					jule::Ptr<_1e4d6ee22_If> &_1e4d6ee22_elif = *it;
					{
						if (_1e4d6ee22_elif->_field_scope == _7136_sc) {
							return true;
						}
					}
					_iter_next_4730331328:;
					++it;
					goto _iter_begin_4730331328;
				}
				_iter_end_4730331328:;
			}
			return (_9513_c->_field_default != nullptr) && (_9513_c->_field_default->_field_scope == _7136_sc);
		}
		goto _match_end_4730315824;
		_case_end_4730316672:;
		_case_begin_4730315216:;
		{
			return false;
		}
		goto _match_end_4730315824;
		_case_end_4730315216:;
		_match_end_4730315824:;
	}
}



inline jule::Int _1e4d6ee22_count_match_type(jule::Ptr<_1e4d6ee22_Match>& _10822_m,jule::Ptr<_1e6420856_TypeKind>& _10834_t) {
	jule::Int _10913_n = 0LL;
	jule::Str _1109_kind = _10834_t->_method_to_str();
	_julec_label_loop:;
	{
		auto &expr = _10822_m->_field_cases;
		auto it = expr.begin();
		_iter_begin_4730337104:;
		if (it != expr.end()) {
			jule::Ptr<_1e4d6ee22_Case> &_1e4d6ee22_c = *it;
			{
				if (_1e4d6ee22_c == nullptr) {
					goto _iter_next_4730337104;
				}
				{
					auto &expr = _1e4d6ee22_c->_field_exprs;
					auto it = expr.begin();
					_iter_begin_4730338816:;
					if (it != expr.end()) {
						jule::Any &_1e4d6ee22_expr = *it;
						{
							if (_1e4d6ee22_expr == nullptr) {
								goto _iter_end_4730337104;
							}
							if (_1109_kind == _1e4d6ee22_expr.operator jule::Ptr<_1e6420856_TypeKind>()->_method_to_str()) {
								(_10913_n)++;
							}
						}
						_iter_next_4730338816:;
						++it;
						goto _iter_begin_4730338816;
					}
					_iter_end_4730338816:;
				}
			}
			_iter_next_4730337104:;
			++it;
			goto _iter_begin_4730337104;
		}
		_iter_end_4730337104:;
	}
	return _10913_n;
}



inline jule::Slice<jule::Ptr<_1e50ac4b1_Data>> _1e4d6ee22_get_datas_from_tuple_data(jule::Ptr<_1e50ac4b1_Data>& _13235_d) {
	if (_13235_d->_field_kind->_method_tup() != nullptr) {
		{
			auto &_match_expr{ _13235_d->_field_model };
			if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_TupleExprModel>>())) { goto _case_end_4730353728; }
			_case_begin_4730353728:;
			{
				return _13235_d->_field_model.operator jule::Ptr<_1e4d70a6b_TupleExprModel>()->_field_datas;
			}
			goto _match_end_4730344208;
			_case_end_4730353728:;
			_case_begin_4730343712:;
			{
				jule::Ptr<_1e6420856_Tuple> _13921_t = _13235_d->_field_kind->_method_tup();
				jule::Slice<jule::Ptr<_1e50ac4b1_Data>> _14021_r = jule::Slice<jule::Ptr<_1e50ac4b1_Data>>::alloc(0LL,static_cast<jule::I64>(_13921_t->_field_types.len()));
				{
					auto &expr = _13921_t->_field_types;
					auto it = expr.begin();
					_iter_begin_4730348656:;
					if (it != expr.end()) {
						jule::Ptr<_1e6420856_TypeKind> _1e4d6ee22_kind = *it;
						{
							_14021_r.push(jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(_1e4d6ee22_kind,jule::Ptr<_1e6420856_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>())));
						}
						_iter_next_4730348656:;
						++it;
						goto _iter_begin_4730348656;
					}
					_iter_end_4730348656:;
				}
				return _14021_r;
			}
			goto _match_end_4730344208;
			_case_end_4730343712:;
			_match_end_4730344208:;
		}
	} else {
		return jule::Slice<jule::Ptr<_1e50ac4b1_Data>>({_13235_d});
	}
}



inline jule::Slice<jule::Any> _1e4d6ee22_get_expr_models(jule::Any& _15425_m) {
	{
		auto &_match_expr{ _15425_m };
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_TupleExpr>>())) { goto _case_end_4730355808; }
		_case_begin_4730355808:;
		{
			jule::Ptr<_1e38d4ec7_TupleExpr> _15717_tup = _15425_m.operator jule::Ptr<_1e38d4ec7_TupleExpr>();
			jule::Slice<jule::Any> _15817_models = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_15717_tup->_field_expr.len()));
			{
				auto &expr = _15717_tup->_field_expr;
				auto it = expr.begin();
				_iter_begin_4730358656:;
				if (it != expr.end()) {
					jule::Ptr<_1e38d4ec7_Expr> _1e4d6ee22_expr = *it;
					{
						_15817_models.push(_1e4d6ee22_expr->_field_kind);
					}
					_iter_next_4730358656:;
					++it;
					goto _iter_begin_4730358656;
				}
				_iter_end_4730358656:;
			}
			return _15817_models;
		}
		goto _match_end_4730343600;
		_case_end_4730355808:;
		_case_begin_4730355120:;
		{
			return jule::Slice<jule::Any>({_15425_m});
		}
		goto _match_end_4730343600;
		_case_end_4730355120:;
		_match_end_4730343600:;
	}
}



inline jule::Bool _1e4d6ee22_check_mut(jule::Ptr<_1e5054722_Sema>& _16919_s,jule::Ptr<_1e50ac4b1_Data>& _16930_left,jule::Ptr<_1e50ac4b1_Data> _16947_right,_1e3bad8dd_Token _16961_error_token) {
	jule::Bool _16983_ok = jule::Bool();
	{
		if (!(((!(_16930_left->_field_mutable))))) { goto _case_end_4730365424; }
		_case_begin_4730365424:;
		{
			_16919_s->_method_push_err(_16961_error_token,jule::Str("cannot assign to immutable define", 33),jule::Slice<jule::Any>());
			_16983_ok = false;
			return _16983_ok;
		}
		goto _match_end_4730363824;
		_case_end_4730365424:;
		if (!((((_16947_right != nullptr) && (!(_16947_right->_field_mutable))) && _16947_right->_field_kind->_method_mutable()))) { goto _case_end_4730365616; }
		_case_begin_4730365616:;
		{
			_16919_s->_method_push_err(_16961_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>());
			_16983_ok = false;
			return _16983_ok;
		}
		goto _match_end_4730363824;
		_case_end_4730365616:;
		_case_begin_4730364000:;
		{
			_16983_ok = true;
			return _16983_ok;
		}
		goto _match_end_4730363824;
		_case_end_4730364000:;
		_match_end_4730363824:;
	}
}



inline jule::Bool _1e4d6ee22_check_assign(jule::Ptr<_1e5054722_Sema>& _18422_s,jule::Ptr<_1e50ac4b1_Data>& _18437_left,jule::Ptr<_1e50ac4b1_Data> _18454_right,_1e3bad8dd_Token _18468_error_token) {
	jule::Bool _18490_ok = jule::Bool();
	jule::Ptr<_1e4b15a20_FnIns> _1859_f = _18437_left->_field_kind->_method_fnc();
	if (((_1859_f != nullptr) && (_1859_f->_field_decl != nullptr)) && _1859_f->_field_decl->_field_global) {
		_18422_s->_method_push_err(_18468_error_token,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_18490_ok = false;
		return _18490_ok;
	}
	{
		if (!((_18437_left->_method_is_const()))) { goto _case_end_4730380640; }
		_case_begin_4730380640:;
		{
			_18422_s->_method_push_err(_18468_error_token,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
			_18422_s->_method_push_suggestion(jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
			_18490_ok = false;
			return _18490_ok;
		}
		goto _match_end_4730376640;
		_case_end_4730380640:;
		if (!(((!(_18437_left->_field_lvalue))))) { goto _case_end_4730380816; }
		_case_begin_4730380816:;
		{
			_18422_s->_method_push_err(_18468_error_token,jule::Str("assignment required lvalue", 26),jule::Slice<jule::Any>());
			_18490_ok = false;
			return _18490_ok;
		}
		goto _match_end_4730376640;
		_case_end_4730380816:;
		if (!(((!(_1e4d6ee22_check_mut(_18422_s,_18437_left,_18454_right,_18468_error_token)))))) { goto _case_end_4730380912; }
		_case_begin_4730380912:;
		{
			_18490_ok = false;
			return _18490_ok;
		}
		goto _match_end_4730376640;
		_case_end_4730380912:;
		_case_begin_4730379280:;
		{
			_18490_ok = true;
			return _18490_ok;
		}
		goto _match_end_4730376640;
		_case_end_4730379280:;
		_match_end_4730376640:;
	}
}



inline jule::Bool _1e4d6ee22_is_valid_ast_st_for_next_st(jule::Any& _20937_n) {
	{
		auto &_match_expr{ _20937_n };
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_AssignSt>>())) { goto _case_end_4730388224; }
		_case_begin_4730388224:;
		{
			return (!(_20937_n.operator jule::Ptr<_1e38d4ec7_AssignSt>()->_field_declarative));
		}
		goto _match_end_4730388416;
		_case_end_4730388224:;
		if (!(_match_expr.type_is<jule::Ptr<_1e38d4ec7_FnCallExpr>>() || _match_expr.type_is<jule::Ptr<_1e38d4ec7_Expr>>())) { goto _case_end_4730389440; }
		_case_begin_4730389440:;
		{
			return true;
		}
		goto _match_end_4730388416;
		_case_end_4730389440:;
		_case_begin_4730373920:;
		{
			return false;
		}
		goto _match_end_4730388416;
		_case_end_4730373920:;
		_match_end_4730388416:;
	}
}



inline jule::Bool _1e4d6ee22_is_valid_st_for_next_st(jule::Any& _22329_st) {
	{
		auto &_match_expr{ _22329_st };
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_FnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e4d6ee22_Postfix>>() || _match_expr.type_is<jule::Ptr<_1e4d6ee22_Assign>>() || _match_expr.type_is<jule::Ptr<_1e4d6ee22_MultiAssign>>())) { goto _case_end_4730393264; }
		_case_begin_4730393264:;
		{
			return true;
		}
		goto _match_end_4730388784;
		_case_end_4730393264:;
		if (!(_match_expr.type_is<jule::Ptr<_1e50ac4b1_Data>>())) { goto _case_end_4730393360; }
		_case_begin_4730393360:;
		{
			{
				auto &_match_expr{ _22329_st.operator jule::Ptr<_1e50ac4b1_Data>()->_field_model };
				if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_FnCallExprModel>>())) { goto _case_end_4730400544; }
				_case_begin_4730400544:;
				{
					return true;
				}
				goto _match_end_4730399024;
				_case_end_4730400544:;
				_case_begin_4730392176:;
				{
					return false;
				}
				goto _match_end_4730399024;
				_case_end_4730392176:;
				_match_end_4730399024:;
			}
		}
		goto _match_end_4730388784;
		_case_end_4730393360:;
		_case_begin_4730391952:;
		{
			return false;
		}
		goto _match_end_4730388784;
		_case_end_4730391952:;
		_match_end_4730388784:;
	}
}



inline jule::Bool _1e4d6ee22_st_is_def(jule::Any& _24215_st) {
	{
		auto &_match_expr{ _24215_st };
		if (!(_match_expr.type_is<jule::Ptr<_1e50b0492_Var>>())) { goto _case_end_4730402176; }
		_case_begin_4730402176:;
		{
			return true;
		}
		goto _match_end_4730401296;
		_case_end_4730402176:;
		_case_begin_4730399504:;
		{
			return false;
		}
		goto _match_end_4730401296;
		_case_end_4730399504:;
		_match_end_4730401296:;
	}
}



inline jule::Ptr<_1e50b0492_Var> _1e4ee54e8_find_var_in_package(jule::Slice<jule::Ptr<_1e5291035_SymbolTable>>& _2729_files,jule::Str _2752_ident,jule::Bool _2764_cpp_linked) {
	{
		auto &expr = _2729_files;
		auto it = expr.begin();
		_iter_begin_4730403840:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e4ee54e8_f = *it;
			{
				jule::Ptr<_1e50b0492_Var> _2917_v = _1e4ee54e8_f->_method_find_var(_2752_ident,_2764_cpp_linked);
				if (_2917_v != nullptr) {
					return _2917_v;
				}
			}
			_iter_next_4730403840:;
			++it;
			goto _iter_begin_4730403840;
		}
		_iter_end_4730403840:;
	}
	return nullptr;
}



inline jule::Ptr<_1e6420856_TypeAlias> _1e4ee54e8_find_type_alias_in_package(jule::Slice<jule::Ptr<_1e5291035_SymbolTable>>& _3936_files,jule::Str _3959_ident,jule::Bool _3971_cpp_linked) {
	{
		auto &expr = _3936_files;
		auto it = expr.begin();
		_iter_begin_4730409856:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e4ee54e8_f = *it;
			{
				jule::Ptr<_1e6420856_TypeAlias> _4117_ta = _1e4ee54e8_f->_method_find_type_alias(_3959_ident,_3971_cpp_linked);
				if (_4117_ta != nullptr) {
					return _4117_ta;
				}
			}
			_iter_next_4730409856:;
			++it;
			goto _iter_begin_4730409856;
		}
		_iter_end_4730409856:;
	}
	return nullptr;
}



inline jule::Ptr<_1e398ee72_Struct> _1e4ee54e8_find_struct_in_package(jule::Slice<jule::Ptr<_1e5291035_SymbolTable>>& _5132_files,jule::Str _5155_ident,jule::Bool _5167_cpp_linked) {
	{
		auto &expr = _5132_files;
		auto it = expr.begin();
		_iter_begin_4730415856:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e4ee54e8_f = *it;
			{
				jule::Ptr<_1e398ee72_Struct> _5317_s = _1e4ee54e8_f->_method_find_struct(_5155_ident,_5167_cpp_linked);
				if (_5317_s != nullptr) {
					return _5317_s;
				}
			}
			_iter_next_4730415856:;
			++it;
			goto _iter_begin_4730415856;
		}
		_iter_end_4730415856:;
	}
	return nullptr;
}



inline jule::Ptr<_1e4b15a20_Fn> _1e4ee54e8_find_fn_in_package(jule::Slice<jule::Ptr<_1e5291035_SymbolTable>>& _6328_files,jule::Str _6351_ident,jule::Bool _6363_cpp_linked) {
	{
		auto &expr = _6328_files;
		auto it = expr.begin();
		_iter_begin_4730421856:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e4ee54e8_file = *it;
			{
				jule::Ptr<_1e4b15a20_Fn> _6517_f = _1e4ee54e8_file->_method_find_fn(_6351_ident,_6363_cpp_linked);
				if (_6517_f != nullptr) {
					return _6517_f;
				}
			}
			_iter_next_4730421856:;
			++it;
			goto _iter_begin_4730421856;
		}
		_iter_end_4730421856:;
	}
	return nullptr;
}



inline jule::Ptr<_1e4d61232_Trait> _1e4ee54e8_find_trait_in_package(jule::Slice<jule::Ptr<_1e5291035_SymbolTable>>& _7531_files,jule::Str _7554_ident) {
	{
		auto &expr = _7531_files;
		auto it = expr.begin();
		_iter_begin_4730427792:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e4ee54e8_f = *it;
			{
				jule::Ptr<_1e4d61232_Trait> _7717_t = _1e4ee54e8_f->_method_find_trait(_7554_ident);
				if (_7717_t != nullptr) {
					return _7717_t;
				}
			}
			_iter_next_4730427792:;
			++it;
			goto _iter_begin_4730427792;
		}
		_iter_end_4730427792:;
	}
	return nullptr;
}



inline jule::Ptr<_1e4d62387_Enum> _1e4ee54e8_find_enum_in_package(jule::Slice<jule::Ptr<_1e5291035_SymbolTable>>& _8730_files,jule::Str _8753_ident) {
	{
		auto &expr = _8730_files;
		auto it = expr.begin();
		_iter_begin_4730428016:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e4ee54e8_f = *it;
			{
				jule::Ptr<_1e4d62387_Enum> _8917_e = _1e4ee54e8_f->_method_find_enum(_8753_ident);
				if (_8917_e != nullptr) {
					return _8917_e;
				}
			}
			_iter_next_4730428016:;
			++it;
			goto _iter_begin_4730428016;
		}
		_iter_end_4730428016:;
	}
	return nullptr;
}



inline jule::Bool _1e5054722_is_valid_model_for_ref(jule::Any _1627_m) {
	{
		auto &_match_expr{ _1627_m };
		if (!(_match_expr.type_is<jule::Ptr<_1e50b0492_Var>>())) { goto _case_end_4730438656; }
		_case_begin_4730438656:;
		{
			return true;
		}
		goto _match_end_4730428384;
		_case_end_4730438656:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_StructSubIdentExprModel>>())) { goto _case_end_4730438752; }
		_case_begin_4730438752:;
		{
			jule::Ptr<_1e4d70a6b_StructSubIdentExprModel> _2213_model = _1627_m.operator jule::Ptr<_1e4d70a6b_StructSubIdentExprModel>();
			return _1e5054722_is_valid_model_for_ref(_2213_model->_field_expr);
		}
		goto _match_end_4730428384;
		_case_end_4730438752:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_TraitSubIdentExprModel>>())) { goto _case_end_4730433280; }
		_case_begin_4730433280:;
		{
			jule::Ptr<_1e4d70a6b_TraitSubIdentExprModel> _2613_model = _1627_m.operator jule::Ptr<_1e4d70a6b_TraitSubIdentExprModel>();
			return _1e5054722_is_valid_model_for_ref(_2613_model->_field_expr);
		}
		goto _match_end_4730428384;
		_case_end_4730433280:;
		_case_begin_4730437920:;
		{
			return false;
		}
		goto _match_end_4730428384;
		_case_end_4730437920:;
		_match_end_4730428384:;
	}
}



inline _1e24777a2_Log _1e5054722_compiler_err(_1e3bad8dd_Token& _3418_token,jule::Bool _3432_line,jule::Str _3444_fmt,jule::Slice<jule::Any> _3457_args) {
	_1e24777a2_Log _3513_log = _1e24777a2_Log(1LLU,_3418_token._field_row,_3418_token._field_column,_3418_token._field_file->_method_path(),_1e24777a2_logf(_3444_fmt,_3457_args),jule::Str(),jule::Str());
	if (_3432_line) {
		_3513_log._field_line=_3418_token._field_file->_method_get_row(_3418_token._field_row);
	}
	return _3513_log;
}



inline jule::Bool _1e5054722_imp_is_lookupable(jule::Ptr<_1e4ee54e8_ImportInfo>& _4823_i,jule::Str _4839_ident) {
	if (_4823_i->_field_cpp_linked) {
		return false;
	}
	if ((!(_4823_i->_field_import_all))) {
		if (_4823_i->_field_selected.len() > 0LL) {
			return _4823_i->_method_exist_ident(_4839_ident);
		}
	}
	return _4823_i->_field_import_all;
}



inline jule::Slice<jule::Ptr<_1e50b0492_Var>> _1e5054722_build_ret_vars(jule::Ptr<_1e4b15a20_FnIns>& _6124_f) {
	if (_6124_f->_field_decl->_method_is_void() || (_6124_f->_field_result == nullptr)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1e50b0492_Var>> _6613_vars = nullptr;
	jule::Slice<jule::Ptr<_1e6420856_TypeKind>> _6713_types = _1e522c29b_get_fn_result_types(_6124_f);
	{
		auto &expr = _6124_f->_field_decl->_field_result->_field_idents;
		auto it = expr.begin();
		_iter_begin_4730463456:;
		if (it != expr.end()) {
			jule::Int _1e5054722_i = it - expr.begin();
			_1e3bad8dd_Token _1e5054722_ident = *it;
			{
				if (_1e3bad8dd_is_ignore_ident(_1e5054722_ident._field_kind)) {
					goto _iter_next_4730463456;
				}
				jule::Ptr<_1e50b0492_Var> _7317_v = jule::new_struct<_1e50b0492_Var>(new( std::nothrow ) _1e50b0492_Var(_6124_f->_field_scope,_1e5054722_ident,_1e5054722_ident._field_kind,jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1e6420856_TypeSymbol>(new( std::nothrow ) _1e6420856_TypeSymbol(jule::Ptr<_1e38d4ec7_TypeDecl>(),_6713_types[_1e5054722_i])),jule::new_struct<_1e50ac4b1_Value>(new( std::nothrow ) _1e50ac4b1_Value(jule::Ptr<_1e38d4ec7_Expr>(),jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data()))),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>(),jule::Ptr<_1e50b0492_IterRelation>(),jule::Slice<jule::Ptr<_1e50b0492_Var>>()));
				_6613_vars.push(_7317_v);
			}
			_iter_next_4730463456:;
			++it;
			_1e5054722_i++;
			goto _iter_begin_4730463456;
		}
		_iter_end_4730463456:;
	}
	return _6613_vars;
}



inline jule::Slice<jule::Ptr<_1e50b0492_Var>> _1e5054722_build_param_vars(jule::Ptr<_1e4b15a20_FnIns>& _9026_f) {
	if (_9026_f->_field_params.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1e50b0492_Var>> _9513_vars = jule::Slice<jule::Ptr<_1e50b0492_Var>>::alloc(0LL,static_cast<jule::I64>(_9026_f->_field_params.len()));
	{
		auto &expr = _9026_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4730473856:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_ParamIns> _1e5054722_p = *it;
			{
				jule::Ptr<_1e50b0492_Var> _9717_v = jule::new_struct<_1e50b0492_Var>(new( std::nothrow ) _1e50b0492_Var(_9026_f->_field_scope,_1e5054722_p->_field_decl->_field_token,_1e5054722_p->_field_decl->_field_ident,jule::Bool(),jule::Bool(),_1e5054722_p->_field_decl->_field_mutable,jule::Bool(),true,jule::Bool(),_1e5054722_p->_field_decl->_field_reference,jule::Str(),jule::new_struct<_1e6420856_TypeSymbol>(new( std::nothrow ) _1e6420856_TypeSymbol()),jule::new_struct<_1e50ac4b1_Value>(new( std::nothrow ) _1e50ac4b1_Value(jule::Ptr<_1e38d4ec7_Expr>(),jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data()))),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>(),jule::Ptr<_1e50b0492_IterRelation>(),jule::Slice<jule::Ptr<_1e50b0492_Var>>()));
				{
					if (!((_1e5054722_p->_field_decl->_method_is_self()))) { goto _case_end_4730480432; }
					_case_begin_4730480432:;
					{
						_9717_v->_field_kind->_field_kind=jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_9026_f->_field_owner));
						_9717_v->_field_reference=true;
						if (_1e5054722_p->_field_decl->_method_is_ref()) {
							_9717_v->_field_ident=_9717_v->_field_ident.slice(1LL);
							_9717_v->_field_kind->_field_kind->_field_kind=jule::new_struct_ptr<_1e6420856_Sptr>(new( std::nothrow ) _1e6420856_Sptr(_9717_v->_field_kind->_field_kind->_method_clone()));
						}
					}
					goto _match_end_4730479536;
					_case_end_4730480432:;
					if (!((_1e5054722_p->_field_decl->_field_variadic))) { goto _case_end_4730479936; }
					_case_begin_4730479936:;
					{
						_9717_v->_field_kind->_field_kind=jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1e6420856_Slc>(new( std::nothrow ) _1e6420856_Slc(_1e5054722_p->_field_kind->_method_clone()))));
					}
					goto _match_end_4730479536;
					_case_end_4730479936:;
					_case_begin_4730479648:;
					{
						_9717_v->_field_kind->_field_kind=_1e5054722_p->_field_kind->_method_clone();
					}
					goto _match_end_4730479536;
					_case_end_4730479648:;
					_match_end_4730479536:;
				}
				_9513_vars.push(_9717_v);
			}
			_iter_next_4730473856:;
			++it;
			goto _iter_begin_4730473856;
		}
		_iter_end_4730473856:;
	}
	return _9513_vars;
}



inline jule::Slice<jule::Ptr<_1e6420856_TypeAlias>> _1e5054722_build_generic_type_aliases(jule::Ptr<_1e4b15a20_FnIns>& _13936_f) {
	jule::I64 _14013_size = _13936_f->_field_generics.len();
	if (_13936_f->_field_decl->_field_owner != nullptr) {
		_14013_size+=static_cast<jule::I64>(_13936_f->_field_decl->_field_owner->_field_generics.len());
	}
	if (_14013_size == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1e6420856_TypeAlias>> _14913_aliases = jule::Slice<jule::Ptr<_1e6420856_TypeAlias>>::alloc(0LL,_14013_size);
	{
		auto &expr = _13936_f->_field_generics;
		auto it = expr.begin();
		_iter_begin_4730496960:;
		if (it != expr.end()) {
			jule::Int _1e5054722_i = it - expr.begin();
			jule::Ptr<_1e6420856_TypeKind> _1e5054722_g = *it;
			{
				jule::Ptr<_1e38d4ec7_GenericDecl> _15217_decl = _13936_f->_field_decl->_field_generics[_1e5054722_i];
				_14913_aliases.push(jule::new_struct<_1e6420856_TypeAlias>(new( std::nothrow ) _1e6420856_TypeAlias(_13936_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,true,_15217_decl->_field_token,_15217_decl->_field_ident,jule::new_struct<_1e6420856_TypeSymbol>(new( std::nothrow ) _1e6420856_TypeSymbol(jule::Ptr<_1e38d4ec7_TypeDecl>(),_1e5054722_g)),jule::Str(),jule::Slice<jule::Any>())));
			}
			_iter_next_4730496960:;
			++it;
			_1e5054722_i++;
			goto _iter_begin_4730496960;
		}
		_iter_end_4730496960:;
	}
	if (_13936_f->_field_decl->_field_owner != nullptr) {
		jule::Ptr<_1e398ee72_StructIns> _16417_owner = _13936_f->_field_owner;
		{
			auto &expr = _16417_owner->_field_generics;
			auto it = expr.begin();
			_iter_begin_4730501584:;
			if (it != expr.end()) {
				jule::Int _1e5054722_i = it - expr.begin();
				jule::Ptr<_1e6420856_TypeKind> _1e5054722_g = *it;
				{
					jule::Ptr<_1e38d4ec7_GenericDecl> _16621_decl = _16417_owner->_field_decl->_field_generics[_1e5054722_i];
					_14913_aliases.push(jule::new_struct<_1e6420856_TypeAlias>(new( std::nothrow ) _1e6420856_TypeAlias(_13936_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,true,_16621_decl->_field_token,_16621_decl->_field_ident,jule::new_struct<_1e6420856_TypeSymbol>(new( std::nothrow ) _1e6420856_TypeSymbol(jule::Ptr<_1e38d4ec7_TypeDecl>(),_1e5054722_g)),jule::Str(),jule::Slice<jule::Any>())));
				}
				_iter_next_4730501584:;
				++it;
				_1e5054722_i++;
				goto _iter_begin_4730501584;
			}
			_iter_end_4730501584:;
		}
	}
	return _14913_aliases;
}



inline jule::Ptr<_1e5291035_SymbolTable> _1e5054722_find_file(jule::Slice<jule::Ptr<_1e5291035_SymbolTable>>& _18119_files,jule::Ptr<_1e3beedd5_File>& _18143_handler) {
	{
		auto &expr = _18119_files;
		auto it = expr.begin();
		_iter_begin_4730509888:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e5054722_fl = *it;
			{
				if (_1e5054722_fl->_field_file == _18143_handler) {
					return _1e5054722_fl;
				}
			}
			_iter_next_4730509888:;
			++it;
			goto _iter_begin_4730509888;
		}
		_iter_end_4730509888:;
	}
	return nullptr;
}



inline std::tuple<jule::Bool,jule::Bool> _1e5054722_conditional_has_ret(jule::Ptr<_1e4d6ee22_Conditional> _19028_c) {
	jule::Bool _19047_ok = jule::Bool();
	jule::Bool _19057_breaking = jule::Bool();
	jule::Bool _19113_breaked = false;
	{
		auto &expr = _19028_c->_field_elifs;
		auto it = expr.begin();
		_iter_begin_4730516048:;
		if (it != expr.end()) {
			jule::Ptr<_1e4d6ee22_If> _1e5054722_elif = *it;
			{
				if (_1e5054722_elif == nullptr) {
					_19047_ok = false;
					_19057_breaking = false;
					return std::make_tuple(_19047_ok,_19057_breaking);
				}
				std::tie(_19047_ok,std::ignore,_19057_breaking) = _1e5054722___has_ret(_1e5054722_elif->_field_scope);
				_19113_breaked=_19113_breaked || _19057_breaking;
				if ((!(_19047_ok))) {
					_19047_ok = false;
					_19057_breaking = _19113_breaked;
					return std::make_tuple(_19047_ok,_19057_breaking);
				}
			}
			_iter_next_4730516048:;
			++it;
			goto _iter_begin_4730516048;
		}
		_iter_end_4730516048:;
	}
	if (_19028_c->_field_default == nullptr) {
		_19047_ok = false;
		_19057_breaking = _19113_breaked;
		return std::make_tuple(_19047_ok,_19057_breaking);
	}
	std::tie(_19047_ok,std::ignore,_19057_breaking) = _1e5054722___has_ret(_19028_c->_field_default->_field_scope);
	_19113_breaked=_19113_breaked || _19057_breaking;
	_19057_breaking = _19113_breaked;
	return std::make_tuple(_19047_ok,_19057_breaking);
}



inline jule::Bool _1e5054722_match_has_ret(jule::Ptr<_1e4d6ee22_Match> _21222_m) {
	if (_21222_m->_field_default == nullptr) {
		return false;
	}
	jule::Bool _21713_ok = true;
	jule::Bool _21813_falled = false;
	jule::Bool _21913_breaked = false;
	{
		auto &expr = _21222_m->_field_cases;
		auto it = expr.begin();
		_iter_begin_4730528432:;
		if (it != expr.end()) {
			jule::Ptr<_1e4d6ee22_Case> _1e5054722_c = *it;
			{
				if (_1e5054722_c == nullptr) {
					return false;
				}
				std::tie(_21713_ok,_21813_falled,_21913_breaked) = _1e5054722___has_ret(_1e5054722_c->_field_scope);
				if (((!(_21713_ok)) && (!(_21813_falled))) || _21913_breaked) {
					return false;
				}
				{
					if (!(((!(_21713_ok))))) { goto _case_end_4730532768; }
					_case_begin_4730532768:;
					{
						if ((!(_21813_falled))) {
							return false;
						}
						goto _case_begin_4730532864;
					}
					goto _match_end_4730532464;
					_case_end_4730532768:;
					if (!((_21813_falled))) { goto _case_end_4730532864; }
					_case_begin_4730532864:;
					{
						if (_1e5054722_c->_field_next == nullptr) {
							return false;
						}
						goto _iter_next_4730528432;
					}
					goto _match_end_4730532464;
					_case_end_4730532864:;
					_match_end_4730532464:;
				}
				_21813_falled=false;
			}
			_iter_next_4730528432:;
			++it;
			goto _iter_begin_4730528432;
		}
		_iter_end_4730528432:;
	}
	return _1e5054722_has_ret(_21222_m->_field_default->_field_scope);
}



inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _1e5054722___has_ret(jule::Ptr<_1e4d6ee22_Scope> _24818_s) {
	jule::Bool _24831_ok = jule::Bool();
	jule::Bool _24841_falled = jule::Bool();
	jule::Bool _24855_breaked = jule::Bool();
	if (_24818_s == nullptr) {
		_24831_ok = false;
		_24841_falled = false;
		_24855_breaked = false;
		return std::make_tuple(_24831_ok,_24841_falled,_24855_breaked);
	}
	{
		auto &expr = _24818_s->_field_stmts;
		auto it = expr.begin();
		_iter_begin_4730537904:;
		if (it != expr.end()) {
			jule::Any _1e5054722_st = *it;
			{
				{
					auto &_match_expr{ _1e5054722_st };
					if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_FallSt>>())) { goto _case_end_4730540464; }
					_case_begin_4730540464:;
					{
						_24841_falled=true;
					}
					goto _match_end_4730541520;
					_case_end_4730540464:;
					if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_BreakSt>>())) { goto _case_end_4730541600; }
					_case_begin_4730541600:;
					{
						_24831_ok = false;
						_24841_falled = false;
						_24855_breaked = true;
						return std::make_tuple(_24831_ok,_24841_falled,_24855_breaked);
					}
					goto _match_end_4730541520;
					_case_end_4730541600:;
					if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_ContSt>>())) { goto _case_end_4730541888; }
					_case_begin_4730541888:;
					{
						_24831_ok = false;
						_24841_falled = false;
						_24855_breaked = true;
						return std::make_tuple(_24831_ok,_24841_falled,_24855_breaked);
					}
					goto _match_end_4730541520;
					_case_end_4730541888:;
					if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_InfIter>>())) { goto _case_end_4730541984; }
					_case_begin_4730541984:;
					{
						_24831_ok=_1e5054722_has_ret(_1e5054722_st.operator jule::Ptr<_1e4d6ee22_InfIter>()->_field_scope);
						if (_24831_ok) {
							_24831_ok = true;
							_24841_falled = false;
							_24855_breaked = false;
							return std::make_tuple(_24831_ok,_24841_falled,_24855_breaked);
						}
					}
					goto _match_end_4730541520;
					_case_end_4730541984:;
					if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_RetSt>>())) { goto _case_end_4730542080; }
					_case_begin_4730542080:;
					{
						_24831_ok = true;
						return std::make_tuple(_24831_ok,_24841_falled,_24855_breaked);
					}
					goto _match_end_4730541520;
					_case_end_4730542080:;
					if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_Scope>>())) { goto _case_end_4730542176; }
					_case_begin_4730542176:;
					{
						_24831_ok=_1e5054722_has_ret(_1e5054722_st.operator jule::Ptr<_1e4d6ee22_Scope>());
						if (_24831_ok) {
							_24831_ok = true;
							_24841_falled = false;
							_24855_breaked = false;
							return std::make_tuple(_24831_ok,_24841_falled,_24855_breaked);
						}
					}
					goto _match_end_4730541520;
					_case_end_4730542176:;
					if (!(_match_expr.type_is<jule::Ptr<_1e50ac4b1_Data>>())) { goto _case_end_4730542288; }
					_case_begin_4730542288:;
					{
						{
							auto &_match_expr{ _1e5054722_st.operator jule::Ptr<_1e50ac4b1_Data>()->_field_model };
							if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_BuiltinPanicCallExprModel>>())) { goto _case_end_4730556400; }
							_case_begin_4730556400:;
							{
								_24831_ok = true;
								return std::make_tuple(_24831_ok,_24841_falled,_24855_breaked);
							}
							goto _match_end_4730557920;
							_case_end_4730556400:;
							_match_end_4730557920:;
						}
					}
					goto _match_end_4730541520;
					_case_end_4730542288:;
					if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_Recover>>())) { goto _case_end_4730542400; }
					_case_begin_4730542400:;
					{
						jule::Bool _28618_ok;
						jule::Bool _28622__falled;
						jule::Bool _28631__breaked;
						std::tie(_28618_ok,_28622__falled,_28631__breaked) = _1e5054722___has_ret(_1e5054722_st.operator jule::Ptr<_1e4d6ee22_Recover>()->_field_scope);
						if (_28618_ok) {
							_24831_ok = true;
							_24841_falled = _28622__falled;
							_24855_breaked = _28631__breaked;
							return std::make_tuple(_24831_ok,_24841_falled,_24855_breaked);
						}
					}
					goto _match_end_4730541520;
					_case_end_4730542400:;
					if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_Conditional>>())) { goto _case_end_4730542512; }
					_case_begin_4730542512:;
					{
						std::tie(_24831_ok,_24855_breaked) = _1e5054722_conditional_has_ret(_1e5054722_st.operator jule::Ptr<_1e4d6ee22_Conditional>());
						if (_24831_ok) {
							_24831_ok = true;
							_24841_falled = false;
							_24855_breaked = false;
							return std::make_tuple(_24831_ok,_24841_falled,_24855_breaked);
						}
						if (_24855_breaked) {
							_24831_ok = false;
							_24841_falled = false;
							return std::make_tuple(_24831_ok,_24841_falled,_24855_breaked);
						}
					}
					goto _match_end_4730541520;
					_case_end_4730542512:;
					if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_Match>>())) { goto _case_end_4730542624; }
					_case_begin_4730542624:;
					{
						_24831_ok=_1e5054722_match_has_ret(_1e5054722_st.operator jule::Ptr<_1e4d6ee22_Match>());
						if (_24831_ok) {
							_24831_ok = true;
							_24841_falled = false;
							_24855_breaked = false;
							return std::make_tuple(_24831_ok,_24841_falled,_24855_breaked);
						}
					}
					goto _match_end_4730541520;
					_case_end_4730542624:;
					_match_end_4730541520:;
				}
			}
			_iter_next_4730537904:;
			++it;
			goto _iter_begin_4730537904;
		}
		_iter_end_4730537904:;
	}
	_24831_ok = false;
	return std::make_tuple(_24831_ok,_24841_falled,_24855_breaked);
}



inline jule::Bool _1e5054722_has_ret(jule::Ptr<_1e4d6ee22_Scope> _31216_s) {
	jule::Bool _31310_ok;
	std::tie(_31310_ok,std::ignore,std::ignore) = _1e5054722___has_ret(_31216_s);
	return _31310_ok;
}



inline void _1e5054722_push_suggestion(_1e24777a2_Log* _31731_log,jule::Str _31742_fmt,jule::Slice<jule::Any> _31755_args) {
	_31731_log->_field_suggestion=_1e24777a2_logf(_31742_fmt,_31755_args);
}



inline jule::Slice<jule::Ptr<_1e6420856_TypeKind>> _1e522c29b_get_fn_result_types(jule::Ptr<_1e4b15a20_FnIns>& _2629_f) {
	{
		if (!((_2629_f->_field_decl->_method_is_void() || (_2629_f->_field_result == nullptr)))) { goto _case_end_4730580544; }
		_case_begin_4730580544:;
		{
			return nullptr;
		}
		goto _match_end_4730579024;
		_case_end_4730580544:;
		if (!((_2629_f->_field_result->_method_tup() == nullptr))) { goto _case_end_4730580176; }
		_case_begin_4730580176:;
		{
			return jule::Slice<jule::Ptr<_1e6420856_TypeKind>>({_2629_f->_field_result});
		}
		goto _match_end_4730579024;
		_case_end_4730580176:;
		_case_begin_4730579200:;
		{
			return _2629_f->_field_result->_method_tup()->_field_types;
		}
		goto _match_end_4730579024;
		_case_end_4730579200:;
		_match_end_4730579024:;
	}
}



inline jule::Bool _1e522c29b_trait_has_reference_receiver(jule::Ptr<_1e4d61232_Trait>& _3934_t) {
	{
		auto &expr = _3934_t->_field_methods;
		auto it = expr.begin();
		_iter_begin_4730583488:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_Fn> &_1e522c29b_f = *it;
			{
				if (_1e522c29b_f->_field_statically) {
					goto _iter_next_4730583488;
				}
				jule::Ptr<_1e4b15a20_Param> _4613_p = _1e522c29b_f->_field_params[0LL];
				if (_4613_p->_method_is_ref() && _4613_p->_method_is_self()) {
					return true;
				}
			}
			_iter_next_4730583488:;
			++it;
			goto _iter_begin_4730583488;
		}
		_iter_end_4730583488:;
	}
	return false;
}



inline jule::Bool _1e522c29b_float_assignable(jule::Str _5421_kind,jule::Ptr<_1e50ac4b1_Data>& _5433_d) {
	jule::Str _559_value = _1e2495d64_fmt_float(static_cast<jule::F64>(_5433_d->_field_constant->_method_as_f64()),'g',-1LL,64LL);
	return _1c8ba1104_check_bit_float(_559_value,static_cast<jule::Int>(_1c8ba1104_bitsize_of(_5421_kind)));
}



inline jule::Bool _1e522c29b_sig_assignable(jule::Str _5919_kind,jule::Ptr<_1e50ac4b1_Data>& _5931_d) {
	jule::F64 _609_min = _1c8ba438d_min(_5919_kind);
	jule::F64 _619_max = _1c8ba438d_max(_5919_kind);
	{
		if (!((_5931_d->_field_constant->_method_is_f64()))) { goto _case_end_4730596112; }
		_case_begin_4730596112:;
		{
			jule::F64 _6513_x = static_cast<jule::F64>(_5931_d->_field_constant->_method_read_f64());
			jule::F64 _6614_i;
			jule::F64 _6617_frac;
			std::tie(_6614_i,_6617_frac) = _1e3725ad7_modf(_6513_x);
			if (_6617_frac != 0LL) {
				return false;
			}
			return (_6614_i >= _609_min) && (_6614_i <= _619_max);
		}
		goto _match_end_4730595808;
		_case_end_4730596112:;
		if (!((_5931_d->_field_constant->_method_is_u64()))) { goto _case_end_4730596208; }
		_case_begin_4730596208:;
		{
			jule::F64 _7313_x = static_cast<jule::F64>(_5931_d->_field_constant->_method_read_u64());
			if (_7313_x <= _619_max) {
				return true;
			}
		}
		goto _match_end_4730595808;
		_case_end_4730596208:;
		if (!((_5931_d->_field_constant->_method_is_i64()))) { goto _case_end_4730596304; }
		_case_begin_4730596304:;
		{
			jule::F64 _7913_x = static_cast<jule::F64>(_5931_d->_field_constant->_method_read_i64());
			return (_609_min <= _7913_x) && (_7913_x <= _619_max);
		}
		goto _match_end_4730595808;
		_case_end_4730596304:;
		_match_end_4730595808:;
	}
	return false;
}



inline jule::Bool _1e522c29b_unsig_assignable(jule::Str _8621_kind,jule::Ptr<_1e50ac4b1_Data>& _8633_d) {
	jule::F64 _879_max = _1c8ba438d_max(_8621_kind);
	if (_8633_d->_field_is_rune && (_8621_kind == jule::Str("u8", 2))) {
		return _1c8d06aa6_is_ascii(static_cast<jule::I32>(_8633_d->_field_constant->_method_read_i64()));
	}
	{
		if (!((_8633_d->_field_constant->_method_is_f64()))) { goto _case_end_4730610000; }
		_case_begin_4730610000:;
		{
			jule::F64 _9413_x = _8633_d->_field_constant->_method_read_f64();
			if (_9413_x < 0LL) {
				return false;
			}
			jule::F64 _9914_i;
			jule::F64 _9917_frac;
			std::tie(_9914_i,_9917_frac) = _1e3725ad7_modf(_9413_x);
			if (_9917_frac != 0LL) {
				return false;
			}
			return _9914_i <= _879_max;
		}
		goto _match_end_4730611744;
		_case_end_4730610000:;
		if (!((_8633_d->_field_constant->_method_is_u64()))) { goto _case_end_4730610096; }
		_case_begin_4730610096:;
		{
			jule::F64 _10613_x = static_cast<jule::F64>(_8633_d->_field_constant->_method_read_u64());
			if (_10613_x <= _879_max) {
				return true;
			}
		}
		goto _match_end_4730611744;
		_case_end_4730610096:;
		if (!((_8633_d->_field_constant->_method_is_i64()))) { goto _case_end_4730610192; }
		_case_begin_4730610192:;
		{
			jule::F64 _11213_x = static_cast<jule::F64>(_8633_d->_field_constant->_method_read_i64());
			return (0LL <= _11213_x) && (_11213_x <= _879_max);
		}
		goto _match_end_4730611744;
		_case_end_4730610192:;
		_match_end_4730611744:;
	}
	return false;
}



inline jule::Bool _1e522c29b_int_assignable(jule::Str _11919_kind,jule::Ptr<_1e50ac4b1_Data>& _11931_d) {
	{
		if (!((_1c8c8ad04_is_sig_int(_11919_kind)))) { goto _case_end_4730626144; }
		_case_begin_4730626144:;
		{
			return _1e522c29b_sig_assignable(_11919_kind,_11931_d);
		}
		goto _match_end_4730623920;
		_case_end_4730626144:;
		if (!((_1c8c8ad04_is_unsig_int(_11919_kind)))) { goto _case_end_4730626240; }
		_case_begin_4730626240:;
		{
			return _1e522c29b_unsig_assignable(_11919_kind,_11931_d);
		}
		goto _match_end_4730623920;
		_case_end_4730626240:;
		_case_begin_4730624064:;
		{
			return false;
		}
		goto _match_end_4730623920;
		_case_end_4730624064:;
		_match_end_4730623920:;
	}
}



inline jule::Any _1e50ac4b1_find_builtins_import(jule::Str _4625_ident,jule::Ptr<_1e4ee54e8_ImportInfo> _4637_imp) {
	return _1c8ac49ea_find_package_builtin_def(_4637_imp->_field_link_path,_4625_ident);
}



inline void _1e50ac4b1_make_struct_lit_alloc(jule::Ptr<_1e50ac4b1_Data>& _5031_d,jule::Ptr<_1e4d70a6b_StructLitExprModel>& _5046_lit) {
	_5031_d->_field_kind=jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1e6420856_Sptr>(new( std::nothrow ) _1e6420856_Sptr(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_5046_lit->_field_strct))))));
	_5031_d->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_AllocStructLitExprModel>(new( std::nothrow ) _1e4d70a6b_AllocStructLitExprModel(_5046_lit)));
}



inline jule::Any _1e50ac4b1_find_builtins_sema(jule::Str _6223_ident,jule::Ptr<_1e5054722_Sema> _6239_s) {
	{
		auto &expr = _6239_s->_field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4730635104:;
		if (it != expr.end()) {
			jule::Ptr<_1e4ee54e8_ImportInfo> _1e50ac4b1_imp = *it;
			{
				if (_1e50ac4b1_imp->_field_import_all || _1e50ac4b1_imp->_method_exist_ident(_6223_ident)) {
					jule::Any _6521_def = _1e50ac4b1_find_builtins_import(_6223_ident,_1e50ac4b1_imp);
					if (_6521_def != nullptr) {
						return _6521_def;
					}
				}
			}
			_iter_next_4730635104:;
			++it;
			goto _iter_begin_4730635104;
		}
		_iter_end_4730635104:;
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1e50ac4b1_is_ok_for_shifting(jule::Ptr<_1e50ac4b1_Data>& _7428_d) {
	jule::Ptr<_1e6420856_Prim> _759_prim = _7428_d->_field_kind->_method_prim();
	if ((_759_prim == nullptr) || (!(_1c8c8ad04_is_int(_759_prim->_method_to_str())))) {
		return false;
	}
	if ((!(_7428_d->_method_is_const()))) {
		return true;
	}
	{
		if (!((_7428_d->_field_constant->_method_is_i64()))) { goto _case_end_4730646720; }
		_case_begin_4730646720:;
		{
			return _7428_d->_field_constant->_method_read_i64() >= 0LL;
		}
		goto _match_end_4730644656;
		_case_end_4730646720:;
		if (!((_7428_d->_field_constant->_method_is_u64()))) { goto _case_end_4730646816; }
		_case_begin_4730646816:;
		{
			return true;
		}
		goto _match_end_4730644656;
		_case_end_4730646816:;
		_case_begin_4730644768:;
		{
			return false;
		}
		goto _match_end_4730644656;
		_case_end_4730644768:;
		_match_end_4730644656:;
	}
}



inline jule::Bool _1e50ac4b1_is_instanced_struct(jule::Ptr<_1e398ee72_StructIns> _9124_s) {
	return _9124_s->_field_decl->_field_generics.len() == _9124_s->_field_generics.len();
}



inline jule::Bool _1e50ac4b1_is_ptr_arithmetic_compatible_int(jule::Ptr<_1e50ac4b1_Data>& _9542_d) {
	if (_9542_d->_method_is_const()) {
		return _1e522c29b_int_assignable(jule::Str("int", 3),_9542_d);
	}
	_1e522c29b_TypeCompatibilityChecker _9913_tcc = _1e522c29b_TypeCompatibilityChecker(jule::Ptr<_1e5054722_Sema>(),jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("int", 3)))),_9542_d->_field_kind,_1e3bad8dd_Token());
	return _9913_tcc._method_check();
}



inline void _1e50ac4b1_normalize_bitsize(jule::Ptr<_1e50ac4b1_Data>& _10627_d) {
	if ((!(_10627_d->_method_is_const()))) {
		return;
	}
	jule::Str _11113_kind = jule::Str();
	{
		if (!((_10627_d->_field_constant->_method_is_i64()))) { goto _case_end_4730662480; }
		_case_begin_4730662480:;
		{
			jule::I64 _11413_x = _10627_d->_field_constant->_method_read_i64();
			_11113_kind=_1c8ba1104_int_from_bits(static_cast<jule::U64>(_1c8ba1104_bitsize_of_int(_11413_x)));
		}
		goto _match_end_4730661280;
		_case_end_4730662480:;
		if (!((_10627_d->_field_constant->_method_is_u64()))) { goto _case_end_4730662576; }
		_case_begin_4730662576:;
		{
			jule::U64 _11813_x = _10627_d->_field_constant->_method_read_u64();
			_11113_kind=_1c8ba1104_uint_from_bits(static_cast<jule::U64>(_1c8ba1104_bitsize_of_uint(_11813_x)));
		}
		goto _match_end_4730661280;
		_case_end_4730662576:;
		_case_begin_4730661520:;
		{
			return;
		}
		goto _match_end_4730661280;
		_case_end_4730661520:;
		_match_end_4730661280:;
	}
	if (_10627_d->_field_kind->_method_enm() != nullptr) {
		return;
	}
	_10627_d->_field_kind->_field_kind=_1e6420856_build_prim_type(_11113_kind);
}



inline void _1e50ac4b1_normalize_type(jule::Ptr<_1e50ac4b1_Data>& _13324_d) {
	{
		if (!((_1e522c29b_int_assignable(jule::Str("int", 3),_13324_d)))) { goto _case_end_4730671504; }
		_case_begin_4730671504:;
		{
			_13324_d->_field_kind->_field_kind=_1e6420856_build_prim_type(jule::Str("int", 3));
			_13324_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_13324_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4730671280;
		_case_end_4730671504:;
		if (!((_1e522c29b_int_assignable(jule::Str("uint", 4),_13324_d)))) { goto _case_end_4730671616; }
		_case_begin_4730671616:;
		{
			_13324_d->_field_kind->_field_kind=_1e6420856_build_prim_type(jule::Str("uint", 4));
			_13324_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_13324_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4730671280;
		_case_end_4730671616:;
		_match_end_4730671280:;
	}
}



inline void _1e50ac4b1_apply_cast_kind_model(jule::Ptr<_1e50ac4b1_Data>& _14531_d) {
	_14531_d->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_CastingExprModel>(new( std::nothrow ) _1e4d70a6b_CastingExprModel(_14531_d->_field_model,_14531_d->_field_cast_kind,_14531_d->_field_kind)));
}



inline void _1e50ac4b1_apply_cast_kind(jule::Ptr<_1e50ac4b1_Data>& _15325_d) {
	if (_15325_d->_field_cast_kind == nullptr) {
		return;
	}
	_1e50ac4b1_apply_cast_kind_model(_15325_d);
	_15325_d->_field_kind=_15325_d->_field_cast_kind;
	_15325_d->_field_cast_kind=nullptr;
}



inline jule::Ptr<_1e50ac4b1_Data> _1e50ac4b1_build_void_data(void) {
	return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("void", 4)))),jule::Ptr<_1e6420856_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ptr<_1c8b9b83b_Const>()));
}



inline jule::Str _1e50ac4b1_kind_by_bitsize(jule::Any _17420_expr) {
	{
		auto &_match_expr{ _17420_expr };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4730688128; }
		_case_begin_4730688128:;
		{
			jule::F64 _17713_x = _17420_expr.operator jule::F64();
			return _1c8ba1104_float_from_bits(static_cast<jule::U64>(_1c8ba1104_bitsize_of_float(_17713_x)));
		}
		goto _match_end_4730686752;
		_case_end_4730688128:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4730688320; }
		_case_begin_4730688320:;
		{
			jule::I64 _18113_x = _17420_expr.operator jule::I64();
			return _1c8ba1104_int_from_bits(static_cast<jule::U64>(_1c8ba1104_bitsize_of_int(_18113_x)));
		}
		goto _match_end_4730686752;
		_case_end_4730688320:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4730688416; }
		_case_begin_4730688416:;
		{
			jule::U64 _18513_x = _17420_expr.operator jule::U64();
			return _1c8ba1104_uint_from_bits(static_cast<jule::U64>(_1c8ba1104_bitsize_of_uint(_18513_x)));
		}
		goto _match_end_4730686752;
		_case_end_4730688416:;
		_case_begin_4730682912:;
		{
			return jule::Str();
		}
		goto _match_end_4730686752;
		_case_end_4730682912:;
		_match_end_4730686752:;
	}
}



inline jule::Str _1e50ac4b1_check_data_for_integer_indexing(jule::Ptr<_1e50ac4b1_Data>& _19341_d) {
	jule::Str _19353_err_fmt = jule::Str();
	if (_19341_d == nullptr) {
		_19353_err_fmt = jule::Str();
		return _19353_err_fmt;
	}
	{
		if (!((_19341_d->_field_kind->_method_prim() == nullptr))) { goto _case_end_4730696144; }
		_case_begin_4730696144:;
		{
			_19353_err_fmt = jule::Str("type \"@\" is invalid for indexing", 32);
			return _19353_err_fmt;
		}
		goto _match_end_4730696704;
		_case_end_4730696144:;
		if (!(((!(_1c8c8ad04_is_int(_19341_d->_field_kind->_method_prim()->_method_to_str())))))) { goto _case_end_4730696240; }
		_case_begin_4730696240:;
		{
			_19353_err_fmt = jule::Str("type \"@\" is invalid for indexing", 32);
			return _19353_err_fmt;
		}
		goto _match_end_4730696704;
		_case_end_4730696240:;
		if (!((_19341_d->_method_is_const()))) { goto _case_end_4730695216; }
		_case_begin_4730695216:;
		{
			if (_19341_d->_field_constant->_method_as_f64() < 0LL) {
				_19353_err_fmt = jule::Str("overflow the limit of data-type", 31);
				return _19353_err_fmt;
			}
		}
		goto _match_end_4730696704;
		_case_end_4730695216:;
		if (!((_19341_d->_field_kind->_method_prim() == nullptr) || (_19341_d->_method_is_const()) || (_1c8ba1104_real_kind_of(_19341_d->_field_kind->_method_prim()->_method_to_str()) != _1c8ba1104_real_kind_of(jule::Str("int", 3))))) { goto _case_end_4730695312; }
		_case_begin_4730695312:;
		{
			_19341_d->_field_cast_kind=jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("int", 3))));
			_1e50ac4b1_apply_cast_kind(_19341_d);
		}
		goto _match_end_4730696704;
		_case_end_4730695312:;
		_match_end_4730696704:;
	}
	_19353_err_fmt = jule::Str();
	return _19353_err_fmt;
}



inline jule::Bool _1e6420856_can_get_ptr(jule::Ptr<_1e50ac4b1_Data>& _55121_d) {
	if ((!(_55121_d->_field_lvalue)) || _55121_d->_method_is_const()) {
		return false;
	}
	{
		if (!(((_55121_d->_field_kind->_method_fnc() != nullptr) || (_55121_d->_field_kind->_method_enm() != nullptr)))) { goto _case_end_4730709232; }
		_case_begin_4730709232:;
		{
			return false;
		}
		goto _match_end_4730707632;
		_case_end_4730709232:;
		_case_begin_4730707328:;
		{
			return true;
		}
		goto _match_end_4730707632;
		_case_end_4730707328:;
		_match_end_4730707632:;
	}
}



inline jule::Bool _1e6420856_is_valid_for_sptr_type(jule::Ptr<_1e6420856_TypeKind>& _56632_t) {
	jule::Ptr<_1e398ee72_StructIns> _56713_s = _56632_t->_method_strct();
	if (((_56713_s != nullptr) && (_56713_s->_field_decl != nullptr)) && _56713_s->_field_decl->_field_cpp_linked) {
		return false;
	}
	return true;
}



inline jule::Bool _1e6420856_is_valid_for_ref(jule::Ptr<_1e6420856_TypeKind>& _57526_t) {
	return _57526_t->_method_fnc() == nullptr;
}



inline jule::Bool _1e6420856_is_builtin_str_convertable(jule::Ptr<_1e6420856_TypeKind>& _57836_t) {
	return ((!(_57836_t->_method_void())) && (_57836_t->_method_fnc() == nullptr)) && (_57836_t->_method_tup() == nullptr);
}



inline jule::Str _1e6420856_build_link_path_by_tokens(jule::Slice<_1e3bad8dd_Token>& _58231_tokens) {
	jule::Str _58313_s = _58231_tokens[0LL]._field_kind;
	{
		auto expr = _58231_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_4730721504:;
		if (it != expr.end()) {
			_1e3bad8dd_Token &_1e6420856_token = *it;
			{
				_58313_s+=jule::Str("::", 2);
				_58313_s+=_1e6420856_token._field_kind;
			}
			_iter_next_4730721504:;
			++it;
			goto _iter_begin_4730721504;
		}
		_iter_end_4730721504:;
	}
	return _58313_s;
}



inline jule::Ptr<_1e6420856_Prim> _1e6420856_build_prim_type(jule::Str _59120_kind) {
	return jule::new_struct_ptr<_1e6420856_Prim>(new( std::nothrow ) _1e6420856_Prim(_59120_kind));
}



inline jule::Ptr<_1e398ee72_Struct> _1e6420856_get_struct_from_kind(jule::Ptr<_1e6420856_TypeKind> _59729_k) {
	{
		if (!((_59729_k == nullptr))) { goto _case_end_4730726624; }
		_case_begin_4730726624:;
		{
			return nullptr;
		}
		goto _match_end_4730724656;
		_case_end_4730726624:;
		if (!((_59729_k->_method_strct() != nullptr))) { goto _case_end_4730726720; }
		_case_begin_4730726720:;
		{
			return _59729_k->_method_strct()->_field_decl;
		}
		goto _match_end_4730724656;
		_case_end_4730726720:;
		if (!((_59729_k->_method_sptr() != nullptr))) { goto _case_end_4730726064; }
		_case_begin_4730726064:;
		{
			return _1e6420856_get_struct_from_kind(_59729_k->_method_sptr()->_field_elem);
		}
		goto _match_end_4730724656;
		_case_end_4730726064:;
		if (!((_59729_k->_method_slc() != nullptr))) { goto _case_end_4730726160; }
		_case_begin_4730726160:;
		{
			return _1e6420856_get_struct_from_kind(_59729_k->_method_slc()->_field_elem);
		}
		goto _match_end_4730724656;
		_case_end_4730726160:;
		if (!((_59729_k->_method_arr() != nullptr))) { goto _case_end_4730726256; }
		_case_begin_4730726256:;
		{
			return _1e6420856_get_struct_from_kind(_59729_k->_method_arr()->_field_elem);
		}
		goto _match_end_4730724656;
		_case_end_4730726256:;
		if (!((_59729_k->_method_ptr() != nullptr))) { goto _case_end_4730725376; }
		_case_begin_4730725376:;
		{
			return nullptr;
		}
		goto _match_end_4730724656;
		_case_end_4730725376:;
		_case_begin_4730725088:;
		{
			return nullptr;
		}
		goto _match_end_4730724656;
		_case_end_4730725088:;
		_match_end_4730724656:;
	}
}



inline jule::Bool _1e6420856_is_prim(jule::Str _62612_kind) {
	return (((((((((((((((_62612_kind == jule::Str("i8", 2)) || (_62612_kind == jule::Str("i16", 3))) || (_62612_kind == jule::Str("i32", 3))) || (_62612_kind == jule::Str("i64", 3))) || (_62612_kind == jule::Str("u8", 2))) || (_62612_kind == jule::Str("u16", 3))) || (_62612_kind == jule::Str("u32", 3))) || (_62612_kind == jule::Str("u64", 3))) || (_62612_kind == jule::Str("f32", 3))) || (_62612_kind == jule::Str("f64", 3))) || (_62612_kind == jule::Str("int", 3))) || (_62612_kind == jule::Str("uint", 4))) || (_62612_kind == jule::Str("uintptr", 7))) || (_62612_kind == jule::Str("bool", 4))) || (_62612_kind == jule::Str("str", 3))) || (_62612_kind == jule::Str("any", 3));
}



inline std::tuple<jule::Ptr<_1e5291035_SymbolTable>,jule::Slice<_1e24777a2_Log>> _1c8aaab68_build_symbols(jule::Ptr<_1e38d45c0_Ast>& _1523_ast,jule::Trait<_1e4ee54e8_Importer>& _1539_importer,jule::Ptr<_1e4cc167b_SymbolBuilder> _1563_owner) {
	jule::Ptr<_1e4cc167b_SymbolBuilder> _1613_sb = jule::new_struct_ptr<_1e4cc167b_SymbolBuilder>(new( std::nothrow ) _1e4cc167b_SymbolBuilder(_1563_owner,_1539_importer,jule::Slice<_1e24777a2_Log>(),_1523_ast,jule::Ptr<_1e5291035_SymbolTable>()));
	_1613_sb->_method_build();
	if (_1613_sb->_field_errors.len() == 0LL) {
		return std::make_tuple(_1613_sb->_field_table,nullptr);
	}
	return std::make_tuple(nullptr,_1613_sb->_field_errors);
}



inline std::tuple<jule::Ptr<_1e4ee54e8_Package>,jule::Slice<_1e24777a2_Log>> _1c8aaab68___analyze_package(jule::Slice<jule::Ptr<_1e38d45c0_Ast>>& _2927_files,jule::Trait<_1e4ee54e8_Importer>& _2947_importer,jule::Int& _2968_flags) {
	jule::Slice<jule::Ptr<_1e5291035_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_1e5291035_SymbolTable>>::alloc(0LL,static_cast<jule::I64>(_2927_files.len()));
	{
		auto &expr = _2927_files;
		auto it = expr.begin();
		_iter_begin_4730752592:;
		if (it != expr.end()) {
			jule::Ptr<_1e38d45c0_Ast> _1c8aaab68_f = *it;
			{
				jule::Ptr<_1e5291035_SymbolTable> _3318_table;
				jule::Slice<_1e24777a2_Log> _3329_errors;
				std::tie(_3318_table,_3329_errors) = _1c8aaab68_build_symbols(_1c8aaab68_f,_2947_importer,nullptr);
				if (_3329_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_3329_errors);
				}
				_3113_tables.push(_3318_table);
			}
			_iter_next_4730752592:;
			++it;
			goto _iter_begin_4730752592;
		}
		_iter_end_4730752592:;
	}
	jule::Ptr<_1e5054722_Sema> _4013_sema = jule::new_struct_ptr<_1e5054722_Sema>(new( std::nothrow ) _1e5054722_Sema(jule::Slice<_1e24777a2_Log>(),jule::Slice<jule::Ptr<_1e5291035_SymbolTable>>(),jule::Ptr<_1e5291035_SymbolTable>(),_2968_flags));
	_4013_sema->_method_check(_3113_tables);
	if (_4013_sema->_field_errors.len() > 0LL) {
		return std::make_tuple(nullptr,_4013_sema->_field_errors);
	}
	jule::Ptr<_1e4ee54e8_Package> _4813_pkg = jule::new_struct<_1e4ee54e8_Package>(new( std::nothrow ) _1e4ee54e8_Package(_4013_sema->_field_files));
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_1e4ee54e8_Package>,jule::Slice<_1e24777a2_Log>> _1c8aaab68_analyze_package(jule::Slice<jule::Ptr<_1e38d45c0_Ast>> _7228_files,jule::Trait<_1e4ee54e8_Importer> _7247_importer,jule::Int _7267_flags) {
	if (_7228_files.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Ptr<_1e4ee54e8_Package> _7714_package;
	jule::Slice<_1e24777a2_Log> _7727_logs;
	std::tie(_7714_package,_7727_logs) = _1c8aaab68___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline void _1c8ac49ea_init(void) {
	_1c8ac49ea_BUILTIN_FN_OUT->_field_caller=jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_out);
	_1c8ac49ea_BUILTIN_FN_OUTLN->_field_caller=jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_outln);
	_1c8ac49ea_BUILTIN_FN_NEW->_field_caller=jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_new);
	_1c8ac49ea_BUILTIN_FN_PANIC->_field_caller=jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_panic);
	_1c8ac49ea_BUILTIN_FN_MAKE->_field_caller=jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_make);
	_1c8ac49ea_BUILTIN_FN_APPEND->_field_caller=jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_append);
	_1c8ac49ea_BUILTIN_FN_COPY->_field_caller=jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_copy);
	_1c8ac49ea_BUILTIN_FN_RECOVER->_field_caller=jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_recover);
	_1c8ac49ea_BUILTIN_FN_CLONE->_field_caller=jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_clone);
	_1c8ac49ea_BUILTIN_FN_STD_MEM_SIZE_OF->_field_caller=jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_std_mem_size_of);
	_1c8ac49ea_BUILTIN_FN_STD_MEM_ALIGN_OF->_field_caller=jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_std_mem_align_of);
	_1c8ac49ea_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR->_field_caller=jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_std_jule_integrated_to_str);
	jule::Ptr<_1e4b15a20_Fn> _10513_error_method = _1c8ac49ea_BUILTIN_TRAIT_ERROR->_method_find_method(jule::Str("error", 5));
	jule::Ptr<_1e4b15a20_FnIns> _10613_error_method_ins = _10513_error_method->_method_instance();
	_10613_error_method_ins->_field_result=jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("str", 3))));
	_10613_error_method_ins->_field_caller=jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_common);
	_10513_error_method->_method_append_instance(_10613_error_method_ins);
	jule::Ptr<_1e4b15a20_Fn> _11113_dispose_method = _1c8ac49ea_BUILTIN_TRAIT_DISPOSE->_method_find_method(jule::Str("dispose", 7));
	jule::Ptr<_1e4b15a20_FnIns> _11213_dispose_method_ins = _11113_dispose_method->_method_instance();
	_11213_dispose_method_ins->_field_caller=jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_common);
	_11113_dispose_method->_method_append_instance(_11213_dispose_method_ins);
}



inline jule::Ptr<_1e4b15a20_FnIns> _1c8ac49ea_find_builtin_fn(jule::Str _11720_ident) {
	{
		auto &_match_expr{ _11720_ident };
		if (!((jule::Str("out", 3)) == _match_expr)) { goto _case_end_4730799936; }
		_case_begin_4730799936:;
		{
			return _1c8ac49ea_BUILTIN_FN_OUT;
		}
		goto _match_end_4730797936;
		_case_end_4730799936:;
		if (!((jule::Str("outln", 5)) == _match_expr)) { goto _case_end_4730800032; }
		_case_begin_4730800032:;
		{
			return _1c8ac49ea_BUILTIN_FN_OUTLN;
		}
		goto _match_end_4730797936;
		_case_end_4730800032:;
		if (!((jule::Str("new", 3)) == _match_expr)) { goto _case_end_4730799376; }
		_case_begin_4730799376:;
		{
			return _1c8ac49ea_BUILTIN_FN_NEW;
		}
		goto _match_end_4730797936;
		_case_end_4730799376:;
		if (!((jule::Str("panic", 5)) == _match_expr)) { goto _case_end_4730799472; }
		_case_begin_4730799472:;
		{
			return _1c8ac49ea_BUILTIN_FN_PANIC;
		}
		goto _match_end_4730797936;
		_case_end_4730799472:;
		if (!((jule::Str("make", 4)) == _match_expr)) { goto _case_end_4730799568; }
		_case_begin_4730799568:;
		{
			return _1c8ac49ea_BUILTIN_FN_MAKE;
		}
		goto _match_end_4730797936;
		_case_end_4730799568:;
		if (!((jule::Str("append", 6)) == _match_expr)) { goto _case_end_4730798736; }
		_case_begin_4730798736:;
		{
			return _1c8ac49ea_BUILTIN_FN_APPEND;
		}
		goto _match_end_4730797936;
		_case_end_4730798736:;
		if (!((jule::Str("copy", 4)) == _match_expr)) { goto _case_end_4730798832; }
		_case_begin_4730798832:;
		{
			return _1c8ac49ea_BUILTIN_FN_COPY;
		}
		goto _match_end_4730797936;
		_case_end_4730798832:;
		if (!((jule::Str("recover", 7)) == _match_expr)) { goto _case_end_4730798928; }
		_case_begin_4730798928:;
		{
			return _1c8ac49ea_BUILTIN_FN_RECOVER;
		}
		goto _match_end_4730797936;
		_case_end_4730798928:;
		if (!((jule::Str("clone", 5)) == _match_expr)) { goto _case_end_4730799024; }
		_case_begin_4730799024:;
		{
			return _1c8ac49ea_BUILTIN_FN_CLONE;
		}
		goto _match_end_4730797936;
		_case_end_4730799024:;
		_case_begin_4730797840:;
		{
			return nullptr;
		}
		goto _match_end_4730797936;
		_case_end_4730797840:;
		_match_end_4730797936:;
	}
}



inline jule::Ptr<_1e6420856_TypeAlias> _1c8ac49ea_find_builtin_type_alias(jule::Str _13228_ident) {
	{
		auto &_match_expr{ _13228_ident };
		if (!((jule::Str("byte", 4)) == _match_expr)) { goto _case_end_4730805952; }
		_case_begin_4730805952:;
		{
			return _1c8ac49ea_BUILTIN_TYPE_ALIAS_BYTE;
		}
		goto _match_end_4730803168;
		_case_end_4730805952:;
		if (!((jule::Str("rune", 4)) == _match_expr)) { goto _case_end_4730806096; }
		_case_begin_4730806096:;
		{
			return _1c8ac49ea_BUILTIN_TYPE_ALIAS_RUNE;
		}
		goto _match_end_4730803168;
		_case_end_4730806096:;
		_case_begin_4730804016:;
		{
			return nullptr;
		}
		goto _match_end_4730803168;
		_case_end_4730804016:;
		_match_end_4730803168:;
	}
}



inline jule::Ptr<_1e4d61232_Trait> _1c8ac49ea_find_builtin_trait(jule::Str _14023_ident) {
	{
		auto &_match_expr{ _14023_ident };
		if (!((jule::Str("Error", 5)) == _match_expr)) { goto _case_end_4730806640; }
		_case_begin_4730806640:;
		{
			return _1c8ac49ea_BUILTIN_TRAIT_ERROR;
		}
		goto _match_end_4730807472;
		_case_end_4730806640:;
		if (!((jule::Str("Dispose", 7)) == _match_expr)) { goto _case_end_4730808688; }
		_case_begin_4730808688:;
		{
			return _1c8ac49ea_BUILTIN_TRAIT_DISPOSE;
		}
		goto _match_end_4730807472;
		_case_end_4730808688:;
		_case_begin_4730805360:;
		{
			return nullptr;
		}
		goto _match_end_4730807472;
		_case_end_4730805360:;
		_match_end_4730807472:;
	}
}



inline jule::Any _1c8ac49ea_find_builtin_def(jule::Str _14821_ident) {
	jule::Ptr<_1e4b15a20_FnIns> _14913_f = _1c8ac49ea_find_builtin_fn(_14821_ident);
	if (_14913_f != nullptr) {
		return jule::Any(_14913_f);
	}
	jule::Ptr<_1e6420856_TypeAlias> _15413_ta = _1c8ac49ea_find_builtin_type_alias(_14821_ident);
	if (_15413_ta != nullptr) {
		return jule::Any(_15413_ta);
	}
	jule::Ptr<_1e4d61232_Trait> _15913_t = _1c8ac49ea_find_builtin_trait(_14821_ident);
	if (_15913_t != nullptr) {
		return jule::Any(_15913_t);
	}
	return jule::Any(nullptr);
}



inline jule::Any _1c8ac49ea_find_builtin_def_std_mem(jule::Str _16729_ident) {
	{
		auto &_match_expr{ _16729_ident };
		if (!((jule::Str("size_of", 7)) == _match_expr)) { goto _case_end_4730817408; }
		_case_begin_4730817408:;
		{
			return jule::Any(_1c8ac49ea_BUILTIN_FN_STD_MEM_SIZE_OF);
		}
		goto _match_end_4730815216;
		_case_end_4730817408:;
		if (!((jule::Str("align_of", 8)) == _match_expr)) { goto _case_end_4730817040; }
		_case_begin_4730817040:;
		{
			return jule::Any(_1c8ac49ea_BUILTIN_FN_STD_MEM_ALIGN_OF);
		}
		goto _match_end_4730815216;
		_case_end_4730817040:;
		_case_begin_4730814656:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4730815216;
		_case_end_4730814656:;
		_match_end_4730815216:;
	}
}



inline jule::Any _1c8ac49ea_find_builtin_def_std_jule_integrated(jule::Str _17541_ident) {
	{
		auto &_match_expr{ _17541_ident };
		if (!((jule::Str("to_str", 6)) == _match_expr)) { goto _case_end_4730820400; }
		_case_begin_4730820400:;
		{
			return jule::Any(_1c8ac49ea_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR);
		}
		goto _match_end_4730819488;
		_case_end_4730820400:;
		_case_begin_4730815920:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4730819488;
		_case_end_4730815920:;
		_match_end_4730819488:;
	}
}



inline jule::Any _1c8ac49ea_find_package_builtin_def(jule::Str _18229_link_path,jule::Str _18245_ident) {
	{
		auto &_match_expr{ _18229_link_path };
		if (!((jule::Str("std::mem", 8)) == _match_expr)) { goto _case_end_4730823312; }
		_case_begin_4730823312:;
		{
			return _1c8ac49ea_find_builtin_def_std_mem(_18245_ident);
		}
		goto _match_end_4730821792;
		_case_end_4730823312:;
		if (!((jule::Str("std::jule::integrated", 21)) == _match_expr)) { goto _case_end_4730822944; }
		_case_begin_4730822944:;
		{
			return _1c8ac49ea_find_builtin_def_std_jule_integrated(_18245_ident);
		}
		goto _match_end_4730821792;
		_case_end_4730822944:;
		_case_begin_4730821648:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4730821792;
		_case_end_4730821648:;
		_match_end_4730821792:;
	}
}



inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_common_plain(jule::Ptr<_1e50ac4b1_Eval>& _19037_e,jule::Ptr<_1e38d4ec7_FnCallExpr>& _19052_fc,jule::Ptr<_1e50ac4b1_Data>& _19074_d) {
	jule::Ptr<_1e4b15a20_FnIns> _19113_f = _19074_d->_field_kind->_method_fnc();
	_1e522c29b_FnCallArgChecker _19313_fcac = _1e522c29b_FnCallArgChecker(_19037_e,_19052_fc->_field_args,_19052_fc->_field_token,_19113_f,false,jule::Slice<jule::Any>());
	_19313_fcac._method_check();
	jule::Ptr<_1e4d70a6b_FnCallExprModel> _20213_model = jule::new_struct<_1e4d70a6b_FnCallExprModel>(new( std::nothrow ) _1e4d70a6b_FnCallExprModel(_19113_f,_19052_fc->_field_concurrent,_19074_d->_field_model,_19313_fcac._field_arg_models));
	if (_19113_f->_field_result == nullptr) {
		_19074_d=_1e50ac4b1_build_void_data();
	} else {
		_19074_d=jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(_19113_f->_field_result,jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
	}
	_19074_d->_field_model=jule::Any(_20213_model);
	return _19074_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_common(jule::Ptr<_1e50ac4b1_Eval>& _22131_e,jule::Ptr<_1e38d4ec7_FnCallExpr>& _22146_fc,jule::Ptr<_1e50ac4b1_Data>& _22168_d) {
	if (_22146_fc->_field_generics.len() > 0LL) {
		_22131_e->_method_push_err(_22146_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	return _1c8ac49ea_builtin_caller_common_plain(_22131_e,_22146_fc,_22168_d);
}



inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_common_mut(jule::Ptr<_1e50ac4b1_Eval>& _22935_e,jule::Ptr<_1e38d4ec7_FnCallExpr>& _22950_fc,jule::Ptr<_1e50ac4b1_Data>& _22972_d) {
	if ((!(_22972_d->_field_mutable))) {
		_22935_e->_method_push_err(_22950_fc->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>());
	}
	return _1c8ac49ea_builtin_caller_common(_22935_e,_22950_fc,_22972_d);
}



inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_out(jule::Ptr<_1e50ac4b1_Eval>& _23628_e,jule::Ptr<_1e38d4ec7_FnCallExpr>& _23643_fc,jule::Ptr<_1e50ac4b1_Data>& ) {
	if (_23643_fc->_field_generics.len() > 0LL) {
		_23628_e->_method_push_err(_23643_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_23643_fc->_field_args.len() < 1LL) {
		_23628_e->_method_push_err(_23643_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	}
	if (_23643_fc->_field_args.len() > 1LL) {
		_23628_e->_method_push_err(_23643_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1e50ac4b1_Data> _24813_expr = _23628_e->_method_eval_expr(_23643_fc->_field_args[0LL]);
	if (_24813_expr == nullptr) {
		return nullptr;
	}
	if ((!(_1e6420856_is_builtin_str_convertable(_24813_expr->_field_kind)))) {
		_23628_e->_method_push_err(_23643_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1e50ac4b1_Data> _25813_d = _1e50ac4b1_build_void_data();
	_25813_d->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_BuiltinOutCallExprModel>(new( std::nothrow ) _1e4d70a6b_BuiltinOutCallExprModel(_24813_expr->_field_model)));
	return _25813_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_outln(jule::Ptr<_1e50ac4b1_Eval>& _26330_e,jule::Ptr<_1e38d4ec7_FnCallExpr>& _26345_fc,jule::Ptr<_1e50ac4b1_Data>& _26367_d) {
	_26367_d=_1c8ac49ea_builtin_caller_out(_26330_e,_26345_fc,_26367_d);
	if (_26367_d == nullptr) {
		return nullptr;
	}
	_26367_d->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_BuiltinOutlnCallExprModel>(new( std::nothrow ) _1e4d70a6b_BuiltinOutlnCallExprModel(_26367_d->_field_model.operator jule::Ptr<_1e4d70a6b_BuiltinOutCallExprModel>()->_field_expr)));
	return _26367_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_new(jule::Ptr<_1e50ac4b1_Eval>& _27528_e,jule::Ptr<_1e38d4ec7_FnCallExpr>& _27543_fc,jule::Ptr<_1e50ac4b1_Data>& _27565_d) {
	if (_27543_fc->_field_generics.len() > 0LL) {
		_27528_e->_method_push_err(_27543_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_27543_fc->_field_args.len() < 1LL) {
		_27528_e->_method_push_err(_27543_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	}
	if (_27543_fc->_field_args.len() > 2LL) {
		_27528_e->_method_push_err(_27543_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1e50ac4b1_Data> _28713_t = _27528_e->_method_eval_expr_kind(_27543_fc->_field_args[0LL]->_field_kind);
	if (_28713_t == nullptr) {
		return nullptr;
	}
	if ((!(_28713_t->_field_decl))) {
		_27528_e->_method_push_err(_27543_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((!(_1e6420856_is_valid_for_sptr_type(_28713_t->_field_kind)))) {
		jule::Ptr<_1e398ee72_StructIns> _29817_s = _28713_t->_field_kind->_method_strct();
		if (((_29817_s != nullptr) && (_29817_s->_field_decl != nullptr)) && _29817_s->_field_decl->_field_cpp_linked) {
			_27528_e->_method_push_err(_27543_fc->_field_args[0LL]->_field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		}
		return nullptr;
	}
	_27565_d->_field_kind=jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1e6420856_Sptr>(new( std::nothrow ) _1e6420856_Sptr(_28713_t->_field_kind->_method_clone()))));
	if (_27543_fc->_field_args.len() == 2LL) {
		jule::Ptr<_1e6420856_TypeKind> _30817_old = _27528_e->_field_prefix;
		_27528_e->_field_prefix=_28713_t->_field_kind;
		jule::Ptr<_1e50ac4b1_Data> _31117_init = _27528_e->_method_eval_expr(_27543_fc->_field_args[1LL]);
		_27528_e->_field_prefix=_30817_old;
		if (_31117_init != nullptr) {
			_1e3bad8dd_Token _31621_token = _27543_fc->_field_args[1LL]->_field_token;
			
			_27528_e->_field_s->_method_check_validity_for_init_expr((!(_27528_e->_field_immutable)),false,_28713_t->_field_kind,_31117_init,_31621_token);
			_27528_e->_field_s->_method_check_assign_type(false,_28713_t->_field_kind,_31117_init,_31621_token);
			_27565_d->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_BuiltinNewCallExprModel>(new( std::nothrow ) _1e4d70a6b_BuiltinNewCallExprModel(_28713_t->_field_kind,_31117_init->_field_model)));
		}
	} else {
		_27565_d->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_BuiltinNewCallExprModel>(new( std::nothrow ) _1e4d70a6b_BuiltinNewCallExprModel(_28713_t->_field_kind,jule::Any())));
	}
	return _27565_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_panic(jule::Ptr<_1e50ac4b1_Eval>& _33430_e,jule::Ptr<_1e38d4ec7_FnCallExpr>& _33445_fc,jule::Ptr<_1e50ac4b1_Data>& ) {
	if (_33445_fc->_field_generics.len() > 0LL) {
		_33430_e->_method_push_err(_33445_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_33445_fc->_field_args.len() < 1LL) {
		_33430_e->_method_push_err(_33445_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("error", 5))}));
		return nullptr;
	}
	if (_33445_fc->_field_args.len() > 1LL) {
		_33430_e->_method_push_err(_33445_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1e50ac4b1_Data> _34613_expr = _33430_e->_method_eval_expr(_33445_fc->_field_args[0LL]);
	if (_34613_expr == nullptr) {
		return nullptr;
	}
	if (_34613_expr->_field_kind->_method_strct() != nullptr) {
		jule::Ptr<_1e398ee72_StructIns> _35213_s = _34613_expr->_field_kind->_method_strct();
		if (_35213_s->_field_decl->_method_is_implements(_1c8ac49ea_BUILTIN_TRAIT_ERROR)) {
			_34613_expr->_field_cast_kind=jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1c8ac49ea_BUILTIN_TRAIT_ERROR));
			_1e50ac4b1_apply_cast_kind(_34613_expr);
		}
	}
	jule::Ptr<_1e50ac4b1_Data> _36113_d = _1e50ac4b1_build_void_data();
	_36113_d->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_BuiltinPanicCallExprModel>(new( std::nothrow ) _1e4d70a6b_BuiltinPanicCallExprModel(_34613_expr->_field_model)));
	return _36113_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_make(jule::Ptr<_1e50ac4b1_Eval>& _36629_e,jule::Ptr<_1e38d4ec7_FnCallExpr>& _36644_fc,jule::Ptr<_1e50ac4b1_Data>& _36666_d) {
	if (_36644_fc->_field_generics.len() > 0LL) {
		_36629_e->_method_push_err(_36644_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_36644_fc->_field_args.len() < 2LL) {
		if (_36644_fc->_field_args.len() == 1LL) {
			_36629_e->_method_push_err(_36644_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		}
		_36629_e->_method_push_err(_36644_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	}
	if (_36644_fc->_field_args.len() > 3LL) {
		_36629_e->_method_push_err(_36644_fc->_field_args[3LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1e50ac4b1_Data> _38213_t = _36629_e->_method_eval_expr_kind(_36644_fc->_field_args[0LL]->_field_kind);
	if (_38213_t == nullptr) {
		return nullptr;
	}
	if ((!(_38213_t->_field_decl)) || (_38213_t->_field_kind->_method_slc() == nullptr)) {
		_36629_e->_method_push_err(_36644_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>());
		return nullptr;
	}
	_36666_d->_field_kind=_38213_t->_field_kind;
	jule::Ptr<_1e50ac4b1_Data> _39413_len = _36629_e->_field_s->_method_evalp(_36629_e->_field_lookup,_38213_t->_field_kind)->_method_eval_expr(_36644_fc->_field_args[1LL]);
	if (_39413_len == nullptr) {
		return _36666_d;
	}
	_36629_e->_method_check_integer_indexing_by_data(_39413_len,_36644_fc->_field_args[1LL]->_field_token);
	if (_36644_fc->_field_args.len() == 3LL) {
		jule::Ptr<_1e50ac4b1_Data> _40217_cap = _36629_e->_field_s->_method_evalp(_36629_e->_field_lookup,_38213_t->_field_kind)->_method_eval_expr(_36644_fc->_field_args[2LL]);
		if (_40217_cap == nullptr) {
			return _36666_d;
		}
		_36629_e->_method_check_integer_indexing_by_data(_40217_cap,_36644_fc->_field_args[2LL]->_field_token);
		_36666_d->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_BuiltinMakeCallExprModel>(new( std::nothrow ) _1e4d70a6b_BuiltinMakeCallExprModel(_38213_t->_field_kind,_39413_len->_field_model,_40217_cap->_field_model)));
	} else {
		_36666_d->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_BuiltinMakeCallExprModel>(new( std::nothrow ) _1e4d70a6b_BuiltinMakeCallExprModel(_38213_t->_field_kind,_39413_len->_field_model,jule::Any())));
	}
	return _36666_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_append(jule::Ptr<_1e50ac4b1_Eval>& _42331_e,jule::Ptr<_1e38d4ec7_FnCallExpr>& _42346_fc,jule::Ptr<_1e50ac4b1_Data>& _42368_d) {
	if (_42346_fc->_field_generics.len() > 0LL) {
		_42331_e->_method_push_err(_42346_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_42346_fc->_field_args.len() < 2LL) {
		if (_42346_fc->_field_args.len() == 1LL) {
			_42331_e->_method_push_err(_42346_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		}
		_42331_e->_method_push_err(_42346_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	}
	jule::Ptr<_1e50ac4b1_Data> _43613_t = _42331_e->_method_eval_expr(_42346_fc->_field_args[0LL]);
	if (_43613_t == nullptr) {
		return nullptr;
	}
	if (_43613_t->_field_kind->_method_slc() == nullptr) {
		_42331_e->_method_push_err(_42346_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1e4b15a20_FnIns> _44613_f = jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns(jule::Ptr<_1e398ee72_StructIns>(),jule::Ptr<_1e4b15a20_Fn>(),jule::Slice<jule::Ptr<_1e6420856_TypeKind>>(),jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>({jule::new_struct<_1e4b15a20_ParamIns>(new( std::nothrow ) _1e4b15a20_ParamIns(jule::new_struct_ptr<_1e4b15a20_Param>(new( std::nothrow ) _1e4b15a20_Param(_1e3bad8dd_Token(),true,jule::Bool(),jule::Bool(),jule::Ptr<_1e6420856_TypeSymbol>(),jule::Str())),_43613_t->_field_kind->_method_clone())),jule::new_struct<_1e4b15a20_ParamIns>(new( std::nothrow ) _1e4b15a20_ParamIns(jule::new_struct_ptr<_1e4b15a20_Param>(new( std::nothrow ) _1e4b15a20_Param(_1e3bad8dd_Token(),true,true,jule::Bool(),jule::Ptr<_1e6420856_TypeSymbol>(),jule::Str())),_43613_t->_field_kind->_method_slc()->_field_elem->_method_clone()))}),_43613_t->_field_kind->_method_clone(),jule::Ptr<_1e4d6ee22_Scope>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_common_plain),jule::Bool(),jule::Bool()));
	_42368_d->_field_kind=jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_44613_f));
	_42368_d->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_CommonIdentExprModel>(new( std::nothrow ) _1e4d70a6b_CommonIdentExprModel(jule::Str("append", 6))));
	_42368_d=_1c8ac49ea_builtin_caller_common_plain(_42331_e,_42346_fc,_42368_d);
	if (_42368_d != nullptr) {
		jule::Ptr<_1e4d70a6b_FnCallExprModel> _47017_model = _42368_d->_field_model.operator jule::Ptr<_1e4d70a6b_FnCallExprModel>();
		_42368_d->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_BuiltinAppendCallExprModel>(new( std::nothrow ) _1e4d70a6b_BuiltinAppendCallExprModel(_47017_model->_field_args[0LL],_47017_model->_field_args[1LL])));
	}
	return _42368_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_copy(jule::Ptr<_1e50ac4b1_Eval>& _47929_e,jule::Ptr<_1e38d4ec7_FnCallExpr>& _47944_fc,jule::Ptr<_1e50ac4b1_Data>& _47966_d) {
	if (_47944_fc->_field_generics.len() > 0LL) {
		_47929_e->_method_push_err(_47944_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_47944_fc->_field_args.len() < 2LL) {
		if (_47944_fc->_field_args.len() == 1LL) {
			_47929_e->_method_push_err(_47944_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		}
		_47929_e->_method_push_err(_47944_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	}
	if (_47944_fc->_field_args.len() > 2LL) {
		_47929_e->_method_push_err(_47944_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1e50ac4b1_Data> _49513_t = _47929_e->_method_eval_expr(_47944_fc->_field_args[0LL]);
	if (_49513_t == nullptr) {
		return nullptr;
	}
	if (_49513_t->_field_kind->_method_slc() == nullptr) {
		_47929_e->_method_push_err(_47944_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((!(_49513_t->_field_mutable))) {
		_47929_e->_method_push_err(_47944_fc->_field_args[0LL]->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1e4b15a20_FnIns> _50913_f = jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns(jule::Ptr<_1e398ee72_StructIns>(),jule::Ptr<_1e4b15a20_Fn>(),jule::Slice<jule::Ptr<_1e6420856_TypeKind>>(),jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>({jule::new_struct<_1e4b15a20_ParamIns>(new( std::nothrow ) _1e4b15a20_ParamIns(jule::new_struct_ptr<_1e4b15a20_Param>(new( std::nothrow ) _1e4b15a20_Param()),_49513_t->_field_kind->_method_clone())),jule::new_struct<_1e4b15a20_ParamIns>(new( std::nothrow ) _1e4b15a20_ParamIns(jule::new_struct_ptr<_1e4b15a20_Param>(new( std::nothrow ) _1e4b15a20_Param(_1e3bad8dd_Token(),true,jule::Bool(),jule::Bool(),jule::Ptr<_1e6420856_TypeSymbol>(),jule::Str())),_49513_t->_field_kind->_method_clone()))}),_1c8ac49ea_BUILTIN_FN_COPY->_field_result,jule::Ptr<_1e4d6ee22_Scope>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(_1c8ac49ea_builtin_caller_common_plain),jule::Bool(),jule::Bool()));
	_47966_d->_field_kind=jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_50913_f));
	_47966_d->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_CommonIdentExprModel>(new( std::nothrow ) _1e4d70a6b_CommonIdentExprModel(jule::Str("copy", 4))));
	_47966_d=_1c8ac49ea_builtin_caller_common_plain(_47929_e,_47944_fc,_47966_d);
	return _47966_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_recover(jule::Ptr<_1e50ac4b1_Eval>& _53332_e,jule::Ptr<_1e38d4ec7_FnCallExpr>& _53347_fc,jule::Ptr<_1e50ac4b1_Data>& ) {
	if (_53347_fc->_field_generics.len() > 0LL) {
		_53332_e->_method_push_err(_53347_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1e6420856_TypeKind> _5379_HANDLER_KIND = jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1e4b15a20_FnIns>(new( std::nothrow ) _1e4b15a20_FnIns(jule::Ptr<_1e398ee72_StructIns>(),jule::new_struct_ptr<_1e4b15a20_Fn>(new( std::nothrow ) _1e4b15a20_Fn()),jule::Slice<jule::Ptr<_1e6420856_TypeKind>>(),jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>({jule::new_struct<_1e4b15a20_ParamIns>(new( std::nothrow ) _1e4b15a20_ParamIns(jule::new_struct_ptr<_1e4b15a20_Param>(new( std::nothrow ) _1e4b15a20_Param(_1e3bad8dd_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1e6420856_TypeSymbol>(),jule::Str("err", 3))),jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1c8ac49ea_BUILTIN_TRAIT_ERROR))))}),jule::Ptr<_1e6420856_TypeKind>(),jule::Ptr<_1e4d6ee22_Scope>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Ptr<_1e4cc167b_ReferenceStack>(),jule::Fn<jule::Ptr<_1e50ac4b1_Data>(jule::Ptr<_1e50ac4b1_Eval>&,jule::Ptr<_1e38d4ec7_FnCallExpr>&,jule::Ptr<_1e50ac4b1_Data>&)>(),jule::Bool(),jule::Bool()))));
	if (_53347_fc->_field_args.len() < 1LL) {
		_53332_e->_method_push_err(_53347_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("handler", 7))}));
		return nullptr;
	}
	if (_53347_fc->_field_args.len() > 1LL) {
		_53332_e->_method_push_err(_53347_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1e50ac4b1_Data> _56113_t = _53332_e->_method_eval_expr(_53347_fc->_field_args[0LL]);
	if (_56113_t == nullptr) {
		return nullptr;
	}
	jule::Ptr<_1e4b15a20_FnIns> _5669_f = _56113_t->_field_kind->_method_fnc();
	if (_5669_f == nullptr) {
		_53332_e->_method_push_err(_53347_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((!(_5669_f->_method_equals(_5379_HANDLER_KIND)))) {
		_53332_e->_method_push_err(_53347_fc->_field_args[0LL]->_field_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_56113_t->_field_kind->_method_to_str()),jule::Any(_5379_HANDLER_KIND->_method_to_str())}));
	}
	jule::Ptr<_1e50ac4b1_Data> _57613_d = _1e50ac4b1_build_void_data();
	_57613_d->_field_kind=_56113_t->_field_kind->_method_clone();
	_57613_d->_field_model=jule::Any(jule::new_struct<_1e4d6ee22_Recover>(new( std::nothrow ) _1e4d6ee22_Recover(jule::Ptr<_1e4b15a20_FnIns>(),_56113_t->_field_model,jule::Ptr<_1e4d6ee22_Scope>(),jule::Ptr<_1e4b15a20_FnIns>())));
	return _57613_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_clone(jule::Ptr<_1e50ac4b1_Eval>& _58430_e,jule::Ptr<_1e38d4ec7_FnCallExpr>& _58445_fc,jule::Ptr<_1e50ac4b1_Data>& ) {
	if (_58445_fc->_field_generics.len() > 0LL) {
		_58430_e->_method_push_err(_58445_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_58445_fc->_field_args.len() < 1LL) {
		_58430_e->_method_push_err(_58445_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if (_58445_fc->_field_args.len() > 1LL) {
		_58430_e->_method_push_err(_58445_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1e50ac4b1_Data> _59713_d = _58430_e->_method_eval_expr_kind(_58445_fc->_field_args[0LL]->_field_kind);
	if (_59713_d == nullptr) {
		return nullptr;
	}
	jule::Fn<void(jule::Ptr<_1e6420856_TypeKind>)> _6029_check_kind = jule::Fn<void(jule::Ptr<_1e6420856_TypeKind>)>([=](jule::Ptr<_1e6420856_TypeKind> _60229_k) mutable -> void {
		{
			if (!((_60229_k->_method_slc() != nullptr))) { goto _case_end_4731068576; }
			_case_begin_4731068576:;
			{
				if ((!(_60229_k->_method_slc()->_field_elem->_method_supports_cloning()))) {
					{
						_58430_e->_method_push_err(_58445_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_60229_k->_method_to_str())}));
					}
				}
			}
			goto _match_end_4731068112;
			_case_end_4731068576:;
			if (!((_60229_k->_method_map() != nullptr))) { goto _case_end_4731068672; }
			_case_begin_4731068672:;
			{
				jule::Ptr<_1e6420856_Map> _61317_m = _60229_k->_method_map();
				if ((!(_61317_m->_field_key->_method_supports_cloning())) || (!(_61317_m->_field_val->_method_supports_cloning()))) {
					{
						_58430_e->_method_push_err(_58445_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_60229_k->_method_to_str())}));
					}
				}
			}
			goto _match_end_4731068112;
			_case_end_4731068672:;
			if (!((_60229_k->_method_arr() != nullptr))) { goto _case_end_4731068768; }
			_case_begin_4731068768:;
			{
				if ((!(_60229_k->_method_arr()->_field_elem->_method_supports_cloning()))) {
					{
						_58430_e->_method_push_err(_58445_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_60229_k->_method_to_str())}));
					}
				}
			}
			goto _match_end_4731068112;
			_case_end_4731068768:;
			if (!((_60229_k->_method_sptr() != nullptr))) { goto _case_end_4731068864; }
			_case_begin_4731068864:;
			{
				if ((!(_60229_k->_method_sptr()->_field_elem->_method_supports_cloning()))) {
					{
						_58430_e->_method_push_err(_58445_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_60229_k->_method_to_str())}));
					}
				}
			}
			goto _match_end_4731068112;
			_case_end_4731068864:;
			if (!((_60229_k->_method_strct() != nullptr))) { goto _case_end_4731069072; }
			_case_begin_4731069072:;
			{
				jule::Ptr<_1e398ee72_StructIns> _63817_s = _59713_d->_field_kind->_method_strct();
				if ((!(_63817_s->_field_mutable))) {
					{
						_58430_e->_method_push_err(_58445_fc->_field_args[0LL]->_field_token,jule::Str("struct \"@\" is not breaks immutability, do not needs cloning", 59),jule::Slice<jule::Any>({jule::Any(_59713_d->_field_kind->_method_to_str())}));
					}
				}
				if (((_63817_s->_field_decl == nullptr) || _63817_s->_field_decl->_field_cpp_linked) || (!(_63817_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
					{
						_58430_e->_method_push_err(_58445_fc->_field_args[0LL]->_field_token,jule::Str("type \"@\" is not derives: @", 26),jule::Slice<jule::Any>({jule::Any(_59713_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
					}
				}
			}
			goto _match_end_4731068112;
			_case_end_4731069072:;
			_case_begin_4731068288:;
			{
				{
					_58430_e->_method_push_err(_58445_fc->_field_args[0LL]->_field_token,jule::Str("type \"@\" is not derives: @", 26),jule::Slice<jule::Any>({jule::Any(_59713_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
				}
			}
			goto _match_end_4731068112;
			_case_end_4731068288:;
			_match_end_4731068112:;
		}
	});
	{
		if (!(((!(_59713_d->_field_lvalue))))) { goto _case_end_4731059488; }
		_case_begin_4731059488:;
		{
			_58430_e->_method_push_err(_58445_fc->_field_args[0LL]->_field_token,jule::Str("non-lvalue expressions cannot be clone", 38),jule::Slice<jule::Any>());
		}
		goto _match_end_4731100160;
		_case_end_4731059488:;
		if (!(((!(_59713_d->_field_kind->_method_supports_cloning()))))) { goto _case_end_4731094224; }
		_case_begin_4731094224:;
		{
			_6029_check_kind(_59713_d->_field_kind);
		}
		goto _match_end_4731100160;
		_case_end_4731094224:;
		_match_end_4731100160:;
	}
	_59713_d->_field_mutable=true;
	_59713_d->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_BuiltinCloneCallExprModel>(new( std::nothrow ) _1e4d70a6b_BuiltinCloneCallExprModel(_59713_d->_field_model)));
	return _59713_d;
}



inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_std_mem_size_of(jule::Ptr<_1e50ac4b1_Eval>& _67540_e,jule::Ptr<_1e38d4ec7_FnCallExpr>& _67555_fc,jule::Ptr<_1e50ac4b1_Data>& ) {
	if (_67555_fc->_field_generics.len() > 0LL) {
		_67540_e->_method_push_err(_67555_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1e50ac4b1_Data> _67913_result = jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("uint", 4)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
	if (_67555_fc->_field_args.len() < 1LL) {
		_67540_e->_method_push_err(_67555_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _67913_result;
	}
	if (_67555_fc->_field_args.len() > 1LL) {
		_67540_e->_method_push_err(_67555_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1e50ac4b1_Data> _69113_d = _67540_e->_method_eval_expr_kind(_67555_fc->_field_args[0LL]->_field_kind);
	if (_69113_d == nullptr) {
		return _67913_result;
	}
	_67913_result->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_SizeofExprModel>(new( std::nothrow ) _1e4d70a6b_SizeofExprModel(_69113_d->_field_model)));
	return _67913_result;
}



inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_std_mem_align_of(jule::Ptr<_1e50ac4b1_Eval>& _70041_e,jule::Ptr<_1e38d4ec7_FnCallExpr>& _70056_fc,jule::Ptr<_1e50ac4b1_Data>& ) {
	if (_70056_fc->_field_generics.len() > 0LL) {
		_70041_e->_method_push_err(_70056_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1e50ac4b1_Data> _70413_result = jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("uint", 4)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
	if (_70056_fc->_field_args.len() < 1LL) {
		_70041_e->_method_push_err(_70056_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _70413_result;
	}
	if (_70056_fc->_field_args.len() > 1LL) {
		_70041_e->_method_push_err(_70056_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1e50ac4b1_Data> _71613_d = _70041_e->_method_eval_expr_kind(_70056_fc->_field_args[0LL]->_field_kind);
	if (_71613_d == nullptr) {
		return _70413_result;
	}
	_70413_result->_field_model=jule::Any(jule::new_struct<_1e4d70a6b_AlignofExprModel>(new( std::nothrow ) _1e4d70a6b_AlignofExprModel(_71613_d->_field_model)));
	return _70413_result;
}



inline jule::Ptr<_1e50ac4b1_Data> _1c8ac49ea_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1e50ac4b1_Eval>& _72551_e,jule::Ptr<_1e38d4ec7_FnCallExpr>& _72566_fc,jule::Ptr<_1e50ac4b1_Data>& ) {
	if (_72566_fc->_field_generics.len() > 0LL) {
		_72551_e->_method_push_err(_72566_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_72566_fc->_field_args.len() < 1LL) {
		_72551_e->_method_push_err(_72566_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if (_72566_fc->_field_args.len() > 1LL) {
		_72551_e->_method_push_err(_72566_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1e50ac4b1_Data> _73813_d = _72551_e->_method_eval_expr_kind(_72566_fc->_field_args[0LL]->_field_kind);
	if (_73813_d == nullptr) {
		return nullptr;
	}
	if ((!(_1e6420856_is_builtin_str_convertable(_73813_d->_field_kind)))) {
		_72551_e->_method_push_err(_72566_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_1e50ac4b1_Data>(new( std::nothrow ) _1e50ac4b1_Data(jule::new_struct_ptr<_1e6420856_TypeKind>(new( std::nothrow ) _1e6420856_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1e6420856_build_prim_type(jule::Str("str", 3)))),jule::Ptr<_1e6420856_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e4d70a6b_IntegratedToStrExprModel>(new( std::nothrow ) _1e4d70a6b_IntegratedToStrExprModel(_73813_d->_field_model))),jule::Bool(),jule::Ptr<_1c8b9b83b_Const>()));
}



inline std::tuple<jule::Bool,jule::Bool> _1e354de71_check_os(jule::Str _1013_arg) {
	jule::Bool _1025_ok = jule::Bool();
	jule::Bool _1035_exist = jule::Bool();
	_1025_ok=false;
	_1035_exist=true;
	{
		auto &_match_expr{ _1013_arg };
		if (!((jule::Str("windows", 7)) == _match_expr)) { goto _case_end_4738016640; }
		_case_begin_4738016640:;
		{
			_1025_ok=_1e24c3798_is_windows(_1e24951c6_OS);
		}
		goto _match_end_4738015488;
		_case_end_4738016640:;
		if (!((jule::Str("darwin", 6)) == _match_expr)) { goto _case_end_4738016960; }
		_case_begin_4738016960:;
		{
			_1025_ok=_1e24c3798_is_darwin(_1e24951c6_OS);
		}
		goto _match_end_4738015488;
		_case_end_4738016960:;
		if (!((jule::Str("linux", 5)) == _match_expr)) { goto _case_end_4738016320; }
		_case_begin_4738016320:;
		{
			_1025_ok=_1e24c3798_is_linux(_1e24951c6_OS);
		}
		goto _match_end_4738015488;
		_case_end_4738016320:;
		if (!((jule::Str("unix", 4)) == _match_expr)) { goto _case_end_4738015808; }
		_case_begin_4738015808:;
		{
			_1025_ok=_1e24c3798_is_unix(_1e24951c6_OS);
		}
		goto _match_end_4738015488;
		_case_end_4738015808:;
		_case_begin_4738014464:;
		{
			_1025_ok=true;
			_1035_exist=false;
		}
		goto _match_end_4738015488;
		_case_end_4738014464:;
		_match_end_4738015488:;
	}
	return std::make_tuple(_1025_ok,_1035_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _1e354de71_check_arch(jule::Str _2715_arg) {
	jule::Bool _2727_ok = jule::Bool();
	jule::Bool _2737_exist = jule::Bool();
	_2727_ok=false;
	_2737_exist=true;
	{
		auto &_match_expr{ _2715_arg };
		if (!((jule::Str("i386", 4)) == _match_expr)) { goto _case_end_4738023456; }
		_case_begin_4738023456:;
		{
			_2727_ok=_1e24c3798_is_i386(_1e24951c6_ARCH);
		}
		goto _match_end_4738021984;
		_case_end_4738023456:;
		if (!((jule::Str("amd64", 5)) == _match_expr)) { goto _case_end_4738022816; }
		_case_begin_4738022816:;
		{
			_2727_ok=_1e24c3798_is_amd64(_1e24951c6_ARCH);
		}
		goto _match_end_4738021984;
		_case_end_4738022816:;
		if (!((jule::Str("arm64", 5)) == _match_expr)) { goto _case_end_4738022304; }
		_case_begin_4738022304:;
		{
			_2727_ok=_1e24c3798_is_arm64(_1e24951c6_ARCH);
		}
		goto _match_end_4738021984;
		_case_end_4738022304:;
		if (!((jule::Str("64bit", 5)) == _match_expr)) { goto _case_end_4738022400; }
		_case_begin_4738022400:;
		{
			_2727_ok=_1e24c3798_is_64bit(_1e24951c6_ARCH);
		}
		goto _match_end_4738021984;
		_case_end_4738022400:;
		if (!((jule::Str("32bit", 5)) == _match_expr)) { goto _case_end_4738022496; }
		_case_begin_4738022496:;
		{
			_2727_ok=_1e24c3798_is_32bit(_1e24951c6_ARCH);
		}
		goto _match_end_4738021984;
		_case_end_4738022496:;
		_case_begin_4738020960:;
		{
			_2727_ok=true;
			_2737_exist=false;
		}
		goto _match_end_4738021984;
		_case_end_4738020960:;
		_match_end_4738021984:;
	}
	return std::make_tuple(_2727_ok,_2737_exist);
}



inline jule::Bool _1e354de71_is_pass_file_annotation(jule::Str _4632_p) {
	_4632_p=_1e2517b61_base(_4632_p);
	jule::I64 _489_n = _4632_p.len();
	_4632_p=_4632_p.slice(0LL,_489_n - _1e2517b61_ext(_4632_p).len());
	jule::Str _5413_a1 = jule::Str();
	jule::Str _5713_a2 = jule::Str();
	jule::Int _6013_i = _4632_p.rfind(jule::Str("_", 1));
	if (_6013_i == -1LL) {
		jule::Bool _6318_ok;
		jule::Bool _6326_exist;
		std::tie(_6318_ok,_6326_exist) = _1e354de71_check_os(_4632_p);
		if (_6326_exist) {
			return _6318_ok;
		}
		std::tie(_6318_ok,_6326_exist) = _1e354de71_check_arch(_4632_p);
		return (!(_6326_exist)) || _6318_ok;
	}
	if ((_6013_i + 1LL) >= _489_n) {
		return true;
	}
	_5413_a1=_4632_p.slice(_6013_i + 1LL);
	_4632_p=_4632_p.slice(0LL,_6013_i);
	_6013_i=static_cast<jule::Int>(_4632_p.rfind(jule::Str("_", 1)));
	if (_6013_i != -1LL) {
		_5713_a2=_4632_p.slice(_6013_i + 1LL);
	}
	if (_5713_a2 == jule::Str()) {
		jule::Bool _8418_ok;
		jule::Bool _8426_exist;
		std::tie(_8418_ok,_8426_exist) = _1e354de71_check_os(_5413_a1);
		if (_8426_exist) {
			return _8418_ok;
		}
		std::tie(_8418_ok,_8426_exist) = _1e354de71_check_arch(_5413_a1);
		return (!(_8426_exist)) || _8418_ok;
	}
	jule::Bool _9214_ok;
	jule::Bool _9222_exist;
	std::tie(_9214_ok,_9222_exist) = _1e354de71_check_arch(_5413_a1);
	if (_9222_exist) {
		if ((!(_9214_ok))) {
			return false;
		}
		jule::Bool _9714_ok;
		jule::Bool _9718_exist;
		std::tie(_9714_ok,_9718_exist) = _1e354de71_check_os(_5713_a2);
		return (!(_9718_exist)) || _9714_ok;
	}
	std::tie(_9214_ok,_9222_exist) = _1e354de71_check_os(_5413_a1);
	return (!(_9222_exist)) || _9214_ok;
}



inline void _1e36600a4_set_os_flags(void) {
	{
		auto &_match_expr{ _1e24951c6_OS };
		if (!((jule::Str("windows", 7)) == _match_expr)) { goto _case_end_4738045568; }
		_case_begin_4738045568:;
		{
			_1e36600a4_FLAGS.push(jule::Str("windows", 7));
		}
		goto _match_end_4738046656;
		_case_end_4738045568:;
		if (!((jule::Str("linux", 5)) == _match_expr)) { goto _case_end_4738045664; }
		_case_begin_4738045664:;
		{
			_1e36600a4_FLAGS.push(jule::Str("linux", 5));
		}
		goto _match_end_4738046656;
		_case_end_4738045664:;
		if (!((jule::Str("darwin", 6)) == _match_expr)) { goto _case_end_4738049648; }
		_case_begin_4738049648:;
		{
			_1e36600a4_FLAGS.push(jule::Str("darwin", 6));
		}
		goto _match_end_4738046656;
		_case_end_4738049648:;
		_match_end_4738046656:;
	}
	if (_1e24c3798_is_unix(_1e24951c6_OS)) {
		_1e36600a4_FLAGS.push(jule::Str("unix", 4));
	}
}



inline void _1e36600a4_set_arch_flags(void) {
	{
		auto &_match_expr{ _1e24951c6_ARCH };
		if (!((jule::Str("i386", 4)) == _match_expr)) { goto _case_end_4738049104; }
		_case_begin_4738049104:;
		{
			_1e36600a4_FLAGS.push(jule::Str("i386", 4));
		}
		goto _match_end_4738049024;
		_case_end_4738049104:;
		if (!((jule::Str("amd64", 5)) == _match_expr)) { goto _case_end_4738054304; }
		_case_begin_4738054304:;
		{
			_1e36600a4_FLAGS.push(jule::Str("amd64", 5));
		}
		goto _match_end_4738049024;
		_case_end_4738054304:;
		if (!((jule::Str("arm64", 5)) == _match_expr)) { goto _case_end_4738054400; }
		_case_begin_4738054400:;
		{
			_1e36600a4_FLAGS.push(jule::Str("arm64", 5));
		}
		goto _match_end_4738049024;
		_case_end_4738054400:;
		_match_end_4738049024:;
	}
	if (_1e24c3798_is_64bit(_1e24951c6_ARCH)) {
		_1e36600a4_FLAGS.push(jule::Str("64bit", 5));
	}
	if (_1e24c3798_is_32bit(_1e24951c6_ARCH)) {
		_1e36600a4_FLAGS.push(jule::Str("32bit", 5));
	}
}



inline void _1e36600a4_init_flags(void) {
	_1e36600a4_set_os_flags();
	_1e36600a4_set_arch_flags();
}



inline void _1e36c2a1d_exit_err(jule::Str _2213_msg) {
	
	jule::outln(_2213_msg);
	_1e2506e5d_exit(1LL);
}



inline jule::Slice<jule::U8> _1e36c2a1d_read_buff(jule::Str _3014_path) {
	jule::Slice<jule::U8> _3114_buffer;
	jule::Int _3122_err;
	std::tie(_3114_buffer,_3122_err) = _1e479bce4_File::_static_method_read(_3014_path);
	if (_3122_err != 0LLU) {
		_1e36c2a1d_exit_err(jule::Str("error: file cannot read", 23));
	}
	return _3114_buffer;
}



inline _1e24777a2_Log _1e36c2a1d_flat_compiler_err(jule::Str _4022_text) {
	return _1e24777a2_Log(1LLU,jule::Int(),jule::Int(),jule::Str(),_4022_text,jule::Str(),jule::Str());
}



inline std::tuple<jule::Slice<jule::Ptr<_1e4789980_DirEntry>>,jule::Str> _1e36c2a1d_read_package_dirents(jule::Str _4825_path) {
	jule::Str _4851_err_msg = jule::Str();
	jule::Slice<jule::Ptr<_1e4789980_DirEntry>> _4914_dirents;
	jule::Int _4923_err;
	std::tie(_4914_dirents,_4923_err) = _1e4789980_Directory::_static_method_read(_4825_path);
	if (_4923_err != 0LLU) {
		_4851_err_msg = jule::Str("connot read package directory: ", 31) + _4825_path;
		return std::make_tuple(nullptr,_4851_err_msg);
	}
	jule::Slice<jule::Ptr<_1e4789980_DirEntry>> _5413_passed_dirents = nullptr;
	{
		auto &expr = _4914_dirents;
		auto it = expr.begin();
		_iter_begin_4738073376:;
		if (it != expr.end()) {
			jule::Ptr<_1e4789980_DirEntry> _1e36c2a1d_dirent = *it;
			{
				jule::Str _5613_name = _1e36c2a1d_dirent->_field_name;
				if (_1e36c2a1d_dirent->_field_stat->_method_is_dir() || (!(_5613_name.has_suffix(jule::Str(".jule", 5))))) {
					goto _iter_next_4738073376;
				}
				_5413_passed_dirents.push(_1e36c2a1d_dirent);
			}
			_iter_next_4738073376:;
			++it;
			goto _iter_begin_4738073376;
		}
		_iter_end_4738073376:;
	}
	_4851_err_msg = jule::Str();
	return std::make_tuple(_5413_passed_dirents,_4851_err_msg);
}



inline std::tuple<jule::Bool,jule::Slice<_1e24777a2_Log>> _1e36c2a1d_is_pass_build_directives(jule::Ptr<_1e38d45c0_Ast>& _7034_file) {
	{
		auto &expr = _7034_file->_field_top_directives;
		auto it = expr.begin();
		_iter_begin_4738079200:;
		if (it != expr.end()) {
			jule::Ptr<_1e38d4ec7_Directive> _1e36c2a1d_td = *it;
			{
				if (_1e36c2a1d_td->_field_tag._field_kind != jule::Str("build", 5)) {
					goto _iter_next_4738079200;
				}
				_1e359ad25_DirectiveEval _7617_de = _1e359ad25_DirectiveEval(jule::Slice<_1e24777a2_Log>(),_1e36c2a1d_td);
				jule::Bool _7913_result = _7617_de._method_eval();
				if (_7617_de._field_logs.len() > 0LL) {
					return std::make_tuple(false,_7617_de._field_logs);
				}
				if ((!(_7913_result))) {
					return std::make_tuple(false,nullptr);
				}
			}
			_iter_next_4738079200:;
			++it;
			goto _iter_begin_4738079200;
		}
		_iter_end_4738079200:;
	}
	return std::make_tuple(true,nullptr);
}



inline void _1e376ec74_push_passes(jule::Ptr<_1e4ee54e8_Package>& _11321_p,jule::Slice<jule::Str>& _11345_passes) {
	{
		auto &expr = _11321_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4738205872:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e376ec74_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _1e376ec74_f->_field_passes;
					auto it = expr.begin();
					_iter_begin_4738208032:;
					if (it != expr.end()) {
						_1e4cc167b_Pass &_1e376ec74_pass = *it;
						{
							if (_1e376ec74_pass._field_text == jule::Str()) {
								goto _iter_next_4738208032;
							}
							{
								auto &expr = _11345_passes;
								auto it = expr.begin();
								_iter_begin_4738209376:;
								if (it != expr.end()) {
									jule::Str &_1e376ec74_cpass = *it;
									{
										if (_1e376ec74_cpass == _1e376ec74_pass._field_text) {
											goto _iter_next_4738208032;
										}
									}
									_iter_next_4738209376:;
									++it;
									goto _iter_begin_4738209376;
								}
								_iter_end_4738209376:;
							}
							_11345_passes.push(_1e376ec74_pass._field_text);
						}
						_iter_next_4738208032:;
						++it;
						goto _iter_begin_4738208032;
					}
					_iter_end_4738208032:;
				}
			}
			_iter_next_4738205872:;
			++it;
			goto _iter_begin_4738205872;
		}
		_iter_end_4738205872:;
	}
}



inline jule::Slice<jule::Str> _1e376ec74_get_all_unique_passes(jule::Ptr<_1e4ee54e8_Package>& _13031_pkg,jule::Slice<jule::Ptr<_1e4ee54e8_ImportInfo>> _13056_uses) {
	jule::Slice<jule::Str> _13113_passes = nullptr;
	_1e376ec74_push_passes(_13031_pkg,_13113_passes);
	{
		auto &expr = _13056_uses;
		auto it = expr.begin();
		_iter_begin_4738215712:;
		if (it != expr.end()) {
			jule::Ptr<_1e4ee54e8_ImportInfo> _1e376ec74_u = *it;
			{
				if ((!(_1e376ec74_u->_field_cpp_linked))) {
					_1e376ec74_push_passes(_1e376ec74_u->_field_package,_13113_passes);
				}
			}
			_iter_next_4738215712:;
			++it;
			goto _iter_begin_4738215712;
		}
		_iter_end_4738215712:;
	}
	return _13113_passes;
}



inline jule::Bool _1e249646e_is_exist(jule::Slice<jule::Any> _3013_arr,jule::Any _3025_t) {
	{
		auto &expr = _3013_arr;
		auto it = expr.begin();
		_iter_begin_4738359088:;
		if (it != expr.end()) {
			jule::Any &_1e249646e_ref = *it;
			{
				if (_3025_t == _1e249646e_ref) {
					return true;
				}
			}
			_iter_next_4738359088:;
			++it;
			goto _iter_begin_4738359088;
		}
		_iter_end_4738359088:;
	}
	return false;
}



inline jule::Bool _1e249646e_is_dead(jule::Any _4016_ref) {
	jule::Bool _4028_dead = jule::Bool();
	if (_1e249646e_is_exist(_1e249646e_deads,_4016_ref)) {
		_4028_dead = true;
		return _4028_dead;
	}
	{
		auto &_match_expr{ _4016_ref };
		if (!(_match_expr.type_is<jule::Ptr<_1e4b15a20_FnIns>>())) { goto _case_end_4738366784; }
		_case_begin_4738366784:;
		{
			if (_4016_ref.operator jule::Ptr<_1e4b15a20_FnIns>()->_field_decl->_method_is_init()) {
				goto _match_end_4738363088;
			}
			goto _case_begin_4738363344;
		}
		goto _match_end_4738363088;
		_case_end_4738366784:;
		_case_begin_4738363344:;
		{
			if ((_1e249646e_current == _4016_ref) || (_1e249646e_main_current == _4016_ref)) {
				_4028_dead = true;
				return _4028_dead;
			}
			if (_1e249646e_is_exist(_1e249646e_checking,_4016_ref)) {
				_4028_dead = true;
				return _4028_dead;
			}
		}
		goto _match_end_4738363088;
		_case_end_4738363344:;
		_match_end_4738363088:;
	}
	jule::Any _6113_old = _1e249646e_current;
	_1e249646e_current=_4016_ref;
	jule::I64 _639_len = _1e249646e_checking.len();
	_1e249646e_checking.push(_4016_ref);
	__JULE_DEFER({
		_1e249646e_current=_6113_old;
		_1e249646e_drop_ref(_1e249646e_checking,_639_len);
	});
	{
		auto &_match_expr{ _4016_ref };
		if (!(_match_expr.type_is<jule::Ptr<_1e4b15a20_FnIns>>())) { goto _case_end_4738372624; }
		_case_begin_4738372624:;
		{
			_4028_dead = _1e249646e_is_fn_dead(_4016_ref.operator jule::Ptr<_1e4b15a20_FnIns>());
			return _4028_dead;
		}
		goto _match_end_4738371504;
		_case_end_4738372624:;
		if (!(_match_expr.type_is<jule::Ptr<_1e50b0492_Var>>())) { goto _case_end_4738372784; }
		_case_begin_4738372784:;
		{
			_4028_dead = _1e249646e_is_var_dead(_4016_ref.operator jule::Ptr<_1e50b0492_Var>());
			return _4028_dead;
		}
		goto _match_end_4738371504;
		_case_end_4738372784:;
		if (!(_match_expr.type_is<jule::Ptr<_1e398ee72_StructIns>>())) { goto _case_end_4738372880; }
		_case_begin_4738372880:;
		{
			_4028_dead = _1e249646e_is_struct_dead(_4016_ref.operator jule::Ptr<_1e398ee72_StructIns>());
			return _4028_dead;
		}
		goto _match_end_4738371504;
		_case_end_4738372880:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d61232_Trait>>())) { goto _case_end_4738371792; }
		_case_begin_4738371792:;
		{
			_4028_dead = _1e249646e_is_trait_dead(_4016_ref.operator jule::Ptr<_1e4d61232_Trait>());
			return _4028_dead;
		}
		goto _match_end_4738371504;
		_case_end_4738371792:;
		_case_begin_4738371232:;
		{
			_4028_dead = false;
			return _4028_dead;
		}
		goto _match_end_4738371504;
		_case_end_4738371232:;
		_match_end_4738371504:;
	}
}



inline void _1e249646e_drop_ref(jule::Slice<jule::Any>& _9218_refs,jule::Int _9231_pos) {
	_9218_refs=_9218_refs.slice(0LL,_9231_pos);
}



inline jule::Bool _1e249646e_is_all_references_are_dead(jule::Ptr<_1e4cc167b_ReferenceStack> _10035_references) {
	jule::Int _10113_i = 0LL;
	for (; _10113_i < _10035_references->_method_len(); (_10113_i)++) {
		{
			jule::Any _10317_ref = _10035_references->_method_at(_10113_i);
			if (_10317_ref == _1e249646e_current) {
				goto _iter_next_4738380544;
			}
			if (_10317_ref == _1e249646e_main_current) {
				goto _iter_next_4738380544;
			}
			if ((!(_1e249646e_is_dead(_10317_ref)))) {
				return false;
			}
		}
	_iter_next_4738380544:;
	}
	_iter_end_4738380544:;
	return true;
}



inline jule::Bool _1e249646e_is_fn_dead(jule::Ptr<_1e4b15a20_FnIns> _11719_f) {
	if (_11719_f->_field_decl->_field_cpp_linked) {
		return false;
	}
	if (_11719_f->_field_decl->_method_is_entry_point() || _11719_f->_field_decl->_method_is_init()) {
		return (!(_11719_f->_field_decl->_field_statically));
	}
	if (_11719_f->_field_owner != nullptr) {
		if (_1e249646e_is_exist(_1e249646e_checking,jule::Any(_11719_f->_field_owner))) {
			return true;
		}
		return _1e249646e_is_dead(jule::Any(_11719_f->_field_owner));
	}
	return _1e249646e_is_all_references_are_dead(_11719_f->_field_references);
}



inline jule::Bool _1e249646e_is_var_dead(jule::Ptr<_1e50b0492_Var> _14320_v) {
	if (_14320_v->_field_constant) {
		return true;
	}
	if (_14320_v->_field_cpp_linked) {
		return false;
	}
	return _1e249646e_is_all_references_are_dead(_14320_v->_field_references);
}



inline jule::Bool _1e249646e_is_struct_dead(jule::Ptr<_1e398ee72_StructIns> _19323_s) {
	return false;
}



inline jule::Bool _1e249646e_is_trait_dead(jule::Ptr<_1e4d61232_Trait> _21022_t) {
	return false;
}



inline void _1e249646e_eliminate_dead_functions(jule::Slice<jule::Ptr<_1e4b15a20_Fn>>& _22834_funcs) {
	jule::Int _22913_i = 0LL;
	while (_22913_i < _22834_funcs.len()) {
		{
			jule::Ptr<_1e4b15a20_Fn> _23117_f = _22834_funcs[_22913_i];
			jule::Int _23217_j = 0LL;
			while (_23217_j < _23117_f->_field_instances.len()) {
				{
					jule::Ptr<_1e4b15a20_FnIns> _23421_ins = _23117_f->_field_instances[_23217_j];
					_1e249646e_main_current=jule::Any(_23421_ins);
					if (_1e249646e_is_fn_dead(_23421_ins)) {
						_1e249646e_deads.push(jule::Any(_23421_ins));
						_23117_f->_field_instances=jule::append(_23117_f->_field_instances.slice(0LL,_23217_j),_23117_f->_field_instances.slice(_23217_j + 1LL));
						goto _iter_next_4738422160;
					}
					_1e39716e5_eliminate_dead_code_of_scope(_23421_ins->_field_scope);
					(_23217_j)++;
				}
			_iter_next_4738422160:;
			}
			_iter_end_4738422160:;
			if (_23117_f->_field_instances.len() == 0LL) {
				_22834_funcs=jule::append(_22834_funcs.slice(0LL,_22913_i),_22834_funcs.slice(_22913_i + 1LL));
				goto _iter_next_4738419728;
			}
			(_22913_i)++;
		}
	_iter_next_4738419728:;
	}
	_iter_end_4738419728:;
}



inline void _1e249646e_eliminate_dead_globals(jule::Ptr<_1e4ee54e8_Package>& _25432_pkg) {
	{
		auto &expr = _25432_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_4738420144:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e249646e_f = *it;
			{
				jule::Int _25617_i = 0LL;
				while (_25617_i < _1e249646e_f->_field_vars.len()) {
					{
						jule::Ptr<_1e50b0492_Var> _25821_v = _1e249646e_f->_field_vars[_25617_i];
						_1e249646e_main_current=jule::Any(_25821_v);
						if (_1e249646e_is_var_dead(_25821_v)) {
							_1e249646e_deads.push(jule::Any(_25821_v));
							_1e249646e_f->_field_vars=jule::append(_1e249646e_f->_field_vars.slice(0LL,_25617_i),_1e249646e_f->_field_vars.slice(_25617_i + 1LL));
						} else {
							(_25617_i)++;
						}
					}
				_iter_next_4738433504:;
				}
				_iter_end_4738433504:;
			}
			_iter_next_4738420144:;
			++it;
			goto _iter_begin_4738420144;
		}
		_iter_end_4738420144:;
	}
}



inline void _1e249646e_eliminate_dead_functions_package(jule::Ptr<_1e4ee54e8_Package>& _27042_pkg) {
	{
		auto &expr = _27042_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_4738440288:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1e249646e_f = *it;
			{
				_1e249646e_eliminate_dead_functions(_1e249646e_f->_field_funcs);
			}
			_iter_next_4738440288:;
			++it;
			goto _iter_begin_4738440288;
		}
		_iter_end_4738440288:;
	}
}



inline void _1e249646e_catch_alive_init(jule::Ptr<_1e4ee54e8_Package>& _31826_pkg) {
	
	
	jule::Ptr<_1e4b15a20_Fn> _32113_f = _31826_pkg->_method_find_fn(jule::Str("init", 4),false);
	if (_32113_f == nullptr) {
		return;
	}
	jule::I64 _3269_n = _1e249646e_deads.len();
	__JULE_DEFER({
		_1e249646e_deads=_1e249646e_deads.slice(0LL,_3269_n);
		_1e249646e_checking=nullptr;
		_1e249646e_current=jule::Any(nullptr);
	});
	jule::Ptr<_1e4b15a20_FnIns> _33413_ins = _32113_f->_field_instances[0LL];
	jule::Int _33513_i = 0LL;
	for (; _33513_i < _33413_ins->_field_refers->_method_len(); (_33513_i)++) {
		{
			if ((!(_1e249646e_is_dead(_33413_ins->_field_refers->_method_at(_33513_i))))) {
				_32113_f->_field_statically=true;
				return;
			}
		}
	_iter_next_4738461936:;
	}
	_iter_end_4738461936:;
}



inline void _1e249646e_eliminate_package(jule::Ptr<_1e4ee54e8_Package>& _34427_pkg) {
	_1e249646e_deads=jule::Slice<jule::Any>::alloc(0LL,2000LL);
	_1e249646e_catch_alive_init(_34427_pkg);
	_1e249646e_eliminate_dead_globals(_34427_pkg);
	_1e249646e_eliminate_dead_functions_package(_34427_pkg);
}



inline void _1e249646e_eliminate(jule::Ptr<_1e376ec74_IR>& _35523_ir) {
	jule::I64 _35613_i = _35523_ir->_field_used.len() - 1LL;
	for (; _35613_i >= 0LL; (_35613_i)--) {
		{
			jule::Ptr<_1e4ee54e8_ImportInfo> _35817_u = _35523_ir->_field_used[_35613_i];
			if ((!(_35817_u->_field_cpp_linked))) {
				_1e249646e_eliminate_package(_35817_u->_field_package);
			}
		}
	_iter_next_4738478352:;
	}
	_iter_end_4738478352:;
	_1e249646e_eliminate_package(_35523_ir->_field_main);
	_1e249646e_deads=nullptr;
	_1e249646e_checking=nullptr;
	_1e249646e_current=jule::Any(nullptr);
}



inline void _1e39716e5_eliminate_dead_code_of_scope(jule::Ptr<_1e4d6ee22_Scope> _7337_s) {
	jule::Ptr<_1e39716e5_ScopeDeadCode> _7413_sdc = jule::new_struct_ptr<_1e39716e5_ScopeDeadCode>(new( std::nothrow ) _1e39716e5_ScopeDeadCode(jule::Ptr<_1e39716e5_ScopeDeadCode>(),_7337_s,(&(_7337_s->_field_stmts)),jule::Int()));
	{
		_7413_sdc->_method_optimize_stmts();
	}
}



inline jule::U64 _1c9110233_unix(void) {
	return static_cast<jule::U64>(time(nullptr));
}



inline jule::U64 _1c9110233_unix_year_to_seconds(jule::Uint _25725_y,jule::Bool& _25743_leap) {
	if ((_25725_y - 2LL) <= 136LL) {
		jule::Uint _25917_leaps = (_25725_y - 68LL) >> 2LL;
		_25743_leap=((_25725_y - 68LL) & 3LL) == 0LL;
		if (_25743_leap) {
			(_25917_leaps)--;
		}
		return static_cast<jule::Uint>((31536000LL * (_25725_y - 70LL)) + (86400LL * _25917_leaps));
	}
	jule::Uint _26713_leaps = 0LLU;
	jule::Uint _26813_centuries = 0LLU;
	jule::Uint _26913_cycles = jule::unsafe_div(_25725_y - 100LL,400LL);
	jule::Uint _27013_rem = jule::unsafe_mod(_25725_y - 100LL,400LL);
	if (_27013_rem < 0LL) {
		(_26913_cycles)--;
		_27013_rem+=400LL;
	}
	if (_27013_rem == 0LL) {
		_25743_leap=true;
		_26813_centuries=0LL;
		_26713_leaps=0LL;
	} else {
		if (_27013_rem >= 200LL) {
			if (_27013_rem >= 300LL) {
				_26813_centuries=3LL;
				_27013_rem-=300LL;
			} else {
				_26813_centuries=2LL;
				_27013_rem-=200LL;
			}
		} else {
			if (_27013_rem >= 100LL) {
				_26813_centuries=1LL;
				_27013_rem-=100LL;
			} else {
				_26813_centuries=0LL;
			}
		}
		if (_27013_rem == 0LL) {
			_25743_leap=false;
			_26713_leaps=0LL;
		} else {
			_26713_leaps=static_cast<jule::Uint>(jule::unsafe_div(_27013_rem,4LL));
			_27013_rem = jule::unsafe_mod(_27013_rem,4LL);
			_25743_leap=_27013_rem == 0LL;
		}
	}
	_26713_leaps+=static_cast<jule::Uint>((97LL * _26913_cycles) + (24LL * _26813_centuries));
	if (_25743_leap) {
		(_26713_leaps)++;
	}
	return static_cast<jule::Uint>(((((_25725_y - 100LL) * 31536000LL) + (_26713_leaps * 86400LL)) + 946684800LL) + 86400LL);
}



inline jule::U64 _1c9110233_unix_month_to_seconds(jule::Uint _31426_m,jule::Bool _31439_leap) {
	jule::U64 _31613_t = 0LLU;
	{
		auto &_match_expr{ _31426_m };
		if (!((1LL) == _match_expr)) { goto _case_end_4738568784; }
		_case_begin_4738568784:;
		{
			_31613_t=2678400LL;
		}
		goto _match_end_4738577792;
		_case_end_4738568784:;
		if (!((2LL) == _match_expr)) { goto _case_end_4738577872; }
		_case_begin_4738577872:;
		{
			_31613_t=5097600LL;
		}
		goto _match_end_4738577792;
		_case_end_4738577872:;
		if (!((3LL) == _match_expr)) { goto _case_end_4738578304; }
		_case_begin_4738578304:;
		{
			_31613_t=7776000LL;
		}
		goto _match_end_4738577792;
		_case_end_4738578304:;
		if (!((4LL) == _match_expr)) { goto _case_end_4738578400; }
		_case_begin_4738578400:;
		{
			_31613_t=10368000LL;
		}
		goto _match_end_4738577792;
		_case_end_4738578400:;
		if (!((5LL) == _match_expr)) { goto _case_end_4738578496; }
		_case_begin_4738578496:;
		{
			_31613_t=13046400LL;
		}
		goto _match_end_4738577792;
		_case_end_4738578496:;
		if (!((6LL) == _match_expr)) { goto _case_end_4738578592; }
		_case_begin_4738578592:;
		{
			_31613_t=15638400LL;
		}
		goto _match_end_4738577792;
		_case_end_4738578592:;
		if (!((7LL) == _match_expr)) { goto _case_end_4738578704; }
		_case_begin_4738578704:;
		{
			_31613_t=18316800LL;
		}
		goto _match_end_4738577792;
		_case_end_4738578704:;
		if (!((8LL) == _match_expr)) { goto _case_end_4738578816; }
		_case_begin_4738578816:;
		{
			_31613_t=20995200LL;
		}
		goto _match_end_4738577792;
		_case_end_4738578816:;
		if (!((9LL) == _match_expr)) { goto _case_end_4738578928; }
		_case_begin_4738578928:;
		{
			_31613_t=23587200LL;
		}
		goto _match_end_4738577792;
		_case_end_4738578928:;
		if (!((10LL) == _match_expr)) { goto _case_end_4738579040; }
		_case_begin_4738579040:;
		{
			_31613_t=26265600LL;
		}
		goto _match_end_4738577792;
		_case_end_4738579040:;
		if (!((11LL) == _match_expr)) { goto _case_end_4738579152; }
		_case_begin_4738579152:;
		{
			_31613_t=28857600LL;
		}
		goto _match_end_4738577792;
		_case_end_4738579152:;
		_match_end_4738577792:;
	}
	if (_31439_leap && (_31426_m >= 2LL)) {
		_31613_t+=86400LL;
	}
	return _31613_t;
}



inline jule::Bool _1e24a32e4_iter_expr_is_copy_optimizable(jule::Ptr<_1e50ac4b1_Data>& _3935_expr,jule::Ptr<_1e50b0492_Var>& _3949_v) {
	return ((!(_3935_expr->_field_lvalue)) && (!(_3935_expr->_field_kind->_method_mutable()))) || (!(_3949_v->_field_mutable));
}



inline jule::Str _1e24a32e4_gen_range_index_iter(jule::Ptr<_1e4d6ee22_RangeIter>& _4330_it) {
	jule::Str _449_begin = _1e4da121c_iter_begin_label_ident(static_cast<jule::Uintptr>(_4330_it));
	jule::Str _459_next = _1e4da121c_iter_next_label_ident(static_cast<jule::Uintptr>(_4330_it));
	jule::Str _4713_obj = jule::Str("{\n", 2);
	_1c9006426_add_indent();
	_4713_obj+=_1c9006426_indent();
	_4713_obj+=jule::Str("auto ", 5);
	if (_1e2496a24_OPT_COPY && _4330_it->_field_expr->_field_lvalue) {
		_4713_obj+=jule::Str("&", 1);
	}
	_4713_obj+=jule::Str("expr = ", 7);
	_4713_obj+=_1e341b080_gen_expr_model(_4330_it->_field_expr->_field_model);
	_4713_obj+=jule::Str(";\n", 2);
	_4713_obj+=_1c9006426_indent();
	_4713_obj+=jule::Str("auto it = expr.begin();\n", 24);
	_4713_obj+=_1c9006426_indent();
	_4713_obj+=_449_begin;
	_4713_obj+=jule::Str(":;\n", 3);
	_4713_obj+=_1c9006426_indent();
	_4713_obj+=jule::Str("if (it != expr.end()) {\n", 24);
	_1c9006426_add_indent();
	_4713_obj+=_1c9006426_indent();
	if (_4330_it->_field_key_a != nullptr) {
		_4713_obj+=_1c9006426_gen_var_init_expr(_4330_it->_field_key_a,jule::Str("it - expr.begin()", 17));
		_4713_obj+=jule::Str("\n", 1);
		_4713_obj+=_1c9006426_indent();
	}
	if (_4330_it->_field_key_b != nullptr) {
		if (_1e2496a24_OPT_COPY) {
			_4330_it->_field_key_b->_field_reference=_1e24a32e4_iter_expr_is_copy_optimizable(_4330_it->_field_expr,_4330_it->_field_key_b);
		}
		_4713_obj+=_1c9006426_gen_var_init_expr(_4330_it->_field_key_b,jule::Str("*it", 3));
		_4713_obj+=jule::Str("\n", 1);
		_4713_obj+=_1c9006426_indent();
	}
	_4713_obj+=_1e24a32e4_gen_scope(_4330_it->_field_scope);
	_4713_obj+=jule::Str("\n", 1);
	_4713_obj+=_1c9006426_indent();
	_4713_obj+=_459_next;
	_4713_obj+=jule::Str(":;\n", 3);
	_4713_obj+=_1c9006426_indent();
	_4713_obj+=jule::Str("++it;\n", 6);
	_4713_obj+=_1c9006426_indent();
	if (_4330_it->_field_key_a != nullptr) {
		_4713_obj+=_1e4da121c_var_out_ident(_4330_it->_field_key_a);
		_4713_obj+=jule::Str("++;\n", 4);
		_4713_obj+=_1c9006426_indent();
	}
	_4713_obj+=jule::Str("goto ", 5);
	_4713_obj+=_449_begin;
	_4713_obj+=jule::Str(";\n", 2);
	_1c9006426_done_indent();
	_4713_obj+=_1c9006426_indent();
	_4713_obj+=jule::Str("}\n", 2);
	_4713_obj+=_1c9006426_indent();
	_4713_obj+=_1e4da121c_iter_end_label_ident(static_cast<jule::Uintptr>(_4330_it));
	_4713_obj+=jule::Str(":;\n", 3);
	_1c9006426_done_indent();
	_4713_obj+=_1c9006426_indent();
	_4713_obj+=jule::Str("}", 1);
	return _4713_obj;
}



inline jule::Str _1e24a32e4_gen_range_hashmap_iter(jule::Ptr<_1e4d6ee22_RangeIter>& _11332_it) {
	jule::Str _1149_begin = _1e4da121c_iter_begin_label_ident(static_cast<jule::Uintptr>(_11332_it));
	jule::Str _1159_next = _1e4da121c_iter_next_label_ident(static_cast<jule::Uintptr>(_11332_it));
	jule::Str _11713_obj = jule::Str("{\n", 2);
	_1c9006426_add_indent();
	_11713_obj+=_1c9006426_indent();
	_11713_obj+=jule::Str("auto ", 5);
	if (_1e2496a24_OPT_COPY && _11332_it->_field_expr->_field_lvalue) {
		_11713_obj+=jule::Str("&", 1);
	}
	_11713_obj+=jule::Str("expr = ", 7);
	_11713_obj+=_1e341b080_gen_expr_model(_11332_it->_field_expr->_field_model);
	_11713_obj+=jule::Str(";\n", 2);
	_11713_obj+=_1c9006426_indent();
	_11713_obj+=jule::Str("auto it = expr.begin();\n", 24);
	_11713_obj+=_1c9006426_indent();
	_11713_obj+=_1149_begin;
	_11713_obj+=jule::Str(":;\n", 3);
	_11713_obj+=_1c9006426_indent();
	_11713_obj+=jule::Str("if (it != expr.end()) {\n", 24);
	_1c9006426_add_indent();
	_11713_obj+=_1c9006426_indent();
	if (_11332_it->_field_key_a != nullptr) {
		if (_1e2496a24_OPT_COPY) {
			_11332_it->_field_key_a->_field_reference=_1e24a32e4_iter_expr_is_copy_optimizable(_11332_it->_field_expr,_11332_it->_field_key_a);
		}
		_11713_obj+=_1c9006426_gen_var_init_expr(_11332_it->_field_key_a,jule::Str("it->first", 9));
		_11713_obj+=jule::Str("\n", 1);
		_11713_obj+=_1c9006426_indent();
	}
	if (_11332_it->_field_key_b != nullptr) {
		if (_1e2496a24_OPT_COPY) {
			_11332_it->_field_key_b->_field_reference=_1e24a32e4_iter_expr_is_copy_optimizable(_11332_it->_field_expr,_11332_it->_field_key_b);
		}
		_11713_obj+=_1c9006426_gen_var_init_expr(_11332_it->_field_key_b,jule::Str("it->second", 10));
		_11713_obj+=jule::Str("\n", 1);
		_11713_obj+=_1c9006426_indent();
	}
	_11713_obj+=_1e24a32e4_gen_scope(_11332_it->_field_scope);
	_11713_obj+=jule::Str("\n", 1);
	_11713_obj+=_1c9006426_indent();
	_11713_obj+=_1159_next;
	_11713_obj+=jule::Str(":;\n", 3);
	_11713_obj+=_1c9006426_indent();
	_11713_obj+=jule::Str("++it;\n", 6);
	_11713_obj+=_1c9006426_indent();
	_11713_obj+=jule::Str("goto ", 5);
	_11713_obj+=_1149_begin;
	_11713_obj+=jule::Str(";\n", 2);
	_1c9006426_done_indent();
	_11713_obj+=_1c9006426_indent();
	_11713_obj+=jule::Str("}\n", 2);
	_11713_obj+=_1c9006426_indent();
	_11713_obj+=_1e4da121c_iter_end_label_ident(static_cast<jule::Uintptr>(_11332_it));
	_11713_obj+=jule::Str(":;\n", 3);
	_1c9006426_done_indent();
	_11713_obj+=_1c9006426_indent();
	_11713_obj+=jule::Str("}", 1);
	return _11713_obj;
}



inline jule::Str _1e24a32e4_gen_if(jule::Ptr<_1e4d6ee22_If> _18115_i) {
	jule::Str _18213_obj = jule::Str("if (", 4);
	_18213_obj+=_1e341b080_gen_expr(_18115_i->_field_expr);
	_18213_obj+=jule::Str(") ", 2);
	_18213_obj+=_1e24a32e4_gen_scope(_18115_i->_field_scope);
	return _18213_obj;
}



inline jule::Str _1e24a32e4_gen_conditional(jule::Ptr<_1e4d6ee22_Conditional> _18924_c) {
	jule::Str _19013_obj = _1e24a32e4_gen_if(_18924_c->_field_elifs[0LL]);
	{
		auto expr = _18924_c->_field_elifs.slice(1LL);
		auto it = expr.begin();
		_iter_begin_4739751520:;
		if (it != expr.end()) {
			jule::Ptr<_1e4d6ee22_If> _1e24a32e4_elif = *it;
			{
				_19013_obj+=jule::Str(" else ", 6);
				_19013_obj+=_1e24a32e4_gen_if(_1e24a32e4_elif);
			}
			_iter_next_4739751520:;
			++it;
			goto _iter_begin_4739751520;
		}
		_iter_end_4739751520:;
	}
	if (_18924_c->_field_default != nullptr) {
		_19013_obj+=jule::Str(" else ", 6);
		_19013_obj+=_1e24a32e4_gen_scope(_18924_c->_field_default->_field_scope);
	}
	return _19013_obj;
}



inline jule::Str _1e24a32e4_gen_inf_iter(jule::Ptr<_1e4d6ee22_InfIter> _20521_it) {
	jule::Str _20613_obj = jule::Str("for (;;) {\n", 11);
	_1c9006426_add_indent();
	_20613_obj+=_1c9006426_indent();
	_20613_obj+=_1e24a32e4_gen_scope(_20521_it->_field_scope);
	_1c9006426_done_indent();
	jule::Str _2139_indent = _1c9006426_indent();
	_20613_obj+=jule::Str("\n", 1);
	_20613_obj+=_2139_indent;
	_20613_obj+=_1e4da121c_iter_next_label_ident(static_cast<jule::Uintptr>(_20521_it));
	_20613_obj+=jule::Str(":;\n", 3);
	_20613_obj+=_2139_indent;
	_20613_obj+=jule::Str("}\n", 2);
	_20613_obj+=_2139_indent;
	_20613_obj+=_1e4da121c_iter_end_label_ident(static_cast<jule::Uintptr>(_20521_it));
	_20613_obj+=jule::Str(":;", 2);
	return _20613_obj;
}



inline jule::Str _1e24a32e4_gen_while_iter(jule::Ptr<_1e4d6ee22_WhileIter> _22823_it) {
	jule::Str _22913_obj = jule::Str();
	if ((_22823_it->_field_expr != nullptr) && (_22823_it->_field_next == nullptr)) {
		_22913_obj+=jule::Str("while (", 7);
		_22913_obj+=_1e341b080_gen_expr(_22823_it->_field_expr);
		_22913_obj+=jule::Str(") {\n", 4);
	} else {
		_22913_obj+=jule::Str("for (; ", 7);
		if (_22823_it->_field_expr != nullptr) {
			_22913_obj+=_1e341b080_gen_expr(_22823_it->_field_expr);
		}
		_22913_obj+=jule::Str("; ", 2);
		if (_22823_it->_field_next != nullptr) {
			jule::Str _24117_st = _1e24a32e4_gen_st(_22823_it->_field_next);
			_22913_obj+=_24117_st.slice(0LL,_24117_st.len() - 1LL);
		}
		_22913_obj+=jule::Str(") {\n", 4);
	}
	_1c9006426_add_indent();
	_22913_obj+=_1c9006426_indent();
	_22913_obj+=_1e24a32e4_gen_scope(_22823_it->_field_scope);
	_22913_obj+=jule::Str("\n", 1);
	_1c9006426_done_indent();
	_22913_obj+=_1c9006426_indent();
	_22913_obj+=_1e4da121c_iter_next_label_ident(static_cast<jule::Uintptr>(_22823_it));
	_22913_obj+=jule::Str(":;\n", 3);
	_22913_obj+=_1c9006426_indent();
	_22913_obj+=jule::Str("}\n", 2);
	_22913_obj+=_1c9006426_indent();
	_22913_obj+=_1e4da121c_iter_end_label_ident(static_cast<jule::Uintptr>(_22823_it));
	_22913_obj+=jule::Str(":;", 2);
	return _22913_obj;
}



inline jule::Str _1e24a32e4_gen_range_iter(jule::Ptr<_1e4d6ee22_RangeIter> _26423_it) {
	{
		if (!((_26423_it->_field_expr->_field_kind->_method_slc() != nullptr))) { goto _case_end_4739777568; }
		_case_begin_4739777568:;
		{
			return _1e24a32e4_gen_range_index_iter(_26423_it);
		}
		goto _match_end_4739772432;
		_case_end_4739777568:;
		if (!((_26423_it->_field_expr->_field_kind->_method_arr() != nullptr))) { goto _case_end_4739777200; }
		_case_begin_4739777200:;
		{
			return _1e24a32e4_gen_range_index_iter(_26423_it);
		}
		goto _match_end_4739772432;
		_case_end_4739777200:;
		if (!((_26423_it->_field_expr->_field_kind->_method_map() != nullptr))) { goto _case_end_4739777296; }
		_case_begin_4739777296:;
		{
			return _1e24a32e4_gen_range_hashmap_iter(_26423_it);
		}
		goto _match_end_4739772432;
		_case_end_4739777296:;
		_case_begin_4739772560:;
		{
			return _1e24a32e4_gen_range_index_iter(_26423_it);
		}
		goto _match_end_4739772432;
		_case_end_4739772560:;
		_match_end_4739772432:;
	}
}



inline jule::Str _1e24a32e4_gen_cont(jule::Ptr<_1e4d6ee22_ContSt> _27313_c) {
	jule::Str _27413_obj = jule::Str("goto ", 5);
	_27413_obj+=_1e4da121c_iter_next_label_ident(_27313_c->_field_it);
	_27413_obj+=jule::Str(";", 1);
	return _27413_obj;
}



inline jule::Str _1e24a32e4_gen_label(jule::Ptr<_1e4d6ee22_Label> _28014_l) {
	return _1e4da121c_label_ident(_28014_l->_field_ident) + jule::Str(":;", 2);
}



inline jule::Str _1e24a32e4_gen_goto(jule::Ptr<_1e4d6ee22_GotoSt> _28413_gt) {
	jule::Str _28513_obj = jule::Str("goto ", 5);
	_28513_obj+=_1e4da121c_label_ident(_28413_gt->_field_ident);
	_28513_obj+=jule::Str(";", 1);
	return _28513_obj;
}



inline jule::Str _1e24a32e4_gen_postfix(jule::Ptr<_1e4d6ee22_Postfix> _29120_p) {
	jule::Str _29213_obj = jule::Str("(", 1);
	_29213_obj+=_1e341b080_gen_expr(_29120_p->_field_expr);
	_29213_obj+=jule::Str(")", 1);
	_29213_obj+=_29120_p->_field_op;
	_29213_obj+=jule::Str(";", 1);
	return _29213_obj;
}



inline jule::Str _1e24a32e4_gen_div_by_zero_assign(jule::Ptr<_1e4d6ee22_Assign> _30031_a) {
	jule::Str _30113_obj = _1e341b080_gen_expr(_30031_a->_field_l);
	_30113_obj+=jule::Str(" = ", 3);
	_30113_obj+=_1e341b080_gen_div_by_zero_binop_expr_model(_30031_a->_field_op.slice(0LL,1LL),_30031_a->_field_l,_30031_a->_field_r);
	_30113_obj+=jule::Str(";", 1);
	return _30113_obj;
}



inline jule::Str _1e24a32e4_gen_assign(jule::Ptr<_1e4d6ee22_Assign> _30819_a) {
	{
		auto &_match_expr{ _30819_a->_field_op };
		if (!((jule::Str("/=", 2)) == _match_expr || (jule::Str("%=", 2)) == _match_expr)) { goto _case_end_4739796240; }
		_case_begin_4739796240:;
		{
			return _1e24a32e4_gen_div_by_zero_assign(_30819_a);
		}
		goto _match_end_4739796640;
		_case_end_4739796240:;
		_match_end_4739796640:;
	}
	jule::Str _31513_obj = _1e341b080_gen_expr(_30819_a->_field_l);
	_31513_obj+=_30819_a->_field_op;
	if (_1e2496a24_OPT_APPEND) {
		{
			auto &_match_expr{ _30819_a->_field_r };
			if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_BuiltinAppendCallExprModel>>())) { goto _case_end_4739801456; }
			_case_begin_4739801456:;
			{
				jule::Ptr<_1e4d70a6b_BuiltinAppendCallExprModel> _32021_model = _30819_a->_field_r.operator jule::Ptr<_1e4d70a6b_BuiltinAppendCallExprModel>();
				jule::Str _32118_expr;
				jule::Bool _32124_optimized;
				std::tie(_32118_expr,_32124_optimized) = _1e341b080_gen_builtin_append_call_expr_model_assign(_30819_a->_field_l,_32021_model);
				if (_32124_optimized) {
					return _32118_expr;
				}
				_31513_obj+=_32118_expr;
			}
			goto _match_end_4739800496;
			_case_end_4739801456:;
			_case_begin_4739797040:;
			{
				_31513_obj+=_1e341b080_gen_expr(_30819_a->_field_r);
			}
			goto _match_end_4739800496;
			_case_end_4739797040:;
			_match_end_4739800496:;
		}
	} else {
		_31513_obj+=_1e341b080_gen_expr(_30819_a->_field_r);
	}
	_31513_obj+=jule::Str(";", 1);
	return _31513_obj;
}



inline jule::Str _1e24a32e4_gen_multi_assign(jule::Ptr<_1e4d6ee22_MultiAssign> _33725_a) {
	jule::Str _33813_obj = jule::Str("std::tie(", 9);
	{
		auto &expr = _33725_a->_field_l;
		auto it = expr.begin();
		_iter_begin_4739808032:;
		if (it != expr.end()) {
			jule::Any _1e24a32e4_l = *it;
			{
				if (_1e24a32e4_l == nullptr) {
					_33813_obj+=jule::Str("std::ignore", 11);
					_33813_obj+=jule::Str(",", 1);
				} else {
					_33813_obj+=_1e341b080_gen_expr(_1e24a32e4_l);
					_33813_obj+=jule::Str(",", 1);
				}
			}
			_iter_next_4739808032:;
			++it;
			goto _iter_begin_4739808032;
		}
		_iter_end_4739808032:;
	}
	_33813_obj=_33813_obj.slice(0LL,_33813_obj.len() - 1LL);
	_33813_obj+=jule::Str(") = ", 4);
	_33813_obj+=_1e341b080_gen_expr(_33725_a->_field_r);
	_33813_obj+=jule::Str(";", 1);
	return _33813_obj;
}



inline jule::Str _1e24a32e4_gen_case(jule::Ptr<_1e4d6ee22_Match> _35717_m,jule::Ptr<_1e4d6ee22_Case> _35732_c) {
	
	jule::Str _3609_end = _1e4da121c_case_end_label_ident(static_cast<jule::Uintptr>(_35732_c));
	jule::Str _36113_obj = jule::Str();
	if ((_35732_c->_field_exprs.len() > 0LL) && (!(_35717_m->_method_is_generic_type_match()))) {
		_36113_obj+=jule::Str("if (!(", 6);
		{
			auto &expr = _35732_c->_field_exprs;
			auto it = expr.begin();
			_iter_begin_4739817888:;
			if (it != expr.end()) {
				jule::Int _1e24a32e4_i = it - expr.begin();
				jule::Any _1e24a32e4_expr = *it;
				{
					{
						if (!(((!(_35717_m->_field_type_match))))) { goto _case_end_4739821264; }
						_case_begin_4739821264:;
						{
							_36113_obj+=jule::Str("(", 1);
							_36113_obj+=_1e341b080_gen_expr(_1e24a32e4_expr);
							_36113_obj+=jule::Str(")", 1);
							if (_35717_m->_field_expr->_method_is_const()) {
								if ((!(_35717_m->_field_expr->_field_constant->_method_is_bool())) || (!(_35717_m->_field_expr->_field_constant->_method_read_bool()))) {
									_36113_obj+=jule::Str(" == ", 4);
									_36113_obj+=_1e341b080_gen_expr_model(_35717_m->_field_expr->_field_model);
								}
							} else {
								_36113_obj+=jule::Str(" == ", 4);
								_36113_obj+=jule::Str("_match_expr", 11);
							}
						}
						goto _match_end_4739820304;
						_case_end_4739821264:;
						_case_begin_4739820480:;
						{
							_36113_obj+=jule::Str("_match_expr", 11);
							_36113_obj+=jule::Str(".type_is<", 9);
							_36113_obj+=_1e341b080_gen_expr(_1e24a32e4_expr);
							_36113_obj+=jule::Str(">()", 3);
						}
						goto _match_end_4739820304;
						_case_end_4739820480:;
						_match_end_4739820304:;
					}
					if ((_1e24a32e4_i + 1LL) < _35732_c->_field_exprs.len()) {
						_36113_obj+=jule::Str(" || ", 4);
					}
				}
				_iter_next_4739817888:;
				++it;
				_1e24a32e4_i++;
				goto _iter_begin_4739817888;
			}
			_iter_end_4739817888:;
		}
		_36113_obj+=jule::Str(")) { goto ", 10);
		_36113_obj+=_3609_end;
		_36113_obj+=jule::Str("; }\n", 4);
	}
	if (_35732_c->_field_scope->_field_stmts.len() > 0LL) {
		_36113_obj+=_1c9006426_indent();
		_36113_obj+=_1e4da121c_case_begin_label_ident(static_cast<jule::Uintptr>(_35732_c));
		_36113_obj+=jule::Str(":;\n", 3);
		_36113_obj+=_1c9006426_indent();
		_36113_obj+=_1e24a32e4_gen_scope(_35732_c->_field_scope);
		_36113_obj+=jule::Str("\n", 1);
	}
	_36113_obj+=_1c9006426_indent();
	_36113_obj+=jule::Str("goto ", 5);
	_36113_obj+=_1e4da121c_match_end_label_ident(static_cast<jule::Uintptr>(_35717_m)) + jule::Str(";", 1);
	_36113_obj+=jule::Str("\n", 1);
	_36113_obj+=_1c9006426_indent();
	_36113_obj+=_3609_end;
	_36113_obj+=jule::Str(":;", 2);
	return _36113_obj;
}



inline jule::Str _1e24a32e4_gen_match(jule::Ptr<_1e4d6ee22_Match> _41718_m) {
	if ((_41718_m->_field_cases.len() == 0LL) && (_41718_m->_field_default == nullptr)) {
		return jule::Str();
	}
	jule::Bool _4229_generic_type_match = _41718_m->_method_is_generic_type_match();
	if (_4229_generic_type_match && ((_41718_m->_field_default == nullptr) || (_41718_m->_field_default->_field_scope->_field_stmts.len() == 0LL))) {
		return jule::Str();
	}
	jule::Str _42713_obj = jule::Str("{\n", 2);
	_1c9006426_add_indent();
	_42713_obj+=_1c9006426_indent();
	if ((!(_4229_generic_type_match)) && (!(_41718_m->_field_expr->_method_is_const()))) {
		if (_41718_m->_field_expr->_field_lvalue && _1e2496a24_OPT_COPY) {
			_42713_obj+=jule::Str("auto &_match_expr{ ", 19);
		} else {
			_42713_obj+=jule::Str("auto _match_expr{ ", 18);
		}
		_42713_obj+=_1e341b080_gen_expr(_41718_m->_field_expr->_field_model);
		_42713_obj+=jule::Str(" };\n", 4);
		_42713_obj+=_1c9006426_indent();
	}
	if (_41718_m->_field_cases.len() > 0LL) {
		_42713_obj+=_1e24a32e4_gen_case(_41718_m,_41718_m->_field_cases[0LL]);
		{
			auto expr = _41718_m->_field_cases.slice(1LL);
			auto it = expr.begin();
			_iter_begin_4739849680:;
			if (it != expr.end()) {
				jule::Ptr<_1e4d6ee22_Case> _1e24a32e4_c = *it;
				{
					_42713_obj+=jule::Str("\n", 1);
					_42713_obj+=_1c9006426_indent();
					_42713_obj+=_1e24a32e4_gen_case(_41718_m,_1e24a32e4_c);
				}
				_iter_next_4739849680:;
				++it;
				goto _iter_begin_4739849680;
			}
			_iter_end_4739849680:;
		}
	}
	if (_41718_m->_field_default != nullptr) {
		_42713_obj+=jule::Str("\n", 1);
		_42713_obj+=_1e24a32e4_gen_case(_41718_m,_41718_m->_field_default);
	}
	_42713_obj+=jule::Str("\n", 1);
	_42713_obj+=_1c9006426_indent();
	_42713_obj+=_1e4da121c_match_end_label_ident(static_cast<jule::Uintptr>(_41718_m));
	_42713_obj+=jule::Str(":;", 2);
	_42713_obj+=jule::Str("\n", 1);
	_1c9006426_done_indent();
	_42713_obj+=_1c9006426_indent();
	_42713_obj+=jule::Str("}", 1);
	return _42713_obj;
}



inline jule::Str _1e24a32e4_gen_fall_st(jule::Ptr<_1e4d6ee22_FallSt> _47316_f) {
	jule::Str _47413_obj = jule::Str("goto ", 5);
	_47413_obj+=_1e4da121c_case_begin_label_ident(_47316_f->_field_dest_case);
	_47413_obj+=jule::Str(";", 1);
	return _47413_obj;
}



inline jule::Str _1e24a32e4_gen_break_st(jule::Ptr<_1e4d6ee22_BreakSt> _48017_b) {
	jule::Str _48113_obj = jule::Str("goto ", 5);
	if (_48017_b->_field_it != 0LL) {
		_48113_obj+=_1e4da121c_iter_end_label_ident(_48017_b->_field_it);
	} else {
		_48113_obj+=_1e4da121c_match_end_label_ident(_48017_b->_field_mtch);
	}
	_48113_obj+=jule::Str(";", 1);
	return _48113_obj;
}



inline jule::Str _1e24a32e4_gen_ret_vars(jule::Ptr<_1e4d6ee22_RetSt> _49221_r) {
	jule::Str _49313_obj = jule::Str();
	{
		auto &expr = _49221_r->_field_vars;
		auto it = expr.begin();
		_iter_begin_4739863424:;
		if (it != expr.end()) {
			jule::Ptr<_1e50b0492_Var> _1e24a32e4_v = *it;
			{
				if (_1e3bad8dd_is_ignore_ident(_1e24a32e4_v->_field_ident)) {
					_49313_obj+=_1e341b080_get_init_expr(_1e24a32e4_v->_field_kind->_field_kind);
				} else {
					_49313_obj+=_1e4da121c_var_out_ident(_1e24a32e4_v);
				}
				_49313_obj+=jule::Str(",", 1);
			}
			_iter_next_4739863424:;
			++it;
			goto _iter_begin_4739863424;
		}
		_iter_end_4739863424:;
	}
	_49313_obj=_49313_obj.slice(0LL,_49313_obj.len() - 1LL);
	if (_49221_r->_field_vars.len() > 1LL) {
		_49313_obj=jule::Str("return std::make_tuple(", 23) + _49313_obj;
		_49313_obj+=jule::Str(")", 1);
	} else {
		_49313_obj=jule::Str("return ", 7) + _49313_obj;
	}
	_49313_obj+=jule::Str(";", 1);
	return _49313_obj;
}



inline jule::Str _1e24a32e4_gen_ret_expr_tuple(jule::Ptr<_1e4d6ee22_RetSt> _51727_r) {
	{
		auto &_match_expr{ _51727_r->_field_expr };
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_FnCallExprModel>>())) { goto _case_end_4739863984; }
		_case_begin_4739863984:;
		{
			jule::Str _52017_obj = jule::Str("return ", 7);
			_52017_obj+=_1e341b080_gen_expr_model(_51727_r->_field_expr);
			_52017_obj+=jule::Str(";", 1);
			return _52017_obj;
		}
		goto _match_end_4739869952;
		_case_end_4739863984:;
		_match_end_4739869952:;
	}
	jule::Slice<jule::Ptr<_1e50ac4b1_Data>> _52613_datas = _51727_r->_field_expr.operator jule::Ptr<_1e4d70a6b_TupleExprModel>()->_field_datas;
	jule::Str _52713_obj = jule::Str();
	{
		auto &expr = _51727_r->_field_vars;
		auto it = expr.begin();
		_iter_begin_4739875840:;
		if (it != expr.end()) {
			jule::Int _1e24a32e4_i = it - expr.begin();
			jule::Ptr<_1e50b0492_Var> _1e24a32e4_v = *it;
			{
				if (_1e3bad8dd_is_ignore_ident(_1e24a32e4_v->_field_ident)) {
					goto _iter_next_4739875840;
				}
				jule::Any _53317_model = _52613_datas[_1e24a32e4_i]->_field_model;
				if (_53317_model == _1e24a32e4_v) {
					goto _iter_next_4739875840;
				}
				jule::Str _53813_ident = _1e4da121c_var_out_ident(_1e24a32e4_v);
				_52713_obj+=_53813_ident;
				_52713_obj+=jule::Str(" = ", 3);
				_52713_obj+=_1e341b080_gen_expr(_53317_model);
				_52713_obj+=jule::Str(";\n", 2);
				_52713_obj+=_1c9006426_indent();
			}
			_iter_next_4739875840:;
			++it;
			_1e24a32e4_i++;
			goto _iter_begin_4739875840;
		}
		_iter_end_4739875840:;
	}
	_52713_obj+=jule::Str("return std::make_tuple(", 23);
	{
		auto &expr = _52613_datas;
		auto it = expr.begin();
		_iter_begin_4739880784:;
		if (it != expr.end()) {
			jule::Int _1e24a32e4_i = it - expr.begin();
			jule::Ptr<_1e50ac4b1_Data> _1e24a32e4_d = *it;
			{
				jule::Ptr<_1e50b0492_Var> _54817_v = _51727_r->_field_vars[_1e24a32e4_i];
				if (_1e3bad8dd_is_ignore_ident(_54817_v->_field_ident)) {
					_52713_obj+=_1e341b080_gen_expr(_1e24a32e4_d->_field_model);
				} else {
					_52713_obj+=_1e4da121c_var_out_ident(_54817_v);
				}
				_52713_obj+=jule::Str(",", 1);
			}
			_iter_next_4739880784:;
			++it;
			_1e24a32e4_i++;
			goto _iter_begin_4739880784;
		}
		_iter_end_4739880784:;
	}
	_52713_obj=_52713_obj.slice(0LL,_52713_obj.len() - 1LL);
	_52713_obj+=jule::Str(");", 2);
	return _52713_obj;
}



inline jule::Str _1e24a32e4_gen_ret_expr(jule::Ptr<_1e4d6ee22_RetSt> _56321_r) {
	if (_56321_r->_field_vars.len() == 0LL) {
		jule::Str _56517_obj = jule::Str("return ", 7);
		_56517_obj+=_1e341b080_gen_expr(_56321_r->_field_expr);
		_56517_obj+=jule::Str(";", 1);
		return _56517_obj;
	}
	if (_56321_r->_field_vars.len() > 1LL) {
		return _1e24a32e4_gen_ret_expr_tuple(_56321_r);
	}
	jule::Ptr<_1e50b0492_Var> _57513_v = _56321_r->_field_vars[0LL];
	if ((!(_1e3bad8dd_is_ignore_ident(_57513_v->_field_ident))) && (_56321_r->_field_expr != _57513_v)) {
		jule::Str _57813_ident = _1e4da121c_var_out_ident(_57513_v);
		jule::Str _57917_obj = _57813_ident;
		_57917_obj+=jule::Str(" = ", 3);
		_57917_obj+=_1e341b080_gen_expr(_56321_r->_field_expr);
		_57917_obj+=jule::Str(";\n", 2);
		_57917_obj+=_1c9006426_indent();
		_57917_obj+=jule::Str("return ", 7);
		_57917_obj+=_57813_ident;
		_57917_obj+=jule::Str(";", 1);
		return _57917_obj;
	}
	jule::Str _59013_obj = jule::Str("return ", 7);
	_59013_obj+=_1e341b080_gen_expr(_56321_r->_field_expr);
	_59013_obj+=jule::Str(";", 1);
	return _59013_obj;
}



inline jule::Str _1e24a32e4_gen_ret_st(jule::Ptr<_1e4d6ee22_RetSt> _59619_r) {
	if ((_59619_r->_field_expr == nullptr) && (_59619_r->_field_vars.len() == 0LL)) {
		return jule::Str("return;", 7);
	}
	if (_59619_r->_field_expr == nullptr) {
		return _1e24a32e4_gen_ret_vars(_59619_r);
	}
	return _1e24a32e4_gen_ret_expr(_59619_r);
}



inline jule::Str _1e24a32e4_gen_ret_st_with_defaults(jule::Ptr<_1e6420856_TypeKind> _60833_result) {
	jule::Str _60913_obj = jule::Str("return ", 7);
	if (_60833_result->_method_tup() != nullptr) {
		_60913_obj+=jule::Str("std::make_tuple(", 16);
		{
			auto &expr = _60833_result->_method_tup()->_field_types;
			auto it = expr.begin();
			_iter_begin_4739908448:;
			if (it != expr.end()) {
				jule::Ptr<_1e6420856_TypeKind> _1e24a32e4_t = *it;
				{
					_60913_obj+=_1e341b080_get_init_expr(_1e24a32e4_t);
					_60913_obj+=jule::Str(",", 1);
				}
				_iter_next_4739908448:;
				++it;
				goto _iter_begin_4739908448;
			}
			_iter_end_4739908448:;
		}
		_60913_obj=_60913_obj.slice(0LL,_60913_obj.len() - 1LL);
		_60913_obj+=jule::Str(")", 1);
	} else {
		_60913_obj+=_1e341b080_get_init_expr(_60833_result);
	}
	_60913_obj+=jule::Str(";", 1);
	return _60913_obj;
}



inline jule::Str _1e24a32e4_gen_recover(jule::Ptr<_1e4d6ee22_Recover> _62520_r) {
	jule::Str _62613_obj = jule::Str("try ", 4);
	_62613_obj+=_1e24a32e4_gen_scope(_62520_r->_field_scope);
	_62613_obj+=jule::Str(" catch(jule::Exception e) ", 26);
	if (_62520_r->_field_handler->_method_is_anon()) {
		_1c9006426_add_indent();
		_62613_obj+=jule::Str("{\n", 2);
		_62613_obj+=_1c9006426_indent();
		_62613_obj+=_1e341b080_gen_expr(_62520_r->_field_handler_expr);
		_62613_obj+=jule::Str("(jule::exception_to_error(e));", 30);
		if ((!(_62520_r->_field_scope_owner->_field_decl->_method_is_void()))) {
			_62613_obj+=jule::Str("\n", 1);
			_62613_obj+=_1c9006426_indent();
			_1c9006426_done_indent();
			_62613_obj+=_1e24a32e4_gen_ret_st_with_defaults(_62520_r->_field_scope_owner->_field_result);
		} else {
			_1c9006426_done_indent();
		}
		_62613_obj+=jule::Str("\n", 1);
		_62613_obj+=_1c9006426_indent();
		_62613_obj+=jule::Str("}", 1);
	} else {
		_62613_obj+=jule::Str("{\n", 2);
		_1c9006426_add_indent();
		_62613_obj+=_1c9006426_indent();
		_62613_obj+=_1e341b080_gen_expr(_62520_r->_field_handler_expr);
		_62613_obj+=jule::Str("(jule::exception_to_error(e));\n", 31);
		_62613_obj+=_1c9006426_indent();
		if (_62520_r->_field_scope_owner->_field_decl->_method_is_void()) {
			_1c9006426_done_indent();
			_62613_obj+=jule::Str(" }", 2);
		} else {
			_62613_obj+=_1e24a32e4_gen_ret_st_with_defaults(_62520_r->_field_scope_owner->_field_result);
			_62613_obj+=jule::Str("\n", 1);
			_1c9006426_done_indent();
			_62613_obj+=_1c9006426_indent();
			_62613_obj+=jule::Str("}", 1);
		}
	}
	return _62613_obj;
}



inline jule::Str _1e24a32e4_gen_data_expr(jule::Ptr<_1e50ac4b1_Data> _67422_d) {
	return _1e341b080_gen_expr(_67422_d->_field_model) + jule::Str(";", 1);
}



inline jule::Str _1e24a32e4_gen_scope_var(jule::Ptr<_1e50b0492_Var> _67822_v) {
	if (_67822_v->_field_constant) {
		return jule::Str();
	}
	return _1c9006426_gen_var(_67822_v);
}



inline jule::Str _1e24a32e4_gen_st(jule::Any _68615_st) {
	{
		auto &_match_expr{ _68615_st };
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_Scope>>())) { goto _case_end_4739932416; }
		_case_begin_4739932416:;
		{
			return _1e24a32e4_gen_scope(_68615_st.operator jule::Ptr<_1e4d6ee22_Scope>());
		}
		goto _match_end_4739930976;
		_case_end_4739932416:;
		if (!(_match_expr.type_is<jule::Ptr<_1e50b0492_Var>>())) { goto _case_end_4739932512; }
		_case_begin_4739932512:;
		{
			return _1e24a32e4_gen_scope_var(_68615_st.operator jule::Ptr<_1e50b0492_Var>());
		}
		goto _match_end_4739930976;
		_case_end_4739932512:;
		if (!(_match_expr.type_is<jule::Ptr<_1e50ac4b1_Data>>())) { goto _case_end_4739932672; }
		_case_begin_4739932672:;
		{
			return _1e24a32e4_gen_data_expr(_68615_st.operator jule::Ptr<_1e50ac4b1_Data>());
		}
		goto _match_end_4739930976;
		_case_end_4739932672:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_Conditional>>())) { goto _case_end_4739932768; }
		_case_begin_4739932768:;
		{
			return _1e24a32e4_gen_conditional(_68615_st.operator jule::Ptr<_1e4d6ee22_Conditional>());
		}
		goto _match_end_4739930976;
		_case_end_4739932768:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_InfIter>>())) { goto _case_end_4739932864; }
		_case_begin_4739932864:;
		{
			return _1e24a32e4_gen_inf_iter(_68615_st.operator jule::Ptr<_1e4d6ee22_InfIter>());
		}
		goto _match_end_4739930976;
		_case_end_4739932864:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_WhileIter>>())) { goto _case_end_4739931472; }
		_case_begin_4739931472:;
		{
			return _1e24a32e4_gen_while_iter(_68615_st.operator jule::Ptr<_1e4d6ee22_WhileIter>());
		}
		goto _match_end_4739930976;
		_case_end_4739931472:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_RangeIter>>())) { goto _case_end_4739931568; }
		_case_begin_4739931568:;
		{
			return _1e24a32e4_gen_range_iter(_68615_st.operator jule::Ptr<_1e4d6ee22_RangeIter>());
		}
		goto _match_end_4739930976;
		_case_end_4739931568:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_ContSt>>())) { goto _case_end_4739931680; }
		_case_begin_4739931680:;
		{
			return _1e24a32e4_gen_cont(_68615_st.operator jule::Ptr<_1e4d6ee22_ContSt>());
		}
		goto _match_end_4739930976;
		_case_end_4739931680:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_Label>>())) { goto _case_end_4739932960; }
		_case_begin_4739932960:;
		{
			return _1e24a32e4_gen_label(_68615_st.operator jule::Ptr<_1e4d6ee22_Label>());
		}
		goto _match_end_4739930976;
		_case_end_4739932960:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_GotoSt>>())) { goto _case_end_4739933056; }
		_case_begin_4739933056:;
		{
			return _1e24a32e4_gen_goto(_68615_st.operator jule::Ptr<_1e4d6ee22_GotoSt>());
		}
		goto _match_end_4739930976;
		_case_end_4739933056:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_Postfix>>())) { goto _case_end_4739933152; }
		_case_begin_4739933152:;
		{
			return _1e24a32e4_gen_postfix(_68615_st.operator jule::Ptr<_1e4d6ee22_Postfix>());
		}
		goto _match_end_4739930976;
		_case_end_4739933152:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_Assign>>())) { goto _case_end_4739933248; }
		_case_begin_4739933248:;
		{
			return _1e24a32e4_gen_assign(_68615_st.operator jule::Ptr<_1e4d6ee22_Assign>());
		}
		goto _match_end_4739930976;
		_case_end_4739933248:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_MultiAssign>>())) { goto _case_end_4739933344; }
		_case_begin_4739933344:;
		{
			return _1e24a32e4_gen_multi_assign(_68615_st.operator jule::Ptr<_1e4d6ee22_MultiAssign>());
		}
		goto _match_end_4739930976;
		_case_end_4739933344:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_Match>>())) { goto _case_end_4739933456; }
		_case_begin_4739933456:;
		{
			return _1e24a32e4_gen_match(_68615_st.operator jule::Ptr<_1e4d6ee22_Match>());
		}
		goto _match_end_4739930976;
		_case_end_4739933456:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_FallSt>>())) { goto _case_end_4739933568; }
		_case_begin_4739933568:;
		{
			return _1e24a32e4_gen_fall_st(_68615_st.operator jule::Ptr<_1e4d6ee22_FallSt>());
		}
		goto _match_end_4739930976;
		_case_end_4739933568:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_BreakSt>>())) { goto _case_end_4739933680; }
		_case_begin_4739933680:;
		{
			return _1e24a32e4_gen_break_st(_68615_st.operator jule::Ptr<_1e4d6ee22_BreakSt>());
		}
		goto _match_end_4739930976;
		_case_end_4739933680:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_RetSt>>())) { goto _case_end_4739933792; }
		_case_begin_4739933792:;
		{
			return _1e24a32e4_gen_ret_st(_68615_st.operator jule::Ptr<_1e4d6ee22_RetSt>());
		}
		goto _match_end_4739930976;
		_case_end_4739933792:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d6ee22_Recover>>())) { goto _case_end_4739933904; }
		_case_begin_4739933904:;
		{
			return _1e24a32e4_gen_recover(_68615_st.operator jule::Ptr<_1e4d6ee22_Recover>());
		}
		goto _match_end_4739930976;
		_case_end_4739933904:;
		_case_begin_4739928144:;
		{
			return jule::Str("<unimplemented_stmt>", 20);
		}
		goto _match_end_4739930976;
		_case_end_4739928144:;
		_match_end_4739930976:;
	}
}



inline jule::Str _1e24a32e4_gen_scope(jule::Ptr<_1e4d6ee22_Scope> _71118_s) {
	jule::Str _71213_obj = jule::Str("{\n", 2);
	_1c9006426_add_indent();
	{
		auto &expr = _71118_s->_field_stmts;
		auto it = expr.begin();
		_iter_begin_4739960000:;
		if (it != expr.end()) {
			jule::Any _1e24a32e4_st = *it;
			{
				_71213_obj+=_1c9006426_indent();
				_71213_obj+=_1e24a32e4_gen_st(_1e24a32e4_st);
				_71213_obj+=jule::Str("\n", 1);
			}
			_iter_next_4739960000:;
			++it;
			goto _iter_begin_4739960000;
		}
		_iter_end_4739960000:;
	}
	_1c9006426_done_indent();
	_71213_obj+=_1c9006426_indent();
	_71213_obj+=jule::Str("}", 1);
	if (_71118_s->_field_deferred) {
		_71213_obj=(jule::Str("__JULE_DEFER(", 13) + _71213_obj) + jule::Str(");", 2);
	}
	return _71213_obj;
}



inline jule::Str _1e24a32e4_gen_fn_scope(jule::Ptr<_1e4b15a20_FnIns> _73321_f) {
	if (_73321_f->_field_owner != nullptr) {
		return _1e24a32e4_gen_method_scope(_73321_f);
	}
	return _1e24a32e4_gen_scope(_73321_f->_field_scope);
}



inline jule::Str _1e24a32e4_gen_method_scope(jule::Ptr<_1e4b15a20_FnIns> _74225_f) {
	return _1e24a32e4_gen_scope(_74225_f->_field_scope);
}



inline jule::Str _1e341b080_concat_all_parts(jule::Slice<_1e3bad8dd_Token> _7821_parts) {
	jule::Str _7913_s = jule::Str();
	{
		auto &expr = _7821_parts;
		auto it = expr.begin();
		_iter_begin_4739969104:;
		if (it != expr.end()) {
			_1e3bad8dd_Token &_1e341b080_part = *it;
			{
				_7913_s+=_1e341b080_part._field_kind;
			}
			_iter_next_4739969104:;
			++it;
			goto _iter_begin_4739969104;
		}
		_iter_end_4739969104:;
	}
	return _7913_s;
}



inline jule::Str _1e341b080_get_accessor(jule::Ptr<_1e6420856_TypeKind>& _8622_t) {
	if ((_8622_t->_method_sptr() != nullptr) || (_8622_t->_method_ptr() != nullptr)) {
		return jule::Str("->", 2);
	}
	return jule::Str(".", 1);
}



inline jule::Str _1e341b080_decompose_common_esq(jule::U8 _9325_b) {
	{
		auto &_match_expr{ _9325_b };
		if (!(('\\') == _match_expr)) { goto _case_end_4739975632; }
		_case_begin_4739975632:;
		{
			return jule::Str("\\\\", 2);
		}
		goto _match_end_4739973120;
		_case_end_4739975632:;
		if (!(('\'') == _match_expr)) { goto _case_end_4739975200; }
		_case_begin_4739975200:;
		{
			return jule::Str("'", 1);
		}
		goto _match_end_4739973120;
		_case_end_4739975200:;
		if (!(('\"') == _match_expr)) { goto _case_end_4739974832; }
		_case_begin_4739974832:;
		{
			return jule::Str("\\\"", 2);
		}
		goto _match_end_4739973120;
		_case_end_4739974832:;
		if (!(('\a') == _match_expr)) { goto _case_end_4739974928; }
		_case_begin_4739974928:;
		{
			return jule::Str("\\a", 2);
		}
		goto _match_end_4739973120;
		_case_end_4739974928:;
		if (!(('\b') == _match_expr)) { goto _case_end_4739975024; }
		_case_begin_4739975024:;
		{
			return jule::Str("\\b", 2);
		}
		goto _match_end_4739973120;
		_case_end_4739975024:;
		if (!(('\f') == _match_expr)) { goto _case_end_4739974224; }
		_case_begin_4739974224:;
		{
			return jule::Str("\\f", 2);
		}
		goto _match_end_4739973120;
		_case_end_4739974224:;
		if (!(('\n') == _match_expr)) { goto _case_end_4739974320; }
		_case_begin_4739974320:;
		{
			return jule::Str("\\n", 2);
		}
		goto _match_end_4739973120;
		_case_end_4739974320:;
		if (!(('\r') == _match_expr)) { goto _case_end_4739974416; }
		_case_begin_4739974416:;
		{
			return jule::Str("\\r", 2);
		}
		goto _match_end_4739973120;
		_case_end_4739974416:;
		if (!(('\t') == _match_expr)) { goto _case_end_4739974512; }
		_case_begin_4739974512:;
		{
			return jule::Str("\\t", 2);
		}
		goto _match_end_4739973120;
		_case_end_4739974512:;
		if (!(('\v') == _match_expr)) { goto _case_end_4739975744; }
		_case_begin_4739975744:;
		{
			return jule::Str("\\v", 2);
		}
		goto _match_end_4739973120;
		_case_end_4739975744:;
		_case_begin_4739972304:;
		{
			return jule::Str();
		}
		goto _match_end_4739973120;
		_case_end_4739972304:;
		_match_end_4739973120:;
	}
}



inline jule::Str _1e341b080_sbtoa(jule::U8 _10910_b) {
	if (_10910_b == 0LL) {
		return jule::Str("\\x00", 4);
	}
	if (_10910_b <= 127LL) {
		jule::Str _11513_seq = _1e341b080_decompose_common_esq(_10910_b);
		if (_11513_seq != jule::Str()) {
			return _11513_seq;
		}
		if ((32LL <= _10910_b) && (_10910_b <= 126LL)) {
			return static_cast<jule::Str>(_10910_b);
		}
	}
	jule::Str _1259_seq = _1e3417be7_fmt_uint(static_cast<jule::U64>(_10910_b),8LL);
	if (_1259_seq.len() == 2LL) {
		return jule::Str("\\0", 2) + _1259_seq;
	}
	return jule::Str("\\", 1) + _1259_seq;
}



inline jule::Str _1e341b080_get_str_model(jule::Ptr<_1c8b9b83b_Const>& _13219_c) {
	jule::Str _1339_content = _13219_c->_method_read_str();
	jule::Slice<jule::U8> _1349_bytes = static_cast<jule::Slice<jule::U8>>(_1339_content);
	jule::Str _1359_len = _1e3417be7_fmt_int(static_cast<jule::I64>(_1349_bytes.len()),10LL);
	jule::Str _13713_lit = jule::Str();
	{
		auto &expr = _1349_bytes;
		auto it = expr.begin();
		_iter_begin_4739992640:;
		if (it != expr.end()) {
			jule::U8 &_1e341b080_b = *it;
			{
				_13713_lit+=_1e341b080_sbtoa(_1e341b080_b);
			}
			_iter_next_4739992640:;
			++it;
			goto _iter_begin_4739992640;
		}
		_iter_end_4739992640:;
	}
	if (_13713_lit.len() == 0LL) {
		return _1e4da121c_as_jt(jule::Str("str", 3)) + jule::Str("()", 2);
	}
	return ((((_1e4da121c_as_jt(jule::Str("str", 3)) + jule::Str("(\"", 2)) + _13713_lit) + jule::Str("\", ", 3)) + _1359_len) + jule::Str(")", 1);
}



inline jule::Str _1e341b080_get_bool_model(jule::Ptr<_1c8b9b83b_Const>& _14920_c) {
	if (_14920_c->_method_read_bool()) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



inline jule::Str _1e341b080_get_nil_model(void) {
	return jule::Str("nullptr", 7);
}



inline jule::Str _1e341b080_gen_float_special_cases(jule::F64& _15829_x) {
	{
		if (!((_1e35ee7b3_is_nan(_15829_x)))) { goto _case_end_4740001264; }
		_case_begin_4740001264:;
		{
			return jule::Str("NAN", 3);
		}
		goto _match_end_4739999680;
		_case_end_4740001264:;
		if (!((_1e35ee7b3_is_inf(_15829_x,1LL)))) { goto _case_end_4740001456; }
		_case_begin_4740001456:;
		{
			return jule::Str("INFINITY", 8);
		}
		goto _match_end_4739999680;
		_case_end_4740001456:;
		if (!((_1e35ee7b3_is_inf(_15829_x,-1LL)))) { goto _case_end_4740001552; }
		_case_begin_4740001552:;
		{
			return jule::Str("-INFINITY", 9);
		}
		goto _match_end_4739999680;
		_case_end_4740001552:;
		_case_begin_4739999856:;
		{
			return jule::Str();
		}
		goto _match_end_4739999680;
		_case_end_4739999856:;
		_match_end_4739999680:;
	}
}



inline jule::Str _1e341b080_ftoa(jule::F64 _1679_f,jule::Int _16717_bitsize) {
	if (_16717_bitsize != 32LL) {
		if (_1679_f == static_cast<jule::F64>(static_cast<jule::I64>(_1679_f))) {
			return _1e341b080_i64toa(static_cast<jule::I64>(_1679_f));
		}
		if (_1679_f == static_cast<jule::F64>(static_cast<jule::U64>(_1679_f))) {
			return _1e341b080_u64toa(static_cast<jule::U64>(_1679_f));
		}
	}
	jule::Str _17713_m = _1e2495d64_fmt_float(_1679_f,'f',-1LL,_16717_bitsize);
	if (_17713_m.find(jule::Str(".", 1)) == -1LL) {
		_17713_m+=jule::Str(".0", 2);
	}
	return _17713_m;
}



inline jule::Str _1e341b080_get_f32_model(jule::Ptr<_1c8b9b83b_Const>& _18419_c) {
	jule::F64 _1859_x = _18419_c->_method_as_f64();
	jule::Str _1889_f = _1e341b080_gen_float_special_cases(_1859_x);
	if (_1889_f != jule::Str()) {
		return _1889_f;
	}
	{
		if (!((_1859_x == 340282346638528860000000000000000000000.0))) { goto _case_end_4740015888; }
		_case_begin_4740015888:;
		{
			return jule::Str("jule::MAX_F32", 13);
		}
		goto _match_end_4740014160;
		_case_end_4740015888:;
		if (!((_1859_x == -340282346638528860000000000000000000000.0))) { goto _case_end_4740014912; }
		_case_begin_4740014912:;
		{
			return jule::Str("jule::MIN_F32", 13);
		}
		goto _match_end_4740014160;
		_case_end_4740014912:;
		_match_end_4740014160:;
	}
	return _1e341b080_ftoa(_1859_x,32LL) + jule::Str("f", 1);
}



inline jule::Str _1e341b080_get_f64_model(jule::Ptr<_1c8b9b83b_Const>& _20119_c) {
	jule::F64 _2029_x = _20119_c->_method_as_f64();
	jule::Str _2059_f = _1e341b080_gen_float_special_cases(_2029_x);
	if (_2059_f != jule::Str()) {
		return _2059_f;
	}
	{
		if (!((_2029_x == jule::MAX_F64))) { goto _case_end_4740020704; }
		_case_begin_4740020704:;
		{
			return jule::Str("jule::MAX_F64", 13);
		}
		goto _match_end_4740021008;
		_case_end_4740020704:;
		if (!((_2029_x == jule::MIN_F64))) { goto _case_end_4740020800; }
		_case_begin_4740020800:;
		{
			return jule::Str("jule::MIN_F64", 13);
		}
		goto _match_end_4740021008;
		_case_end_4740020800:;
		_match_end_4740021008:;
	}
	return _1e341b080_ftoa(_2029_x,64LL);
}



inline jule::Str _1e341b080_get_float_model(jule::Ptr<_1e50ac4b1_Data>& _21825_d) {
	{
		if (!((_21825_d->_field_kind->_method_prim()->_method_is_f32()))) { goto _case_end_4740026224; }
		_case_begin_4740026224:;
		{
			return _1e341b080_get_f32_model(_21825_d->_field_constant);
		}
		goto _match_end_4740023408;
		_case_end_4740026224:;
		_case_begin_4740023968:;
		{
			return _1e341b080_get_f64_model(_21825_d->_field_constant);
		}
		goto _match_end_4740023408;
		_case_end_4740023968:;
		_match_end_4740023408:;
	}
}



inline jule::Str _1e341b080_i64toa(jule::I64 _22511_x) {
	{
		if (!((_22511_x == jule::MAX_I64))) { goto _case_end_4740026816; }
		_case_begin_4740026816:;
		{
			return jule::Str("jule::MAX_I64", 13);
		}
		goto _match_end_4740024384;
		_case_end_4740026816:;
		if (!((_22511_x == jule::MIN_I64))) { goto _case_end_4740026928; }
		_case_begin_4740026928:;
		{
			return jule::Str("jule::MIN_I64", 13);
		}
		goto _match_end_4740024384;
		_case_end_4740026928:;
		_match_end_4740024384:;
	}
	jule::Str _2319_fmt = _1e3417be7_fmt_int(_22511_x,10LL);
	if (_1e24c3798_is_64bit(jule::Str("amd64", 5))) {
		return _2319_fmt + jule::Str("LL", 2);
	}
	return _2319_fmt + jule::Str("L", 1);
}



inline jule::Str _1e341b080_get_i64_model(jule::Ptr<_1c8b9b83b_Const>& _23819_c) {
	return _1e341b080_i64toa(static_cast<jule::I64>(_23819_c->_method_read_i64()));
}



inline jule::Str _1e341b080_u64toa(jule::U64 _24211_x) {
	{
		if (!((_24211_x == jule::MAX_U64))) { goto _case_end_4740034464; }
		_case_begin_4740034464:;
		{
			return jule::Str("jule::MAX_U64", 13);
		}
		goto _match_end_4740031744;
		_case_end_4740034464:;
		_match_end_4740031744:;
	}
	jule::Str _2489_fmt = _1e3417be7_fmt_uint(_24211_x,10LL);
	if (_1e24c3798_is_64bit(jule::Str("amd64", 5))) {
		return _2489_fmt + jule::Str("LLU", 3);
	}
	return _2489_fmt + jule::Str("LU", 2);
}



inline jule::Str _1e341b080_get_u64_model(jule::Ptr<_1c8b9b83b_Const> _25518_c) {
	return _1e341b080_u64toa(static_cast<jule::U64>(_25518_c->_method_read_u64()));
}



inline jule::Str _1e341b080_gen_const_expr(jule::Ptr<_1e50ac4b1_Data> _25923_d) {
	{
		if (!((_25923_d->_field_constant->_method_is_str()))) { goto _case_end_4740042416; }
		_case_begin_4740042416:;
		{
			return _1e341b080_get_str_model(_25923_d->_field_constant);
		}
		goto _match_end_4740037536;
		_case_end_4740042416:;
		if (!((_25923_d->_field_constant->_method_is_bool()))) { goto _case_end_4740042512; }
		_case_begin_4740042512:;
		{
			return _1e341b080_get_bool_model(_25923_d->_field_constant);
		}
		goto _match_end_4740037536;
		_case_end_4740042512:;
		if (!((_25923_d->_field_constant->_method_is_f64()))) { goto _case_end_4740042608; }
		_case_begin_4740042608:;
		{
			return _1e341b080_get_float_model(_25923_d);
		}
		goto _match_end_4740037536;
		_case_end_4740042608:;
		if (!((_25923_d->_field_constant->_method_is_i64()))) { goto _case_end_4740041792; }
		_case_begin_4740041792:;
		{
			return _1e341b080_get_i64_model(_25923_d->_field_constant);
		}
		goto _match_end_4740037536;
		_case_end_4740041792:;
		if (!((_25923_d->_field_constant->_method_is_u64()))) { goto _case_end_4740041888; }
		_case_begin_4740041888:;
		{
			return _1e341b080_get_u64_model(_25923_d->_field_constant);
		}
		goto _match_end_4740037536;
		_case_end_4740041888:;
		if (!((_25923_d->_field_constant->_method_is_nil()))) { goto _case_end_4740041984; }
		_case_begin_4740041984:;
		{
			return _1e341b080_get_nil_model();
		}
		goto _match_end_4740037536;
		_case_end_4740041984:;
		_case_begin_4740040864:;
		{
			return jule::Str();
		}
		goto _match_end_4740037536;
		_case_end_4740040864:;
		_match_end_4740037536:;
	}
}



inline jule::Str _1e341b080_gen_const_expr_model(jule::Ptr<_1c8b9b83b_Const> _27125_m) {
	{
		if (!((_27125_m->_method_is_str()))) { goto _case_end_4740053296; }
		_case_begin_4740053296:;
		{
			return _1e341b080_get_str_model(_27125_m);
		}
		goto _match_end_4740048224;
		_case_end_4740053296:;
		if (!((_27125_m->_method_is_bool()))) { goto _case_end_4740053392; }
		_case_begin_4740053392:;
		{
			return _1e341b080_get_bool_model(_27125_m);
		}
		goto _match_end_4740048224;
		_case_end_4740053392:;
		if (!((_27125_m->_method_is_f64()))) { goto _case_end_4740053488; }
		_case_begin_4740053488:;
		{
			return _1e341b080_get_f64_model(_27125_m);
		}
		goto _match_end_4740048224;
		_case_end_4740053488:;
		if (!((_27125_m->_method_is_i64()))) { goto _case_end_4740052672; }
		_case_begin_4740052672:;
		{
			return _1e341b080_get_i64_model(_27125_m);
		}
		goto _match_end_4740048224;
		_case_end_4740052672:;
		if (!((_27125_m->_method_is_u64()))) { goto _case_end_4740052768; }
		_case_begin_4740052768:;
		{
			return _1e341b080_get_u64_model(_27125_m);
		}
		goto _match_end_4740048224;
		_case_end_4740052768:;
		if (!((_27125_m->_method_is_nil()))) { goto _case_end_4740052864; }
		_case_begin_4740052864:;
		{
			return _1e341b080_get_nil_model();
		}
		goto _match_end_4740048224;
		_case_end_4740052864:;
		_case_begin_4740051952:;
		{
			return jule::Str();
		}
		goto _match_end_4740048224;
		_case_end_4740051952:;
		_match_end_4740048224:;
	}
}



inline jule::Str _1e341b080_gen_div_by_zero_binop_expr_model(jule::Str _28337_op,jule::Any _28350_l,jule::Any _28368_r) {
	jule::Str _28413_op_func = jule::Str();
	{
		auto &_match_expr{ _28337_op };
		if (!((jule::Str("/", 1)) == _match_expr)) { goto _case_end_4740060576; }
		_case_begin_4740060576:;
		{
			_28413_op_func=jule::Str("div", 3);
		}
		goto _match_end_4740061424;
		_case_end_4740060576:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4740061504; }
		_case_begin_4740061504:;
		{
			_28413_op_func=jule::Str("mod", 3);
		}
		goto _match_end_4740061424;
		_case_end_4740061504:;
		_match_end_4740061424:;
	}
	if (_1e2496a24_OPT_MATH) {
		{
			auto &_match_expr{ _28368_r };
			if (!(_match_expr.type_is<jule::Ptr<_1c8b9b83b_Const>>())) { goto _case_end_4740063456; }
			_case_begin_4740063456:;
			{
				_28413_op_func=jule::Str("unsafe_", 7) + _28413_op_func;
			}
			goto _match_end_4740063552;
			_case_end_4740063456:;
			_match_end_4740063552:;
		}
	}
	jule::Str _29713_obj = jule::Str("jule::", 6);
	_29713_obj+=_28413_op_func;
	_29713_obj+=jule::Str("(", 1);
	_29713_obj+=_1e341b080_gen_expr(_28350_l);
	_29713_obj+=jule::Str(",", 1);
	_29713_obj+=_1e341b080_gen_expr(_28368_r);
	_29713_obj+=jule::Str(")", 1);
	return _29713_obj;
}



inline jule::Str _1e341b080_gen_binop_expr_model(jule::Ptr<_1e4d70a6b_BinopExprModel> _30729_m) {
	{
		auto &_match_expr{ _30729_m->_field_op };
		if (!((jule::Str("/", 1)) == _match_expr || (jule::Str("%", 1)) == _match_expr)) { goto _case_end_4740066944; }
		_case_begin_4740066944:;
		{
			return _1e341b080_gen_div_by_zero_binop_expr_model(_30729_m->_field_op,_30729_m->_field_left,_30729_m->_field_right);
		}
		goto _match_end_4740067840;
		_case_end_4740066944:;
		_match_end_4740067840:;
	}
	jule::Str _31413_obj = jule::Str("(", 1);
	_31413_obj+=_1e341b080_gen_expr_model(_30729_m->_field_left);
	_31413_obj+=jule::Str(" ", 1);
	_31413_obj+=_30729_m->_field_op;
	_31413_obj+=jule::Str(" ", 1);
	_31413_obj+=_1e341b080_gen_expr_model(_30729_m->_field_right);
	_31413_obj+=jule::Str(")", 1);
	return _31413_obj;
}



inline jule::Str _1e341b080_gen_var_expr_model(jule::Ptr<_1e50b0492_Var> _32427_m) {
	if (_32427_m->_field_cpp_linked) {
		jule::Ptr<_1e38d4ec7_Directive> _32613_d = _1c8ec69ac_find_directive(_32427_m->_field_directives,jule::Str("namespace", 9));
		if (_32613_d != nullptr) {
			jule::Str _32821_obj = _1e341b080_concat_all_parts(_32613_d->_field_args);
			_32821_obj+=jule::Str("::", 2);
			_32821_obj+=_1e4da121c_var_out_ident(_32427_m);
			return _32821_obj;
		}
	}
	return _1e4da121c_var_out_ident(_32427_m);
}



inline jule::Str _1e341b080_gen_struct_expr_model(jule::Ptr<_1e398ee72_Struct> _33726_m) {
	return _1c8ec69ac_gen_struct_kind(_33726_m);
}



inline jule::Str _1e341b080_gen_struct_ins_expr_model(jule::Ptr<_1e398ee72_StructIns> _34134_m) {
	return _1c8ec69ac_gen_struct_kind_ins(_34134_m);
}



inline jule::Str _1e341b080_gen_unary_expr_model(jule::Ptr<_1e4d70a6b_UnaryExprModel> _34529_m) {
	if (_1e2496a24_OPT_PTR && (_34529_m->_field_op == jule::Str("*", 1))) {
		{
			auto &_match_expr{ _34529_m->_field_expr };
			if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_UnaryExprModel>>())) { goto _case_end_4740081296; }
			_case_begin_4740081296:;
			{
				jule::Ptr<_1e4d70a6b_UnaryExprModel> _34921_um = _34529_m->_field_expr.operator jule::Ptr<_1e4d70a6b_UnaryExprModel>();
				if (_34921_um->_field_op == jule::Str("&", 1)) {
					return _1e341b080_gen_expr_model(_34921_um->_field_expr);
				}
			}
			goto _match_end_4740081840;
			_case_end_4740081296:;
			_match_end_4740081840:;
		}
	}
	{
		auto &_match_expr{ _34529_m->_field_op };
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4740083024; }
		_case_begin_4740083024:;
		{
			jule::Str _35817_obj = jule::Str("(~(", 3);
			_35817_obj+=_1e341b080_gen_expr(_34529_m->_field_expr);
			_35817_obj+=jule::Str("))", 2);
			return _35817_obj;
		}
		goto _match_end_4740084960;
		_case_end_4740083024:;
		_case_begin_4740086688:;
		{
			jule::Str _36417_obj = jule::Str("(", 1);
			_36417_obj+=_34529_m->_field_op;
			_36417_obj+=jule::Str("(", 1);
			_36417_obj+=_1e341b080_gen_expr(_34529_m->_field_expr);
			_36417_obj+=jule::Str("))", 2);
			return _36417_obj;
		}
		goto _match_end_4740084960;
		_case_end_4740086688:;
		_match_end_4740084960:;
	}
}



inline jule::Str _1e341b080_gen_cpp_struct_lit_expr_model(jule::Ptr<_1e4d70a6b_StructLitExprModel> _37338_m) {
	jule::Str _37413_obj = jule::Str("(", 1) + _1c8ec69ac_gen_struct_kind_ins(_37338_m->_field_strct);
	_37413_obj+=jule::Str("){", 2);
	if (_37338_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto &expr = _37338_m->_field_strct->_field_fields;
			auto it = expr.begin();
			_iter_begin_4740094368:;
			if (it != expr.end()) {
				jule::Ptr<_1e398ee72_FieldIns> _1e341b080_f = *it;
				{
					if (_37338_m->_field_strct->_field_decl->_field_cpp_linked) {
						{
							auto &expr = _37338_m->_field_args;
							auto it = expr.begin();
							_iter_begin_4740097056:;
							if (it != expr.end()) {
								jule::Ptr<_1e4d70a6b_StructArgExprModel> _1e341b080_arg = *it;
								{
									if (_1e341b080_arg->_field_field == _1e341b080_f) {
										_37413_obj+=jule::Str(".", 1);
										_37413_obj+=_1e4da121c_field_out_ident(_1e341b080_f->_field_decl);
										_37413_obj+=jule::Str("=", 1);
										_37413_obj+=_1e341b080_gen_expr(_1e341b080_arg->_field_expr);
										_37413_obj+=jule::Str(",", 1);
										goto _iter_next_4740094368;
									}
								}
								_iter_next_4740097056:;
								++it;
								goto _iter_begin_4740097056;
							}
							_iter_end_4740097056:;
						}
						goto _iter_next_4740094368;
					}
					_37413_obj+=_1e4da121c_field_out_ident(_1e341b080_f->_field_decl);
					_37413_obj+=jule::Str(": ", 2);
					{
						auto &expr = _37338_m->_field_args;
						auto it = expr.begin();
						_iter_begin_4740097632:;
						if (it != expr.end()) {
							jule::Ptr<_1e4d70a6b_StructArgExprModel> _1e341b080_arg = *it;
							{
								if (_1e341b080_arg->_field_field == _1e341b080_f) {
									_37413_obj+=_1e341b080_gen_expr(_1e341b080_arg->_field_expr);
									_37413_obj+=jule::Str(",", 1);
									goto _iter_next_4740094368;
								}
							}
							_iter_next_4740097632:;
							++it;
							goto _iter_begin_4740097632;
						}
						_iter_end_4740097632:;
					}
					_37413_obj+=_1e341b080_get_init_expr(_1e341b080_f->_field_kind);
					_37413_obj+=jule::Str(",", 1);
				}
				_iter_next_4740094368:;
				++it;
				goto _iter_begin_4740094368;
			}
			_iter_end_4740094368:;
		}
		_37413_obj=_37413_obj.slice(0LL,_37413_obj.len() - 1LL);
	}
	_37413_obj+=jule::Str("}", 1);
	return _37413_obj;
}



inline jule::Str _1e341b080_gen_struct_lit_expr_model(jule::Ptr<_1e4d70a6b_StructLitExprModel> _41134_m) {
	if (_41134_m->_field_strct->_field_decl->_field_cpp_linked) {
		return _1e341b080_gen_cpp_struct_lit_expr_model(_41134_m);
	}
	jule::Str _41613_obj = _1e4da121c_struct_ins_out_ident(_41134_m->_field_strct);
	_41613_obj+=jule::Str("(", 1);
	if (_41134_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto &expr = _41134_m->_field_strct->_field_fields;
			auto it = expr.begin();
			_iter_begin_4740111712:;
			if (it != expr.end()) {
				jule::Ptr<_1e398ee72_FieldIns> _1e341b080_f = *it;
				{
					{
						auto &expr = _41134_m->_field_args;
						auto it = expr.begin();
						_iter_begin_4740113488:;
						if (it != expr.end()) {
							jule::Ptr<_1e4d70a6b_StructArgExprModel> _1e341b080_arg = *it;
							{
								if (_1e341b080_arg->_field_field == _1e341b080_f) {
									_41613_obj+=_1e341b080_gen_expr(_1e341b080_arg->_field_expr);
									_41613_obj+=jule::Str(",", 1);
									goto _iter_next_4740111712;
								}
							}
							_iter_next_4740113488:;
							++it;
							goto _iter_begin_4740113488;
						}
						_iter_end_4740113488:;
					}
					_41613_obj+=_1e341b080_get_init_expr(_1e341b080_f->_field_kind);
					_41613_obj+=jule::Str(",", 1);
				}
				_iter_next_4740111712:;
				++it;
				goto _iter_begin_4740111712;
			}
			_iter_end_4740111712:;
		}
		_41613_obj=_41613_obj.slice(0LL,_41613_obj.len() - 1LL);
	}
	_41613_obj+=jule::Str(")", 1);
	return _41613_obj;
}



inline jule::Str _1e341b080_gen_alloc_struct_lit_expr_model(jule::Ptr<_1e4d70a6b_AllocStructLitExprModel> _43740_m) {
	jule::Str _43813_obj = jule::Str("jule::new_struct", 16);
	if (_43740_m->_field_lit->_field_strct->_field_decl->_method_has_ref_accessible()) {
		_43813_obj+=jule::Str("_ptr", 4);
	}
	_43813_obj+=jule::Str("<", 1);
	_43813_obj+=_1e4da121c_struct_ins_out_ident(_43740_m->_field_lit->_field_strct);
	_43813_obj+=jule::Str(">(new( std::nothrow ) ", 22);
	_43813_obj+=_1e341b080_gen_struct_lit_expr_model(_43740_m->_field_lit);
	_43813_obj+=jule::Str(")", 1);
	return _43813_obj;
}



inline jule::Str _1e341b080_gen_casting_expr_model(jule::Ptr<_1e4d70a6b_CastingExprModel> _45031_m) {
	jule::Str _45113_obj = jule::Str();
	{
		if (!(((_45031_m->_field_kind->_method_prim() != nullptr) && _45031_m->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_4740126224; }
		_case_begin_4740126224:;
		{
			_45113_obj+=_1c8ec69ac_gen_type_kind(_45031_m->_field_kind);
			_45113_obj+=jule::Str("(", 1);
			_45113_obj+=_1e341b080_gen_expr_model(_45031_m->_field_expr);
			_45113_obj+=jule::Str(")", 1);
		}
		goto _match_end_4740125328;
		_case_end_4740126224:;
		if (!((_45031_m->_field_expr_kind->_method_ptr() != nullptr) || (_45031_m->_field_kind->_method_ptr() != nullptr))) { goto _case_end_4740128816; }
		_case_begin_4740128816:;
		{
			_45113_obj+=jule::Str("((", 2);
			_45113_obj+=_1c8ec69ac_gen_type_kind(_45031_m->_field_kind);
			_45113_obj+=jule::Str(")(", 2);
			_45113_obj+=_1e341b080_gen_expr(_45031_m->_field_expr);
			_45113_obj+=jule::Str("))", 2);
		}
		goto _match_end_4740125328;
		_case_end_4740128816:;
		if (!((_45031_m->_field_expr_kind->_method_trt() != nullptr) || ((_45031_m->_field_expr_kind->_method_prim() != nullptr) && _45031_m->_field_expr_kind->_method_prim()->_method_is_any()))) { goto _case_end_4740128912; }
		_case_begin_4740128912:;
		{
			_45113_obj+=_1e341b080_gen_expr_model(_45031_m->_field_expr);
			_45113_obj+=_1e341b080_get_accessor(_45031_m->_field_expr_kind);
			_45113_obj+=jule::Str("operator ", 9);
			_45113_obj+=_1c8ec69ac_gen_type_kind(_45031_m->_field_kind);
			_45113_obj+=jule::Str("()", 2);
		}
		goto _match_end_4740125328;
		_case_end_4740128912:;
		_case_begin_4740125440:;
		{
			_45113_obj+=jule::Str("static_cast<", 12);
			_45113_obj+=_1c8ec69ac_gen_type_kind(_45031_m->_field_kind);
			_45113_obj+=jule::Str(">(", 2);
			_45113_obj+=_1e341b080_gen_expr(_45031_m->_field_expr);
			_45113_obj+=jule::Str(")", 1);
		}
		goto _match_end_4740125328;
		_case_end_4740125440:;
		_match_end_4740125328:;
	}
	return _45113_obj;
}



inline jule::Str _1e341b080_gen_arg_expr_models(jule::Slice<jule::Any> _48528_models) {
	if (_48528_models.len() == 0LL) {
		return jule::Str();
	}
	jule::Str _49013_obj = jule::Str();
	{
		auto &expr = _48528_models;
		auto it = expr.begin();
		_iter_begin_4740141760:;
		if (it != expr.end()) {
			jule::Any _1e341b080_m = *it;
			{
				_49013_obj+=_1e341b080_gen_expr(_1e341b080_m);
				_49013_obj+=jule::Str(",", 1);
			}
			_iter_next_4740141760:;
			++it;
			goto _iter_begin_4740141760;
		}
		_iter_end_4740141760:;
	}
	_49013_obj=_49013_obj.slice(0LL,_49013_obj.len() - 1LL);
	return _49013_obj;
}



inline jule::Str _1e341b080_gen_expr_model_for_call(jule::Any _49932_expr) {
	{
		auto &_match_expr{ _49932_expr };
		if (!(_match_expr.type_is<jule::Ptr<_1e4b15a20_FnIns>>())) { goto _case_end_4740146144; }
		_case_begin_4740146144:;
		{
			return _1e341b080_gen_fn_ins_expr_model(_49932_expr.operator jule::Ptr<_1e4b15a20_FnIns>());
		}
		goto _match_end_4740142912;
		_case_end_4740146144:;
		_case_begin_4740144128:;
		{
			return _1e341b080_gen_expr_model(_49932_expr);
		}
		goto _match_end_4740142912;
		_case_end_4740144128:;
		_match_end_4740142912:;
	}
}



inline jule::Str _1e341b080_gen_fn_call_expr_model(jule::Ptr<_1e4d70a6b_FnCallExprModel> _50631_m) {
	jule::Str _50713_obj = _1e341b080_gen_expr_model_for_call(_50631_m->_field_expr);
	if ((!(_50631_m->_field_func->_method_is_builtin()))) {
		if (_50631_m->_field_func->_field_decl->_field_cpp_linked && (_50631_m->_field_func->_field_generics.len() > 0LL)) {
			if ((!(_1c8ec69ac_has_directive(_50631_m->_field_func->_field_decl->_field_directives,jule::Str("cdef", 4))))) {
				_50713_obj+=jule::Str("<", 1);
				{
					auto &expr = _50631_m->_field_func->_field_generics;
					auto it = expr.begin();
					_iter_begin_4740151984:;
					if (it != expr.end()) {
						jule::Ptr<_1e6420856_TypeKind> _1e341b080_g = *it;
						{
							_50713_obj+=_1c8ec69ac_gen_type_kind(_1e341b080_g);
							_50713_obj+=jule::Str(",", 1);
						}
						_iter_next_4740151984:;
						++it;
						goto _iter_begin_4740151984;
					}
					_iter_end_4740151984:;
				}
				_50713_obj=_50713_obj.slice(0LL,_50713_obj.len() - 1LL);
				_50713_obj+=jule::Str(">", 1);
			}
		}
	}
	_50713_obj+=jule::Str("(", 1);
	_50713_obj+=_1e341b080_gen_arg_expr_models(_50631_m->_field_args);
	_50713_obj+=jule::Str(")", 1);
	if (_50631_m->_field_is_co) {
		_50713_obj=jule::Str("__JULE_CO(", 10) + _50713_obj;
		_50713_obj+=jule::Str(")", 1);
	}
	return _50713_obj;
}



inline jule::Str _1e341b080_gen_slice_expr_model(jule::Ptr<_1e4d70a6b_SliceExprModel> _53329_m) {
	if (_53329_m->_field_elems.len() == 0LL) {
		return _1c8ec69ac_as_slice_kind(_53329_m->_field_elem_kind) + jule::Str("()", 2);
	}
	jule::Str _53813_obj = _1c8ec69ac_as_slice_kind(_53329_m->_field_elem_kind);
	_53813_obj+=jule::Str("({", 2);
	_53813_obj+=_1e341b080_gen_arg_expr_models(_53329_m->_field_elems);
	_53813_obj+=jule::Str("})", 2);
	return _53813_obj;
}



inline jule::Str _1e341b080_gen_indexing_expr_model(jule::Ptr<_1e4d70a6b_IndexigExprModel> _54532_m) {
	jule::Str _54613_obj = _1e341b080_gen_expr_model(_54532_m->_field_expr->_field_model);
	if (_1e2496a24_OPT_ACCESS) {
		jule::Bool _55013_array = _54532_m->_field_expr->_field_kind->_method_arr() != nullptr;
		if (_55013_array && _54532_m->_field_index->_method_is_const()) {
			_54613_obj+=jule::Str(".__at(", 6);
			_54613_obj+=_1e341b080_gen_expr(_54532_m->_field_index->_field_model);
			_54613_obj+=jule::Str(")", 1);
			return _54613_obj;
		}
		{
			auto &_match_expr{ _54532_m->_field_index->_field_model };
			if (!(_match_expr.type_is<jule::Ptr<_1e50b0492_Var>>())) { goto _case_end_4740169008; }
			_case_begin_4740169008:;
			{
				jule::Ptr<_1e50b0492_Var> _56217_i = _54532_m->_field_index->_field_model.operator jule::Ptr<_1e50b0492_Var>();
				if (_56217_i->_field_mutable || (_56217_i->_field_iter_relation == nullptr)) {
					goto _match_end_4740170208;
				}
				{
					auto &_match_expr{ _54532_m->_field_expr->_field_model };
					if (!(_match_expr.type_is<jule::Ptr<_1e50b0492_Var>>())) { goto _case_end_4740173232; }
					_case_begin_4740173232:;
					{
						jule::Ptr<_1e50b0492_Var> _56821_r = _54532_m->_field_expr->_field_model.operator jule::Ptr<_1e50b0492_Var>();
						if (_56217_i->_field_iter_relation->_field_range == _56821_r) {
							_54613_obj+=jule::Str(".__at(", 6);
							_54613_obj+=_1e341b080_gen_expr(_54532_m->_field_index->_field_model);
							_54613_obj+=jule::Str(")", 1);
							return _54613_obj;
						}
					}
					goto _match_end_4740174560;
					_case_end_4740173232:;
					_match_end_4740174560:;
				}
			}
			goto _match_end_4740170208;
			_case_end_4740169008:;
			_match_end_4740170208:;
		}
	}
	_54613_obj+=jule::Str("[", 1);
	_54613_obj+=_1e341b080_gen_expr(_54532_m->_field_index->_field_model);
	_54613_obj+=jule::Str("]", 1);
	return _54613_obj;
}



inline jule::Str _1e341b080_gen_anon_fn_expr_model(jule::Ptr<_1e4d70a6b_AnonFnExprModel> _58831_m) {
	jule::Str _58913_obj = _1c8ec69ac_gen_fn_kind(_58831_m->_field_func);
	_58913_obj+=jule::Str("([=]", 4);
	_58913_obj+=_1c9006426_gen_params_ins(_58831_m->_field_func->_field_params);
	_58913_obj+=jule::Str(" mutable -> ", 12);
	_58913_obj+=_1c9006426_gen_fn_ins_result(_58831_m->_field_func);
	_58913_obj+=jule::Str(" ", 1);
	_58913_obj+=_1e24a32e4_gen_fn_scope(_58831_m->_field_func);
	_58913_obj+=jule::Str(")", 1);
	return _58913_obj;
}



inline jule::Str _1e341b080_gen_map_expr_model(jule::Ptr<_1e4d70a6b_MapExprModel> _60027_m) {
	jule::Str _60113_obj = _1e4da121c_as_jt(jule::Str("map", 3));
	_60113_obj+=jule::Str("<", 1);
	_60113_obj+=_1c8ec69ac_gen_type_kind(_60027_m->_field_key_kind);
	_60113_obj+=jule::Str(",", 1);
	_60113_obj+=_1c8ec69ac_gen_type_kind(_60027_m->_field_val_kind);
	_60113_obj+=jule::Str(">({", 3);
	if (_60027_m->_field_entries.len() > 0LL) {
		{
			auto &expr = _60027_m->_field_entries;
			auto it = expr.begin();
			_iter_begin_4740188880:;
			if (it != expr.end()) {
				jule::Ptr<_1e4d70a6b_KeyValPairExprModel> _1e341b080_pair = *it;
				{
					jule::Str _60921_pair_obj = jule::Str("{", 1);
					_60921_pair_obj+=_1e341b080_gen_expr(_1e341b080_pair->_field_key);
					_60921_pair_obj+=jule::Str(",", 1);
					_60921_pair_obj+=_1e341b080_gen_expr(_1e341b080_pair->_field_val);
					_60921_pair_obj+=jule::Str("}", 1);
					_60113_obj+=_60921_pair_obj;
					_60113_obj+=jule::Str(",", 1);
				}
				_iter_next_4740188880:;
				++it;
				goto _iter_begin_4740188880;
			}
			_iter_end_4740188880:;
		}
		_60113_obj=_60113_obj.slice(0LL,_60113_obj.len() - 1LL);
	}
	_60113_obj+=jule::Str("})", 2);
	return _60113_obj;
}



inline jule::Str _1e341b080_gen_slicing_expr_model(jule::Ptr<_1e4d70a6b_SlicingExprModel> _62331_m) {
	jule::Str _62413_obj = _1e341b080_gen_expr_model(_62331_m->_field_expr);
	_62413_obj+=jule::Str(".slice(", 7);
	_62413_obj+=_1e341b080_gen_expr(_62331_m->_field_left);
	if (_62331_m->_field_right != nullptr) {
		_62413_obj+=jule::Str(",", 1);
		_62413_obj+=_1e341b080_gen_expr(_62331_m->_field_right);
	}
	_62413_obj+=jule::Str(")", 1);
	return _62413_obj;
}



inline jule::Str _1e341b080_gen_trait_sub_ident_expr_model(jule::Ptr<_1e4d70a6b_TraitSubIdentExprModel> _63539_m) {
	jule::Str _63613_obj = _1e341b080_gen_expr_model(_63539_m->_field_expr);
	_63613_obj+=jule::Str(".get()._method_", 15);
	_63613_obj+=_63539_m->_field_ident;
	return _63613_obj;
}



inline jule::Str _1e341b080_gen_struct_sub_ident_expr_model(jule::Ptr<_1e4d70a6b_StructSubIdentExprModel> _64240_m) {
	jule::Str _64313_obj = _1e341b080_gen_expr_model(_64240_m->_field_expr);
	_64313_obj+=_1e341b080_get_accessor(_64240_m->_field_expr_kind);
	if (_64240_m->_field_field != nullptr) {
		_64313_obj+=_1e4da121c_field_out_ident(_64240_m->_field_field->_field_decl);
	} else {
		_64313_obj+=_1e4da121c_fn_ins_out_ident(_64240_m->_field_method);
	}
	return _64313_obj;
}



inline jule::Str _1e341b080_gen_common_ident_expr_model(jule::Ptr<_1e4d70a6b_CommonIdentExprModel> _65332_m) {
	return _65332_m->_field_ident;
}



inline jule::Str _1e341b080_gen_common_sub_ident_expr_model(jule::Ptr<_1e4d70a6b_CommonSubIdentExprModel> _65740_m) {
	jule::Str _65813_obj = _1e341b080_gen_expr_model(_65740_m->_field_expr);
	_65813_obj+=_1e341b080_get_accessor(_65740_m->_field_expr_kind);
	_65813_obj+=_65740_m->_field_ident;
	return _65813_obj;
}



inline jule::Str _1e341b080_gen_array_expr_model(jule::Ptr<_1e4d70a6b_ArrayExprModel> _66429_m) {
	if (_66429_m->_field_elems.len() == 0LL) {
		return _1c8ec69ac_gen_array_kind(_66429_m->_field_kind) + jule::Str("()", 2);
	}
	jule::Str _66913_obj = _1c8ec69ac_gen_array_kind(_66429_m->_field_kind);
	_66913_obj+=jule::Str("({", 2);
	_66913_obj+=_1e341b080_gen_arg_expr_models(_66429_m->_field_elems);
	_66913_obj+=jule::Str("})", 2);
	return _66913_obj;
}



inline jule::Str _1e341b080_gen_fn_ins_expr_model_common(jule::Ptr<_1e4b15a20_FnIns> _67837_m) {
	jule::Str _67913_obj = _1c8ec69ac_gen_fn_kind(_67837_m);
	_67913_obj+=jule::Str("(", 1);
	_67913_obj+=_1e341b080_gen_fn_ins_expr_model(_67837_m);
	_67913_obj+=jule::Str(")", 1);
	return _67913_obj;
}



inline jule::Str _1e341b080_gen_fn_ins_expr_model(jule::Ptr<_1e4b15a20_FnIns> _68730_m) {
	if ((_68730_m->_field_decl != nullptr) && _68730_m->_field_decl->_field_cpp_linked) {
		jule::Ptr<_1e38d4ec7_Directive> _68913_d = _1c8ec69ac_find_directive(_68730_m->_field_decl->_field_directives,jule::Str("namespace", 9));
		if (_68913_d != nullptr) {
			jule::Str _69121_obj = _1e341b080_concat_all_parts(_68913_d->_field_args);
			_69121_obj+=jule::Str("::", 2);
			_69121_obj+=_1e4da121c_fn_ins_out_ident(_68730_m);
			return _69121_obj;
		}
	}
	return _1e4da121c_fn_ins_out_ident(_68730_m);
}



inline jule::Str _1e341b080_gen_tuple_expr_model(jule::Ptr<_1e4d70a6b_TupleExprModel> _70029_m) {
	jule::Str _70113_obj = jule::Str("std::make_tuple(", 16);
	{
		auto &expr = _70029_m->_field_datas;
		auto it = expr.begin();
		_iter_begin_4740223088:;
		if (it != expr.end()) {
			jule::Ptr<_1e50ac4b1_Data> _1e341b080_d = *it;
			{
				_70113_obj+=_1e341b080_gen_expr(_1e341b080_d->_field_model);
				_70113_obj+=jule::Str(",", 1);
			}
			_iter_next_4740223088:;
			++it;
			goto _iter_begin_4740223088;
		}
		_iter_end_4740223088:;
	}
	_70113_obj=_70113_obj.slice(0LL,_70113_obj.len() - 1LL);
	_70113_obj+=jule::Str(")", 1);
	return _70113_obj;
}



inline jule::Str _1e341b080_gen_builtin_new_call_expr_model(jule::Ptr<_1e4d70a6b_BuiltinNewCallExprModel> _71140_m) {
	jule::Str _71213_obj = jule::Str("jule::new_ptr<", 14);
	_71213_obj+=_1c8ec69ac_gen_type_kind(_71140_m->_field_kind);
	_71213_obj+=jule::Str(">(", 2);
	if (_71140_m->_field_init != nullptr) {
		_71213_obj+=_1e341b080_gen_expr(_71140_m->_field_init);
	}
	_71213_obj+=jule::Str(")", 1);
	return _71213_obj;
}



inline jule::Str _1e341b080_gen_builtin_out_call_expr_model(jule::Ptr<_1e4d70a6b_BuiltinOutCallExprModel> _72240_m) {
	jule::Str _72313_obj = jule::Str("jule::out(", 10);
	_72313_obj+=_1e341b080_gen_expr(_72240_m->_field_expr);
	_72313_obj+=jule::Str(")", 1);
	return _72313_obj;
}



inline jule::Str _1e341b080_gen_builtin_outln_call_expr_model(jule::Ptr<_1e4d70a6b_BuiltinOutlnCallExprModel> _72942_m) {
	jule::Str _73013_obj = jule::Str("jule::outln(", 12);
	_73013_obj+=_1e341b080_gen_expr(_72942_m->_field_expr);
	_73013_obj+=jule::Str(")", 1);
	return _73013_obj;
}



inline jule::Str _1e341b080_gen_builtin_real_call_expr_model(jule::Ptr<_1e4d70a6b_BuiltinRealCallExprModel> _73641_m) {
	jule::Str _73713_obj = jule::Str("jule::real(", 11);
	_73713_obj+=_1e341b080_gen_expr(_73641_m->_field_expr);
	_73713_obj+=jule::Str(")", 1);
	return _73713_obj;
}



inline jule::Str _1e341b080_gen_builtin_drop_call_expr_model(jule::Ptr<_1e4d70a6b_BuiltinDropCallExprModel> _74341_m) {
	jule::Str _74413_obj = jule::Str("jule::drop(", 11);
	_74413_obj+=_1e341b080_gen_expr(_74341_m->_field_expr);
	_74413_obj+=jule::Str(")", 1);
	return _74413_obj;
}



inline jule::Str _1e341b080_gen_builtin_panic_call_expr_model(jule::Ptr<_1e4d70a6b_BuiltinPanicCallExprModel> _75042_m) {
	jule::Str _75113_obj = jule::Str("jule::panic(", 12);
	_75113_obj+=_1e341b080_gen_expr(_75042_m->_field_expr);
	_75113_obj+=jule::Str(")", 1);
	return _75113_obj;
}



inline jule::Str _1e341b080_gen_builtin_make_call_expr_model(jule::Ptr<_1e4d70a6b_BuiltinMakeCallExprModel> _75741_m) {
	jule::Str _75813_obj = jule::Str();
	if (_75741_m->_field_len != nullptr) {
		_75813_obj+=_1e341b080_gen_expr(_75741_m->_field_len);
	} else {
		_75813_obj+=jule::Str("0", 1);
	}
	if (_75741_m->_field_cap != nullptr) {
		_75813_obj+=jule::Str(",", 1) + _1e341b080_gen_expr(_75741_m->_field_cap);
	}
	if (_75741_m->_field_kind->_method_slc()->_field_elem->_method_enm() != nullptr) {
		_75813_obj+=jule::Str(",", 1);
		_75813_obj+=_1e341b080_get_init_expr(_75741_m->_field_kind->_method_slc()->_field_elem);
		if (_75741_m->_field_cap != nullptr) {
			_75813_obj=(_1c8ec69ac_gen_type_kind(_75741_m->_field_kind) + jule::Str("::alloc(", 8)) + _75813_obj;
		} else {
			_75813_obj=(_1c8ec69ac_gen_type_kind(_75741_m->_field_kind) + jule::Str("::alloc_def(", 12)) + _75813_obj;
		}
	} else {
		_75813_obj=(_1c8ec69ac_gen_type_kind(_75741_m->_field_kind) + jule::Str("::alloc(", 8)) + _75813_obj;
	}
	_75813_obj+=jule::Str(")", 1);
	return _75813_obj;
}



inline jule::Str _1e341b080_gen_builtin_append_call_expr_model_assign_opt(jule::Bool _7855_same_dest,jule::Str& _7866_dest_expr,jule::Ptr<_1e6420856_TypeKind>& _78710_dest_kind,jule::Ptr<_1e4d70a6b_SliceExprModel>& _78810_s,jule::Ptr<_1e4d70a6b_BuiltinAppendCallExprModel>& _78910_m) {
	jule::Str _79013_obj = jule::Str();
	if ((!(_7855_same_dest))) {
		_79013_obj+=_7866_dest_expr;
		_79013_obj+=jule::Str(" = jule::alloc_for_append(", 26);
		_79013_obj+=_1e341b080_gen_expr_model(_78910_m->_field_dest);
		_79013_obj+=jule::Str(",", 1);
		_79013_obj+=_1e3417be7_itoa(static_cast<jule::I64>(_78810_s->_field_elems.len()));
		_79013_obj+=jule::Str(");", 2);
	}
	{
		auto &expr = _78810_s->_field_elems;
		auto it = expr.begin();
		_iter_begin_4740260592:;
		if (it != expr.end()) {
			jule::Any _1e341b080_e = *it;
			{
				_79013_obj+=_7866_dest_expr;
				_79013_obj+=_1e341b080_get_accessor(_78710_dest_kind);
				_79013_obj+=jule::Str("push(", 5);
				_79013_obj+=_1e341b080_gen_expr_model(_1e341b080_e);
				_79013_obj+=jule::Str(");", 2);
			}
			_iter_next_4740260592:;
			++it;
			goto _iter_begin_4740260592;
		}
		_iter_end_4740260592:;
	}
	return _79013_obj;
}



inline std::tuple<jule::Str,jule::Bool> _1e341b080_gen_builtin_append_call_expr_model_assign(jule::Any _80950_dest,jule::Ptr<_1e4d70a6b_BuiltinAppendCallExprModel> _80971_m) {
	jule::Bool _809110_optimized = jule::Bool();
	{
		auto &_match_expr{ _80971_m->_field_elements };
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_SliceExprModel>>())) { goto _case_end_4740256848; }
		_case_begin_4740256848:;
		{
			{
				auto &_match_expr{ _80950_dest };
				if (!(_match_expr.type_is<jule::Ptr<_1e50b0492_Var>>())) { goto _case_end_4740264352; }
				_case_begin_4740264352:;
				{
					jule::Ptr<_1e4d70a6b_SliceExprModel> _81421_s = _80971_m->_field_elements.operator jule::Ptr<_1e4d70a6b_SliceExprModel>();
					jule::Str _81517_dest_expr = _1e341b080_gen_expr_model(_80950_dest);
					jule::Ptr<_1e50b0492_Var> _81621_dest_var = _80950_dest.operator jule::Ptr<_1e50b0492_Var>();
					jule::Bool _81717_same_dest = _80971_m->_field_dest == _81621_dest_var;
					_809110_optimized = true;
					return std::make_tuple(_1e341b080_gen_builtin_append_call_expr_model_assign_opt(_81717_same_dest,_81517_dest_expr,_81621_dest_var->_field_kind->_field_kind,_81421_s,_80971_m),_809110_optimized);
				}
				goto _match_end_4740265744;
				_case_end_4740264352:;
				if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_StructSubIdentExprModel>>())) { goto _case_end_4740265824; }
				_case_begin_4740265824:;
				{
					jule::Ptr<_1e4d70a6b_SliceExprModel> _82221_s = _80971_m->_field_elements.operator jule::Ptr<_1e4d70a6b_SliceExprModel>();
					jule::Str _82317_dest_expr = _1e341b080_gen_expr_model(_80950_dest);
					jule::Ptr<_1e398ee72_FieldIns> _82421_dest_field = _80950_dest.operator jule::Ptr<_1e4d70a6b_StructSubIdentExprModel>()->_field_field;
					jule::Bool _82517_same_dest = _80971_m->_field_dest == _82421_dest_field;
					_809110_optimized = true;
					return std::make_tuple(_1e341b080_gen_builtin_append_call_expr_model_assign_opt(_82517_same_dest,_82317_dest_expr,_82421_dest_field->_field_kind,_82221_s,_80971_m),_809110_optimized);
				}
				goto _match_end_4740265744;
				_case_end_4740265824:;
				_match_end_4740265744:;
			}
		}
		goto _match_end_4740264208;
		_case_end_4740256848:;
		_match_end_4740264208:;
	}
	_809110_optimized = false;
	return std::make_tuple(_1e341b080_gen_builtin_append_call_expr_model(_80971_m),_809110_optimized);
}



inline jule::Str _1e341b080_gen_builtin_append_call_expr_model(jule::Ptr<_1e4d70a6b_BuiltinAppendCallExprModel> _83443_m) {
	jule::Str _83513_obj = jule::Str("jule::append(", 13);
	_83513_obj+=_1e341b080_gen_expr_model(_83443_m->_field_dest);
	_83513_obj+=jule::Str(",", 1);
	_83513_obj+=_1e341b080_gen_expr_model(_83443_m->_field_elements);
	_83513_obj+=jule::Str(")", 1);
	return _83513_obj;
}



inline jule::Str _1e341b080_gen_builtin_clone_call_expr_model(jule::Ptr<_1e4d70a6b_BuiltinCloneCallExprModel> _84342_m) {
	jule::Str _84413_obj = jule::Str("jule::clone(", 12);
	_84413_obj+=_1e341b080_gen_expr_model(_84342_m->_field_expr);
	_84413_obj+=jule::Str(")", 1);
	return _84413_obj;
}



inline jule::Str _1e341b080_gen_sizeof_expr_model(jule::Ptr<_1e4d70a6b_SizeofExprModel> _85030_m) {
	jule::Str _85113_obj = jule::Str("sizeof(", 7);
	_85113_obj+=_1e341b080_gen_expr(_85030_m->_field_expr);
	_85113_obj+=jule::Str(")", 1);
	return _85113_obj;
}



inline jule::Str _1e341b080_gen_alignof_expr_model(jule::Ptr<_1e4d70a6b_AlignofExprModel> _85731_m) {
	jule::Str _85813_obj = jule::Str("alignof(", 8);
	_85813_obj+=_1e341b080_gen_expr(_85731_m->_field_expr);
	_85813_obj+=jule::Str(")", 1);
	return _85813_obj;
}



inline jule::Str _1e341b080_gen_rune_expr_model(jule::Ptr<_1e4d70a6b_RuneExprModel> _86424_m) {
	if (_86424_m->_field_code <= 127LL) {
		jule::Str _86617_b = _1e341b080_sbtoa(static_cast<jule::U8>(_86424_m->_field_code));
		if (_86617_b == jule::Str("'", 1)) {
			_86617_b=jule::Str("\\'", 2);
		}
		return (jule::Str("'", 1) + _86617_b) + jule::Str("'", 1);
	}
	return _1e341b080_i64toa(static_cast<jule::I64>(_86424_m->_field_code));
}



inline jule::Str _1e341b080_gen_builtin_error_trait_sub_ident_expr_model(jule::Ptr<_1e4d70a6b_BuiltinErrorTraitSubIdentExprModel> _87553_m) {
	jule::Str _87613_obj = _1e341b080_gen_expr_model(_87553_m->_field_expr);
	_87613_obj+=jule::Str(".get().", 7);
	_87613_obj+=jule::Str("_method_", 8);
	_87613_obj+=_87553_m->_field_ident;
	return _87613_obj;
}



inline jule::Str _1e341b080_gen_struct_static_ident_expr_model(jule::Ptr<_1e4d70a6b_StructStaticIdentExprModel> _88343_m) {
	jule::Str _88413_obj = _1e4da121c_struct_ins_out_ident(_88343_m->_field_structure);
	_88413_obj+=jule::Str("::", 2);
	_88413_obj+=_1e4da121c_fn_ins_out_ident(_88343_m->_field_method);
	return _88413_obj;
}



inline jule::Str _1e341b080_gen_integrated_to_str_expr_model(jule::Ptr<_1e4d70a6b_IntegratedToStrExprModel> _89041_m) {
	jule::Str _89113_obj = jule::Str("jule::to_str(", 13);
	_89113_obj+=_1e341b080_gen_expr_model(_89041_m->_field_expr);
	_89113_obj+=jule::Str(")", 1);
	return _89113_obj;
}



inline jule::Str _1e341b080_gen_ternary_expr_model(jule::Ptr<_1e4d70a6b_TernaryExprModel> _89731_m) {
	jule::Str _89813_obj = jule::Str("((", 2);
	_89813_obj+=_1e341b080_gen_expr_model(_89731_m->_field_condition);
	_89813_obj+=jule::Str(") ? (", 5);
	_89813_obj+=_1e341b080_gen_expr_model(_89731_m->_field_true_expr);
	_89813_obj+=jule::Str(") : (", 5);
	_89813_obj+=_1e341b080_gen_expr_model(_89731_m->_field_false_expr);
	_89813_obj+=jule::Str("))", 2);
	return _89813_obj;
}



inline jule::Str _1e341b080_gen_expr_model(jule::Any _90823_m) {
	{
		auto &_match_expr{ _90823_m };
		if (!(_match_expr.type_is<jule::Ptr<_1e6420856_TypeKind>>())) { goto _case_end_4740310912; }
		_case_begin_4740310912:;
		{
			return _1c8ec69ac_gen_type_kind(_90823_m.operator jule::Ptr<_1e6420856_TypeKind>());
		}
		goto _match_end_4740309184;
		_case_end_4740310912:;
		if (!(_match_expr.type_is<jule::Ptr<_1c8b9b83b_Const>>())) { goto _case_end_4740310464; }
		_case_begin_4740310464:;
		{
			return _1e341b080_gen_const_expr_model(_90823_m.operator jule::Ptr<_1c8b9b83b_Const>());
		}
		goto _match_end_4740309184;
		_case_end_4740310464:;
		if (!(_match_expr.type_is<jule::Ptr<_1e50b0492_Var>>())) { goto _case_end_4740310560; }
		_case_begin_4740310560:;
		{
			return _1e341b080_gen_var_expr_model(_90823_m.operator jule::Ptr<_1e50b0492_Var>());
		}
		goto _match_end_4740309184;
		_case_end_4740310560:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d61232_Trait>>())) { goto _case_end_4740310656; }
		_case_begin_4740310656:;
		{
			return _1e4da121c_trait_out_ident(_90823_m.operator jule::Ptr<_1e4d61232_Trait>());
		}
		goto _match_end_4740309184;
		_case_end_4740310656:;
		if (!(_match_expr.type_is<jule::Ptr<_1e398ee72_Struct>>())) { goto _case_end_4740310096; }
		_case_begin_4740310096:;
		{
			return _1e341b080_gen_struct_expr_model(_90823_m.operator jule::Ptr<_1e398ee72_Struct>());
		}
		goto _match_end_4740309184;
		_case_end_4740310096:;
		if (!(_match_expr.type_is<jule::Ptr<_1e398ee72_StructIns>>())) { goto _case_end_4740310192; }
		_case_begin_4740310192:;
		{
			return _1e341b080_gen_struct_ins_expr_model(_90823_m.operator jule::Ptr<_1e398ee72_StructIns>());
		}
		goto _match_end_4740309184;
		_case_end_4740310192:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4b15a20_FnIns>>())) { goto _case_end_4740310288; }
		_case_begin_4740310288:;
		{
			return _1e341b080_gen_fn_ins_expr_model_common(_90823_m.operator jule::Ptr<_1e4b15a20_FnIns>());
		}
		goto _match_end_4740309184;
		_case_end_4740310288:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_BinopExprModel>>())) { goto _case_end_4740309568; }
		_case_begin_4740309568:;
		{
			return _1e341b080_gen_binop_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_BinopExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740309568:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_UnaryExprModel>>())) { goto _case_end_4740309664; }
		_case_begin_4740309664:;
		{
			return _1e341b080_gen_unary_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_UnaryExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740309664:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_StructLitExprModel>>())) { goto _case_end_4740309760; }
		_case_begin_4740309760:;
		{
			return _1e341b080_gen_struct_lit_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_StructLitExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740309760:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_AllocStructLitExprModel>>())) { goto _case_end_4740309856; }
		_case_begin_4740309856:;
		{
			return _1e341b080_gen_alloc_struct_lit_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_AllocStructLitExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740309856:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_CastingExprModel>>())) { goto _case_end_4740311728; }
		_case_begin_4740311728:;
		{
			return _1e341b080_gen_casting_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_CastingExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740311728:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_FnCallExprModel>>())) { goto _case_end_4740311824; }
		_case_begin_4740311824:;
		{
			return _1e341b080_gen_fn_call_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_FnCallExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740311824:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_SliceExprModel>>())) { goto _case_end_4740311920; }
		_case_begin_4740311920:;
		{
			return _1e341b080_gen_slice_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_SliceExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740311920:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_ArrayExprModel>>())) { goto _case_end_4740312016; }
		_case_begin_4740312016:;
		{
			return _1e341b080_gen_array_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_ArrayExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740312016:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_IndexigExprModel>>())) { goto _case_end_4740312128; }
		_case_begin_4740312128:;
		{
			return _1e341b080_gen_indexing_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_IndexigExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740312128:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_AnonFnExprModel>>())) { goto _case_end_4740312240; }
		_case_begin_4740312240:;
		{
			return _1e341b080_gen_anon_fn_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_AnonFnExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740312240:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_MapExprModel>>())) { goto _case_end_4740312352; }
		_case_begin_4740312352:;
		{
			return _1e341b080_gen_map_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_MapExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740312352:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_SlicingExprModel>>())) { goto _case_end_4740312464; }
		_case_begin_4740312464:;
		{
			return _1e341b080_gen_slicing_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_SlicingExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740312464:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_TraitSubIdentExprModel>>())) { goto _case_end_4740312576; }
		_case_begin_4740312576:;
		{
			return _1e341b080_gen_trait_sub_ident_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_TraitSubIdentExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740312576:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_StructSubIdentExprModel>>())) { goto _case_end_4740312688; }
		_case_begin_4740312688:;
		{
			return _1e341b080_gen_struct_sub_ident_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_StructSubIdentExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740312688:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_CommonIdentExprModel>>())) { goto _case_end_4740312800; }
		_case_begin_4740312800:;
		{
			return _1e341b080_gen_common_ident_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_CommonIdentExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740312800:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_CommonSubIdentExprModel>>())) { goto _case_end_4740312912; }
		_case_begin_4740312912:;
		{
			return _1e341b080_gen_common_sub_ident_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_CommonSubIdentExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740312912:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_TupleExprModel>>())) { goto _case_end_4740313024; }
		_case_begin_4740313024:;
		{
			return _1e341b080_gen_tuple_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_TupleExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740313024:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_BuiltinOutCallExprModel>>())) { goto _case_end_4740313136; }
		_case_begin_4740313136:;
		{
			return _1e341b080_gen_builtin_out_call_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_BuiltinOutCallExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740313136:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_BuiltinOutlnCallExprModel>>())) { goto _case_end_4740313248; }
		_case_begin_4740313248:;
		{
			return _1e341b080_gen_builtin_outln_call_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_BuiltinOutlnCallExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740313248:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_BuiltinNewCallExprModel>>())) { goto _case_end_4740313360; }
		_case_begin_4740313360:;
		{
			return _1e341b080_gen_builtin_new_call_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_BuiltinNewCallExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740313360:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_BuiltinRealCallExprModel>>())) { goto _case_end_4740313472; }
		_case_begin_4740313472:;
		{
			return _1e341b080_gen_builtin_real_call_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_BuiltinRealCallExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740313472:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_BuiltinDropCallExprModel>>())) { goto _case_end_4740313584; }
		_case_begin_4740313584:;
		{
			return _1e341b080_gen_builtin_drop_call_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_BuiltinDropCallExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740313584:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_BuiltinPanicCallExprModel>>())) { goto _case_end_4740313696; }
		_case_begin_4740313696:;
		{
			return _1e341b080_gen_builtin_panic_call_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_BuiltinPanicCallExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740313696:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_BuiltinMakeCallExprModel>>())) { goto _case_end_4740313808; }
		_case_begin_4740313808:;
		{
			return _1e341b080_gen_builtin_make_call_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_BuiltinMakeCallExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740313808:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_BuiltinAppendCallExprModel>>())) { goto _case_end_4740313920; }
		_case_begin_4740313920:;
		{
			return _1e341b080_gen_builtin_append_call_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_BuiltinAppendCallExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740313920:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_BuiltinCloneCallExprModel>>())) { goto _case_end_4740314032; }
		_case_begin_4740314032:;
		{
			return _1e341b080_gen_builtin_clone_call_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_BuiltinCloneCallExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740314032:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_SizeofExprModel>>())) { goto _case_end_4740314144; }
		_case_begin_4740314144:;
		{
			return _1e341b080_gen_sizeof_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_SizeofExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740314144:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_AlignofExprModel>>())) { goto _case_end_4740314256; }
		_case_begin_4740314256:;
		{
			return _1e341b080_gen_alignof_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_AlignofExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740314256:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_RuneExprModel>>())) { goto _case_end_4740314368; }
		_case_begin_4740314368:;
		{
			return _1e341b080_gen_rune_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_RuneExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740314368:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_BuiltinErrorTraitSubIdentExprModel>>())) { goto _case_end_4740314480; }
		_case_begin_4740314480:;
		{
			return _1e341b080_gen_builtin_error_trait_sub_ident_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_BuiltinErrorTraitSubIdentExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740314480:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_StructStaticIdentExprModel>>())) { goto _case_end_4740314592; }
		_case_begin_4740314592:;
		{
			return _1e341b080_gen_struct_static_ident_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_StructStaticIdentExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740314592:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_IntegratedToStrExprModel>>())) { goto _case_end_4740314704; }
		_case_begin_4740314704:;
		{
			return _1e341b080_gen_integrated_to_str_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_IntegratedToStrExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740314704:;
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_TernaryExprModel>>())) { goto _case_end_4740314816; }
		_case_begin_4740314816:;
		{
			return _1e341b080_gen_ternary_expr_model(_90823_m.operator jule::Ptr<_1e4d70a6b_TernaryExprModel>());
		}
		goto _match_end_4740309184;
		_case_end_4740314816:;
		_case_begin_4740307024:;
		{
			return jule::Str("<unimplemented_expression_model>", 32);
		}
		goto _match_end_4740309184;
		_case_end_4740307024:;
		_match_end_4740309184:;
	}
}



inline jule::Str _1e341b080_gen_expr(jule::Any _103517_e) {
	jule::Str _103613_obj = _1e341b080_gen_expr_model(_103517_e);
	if (_103613_obj[0LL] != '(') {
		return _103613_obj;
	}
	{
		auto &_match_expr{ _103517_e };
		if (!(_match_expr.type_is<jule::Ptr<_1e4d70a6b_BinopExprModel>>())) { goto _case_end_4740369856; }
		_case_begin_4740369856:;
		{
			_103613_obj=_103613_obj.slice(1LL,_103613_obj.len() - 1LL);
		}
		goto _match_end_4740369104;
		_case_end_4740369856:;
		_match_end_4740369104:;
	}
	return _103613_obj;
}



inline jule::Str _1e341b080_gen_val(jule::Ptr<_1e50ac4b1_Value> _104816_v) {
	if (_104816_v->_field_data->_method_is_const()) {
		return _1e341b080_gen_const_expr(_104816_v->_field_data);
	}
	return _1e341b080_gen_expr(_104816_v->_field_data->_field_model);
}



inline jule::Str _1e341b080_get_init_expr(jule::Ptr<_1e6420856_TypeKind> _105522_t) {
	if (_105522_t->_method_ptr() != nullptr) {
		return jule::Str("nullptr", 7);
	}
	jule::Ptr<_1e4d62387_Enum> _106013_enm = _105522_t->_method_enm();
	if (_106013_enm != nullptr) {
		return _1e341b080_gen_val(_106013_enm->_field_items[0LL]->_field_value);
	}
	return _1c8ec69ac_gen_type_kind(_105522_t) + jule::Str("()", 2);
}



inline jule::Str _1c8e93319_get_derive_fn_decl_clone(jule::Ptr<_1e398ee72_Struct>& _730_s) {
	jule::Str _813_obj = _1c8ec69ac_gen_struct_kind(_730_s);
	_813_obj+=jule::Str(" clone(void) const ", 19);
	return _813_obj;
}



inline jule::Str _1c8e93319_get_derive_fn_def_clone(jule::Ptr<_1e398ee72_Struct>& _1329_s) {
	jule::Str _1413_obj = _1c8ec69ac_gen_struct_kind(_1329_s);
	_1413_obj+=jule::Str(" ", 1) + _1413_obj;
	_1413_obj+=jule::Str("::clone(void) const ", 20);
	return _1413_obj;
}



inline jule::Str _1e4da121c_as_ident(jule::Str _2513_ident) {
	return jule::Str("_", 1) + _2513_ident;
}



inline jule::Str _1e4da121c_as_jt(jule::Str _2814_id) {
	if ((97LL <= _2814_id[0LL]) && (_2814_id[0LL] <= 122LL)) {
		_2814_id[0LL]-=32LL;
	}
	return jule::Str("jule::", 6) + _2814_id;
}



inline jule::Str _1e4da121c_get_addr_as_ident(jule::Uintptr _3622_addr) {
	return jule::Str("_", 1) + _1e3417be7_fmt_uint(static_cast<jule::U64>(_3622_addr),15LL);
}



inline jule::Str _1e4da121c_as_out_ident(jule::Str _4517_ident,jule::Uintptr _4529_addr) {
	if (_4529_addr != 0LL) {
		jule::Str _4717_obj = _1e4da121c_get_addr_as_ident(_4529_addr);
		_4717_obj+=jule::Str("_", 1);
		_4717_obj+=_4517_ident;
		return _4717_obj;
	}
	return _1e4da121c_as_ident(_4517_ident);
}



inline jule::Str _1e4da121c_as_local_ident(jule::Int _6119_row,jule::Int _6129_col,jule::Str _6139_ident) {
	jule::Str _6213_obj = _1e3417be7_itoa(_6119_row);
	_6213_obj+=_1e3417be7_itoa(_6129_col);
	_6213_obj+=jule::Str("_", 1);
	_6213_obj+=_6139_ident;
	return _1e4da121c_as_ident(_6213_obj);
}



inline jule::Str _1e4da121c_fn_out_ident(jule::Ptr<_1e4b15a20_Fn>& _7018_f) {
	{
		if (!((_7018_f->_field_cpp_linked))) { goto _case_end_4740402624; }
		_case_begin_4740402624:;
		{
			return _7018_f->_field_ident;
		}
		goto _match_end_4740399328;
		_case_end_4740402624:;
		if (!((_7018_f->_field_ident == jule::Str("main", 4)))) { goto _case_end_4740400848; }
		_case_begin_4740400848:;
		{
			return jule::Str("entry_point", 11);
		}
		goto _match_end_4740399328;
		_case_end_4740400848:;
		if (!((_7018_f->_method_is_method()))) { goto _case_end_4740400480; }
		_case_begin_4740400480:;
		{
			if (_7018_f->_field_statically) {
				return jule::Str("_static_method_", 15) + _7018_f->_field_ident;
			}
			return jule::Str("_method_", 8) + _7018_f->_field_ident;
		}
		goto _match_end_4740399328;
		_case_end_4740400480:;
		_case_begin_4740399584:;
		{
			return _1e4da121c_as_out_ident(_7018_f->_field_ident,static_cast<jule::Uintptr>(_7018_f->_field_token._field_file->_method_addr()));
		}
		goto _match_end_4740399328;
		_case_end_4740399584:;
		_match_end_4740399328:;
	}
}



inline jule::Str _1e4da121c_fn_ins_out_ident(jule::Ptr<_1e4b15a20_FnIns>& _9026_f) {
	if (_9026_f->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _9026_f->_field_decl->_field_ident;
	}
	if (_9026_f->_field_decl->_field_cpp_linked || (_9026_f->_field_generics.len() == 0LL)) {
		return _1e4da121c_fn_out_ident(_9026_f->_field_decl);
	}
	{
		auto &expr = _9026_f->_field_decl->_field_instances;
		auto it = expr.begin();
		_iter_begin_4740409840:;
		if (it != expr.end()) {
			jule::Int _1e4da121c_i = it - expr.begin();
			jule::Ptr<_1e4b15a20_FnIns> _1e4da121c_ins = *it;
			{
				if (_1e4da121c_ins->_method_same(_9026_f)) {
					jule::Str _10121_obj = _1e4da121c_fn_out_ident(_9026_f->_field_decl);
					_10121_obj+=jule::Str("_", 1);
					_10121_obj+=_1e3417be7_itoa(_1e4da121c_i);
					return _10121_obj;
				}
			}
			_iter_next_4740409840:;
			++it;
			_1e4da121c_i++;
			goto _iter_begin_4740409840;
		}
		_iter_end_4740409840:;
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _1e4da121c_trait_out_ident(jule::Ptr<_1e4d61232_Trait> _11220_t) {
	if (_11220_t->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _11220_t->_field_ident;
	}
	return _1e4da121c_as_out_ident(_11220_t->_field_ident,static_cast<jule::Uintptr>(_11220_t->_field_token._field_file->_method_addr()));
}



inline jule::Str _1e4da121c_param_out_ident(jule::Ptr<_1e4b15a20_Param>& _12021_p) {
	if (_1e3bad8dd_is_anon_ident(_12021_p->_field_ident) || _1e3bad8dd_is_ignore_ident(_12021_p->_field_ident)) {
		return jule::Str();
	}
	return _1e4da121c_as_local_ident(_12021_p->_field_token._field_row,_12021_p->_field_token._field_column,_12021_p->_field_ident);
}



inline jule::Str _1e4da121c_struct_out_ident(jule::Ptr<_1e398ee72_Struct>& _12822_s) {
	if (_12822_s->_field_cpp_linked) {
		if (_1c8ec69ac_has_directive(_12822_s->_field_directives,jule::Str("typedef", 7))) {
			return _12822_s->_field_ident;
		}
		return jule::Str("struct ", 7) + _12822_s->_field_ident;
	}
	return _1e4da121c_as_out_ident(_12822_s->_field_ident,static_cast<jule::Uintptr>(_12822_s->_field_token._field_file->_method_addr()));
}



inline jule::Str _1e4da121c_struct_ins_out_ident(jule::Ptr<_1e398ee72_StructIns>& _13930_s) {
	if (_13930_s->_field_decl->_field_cpp_linked || (_13930_s->_field_generics.len() == 0LL)) {
		return _1e4da121c_struct_out_ident(_13930_s->_field_decl);
	}
	{
		auto &expr = _13930_s->_field_decl->_field_instances;
		auto it = expr.begin();
		_iter_begin_4740428160:;
		if (it != expr.end()) {
			jule::Int _1e4da121c_i = it - expr.begin();
			jule::Ptr<_1e398ee72_StructIns> _1e4da121c_ins = *it;
			{
				if (_1e4da121c_ins->_method_same(_13930_s)) {
					jule::Str _14621_obj = _1e4da121c_struct_out_ident(_13930_s->_field_decl);
					_14621_obj+=jule::Str("_", 1);
					_14621_obj+=_1e3417be7_itoa(_1e4da121c_i);
					return _14621_obj;
				}
			}
			_iter_next_4740428160:;
			++it;
			_1e4da121c_i++;
			goto _iter_begin_4740428160;
		}
		_iter_end_4740428160:;
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _1e4da121c_field_out_ident(jule::Ptr<_1e398ee72_Field>& _15721_f) {
	if (_15721_f->_field_owner->_field_cpp_linked) {
		return _15721_f->_field_ident;
	}
	return jule::Str("_field_", 7) + _15721_f->_field_ident;
}



inline jule::Str _1e4da121c_var_out_ident(jule::Ptr<_1e50b0492_Var> _16522_v) {
	{
		if (!((_16522_v->_field_cpp_linked))) { goto _case_end_4740438672; }
		_case_begin_4740438672:;
		{
			return _16522_v->_field_ident;
		}
		goto _match_end_4740433504;
		_case_end_4740438672:;
		if (!((_16522_v->_field_ident == jule::Str("self", 4)))) { goto _case_end_4740437088; }
		_case_begin_4740437088:;
		{
			if (_16522_v->_field_kind->_field_kind->_method_sptr() != nullptr) {
				return jule::Str("this->self", 10);
			}
			return jule::Str("(*this)", 7);
		}
		goto _match_end_4740433504;
		_case_end_4740437088:;
		if (!((_16522_v->_field_scope != nullptr))) { goto _case_end_4740436720; }
		_case_begin_4740436720:;
		{
			return _1e4da121c_as_local_ident(_16522_v->_field_token._field_row,_16522_v->_field_token._field_column,_16522_v->_field_ident);
		}
		goto _match_end_4740433504;
		_case_end_4740436720:;
		_case_begin_4740435744:;
		{
			return _1e4da121c_as_out_ident(_16522_v->_field_ident,static_cast<jule::Uintptr>(_16522_v->_field_token._field_file->_method_addr()));
		}
		goto _match_end_4740433504;
		_case_end_4740435744:;
		_match_end_4740433504:;
	}
}



inline jule::Str _1e4da121c_iter_begin_label_ident(jule::Uintptr _18527_it) {
	return jule::Str("_iter_begin_", 12) + _1e3417be7_itoa(static_cast<jule::Int>(_18527_it));
}



inline jule::Str _1e4da121c_iter_end_label_ident(jule::Uintptr _19025_it) {
	return jule::Str("_iter_end_", 10) + _1e3417be7_itoa(static_cast<jule::Int>(_19025_it));
}



inline jule::Str _1e4da121c_iter_next_label_ident(jule::Uintptr _19526_it) {
	return jule::Str("_iter_next_", 11) + _1e3417be7_itoa(static_cast<jule::Int>(_19526_it));
}



inline jule::Str _1e4da121c_label_ident(jule::Str _20016_ident) {
	return jule::Str("_julec_label_", 13) + _20016_ident;
}



inline jule::Str _1e4da121c_match_end_label_ident(jule::Uintptr _20526_m) {
	return jule::Str("_match_end_", 11) + _1e3417be7_itoa(static_cast<jule::Int>(_20526_m));
}



inline jule::Str _1e4da121c_case_begin_label_ident(jule::Uintptr _21027_c) {
	return jule::Str("_case_begin_", 12) + _1e3417be7_itoa(static_cast<jule::Int>(_21027_c));
}



inline jule::Str _1e4da121c_case_end_label_ident(jule::Uintptr _21525_c) {
	return jule::Str("_case_end_", 10) + _1e3417be7_itoa(static_cast<jule::Int>(_21525_c));
}



inline jule::Ptr<_1e38d4ec7_Directive> _1c8ec69ac_find_directive(jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>& _2524_directives,jule::Str _2555_tag) {
	{
		auto &expr = _2524_directives;
		auto it = expr.begin();
		_iter_begin_4740453360:;
		if (it != expr.end()) {
			jule::Ptr<_1e38d4ec7_Directive> _1c8ec69ac_dr = *it;
			{
				if (_1c8ec69ac_dr->_field_tag._field_kind == _2555_tag) {
					return _1c8ec69ac_dr;
				}
			}
			_iter_next_4740453360:;
			++it;
			goto _iter_begin_4740453360;
		}
		_iter_end_4740453360:;
	}
	return nullptr;
}



inline jule::Bool _1c8ec69ac_has_directive(jule::Slice<jule::Ptr<_1e38d4ec7_Directive>>& _3519_directives,jule::Str _3550_tag) {
	return _1c8ec69ac_find_directive(_3519_directives,_3550_tag) != nullptr;
}



inline jule::Str _1c8ec69ac_gen_prim_kind(jule::Ptr<_1e6420856_Prim> _4018_p) {
	return _1e4da121c_as_jt(_4018_p->_method_to_str());
}



inline jule::Str _1c8ec69ac_gen_tuple_kind(jule::Ptr<_1e6420856_Tuple> _4523_t) {
	jule::Str _4613_obj = jule::Str("std::tuple<", 11);
	{
		auto &expr = _4523_t->_field_types;
		auto it = expr.begin();
		_iter_begin_4740461120:;
		if (it != expr.end()) {
			jule::Ptr<_1e6420856_TypeKind> _1c8ec69ac_tk = *it;
			{
				_4613_obj+=_1c8ec69ac_gen_type_kind(_1c8ec69ac_tk);
				_4613_obj+=jule::Str(",", 1);
			}
			_iter_next_4740461120:;
			++it;
			goto _iter_begin_4740461120;
		}
		_iter_end_4740461120:;
	}
	_4613_obj=_4613_obj.slice(0LL,_4613_obj.len() - 1LL);
	_4613_obj+=jule::Str(">", 1);
	return _4613_obj;
}



inline jule::Str _1c8ec69ac_as_sptr_kind(jule::Str _5717_elem) {
	jule::Str _5813_obj = _1e4da121c_as_jt(jule::Str("ptr", 3));
	_5813_obj+=jule::Str("<", 1);
	_5813_obj+=_5717_elem;
	_5813_obj+=jule::Str(">", 1);
	return _5813_obj;
}



inline jule::Str _1c8ec69ac_gen_sptr_kind(jule::Ptr<_1e6420856_Sptr> _6622_sptr) {
	return _1c8ec69ac_as_sptr_kind(_1c8ec69ac_gen_type_kind(_6622_sptr->_field_elem));
}



inline jule::Str _1c8ec69ac_gen_ptr_kind(jule::Ptr<_1e6420856_Ptr> _7121_p) {
	
	if (_7121_p->_method_is_unsafe()) {
		return jule::Str("void*", 5);
	}
	jule::Str _7713_elem = _1c8ec69ac_gen_type_kind(_7121_p->_field_elem);
	_7713_elem+=jule::Str("*", 1);
	return _7713_elem;
}



inline jule::Str _1c8ec69ac_gen_enum_kind(jule::Ptr<_1e4d62387_Enum> _8322_e) {
	return _1c8ec69ac_gen_type_kind(_8322_e->_field_kind->_field_kind);
}



inline jule::Str _1c8ec69ac_as_slice_kind(jule::Ptr<_1e6420856_TypeKind> _8722_elem) {
	jule::Str _8813_obj = _1e4da121c_as_jt(jule::Str("slice", 5));
	_8813_obj+=jule::Str("<", 1);
	_8813_obj+=_1c8ec69ac_gen_type_kind(_8722_elem);
	_8813_obj+=jule::Str(">", 1);
	return _8813_obj;
}



inline jule::Str _1c8ec69ac_gen_slice_kind(jule::Ptr<_1e6420856_Slc> _9623_s) {
	return _1c8ec69ac_as_slice_kind(_9623_s->_field_elem);
}



inline jule::Str _1c8ec69ac_gen_map_kind(jule::Ptr<_1e6420856_Map> _10121_m) {
	jule::Str _10213_obj = _1e4da121c_as_jt(jule::Str("map", 3));
	_10213_obj+=jule::Str("<", 1);
	_10213_obj+=_1c8ec69ac_gen_type_kind(_10121_m->_field_key);
	_10213_obj+=jule::Str(",", 1);
	_10213_obj+=_1c8ec69ac_gen_type_kind(_10121_m->_field_val);
	_10213_obj+=jule::Str(">", 1);
	return _10213_obj;
}



inline jule::Str _1c8ec69ac_gen_trait_kind_from_ident(jule::Str _11130_ident) {
	jule::Str _11213_obj = _1e4da121c_as_jt(jule::Str("trait", 5));
	_11213_obj+=jule::Str("<", 1);
	_11213_obj+=_11130_ident;
	_11213_obj+=jule::Str(">", 1);
	return _11213_obj;
}



inline jule::Str _1c8ec69ac_gen_trait_kind(jule::Ptr<_1e4d61232_Trait> _12019_t) {
	jule::Str _1219_ident = _1e4da121c_trait_out_ident(_12019_t);
	return _1c8ec69ac_gen_trait_kind_from_ident(_1219_ident);
}



inline jule::Str _1c8ec69ac_gen_struct_kind(jule::Ptr<_1e398ee72_Struct> _12620_s) {
	jule::Str _12713_rep = jule::Str();
	if (_12620_s->_field_cpp_linked && (!(_1c8ec69ac_has_directive(_12620_s->_field_directives,jule::Str("typedef", 7))))) {
		_12713_rep+=jule::Str("struct ", 7);
	}
	_12713_rep+=_1e4da121c_struct_out_ident(_12620_s);
	return _12713_rep;
}



inline jule::Str _1c8ec69ac_gen_struct_kind_ins(jule::Ptr<_1e398ee72_StructIns> _13728_s) {
	if (_13728_s->_field_decl->_field_cpp_linked) {
		jule::Str _13917_ident = _1e4da121c_struct_ins_out_ident(_13728_s);
		if (_13728_s->_field_generics.len() > 0LL) {
			_13917_ident+=jule::Str("<", 1);
			{
				auto &expr = _13728_s->_field_generics;
				auto it = expr.begin();
				_iter_begin_4740491200:;
				if (it != expr.end()) {
					jule::Ptr<_1e6420856_TypeKind> _1c8ec69ac_g = *it;
					{
						_13917_ident+=_1c8ec69ac_gen_type_kind(_1c8ec69ac_g);
						_13917_ident+=jule::Str(",", 1);
					}
					_iter_next_4740491200:;
					++it;
					goto _iter_begin_4740491200;
				}
				_iter_end_4740491200:;
			}
			_13917_ident=_13917_ident.slice(0LL,_13917_ident.len() - 1LL);
			_13917_ident+=jule::Str(">", 1);
		}
		jule::Ptr<_1e38d4ec7_Directive> _14913_d = _1c8ec69ac_find_directive(_13728_s->_field_decl->_field_directives,jule::Str("namespace", 9));
		if (_14913_d != nullptr) {
			_13917_ident=(_1e341b080_concat_all_parts(_14913_d->_field_args) + jule::Str("::", 2)) + _13917_ident;
		}
		return _13917_ident;
	}
	return _1e4da121c_struct_ins_out_ident(_13728_s);
}



inline jule::Str _1c8ec69ac_gen_array_kind(jule::Ptr<_1e6420856_Arr> _15923_a) {
	jule::Str _16013_obj = _1e4da121c_as_jt(jule::Str("array", 5));
	_16013_obj+=jule::Str("<", 1);
	_16013_obj+=_1c8ec69ac_gen_type_kind(_15923_a->_field_elem);
	_16013_obj+=jule::Str(",", 1);
	_16013_obj+=_1e3417be7_itoa(_15923_a->_field_n);
	_16013_obj+=jule::Str(">", 1);
	return _16013_obj;
}



inline jule::Str _1c8ec69ac_gen_fn_anon_decl(jule::Ptr<_1e4b15a20_FnIns> _16925_f) {
	jule::Str _17013_decl = _1c9006426_gen_fn_ins_result(_16925_f);
	_17013_decl+=jule::Str("(", 1);
	if (_16925_f->_field_params.len() > 0LL) {
		{
			auto &expr = _16925_f->_field_params;
			auto it = expr.begin();
			_iter_begin_4740503536:;
			if (it != expr.end()) {
				jule::Ptr<_1e4b15a20_ParamIns> _1c8ec69ac_param = *it;
				{
					if (_1c8ec69ac_param->_field_decl->_method_is_self()) {
						goto _iter_next_4740503536;
					}
					_17013_decl+=_1c9006426_gen_param_ins_prototype(_1c8ec69ac_param);
					_17013_decl+=jule::Str(",", 1);
				}
				_iter_next_4740503536:;
				++it;
				goto _iter_begin_4740503536;
			}
			_iter_end_4740503536:;
		}
		_17013_decl=_17013_decl.slice(0LL,_17013_decl.len() - 1LL);
	} else {
		_17013_decl+=jule::Str("void", 4);
	}
	_17013_decl+=jule::Str(")", 1);
	return _17013_decl;
}



inline jule::Str _1c8ec69ac_gen_fn_kind(jule::Ptr<_1e4b15a20_FnIns> _19220_f) {
	jule::Str _19313_obj = _1e4da121c_as_jt(jule::Str("fn", 2));
	_19313_obj+=jule::Str("<", 1);
	_19313_obj+=_1c8ec69ac_gen_fn_anon_decl(_19220_f);
	_19313_obj+=jule::Str(">", 1);
	return _19313_obj;
}



inline jule::Str _1c8ec69ac_gen_type_kind(jule::Ptr<_1e6420856_TypeKind> _20122_k) {
	{
		if (!((_20122_k->_method_cpp_linked()))) { goto _case_end_4740512128; }
		_case_begin_4740512128:;
		{
			return _20122_k->_field_cpp_ident;
		}
		goto _match_end_4740510608;
		_case_end_4740512128:;
		if (!((_20122_k->_method_prim() != nullptr))) { goto _case_end_4740512224; }
		_case_begin_4740512224:;
		{
			return _1c8ec69ac_gen_prim_kind(_20122_k->_method_prim());
		}
		goto _match_end_4740510608;
		_case_end_4740512224:;
		if (!((_20122_k->_method_tup() != nullptr))) { goto _case_end_4740511760; }
		_case_begin_4740511760:;
		{
			return _1c8ec69ac_gen_tuple_kind(_20122_k->_method_tup());
		}
		goto _match_end_4740510608;
		_case_end_4740511760:;
		if (!((_20122_k->_method_sptr() != nullptr))) { goto _case_end_4740511856; }
		_case_begin_4740511856:;
		{
			return _1c8ec69ac_gen_sptr_kind(_20122_k->_method_sptr());
		}
		goto _match_end_4740510608;
		_case_end_4740511856:;
		if (!((_20122_k->_method_ptr() != nullptr))) { goto _case_end_4740511952; }
		_case_begin_4740511952:;
		{
			return _1c8ec69ac_gen_ptr_kind(_20122_k->_method_ptr());
		}
		goto _match_end_4740510608;
		_case_end_4740511952:;
		if (!((_20122_k->_method_enm() != nullptr))) { goto _case_end_4740511152; }
		_case_begin_4740511152:;
		{
			return _1c8ec69ac_gen_enum_kind(_20122_k->_method_enm());
		}
		goto _match_end_4740510608;
		_case_end_4740511152:;
		if (!((_20122_k->_method_slc() != nullptr))) { goto _case_end_4740511248; }
		_case_begin_4740511248:;
		{
			return _1c8ec69ac_gen_slice_kind(_20122_k->_method_slc());
		}
		goto _match_end_4740510608;
		_case_end_4740511248:;
		if (!((_20122_k->_method_map() != nullptr))) { goto _case_end_4740511344; }
		_case_begin_4740511344:;
		{
			return _1c8ec69ac_gen_map_kind(_20122_k->_method_map());
		}
		goto _match_end_4740510608;
		_case_end_4740511344:;
		if (!((_20122_k->_method_trt() != nullptr))) { goto _case_end_4740511440; }
		_case_begin_4740511440:;
		{
			return _1c8ec69ac_gen_trait_kind(_20122_k->_method_trt());
		}
		goto _match_end_4740510608;
		_case_end_4740511440:;
		if (!((_20122_k->_method_strct() != nullptr))) { goto _case_end_4740512752; }
		_case_begin_4740512752:;
		{
			return _1c8ec69ac_gen_struct_kind_ins(_20122_k->_method_strct());
		}
		goto _match_end_4740510608;
		_case_end_4740512752:;
		if (!((_20122_k->_method_arr() != nullptr))) { goto _case_end_4740512848; }
		_case_begin_4740512848:;
		{
			return _1c8ec69ac_gen_array_kind(_20122_k->_method_arr());
		}
		goto _match_end_4740510608;
		_case_end_4740512848:;
		if (!((_20122_k->_method_fnc() != nullptr))) { goto _case_end_4740512944; }
		_case_begin_4740512944:;
		{
			return _1c8ec69ac_gen_fn_kind(_20122_k->_method_fnc());
		}
		goto _match_end_4740510608;
		_case_end_4740512944:;
		_case_begin_4740510864:;
		{
			return jule::Str("[<unimplemented_type_kind>]", 27);
		}
		goto _match_end_4740510608;
		_case_end_4740510864:;
		_match_end_4740510608:;
	}
}



inline void _1c9006426_add_indent(void) {
	_1c9006426_INDENT.push(9LLU);
}



inline void _1c9006426_done_indent(void) {
	_1c9006426_INDENT=_1c9006426_INDENT.slice(0LL,_1c9006426_INDENT.len() - 1LL);
}



inline jule::Str _1c9006426_indent(void) {
	return static_cast<jule::Str>(_1c9006426_INDENT);
}



inline jule::Bool _1c9006426_is_cpp_header_file(jule::Str _6723_path) {
	jule::Int _689_offset = _6723_path.rfind(jule::Str(".", 1));
	if (_689_offset == -1LL) {
		return false;
	}
	return _1e243c019_is_valid_header_ext(_6723_path.slice(_689_offset));
}



inline jule::Str _1c9006426_gen_links(jule::Ptr<_1e376ec74_IR>& _7619_ir) {
	jule::Str _7713_obj = jule::Str();
	{
		auto &expr = _7619_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4740536752:;
		if (it != expr.end()) {
			jule::Ptr<_1e4ee54e8_ImportInfo> _1c9006426_pkg = *it;
			{
				{
					if (!(((!(_1c9006426_pkg->_field_cpp_linked))))) { goto _case_end_4740538448; }
					_case_begin_4740538448:;
					{
						goto _iter_next_4740536752;
					}
					goto _match_end_4740538224;
					_case_end_4740538448:;
					if (!((_1e243c019_is_std_header_path(_1c9006426_pkg->_field_path)))) { goto _case_end_4740538560; }
					_case_begin_4740538560:;
					{
						_7713_obj+=jule::Str("#include ", 9);
						_7713_obj+=_1c9006426_pkg->_field_path;
						_7713_obj+=jule::Str("\n", 1);
					}
					goto _match_end_4740538224;
					_case_end_4740538560:;
					_match_end_4740538224:;
				}
			}
			_iter_next_4740536752:;
			++it;
			goto _iter_begin_4740536752;
		}
		_iter_end_4740536752:;
	}
	{
		auto &expr = _7619_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4740539440:;
		if (it != expr.end()) {
			jule::Ptr<_1e4ee54e8_ImportInfo> _1c9006426_pkg = *it;
			{
				{
					if (!(((!(_1c9006426_pkg->_field_cpp_linked))))) { goto _case_end_4740542384; }
					_case_begin_4740542384:;
					{
						goto _iter_next_4740539440;
					}
					goto _match_end_4740537808;
					_case_end_4740542384:;
					if (!((_1c9006426_is_cpp_header_file(_1c9006426_pkg->_field_path)))) { goto _case_end_4740542496; }
					_case_begin_4740542496:;
					{
						_7713_obj+=jule::Str("#include \"", 10);
						_7713_obj+=_1c9006426_pkg->_field_path;
						_7713_obj+=jule::Str("\"\n", 2);
					}
					goto _match_end_4740537808;
					_case_end_4740542496:;
					_match_end_4740537808:;
				}
			}
			_iter_next_4740539440:;
			++it;
			goto _iter_begin_4740539440;
		}
		_iter_end_4740539440:;
	}
	return _7713_obj;
}



inline jule::Str _1c9006426_gen_fn_result(jule::Ptr<_1e4b15a20_Fn>& _10523_f) {
	if (_10523_f->_method_is_void()) {
		return jule::Str("void", 4);
	}
	return _1c8ec69ac_gen_type_kind(_10523_f->_field_result->_field_kind->_field_kind);
}



inline jule::Str _1c9006426_gen_fn_ins_result(jule::Ptr<_1e4b15a20_FnIns>& _11327_f) {
	if (_11327_f->_field_decl->_method_is_void()) {
		return jule::Str("void", 4);
	}
	return _1c8ec69ac_gen_type_kind(_11327_f->_field_result);
}



inline jule::Str _1c9006426_gen_param_prototype(jule::Ptr<_1e4b15a20_Param>& _12129_p) {
	jule::Str _12213_obj = jule::Str();
	if (_12129_p->_field_variadic) {
		_12213_obj+=_1e4da121c_as_jt(jule::Str("slice", 5));
		_12213_obj+=jule::Str("<", 1);
		_12213_obj+=_1c8ec69ac_gen_type_kind(_12129_p->_field_kind->_field_kind);
		_12213_obj+=jule::Str(">", 1);
	} else {
		_12213_obj+=_1c8ec69ac_gen_type_kind(_12129_p->_field_kind->_field_kind);
	}
	return _12213_obj;
}



inline jule::Str _1c9006426_gen_param_ins(jule::Ptr<_1e4b15a20_ParamIns>& _13523_p) {
	jule::Str _13613_obj = _1c9006426_gen_param_ins_prototype(_13523_p);
	_13613_obj+=jule::Str(" ", 1);
	_13613_obj+=_1e4da121c_param_out_ident(_13523_p->_field_decl);
	return _13613_obj;
}



inline jule::Str _1c9006426_gen_param_ins_prototype(jule::Ptr<_1e4b15a20_ParamIns>& _14333_p) {
	jule::Str _14413_obj = jule::Str();
	if (_14333_p->_field_decl->_field_variadic) {
		_14413_obj+=_1e4da121c_as_jt(jule::Str("slice", 5));
		_14413_obj+=jule::Str("<", 1);
		_14413_obj+=_1c8ec69ac_gen_type_kind(_14333_p->_field_kind);
		_14413_obj+=jule::Str(">", 1);
	} else {
		_14413_obj+=_1c8ec69ac_gen_type_kind(_14333_p->_field_kind);
	}
	if (_14333_p->_field_decl->_field_reference) {
		_14413_obj+=jule::Str("&", 1);
	}
	return _14413_obj;
}



inline jule::Str _1c9006426_gen_param(jule::Ptr<_1e4b15a20_Param>& _16219_p) {
	jule::Str _16313_obj = _1c9006426_gen_param_prototype(_16219_p);
	if (((_16219_p->_field_ident != jule::Str()) && (!(_1e3bad8dd_is_ignore_ident(_16219_p->_field_ident)))) && (!(_1e3bad8dd_is_anon_ident(_16219_p->_field_ident)))) {
		_16313_obj+=jule::Str(" ", 1);
		_16313_obj+=_1e4da121c_param_out_ident(_16219_p);
	}
	return _16313_obj;
}



inline jule::Str _1c9006426_gen_params(jule::Slice<jule::Ptr<_1e4b15a20_Param>>& _17220_params) {
	{
		if (!((_17220_params.len() == 0LL))) { goto _case_end_4740568256; }
		_case_begin_4740568256:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4740568032;
		_case_end_4740568256:;
		if (!(((_17220_params.len() == 1LL) && _17220_params[0LL]->_method_is_self()))) { goto _case_end_4740568368; }
		_case_begin_4740568368:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4740568032;
		_case_end_4740568368:;
		_match_end_4740568032:;
	}
	jule::Str _18113_obj = jule::Str("(", 1);
	{
		auto &expr = _17220_params;
		auto it = expr.begin();
		_iter_begin_4740571664:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_Param> _1c9006426_p = *it;
			{
				if ((!(_1c9006426_p->_method_is_self()))) {
					_18113_obj+=_1c9006426_gen_param(_1c9006426_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4740571664:;
			++it;
			goto _iter_begin_4740571664;
		}
		_iter_end_4740571664:;
	}
	_18113_obj=_18113_obj.slice(0LL,_18113_obj.len() - 1LL);
	return _18113_obj + jule::Str(")", 1);
}



inline jule::Str _1c9006426_gen_params_ins(jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>& _19324_params) {
	{
		if (!((_19324_params.len() == 0LL))) { goto _case_end_4740572960; }
		_case_begin_4740572960:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4740575920;
		_case_end_4740572960:;
		if (!(((_19324_params.len() == 1LL) && _19324_params[0LL]->_field_decl->_method_is_self()))) { goto _case_end_4740576480; }
		_case_begin_4740576480:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4740575920;
		_case_end_4740576480:;
		_match_end_4740575920:;
	}
	jule::Str _20213_obj = jule::Str("(", 1);
	{
		auto &expr = _19324_params;
		auto it = expr.begin();
		_iter_begin_4740579888:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_ParamIns> _1c9006426_p = *it;
			{
				if ((!(_1c9006426_p->_field_decl->_method_is_self()))) {
					_20213_obj+=_1c9006426_gen_param_ins(_1c9006426_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4740579888:;
			++it;
			goto _iter_begin_4740579888;
		}
		_iter_end_4740579888:;
	}
	_20213_obj=_20213_obj.slice(0LL,_20213_obj.len() - 1LL);
	return _20213_obj + jule::Str(")", 1);
}



inline jule::Str _1c9006426_gen_params_prototypes(jule::Slice<jule::Ptr<_1e4b15a20_ParamIns>>& _21531_params) {
	{
		if (!((_21531_params.len() == 0LL))) { goto _case_end_4740581968; }
		_case_begin_4740581968:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4740581456;
		_case_end_4740581968:;
		if (!(((_21531_params.len() == 1LL) && _21531_params[0LL]->_field_decl->_method_is_self()))) { goto _case_end_4740584896; }
		_case_begin_4740584896:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4740581456;
		_case_end_4740584896:;
		_match_end_4740581456:;
	}
	jule::Str _22413_obj = jule::Str("(", 1);
	{
		auto &expr = _21531_params;
		auto it = expr.begin();
		_iter_begin_4740588992:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_ParamIns> _1c9006426_p = *it;
			{
				if ((!(_1c9006426_p->_field_decl->_method_is_self()))) {
					_22413_obj+=_1c9006426_gen_param_ins_prototype(_1c9006426_p);
					_22413_obj+=jule::Str(",", 1);
				}
			}
			_iter_next_4740588992:;
			++it;
			goto _iter_begin_4740588992;
		}
		_iter_end_4740588992:;
	}
	_22413_obj=_22413_obj.slice(0LL,_22413_obj.len() - 1LL);
	return _22413_obj + jule::Str(")", 1);
}



inline jule::Str _1c9006426_gen_trait(jule::Ptr<_1e4d61232_Trait>& _23819_t) {
	
	jule::Str _2409_outid = _1e4da121c_trait_out_ident(_23819_t);
	jule::Str _24213_obj = jule::Str("struct ", 7);
	_24213_obj+=_2409_outid;
	_24213_obj+=jule::Str(" {\n", 3);
	_24213_obj+=jule::Str("\t", 1);
	_24213_obj+=jule::Str("virtual ~", 9);
	_24213_obj+=_2409_outid;
	_24213_obj+=jule::Str("(void) {}\n\n", 11);
	{
		auto &expr = _23819_t->_field_methods;
		auto it = expr.begin();
		_iter_begin_4740596000:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_Fn> _1c9006426_f = *it;
			{
				_24213_obj+=jule::Str("\t", 1);
				_24213_obj+=jule::Str("virtual ", 8);
				_24213_obj+=_1c9006426_gen_fn_result(_1c9006426_f);
				_24213_obj+=jule::Str(" _method_", 9);
				_24213_obj+=_1c9006426_f->_field_ident;
				_24213_obj+=_1c9006426_gen_params(_1c9006426_f->_field_params);
				_24213_obj+=jule::Str(" {", 2);
				if ((!(_1c9006426_f->_method_is_void()))) {
					_24213_obj+=jule::Str(" return {}; ", 12);
				}
				_24213_obj+=jule::Str("}\n", 2);
			}
			_iter_next_4740596000:;
			++it;
			goto _iter_begin_4740596000;
		}
		_iter_end_4740596000:;
	}
	_24213_obj+=jule::Str("};", 2);
	return _24213_obj;
}



inline jule::Str _1c9006426_gen_traits_tbl(jule::Ptr<_1e5291035_SymbolTable>& _26724_tbl) {
	jule::Str _26813_obj = jule::Str();
	{
		auto &expr = _26724_tbl->_field_traits;
		auto it = expr.begin();
		_iter_begin_4740604176:;
		if (it != expr.end()) {
			jule::Ptr<_1e4d61232_Trait> _1c9006426_t = *it;
			{
				_26813_obj+=_1c9006426_gen_trait(_1c9006426_t);
				_26813_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4740604176:;
			++it;
			goto _iter_begin_4740604176;
		}
		_iter_end_4740604176:;
	}
	return _26813_obj;
}



inline jule::Str _1c9006426_gen_traits_pkg(jule::Ptr<_1e4ee54e8_Package>& _27724_pkg) {
	jule::Str _27813_obj = jule::Str();
	{
		auto &expr = _27724_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_4740607664:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1c9006426_tbl = *it;
			{
				_27813_obj+=_1c9006426_gen_traits_tbl(_1c9006426_tbl);
			}
			_iter_next_4740607664:;
			++it;
			goto _iter_begin_4740607664;
		}
		_iter_end_4740607664:;
	}
	return _27813_obj;
}



inline jule::Str _1c9006426_gen_traits(jule::Ptr<_1e376ec74_IR>& _28620_ir) {
	jule::Str _28713_obj = jule::Str();
	{
		auto &expr = _28620_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4740610960:;
		if (it != expr.end()) {
			jule::Ptr<_1e4ee54e8_ImportInfo> _1c9006426_u = *it;
			{
				if ((!(_1c9006426_u->_field_cpp_linked))) {
					_28713_obj+=_1c9006426_gen_traits_pkg(_1c9006426_u->_field_package);
				}
			}
			_iter_next_4740610960:;
			++it;
			goto _iter_begin_4740610960;
		}
		_iter_end_4740610960:;
	}
	_28713_obj+=_1c9006426_gen_traits_pkg(_28620_ir->_field_main);
	return _28713_obj;
}



inline jule::Str _1c9006426_gen_trait_prototype(jule::Ptr<_1e4d61232_Trait>& _29825_t) {
	jule::Str _29913_obj = jule::Str("struct ", 7);
	_29913_obj+=_1e4da121c_trait_out_ident(_29825_t);
	_29913_obj+=jule::Str(";", 1);
	return _29913_obj;
}



inline jule::Str _1c9006426_gen_trait_prototypes(jule::Ptr<_1e4ee54e8_Package>& _30630_p) {
	jule::Str _30713_obj = jule::Str();
	{
		auto &expr = _30630_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4740634368:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1c9006426_f = *it;
			{
				{
					auto &expr = _1c9006426_f->_field_traits;
					auto it = expr.begin();
					_iter_begin_4740636192:;
					if (it != expr.end()) {
						jule::Ptr<_1e4d61232_Trait> &_1c9006426_t = *it;
						{
							if (_1c9006426_t->_field_token._field_id != 0LLU) {
								_30713_obj+=_1c9006426_gen_trait_prototype(_1c9006426_t);
								_30713_obj+=jule::Str("\n", 1);
							}
						}
						_iter_next_4740636192:;
						++it;
						goto _iter_begin_4740636192;
					}
					_iter_end_4740636192:;
				}
			}
			_iter_next_4740634368:;
			++it;
			goto _iter_begin_4740634368;
		}
		_iter_end_4740634368:;
	}
	return _30713_obj;
}



inline jule::Str _1c9006426_gen_struct_plain_prototype(jule::Ptr<_1e398ee72_Struct>& _32036_s) {
	jule::Str _32113_obj = jule::Str();
	{
		auto &expr = _32036_s->_field_instances;
		auto it = expr.begin();
		_iter_begin_4740635376:;
		if (it != expr.end()) {
			jule::Ptr<_1e398ee72_StructIns> _1c9006426_ins = *it;
			{
				_32113_obj+=jule::Str("\nstruct ", 8);
				_32113_obj+=_1e4da121c_struct_ins_out_ident(_1c9006426_ins);
				_32113_obj+=jule::Str(";", 1);
				_32113_obj+=jule::Str("\n", 1);
			}
			_iter_next_4740635376:;
			++it;
			goto _iter_begin_4740635376;
		}
		_iter_end_4740635376:;
	}
	return _32113_obj;
}



inline jule::Str _1c9006426_gen_struct_plain_prototypes(jule::Slice<jule::Ptr<_1e398ee72_Struct>>& _33237_structs) {
	jule::Str _33313_obj = jule::Str();
	{
		auto &expr = _33237_structs;
		auto it = expr.begin();
		_iter_begin_4740643424:;
		if (it != expr.end()) {
			jule::Ptr<_1e398ee72_Struct> _1c9006426_s = *it;
			{
				if ((!(_1c9006426_s->_field_cpp_linked)) && (_1c9006426_s->_field_token._field_id != 0LLU)) {
					_33313_obj+=_1c9006426_gen_struct_plain_prototype(_1c9006426_s);
					_33313_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_4740643424:;
			++it;
			goto _iter_begin_4740643424;
		}
		_iter_end_4740643424:;
	}
	return _33313_obj;
}



inline jule::Str _1c9006426_gen_struct_traits(jule::Ptr<_1e398ee72_Struct>& _34423_s) {
	if (_34423_s->_field_implements.len() == 0LL) {
		return jule::Str();
	}
	jule::Str _34913_obj = jule::Str(": ", 2);
	{
		auto &expr = _34423_s->_field_implements;
		auto it = expr.begin();
		_iter_begin_4740649392:;
		if (it != expr.end()) {
			jule::Ptr<_1e4d61232_Trait> &_1c9006426_i = *it;
			{
				_34913_obj+=jule::Str("public ", 7);
				_34913_obj+=_1e4da121c_trait_out_ident(_1c9006426_i);
				_34913_obj+=jule::Str(",", 1);
			}
			_iter_next_4740649392:;
			++it;
			goto _iter_begin_4740649392;
		}
		_iter_end_4740649392:;
	}
	_34913_obj=_34913_obj.slice(0LL,_34913_obj.len() - 1LL);
	return _34913_obj;
}



inline jule::Str _1c9006426_gen_field_decl(jule::Ptr<_1e398ee72_FieldIns>& _36024_f) {
	jule::Str _36113_obj = _1c8ec69ac_gen_type_kind(_36024_f->_field_kind);
	_36113_obj+=jule::Str(" ", 1);
	_36113_obj+=_1e4da121c_field_out_ident(_36024_f->_field_decl);
	_36113_obj+=jule::Str(" = ", 3);
	_36113_obj+=_1e341b080_get_init_expr(_36024_f->_field_kind);
	_36113_obj+=jule::Str(";", 1);
	return _36113_obj;
}



inline jule::Str _1c9006426_gen_struct_self_field_type_kind(jule::Ptr<_1e398ee72_StructIns>& _37041_s) {
	return _1c8ec69ac_as_sptr_kind(_1c8ec69ac_gen_struct_kind_ins(_37041_s));
}



inline jule::Str _1c9006426_gen_struct_self_field(jule::Ptr<_1e398ee72_StructIns>& _37531_s) {
	jule::Str _37613_obj = _1c9006426_gen_struct_self_field_type_kind(_37531_s);
	_37613_obj+=jule::Str(" self;", 6);
	return _37613_obj;
}



inline jule::Str _1c9006426_gen_struct_self_field_init_st(jule::Ptr<_1e398ee72_StructIns>& _38139_s) {
	jule::Str _38213_obj = jule::Str("this->self = ", 13);
	_38213_obj+=_1c9006426_gen_struct_self_field_type_kind(_38139_s);
	_38213_obj+=jule::Str("::make(this, nullptr);", 22);
	return _38213_obj;
}



inline jule::Str _1c9006426_gen_struct_constructor(jule::Ptr<_1e398ee72_StructIns>& _38832_s) {
	jule::Str _38913_obj = _1e4da121c_struct_ins_out_ident(_38832_s);
	_38913_obj+=jule::Str("(", 1);
	if (_38832_s->_field_fields.len() > 0LL) {
		{
			auto &expr = _38832_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4740664064:;
			if (it != expr.end()) {
				jule::Ptr<_1e398ee72_FieldIns> _1c9006426_f = *it;
				{
					_38913_obj+=_1c8ec69ac_gen_type_kind(_1c9006426_f->_field_kind);
					_38913_obj+=jule::Str(" __param_", 9);
					_38913_obj+=_1c9006426_f->_field_decl->_field_ident;
					_38913_obj+=jule::Str(", ", 2);
				}
				_iter_next_4740664064:;
				++it;
				goto _iter_begin_4740664064;
			}
			_iter_end_4740664064:;
		}
		_38913_obj=_38913_obj.slice(0LL,_38913_obj.len() - 2LL);
	} else {
		_38913_obj+=jule::Str("void", 4);
	}
	_38913_obj+=jule::Str(")", 1);
	if (_38832_s->_field_fields.len() > 0LL) {
		_38913_obj+=jule::Str(": ", 2);
		{
			auto &expr = _38832_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4740668640:;
			if (it != expr.end()) {
				jule::Ptr<_1e398ee72_FieldIns> &_1c9006426_f = *it;
				{
					_38913_obj+=_1e4da121c_field_out_ident(_1c9006426_f->_field_decl);
					_38913_obj+=jule::Str("(", 1);
					_38913_obj+=jule::Str("__param_", 8);
					_38913_obj+=_1c9006426_f->_field_decl->_field_ident;
					_38913_obj+=jule::Str("), ", 3);
				}
				_iter_next_4740668640:;
				++it;
				goto _iter_begin_4740668640;
			}
			_iter_end_4740668640:;
		}
		_38913_obj=_38913_obj.slice(0LL,_38913_obj.len() - 2LL);
	}
	_38913_obj+=jule::Str(" {", 2);
	if (_38832_s->_field_decl->_method_has_ref_accessible()) {
		_38913_obj+=jule::Str("\n", 1);
		_1c9006426_add_indent();
		_38913_obj+=_1c9006426_indent();
		_38913_obj+=_1c9006426_gen_struct_self_field_init_st(_38832_s);
		_38913_obj+=jule::Str("\n", 1);
		_1c9006426_done_indent();
		_38913_obj+=jule::Str("\n", 1);
		_38913_obj+=_1c9006426_indent();
	}
	_38913_obj+=jule::Str("}", 1);
	return _38913_obj;
}



inline jule::Str _1c9006426_gen_struct_destructor(jule::Ptr<_1e398ee72_StructIns>& _43231_s) {
	jule::Bool _4339_disposed = _43231_s->_field_decl->_method_is_implements(_1c8ac49ea_BUILTIN_TRAIT_DISPOSE);
	jule::Bool _4349_ref_access = _43231_s->_field_decl->_method_has_ref_accessible();
	if ((!(_4349_ref_access)) && (!(_4339_disposed))) {
		return jule::Str();
	}
	jule::Str _44013_obj = jule::Str("~", 1);
	_44013_obj+=_1e4da121c_struct_ins_out_ident(_43231_s);
	_44013_obj+=jule::Str("(void) { ", 9);
	if (_4339_disposed) {
		jule::Ptr<_1e4b15a20_Fn> _44513_dispose_method = _43231_s->_method_find_method(jule::Str("dispose", 7),false);
		_44013_obj+=jule::Str("this->", 6);
		_44013_obj+=_1e4da121c_fn_out_ident(_44513_dispose_method);
		_44013_obj+=jule::Str("(); ", 4);
	}
	if (_4349_ref_access) {
		_44013_obj+=jule::Str("this->self.ref = nullptr; ", 26);
	}
	_44013_obj+=jule::Str("}", 1);
	return _44013_obj;
}



inline jule::Str _1c9006426_gen_struct_operators(jule::Ptr<_1e398ee72_StructIns>& _45930_s) {
	jule::Str _4609_out_ident = _1e4da121c_struct_ins_out_ident(_45930_s);
	jule::Str _46113_obj = jule::Str();
	_46113_obj+=_1c9006426_indent();
	if (_1e2496a24_OPT_INLINE) {
		_46113_obj+=jule::Str("inline ", 7);
	}
	_46113_obj+=jule::Str("bool operator==(const ", 22);
	_46113_obj+=_4609_out_ident;
	_46113_obj+=jule::Str(" &_Src) const {", 15);
	if (_45930_s->_field_fields.len() > 0LL) {
		_1c9006426_add_indent();
		_46113_obj+=jule::Str("\n", 1);
		_46113_obj+=_1c9006426_indent();
		_46113_obj+=jule::Str("return ", 7);
		_1c9006426_add_indent();
		jule::Int _47617_n = 0LL;
		{
			auto &expr = _45930_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4740693168:;
			if (it != expr.end()) {
				jule::Ptr<_1e398ee72_FieldIns> _1c9006426_f = *it;
				{
					jule::Ptr<_1e398ee72_StructIns> _47917_strct = _1c9006426_f->_field_kind->_method_strct();
					if (((_47917_strct != nullptr) && (_47917_strct->_field_decl != nullptr)) && _47917_strct->_field_decl->_field_cpp_linked) {
						goto _iter_next_4740693168;
					}
					(_47617_n)++;
					_46113_obj+=jule::Str("\n", 1);
					_46113_obj+=_1c9006426_indent();
					_46113_obj+=jule::Str("this->", 6);
					jule::Str _48817_f_ident = _1e4da121c_field_out_ident(_1c9006426_f->_field_decl);
					_46113_obj+=_48817_f_ident;
					_46113_obj+=jule::Str(" == _Src.", 9);
					_46113_obj+=_48817_f_ident;
					_46113_obj+=jule::Str(" &&", 3);
				}
				_iter_next_4740693168:;
				++it;
				goto _iter_begin_4740693168;
			}
			_iter_end_4740693168:;
		}
		_1c9006426_done_indent();
		if (_47617_n > 0LL) {
			_46113_obj=_46113_obj.slice(0LL,_46113_obj.len() - 3LL);
		} else {
			_46113_obj+=jule::Str("true", 4);
		}
		_46113_obj+=jule::Str(";\n", 2);
		_1c9006426_done_indent();
		_46113_obj+=_1c9006426_indent();
		_46113_obj+=jule::Str("}", 1);
	} else {
		_46113_obj+=jule::Str(" return true; }", 15);
	}
	_46113_obj+=jule::Str("\n\n", 2);
	_46113_obj+=_1c9006426_indent();
	if (_1e2496a24_OPT_INLINE) {
		_46113_obj+=jule::Str("inline ", 7);
	}
	_46113_obj+=jule::Str("bool operator!=(const ", 22);
	_46113_obj+=_4609_out_ident;
	_46113_obj+=jule::Str(" &_Src) const { return !this->operator==(_Src); }", 49);
	return _46113_obj;
}



inline jule::Str _1c9006426_gen_struct_derive_defs_prototypes(jule::Ptr<_1e398ee72_StructIns>& _51839_s) {
	jule::Str _51913_obj = jule::Str();
	if (_51839_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_51913_obj+=_1c9006426_indent();
		_51913_obj+=_1c8e93319_get_derive_fn_decl_clone(_51839_s->_field_decl);
		_51913_obj+=jule::Str(";\n\n", 3);
	}
	return _51913_obj;
}



inline jule::Str _1c9006426_gen_struct_ins_prototype(jule::Ptr<_1e398ee72_StructIns>& _53034_s) {
	jule::Str _53113_obj = jule::Str("struct ", 7);
	jule::Str _5329_out_ident = _1e4da121c_struct_ins_out_ident(_53034_s);
	_53113_obj+=_5329_out_ident;
	_53113_obj+=_1c9006426_gen_struct_traits(_53034_s->_field_decl);
	_53113_obj+=jule::Str(" {\n", 3);
	jule::Bool _5389_ref_access = _53034_s->_field_decl->_method_has_ref_accessible();
	_1c9006426_add_indent();
	if (_5389_ref_access) {
		_53113_obj+=_1c9006426_indent();
		_53113_obj+=_1c9006426_gen_struct_self_field(_53034_s);
		_53113_obj+=jule::Str("\n\n", 2);
	}
	if (_53034_s->_field_fields.len() > 0LL) {
		{
			auto &expr = _53034_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4740716208:;
			if (it != expr.end()) {
				jule::Ptr<_1e398ee72_FieldIns> _1c9006426_f = *it;
				{
					_53113_obj+=_1c9006426_indent();
					_53113_obj+=_1c9006426_gen_field_decl(_1c9006426_f);
					_53113_obj+=jule::Str("\n", 1);
				}
				_iter_next_4740716208:;
				++it;
				goto _iter_begin_4740716208;
			}
			_iter_end_4740716208:;
		}
		_53113_obj+=jule::Str("\n\n", 2);
		_53113_obj+=_1c9006426_indent();
		_53113_obj+=_1c9006426_gen_struct_constructor(_53034_s);
		_53113_obj+=jule::Str("\n\n", 2);
	}
	_53113_obj+=_1c9006426_indent();
	_53113_obj+=_1c9006426_gen_struct_destructor(_53034_s);
	_53113_obj+=jule::Str("\n\n", 2);
	_53113_obj+=_1c9006426_indent();
	_53113_obj+=_5329_out_ident;
	if (_5389_ref_access) {
		_53113_obj+=jule::Str("(void) { ", 9);
		_53113_obj+=_1c9006426_gen_struct_self_field_init_st(_53034_s);
		_53113_obj+=jule::Str(" }\n\n", 4);
	} else {
		_53113_obj+=jule::Str("(void) = default;\n\n", 19);
	}
	{
		auto &expr = _53034_s->_field_methods;
		auto it = expr.begin();
		_iter_begin_4740722416:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_Fn> _1c9006426_f = *it;
			{
				_53113_obj+=_1c9006426_gen_fn_prototype(_1c9006426_f,true);
				_53113_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4740722416:;
			++it;
			goto _iter_begin_4740722416;
		}
		_iter_end_4740722416:;
	}
	_53113_obj+=_1c9006426_gen_struct_derive_defs_prototypes(_53034_s);
	_53113_obj+=_1c9006426_gen_struct_operators(_53034_s);
	_53113_obj+=jule::Str("\n", 1);
	_1c9006426_done_indent();
	_53113_obj+=_1c9006426_indent() + jule::Str("};", 2);
	return _53113_obj;
}



inline jule::Str _1c9006426_gen_struct_prototype(jule::Ptr<_1e398ee72_Struct>& _58930_s) {
	jule::Str _59013_obj = jule::Str();
	{
		auto &expr = _58930_s->_field_instances;
		auto it = expr.begin();
		_iter_begin_4740727648:;
		if (it != expr.end()) {
			jule::Ptr<_1e398ee72_StructIns> _1c9006426_ins = *it;
			{
				_59013_obj+=_1c9006426_gen_struct_ins_prototype(_1c9006426_ins);
				_59013_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4740727648:;
			++it;
			goto _iter_begin_4740727648;
		}
		_iter_end_4740727648:;
	}
	return _59013_obj;
}



inline jule::Str _1c9006426_gen_struct_prototypes(jule::Slice<jule::Ptr<_1e398ee72_Struct>>& _59931_structs) {
	jule::Str _60013_obj = jule::Str();
	{
		auto &expr = _59931_structs;
		auto it = expr.begin();
		_iter_begin_4740730816:;
		if (it != expr.end()) {
			jule::Ptr<_1e398ee72_Struct> _1c9006426_s = *it;
			{
				if ((!(_1c9006426_s->_field_cpp_linked)) && (_1c9006426_s->_field_token._field_id != 0LLU)) {
					_60013_obj+=_1c9006426_gen_struct_prototype(_1c9006426_s);
					_60013_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_4740730816:;
			++it;
			goto _iter_begin_4740730816;
		}
		_iter_end_4740730816:;
	}
	return _60013_obj;
}



inline jule::Str _1c9006426_gen_fn_decl_head(jule::Ptr<_1e4b15a20_FnIns>& _61026_f,jule::Bool _61037_method) {
	jule::Str _61113_obj = jule::Str();
	if (_61037_method && _61026_f->_field_decl->_field_statically) {
		_61113_obj+=jule::Str("static ", 7);
	}
	if (_1e2496a24_OPT_INLINE && (!(_61026_f->_field_decl->_method_is_entry_point()))) {
		_61113_obj+=jule::Str("inline ", 7);
	}
	_61113_obj+=_1c9006426_gen_fn_ins_result(_61026_f) + jule::Str(" ", 1);
	if ((!(_61037_method)) && (_61026_f->_field_decl->_field_owner != nullptr)) {
		_61113_obj+=_1e4da121c_struct_ins_out_ident(_61026_f->_field_owner);
		_61113_obj+=jule::Str("::", 2);
	}
	_61113_obj+=_1e4da121c_fn_ins_out_ident(_61026_f);
	return _61113_obj;
}



inline jule::Str _1c9006426_gen_fn_prototype(jule::Ptr<_1e4b15a20_Fn>& _63226_f,jule::Bool _63234_method) {
	jule::Str _63313_obj = jule::Str();
	{
		auto &expr = _63226_f->_field_instances;
		auto it = expr.begin();
		_iter_begin_4740743888:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_FnIns> _1c9006426_c = *it;
			{
				_63313_obj+=_1c9006426_indent();
				_63313_obj+=_1c9006426_gen_fn_decl_head(_1c9006426_c,_63234_method);
				_63313_obj+=_1c9006426_gen_params_prototypes(_1c9006426_c->_field_params);
				_63313_obj+=jule::Str(";\n", 2);
			}
			_iter_next_4740743888:;
			++it;
			goto _iter_begin_4740743888;
		}
		_iter_end_4740743888:;
	}
	return _63313_obj;
}



inline jule::Str _1c9006426_gen_fn_prototypes(jule::Ptr<_1e4ee54e8_Package>& _64427_pkg) {
	jule::Str _64513_obj = jule::Str();
	{
		auto &expr = _64427_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_4740748576:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1c9006426_file = *it;
			{
				{
					auto &expr = _1c9006426_file->_field_funcs;
					auto it = expr.begin();
					_iter_begin_4740750400:;
					if (it != expr.end()) {
						jule::Ptr<_1e4b15a20_Fn> _1c9006426_f = *it;
						{
							if ((!(_1c9006426_f->_field_cpp_linked)) && (_1c9006426_f->_field_token._field_id != 0LLU)) {
								_64513_obj+=_1c9006426_gen_fn_prototype(_1c9006426_f,false);
							}
						}
						_iter_next_4740750400:;
						++it;
						goto _iter_begin_4740750400;
					}
					_iter_end_4740750400:;
				}
			}
			_iter_next_4740748576:;
			++it;
			goto _iter_begin_4740748576;
		}
		_iter_end_4740748576:;
	}
	return _64513_obj;
}



inline jule::Str _1c9006426_gen_prototypes(jule::Ptr<_1e376ec74_IR>& _65724_ir) {
	jule::Str _65813_obj = jule::Str();
	{
		auto &expr = _65724_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4740754352:;
		if (it != expr.end()) {
			jule::Ptr<_1e4ee54e8_ImportInfo> _1c9006426_u = *it;
			{
				if ((!(_1c9006426_u->_field_cpp_linked))) {
					_65813_obj+=_1c9006426_gen_trait_prototypes(_1c9006426_u->_field_package);
				}
			}
			_iter_next_4740754352:;
			++it;
			goto _iter_begin_4740754352;
		}
		_iter_end_4740754352:;
	}
	_65813_obj+=_1c9006426_gen_trait_prototypes(_65724_ir->_field_main);
	_65813_obj+=_1c9006426_gen_struct_plain_prototypes(_65724_ir->_field_ordered._field_structs);
	_65813_obj+=_1c9006426_gen_traits(_65724_ir);
	_65813_obj+=jule::Str("\n", 1);
	_65813_obj+=_1c9006426_gen_struct_prototypes(_65724_ir->_field_ordered._field_structs);
	{
		auto &expr = _65724_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4740759552:;
		if (it != expr.end()) {
			jule::Ptr<_1e4ee54e8_ImportInfo> _1c9006426_u = *it;
			{
				if ((!(_1c9006426_u->_field_cpp_linked))) {
					_65813_obj+=_1c9006426_gen_fn_prototypes(_1c9006426_u->_field_package);
				}
			}
			_iter_next_4740759552:;
			++it;
			goto _iter_begin_4740759552;
		}
		_iter_end_4740759552:;
	}
	_65813_obj+=_1c9006426_gen_fn_prototypes(_65724_ir->_field_main);
	return _65813_obj;
}



inline jule::Str _1c9006426_gen_var_init_expr(jule::Ptr<_1e50b0492_Var>& _68627_v,jule::Str _68636_init) {
	jule::Str _68713_obj = jule::Str();
	if (_68627_v->_field_statically) {
		_68713_obj+=jule::Str("static ", 7);
	}
	_68713_obj+=_1c8ec69ac_gen_type_kind(_68627_v->_field_kind->_field_kind);
	_68713_obj+=jule::Str(" ", 1);
	if (_68627_v->_field_reference) {
		_68713_obj+=jule::Str("&", 1);
	}
	_68713_obj+=_1e4da121c_var_out_ident(_68627_v);
	if (_68636_init != jule::Str()) {
		_68713_obj+=jule::Str(" = ", 3);
		_68713_obj+=_68636_init;
	}
	_68713_obj+=jule::Str(";", 1);
	return _68713_obj;
}



inline jule::Str _1c9006426_gen_var(jule::Ptr<_1e50b0492_Var> _70716_v) {
	if (_1e3bad8dd_is_ignore_ident(_70716_v->_field_ident)) {
		return jule::Str();
	}
	if ((_70716_v->_field_value != nullptr) && (_70716_v->_field_value->_field_expr != nullptr)) {
		if (_70716_v->_field_value->_field_data->_field_model != nullptr) {
			return _1c9006426_gen_var_init_expr(_70716_v,_1e341b080_gen_val(_70716_v->_field_value));
		}
		return _1c9006426_gen_var_init_expr(_70716_v,jule::Str());
	}
	return _1c9006426_gen_var_init_expr(_70716_v,_1e341b080_get_init_expr(_70716_v->_field_kind->_field_kind));
}



inline jule::Str _1c9006426_gen_globals(jule::Slice<jule::Ptr<_1e50b0492_Var>>& _72221_globals) {
	jule::Str _72313_obj = jule::Str();
	{
		auto &expr = _72221_globals;
		auto it = expr.begin();
		_iter_begin_4740776336:;
		if (it != expr.end()) {
			jule::Ptr<_1e50b0492_Var> _1c9006426_v = *it;
			{
				if (_1c9006426_v->_field_token._field_id != 0LLU) {
					_72313_obj+=_1c9006426_gen_var(_1c9006426_v);
					_72313_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_4740776336:;
			++it;
			goto _iter_begin_4740776336;
		}
		_iter_end_4740776336:;
	}
	return _72313_obj;
}



inline jule::Str _1c9006426_gen_fn(jule::Ptr<_1e4b15a20_Fn>& _73616_f) {
	jule::Str _73713_obj = jule::Str();
	{
		auto &expr = _73616_f->_field_instances;
		auto it = expr.begin();
		_iter_begin_4740780752:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_FnIns> _1c9006426_ins = *it;
			{
				_73713_obj+=_1c9006426_gen_fn_decl_head(_1c9006426_ins,false);
				_73713_obj+=_1c9006426_gen_params_ins(_1c9006426_ins->_field_params);
				_73713_obj+=jule::Str(" ", 1);
				_73713_obj+=_1e24a32e4_gen_fn_scope(_1c9006426_ins);
				_73713_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4740780752:;
			++it;
			goto _iter_begin_4740780752;
		}
		_iter_end_4740780752:;
	}
	return _73713_obj;
}



inline jule::Str _1c9006426_gen_pkg_fns(jule::Ptr<_1e4ee54e8_Package>& _74921_p) {
	jule::Str _75013_obj = jule::Str();
	{
		auto &expr = _74921_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4740785328:;
		if (it != expr.end()) {
			jule::Ptr<_1e5291035_SymbolTable> _1c9006426_f = *it;
			{
				{
					auto &expr = _1c9006426_f->_field_funcs;
					auto it = expr.begin();
					_iter_begin_4740787152:;
					if (it != expr.end()) {
						jule::Ptr<_1e4b15a20_Fn> _1c9006426_f = *it;
						{
							if ((!(_1c9006426_f->_field_cpp_linked)) && (_1c9006426_f->_field_token._field_id != 0LLU)) {
								_75013_obj+=_1c9006426_gen_fn(_1c9006426_f);
								_75013_obj+=jule::Str("\n\n", 2);
							}
						}
						_iter_next_4740787152:;
						++it;
						goto _iter_begin_4740787152;
					}
					_iter_end_4740787152:;
				}
			}
			_iter_next_4740785328:;
			++it;
			goto _iter_begin_4740785328;
		}
		_iter_end_4740785328:;
	}
	return _75013_obj;
}



inline jule::Str _1c9006426_gen_struct_method_defs(jule::Ptr<_1e398ee72_StructIns>& _76332_s) {
	jule::Str _76413_obj = jule::Str();
	{
		auto &expr = _76332_s->_field_methods;
		auto it = expr.begin();
		_iter_begin_4740791328:;
		if (it != expr.end()) {
			jule::Ptr<_1e4b15a20_Fn> _1c9006426_f = *it;
			{
				_76413_obj+=_1c9006426_indent();
				_76413_obj+=_1c9006426_gen_fn(_1c9006426_f);
				_76413_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4740791328:;
			++it;
			goto _iter_begin_4740791328;
		}
		_iter_end_4740791328:;
	}
	return _76413_obj;
}



inline jule::Str _1c9006426_gen_struct_ostream(jule::Ptr<_1e398ee72_StructIns>& _77428_s) {
	jule::Str _77513_obj = jule::Str();
	_77513_obj+=_1c9006426_indent();
	_77513_obj+=jule::Str("std::ostream &operator<<(std::ostream &_Stream, const ", 54);
	_77513_obj+=_1e4da121c_struct_ins_out_ident(_77428_s);
	_77513_obj+=jule::Str(" &_Src) {\n", 10);
	_1c9006426_add_indent();
	_77513_obj+=_1c9006426_indent();
	_77513_obj+=jule::Str("_Stream << \"", 12);
	_77513_obj+=_77428_s->_field_decl->_field_ident;
	_77513_obj+=jule::Str("{\";\n", 4);
	{
		auto &expr = _77428_s->_field_fields;
		auto it = expr.begin();
		_iter_begin_4740796496:;
		if (it != expr.end()) {
			jule::Int _1c9006426_i = it - expr.begin();
			jule::Ptr<_1e398ee72_FieldIns> _1c9006426_f = *it;
			{
				_77513_obj+=_1c9006426_indent();
				_77513_obj+=jule::Str("_Stream << \"", 12);
				_77513_obj+=_1c9006426_f->_field_decl->_field_ident;
				_77513_obj+=jule::Str(":", 1);
				jule::Ptr<_1e398ee72_StructIns> _79313_strct = _1c9006426_f->_field_kind->_method_strct();
				if (((_79313_strct != nullptr) && (_79313_strct->_field_decl != nullptr)) && _79313_strct->_field_decl->_field_cpp_linked) {
					_77513_obj+=jule::Str(" cpp.", 5);
					_77513_obj+=_1e4da121c_field_out_ident(_1c9006426_f->_field_decl);
					_77513_obj+=jule::Str("\"", 1);
				} else {
					_77513_obj+=jule::Str("\" << _Src.", 10);
					_77513_obj+=_1e4da121c_field_out_ident(_1c9006426_f->_field_decl);
				}
				if ((_1c9006426_i + 1LL) < _77428_s->_field_fields.len()) {
					_77513_obj+=jule::Str(" << \", \"", 8);
				}
				_77513_obj+=jule::Str(";\n", 2);
			}
			_iter_next_4740796496:;
			++it;
			_1c9006426_i++;
			goto _iter_begin_4740796496;
		}
		_iter_end_4740796496:;
	}
	_77513_obj+=_1c9006426_indent();
	_77513_obj+=jule::Str("_Stream << \"}\";\n", 16);
	_77513_obj+=_1c9006426_indent();
	_77513_obj+=jule::Str("return _Stream;\n", 16);
	_1c9006426_done_indent();
	_77513_obj+=_1c9006426_indent();
	_77513_obj+=jule::Str("}", 1);
	return _77513_obj;
}



inline jule::Str _1c9006426_gen_struct_derive_defs(jule::Ptr<_1e398ee72_StructIns>& _81832_s) {
	jule::Str _81913_obj = jule::Str();
	if (_81832_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_81913_obj+=_1c9006426_indent();
		_81913_obj+=_1c8e93319_get_derive_fn_def_clone(_81832_s->_field_decl);
		_81913_obj+=jule::Str("{\n", 2);
		_1c9006426_add_indent();
		_81913_obj+=_1c9006426_indent();
		_81913_obj+=_1c8ec69ac_gen_struct_kind_ins(_81832_s);
		_81913_obj+=jule::Str(" clone;\n", 8);
		{
			auto &expr = _81832_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4740813392:;
			if (it != expr.end()) {
				jule::Ptr<_1e398ee72_FieldIns> &_1c9006426_f = *it;
				{
					jule::Str _83017_ident = _1e4da121c_field_out_ident(_1c9006426_f->_field_decl);
					_81913_obj+=_1c9006426_indent();
					_81913_obj+=jule::Str("clone.", 6);
					_81913_obj+=_83017_ident;
					_81913_obj+=jule::Str(" = jule::clone(this->", 21);
					_81913_obj+=_83017_ident;
					_81913_obj+=jule::Str(");\n", 3);
				}
				_iter_next_4740813392:;
				++it;
				goto _iter_begin_4740813392;
			}
			_iter_end_4740813392:;
		}
		_81913_obj+=_1c9006426_indent();
		_81913_obj+=jule::Str("return clone;\n", 14);
		_1c9006426_done_indent();
		_81913_obj+=_1c9006426_indent();
		_81913_obj+=jule::Str("}", 1);
	}
	return _81913_obj;
}



inline jule::Str _1c9006426_gen_struct_ins(jule::Ptr<_1e398ee72_StructIns>& _85024_s) {
	jule::Str _85113_obj = _1c9006426_gen_struct_method_defs(_85024_s);
	_85113_obj+=jule::Str("\n\n", 2);
	_85113_obj+=_1c9006426_gen_struct_derive_defs(_85024_s);
	_85113_obj+=jule::Str("\n\n", 2);
	_85113_obj+=_1c9006426_gen_struct_ostream(_85024_s);
	return _85113_obj;
}



inline jule::Str _1c9006426_gen_struct(jule::Ptr<_1e398ee72_Struct>& _86020_s) {
	jule::Str _86113_obj = jule::Str();
	{
		auto &expr = _86020_s->_field_instances;
		auto it = expr.begin();
		_iter_begin_4740823472:;
		if (it != expr.end()) {
			jule::Ptr<_1e398ee72_StructIns> _1c9006426_ins = *it;
			{
				_86113_obj+=_1c9006426_gen_struct_ins(_1c9006426_ins);
				_86113_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4740823472:;
			++it;
			goto _iter_begin_4740823472;
		}
		_iter_end_4740823472:;
	}
	return _86113_obj;
}



inline jule::Str _1c9006426_gen_structs(jule::Slice<jule::Ptr<_1e398ee72_Struct>>& _87021_structs) {
	jule::Str _87113_obj = jule::Str();
	{
		auto &expr = _87021_structs;
		auto it = expr.begin();
		_iter_begin_4740826640:;
		if (it != expr.end()) {
			jule::Ptr<_1e398ee72_Struct> _1c9006426_s = *it;
			{
				if ((!(_1c9006426_s->_field_cpp_linked)) && (_1c9006426_s->_field_token._field_id != 0LLU)) {
					_87113_obj+=_1c9006426_gen_struct(_1c9006426_s);
					_87113_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_4740826640:;
			++it;
			goto _iter_begin_4740826640;
		}
		_iter_end_4740826640:;
	}
	return _87113_obj;
}



inline jule::Str _1c9006426_gen_fns(jule::Ptr<_1e376ec74_IR>& _88217_ir) {
	jule::Str _88313_obj = jule::Str();
	{
		auto &expr = _88217_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4740831536:;
		if (it != expr.end()) {
			jule::Ptr<_1e4ee54e8_ImportInfo> _1c9006426_u = *it;
			{
				if ((!(_1c9006426_u->_field_cpp_linked))) {
					_88313_obj+=_1c9006426_gen_pkg_fns(_1c9006426_u->_field_package);
				}
			}
			_iter_next_4740831536:;
			++it;
			goto _iter_begin_4740831536;
		}
		_iter_end_4740831536:;
	}
	_88313_obj+=_1c9006426_gen_pkg_fns(_88217_ir->_field_main);
	return _88313_obj;
}



inline void _1c9006426_push_init(jule::Ptr<_1e4ee54e8_Package>& _89519_pkg,jule::Str& _89539_obj) {
	
	
	jule::Ptr<_1e4b15a20_Fn> _8999_f = _89519_pkg->_method_find_fn(jule::Str("init", 4),false);
	if (_8999_f == nullptr) {
		return;
	}
	_89539_obj+=jule::Str("\n\t", 2);
	_89539_obj+=_1e4da121c_fn_out_ident(_8999_f);
	_89539_obj+=jule::Str("();", 3);
}



inline jule::Str _1c9006426_gen_init_caller(jule::Ptr<_1e376ec74_IR>& _91025_ir) {
	jule::Str _91113_obj = jule::Str("void ", 5);
	_91113_obj+=jule::Str("__jule_call_initializers", 24);
	_91113_obj+=jule::Str("(void) {", 8);
	{
		auto &expr = _91025_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4740841712:;
		if (it != expr.end()) {
			jule::Ptr<_1e4ee54e8_ImportInfo> _1c9006426_u = *it;
			{
				if ((!(_1c9006426_u->_field_cpp_linked))) {
					_1c9006426_push_init(_1c9006426_u->_field_package,_91113_obj);
				}
			}
			_iter_next_4740841712:;
			++it;
			goto _iter_begin_4740841712;
		}
		_iter_end_4740841712:;
	}
	_1c9006426_push_init(_91025_ir->_field_main,_91113_obj);
	_91113_obj+=jule::Str("\n}", 2);
	return _91113_obj;
}



inline void _1c9006426_append_standard(jule::Str& _92629_obj_code,jule::Str _92644_compiler,jule::Str _92659_compiler_cmd) {
	_1c9110233_AbsTime _9279_time = _1c9110233_Time::_static_method_now()._method_abs();
	jule::Str _92913_time_str = jule::Str();
	_92913_time_str+=_1e3417be7_fmt_uint(_9279_time._field_day,10LL);
	_92913_time_str+=jule::Str("/", 1);
	_92913_time_str+=_1e3417be7_fmt_uint(_9279_time._field_month,10LL);
	_92913_time_str+=jule::Str("/", 1);
	_92913_time_str+=_1e3417be7_fmt_uint(_9279_time._field_year,10LL);
	_92913_time_str+=jule::Str(" ", 1);
	_92913_time_str+=_1e3417be7_fmt_uint(_9279_time._field_hour,10LL);
	_92913_time_str+=jule::Str(".", 1);
	_92913_time_str+=_1e3417be7_fmt_uint(_9279_time._field_minute,10LL);
	_92913_time_str+=jule::Str(" (DD/MM/YYYY) (HH.MM) UTC", 25);
	jule::Str _94113_s = jule::Str();
	_94113_s+=jule::Str("// Auto generated by JuleC.\n", 28);
	_94113_s+=jule::Str("// JuleC version: ", 18);
	_94113_s+=jule::Str("beta 0.0.6 @master", 18);
	_94113_s+=jule::Str("\n", 1);
	_94113_s+=jule::Str("// Date: ", 9);
	_94113_s+=_92913_time_str;
	_94113_s+=jule::Str("\n//\n// Recommended Compile Command;\n// ", 39);
	_94113_s+=_92644_compiler;
	_94113_s+=jule::Str(" ", 1);
	_94113_s+=_92659_compiler_cmd;
	_94113_s+=jule::Str("\n\n#include \"", 12);
	_94113_s+=_1e24c38db_PATH_API;
	_94113_s+=jule::Str("\"\n\n", 3);
	_94113_s+=_92629_obj_code;
	_94113_s+=jule::Str("\nint main(int argc, char *argv[], char *envp[]) {\n    std::set_terminate(&jule::terminate_handler);\n    jule::set_sig_handler(jule::signal_handler);\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    entry_point();\n\n    return EXIT_SUCCESS;\n}", 290);
	_92629_obj_code=_94113_s;
}



inline jule::Str _1c9006426_gen(jule::Ptr<_1e376ec74_IR>& _97517_ir) {
	jule::Str _97613_obj = jule::Str();
	_97613_obj+=_1c9006426_gen_links(_97517_ir);
	_97613_obj+=jule::Str("\n", 1);
	_97613_obj+=_1c9006426_gen_prototypes(_97517_ir);
	_97613_obj+=jule::Str("\n\n", 2);
	_97613_obj+=_1c9006426_gen_globals(_97517_ir->_field_ordered._field_globals);
	_97613_obj+=jule::Str("\n", 1);
	_97613_obj+=_1c9006426_gen_structs(_97517_ir->_field_ordered._field_structs);
	_97613_obj+=_1c9006426_gen_fns(_97517_ir);
	_97613_obj+=jule::Str("\n", 1);
	_97613_obj+=_1c9006426_gen_init_caller(_97517_ir);
	_97613_obj+=jule::Str("\n", 1);
	return _97613_obj;
}



inline jule::Str _1e2408d0a_str_repeat(jule::Str _3015_sub,jule::Int _3029_n) {
	if (_3029_n == 0LL) {
		return jule::Str();
	}
	jule::Str _3513_s = jule::Str();
	for (; _3029_n > 0LL; (_3029_n)--) {
		{
			_3513_s+=_3015_sub;
		}
	_iter_next_4741108032:;
	}
	_iter_end_4741108032:;
	return _3513_s;
}



inline void _1e2408d0a_print_error_message(jule::Str _4224_msg) {
	jule::outln(_4224_msg);
}



inline void _1e2408d0a_help(jule::Slice<jule::Str>& _4510_args) {
	if (_4510_args.len() > 2LL) {
		_1e2408d0a_print_error_message(jule::Str("invalid command: ", 17) + _4510_args[2LL]);
		return;
	}
	jule::I64 _5113_max = _1e2408d0a_HELP_MAP.__at(0LL).__at(0LL).len();
	{
		auto &expr = _1e2408d0a_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_4741115440:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_1e2408d0a_k = *it;
			{
				jule::I64 _5313_n = _1e2408d0a_k.__at(0LL).len();
				if (_5313_n > _5113_max) {
					_5113_max=_5313_n;
				}
			}
			_iter_next_4741115440:;
			++it;
			goto _iter_begin_4741115440;
		}
		_iter_end_4741115440:;
	}
	jule::Str _5913_s = jule::Str();
	
	{
		auto &expr = _1e2408d0a_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_4741120400:;
		if (it != expr.end()) {
			jule::Int _1e2408d0a_i = it - expr.begin();
			jule::Array<jule::Str,2> &_1e2408d0a_part = *it;
			{
				_5913_s+=_1e2408d0a_part.__at(0LL);
				_5913_s+=_1e2408d0a_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>((_5113_max - _1e2408d0a_part.__at(0LL).len()) + 5LL));
				_5913_s+=_1e2408d0a_part.__at(1LL);
				if ((_1e2408d0a_i + 1LL) < 4LL) {
					_5913_s+=jule::Str("\n", 1);
				}
			}
			_iter_next_4741120400:;
			++it;
			_1e2408d0a_i++;
			goto _iter_begin_4741120400;
		}
		_iter_end_4741120400:;
	}
	jule::outln(_5913_s);
}



inline void _1e2408d0a_version(jule::Slice<jule::Str>& _7313_args) {
	if (_7313_args.len() > 2LL) {
		_1e2408d0a_print_error_message(jule::Str("invalid command: ", 17) + _7313_args[2LL]);
		return;
	}
	jule::out(jule::Str("julec version ", 14));
	jule::outln(jule::Str("beta 0.0.6 @master", 18));
}



inline void _1e2408d0a_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto &expr = _1e24c3798_DISTOS;
		auto it = expr.begin();
		_iter_begin_4741130480:;
		if (it != expr.end()) {
			jule::Str &_1e2408d0a_os = *it;
			{
				jule::out(_1e2408d0a_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_4741130480:;
			++it;
			goto _iter_begin_4741130480;
		}
		_iter_end_4741130480:;
	}
	jule::outln(jule::Str());
}



inline void _1e2408d0a_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto &expr = _1e24c3798_DISTARCH;
		auto it = expr.begin();
		_iter_begin_4741133008:;
		if (it != expr.end()) {
			jule::Str &_1e2408d0a_arch = *it;
			{
				jule::out(_1e2408d0a_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_4741133008:;
			++it;
			goto _iter_begin_4741133008;
		}
		_iter_end_4741133008:;
	}
	jule::outln(jule::Str());
}



inline void _1e2408d0a_tool(jule::Slice<jule::Str>& _10310_args) {
	if (_10310_args.len() == 2LL) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;
	} else if (_10310_args.len() > 3LL) {
		_1e2408d0a_print_error_message(jule::Str("invalid command: ", 17) + _10310_args[3LL]);
		return;
	}
	jule::Str _1149_cmd = _10310_args[2LL];
	{
		auto &_match_expr{ _1149_cmd };
		if (!((jule::Str("distos", 6)) == _match_expr)) { goto _case_end_4741141840; }
		_case_begin_4741141840:;
		{
			_1e2408d0a_tool_distos();
		}
		goto _match_end_4741141008;
		_case_end_4741141840:;
		if (!((jule::Str("distarch", 8)) == _match_expr)) { goto _case_end_4741142448; }
		_case_begin_4741142448:;
		{
			_1e2408d0a_tool_distarch();
		}
		goto _match_end_4741141008;
		_case_end_4741142448:;
		_case_begin_4741136240:;
		{
			_1e2408d0a_print_error_message(jule::Str("Undefined command: ", 19) + _1149_cmd);
		}
		goto _match_end_4741141008;
		_case_end_4741136240:;
		_match_end_4741141008:;
	}
}



inline void _1e2408d0a_julenv(void) {
	jule::outln(jule::Str("julec version: beta 0.0.6 @master", 33));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: darwin", 24));
	jule::outln(jule::Str("default compiler: ", 18) + _1e2440b66_COMPILER);
	jule::outln(jule::Str("default C++ standard: ", 22) + _1e2440b66_CPP_STD);
}



inline jule::Bool _1e2408d0a_process_command(jule::Slice<jule::Str>& _13321_args) {
	{
		auto &_match_expr{ _13321_args[1LL] };
		if (!((jule::Str("help", 4)) == _match_expr)) { goto _case_end_4741149776; }
		_case_begin_4741149776:;
		{
			_1e2408d0a_help(_13321_args);
		}
		goto _match_end_4741148096;
		_case_end_4741149776:;
		if (!((jule::Str("version", 7)) == _match_expr)) { goto _case_end_4741149872; }
		_case_begin_4741149872:;
		{
			_1e2408d0a_version(_13321_args);
		}
		goto _match_end_4741148096;
		_case_end_4741149872:;
		if (!((jule::Str("tool", 4)) == _match_expr)) { goto _case_end_4741148432; }
		_case_begin_4741148432:;
		{
			_1e2408d0a_tool(_13321_args);
		}
		goto _match_end_4741148096;
		_case_end_4741148432:;
		if (!((jule::Str("julenv", 6)) == _match_expr)) { goto _case_end_4741148544; }
		_case_begin_4741148544:;
		{
			_1e2408d0a_julenv();
		}
		goto _match_end_4741148096;
		_case_end_4741148544:;
		_case_begin_4741142912:;
		{
			return false;
		}
		goto _match_end_4741148096;
		_case_end_4741142912:;
		_match_end_4741148096:;
	}
	return true;
}



inline void _1e2408d0a_exit_err(jule::Str _14513_msg) {
	jule::outln(_14513_msg);
	_1e2506e5d_exit(1LL);
}



void entry_point(void) {
	jule::Slice<jule::Str> _1519_args = _1e256bd80_args();
	if (_1519_args.len() < 2LL) {
		return;
	}
	if (_1e2408d0a_process_command(_1519_args)) {
		return;
	}
	_1e2440b66_compile_command(_1519_args);
}



inline void _1e240a1a2___init_common(void) {
	_1e2440b66_COMPILER=jule::Str("clang", 5);
	_1e2440b66_COMPILER_PATH=jule::Str("clang++", 7);
}



inline void _1e243edc9_init(void) {
	_1e240a1a2___init_common();
}



inline jule::Int _1e2440b66_system(jule::Str _5111_cmd) {
	return static_cast<jule::Int>(static_cast<jule::Int>(system(((char*)((&(_5111_cmd[0LL])))))));
}



inline void _1e2440b66_write_output(jule::Str _5517_path,jule::Str _5528_content) {
	jule::Str _569_dir = _1e2517b61_dir(_5517_path);
	jule::Int _5817_err;
	std::tie(std::ignore,_5817_err) = _1e4798395_Status::_static_method_of(_569_dir);
	if (_5817_err != 0LLU) {
		_5817_err=_1e4789980_Directory::_static_method_create(_569_dir);
		if (_5817_err != 0LLU) {
			_1e2408d0a_exit_err(jule::Str("a problem occurs when code generation", 37));
		}
	}
	_5817_err=_1e479bce4_File::_static_method_write(_5517_path,static_cast<jule::Slice<jule::U8>>(_5528_content),432LL);
	if (_5817_err != 0LLU) {
		_1e2408d0a_exit_err(jule::Str("a problem occurs when code generation", 37));
	}
}



inline void _1e2440b66_clear_objects(void) {
	if (_1e479bce4_File::_static_method_remove(_1e2440b66_get_compile_path()) != 0LLU) {
		jule::outln(jule::Str("a problem occurs when object cleaning", 37));
		return;
	}
	_1e4789980_Directory::_static_method_remove(_1e2440b66_OUT_DIR);
}



inline void _1e2440b66_compile_ir(jule::Str _8615_compiler,jule::Str _8630_compiler_cmd) {
	jule::Int _879_status = _1e2440b66_system((_8615_compiler + jule::Str(" ", 1)) + _8630_compiler_cmd);
	if (_879_status != 0LL) {
		jule::out(jule::Str("external compiler failed with status code: ", 43));
		jule::outln(_879_status);
		_1e2408d0a_exit_err(jule::Str());
	}
	_1e2440b66_clear_objects();
}



inline void _1e2440b66_do_spell(jule::Str _9813_obj,jule::Str _9823_compiler,jule::Str _9838_compiler_cmd) {
	jule::Str _999_path = _1e2440b66_get_compile_path();
	_1e2440b66_write_output(_999_path,_9813_obj);
	if ((!(_1e2440b66_TRANSPILATION))) {
		_1e2440b66_compile_ir(_9823_compiler,_9838_compiler_cmd);
	}
}



inline jule::Bool _1e2440b66_is_cpp_source_file(jule::Str _10623_path) {
	jule::Int _1079_offset = _10623_path.rfind(jule::Str(".", 1));
	if (_1079_offset == -1LL) {
		return false;
	}
	return _1e243c019_is_valid_cpp_ext(_10623_path.slice(_1079_offset));
}



inline std::tuple<jule::Str,jule::Str> _1e2440b66_gen_compile_cmd(jule::Str _11520_source_path,jule::Ptr<_1e376ec74_IR>& _11539_ir) {
	jule::Str &_11610_compiler = _1e2440b66_COMPILER_PATH;
	
	
	
	jule::Str _1219_SET_STD = jule::Str("--std=", 6) + _1e2440b66_CPP_STD;
	jule::Str _12313_cmd = jule::Str("-O0", 3);
	_12313_cmd+=jule::Str(" ", 1);
	{
		auto &_match_expr{ _1e2440b66_COMPILER };
		if (!((jule::Str("gcc", 3)) == _match_expr)) { goto _case_end_4741191408; }
		_case_begin_4741191408:;
		{
			_12313_cmd+=jule::Str("-w", 2);
			_12313_cmd+=jule::Str(" ", 1);
		}
		goto _match_end_4741192544;
		_case_end_4741191408:;
		if (!((jule::Str("clang", 5)) == _match_expr)) { goto _case_end_4741192736; }
		_case_begin_4741192736:;
		{
			_12313_cmd+=jule::Str("-Wno-everything", 15);
			_12313_cmd+=jule::Str(" ", 1);
		}
		goto _match_end_4741192544;
		_case_end_4741192736:;
		_match_end_4741192544:;
	}
	_12313_cmd+=_1219_SET_STD;
	_12313_cmd+=jule::Str(" ", 1);
	{
		auto &expr = _11539_ir->_field_passes;
		auto it = expr.begin();
		_iter_begin_4741195312:;
		if (it != expr.end()) {
			jule::Str &_1e2440b66_pass = *it;
			{
				_12313_cmd+=_1e2440b66_pass;
				_12313_cmd+=jule::Str(" ", 1);
			}
			_iter_next_4741195312:;
			++it;
			goto _iter_begin_4741195312;
		}
		_iter_end_4741195312:;
	}
	{
		auto &expr = _11539_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4741194208:;
		if (it != expr.end()) {
			jule::Ptr<_1e4ee54e8_ImportInfo> &_1e2440b66_u = *it;
			{
				if (_1e2440b66_u->_field_cpp_linked && _1e2440b66_is_cpp_source_file(_1e2440b66_u->_field_path)) {
					_12313_cmd+=_1e2440b66_u->_field_path;
					_12313_cmd+=jule::Str(" ", 1);
				}
			}
			_iter_next_4741194208:;
			++it;
			goto _iter_begin_4741194208;
		}
		_iter_end_4741194208:;
	}
	if (_1e2440b66_OUT != jule::Str()) {
		_12313_cmd+=jule::Str("-o ", 3);
		_12313_cmd+=_1e2440b66_OUT;
		_12313_cmd+=jule::Str(" ", 1);
	}
	_12313_cmd+=_11520_source_path;
	return std::make_tuple(_11610_compiler,_12313_cmd);
}



inline jule::Str _1e2440b66_get_compile_path(void) {
	return _1e2517b61_join(jule::Slice<jule::Str>({_1e2440b66_OUT_DIR,_1e2440b66_OUT_NAME}));
}



inline void _1e2440b66_apply_target_independent_optimizations(jule::Ptr<_1e376ec74_IR>& _17248_ir) {
	if (_1e2496a24_OPT_DEADCODE) {
		_1e249646e_eliminate(_17248_ir);
	}
}



inline void _1e2440b66_check_compiler_flag(void) {
	{
		auto &_match_expr{ _1e2440b66_COMPILER };
		if (!((jule::Str()) == _match_expr)) { goto _case_end_4741206416; }
		_case_begin_4741206416:;
		{
			_1e2408d0a_exit_err(jule::Str("missing option value: --compiler", 32));
		}
		goto _match_end_4741203696;
		_case_end_4741206416:;
		if (!((jule::Str("clang", 5)) == _match_expr)) { goto _case_end_4741204864; }
		_case_begin_4741204864:;
		{
			_1e2440b66_COMPILER_PATH=jule::Str("clang++", 7);
		}
		goto _match_end_4741203696;
		_case_end_4741204864:;
		if (!((jule::Str("gcc", 3)) == _match_expr)) { goto _case_end_4741204960; }
		_case_begin_4741204960:;
		{
			_1e2440b66_COMPILER_PATH=jule::Str("g++", 3);
		}
		goto _match_end_4741203696;
		_case_end_4741204960:;
		_case_begin_4741193040:;
		{
			_1e2408d0a_exit_err(jule::Str("invalid option value for --compiler: ", 37) + _1e2440b66_COMPILER);
		}
		goto _match_end_4741203696;
		_case_end_4741193040:;
		_match_end_4741203696:;
	}
}



inline void _1e2440b66_check_target_arch(jule::Str _19422_arch) {
	{
		auto &expr = _1e24c3798_DISTARCH;
		auto it = expr.begin();
		_iter_begin_4741206576:;
		if (it != expr.end()) {
			jule::Str &_1e2440b66_distarch = *it;
			{
				if (_19422_arch == _1e2440b66_distarch) {
					return;
				}
			}
			_iter_next_4741206576:;
			++it;
			goto _iter_begin_4741206576;
		}
		_iter_end_4741206576:;
	}
	_1e2408d0a_exit_err(jule::Str("--target: unsupported/undefined architecture: ", 46) + _19422_arch);
}



inline void _1e2440b66_check_target_os(jule::Str _20420_os) {
	{
		auto &expr = _1e24c3798_DISTOS;
		auto it = expr.begin();
		_iter_begin_4741211712:;
		if (it != expr.end()) {
			jule::Str &_1e2440b66_distos = *it;
			{
				if (_20420_os == _1e2440b66_distos) {
					return;
				}
			}
			_iter_next_4741211712:;
			++it;
			goto _iter_begin_4741211712;
		}
		_iter_end_4741211712:;
	}
	_1e2408d0a_exit_err(jule::Str("--target: unsupported/undefined operating system: ", 50) + _20420_os);
}



inline void _1e2440b66_check_target_flag(jule::Str& _21423_target) {
	if (_21423_target == jule::Str()) {
		_1e2408d0a_exit_err(jule::Str("missing option value: --target", 30));
	}
	jule::Slice<jule::Str> _2199_parts = _21423_target.split(jule::Str("-", 1),-1LL);
	if (_2199_parts.len() != 2LL) {
		_1e2408d0a_exit_err(jule::Str("--target: undefined platform target format: ", 44) + _21423_target);
	}
	jule::Str _22410_os = _2199_parts[0LL];
	jule::Str _22414_arch = _2199_parts[1LL];
	std::tie(_22410_os,_22414_arch) = std::make_tuple(_2199_parts[0LL],_2199_parts[1LL]);
	if (_22410_os != jule::Str("native", 6)) {
		_1e2440b66_check_target_os(_22410_os);
		_1e24951c6_OS=_22410_os;
	}
	if (_22414_arch != jule::Str("native", 6)) {
		_1e2440b66_check_target_arch(_22414_arch);
		_1e24951c6_ARCH=_22414_arch;
	}
}



inline void _1e2440b66_check_opt_flag(jule::Str& _23720_opt) {
	if (_23720_opt == jule::Str()) {
		_1e2408d0a_exit_err(jule::Str("missing option value: --opt", 27));
	}
	{
		auto &_match_expr{ _23720_opt };
		if (!((jule::Str("L0", 2)) == _match_expr)) { goto _case_end_4741228912; }
		goto _match_end_4741226112;
		_case_end_4741228912:;
		if (!((jule::Str("L1", 2)) == _match_expr)) { goto _case_end_4741229136; }
		_case_begin_4741229136:;
		{
			_1e2496a24_push_opt_level(1LLU);
		}
		goto _match_end_4741226112;
		_case_end_4741229136:;
		_case_begin_4741225600:;
		{
			_1e2408d0a_exit_err(jule::Str("--opt: invalid optimization level: ", 35) + _23720_opt);
		}
		goto _match_end_4741226112;
		_case_end_4741225600:;
		_match_end_4741226112:;
	}
}



inline jule::Slice<jule::Str> _1e2440b66_check_flags(jule::Slice<jule::Str>& _24917_args) {
	jule::Str _25013_opt = jule::Str("L0", 2);
	jule::Str _25113_target = jule::Str("native-native", 13);
	jule::Ptr<_1e249dae7_FlagSet> _25313_fs = _1e249dae7_FlagSet::_static_method_new();
	_25313_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_1e2440b66_SHADOWING)))),jule::Str("shadowing", 9),0LL,jule::Str("Let shadowing", 13));
	_25313_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_1e2440b66_TRANSPILATION)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_25313_fs->_method_add_var_1(((jule::Ptr<jule::Str>)((&(_1e2440b66_COMPILER)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_25313_fs->_method_add_var_1(((jule::Ptr<jule::Str>)((&(_25013_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_25313_fs->_method_add_var_1(((jule::Ptr<jule::Str>)((&(_25113_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_25313_fs->_method_add_var_1(((jule::Ptr<jule::Str>)((&(_1e2440b66_OUT)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_25313_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_1e2496a24_OPT_COPY)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_25313_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_1e2496a24_OPT_DEADCODE)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_25313_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_1e2496a24_OPT_APPEND)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_25313_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_1e2496a24_OPT_MATH)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_25313_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_1e2496a24_OPT_ACCESS)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_25313_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_1e2496a24_OPT_INLINE)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_25313_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_1e2496a24_OPT_PTR)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	jule::Slice<jule::Str> _26914_content;
	jule::Str _26923_error;
	std::tie(_26914_content,_26923_error) = _25313_fs->_method_parse(_24917_args.slice(1LL));
	if (_26923_error != jule::Str()) {
		_1e2408d0a_exit_err(_26923_error);
	}
	_1e2440b66_check_compiler_flag();
	_1e2440b66_check_target_flag(_25113_target);
	_1e2440b66_check_opt_flag(_25013_opt);
	return _26914_content;
}



inline void _1e2440b66_setup_sema_flags(jule::Int& _28126_flags) {
	if (_1e2440b66_SHADOWING) {
		_28126_flags|=1LL;
	}
}



inline jule::Ptr<_1e376ec74_IR> _1e2440b66_build_ir(jule::Slice<jule::Str>& _28714_args) {
	jule::Slice<jule::Str> _2889_content = _1e2440b66_check_flags(_28714_args);
	jule::Int _29013_sema_flags = 0LL;
	_1e2440b66_setup_sema_flags(_29013_sema_flags);
	if (_2889_content.len() == 0LL) {
		_1e2408d0a_exit_err(_1e24777a2_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if (_2889_content.len() > 1LL) {
		_1e2408d0a_exit_err(jule::Str("undefined content: ", 19) + _2889_content[1LL]);
	}
	jule::Str _2989_path = _2889_content[0LL];
	jule::Ptr<_1e4798395_Status> _30110_inf;
	jule::Int _30115_err;
	std::tie(_30110_inf,_30115_err) = _1e4798395_Status::_static_method_of(_1e24c38db_PATH_STDLIB);
	if ((_30115_err != 0LLU) || (!(_30110_inf->_method_is_dir()))) {
		_1e2408d0a_exit_err(_1e24777a2_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	}
	_1e36600a4_init_flags();
	jule::Ptr<_1e376ec74_IR> _30914_ir;
	jule::Slice<_1e24777a2_Log> _30918_logs;
	std::tie(_30914_ir,_30918_logs) = _1e376ec74_IR::_static_method_build(_2989_path,_29013_sema_flags);
	if ((_30914_ir == nullptr) && (_30918_logs == nullptr)) {
		_1e2408d0a_exit_err(_1e24777a2_logf(jule::Str("there is no Jule source code in this package: @", 47),jule::Slice<jule::Any>({jule::Any(_2989_path)})));
	}
	if (_30918_logs != nullptr) {
		_1e240937c_Logger::_static_method_print_logs(_30918_logs);
		_1e2408d0a_exit_err(jule::Str());
	}
	return _30914_ir;
}



inline void _1e2440b66_compile_command(jule::Slice<jule::Str>& _32421_args) {
	jule::Ptr<_1e376ec74_IR> _32513_ir = _1e2440b66_build_ir(_32421_args);
	
	jule::Ptr<_1e4b15a20_Fn> _32813_f = _32513_ir->_field_main->_method_find_fn(jule::Str("main", 4),false);
	if (_32813_f == nullptr) {
		_1e2408d0a_exit_err(_1e24777a2_logf(jule::Str("entry point (main) function is not defined", 42),jule::Slice<jule::Any>()));
	}
	_32813_f->_field_statically=true;
	_32813_f=_32513_ir->_field_main->_method_find_fn(jule::Str("init", 4),false);
	if (_32813_f != nullptr) {
		_32813_f->_field_statically=true;
	}
	_1e2440b66_apply_target_independent_optimizations(_32513_ir);
	_32513_ir->_method_order();
	jule::Str _34410_compiler;
	jule::Str _34420_compiler_cmd;
	std::tie(_34410_compiler,_34420_compiler_cmd) = _1e2440b66_gen_compile_cmd(_1e2440b66_get_compile_path(),_32513_ir);
	jule::Str _34613_obj = _1c9006426_gen(_32513_ir);
	_1c9006426_append_standard(_34613_obj,_34410_compiler,_34420_compiler_cmd);
	_1e2440b66_do_spell(_34613_obj,_34410_compiler,_34420_compiler_cmd);
}




void __jule_call_initializers(void) {
	_1e24c38db_init();
	_1c8ac49ea_init();
	_1e243edc9_init();
}

int main(int argc, char *argv[], char *envp[]) {
    std::set_terminate(&jule::terminate_handler);
    jule::set_sig_handler(jule::signal_handler);
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}