// Auto generated by JuleC.
// JuleC version: jule0.0.16 @master
// Date: 21/9/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <mach-o/dyld.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   

struct _1d806196c_acceptRange;
struct _1d80a3838_LittleEndian;
struct _1d80bcee5_u128;
struct _1acba5069_group;
struct _1acc006d0_group;
struct _1acba2c26__Map;
struct _1acbed59b__Map;
struct _1acbae4a2_mapIterator;
struct _1acc07b7c_mapIterator;
struct _1dae78386_Range16;
struct _1dae788b4_Range32;
struct _1dae78d37_RangeTable;
struct _1daed18b7_StrBuilder;
struct _1daedcc14_lazyBuff;
struct _1d828aeb5_DirEntry;
struct _1d828b24b_Directory;
struct _1d828cd85_File;
struct _1d828ee75_Status;
struct _1d92555aa_cmdAttrs;
struct _1d9144ab5_Log;
struct _1d949ac2e_floatInfo;
struct _1c00450ea_decimalSlice;
struct _1c0057250_leftCheat;
struct _1c0057c67_decimal;
struct _1c006a461_Const;
struct _1a7b69b05_Token;
struct _1a7b7038b_File;
struct _1a7b724e2_kindPair;
struct _1a7b784c6_lex;
struct _1a7b7d19b_AST;
struct _1a7b7e0ae_Node;
struct _1a7b7e4cc_Directive;
struct _1a7b800b0_TypeDecl;
struct _1a7b806ba_IdentTypeDecl;
struct _1a7b857e1_SubIdentTypeDecl;
struct _1a7b85bba_NamespaceTypeDecl;
struct _1a7b85eb7_SptrTypeDecl;
struct _1a7b8634c_SlcTypeDecl;
struct _1a7b86649_TupleTypeDecl;
struct _1a7b86946_PtrTypeDecl;
struct _1a7b871d8_ArrTypeDecl;
struct _1a7b87936_MapTypeDecl;
struct _1a7b87d10_RetTypeDecl;
struct _1a7b89251_Expr;
struct _1a7b8951a_RangeExpr;
struct _1a7b89b25_UseExpr;
struct _1a7b89d45_TupleExpr;
struct _1a7b8a1db_LitExpr;
struct _1a7b8a5b5_UnsafeExpr;
struct _1a7b8aa6b_IdentExpr;
struct _1a7b8b30d_UnaryExpr;
struct _1a7b8b6d7_VariadicExpr;
struct _1a7b8bab1_CastExpr;
struct _1a7b8be8a_NsSelectionExpr;
struct _1a7b8c364_SubIdentExpr;
struct _1a7b8c81a_BinaryExpr;
struct _1a7b8ce7a_FnCallExpr;
struct _1a7b8d970_FieldExprPair;
struct _1a7b8e29a_StructLit;
struct _1a7b8e751_BraceLit;
struct _1a7b9007b_KeyValPair;
struct _1a7b907a7_SliceExpr;
struct _1a7b91214_IndexingExpr;
struct _1a7b91874_SlicingExpr;
struct _1a7b91b71_Constraint;
struct _1a7b92127_GenericDecl;
struct _1a7b92501_LabelSt;
struct _1a7b928ca_GotoSt;
struct _1a7b92bc7_FallSt;
struct _1a7b93337_AssignLeft;
struct _1a7b938ba_AssignSt;
struct _1a7b947cd_Stmt;
struct _1a7b94e3d_ScopeTree;
struct _1a7b9567a_ParamDecl;
struct _1a7b96acc_FnDecl;
struct _1a7b97c87_VarDecl;
struct _1a7b98161_RetSt;
struct _1a7b988d1_Iter;
struct _1a7b9920b_WhileKind;
struct _1a7b99b13_RangeKind;
struct _1a7b99edc_BreakSt;
struct _1a7b9a3b6_ContSt;
struct _1a7b9a86c_If;
struct _1a7b9ac46_Else;
struct _1a7b9b1ec_Conditional;
struct _1a7b9b939_TypeAliasDecl;
struct _1a7b9bde0_Case;
struct _1a7b9c709_MatchCase;
struct _1a7b9d023_UseDecl;
struct _1a7b9d4c9_EnumItemDecl;
struct _1a7b9e08a_EnumDecl;
struct _1a7b9e8b5_TypeEnumItemDecl;
struct _1a7ba0025_TypeEnumDecl;
struct _1a7ba02de_FieldDecl;
struct _1a7ba0bd5_StructDecl;
struct _1a7ba1422_TraitDecl;
struct _1a7ba1a82_Impl;
struct _1a7ba2d80_Field;
struct _1a7ba4d93_Operators;
struct _1a7ba5ca6_Struct;
struct _1a7ba8061_FieldIns;
struct _1a7ba8b11_StructIns;
struct _1a7bac928_OperandExprModel;
struct _1a7bace23_BinaryExprModel;
struct _1a7bad2ec_UnaryExprModel;
struct _1a7bad82a_StructArgExprModel;
struct _1a7badbc1_StructLitExprModel;
struct _1a7badebd_AllocStructLitExprModel;
struct _1a7bae551_CastingExprModel;
struct _1a7baee03_FnCallExprModel;
struct _1a7bb02cc_SliceExprModel;
struct _1a7bb0783_IndexingExprModel;
struct _1a7bb0c39_AnonFnExprModel;
struct _1a7bb1113_KeyValPairExprModel;
struct _1a7bb14dc_MapExprModel;
struct _1a7bb1a70_SlicingExprModel;
struct _1a7bb2103_TraitSubIdentExprModel;
struct _1a7bb2994_StructSubIdentExprModel;
struct _1a7bb2d3a_StructStaticIdentExprModel;
struct _1a7bb3214_ArrayExprModel;
struct _1a7bb3511_TupleExprModel;
struct _1a7bb38da_BuiltinOutCallExprModel;
struct _1a7bb3cb4_BuiltinOutlnCallExprModel;
struct _1a7bb418d_BuiltinNewCallExprModel;
struct _1a7bb4567_BuiltinPanicCallExprModel;
struct _1a7bb4a1d_BuiltinAssertCallExprModel;
struct _1a7bb4ec4_BuiltinMakeCallExprModel;
struct _1a7bb539d_BuiltinAppendCallExprModel;
struct _1a7bb569a_BuiltinLenCallExprModel;
struct _1a7bb5997_BuiltinCapCallExprModel;
struct _1a7bb5d71_BuiltinDeleteCallExprModel;
struct _1a7bb624a_BuiltinCopyCallExprModel;
struct _1a7bb6624_BuiltinErrorCallExprModel;
struct _1a7bb6cc8_SizeofExprModel;
struct _1a7bb6eb5_AlignofExprModel;
struct _1a7bb725c_RuneExprModel;
struct _1a7bb7636_BackendEmitExprModel;
struct _1a7bb7933_FreeExprModel;
struct _1a7bb86c0_RetType;
struct _1a7bb8e0c_Param;
struct _1a7bba8d1_Fn;
struct _1a7bbc839_ParamIns;
struct _1a7bbd8b2_FnIns;
struct _1a7bc1a4c_ReferenceStack;
struct _1a7bc3059_Pass;
struct _1a7bc7a0e_symbolBuilder;
struct _1a7bce362_Trait;
struct _1a7bd1001_EnumItem;
struct _1a7bd1a6d_Enum;
struct _1a7bd2ba1_TypeEnumItem;
struct _1a7bd3278_TypeEnum;
struct _1a7bd5ba4_comptimeRange;
struct _1a7bd6710_comptimeStructField;
struct _1a7bd7ea3_comptimeStructFields;
struct _1a7bd9933_comptimeStatic;
struct _1a7bdb1d7_comptimeStatics;
struct _1a7bdcb56_comptimeEnumField;
struct _1a7bdde65_comptimeEnumFields;
struct _1a7be096c_comptimeParam;
struct _1a7be27c6_comptimeParams;
struct _1a7be4135_comptimeTypeInfos;
struct _1a7be5aa4_comptimeTypeInfo;
struct _1a7bebba9_comptimeValue;
struct _1a7bee915_comptimeFiles;
struct _1a7c01384_comptimeFile;
struct _1a7c02eac_comptimeDecls;
struct _1a7c0529a_comptimeDecl;
struct _1a7c0bd51_constraintChecker;
struct _1a7c0e1a5_Impl;
struct _1a7c1397e_Scope;
struct _1a7c13d9c_If;
struct _1a7c14199_Else;
struct _1a7c145b7_Conditional;
struct _1a7c148b4_InfIter;
struct _1a7c14d6a_WhileIter;
struct _1a7c157b6_RangeIter;
struct _1a7c15b4b_ContSt;
struct _1a7c16025_BreakSt;
struct _1a7c164cb_Label;
struct _1a7c16b3b_GotoSt;
struct _1a7c17015_Postfix;
struct _1a7c174bb_Assign;
struct _1a7c17972_MultiAssign;
struct _1a7c181ae_Match;
struct _1a7c18bd7_Case;
struct _1a7c193d0_FallSt;
struct _1a7c19776_RetSt;
struct _1a7c19c2c_scopeLabel;
struct _1a7c1ac1c_scopeChecker;
struct _1a7c2eba9_directiveChecker;
struct _1a7c36793_ImportInfo;
struct _1a7c396b9_Package;
struct _1a7c560dc_commonSemaMeta;
struct _1a7c56c14_sema;
struct _1a7c779c1_missingRetChecker;
struct _1a7c7b178_Var;
struct _1a7c7c212_FuncPattern;
struct _1a7cba948_typeCompatibilityChecker;
struct _1a7cbc7c4_assignTypeChecker;
struct _1a7cbe199_dynamicTypeAnnotation;
struct _1a7cc4006_fnCallArgChecker;
struct _1a7cc6e3d_structLitChecker;
struct _1a7cc8c20_rangeChecker;
struct _1a7ccb481_retTypeChecker;
struct _1a7ccd9e4_SymbolTable;
struct _1a7cd41ae_Data;
struct _1a7cd5336_Value;
struct _1a7cd5dd6_eval;
struct _1a7d0a03c_unaryEval;
struct _1a7d0bec8_binaryEval;
struct _1a7d1a3b0_InsGeneric;
struct _1a7d1aea4_TypeAlias;
struct _1a7d1bc96_TypeKind;
struct _1a7d244a7_TypeSymbol;
struct _1a7d24dae_Prim;
struct _1a7d288da_Sptr;
struct _1a7d293ad_Slc;
struct _1a7d29ea2_Tuple;
struct _1a7d2aa52_Map;
struct _1a7d2b6ce_Arr;
struct _1a7d2c1a2_Ptr;
struct _1a7d2d1a3_referencer;
struct _1a7d2e193_typeChecker;
struct _1a7d37256_identTypeLookup;
struct _1a879690c_FileInfo;
struct _1a87ded0c_stmt;
struct _1a87e069d_scopeParser;
struct _1a87ed117_exprBuilder;
struct _1a880a82d_assignInfo;
struct _1a880dc2c_parser;
struct _1a8820d4e_typeBuilder;
struct _1a804ce2d_CompileInfo;
struct _1a804e407_directiveEval;
struct _1a8824e85_JuleImporter;
struct _1a882b992_ExprInspector;
struct _1a8832eb5_OrderedDefines;
struct _1a896be89_specialCaseDefines;
struct _1a896c8a2_liveTable;
struct _1a896cd58_ObjectDeadCode;
struct _1a8971e7d_scopeDeadCode;
struct _1a8976625_exprDeadCode;
struct _1a7e125d9_ExceptionalForwardingExprModel;
struct _1a7e1296e_SwapExprModel;
struct _1a7e12d48_EmptyCompareExprModel;
struct _1a7e131bc_RefExprModel;
struct _1a7e13640_StrCompExprModel;
struct _1a7e13bc3_MutSlicingExprModel;
struct _1a7e13ec0_UnsafeBinaryExprModel;
struct _1a7e14355_UnsafeIndexingExprModel;
struct _1a7e1472e_PushToSliceExprModel;
struct _1a7e14b08_AppendToSliceExprModel;
struct _1a7e14ed2_StrRuneIter;
struct _1a7e152ce_UnsafeDerefExprModel;
struct _1a7e155cb_UnsafeCastingExprModel;
struct _1a7e162ad_nilVar;
struct _1a7e165ee_nils;
struct _1a8834769_scopeOptimizer;
struct _1a883b1bb_exprOptimizer;
struct _1a88415ab_dynamicVar;
struct _1a88418ec_dynamic;
struct _1a884457b_data;
struct _1a8845b32_boundaryVar;
struct _1a8845e73_boundary;
struct _1a8977747_Optimizer;
struct _1a899dae2_AnsiEscape;
struct _1a89a0198_Logger;
struct _1a968806c_AbsTime;
struct _1a9688743_Time;
struct _1a95aebec_scopeCoder;
struct _1a95bb4cd_exprCoder;
struct _1a95ce03a_TestCoder;
struct _1a95d1eb6_identCoder;
struct _1a96922c9_SerializationInfo;
struct _1a96926e7_traitCast;
struct _1a9692ac1_anonHash;
struct _1a9694078_ObjectCoder;
struct _1a96a2e00_customType;
struct _1a96a3a38_typeCoder;
struct _1a96ab623_resultCoder;
struct _1ad3818cc_Flag;
struct _1ad3851e9_Flag;
struct _1ad388906_Flag;
struct _1ad38c157_Flag;
struct _1ad390864_Flag;
struct _1a97276b1_FlagSet;
struct _1a972a175_argParser;
struct _1a882795a_IR;
struct _1a8844081_dataCheckpoint;
struct _1d92015cd_Cmd;
struct _1d806196c_acceptRange {
	jule::U8 _field_lo;
	jule::U8 _field_hi;
	

};
inline jule::Bool _1d806196c_acceptRange_eq(_1d806196c_acceptRange *_self_, _1d806196c_acceptRange _other_);


struct _1d80a3838_LittleEndian {
	

};
inline jule::Bool _1d80a3838_LittleEndian_eq(_1d80a3838_LittleEndian *_self_, _1d80a3838_LittleEndian _other_);


struct _1d80bcee5_u128 {
	jule::U64 _field_hi;
	jule::U64 _field_lo;
	

};
inline jule::Bool _1d80bcee5_u128_eq(_1d80bcee5_u128 *_self_, _1d80bcee5_u128 _other_);


struct _1acba5069_group {
	jule::Array<jule::Str,8> _field_keys;
	jule::Array<jule::Bool,8> _field_values;
	

};
inline jule::Bool _1acba5069_group_eq(_1acba5069_group *_self_, _1acba5069_group _other_);

struct _1acc006d0_group {
	jule::Array<jule::Ptr<_1a7bbd8b2_FnIns>,8> _field_keys;
	jule::Array<jule::Slice<jule::Uintptr>,8> _field_values;
	

};
struct _1acba2c26__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1acba5069_group> _field_groups;
	jule::I64 _field_resident;
	jule::I64 _field_dead;
	jule::I64 _field_limit;
	

};struct _1acbed59b__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1acc006d0_group> _field_groups;
	jule::I64 _field_resident;
	jule::I64 _field_dead;
	jule::I64 _field_limit;
	

};
struct _1acbae4a2_mapIterator {
	jule::Ptr<_1acba2c26__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1acba5069_group> _field_groups;
	jule::I64 _field_n;
	jule::I64 _field_g;
	jule::I64 _field_s;
	

};struct _1acc07b7c_mapIterator {
	jule::Ptr<_1acbed59b__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1acc006d0_group> _field_groups;
	jule::I64 _field_n;
	jule::I64 _field_g;
	jule::I64 _field_s;
	

};
struct _1dae78386_Range16 {
	jule::U16 _field_Lo;
	jule::U16 _field_Hi;
	jule::U16 _field_Stride;
	

};
inline jule::Bool _1dae78386_Range16_eq(_1dae78386_Range16 *_self_, _1dae78386_Range16 _other_);


struct _1dae788b4_Range32 {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::U32 _field_Stride;
	

};
inline jule::Bool _1dae788b4_Range32_eq(_1dae788b4_Range32 *_self_, _1dae788b4_Range32 _other_);


struct _1dae78d37_RangeTable {
	jule::Slice<_1dae78386_Range16> _field_R16;
	jule::Slice<_1dae788b4_Range32> _field_R32;
	jule::I64 _field_LatinOffset;
	

};
struct _1daed18b7_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	

};
struct _1daedcc14_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen;
	

};
struct _1d828aeb5_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_1d828ee75_Status> _field_Stat;
	

};
inline jule::Bool _1d828aeb5_DirEntry_eq(_1d828aeb5_DirEntry *_self_, _1d828aeb5_DirEntry _other_);


struct _1d828b24b_Directory {
	

};
inline jule::Bool _1d828b24b_Directory_eq(_1d828b24b_Directory *_self_, _1d828b24b_Directory _other_);


struct _1d828cd85_File {
	jule::Uintptr _field_handle;
	

};
inline jule::Bool _1d828cd85_File_eq(_1d828cd85_File *_self_, _1d828cd85_File _other_);


struct _1d828ee75_Status {
	jule::I64 _field_mode;
	jule::U64 _field_size;
	

};
inline jule::Bool _1d828ee75_Status_eq(_1d828ee75_Status *_self_, _1d828ee75_Status _other_);


struct _1d92555aa_cmdAttrs {
	jule::I64 _field_pid;
	

};
inline jule::Bool _1d92555aa_cmdAttrs_eq(_1d92555aa_cmdAttrs *_self_, _1d92555aa_cmdAttrs _other_);


struct _1d9144ab5_Log {
	jule::I64 _field_Kind;
	jule::I64 _field_Row;
	jule::I64 _field_Column;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

};
inline jule::Bool _1d9144ab5_Log_eq(_1d9144ab5_Log *_self_, _1d9144ab5_Log _other_);


struct _1d949ac2e_floatInfo {
	jule::U64 _field_mantbits;
	jule::U64 _field_expbits;
	jule::I64 _field_bias;
	

};
inline jule::Bool _1d949ac2e_floatInfo_eq(_1d949ac2e_floatInfo *_self_, _1d949ac2e_floatInfo _other_);


struct _1c00450ea_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd;
	jule::I64 _field_dp;
	jule::Bool _field_neg;
	

};
struct _1c0057250_leftCheat {
	jule::I64 _field_delta;
	jule::Str _field_cutoff;
	

};
inline jule::Bool _1c0057250_leftCheat_eq(_1c0057250_leftCheat *_self_, _1c0057250_leftCheat _other_);


struct _1c0057c67_decimal {
	jule::Array<jule::U8,800> _field_d;
	jule::I64 _field_nd;
	jule::I64 _field_dp;
	jule::Bool _field_neg;
	jule::Bool _field_trunc;
	

};
inline jule::Bool _1c0057c67_decimal_eq(_1c0057c67_decimal *_self_, _1c0057c67_decimal _other_);


inline jule::Bool _1c0071049_Eq(_1c006a461_Const* _self_, _1c006a461_Const _26014_x);
inline jule::Bool _1c007138a_Lt(_1c006a461_Const* _self_, _1c006a461_Const _28714_x);
inline jule::Bool _1c00716cb_LtEq(_1c006a461_Const* _self_, _1c006a461_Const _31016_x);
inline jule::Bool _1c0071a1c_Gt(_1c006a461_Const* _self_, _1c006a461_Const _33314_x);
inline jule::Bool _1c0071d5d_GtEq(_1c006a461_Const* _self_, _1c006a461_Const _35616_x);
struct _1c006a461_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

};
struct _1a7b69b05_Token {
	jule::Ptr<_1a7b7038b_File> _field_File;
	jule::I64 _field_Row;
	jule::I64 _field_Column;
	jule::Str _field_Kind;
	jule::U64 _field_Id;
	

};
inline jule::Bool _1a7b69b05_Token_eq(_1a7b69b05_Token *_self_, _1a7b69b05_Token _other_);


struct _1a7b7038b_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _field_Tokens;
	

};
struct _1a7b724e2_kindPair {
	jule::Str _field_kind;
	jule::U64 _field_id;
	

};
inline jule::Bool _1a7b724e2_kindPair_eq(_1a7b724e2_kindPair *_self_, _1a7b724e2_kindPair _other_);


struct _1a7b784c6_lex {
	jule::I64 _field_mode;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _field_tokens;
	jule::Ptr<_1a7b7038b_File> _field_file;
	jule::I64 _field_pos;
	jule::I64 _field_column;
	jule::I64 _field_row;
	jule::Slice<_1d9144ab5_Log> _field_errors;
	

};
struct _1a7b7d19b_AST {
	jule::Ptr<_1a7b7038b_File> _field_File;
	jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1a7b9d023_UseDecl>> _field_UseDecls;
	jule::Slice<_1a7b7e0ae_Node> _field_Nodes;
	

};
struct _1a7b7e0ae_Node {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Any _field_Data;
	

};
inline jule::Bool _1a7b7e0ae_Node_eq(_1a7b7e0ae_Node *_self_, _1a7b7e0ae_Node _other_);


struct _1a7b7e4cc_Directive {
	jule::Ptr<_1a7b69b05_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _field_Args;
	

};
struct _1a7b800b0_TypeDecl {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Any _field_Kind;
	

};
inline jule::Bool _1a7b800b0_TypeDecl_eq(_1a7b800b0_TypeDecl *_self_, _1a7b800b0_TypeDecl _other_);


struct _1a7b806ba_IdentTypeDecl {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>> _field_Generics;
	

};
struct _1a7b857e1_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1a7b806ba_IdentTypeDecl>> _field_Idents;
	

};
struct _1a7b85bba_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _field_Idents;
	jule::Ptr<_1a7b800b0_TypeDecl> _field_Kind;
	

};
struct _1a7b85eb7_SptrTypeDecl {
	jule::Ptr<_1a7b800b0_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1a7b85eb7_SptrTypeDecl_eq(_1a7b85eb7_SptrTypeDecl *_self_, _1a7b85eb7_SptrTypeDecl _other_);


struct _1a7b8634c_SlcTypeDecl {
	jule::Ptr<_1a7b800b0_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1a7b8634c_SlcTypeDecl_eq(_1a7b8634c_SlcTypeDecl *_self_, _1a7b8634c_SlcTypeDecl _other_);


struct _1a7b86649_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>> _field_Types;
	

};
struct _1a7b86946_PtrTypeDecl {
	jule::Ptr<_1a7b800b0_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1a7b86946_PtrTypeDecl_eq(_1a7b86946_PtrTypeDecl *_self_, _1a7b86946_PtrTypeDecl _other_);


struct _1a7b871d8_ArrTypeDecl {
	jule::Ptr<_1a7b800b0_TypeDecl> _field_Elem;
	jule::Ptr<_1a7b89251_Expr> _field_Size;
	

};
inline jule::Bool _1a7b871d8_ArrTypeDecl_eq(_1a7b871d8_ArrTypeDecl *_self_, _1a7b871d8_ArrTypeDecl _other_);


struct _1a7b87936_MapTypeDecl {
	jule::Ptr<_1a7b800b0_TypeDecl> _field_Key;
	jule::Ptr<_1a7b800b0_TypeDecl> _field_Val;
	

};
inline jule::Bool _1a7b87936_MapTypeDecl_eq(_1a7b87936_MapTypeDecl *_self_, _1a7b87936_MapTypeDecl _other_);


struct _1a7b87d10_RetTypeDecl {
	jule::Ptr<_1a7b800b0_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _field_Idents;
	

};
struct _1a7b89251_Expr {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7b69b05_Token> _field_End;
	jule::Any _field_Kind;
	

};
inline jule::Bool _1a7b89251_Expr_eq(_1a7b89251_Expr *_self_, _1a7b89251_Expr _other_);


struct _1a7b8951a_RangeExpr {
	jule::Ptr<_1a7b89251_Expr> _field_Expr;
	

};
inline jule::Bool _1a7b8951a_RangeExpr_eq(_1a7b8951a_RangeExpr *_self_, _1a7b8951a_RangeExpr _other_);


struct _1a7b89b25_UseExpr {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7b89251_Expr> _field_Expr;
	

};
inline jule::Bool _1a7b89b25_UseExpr_eq(_1a7b89b25_UseExpr *_self_, _1a7b89b25_UseExpr _other_);


struct _1a7b89d45_TupleExpr {
	jule::Slice<jule::Ptr<_1a7b89251_Expr>> _field_Expr;
	

};
struct _1a7b8a1db_LitExpr {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Str _field_Value;
	

};
inline jule::Bool _1a7b8a1db_LitExpr_eq(_1a7b8a1db_LitExpr *_self_, _1a7b8a1db_LitExpr _other_);


struct _1a7b8a5b5_UnsafeExpr {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7b89251_Expr> _field_Expr;
	

};
inline jule::Bool _1a7b8a5b5_UnsafeExpr_eq(_1a7b8a5b5_UnsafeExpr *_self_, _1a7b8a5b5_UnsafeExpr _other_);


struct _1a7b8aa6b_IdentExpr {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	

};
inline jule::Bool _1a7b8aa6b_IdentExpr_eq(_1a7b8aa6b_IdentExpr *_self_, _1a7b8aa6b_IdentExpr _other_);


struct _1a7b8b30d_UnaryExpr {
	jule::Ptr<_1a7b69b05_Token> _field_Op;
	jule::Ptr<_1a7b89251_Expr> _field_Expr;
	

};
inline jule::Bool _1a7b8b30d_UnaryExpr_eq(_1a7b8b30d_UnaryExpr *_self_, _1a7b8b30d_UnaryExpr _other_);


struct _1a7b8b6d7_VariadicExpr {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7b89251_Expr> _field_Expr;
	

};
inline jule::Bool _1a7b8b6d7_VariadicExpr_eq(_1a7b8b6d7_VariadicExpr *_self_, _1a7b8b6d7_VariadicExpr _other_);


struct _1a7b8bab1_CastExpr {
	jule::Ptr<_1a7b800b0_TypeDecl> _field_Kind;
	jule::Ptr<_1a7b89251_Expr> _field_Expr;
	

};
inline jule::Bool _1a7b8bab1_CastExpr_eq(_1a7b8bab1_CastExpr *_self_, _1a7b8bab1_CastExpr _other_);


struct _1a7b8be8a_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _field_Ns;
	jule::Ptr<_1a7b69b05_Token> _field_Ident;
	

};
struct _1a7b8c364_SubIdentExpr {
	jule::Ptr<_1a7b89251_Expr> _field_Expr;
	jule::Ptr<_1a7b69b05_Token> _field_Ident;
	

};
inline jule::Bool _1a7b8c364_SubIdentExpr_eq(_1a7b8c364_SubIdentExpr *_self_, _1a7b8c364_SubIdentExpr _other_);


struct _1a7b8c81a_BinaryExpr {
	jule::Ptr<_1a7b89251_Expr> _field_Left;
	jule::Ptr<_1a7b89251_Expr> _field_Right;
	jule::Ptr<_1a7b69b05_Token> _field_Op;
	

};
inline jule::Bool _1a7b8c81a_BinaryExpr_eq(_1a7b8c81a_BinaryExpr *_self_, _1a7b8c81a_BinaryExpr _other_);


struct _1a7b8ce7a_FnCallExpr {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7b89251_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1a7b89251_Expr>> _field_Args;
	jule::Ptr<_1a7b94e3d_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo;
	

};
struct _1a7b8d970_FieldExprPair {
	jule::Ptr<_1a7b69b05_Token> _field_Field;
	jule::Ptr<_1a7b89251_Expr> _field_Expr;
	

};
inline jule::Bool _1a7b8d970_FieldExprPair_eq(_1a7b8d970_FieldExprPair *_self_, _1a7b8d970_FieldExprPair _other_);


struct _1a7b8e29a_StructLit {
	jule::Ptr<_1a7b69b05_Token> _field_End;
	jule::Ptr<_1a7b800b0_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a7b89251_Expr>> _field_Exprs;
	

};
struct _1a7b8e751_BraceLit {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7b69b05_Token> _field_End;
	jule::Slice<jule::Ptr<_1a7b89251_Expr>> _field_Exprs;
	

};
struct _1a7b9007b_KeyValPair {
	jule::Ptr<_1a7b89251_Expr> _field_Key;
	jule::Ptr<_1a7b89251_Expr> _field_Val;
	jule::Ptr<_1a7b69b05_Token> _field_Colon;
	

};
inline jule::Bool _1a7b9007b_KeyValPair_eq(_1a7b9007b_KeyValPair *_self_, _1a7b9007b_KeyValPair _other_);


struct _1a7b907a7_SliceExpr {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7b69b05_Token> _field_End;
	jule::Slice<jule::Ptr<_1a7b89251_Expr>> _field_Exprs;
	

};
struct _1a7b91214_IndexingExpr {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7b69b05_Token> _field_End;
	jule::Ptr<_1a7b89251_Expr> _field_Expr;
	jule::Ptr<_1a7b89251_Expr> _field_Index;
	

};
inline jule::Bool _1a7b91214_IndexingExpr_eq(_1a7b91214_IndexingExpr *_self_, _1a7b91214_IndexingExpr _other_);


struct _1a7b91874_SlicingExpr {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7b69b05_Token> _field_End;
	jule::Ptr<_1a7b89251_Expr> _field_Expr;
	jule::Ptr<_1a7b89251_Expr> _field_Start;
	jule::Ptr<_1a7b89251_Expr> _field_To;
	

};
inline jule::Bool _1a7b91874_SlicingExpr_eq(_1a7b91874_SlicingExpr *_self_, _1a7b91874_SlicingExpr _other_);


struct _1a7b91b71_Constraint {
	jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>> _field_Mask;
	

};
struct _1a7b92127_GenericDecl {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a7b91b71_Constraint> _field_Constraint;
	

};
inline jule::Bool _1a7b92127_GenericDecl_eq(_1a7b92127_GenericDecl *_self_, _1a7b92127_GenericDecl _other_);


struct _1a7b92501_LabelSt {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1a7b92501_LabelSt_eq(_1a7b92501_LabelSt *_self_, _1a7b92501_LabelSt _other_);


struct _1a7b928ca_GotoSt {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7b69b05_Token> _field_Label;
	

};
inline jule::Bool _1a7b928ca_GotoSt_eq(_1a7b928ca_GotoSt *_self_, _1a7b928ca_GotoSt _other_);


struct _1a7b92bc7_FallSt {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	

};
inline jule::Bool _1a7b92bc7_FallSt_eq(_1a7b92bc7_FallSt *_self_, _1a7b92bc7_FallSt _other_);


struct _1a7b93337_AssignLeft {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Str _field_Ident;
	jule::Ptr<_1a7b89251_Expr> _field_Expr;
	

};
inline jule::Bool _1a7b93337_AssignLeft_eq(_1a7b93337_AssignLeft *_self_, _1a7b93337_AssignLeft _other_);


struct _1a7b938ba_AssignSt {
	jule::Bool _field_Declarative;
	jule::Ptr<_1a7b69b05_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1a7b93337_AssignLeft>> _field_Left;
	jule::Ptr<_1a7b89251_Expr> _field_Right;
	

};
struct _1a7b947cd_Stmt {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Any _field_Data;
	

};
inline jule::Bool _1a7b947cd_Stmt_eq(_1a7b947cd_Stmt *_self_, _1a7b947cd_Stmt _other_);


struct _1a7b94e3d_ScopeTree {
	jule::Ptr<_1a7b94e3d_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<_1a7b947cd_Stmt> _field_Stmts;
	jule::Ptr<_1a7b69b05_Token> _field_End;
	

};
struct _1a7b9567a_ParamDecl {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1a7b800b0_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1a7b9567a_ParamDecl_eq(_1a7b9567a_ParamDecl *_self_, _1a7b9567a_ParamDecl _other_);


struct _1a7b96acc_FnDecl {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>> _field_Directives;
	jule::Ptr<_1a7b94e3d_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>> _field_Generics;
	jule::Ptr<_1a7b87d10_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1a7b9567a_ParamDecl>> _field_Params;
	

};
struct _1a7b97c87_VarDecl {
	jule::Ptr<_1a7b94e3d_ScopeTree> _field_Scope;
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7b69b05_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Bool _field_Constant;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>> _field_Directives;
	jule::Ptr<_1a7b800b0_TypeDecl> _field_Kind;
	jule::Ptr<_1a7b89251_Expr> _field_Expr;
	

};
struct _1a7b98161_RetSt {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7b89251_Expr> _field_Expr;
	

};
inline jule::Bool _1a7b98161_RetSt_eq(_1a7b98161_RetSt *_self_, _1a7b98161_RetSt _other_);


struct _1a7b988d1_Iter {
	jule::Bool _field_Comptime;
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Any _field_Kind;
	jule::Ptr<_1a7b94e3d_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1a7b988d1_Iter_eq(_1a7b988d1_Iter *_self_, _1a7b988d1_Iter _other_);


struct _1a7b9920b_WhileKind {
	jule::Ptr<_1a7b89251_Expr> _field_Expr;
	jule::Any _field_Next;
	jule::Ptr<_1a7b69b05_Token> _field_NextToken;
	

};
inline jule::Bool _1a7b9920b_WhileKind_eq(_1a7b9920b_WhileKind *_self_, _1a7b9920b_WhileKind _other_);


struct _1a7b99b13_RangeKind {
	jule::Ptr<_1a7b69b05_Token> _field_InToken;
	jule::Ptr<_1a7b89251_Expr> _field_Expr;
	jule::Ptr<_1a7b97c87_VarDecl> _field_KeyA;
	jule::Ptr<_1a7b97c87_VarDecl> _field_KeyB;
	

};
inline jule::Bool _1a7b99b13_RangeKind_eq(_1a7b99b13_RangeKind *_self_, _1a7b99b13_RangeKind _other_);


struct _1a7b99edc_BreakSt {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7b69b05_Token> _field_Label;
	

};
inline jule::Bool _1a7b99edc_BreakSt_eq(_1a7b99edc_BreakSt *_self_, _1a7b99edc_BreakSt _other_);


struct _1a7b9a3b6_ContSt {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7b69b05_Token> _field_Label;
	

};
inline jule::Bool _1a7b9a3b6_ContSt_eq(_1a7b9a3b6_ContSt *_self_, _1a7b9a3b6_ContSt _other_);


struct _1a7b9a86c_If {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7b89251_Expr> _field_Expr;
	jule::Ptr<_1a7b94e3d_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1a7b9a86c_If_eq(_1a7b9a86c_If *_self_, _1a7b9a86c_If _other_);


struct _1a7b9ac46_Else {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7b94e3d_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1a7b9ac46_Else_eq(_1a7b9ac46_Else *_self_, _1a7b9ac46_Else _other_);


struct _1a7b9b1ec_Conditional {
	jule::Ptr<_1a7b9a86c_If> _field_Head;
	jule::Slice<jule::Ptr<_1a7b9a86c_If>> _field_Tail;
	jule::Ptr<_1a7b9ac46_Else> _field_Default;
	

};
struct _1a7b9b939_TypeAliasDecl {
	jule::Ptr<_1a7b94e3d_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a7b800b0_TypeDecl> _field_Kind;
	

};
inline jule::Bool _1a7b9b939_TypeAliasDecl_eq(_1a7b9b939_TypeAliasDecl *_self_, _1a7b9b939_TypeAliasDecl _other_);


struct _1a7b9bde0_Case {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7b94e3d_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a7b89251_Expr>> _field_Exprs;
	

};
struct _1a7b9c709_MatchCase {
	jule::Bool _field_Comptime;
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7b69b05_Token> _field_End;
	jule::Bool _field_TypeMatch;
	jule::Ptr<_1a7b89251_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1a7b9bde0_Case>> _field_Cases;
	jule::Ptr<_1a7b9ac46_Else> _field_Default;
	

};
struct _1a7b9d023_UseDecl {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _field_Selected;
	jule::Bool _field_Binded;
	jule::Bool _field_Std;
	

};
struct _1a7b9d4c9_EnumItemDecl {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a7b89251_Expr> _field_Expr;
	

};
inline jule::Bool _1a7b9d4c9_EnumItemDecl_eq(_1a7b9d4c9_EnumItemDecl *_self_, _1a7b9d4c9_EnumItemDecl _other_);


struct _1a7b9e08a_EnumDecl {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1a7b800b0_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a7b9d4c9_EnumItemDecl>> _field_Items;
	jule::Ptr<_1a7b69b05_Token> _field_End;
	

};
struct _1a7b9e8b5_TypeEnumItemDecl {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a7b800b0_TypeDecl> _field_Kind;
	

};
inline jule::Bool _1a7b9e8b5_TypeEnumItemDecl_eq(_1a7b9e8b5_TypeEnumItemDecl *_self_, _1a7b9e8b5_TypeEnumItemDecl _other_);


struct _1a7ba0025_TypeEnumDecl {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a7b9e8b5_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1a7b69b05_Token> _field_End;
	

};
struct _1a7ba02de_FieldDecl {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1a7b800b0_TypeDecl> _field_Kind;
	jule::Ptr<_1a7b89251_Expr> _field_Default;
	

};
inline jule::Bool _1a7ba02de_FieldDecl_eq(_1a7ba02de_FieldDecl *_self_, _1a7ba02de_FieldDecl _other_);


struct _1a7ba0bd5_StructDecl {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7b69b05_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a7ba02de_FieldDecl>> _field_Fields;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>> _field_Generics;
	

};
struct _1a7ba1422_TraitDecl {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7b69b05_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1a7b96acc_FnDecl>> _field_Methods;
	

};
struct _1a7ba1a82_Impl {
	jule::Ptr<_1a7b69b05_Token> _field_End;
	jule::Ptr<_1a7b800b0_TypeDecl> _field_Base;
	jule::Ptr<_1a7b800b0_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1a7b96acc_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1a7b97c87_VarDecl>> _field_Statics;
	

};
struct _1a7ba2d80_Field {
	jule::Ptr<_1a7ba5ca6_Struct> _field_Owner;
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1a7d244a7_TypeSymbol> _field_Kind;
	jule::Ptr<_1a7b89251_Expr> _field_Default;
	

};
inline jule::Bool _1a7ba2d80_Field_eq(_1a7ba2d80_Field *_self_, _1a7ba2d80_Field _other_);


struct _1a7ba4d93_Operators {
	jule::Ptr<_1a7bbd8b2_FnIns> _field_Eq;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_Gt;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_GtEq;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_Lt;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_LtEq;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_Shl;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_Shr;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_Add;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_Sub;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_Div;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_Mul;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_Mod;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_BitAnd;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_BitOr;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_BitXor;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_Neg;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_Pos;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_BitNot;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_AddAssign;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_SubAssign;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_DivAssign;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_MulAssign;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_ModAssign;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_ShlAssign;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_ShrAssign;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_BitOrAssign;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_BitAndAssign;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_BitXorAssign;
	

};
inline jule::Bool _1a7ba4d93_Operators_eq(_1a7ba4d93_Operators *_self_, _1a7ba4d93_Operators _other_);


struct _1a7ba5ca6_Struct {
	jule::Ptr<_1a7c56c14_sema> _field_sema;
	jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>> _field_Uses;
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a7ba2d80_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1a7bba8d1_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a7c7b178_Var>> _field_Statics;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1a7bce362_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1a7ba8b11_StructIns>> _field_Instances;
	

};
struct _1a7ba8061_FieldIns {
	jule::Ptr<_1a7ba8b11_StructIns> _field_Owner;
	jule::Ptr<_1a7ba2d80_Field> _field_Decl;
	jule::Ptr<_1a7d1bc96_TypeKind> _field_Kind;
	jule::Ptr<_1a7cd41ae_Data> _field_Default;
	

};
inline jule::Bool _1a7ba8061_FieldIns_eq(_1a7ba8061_FieldIns *_self_, _1a7ba8061_FieldIns _other_);


struct _1a7ba8b11_StructIns {
	jule::Bool _field_Checked;
	jule::Ptr<_1a7ba5ca6_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1a7ba8061_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1a7c7b178_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1a7bba8d1_Fn>> _field_Methods;
	jule::Bool _field_Mutable;
	jule::Bool _field_Comparable;
	jule::Ptr<_1a7bc1a4c_ReferenceStack> _field_Refers;
	_1a7ba4d93_Operators _field_Operators;
	

};
struct _1a7bac928_OperandExprModel {
	jule::Ptr<_1a7d1bc96_TypeKind> _field_Kind;
	jule::Any _field_Model;
	

};
inline jule::Bool _1a7bac928_OperandExprModel_eq(_1a7bac928_OperandExprModel *_self_, _1a7bac928_OperandExprModel _other_);


struct _1a7bace23_BinaryExprModel {
	jule::Ptr<_1a7bac928_OperandExprModel> _field_Left;
	jule::Ptr<_1a7bac928_OperandExprModel> _field_Right;
	jule::Ptr<_1a7b69b05_Token> _field_Op;
	

};
inline jule::Bool _1a7bace23_BinaryExprModel_eq(_1a7bace23_BinaryExprModel *_self_, _1a7bace23_BinaryExprModel _other_);


struct _1a7bad2ec_UnaryExprModel {
	jule::Ptr<_1a7cd41ae_Data> _field_Expr;
	jule::Ptr<_1a7b69b05_Token> _field_Op;
	

};
inline jule::Bool _1a7bad2ec_UnaryExprModel_eq(_1a7bad2ec_UnaryExprModel *_self_, _1a7bad2ec_UnaryExprModel _other_);


struct _1a7bad82a_StructArgExprModel {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7ba8061_FieldIns> _field_Field;
	jule::Ptr<_1a7cd41ae_Data> _field_Expr;
	

};
inline jule::Bool _1a7bad82a_StructArgExprModel_eq(_1a7bad82a_StructArgExprModel *_self_, _1a7bad82a_StructArgExprModel _other_);


struct _1a7badbc1_StructLitExprModel {
	jule::Ptr<_1a7ba8b11_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1a7bad82a_StructArgExprModel>> _field_Args;
	

};
struct _1a7badebd_AllocStructLitExprModel {
	jule::Ptr<_1a7badbc1_StructLitExprModel> _field_Lit;
	

};
inline jule::Bool _1a7badebd_AllocStructLitExprModel_eq(_1a7badebd_AllocStructLitExprModel *_self_, _1a7badebd_AllocStructLitExprModel _other_);


struct _1a7bae551_CastingExprModel {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7cd41ae_Data> _field_Expr;
	jule::Ptr<_1a7d1bc96_TypeKind> _field_Kind;
	jule::Ptr<_1a7d1bc96_TypeKind> _field_ExprKind;
	

};
inline jule::Bool _1a7bae551_CastingExprModel_eq(_1a7bae551_CastingExprModel *_self_, _1a7bae551_CastingExprModel _other_);


struct _1a7baee03_FnCallExprModel {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_Func;
	jule::Bool _field_IsCo;
	jule::Any _field_Expr;
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1a7c1397e_Scope> _field_Except;
	jule::Bool _field_Assigned;
	

};
struct _1a7bb02cc_SliceExprModel {
	jule::Ptr<_1a7d1bc96_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	

};
struct _1a7bb0783_IndexingExprModel {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7cd41ae_Data> _field_Expr;
	jule::Ptr<_1a7cd41ae_Data> _field_Index;
	

};
inline jule::Bool _1a7bb0783_IndexingExprModel_eq(_1a7bb0783_IndexingExprModel *_self_, _1a7bb0783_IndexingExprModel _other_);


struct _1a7bb0c39_AnonFnExprModel {
	jule::Slice<jule::Ptr<_1a7c7b178_Var>> _field_Captured;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_Func;
	jule::Bool _field_Global;
	

};
struct _1a7bb1113_KeyValPairExprModel {
	jule::Any _field_Key;
	jule::Any _field_Val;
	

};
inline jule::Bool _1a7bb1113_KeyValPairExprModel_eq(_1a7bb1113_KeyValPairExprModel *_self_, _1a7bb1113_KeyValPairExprModel _other_);


struct _1a7bb14dc_MapExprModel {
	jule::Ptr<_1a7d2aa52_Map> _field_Kind;
	jule::Slice<jule::Ptr<_1a7bb1113_KeyValPairExprModel>> _field_Entries;
	

};
struct _1a7bb1a70_SlicingExprModel {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
	

};
inline jule::Bool _1a7bb1a70_SlicingExprModel_eq(_1a7bb1a70_SlicingExprModel *_self_, _1a7bb1a70_SlicingExprModel _other_);


struct _1a7bb2103_TraitSubIdentExprModel {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Ptr<_1a7bba8d1_Fn> _field_Method;
	jule::Ptr<_1a7bce362_Trait> _field_Trt;
	

};
inline jule::Bool _1a7bb2103_TraitSubIdentExprModel_eq(_1a7bb2103_TraitSubIdentExprModel *_self_, _1a7bb2103_TraitSubIdentExprModel _other_);


struct _1a7bb2994_StructSubIdentExprModel {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7cd41ae_Data> _field_Expr;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_Method;
	jule::Ptr<_1a7ba8061_FieldIns> _field_Field;
	jule::Ptr<_1a7ba8b11_StructIns> _field_Owner;
	

};
inline jule::Bool _1a7bb2994_StructSubIdentExprModel_eq(_1a7bb2994_StructSubIdentExprModel *_self_, _1a7bb2994_StructSubIdentExprModel _other_);


struct _1a7bb2d3a_StructStaticIdentExprModel {
	jule::Ptr<_1a7ba8b11_StructIns> _field_Structure;
	jule::Any _field_Expr;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_Method;
	

};
inline jule::Bool _1a7bb2d3a_StructStaticIdentExprModel_eq(_1a7bb2d3a_StructStaticIdentExprModel *_self_, _1a7bb2d3a_StructStaticIdentExprModel _other_);


struct _1a7bb3214_ArrayExprModel {
	jule::Ptr<_1a7d2b6ce_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	

};
struct _1a7bb3511_TupleExprModel {
	jule::Slice<jule::Ptr<_1a7cd41ae_Data>> _field_Datas;
	

};
struct _1a7bb38da_BuiltinOutCallExprModel {
	jule::Ptr<_1a7cd41ae_Data> _field_Expr;
	jule::Bool _field_Debug;
	

};
inline jule::Bool _1a7bb38da_BuiltinOutCallExprModel_eq(_1a7bb38da_BuiltinOutCallExprModel *_self_, _1a7bb38da_BuiltinOutCallExprModel _other_);


struct _1a7bb3cb4_BuiltinOutlnCallExprModel {
	jule::Ptr<_1a7cd41ae_Data> _field_Expr;
	jule::Bool _field_Debug;
	

};
inline jule::Bool _1a7bb3cb4_BuiltinOutlnCallExprModel_eq(_1a7bb3cb4_BuiltinOutlnCallExprModel *_self_, _1a7bb3cb4_BuiltinOutlnCallExprModel _other_);


struct _1a7bb418d_BuiltinNewCallExprModel {
	jule::Ptr<_1a7d1bc96_TypeKind> _field_Kind;
	jule::Any _field_Init;
	

};
inline jule::Bool _1a7bb418d_BuiltinNewCallExprModel_eq(_1a7bb418d_BuiltinNewCallExprModel *_self_, _1a7bb418d_BuiltinNewCallExprModel _other_);


struct _1a7bb4567_BuiltinPanicCallExprModel {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Any _field_Expr;
	

};
inline jule::Bool _1a7bb4567_BuiltinPanicCallExprModel_eq(_1a7bb4567_BuiltinPanicCallExprModel *_self_, _1a7bb4567_BuiltinPanicCallExprModel _other_);


struct _1a7bb4a1d_BuiltinAssertCallExprModel {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Str _field_Log;
	

};
inline jule::Bool _1a7bb4a1d_BuiltinAssertCallExprModel_eq(_1a7bb4a1d_BuiltinAssertCallExprModel *_self_, _1a7bb4a1d_BuiltinAssertCallExprModel _other_);


struct _1a7bb4ec4_BuiltinMakeCallExprModel {
	jule::Ptr<_1a7d1bc96_TypeKind> _field_Kind;
	jule::Any _field_Len;
	jule::Any _field_Cap;
	

};
inline jule::Bool _1a7bb4ec4_BuiltinMakeCallExprModel_eq(_1a7bb4ec4_BuiltinMakeCallExprModel *_self_, _1a7bb4ec4_BuiltinMakeCallExprModel _other_);


struct _1a7bb539d_BuiltinAppendCallExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Elements;
	

};
inline jule::Bool _1a7bb539d_BuiltinAppendCallExprModel_eq(_1a7bb539d_BuiltinAppendCallExprModel *_self_, _1a7bb539d_BuiltinAppendCallExprModel _other_);


struct _1a7bb569a_BuiltinLenCallExprModel {
	jule::Ptr<_1a7cd41ae_Data> _field_Expr;
	

};
inline jule::Bool _1a7bb569a_BuiltinLenCallExprModel_eq(_1a7bb569a_BuiltinLenCallExprModel *_self_, _1a7bb569a_BuiltinLenCallExprModel _other_);


struct _1a7bb5997_BuiltinCapCallExprModel {
	jule::Ptr<_1a7cd41ae_Data> _field_Expr;
	

};
inline jule::Bool _1a7bb5997_BuiltinCapCallExprModel_eq(_1a7bb5997_BuiltinCapCallExprModel *_self_, _1a7bb5997_BuiltinCapCallExprModel _other_);


struct _1a7bb5d71_BuiltinDeleteCallExprModel {
	jule::Ptr<_1a7cd41ae_Data> _field_Dest;
	jule::Ptr<_1a7cd41ae_Data> _field_Key;
	

};
inline jule::Bool _1a7bb5d71_BuiltinDeleteCallExprModel_eq(_1a7bb5d71_BuiltinDeleteCallExprModel *_self_, _1a7bb5d71_BuiltinDeleteCallExprModel _other_);


struct _1a7bb624a_BuiltinCopyCallExprModel {
	jule::Ptr<_1a7cd41ae_Data> _field_Dest;
	jule::Ptr<_1a7cd41ae_Data> _field_Src;
	

};
inline jule::Bool _1a7bb624a_BuiltinCopyCallExprModel_eq(_1a7bb624a_BuiltinCopyCallExprModel *_self_, _1a7bb624a_BuiltinCopyCallExprModel _other_);


struct _1a7bb6624_BuiltinErrorCallExprModel {
	jule::Ptr<_1a7bbd8b2_FnIns> _field_Func;
	jule::Ptr<_1a7cd41ae_Data> _field_Err;
	

};
inline jule::Bool _1a7bb6624_BuiltinErrorCallExprModel_eq(_1a7bb6624_BuiltinErrorCallExprModel *_self_, _1a7bb6624_BuiltinErrorCallExprModel _other_);


struct _1a7bb6cc8_SizeofExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1a7bb6cc8_SizeofExprModel_eq(_1a7bb6cc8_SizeofExprModel *_self_, _1a7bb6cc8_SizeofExprModel _other_);


struct _1a7bb6eb5_AlignofExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1a7bb6eb5_AlignofExprModel_eq(_1a7bb6eb5_AlignofExprModel *_self_, _1a7bb6eb5_AlignofExprModel _other_);


struct _1a7bb725c_RuneExprModel {
	jule::I32 _field_Code;
	

};
inline jule::Bool _1a7bb725c_RuneExprModel_eq(_1a7bb725c_RuneExprModel *_self_, _1a7bb725c_RuneExprModel _other_);


struct _1a7bb7636_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	

};
struct _1a7bb7933_FreeExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1a7bb7933_FreeExprModel_eq(_1a7bb7933_FreeExprModel *_self_, _1a7bb7933_FreeExprModel _other_);


struct _1a7bb86c0_RetType {
	jule::Ptr<_1a7d244a7_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _field_Idents;
	

};
struct _1a7bb8e0c_Param {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1a7d244a7_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1a7bb8e0c_Param_eq(_1a7bb8e0c_Param *_self_, _1a7bb8e0c_Param _other_);


struct _1a7bba8d1_Fn {
	jule::Ptr<_1a7c56c14_sema> _field_sema;
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>> _field_Directives;
	jule::Ptr<_1a7b94e3d_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>> _field_Generics;
	jule::Ptr<_1a7bb86c0_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1a7bb8e0c_Param>> _field_Params;
	jule::Ptr<_1a7ba5ca6_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1a7bbd8b2_FnIns>> _field_Instances;
	

};
struct _1a7bbc839_ParamIns {
	jule::Ptr<_1a7bb8e0c_Param> _field_Decl;
	jule::Ptr<_1a7d1bc96_TypeKind> _field_Kind;
	

};
inline jule::Bool _1a7bbc839_ParamIns_eq(_1a7bbc839_ParamIns *_self_, _1a7bbc839_ParamIns _other_);


struct _1a7bbd8b2_FnIns {
	jule::Ptr<_1a7ba8b11_StructIns> _field_Owner;
	jule::Ptr<_1a7bba8d1_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>> _field_Params;
	jule::Ptr<_1a7d1bc96_TypeKind> _field_Result;
	jule::Ptr<_1a7c1397e_Scope> _field_Scope;
	jule::Ptr<_1a7bc1a4c_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon;
	jule::Bool _field_AsAnon;
	jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*> _field_caller;
	jule::Bool _field_reloaded;
	

};
struct _1a7bc1a4c_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	

};
struct _1a7bc3059_Pass {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Str _field_Text;
	

};
inline jule::Bool _1a7bc3059_Pass_eq(_1a7bc3059_Pass *_self_, _1a7bc3059_Pass _other_);


struct _1a7bc7a0e_symbolBuilder {
	jule::Ptr<_1a7bc7a0e_symbolBuilder> _field_owner;
	jule::Trait _field_importer;
	jule::Slice<_1d9144ab5_Log> _field_errors;
	jule::Ptr<_1a7b7d19b_AST> _field_ast;
	jule::Ptr<_1a7ccd9e4_SymbolTable> _field_table;
	

};
struct _1a7bce362_Trait {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1a7d244a7_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1a7bba8d1_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>> _field_Implemented;
	

};
struct _1a7bd1001_EnumItem {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a7cd5336_Value> _field_Value;
	

};
inline jule::Bool _1a7bd1001_EnumItem_eq(_1a7bd1001_EnumItem *_self_, _1a7bd1001_EnumItem _other_);


struct _1a7bd1a6d_Enum {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1a7d244a7_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1a7bd1001_EnumItem>> _field_Items;
	

};
struct _1a7bd2ba1_TypeEnumItem {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a7d244a7_TypeSymbol> _field_Kind;
	

};
inline jule::Bool _1a7bd2ba1_TypeEnumItem_eq(_1a7bd2ba1_TypeEnumItem *_self_, _1a7bd2ba1_TypeEnumItem _other_);


struct _1a7bd3278_TypeEnum {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a7bd2ba1_TypeEnumItem>> _field_Items;
	

};
struct _1a7bd5ba4_comptimeRange {
	jule::Trait _field_kind;
	

};
inline jule::Bool _1a7bd5ba4_comptimeRange_eq(_1a7bd5ba4_comptimeRange *_self_, _1a7bd5ba4_comptimeRange _other_);


struct _1a7bd6710_comptimeStructField {
	jule::Ptr<_1a7ba8061_FieldIns> _field_field;
	

};
inline jule::Bool _1a7bd6710_comptimeStructField_eq(_1a7bd6710_comptimeStructField *_self_, _1a7bd6710_comptimeStructField _other_);


struct _1a7bd7ea3_comptimeStructFields {
	jule::Slice<jule::Ptr<_1a7ba8061_FieldIns>> _field_fields;
	

};
struct _1a7bd9933_comptimeStatic {
	jule::Ptr<_1a7c7b178_Var> _field_field;
	

};
inline jule::Bool _1a7bd9933_comptimeStatic_eq(_1a7bd9933_comptimeStatic *_self_, _1a7bd9933_comptimeStatic _other_);


struct _1a7bdb1d7_comptimeStatics {
	jule::Slice<jule::Ptr<_1a7c7b178_Var>> _field_fields;
	

};
struct _1a7bdcb56_comptimeEnumField {
	jule::Ptr<_1a7bd1001_EnumItem> _field_field;
	

};
inline jule::Bool _1a7bdcb56_comptimeEnumField_eq(_1a7bdcb56_comptimeEnumField *_self_, _1a7bdcb56_comptimeEnumField _other_);


struct _1a7bdde65_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1a7bd1001_EnumItem>> _field_fields;
	

};
struct _1a7be096c_comptimeParam {
	jule::Ptr<_1a7bbc839_ParamIns> _field_param;
	

};
inline jule::Bool _1a7be096c_comptimeParam_eq(_1a7be096c_comptimeParam *_self_, _1a7be096c_comptimeParam _other_);


struct _1a7be27c6_comptimeParams {
	jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>> _field_params;
	

};
struct _1a7be4135_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1a7be5aa4_comptimeTypeInfo>> _field_types;
	

};
struct _1a7be5aa4_comptimeTypeInfo {
	jule::Ptr<_1a7d1bc96_TypeKind> _field_base;
	

};
inline jule::Bool _1a7be5aa4_comptimeTypeInfo_eq(_1a7be5aa4_comptimeTypeInfo *_self_, _1a7be5aa4_comptimeTypeInfo _other_);


struct _1a7bebba9_comptimeValue {
	jule::Ptr<_1a7cd41ae_Data> _field_data;
	

};
inline jule::Bool _1a7bebba9_comptimeValue_eq(_1a7bebba9_comptimeValue *_self_, _1a7bebba9_comptimeValue _other_);


struct _1a7bee915_comptimeFiles {
	jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>> _field_files;
	

};
struct _1a7c01384_comptimeFile {
	jule::Ptr<_1a7ccd9e4_SymbolTable> _field_file;
	

};
inline jule::Bool _1a7c01384_comptimeFile_eq(_1a7c01384_comptimeFile *_self_, _1a7c01384_comptimeFile _other_);


struct _1a7c02eac_comptimeDecls {
	jule::Slice<jule::Ptr<_1a7c0529a_comptimeDecl>> _field_decls;
	

};
struct _1a7c0529a_comptimeDecl {
	jule::Any _field_decl;
	

};
inline jule::Bool _1a7c0529a_comptimeDecl_eq(_1a7c0529a_comptimeDecl *_self_, _1a7c0529a_comptimeDecl _other_);


struct _1a7c0bd51_constraintChecker {
	jule::Ptr<_1a7c56c14_sema> _field_s;
	jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>> _field_genericsA;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_fi;
	jule::Ptr<_1a7ba8b11_StructIns> _field_si;
	jule::Ptr<_1a7b69b05_Token> _field_et;
	jule::Bool _field_uniq;
	

};
struct _1a7c0e1a5_Impl {
	jule::Ptr<_1a7b800b0_TypeDecl> _field_Base;
	jule::Ptr<_1a7b800b0_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1a7bba8d1_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a7c7b178_Var>> _field_Statics;
	

};
struct _1a7c1397e_Scope {
	jule::Ptr<_1a7c1397e_Scope> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<jule::Any> _field_Stmts;
	jule::I64 _field_ChildIndex;
	jule::I64 _field_StmtIndex;
	

};
struct _1a7c13d9c_If {
	jule::Any _field_Expr;
	jule::Ptr<_1a7c1397e_Scope> _field_Scope;
	

};
inline jule::Bool _1a7c13d9c_If_eq(_1a7c13d9c_If *_self_, _1a7c13d9c_If _other_);


struct _1a7c14199_Else {
	jule::Ptr<_1a7c1397e_Scope> _field_Scope;
	

};
inline jule::Bool _1a7c14199_Else_eq(_1a7c14199_Else *_self_, _1a7c14199_Else _other_);


struct _1a7c145b7_Conditional {
	jule::Slice<jule::Ptr<_1a7c13d9c_If>> _field_Elifs;
	jule::Ptr<_1a7c14199_Else> _field_Default;
	

};
struct _1a7c148b4_InfIter {
	jule::Ptr<_1a7c1397e_Scope> _field_Scope;
	

};
inline jule::Bool _1a7c148b4_InfIter_eq(_1a7c148b4_InfIter *_self_, _1a7c148b4_InfIter _other_);


struct _1a7c14d6a_WhileIter {
	jule::Ptr<_1a7c1397e_Scope> _field_Scope;
	jule::Any _field_Expr;
	jule::Any _field_Next;
	

};
inline jule::Bool _1a7c14d6a_WhileIter_eq(_1a7c14d6a_WhileIter *_self_, _1a7c14d6a_WhileIter _other_);


struct _1a7c157b6_RangeIter {
	jule::Ptr<_1a7c1397e_Scope> _field_Scope;
	jule::Ptr<_1a7cd41ae_Data> _field_Expr;
	jule::Ptr<_1a7c7b178_Var> _field_KeyA;
	jule::Ptr<_1a7c7b178_Var> _field_KeyB;
	

};
inline jule::Bool _1a7c157b6_RangeIter_eq(_1a7c157b6_RangeIter *_self_, _1a7c157b6_RangeIter _other_);


struct _1a7c15b4b_ContSt {
	jule::Uintptr _field_It;
	

};
inline jule::Bool _1a7c15b4b_ContSt_eq(_1a7c15b4b_ContSt *_self_, _1a7c15b4b_ContSt _other_);


struct _1a7c16025_BreakSt {
	jule::Uintptr _field_It;
	jule::Uintptr _field_Mtch;
	

};
inline jule::Bool _1a7c16025_BreakSt_eq(_1a7c16025_BreakSt *_self_, _1a7c16025_BreakSt _other_);


struct _1a7c164cb_Label {
	jule::Str _field_Ident;
	jule::Ptr<_1a7c1397e_Scope> _field_Scope;
	jule::I64 _field_Index;
	

};
inline jule::Bool _1a7c164cb_Label_eq(_1a7c164cb_Label *_self_, _1a7c164cb_Label _other_);


struct _1a7c16b3b_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Ptr<_1a7c164cb_Label> _field_Label;
	jule::Ptr<_1a7c1397e_Scope> _field_Scope;
	jule::I64 _field_Index;
	

};
inline jule::Bool _1a7c16b3b_GotoSt_eq(_1a7c16b3b_GotoSt *_self_, _1a7c16b3b_GotoSt _other_);


struct _1a7c17015_Postfix {
	jule::Any _field_Expr;
	jule::Str _field_Op;
	

};
inline jule::Bool _1a7c17015_Postfix_eq(_1a7c17015_Postfix *_self_, _1a7c17015_Postfix _other_);


struct _1a7c174bb_Assign {
	jule::Ptr<_1a7bac928_OperandExprModel> _field_Left;
	jule::Ptr<_1a7bac928_OperandExprModel> _field_Right;
	jule::Ptr<_1a7b69b05_Token> _field_Op;
	

};
inline jule::Bool _1a7c174bb_Assign_eq(_1a7c174bb_Assign *_self_, _1a7c174bb_Assign _other_);


struct _1a7c17972_MultiAssign {
	jule::Slice<jule::Ptr<_1a7c7b178_Var>> _field_Decls;
	jule::Slice<jule::Ptr<_1a7cd41ae_Data>> _field_Left;
	jule::Any _field_Right;
	

};
struct _1a7c181ae_Match {
	jule::Ptr<_1a7c1397e_Scope> _field_Scope;
	jule::Ptr<_1a7cd41ae_Data> _field_Expr;
	jule::Bool _field_TypeMatch;
	jule::Bool _field_Comptime;
	jule::Slice<jule::Ptr<_1a7c18bd7_Case>> _field_Cases;
	jule::Ptr<_1a7c18bd7_Case> _field_Default;
	

};
struct _1a7c18bd7_Case {
	jule::Ptr<_1a7c181ae_Match> _field_Owner;
	jule::Ptr<_1a7c1397e_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1a7cd41ae_Data>> _field_Exprs;
	jule::Ptr<_1a7c18bd7_Case> _field_Next;
	

};
struct _1a7c193d0_FallSt {
	jule::Uintptr _field_DestCase;
	

};
inline jule::Bool _1a7c193d0_FallSt_eq(_1a7c193d0_FallSt *_self_, _1a7c193d0_FallSt _other_);


struct _1a7c19776_RetSt {
	jule::Ptr<_1a7bbd8b2_FnIns> _field_Func;
	jule::Any _field_Expr;
	

};
inline jule::Bool _1a7c19776_RetSt_eq(_1a7c19776_RetSt *_self_, _1a7c19776_RetSt _other_);


struct _1a7c19c2c_scopeLabel {
	jule::Ptr<_1a7b69b05_Token> _field_token;
	jule::Ptr<_1a7c164cb_Label> _field_node;
	jule::Bool _field_used;
	

};
inline jule::Bool _1a7c19c2c_scopeLabel_eq(_1a7c19c2c_scopeLabel *_self_, _1a7c19c2c_scopeLabel _other_);


struct _1a7c1ac1c_scopeChecker {
	jule::Ptr<_1a7b69b05_Token> _field_calledFrom;
	jule::Ptr<_1a7c56c14_sema> _field_s;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_owner;
	jule::Ptr<_1a7c1ac1c_scopeChecker> _field_parent;
	jule::I64 _field_childIndex;
	jule::Ptr<_1a7ccd9e4_SymbolTable> _field_table;
	jule::Ptr<_1a7c1397e_Scope> _field_scope;
	jule::Ptr<_1a7b94e3d_ScopeTree> _field_tree;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_result;
	jule::Uintptr _field_it;
	jule::Uintptr _field_cse;
	jule::Ptr<jule::Slice<jule::Ptr<_1a7c7b178_Var>>> _field_captured;
	jule::Ptr<jule::Slice<jule::Ptr<_1a7c19c2c_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1a7c16b3b_GotoSt>>> _field_gotos;
	jule::I64 _field_i;
	

};
inline jule::Bool _1a7c1ac1c_scopeChecker_eq(_1a7c1ac1c_scopeChecker *_self_, _1a7c1ac1c_scopeChecker _other_);


struct _1a7c2eba9_directiveChecker {
	jule::Ptr<_1a7c56c14_sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>> _field_d;
	jule::Any _field_o;
	

};
inline jule::Bool _1a7c2eba9_directiveChecker_eq(_1a7c2eba9_directiveChecker *_self_, _1a7c2eba9_directiveChecker _other_);


struct _1a7c36793_ImportInfo {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate;
	jule::Bool _field_Binded;
	jule::Bool _field_Std;
	jule::Bool _field_ImportAll;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _field_Selected;
	jule::Ptr<_1a7c396b9_Package> _field_Package;
	jule::I64 _field_ModId;
	

};
struct _1a7c396b9_Package {
	jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>> _field_Files;
	

};
struct _1a7c560dc_commonSemaMeta {
	jule::Slice<jule::Ptr<_1a7be5aa4_comptimeTypeInfo>> _field_comptimeTypeInfos;
	jule::Ptr<_1a7c36793_ImportInfo> _field_runtime;
	

};
struct _1a7c56c14_sema {
	jule::Slice<_1d9144ab5_Log> _field_errors;
	jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>> _field_files;
	jule::Ptr<_1a7ccd9e4_SymbolTable> _field_file;
	jule::I64 _field_flags;
	jule::Ptr<_1a7c560dc_commonSemaMeta> _field_meta;
	

};
struct _1a7c779c1_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled;
	

};
struct _1a7c7b178_Var {
	jule::Ptr<_1a7c1397e_Scope> _field_Scope;
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Constant;
	jule::Bool _field_Mutable;
	jule::Bool _field_Public;
	jule::Bool _field_Used;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Ptr<_1a7d244a7_TypeSymbol> _field_Kind;
	jule::Ptr<_1a7cd5336_Value> _field_Value;
	jule::Ptr<_1a7bc1a4c_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>> _field_Directives;
	jule::I64 _field_RetOrder;
	jule::Slice<jule::Ptr<_1a7c7b178_Var>> _field_Depends;
	

};
struct _1a7c7c212_FuncPattern {
	

};
struct _1a7cba948_typeCompatibilityChecker {
	jule::Ptr<_1a7c56c14_sema> _field_s;
	jule::Ptr<_1a7d1bc96_TypeKind> _field_dest;
	jule::Ptr<_1a7d1bc96_TypeKind> _field_src;
	jule::Ptr<_1a7b69b05_Token> _field_errorToken;
	

};
inline jule::Bool _1a7cba948_typeCompatibilityChecker_eq(_1a7cba948_typeCompatibilityChecker *_self_, _1a7cba948_typeCompatibilityChecker _other_);


struct _1a7cbc7c4_assignTypeChecker {
	jule::Ptr<_1a7c56c14_sema> _field_s;
	jule::Ptr<_1a7d1bc96_TypeKind> _field_dest;
	jule::Ptr<_1a7cd41ae_Data> _field_d;
	jule::Ptr<_1a7b69b05_Token> _field_errorToken;
	jule::Ptr<_1a7bc1a4c_ReferenceStack> _field_refers;
	

};
inline jule::Bool _1a7cbc7c4_assignTypeChecker_eq(_1a7cbc7c4_assignTypeChecker *_self_, _1a7cbc7c4_assignTypeChecker _other_);


struct _1a7cbe199_dynamicTypeAnnotation {
	jule::Ptr<_1a7cd5dd6_eval> _field_e;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_f;
	jule::Ptr<_1a7bbc839_ParamIns> _field_p;
	jule::Ptr<_1a7cd41ae_Data> _field_a;
	jule::Ptr<_1a7b69b05_Token> _field_errorToken;
	jule::Ptr<_1a7d1bc96_TypeKind>* _field_k;
	jule::Ptr<_1a7b800b0_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>> _field_ignored;
	

};
struct _1a7cc4006_fnCallArgChecker {
	jule::Ptr<_1a7cd5dd6_eval> _field_e;
	jule::Slice<jule::Ptr<_1a7b89251_Expr>> _field_args;
	jule::Ptr<_1a7b69b05_Token> _field_errorToken;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>> _field_ignored;
	

};
struct _1a7cc6e3d_structLitChecker {
	jule::Ptr<_1a7cd5dd6_eval> _field_e;
	jule::Ptr<_1a7b69b05_Token> _field_errorToken;
	jule::Ptr<_1a7ba8b11_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1a7bad82a_StructArgExprModel>> _field_args;
	

};
struct _1a7cc8c20_rangeChecker {
	jule::Ptr<_1a7c1ac1c_scopeChecker> _field_sc;
	jule::Ptr<_1a7b99b13_RangeKind> _field_rang;
	jule::Ptr<_1a7c157b6_RangeIter> _field_Kind;
	jule::Ptr<_1a7cd41ae_Data> _field_d;
	

};
inline jule::Bool _1a7cc8c20_rangeChecker_eq(_1a7cc8c20_rangeChecker *_self_, _1a7cc8c20_rangeChecker _other_);


struct _1a7ccb481_retTypeChecker {
	jule::Ptr<_1a7c1ac1c_scopeChecker> _field_sc;
	jule::Ptr<_1a7bbd8b2_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1a7b89251_Expr>> _field_exprs;
	jule::Ptr<_1a7b69b05_Token> _field_errorToken;
	jule::Any _field_model;
	

};
struct _1a7ccd9e4_SymbolTable {
	jule::Ptr<_1a7b7038b_File> _field_File;
	jule::Slice<_1a7bc3059_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1a7c36793_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1a7c7b178_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1a7bba8d1_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1a7bce362_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1a7bd1a6d_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1a7bd3278_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1a7c0e1a5_Impl>> _field_Impls;
	

};
struct _1a7cd41ae_Data {
	jule::Bool _field_untyped;
	jule::Ptr<_1a7d1bc96_TypeKind> _field_Kind;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Bool _field_Lvalue;
	jule::Bool _field_IsRune;
	jule::Any _field_Model;
	jule::Bool _field_Decl;
	jule::Ptr<_1c006a461_Const> _field_Constant;
	

};
inline jule::Bool _1a7cd41ae_Data_eq(_1a7cd41ae_Data *_self_, _1a7cd41ae_Data _other_);


struct _1a7cd5336_Value {
	jule::Ptr<_1a7b89251_Expr> _field_Expr;
	jule::Ptr<_1a7cd41ae_Data> _field_Data;
	

};
inline jule::Bool _1a7cd5336_Value_eq(_1a7cd5336_Value *_self_, _1a7cd5336_Value _other_);


struct _1a7cd5dd6_eval {
	jule::Ptr<_1a7c56c14_sema> _field_s;
	jule::Trait _field_lookup;
	jule::Ptr<_1a7d1bc96_TypeKind> _field_prefix;
	jule::Bool _field_unsafety;
	jule::Bool _field_immutable;
	jule::Bool _field_ignored;
	jule::Bool _field_disBuiltin;
	jule::Ptr<_1a7c7b178_Var> _field_owner;
	jule::Ptr<_1a7ba8061_FieldIns> _field_field;
	jule::Bool _field_arg;
	

};
inline jule::Bool _1a7cd5dd6_eval_eq(_1a7cd5dd6_eval *_self_, _1a7cd5dd6_eval _other_);


struct _1a7d0a03c_unaryEval {
	jule::Ptr<_1a7cd5dd6_eval> _field_e;
	jule::Ptr<_1a7cd41ae_Data> _field_d;
	jule::Ptr<_1a7b8b30d_UnaryExpr> _field_u;
	

};
inline jule::Bool _1a7d0a03c_unaryEval_eq(_1a7d0a03c_unaryEval *_self_, _1a7d0a03c_unaryEval _other_);


struct _1a7d0bec8_binaryEval {
	jule::Ptr<_1a7cd5dd6_eval> _field_e;
	jule::Ptr<_1a7cd41ae_Data> _field_l;
	jule::Ptr<_1a7cd41ae_Data> _field_r;
	jule::Ptr<_1a7b69b05_Token> _field_op;
	

};
inline jule::Bool _1a7d0bec8_binaryEval_eq(_1a7d0bec8_binaryEval *_self_, _1a7d0bec8_binaryEval _other_);


struct _1a7d1a3b0_InsGeneric {
	jule::Ptr<_1a7d1bc96_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>> _field_Constraint;
	

};
struct _1a7d1aea4_TypeAlias {
	jule::Ptr<_1a7b94e3d_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Used;
	jule::Bool _field_Generic;
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a7d244a7_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>> _field_Generics;
	

};
struct _1a7d1bc96_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic;
	jule::Bool _field_Variadic;
	jule::Trait _field_Kind;
	

};
inline jule::Bool _1a7d1bc96_TypeKind_eq(_1a7d1bc96_TypeKind *_self_, _1a7d1bc96_TypeKind _other_);


struct _1a7d244a7_TypeSymbol {
	jule::Ptr<_1a7b800b0_TypeDecl> _field_Decl;
	jule::Ptr<_1a7d1bc96_TypeKind> _field_Kind;
	

};
inline jule::Bool _1a7d244a7_TypeSymbol_eq(_1a7d244a7_TypeSymbol *_self_, _1a7d244a7_TypeSymbol _other_);


struct _1a7d24dae_Prim {
	jule::Str _field_Kind;
	

};
inline jule::Bool _1a7d24dae_Prim_eq(_1a7d24dae_Prim *_self_, _1a7d24dae_Prim _other_);


struct _1a7d288da_Sptr {
	jule::Ptr<_1a7d1bc96_TypeKind> _field_Elem;
	

};
inline jule::Bool _1a7d288da_Sptr_eq(_1a7d288da_Sptr *_self_, _1a7d288da_Sptr _other_);


struct _1a7d293ad_Slc {
	jule::Ptr<_1a7d1bc96_TypeKind> _field_Elem;
	

};
inline jule::Bool _1a7d293ad_Slc_eq(_1a7d293ad_Slc *_self_, _1a7d293ad_Slc _other_);


struct _1a7d29ea2_Tuple {
	jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>> _field_Types;
	

};
struct _1a7d2aa52_Map {
	jule::Ptr<_1a7d1bc96_TypeKind> _field_Key;
	jule::Ptr<_1a7d1bc96_TypeKind> _field_Val;
	

};
inline jule::Bool _1a7d2aa52_Map_eq(_1a7d2aa52_Map *_self_, _1a7d2aa52_Map _other_);


struct _1a7d2b6ce_Arr {
	jule::Bool _field_Auto;
	jule::I64 _field_N;
	jule::Ptr<_1a7d1bc96_TypeKind> _field_Elem;
	

};
inline jule::Bool _1a7d2b6ce_Arr_eq(_1a7d2b6ce_Arr *_self_, _1a7d2b6ce_Arr _other_);


struct _1a7d2c1a2_Ptr {
	jule::Ptr<_1a7d1bc96_TypeKind> _field_Elem;
	

};
inline jule::Bool _1a7d2c1a2_Ptr_eq(_1a7d2c1a2_Ptr *_self_, _1a7d2c1a2_Ptr _other_);


struct _1a7d2d1a3_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs;
	

};
inline jule::Bool _1a7d2d1a3_referencer_eq(_1a7d2d1a3_referencer *_self_, _1a7d2d1a3_referencer _other_);


struct _1a7d2e193_typeChecker {
	jule::Ptr<_1a7c56c14_sema> _field_s;
	jule::Trait _field_rootLookup;
	jule::Trait _field_lookup;
	jule::Ptr<_1a7d2d1a3_referencer> _field_referencer;
	jule::Ptr<_1a7bc1a4c_ReferenceStack> _field_refers;
	jule::Ptr<_1a7b69b05_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>* _field_ignoredGenerics;
	jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk;
	jule::Bool _field_disBuiltin;
	jule::Bool _field_selection;
	jule::Ptr<_1a7d1aea4_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch;
	

};
struct _1a7d37256_identTypeLookup {
	

};
inline jule::Bool _1a7d37256_identTypeLookup_eq(_1a7d37256_identTypeLookup *_self_, _1a7d37256_identTypeLookup _other_);


struct _1a879690c_FileInfo {
	jule::Ptr<_1a7b7d19b_AST> _field_Ast;
	jule::Slice<_1d9144ab5_Log> _field_Errors;
	

};
struct _1a87ded0c_stmt {
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _field_tokens;
	jule::Bool _field_terminated;
	

};
struct _1a87e069d_scopeParser {
	jule::Ptr<_1a880dc2c_parser> _field_p;
	jule::Ptr<_1a7b94e3d_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1a87ded0c_stmt>> _field_stmts;
	jule::I64 _field_pos;
	

};
struct _1a87ed117_exprBuilder {
	jule::Ptr<_1a880dc2c_parser> _field_p;
	

};
inline jule::Bool _1a87ed117_exprBuilder_eq(_1a87ed117_exprBuilder *_self_, _1a87ed117_exprBuilder _other_);


struct _1a880a82d_assignInfo {
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _field_l;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _field_r;
	jule::Ptr<_1a7b69b05_Token> _field_setter;
	jule::Bool _field_ok;
	

};
struct _1a880dc2c_parser {
	jule::Ptr<_1a7b7d19b_AST> _field_ast;
	jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>> _field_directives;
	jule::Slice<_1d9144ab5_Log> _field_errors;
	jule::Ptr<_1a87ed117_exprBuilder> _field_ep;
	

};
struct _1a8820d4e_typeBuilder {
	jule::Ptr<_1a880dc2c_parser> _field_p;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _field_tokens;
	jule::I64* _field_i;
	jule::Bool _field_err;
	

};
struct _1a804ce2d_CompileInfo {
	jule::Bool _field_Prod;
	jule::Bool _field_Test;
	jule::Bool _field_AtomicRC;
	jule::Str _field_Compiler;
	jule::Str _field_CppStd;
	

};
inline jule::Bool _1a804ce2d_CompileInfo_eq(_1a804ce2d_CompileInfo *_self_, _1a804ce2d_CompileInfo _other_);


struct _1a804e407_directiveEval {
	jule::Slice<_1d9144ab5_Log> _field_logs;
	jule::Ptr<_1a7b7e4cc_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	

};
struct _1a8824e85_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1a7c36793_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	

};
struct _1a882b992_ExprInspector {
	jule::Bool _field_SkipChild;
	jule::Fn<void,jule::Any*> _field_handler;
	

};
struct _1a8832eb5_OrderedDefines {
	jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1a7c7b178_Var>> _field_Globals;
	

};
struct _1a896be89_specialCaseDefines {
	jule::Ptr<_1a7ba5ca6_Struct> _field_runtime_Map;
	jule::Ptr<_1a7ba5ca6_Struct> _field_runtime_mapIterator;
	

};
inline jule::Bool _1a896be89_specialCaseDefines_eq(_1a896be89_specialCaseDefines *_self_, _1a896be89_specialCaseDefines _other_);


struct _1a896c8a2_liveTable {
	jule::Slice<jule::Ptr<_1a7c7b178_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1a7bbd8b2_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1a7ba8b11_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1a7bce362_Trait>> _field_traits;
	

};
struct _1a896cd58_ObjectDeadCode {
	_1a896c8a2_liveTable _field_live;
	jule::Ptr<_1a882795a_IR> _field_ir;
	_1a896be89_specialCaseDefines _field_scd;
	

};
struct _1a8971e7d_scopeDeadCode {
	jule::Ptr<_1a8971e7d_scopeDeadCode> _field_parent;
	jule::Ptr<_1a7c1397e_Scope> _field_s;
	jule::I64 _field_i;
	jule::Ptr<jule::Slice<jule::Ptr<_1a7c164cb_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1a7c16b3b_GotoSt>>> _field_gotos;
	jule::Bool _field_except;
	

};
inline jule::Bool _1a8971e7d_scopeDeadCode_eq(_1a8971e7d_scopeDeadCode *_self_, _1a8971e7d_scopeDeadCode _other_);


struct _1a8976625_exprDeadCode {
	jule::Ptr<_1a8971e7d_scopeDeadCode> _field_s;
	

};
inline jule::Bool _1a8976625_exprDeadCode_eq(_1a8976625_exprDeadCode *_self_, _1a8976625_exprDeadCode _other_);


struct _1a7e125d9_ExceptionalForwardingExprModel {
	jule::Ptr<_1a7baee03_FnCallExprModel> _field_Expr;
	

};
inline jule::Bool _1a7e125d9_ExceptionalForwardingExprModel_eq(_1a7e125d9_ExceptionalForwardingExprModel *_self_, _1a7e125d9_ExceptionalForwardingExprModel _other_);


struct _1a7e1296e_SwapExprModel {
	jule::Ptr<_1a7cd41ae_Data> _field_Left;
	jule::Ptr<_1a7cd41ae_Data> _field_Right;
	

};
inline jule::Bool _1a7e1296e_SwapExprModel_eq(_1a7e1296e_SwapExprModel *_self_, _1a7e1296e_SwapExprModel _other_);


struct _1a7e12d48_EmptyCompareExprModel {
	jule::Any _field_Expr;
	jule::Bool _field_Neg;
	

};
inline jule::Bool _1a7e12d48_EmptyCompareExprModel_eq(_1a7e12d48_EmptyCompareExprModel *_self_, _1a7e12d48_EmptyCompareExprModel _other_);


struct _1a7e131bc_RefExprModel {
	jule::Ptr<_1a7c7b178_Var> _field_Var;
	

};
inline jule::Bool _1a7e131bc_RefExprModel_eq(_1a7e131bc_RefExprModel *_self_, _1a7e131bc_RefExprModel _other_);


struct _1a7e13640_StrCompExprModel {
	jule::Any _field_Left;
	jule::Ptr<_1c006a461_Const> _field_Right;
	jule::Bool _field_NotEq;
	

};
inline jule::Bool _1a7e13640_StrCompExprModel_eq(_1a7e13640_StrCompExprModel *_self_, _1a7e13640_StrCompExprModel _other_);


struct _1a7e13bc3_MutSlicingExprModel {
	jule::Ptr<_1a7b69b05_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
	

};
inline jule::Bool _1a7e13bc3_MutSlicingExprModel_eq(_1a7e13bc3_MutSlicingExprModel *_self_, _1a7e13bc3_MutSlicingExprModel _other_);


struct _1a7e13ec0_UnsafeBinaryExprModel {
	jule::Ptr<_1a7bace23_BinaryExprModel> _field_Node;
	

};
inline jule::Bool _1a7e13ec0_UnsafeBinaryExprModel_eq(_1a7e13ec0_UnsafeBinaryExprModel *_self_, _1a7e13ec0_UnsafeBinaryExprModel _other_);


struct _1a7e14355_UnsafeIndexingExprModel {
	jule::Ptr<_1a7bb0783_IndexingExprModel> _field_Node;
	

};
inline jule::Bool _1a7e14355_UnsafeIndexingExprModel_eq(_1a7e14355_UnsafeIndexingExprModel *_self_, _1a7e14355_UnsafeIndexingExprModel _other_);


struct _1a7e1472e_PushToSliceExprModel {
	jule::Any _field_Dest;
	jule::Ptr<_1a7bb02cc_SliceExprModel> _field_Elems;
	

};
inline jule::Bool _1a7e1472e_PushToSliceExprModel_eq(_1a7e1472e_PushToSliceExprModel *_self_, _1a7e1472e_PushToSliceExprModel _other_);


struct _1a7e14b08_AppendToSliceExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Slice;
	

};
inline jule::Bool _1a7e14b08_AppendToSliceExprModel_eq(_1a7e14b08_AppendToSliceExprModel *_self_, _1a7e14b08_AppendToSliceExprModel _other_);


struct _1a7e14ed2_StrRuneIter {
	jule::Ptr<_1a7cd41ae_Data> _field_Expr;
	jule::Ptr<_1a7c157b6_RangeIter> _field_Base;
	

};
inline jule::Bool _1a7e14ed2_StrRuneIter_eq(_1a7e14ed2_StrRuneIter *_self_, _1a7e14ed2_StrRuneIter _other_);


struct _1a7e152ce_UnsafeDerefExprModel {
	jule::Ptr<_1a7bad2ec_UnaryExprModel> _field_Base;
	

};
inline jule::Bool _1a7e152ce_UnsafeDerefExprModel_eq(_1a7e152ce_UnsafeDerefExprModel *_self_, _1a7e152ce_UnsafeDerefExprModel _other_);


struct _1a7e155cb_UnsafeCastingExprModel {
	jule::Ptr<_1a7bae551_CastingExprModel> _field_Base;
	

};
inline jule::Bool _1a7e155cb_UnsafeCastingExprModel_eq(_1a7e155cb_UnsafeCastingExprModel *_self_, _1a7e155cb_UnsafeCastingExprModel _other_);


struct _1a7e162ad_nilVar {
	jule::Uintptr _field_var;
	jule::Bool _field_safe;
	

};
inline jule::Bool _1a7e162ad_nilVar_eq(_1a7e162ad_nilVar *_self_, _1a7e162ad_nilVar _other_);


struct _1a7e165ee_nils {
	jule::Slice<_1a7e162ad_nilVar> _field_vars;
	

};
struct _1a8834769_scopeOptimizer {
	jule::Ptr<_1a8834769_scopeOptimizer> _field_parent;
	jule::I64 _field_i;
	jule::Ptr<_1a7c1397e_Scope> _field_scope;
	jule::Ptr<_1a884457b_data> _field_data;
	

};
inline jule::Bool _1a8834769_scopeOptimizer_eq(_1a8834769_scopeOptimizer *_self_, _1a8834769_scopeOptimizer _other_);


struct _1a883b1bb_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_1a884457b_data> _field_data;
	jule::Ptr<_1a882b992_ExprInspector> _field_inspector;
	

};
inline jule::Bool _1a883b1bb_exprOptimizer_eq(_1a883b1bb_exprOptimizer *_self_, _1a883b1bb_exprOptimizer _other_);


struct _1a88415ab_dynamicVar {
	jule::Uintptr _field_var;
	jule::Ptr<_1a7d1bc96_TypeKind> _field_kind;
	

};
inline jule::Bool _1a88415ab_dynamicVar_eq(_1a88415ab_dynamicVar *_self_, _1a88415ab_dynamicVar _other_);


struct _1a88418ec_dynamic {
	jule::Slice<_1a88415ab_dynamicVar> _field_vars;
	

};
struct _1a884457b_data {
	jule::Ptr<_1a8845e73_boundary> _field_boundary;
	jule::Ptr<_1a7e165ee_nils> _field_nils;
	jule::Ptr<_1a88418ec_dynamic> _field_dynamic;
	

};
inline jule::Bool _1a884457b_data_eq(_1a884457b_data *_self_, _1a884457b_data _other_);


struct _1a8845b32_boundaryVar {
	jule::Uintptr _field_var;
	jule::Slice<jule::Any> _field_maxSize;
	

};
struct _1a8845e73_boundary {
	jule::Slice<_1a8845b32_boundaryVar> _field_vars;
	

};
struct _1a8977747_Optimizer {
	jule::Ptr<_1a882795a_IR> _field_ir;
	

};
inline jule::Bool _1a8977747_Optimizer_eq(_1a8977747_Optimizer *_self_, _1a8977747_Optimizer _other_);


struct _1a899dae2_AnsiEscape {
	

};
inline jule::Bool _1a899dae2_AnsiEscape_eq(_1a899dae2_AnsiEscape *_self_, _1a899dae2_AnsiEscape _other_);


struct _1a89a0198_Logger {
	

};
inline jule::Bool _1a89a0198_Logger_eq(_1a89a0198_Logger *_self_, _1a89a0198_Logger _other_);


struct _1a968806c_AbsTime {
	jule::U64 _field_Day;
	jule::U64 _field_WeekDay;
	jule::U64 _field_YearDay;
	jule::U64 _field_Month;
	jule::U64 _field_Year;
	jule::U64 _field_Second;
	jule::U64 _field_Minute;
	jule::U64 _field_Hour;
	

};
inline jule::Bool _1a968806c_AbsTime_eq(_1a968806c_AbsTime *_self_, _1a968806c_AbsTime _other_);


struct _1a9688743_Time {
	jule::U64 _field_sec;
	

};
inline jule::Bool _1a9688743_Time_eq(_1a9688743_Time *_self_, _1a9688743_Time _other_);


struct _1a95aebec_scopeCoder {
	jule::Ptr<_1a9694078_ObjectCoder> _field_oc;
	

};
inline jule::Bool _1a95aebec_scopeCoder_eq(_1a95aebec_scopeCoder *_self_, _1a95aebec_scopeCoder _other_);


struct _1a95bb4cd_exprCoder {
	jule::Ptr<_1a9694078_ObjectCoder> _field_oc;
	jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1a7c7b178_Var>>> _field_varPrefixes;
	

};
struct _1a95ce03a_TestCoder {
	jule::Ptr<_1a7ba8b11_StructIns> _field_t;
	jule::Ptr<_1a7bba8d1_Fn> _field_tmReset;
	jule::Ptr<_1a7bba8d1_Fn> _field_tmFailed;
	jule::Ptr<_1a7bba8d1_Fn> _field_tmSkipped;
	jule::Ptr<_1a9694078_ObjectCoder> _field_oc;
	

};
inline jule::Bool _1a95ce03a_TestCoder_eq(_1a95ce03a_TestCoder *_self_, _1a95ce03a_TestCoder _other_);


struct _1a95d1eb6_identCoder {
	

};
inline jule::Bool _1a95d1eb6_identCoder_eq(_1a95d1eb6_identCoder *_self_, _1a95d1eb6_identCoder _other_);


struct _1a96922c9_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

};
inline jule::Bool _1a96922c9_SerializationInfo_eq(_1a96922c9_SerializationInfo *_self_, _1a96922c9_SerializationInfo _other_);


struct _1a96926e7_traitCast {
	jule::Ptr<_1a7bce362_Trait> _field_t1;
	jule::Ptr<_1a7bce362_Trait> _field_t2;
	

};
inline jule::Bool _1a96926e7_traitCast_eq(_1a96926e7_traitCast *_self_, _1a96926e7_traitCast _other_);


struct _1a9692ac1_anonHash {
	jule::Ptr<_1a7bb0c39_AnonFnExprModel> _field_expr;
	jule::Str _field_ident;
	

};
inline jule::Bool _1a9692ac1_anonHash_eq(_1a9692ac1_anonHash *_self_, _1a9692ac1_anonHash _other_);


struct _1a9694078_ObjectCoder {
	_1daed18b7_StrBuilder _field_Buf;
	_1daed18b7_StrBuilder _field_resultDecls;
	_1daed18b7_StrBuilder _field_anyObj;
	_1daed18b7_StrBuilder _field_anonObj;
	_1daed18b7_StrBuilder _field_deallocObj;
	jule::Ptr<_1a882795a_IR> _field_ir;
	_1a96922c9_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1a9692ac1_anonHash>> _field_anons;
	jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>> _field_deallocated;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Ptr<_1acba2c26__Map> _field_resultMap;
	jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1a96926e7_traitCast> _field_traitCastMap;
	jule::Ptr<_1acbed59b__Map> _field_traitMetMap;
	jule::Ptr<_1a95bb4cd_exprCoder> _field_ec;
	jule::Ptr<_1a95aebec_scopeCoder> _field_sc;
	jule::Ptr<_1a96a3a38_typeCoder> _field_tc;
	jule::I64 _field_headPos;
	jule::I64 _field_declPos;
	jule::I64 _field_wrapPos;
	

};
struct _1a96a2e00_customType {
	jule::Str _field_kind;
	

};
inline jule::Bool _1a96a2e00_customType_eq(_1a96a2e00_customType *_self_, _1a96a2e00_customType _other_);


struct _1a96a3a38_typeCoder {
	jule::Ptr<_1a9694078_ObjectCoder> _field_oc;
	jule::Ptr<_1a96ab623_resultCoder> _field_rc;
	

};
inline jule::Bool _1a96a3a38_typeCoder_eq(_1a96a3a38_typeCoder *_self_, _1a96a3a38_typeCoder _other_);


struct _1a96ab623_resultCoder {
	jule::Ptr<_1a96a3a38_typeCoder> _field_tc;
	

};
inline jule::Bool _1a96ab623_resultCoder_eq(_1a96ab623_resultCoder *_self_, _1a96ab623_resultCoder _other_);


struct _1ad3818cc_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::I64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

};
inline jule::Bool _1ad3818cc_Flag_eq(_1ad3818cc_Flag *_self_, _1ad3818cc_Flag _other_);

struct _1ad3851e9_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::U64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

};
inline jule::Bool _1ad3851e9_Flag_eq(_1ad3851e9_Flag *_self_, _1ad3851e9_Flag _other_);

struct _1ad388906_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::F64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

};
inline jule::Bool _1ad388906_Flag_eq(_1ad388906_Flag *_self_, _1ad388906_Flag _other_);

struct _1ad38c157_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Bool _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

};
inline jule::Bool _1ad38c157_Flag_eq(_1ad38c157_Flag *_self_, _1ad38c157_Flag _other_);

struct _1ad390864_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

};
inline jule::Bool _1ad390864_Flag_eq(_1ad390864_Flag *_self_, _1ad390864_Flag _other_);


struct _1a97276b1_FlagSet {
	jule::Slice<jule::Trait> _field_flags;
	

};
struct _1a972a175_argParser {
	_1a97276b1_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i;
	

};
struct _1a882795a_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1a7c396b9_Package> _field_Main;
	jule::Ptr<_1a7c36793_ImportInfo> _field_Runtime;
	jule::Slice<jule::Ptr<_1a7c36793_ImportInfo>> _field_Used;
	_1a8832eb5_OrderedDefines _field_Ordered;
	

};
struct _1a8844081_dataCheckpoint {
	_1a8845e73_boundary _field_boundary;
	_1a7e165ee_nils _field_nils;
	_1a88418ec_dynamic _field_dynamic;
	

};
struct _1d92015cd_Cmd {
	_1d92555aa_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	

};
struct __jule_tuple_pstr__jule_tuple_pbool {
	jule::Str* __jule_result_arg0;
	jule::Bool* __jule_result_arg1;
};
struct __jule_tuple_px_1a7bbd8b2_FnIns__jule_tuple_psuintptr {
	jule::Ptr<_1a7bbd8b2_FnIns>* __jule_result_arg0;
	jule::Slice<jule::Uintptr>* __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a7cd41ae_Data__jule_tuple_x_1a7cd41ae_Data {
	jule::Ptr<_1a7cd41ae_Data> __jule_result_arg0;
	jule::Ptr<_1a7cd41ae_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1a7cd41ae_Data__jule_tuple_bool {
	jule::Ptr<_1a7cd41ae_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a7b89251_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1a7b89251_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a7b9bde0_Case__jule_tuple_bool {
	jule::Ptr<_1a7b9bde0_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a7b9bde0_Case__jule_tuple_x_1a7b9ac46_Else {
	jule::Slice<jule::Ptr<_1a7b9bde0_Case>> __jule_result_arg0;
	jule::Ptr<_1a7b9ac46_Else> __jule_result_arg1;
};
struct __jule_tuple__1a7b9457a_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a7b938ba_AssignSt__jule_tuple_bool {
	jule::Ptr<_1a7b938ba_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1a7b800b0_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a7b87d10_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1a7b87d10_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a7b7d19b_AST__jule_tuple_s_1d9144ab5_Log {
	jule::Slice<jule::Ptr<_1a7b7d19b_AST>> __jule_result_arg0;
	jule::Slice<_1d9144ab5_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1d9144ab5_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1d9144ab5_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a7bbd8b2_FnIns__jule_tuple_bool {
	jule::Ptr<_1a7bbd8b2_FnIns> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a882795a_IR__jule_tuple_s_1d9144ab5_Log {
	jule::Ptr<_1a882795a_IR> __jule_result_arg0;
	jule::Slice<_1d9144ab5_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_i8 {
	jule::U64 __jule_result_arg0;
	jule::I8 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1d9497d80_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1d9497d80_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1d9497d80_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1d9497d80_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a7ccd9e4_SymbolTable__jule_tuple_s_1d9144ab5_Log {
	jule::Ptr<_1a7ccd9e4_SymbolTable> __jule_result_arg0;
	jule::Slice<_1d9144ab5_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a7c396b9_Package__jule_tuple_s_1d9144ab5_Log {
	jule::Ptr<_1a7c396b9_Package> __jule_result_arg0;
	jule::Slice<_1d9144ab5_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a7b7d19b_AST__jule_tuple_s_1d9144ab5_Log {
	jule::Ptr<_1a7b7d19b_AST> __jule_result_arg0;
	jule::Slice<_1d9144ab5_Log> __jule_result_arg1;
};
struct __jule_tuple_sx_1a7b69b05_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a7b69b05_Token__jule_tuple_sx_1a7b69b05_Token {
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1a7b69b05_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1a7b69b05_Token__jule_tuple_s_1d9144ab5_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> __jule_result_arg0;
	jule::Slice<_1d9144ab5_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline jule::U32 static__1d80b91cd_DecodeU32(jule::Slice<jule::U8> _4522_b);
inline jule::U64 static__1d80b9a6e_DecodeU64(jule::Slice<jule::U8> _7522_b);
inline jule::Ptr<_1acba2c26__Map> static__1acba32dc_make(void);
inline void _1acba3441_initData(_1acba2c26__Map* _self_, jule::I64 _13524_cap);
inline jule::U64 _1acba3595_hash(_1acba2c26__Map* _self_, jule::Str _14616_k);
inline void _1acba36e9_rehash(_1acba2c26__Map* _self_, jule::I64 _15122_n);
inline jule::I64 _1acba384d_nextSize(_1acba2c26__Map* _self_);
inline void _1acba39a2_lookup(jule::Ptr<_1acba2c26__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok);
inline jule::Bool _1acba3b06_get(jule::Ptr<_1acba2c26__Map> _self_, jule::Str _23024_k);
inline jule::Bool* _1acba3c5a_set(_1acba2c26__Map* _self_, jule::Str _24123_k);
inline jule::Bool _1acba3dae_del(jule::Ptr<_1acba2c26__Map> _self_, jule::Str _27624_k);
inline void _1acba4013_clear(jule::Ptr<_1acba2c26__Map> _self_);
inline jule::I64 _1acba4167_len(jule::Ptr<_1acba2c26__Map> _self_);
inline jule::I64 _1acba42bb_cap(_1acba2c26__Map* _self_);
inline _1acbae4a2_mapIterator _1acba4420_iterator(jule::Ptr<_1acba2c26__Map> _self_);
inline jule::Ptr<_1acbed59b__Map> static__1acbedab8_make(void);
inline void _1acbedc1c_initData(_1acbed59b__Map* _self_, jule::I64 _13524_cap);
inline jule::U64 _1acbedd71_hash(_1acbed59b__Map* _self_, jule::Ptr<_1a7bbd8b2_FnIns> _14616_k);
inline void _1acbedec5_rehash(_1acbed59b__Map* _self_, jule::I64 _15122_n);
inline jule::I64 _1acbee129_nextSize(_1acbed59b__Map* _self_);
inline void _1acbee27d_lookup(jule::Ptr<_1acbed59b__Map> _self_, jule::Ptr<_1a7bbd8b2_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok);
inline jule::Slice<jule::Uintptr> _1acbee3d2_get(jule::Ptr<_1acbed59b__Map> _self_, jule::Ptr<_1a7bbd8b2_FnIns> _23024_k);
inline jule::Slice<jule::Uintptr>* _1acbee536_set(_1acbed59b__Map* _self_, jule::Ptr<_1a7bbd8b2_FnIns> _24123_k);
inline jule::Bool _1acbee68a_del(jule::Ptr<_1acbed59b__Map> _self_, jule::Ptr<_1a7bbd8b2_FnIns> _27624_k);
inline void _1acbee7de_clear(jule::Ptr<_1acbed59b__Map> _self_);
inline jule::I64 _1acbee943_len(jule::Ptr<_1acbed59b__Map> _self_);
inline jule::I64 _1acbeea97_cap(_1acbed59b__Map* _self_);
inline _1acc07b7c_mapIterator _1acbeebeb_iterator(jule::Ptr<_1acbed59b__Map> _self_);
inline void _1acbaea35_init(_1acbae4a2_mapIterator* _self_);
inline __jule_tuple_pstr__jule_tuple_pbool _1acbaeb89_next(_1acbae4a2_mapIterator* _self_);
inline void _1acc08210_init(_1acc07b7c_mapIterator* _self_);
inline __jule_tuple_px_1a7bbd8b2_FnIns__jule_tuple_psuintptr _1acc08364_next(_1acc07b7c_mapIterator* _self_);
inline _1daed18b7_StrBuilder static__1daed1bb4_New(jule::I64 _1516_cap);
inline void _1daeda409_Write(_1daed18b7_StrBuilder* _self_, jule::Slice<jule::U8> _2521_b);
inline void _1daeda6b2_WriteStr(_1daed18b7_StrBuilder* _self_, jule::Str _3024_s);
inline void _1daeda96a_WriteByte(_1daed18b7_StrBuilder* _self_, jule::U8 _3525_b);
inline jule::Str _1daedaea9_Str(_1daed18b7_StrBuilder* _self_);
inline void _1daedb1a7_Clear(_1daed18b7_StrBuilder* _self_);
inline jule::I64 _1daedb43d_Len(_1daed18b7_StrBuilder* _self_);
inline jule::Slice<jule::U8> _1daedb95a_Buf(_1daed18b7_StrBuilder* _self_);
inline void _1daedbc13_SetBuf(_1daed18b7_StrBuilder* _self_, jule::Slice<jule::U8> _7733_buf);
inline jule::U8 _1daedd1cb_index(_1daedcc14_lazyBuff* _self_, jule::I64 _5521_i);
inline void _1daedd484_append(_1daedcc14_lazyBuff* _self_, jule::U8 _6222_c);
inline jule::Str _1daedd71a_string(_1daedcc14_lazyBuff* _self_);
inline jule::Exceptional<jule::Slice<jule::Ptr<_1d828aeb5_DirEntry>>> static__1daee2631_Read(jule::Str _1517_path);
inline jule::VoidExceptional static__1daee2862_Create(jule::Str _4019_path);
inline jule::VoidExceptional static__1daee2a93_Remove(jule::Str _5319_path);
inline jule::Exceptional<jule::Ptr<_1d828cd85_File>> static__1d8289e1a_Open(jule::Str _2017_path, jule::I64 _2028_flag, jule::I64 _2041_mode);
inline jule::VoidExceptional static__1d828a14b_Remove(jule::Str _3319_path);
inline jule::Exceptional<jule::I64> _1d828a5d0_Write(_1d828cd85_File* _self_, jule::Slice<jule::U8> _4821_buf);
inline jule::Exceptional<jule::I64> _1d828a921_Read(_1d828cd85_File* _self_, jule::Slice<jule::U8> _6924_buf);
inline jule::Ptr<_1d828cd85_File> static__1d828d2d6_New(jule::Uintptr _4516_handle);
inline jule::Exceptional<jule::Ptr<_1d828cd85_File>> static__1d828d5a0_Create(jule::Str _5519_path);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1d828d869_Read(jule::Str _6717_path);
inline jule::VoidExceptional static__1d828dc10_Write(jule::Str _10518_path, jule::Slice<jule::U8> _10529_data, jule::I64 _10543_perm);
inline jule::VoidExceptional _1d828e44c_Close(_1d828cd85_File* _self_);
inline jule::Exceptional<jule::Ptr<_1d828ee75_Status>> static__1d828bb42_Of(jule::Str _1215_path);
inline jule::Bool _1d8290382_IsDir(_1d828ee75_Status* _self_);
inline jule::Bool _1d8290618_IsReg(_1d828ee75_Status* _self_);
inline jule::U64 _1d829089e_Size(_1d828ee75_Status* _self_);
inline jule::Bool _1c004e6cb_set(_1c0057c67_decimal* _self_, jule::Slice<jule::U8> _23819_s);
inline __jule_tuple_u64__jule_tuple_bool _1c004ea1c_floatBits(_1c0057c67_decimal* _self_, _1d949ac2e_floatInfo* _33226_flt);
inline void _1c0058152_assign(_1c0057c67_decimal* _self_, jule::U64 _15126_v);
inline void _1c005840a_shift(_1c0057c67_decimal* _self_, jule::I64 _17625_k);
inline void _1c00586b3_roundDown(_1c0057c67_decimal* _self_, jule::I64 _19625_nd);
inline void _1c005896b_roundUp(_1c0057c67_decimal* _self_, jule::I64 _20523_nd);
inline void _1c0058c24_round(_1c0057c67_decimal* _self_, jule::I64 _23221_nd);
inline jule::U64 _1c0058eaa_roundedInteger(_1c0057c67_decimal* _self_);
inline jule::Ptr<_1c006a461_Const> static__1c006a8d4_NewI64(jule::I64 _1619_x);
inline jule::Ptr<_1c006a461_Const> static__1c006ab9d_NewU64(jule::U64 _1919_x);
inline jule::Ptr<_1c006a461_Const> static__1c006ae67_NewBool(jule::Bool _2220_x);
inline jule::Ptr<_1c006a461_Const> static__1c006b231_NewStr(jule::Str _2519_x);
inline jule::Ptr<_1c006a461_Const> static__1c006b4ea_NewF64(jule::F64 _2819_x);
inline jule::Ptr<_1c006a461_Const> static__1c006b709_NewNil(void);
inline jule::I64 _1c006bd69_ReadI64(_1c006a461_Const* _self_);
inline jule::U64 _1c006c100_ReadU64(_1c006a461_Const* _self_);
inline jule::Bool _1c006c386_ReadBool(_1c006a461_Const* _self_);
inline jule::Str _1c006c61c_ReadStr(_1c006a461_Const* _self_);
inline jule::F64 _1c006c8a3_ReadF64(_1c006a461_Const* _self_);
inline jule::I64 _1c006cb39_AsI64(_1c006a461_Const* _self_);
inline jule::U64 _1c006cdc0_AsU64(_1c006a461_Const* _self_);
inline jule::F64 _1c006d156_AsF64(_1c006a461_Const* _self_);
inline void _1c006d40e_SetI64(_1c006a461_Const* _self_, jule::I64 _13822_x);
inline void _1c006d6b7_SetU64(_1c006a461_Const* _self_, jule::U64 _14122_x);
inline void _1c006d970_SetBool(_1c006a461_Const* _self_, jule::Bool _14423_x);
inline void _1c006dc28_SetStr(_1c006a461_Const* _self_, jule::Str _14722_x);
inline void _1c006ded1_SetF64(_1c006a461_Const* _self_, jule::F64 _15022_x);
inline jule::Bool _1c006e465_IsI64(_1c006a461_Const* _self_);
inline jule::Bool _1c006e6eb_IsU64(_1c006a461_Const* _self_);
inline jule::Bool _1c006e982_IsBool(_1c006a461_Const* _self_);
inline jule::Bool _1c006ec18_IsStr(_1c006a461_Const* _self_);
inline jule::Bool _1c006ee9e_IsF64(_1c006a461_Const* _self_);
inline jule::Bool _1c0070235_IsNil(_1c006a461_Const* _self_);
inline jule::Bool _1c00708b7_And(_1c006a461_Const* _self_, _1c006a461_Const _23815_x);
inline jule::Bool _1c0070c08_Or(_1c006a461_Const* _self_, _1c006a461_Const _24914_x);
inline jule::Bool _1c007219e_Add(_1c006a461_Const* _self_, _1c006a461_Const _37719_x);
inline jule::Bool _1c00724e0_Sub(_1c006a461_Const* _self_, _1c006a461_Const _40619_x);
inline jule::Bool _1c0072831_Mul(_1c006a461_Const* _self_, _1c006a461_Const _43019_x);
inline jule::Bool _1c0072b72_Div(_1c006a461_Const* _self_, _1c006a461_Const _45819_x);
inline jule::Bool _1c0072eb3_Mod(_1c006a461_Const* _self_, _1c006a461_Const _48719_x);
inline jule::Bool _1c0073304_BitwiseAnd(_1c006a461_Const* _self_, _1c006a461_Const _50926_x);
inline jule::Bool _1c0073645_BitwiseOr(_1c006a461_Const* _self_, _1c006a461_Const _52325_x);
inline jule::Bool _1c0073986_Xor(_1c006a461_Const* _self_, _1c006a461_Const _53719_x);
inline jule::Bool _1c0073cc7_Lshift(_1c006a461_Const* _self_, _1c006a461_Const _55122_x);
inline jule::Bool _1c0074118_Rshift(_1c006a461_Const* _self_, _1c006a461_Const _57122_x);
inline jule::U8 _1a7b69eac_Prec(_1a7b69b05_Token* _self_);
inline void _1a7b707dc_Fill(_1a7b7038b_File* _self_, jule::Slice<jule::U8> _1724_data);
inline jule::Str _1a7b70a73_Dir(_1a7b7038b_File* _self_);
inline jule::Str _1a7b70d09_Name(_1a7b7038b_File* _self_);
inline jule::Str _1a7b713d1_GetRow(_1a7b7038b_File* _self_, jule::I64 _3818_row);
inline void _1a7b78a8c_pushErr(_1a7b784c6_lex* _self_, jule::Str _44723_fmt, jule::Slice<jule::Any> _44736_args);
inline void _1a7b790ed_lex(_1a7b784c6_lex* _self_);
inline jule::Str _1a7b7943e_id(_1a7b784c6_lex* _self_, jule::Slice<jule::U8>* _47119_ln);
inline jule::Slice<jule::U8> _1a7b796c5_resume(_1a7b784c6_lex* _self_);
inline void _1a7b7997d_lexLineComment(_1a7b784c6_lex* _self_, jule::Ptr<_1a7b69b05_Token>* _52135_token);
inline void _1a7b79c36_lexRangeComment(_1a7b784c6_lex* _self_, jule::Ptr<_1a7b69b05_Token>* _53636_token);
inline jule::Str _1a7b7a077_num(_1a7b784c6_lex* _self_, jule::Slice<jule::U8>* _56420_txt);
inline jule::Str _1a7b7a3b8_escapeSeq(_1a7b784c6_lex* _self_, jule::Slice<jule::U8>* _58626_txt);
inline jule::Str _1a7b7a7b4_getRune(_1a7b784c6_lex* _self_, jule::Slice<jule::U8>* _61624_txt, jule::Bool _61637_raw);
inline jule::Str _1a7b7ab05_lexRune(_1a7b784c6_lex* _self_, jule::Slice<jule::U8>* _62524_txt);
inline jule::Str _1a7b7ad8b_lexStr(_1a7b784c6_lex* _self_);
inline void _1a7b7b320_newLine(_1a7b784c6_lex* _self_);
inline jule::Bool _1a7b7b881_isOp(_1a7b784c6_lex* _self_, jule::Slice<jule::U8>* _70721_txt, jule::Str _70734_kind, jule::U64 _70745_id, jule::Ptr<_1a7b69b05_Token>* _70763_t);
inline jule::Bool _1a7b7bc7c_lexBasicOps(_1a7b784c6_lex* _self_, jule::Slice<jule::U8> _71727_txt, jule::Ptr<_1a7b69b05_Token>* _71745_tok);
inline jule::Bool _1a7b7c178_lexId(_1a7b784c6_lex* _self_, jule::Slice<jule::U8>* _72622_txt, jule::Ptr<_1a7b69b05_Token>* _72640_t);
inline jule::Bool _1a7b7c574_lexNum(_1a7b784c6_lex* _self_, jule::Slice<jule::U8>* _73623_txt, jule::Ptr<_1a7b69b05_Token>* _73641_t);
inline jule::Ptr<_1a7b69b05_Token> _1a7b7c80a_token(_1a7b784c6_lex* _self_);
inline jule::Bool _1a7b86cdc_IsUnsafe(_1a7b86946_PtrTypeDecl* _self_);
inline jule::Bool _1a7b8757e_AutoSized(_1a7b871d8_ArrTypeDecl* _self_);
inline jule::Bool _1a7b8d332_Unhandled(_1a7b8ce7a_FnCallExpr* _self_);
inline jule::Bool _1a7b8d5b8_Ignored(_1a7b8ce7a_FnCallExpr* _self_);
inline jule::Bool _1a7b95a32_IsSelf(_1a7b9567a_ParamDecl* _self_);
inline jule::Bool _1a7b96e73_IsAnon(_1a7b96acc_FnDecl* _self_);
inline jule::Bool _1a7b98c77_IsInf(_1a7b988d1_Iter* _self_);
inline jule::Bool _1a7b995a2_IsWhileNext(_1a7b9920b_WhileKind* _self_);
inline jule::Ptr<_1a7ba8061_FieldIns> _1a7ba326a_instance(jule::Ptr<_1a7ba2d80_Field> _self_);
inline jule::Ptr<_1a7ba8b11_StructIns> _1a7ba624b_instance(jule::Ptr<_1a7ba5ca6_Struct> _self_);
inline jule::Ptr<_1a7ba8b11_StructIns> _1a7ba6559_appendInstance(_1a7ba5ca6_Struct* _self_, jule::Ptr<_1a7ba8b11_StructIns>* _13635_ins);
inline jule::Ptr<_1a7bba8d1_Fn> _1a7ba6955_FindMethod(_1a7ba5ca6_Struct* _self_, jule::Str _15426_ident, jule::Bool _15438_statically);
inline jule::Ptr<_1a7c7b178_Var> _1a7ba6c96_FindStatic(_1a7ba5ca6_Struct* _self_, jule::Str _16526_ident);
inline jule::Ptr<_1a7ba2d80_Field> _1a7ba70d7_FindField(_1a7ba5ca6_Struct* _self_, jule::Str _17625_ident);
inline jule::Bool _1a7ba7428_IsImplements(_1a7ba5ca6_Struct* _self_, jule::Ptr<_1a7bce362_Trait> _18624_t);
inline jule::Bool _1a7ba7769_IsUses(_1a7ba5ca6_Struct* _self_, jule::Ptr<_1a7ba5ca6_Struct> _19618_s);
inline jule::Str _1a7ba8eb8_Str(_1a7ba8b11_StructIns* _self_);
inline jule::Bool _1a7ba9309_Equal(jule::Ptr<_1a7ba8b11_StructIns> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _25818_other);
inline jule::Bool _1a7ba97b0_Same(_1a7ba8b11_StructIns* _self_, jule::Ptr<_1a7ba8b11_StructIns> _28616_s);
inline jule::Ptr<_1a7bba8d1_Fn> _1a7ba9bab_FindMethod(_1a7ba8b11_StructIns* _self_, jule::Str _30126_ident, jule::Bool _30138_statically);
inline jule::Ptr<_1a7ba8061_FieldIns> _1a7ba9eec_FindField(_1a7ba8b11_StructIns* _self_, jule::Str _31225_ident);
inline jule::Ptr<_1a7c7b178_Var> _1a7baa33d_FindStatic(_1a7ba8b11_StructIns* _self_, jule::Str _32326_ident);
inline jule::Ptr<_1a7bbc839_ParamIns> _1a7bb92c5_instance(jule::Ptr<_1a7bb8e0c_Param> _self_);
inline jule::Bool _1a7bb955b_IsSelf(_1a7bb8e0c_Param* _self_);
inline jule::Bool _1a7bb97e2_IsRef(_1a7bb8e0c_Param* _self_);
inline jule::Bool _1a7bbad87_IsVoid(_1a7bba8d1_Fn* _self_);
inline jule::Bool _1a7bbb11d_IsMethod(_1a7bba8d1_Fn* _self_);
inline jule::Bool _1a7bbb3a4_IsEntryPoint(_1a7bba8d1_Fn* _self_);
inline jule::Bool _1a7bbb63a_IsInit(_1a7bba8d1_Fn* _self_);
inline jule::Bool _1a7bbb8c1_IsAnon(_1a7bba8d1_Fn* _self_);
inline jule::Bool _1a7bbbb57_AnyVar(_1a7bba8d1_Fn* _self_);
inline jule::Ptr<_1a7bbd8b2_FnIns> _1a7bbbddd_instanceForce(jule::Ptr<_1a7bba8d1_Fn> _self_);
inline jule::Ptr<_1a7bbd8b2_FnIns> _1a7bbc174_instance(jule::Ptr<_1a7bba8d1_Fn> _self_);
inline jule::Ptr<_1a7bbd8b2_FnIns> _1a7bbc482_appendInstance(_1a7bba8d1_Fn* _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _13835_ins);
inline jule::Str _1a7bbcbd0_Str(_1a7bbc839_ParamIns* _self_);
inline jule::Str _1a7bbdc36_Str(_1a7bbd8b2_FnIns* _self_);
inline jule::Bool _1a7bbe077_Equal(jule::Ptr<_1a7bbd8b2_FnIns> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _22818_other);
inline jule::Bool _1a7bbe51c_EqualFn(jule::Ptr<_1a7bbd8b2_FnIns> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _23921_f);
inline jule::Bool _1a7bbe85d_equalTrait(jule::Ptr<_1a7bbd8b2_FnIns> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _29824_other);
inline jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>> _1a7bbeae4_Types(_1a7bbd8b2_FnIns* _self_);
inline jule::Bool _1a7bbed7a_IsBuiltin(_1a7bbd8b2_FnIns* _self_);
inline jule::Bool _1a7bc0111_IsAnon(_1a7bbd8b2_FnIns* _self_);
inline jule::Bool _1a7bc0452_Same(_1a7bbd8b2_FnIns* _self_, jule::Ptr<_1a7bbd8b2_FnIns> _34116_f);
inline jule::Str _1a7bc0793_GetKindStr(_1a7bbd8b2_FnIns* _self_, jule::Bool _35822_ident);
inline jule::Ptr<_1a7bc1a4c_ReferenceStack> static__1a7bc1d6b_new(void);
inline jule::I64 _1a7bc2267_Len(_1a7bc1a4c_ReferenceStack* _self_);
inline jule::Any _1a7bc25a8_At(_1a7bc1a4c_ReferenceStack* _self_, jule::I64 _6818_i);
inline void _1a7bc2861_Push(_1a7bc1a4c_ReferenceStack* _self_, jule::Any _7324_ref);
inline jule::Bool _1abb77d1d_Exist(_1a7bc1a4c_ReferenceStack* _self_, jule::Ptr<_1a7bbd8b2_FnIns> _7820_t);
inline jule::Bool _1abb8e010_Exist(_1a7bc1a4c_ReferenceStack* _self_, jule::Ptr<_1a7c7b178_Var> _7820_t);
inline jule::Bool _1aa7c808a_Exist(_1a7bc1a4c_ReferenceStack* _self_, jule::Ptr<_1a7ba8b11_StructIns> _7820_t);
inline jule::Bool _1ac207d81_Exist(_1a7bc1a4c_ReferenceStack* _self_, jule::Ptr<_1a7bce362_Trait> _7820_t);
inline void _1a7bc8504_pushErr(_1a7bc7a0e_symbolBuilder* _self_, jule::Ptr<_1a7b69b05_Token>* _33224_token, jule::Str _33239_fmt, jule::Slice<jule::Any> _33252_args);
inline void _1a7bc8c85_pushSuggestion(_1a7bc7a0e_symbolBuilder* _self_, jule::Str _34130_fmt, jule::Slice<jule::Any> _34143_args);
inline jule::Bool _1a7bc9181_checkCppUseDeclPath(_1a7bc7a0e_symbolBuilder* _self_, jule::Ptr<_1a7b9d023_UseDecl>* _34536_decl, jule::Str* _34553_path);
inline jule::Ptr<_1a7c36793_ImportInfo> _1a7bc948e_buildCppHeaderImport(_1a7bc7a0e_symbolBuilder* _self_, jule::Ptr<_1a7b9d023_UseDecl>* _36541_decl);
inline jule::Ptr<_1a7c36793_ImportInfo> _1a7bc97d0_buildStdImport(_1a7bc7a0e_symbolBuilder* _self_, jule::Ptr<_1a7b9d023_UseDecl>* _39335_decl);
inline jule::Ptr<_1a7c36793_ImportInfo> _1a7bc9b21_buildIdentImport(jule::Ptr<_1a7bc7a0e_symbolBuilder> _self_, jule::Ptr<_1a7b9d023_UseDecl>* _43338_decl);
inline jule::Ptr<_1a7c36793_ImportInfo> _1a7bc9e62_buildImport(jule::Ptr<_1a7bc7a0e_symbolBuilder> _self_, jule::Ptr<_1a7b9d023_UseDecl>* _48733_decl);
inline jule::Ptr<_1a7c36793_ImportInfo> _1a7bca2a3_findUseDecl(_1a7bc7a0e_symbolBuilder* _self_, jule::Ptr<_1a7c36793_ImportInfo>* _49828_pkg);
inline jule::Bool _1a7bca5e4_checkDuplicateUseDecl(_1a7bc7a0e_symbolBuilder* _self_, jule::Ptr<_1a7c36793_ImportInfo>* _50642_pkg);
inline void _1a7bca957_implImportSelections(_1a7bc7a0e_symbolBuilder* _self_, jule::Ptr<_1a7c36793_ImportInfo>* _51641_imp, jule::Ptr<_1a7b9d023_UseDecl>* _51664_decl);
inline jule::Str _1a7bcac98_getAsLinkPath(jule::Ptr<_1a7bc7a0e_symbolBuilder> _self_, jule::Str _53134_path);
inline void _1a7bcb1b6_pushCycleError(jule::Ptr<_1a7bc7a0e_symbolBuilder> _self_, jule::Ptr<_1a7bc7a0e_symbolBuilder>* _54532_sb, jule::Str _54552_path, _1daed18b7_StrBuilder* _54568_message);
inline void _1a7bcb5d4_pushCrossCycleError(jule::Ptr<_1a7bc7a0e_symbolBuilder> _self_, jule::Ptr<_1a7bc7a0e_symbolBuilder>* _55837_target, jule::Ptr<_1a7c36793_ImportInfo>* _55862_imp, jule::Ptr<_1a7b69b05_Token>* _55881_errorToken);
inline jule::Bool _1a7bcb9d0_checkImportCycles(jule::Ptr<_1a7bc7a0e_symbolBuilder> _self_, jule::Ptr<_1a7c36793_ImportInfo> _58134_imp, jule::Ptr<_1a7b9d023_UseDecl>* _58153_decl);
inline void _1a7bcbded_checkPackageAccessibility(_1a7bc7a0e_symbolBuilder* _self_, jule::Ptr<_1a7b9d023_UseDecl>* _61242_decl, jule::Str* _61259_mod, jule::Str* _61270_path);
inline jule::Bool _1a7bcc2e9_importPackage(jule::Ptr<_1a7bc7a0e_symbolBuilder> _self_, jule::Ptr<_1a7c36793_ImportInfo>* _61835_imp, jule::Ptr<_1a7b9d023_UseDecl>* _61858_decl);
inline jule::Ptr<_1a7c36793_ImportInfo> _1a7bcc63a_importUseDecl(jule::Ptr<_1a7bc7a0e_symbolBuilder> _self_, jule::Ptr<_1a7b9d023_UseDecl>* _66535_decl);
inline void _1a7bcc838_importUseDecls(jule::Ptr<_1a7bc7a0e_symbolBuilder> _self_);
inline void _1a7bccae1_appendNode(_1a7bc7a0e_symbolBuilder* _self_, _1a7b7e0ae_Node* _69431_node);
inline void _1a7bcccde_appendNodes(_1a7bc7a0e_symbolBuilder* _self_);
inline void _1a7bcd097_pushDirectivePass(_1a7bc7a0e_symbolBuilder* _self_, jule::Ptr<_1a7b7e4cc_Directive>* _73038_d);
inline void _1a7bcd295_appendTopDirectives(_1a7bc7a0e_symbolBuilder* _self_);
inline void _1a7bcd493_build(jule::Ptr<_1a7bc7a0e_symbolBuilder> _self_);
inline jule::Str _1a7bce75d_Str(_1a7bce362_Trait* _self_);
inline jule::Bool _1a7bcea9e_Equal(jule::Ptr<_1a7bce362_Trait> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _2518_other);
inline jule::Ptr<_1a7bba8d1_Fn> _1a7bd0044_FindMethod(_1a7bce362_Trait* _self_, jule::Str _3426_ident);
inline jule::Ptr<_1a7bba8d1_Fn> _1a7bd06c6_findMethodInherit(_1a7bce362_Trait* _self_, jule::Str* _5534_ident);
inline jule::Bool _1a7bd13db_AutoExpr(_1a7bd1001_EnumItem* _self_);
inline jule::Str _1a7bd1e25_Str(_1a7bd1a6d_Enum* _self_);
inline jule::Bool _1a7bd2266_Equal(jule::Ptr<_1a7bd1a6d_Enum> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _3818_other);
inline jule::Ptr<_1a7bd1001_EnumItem> _1a7bd2695_FindItem(_1a7bd1a6d_Enum* _self_, jule::Str _4724_ident);
inline jule::Str _1a7bd35ec_Str(_1a7bd3278_TypeEnum* _self_);
inline jule::Bool _1a7bd393d_Equal(jule::Ptr<_1a7bd3278_TypeEnum> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _8018_other);
inline jule::Ptr<_1a7bd2ba1_TypeEnumItem> _1a7bd3d6c_FindItem(_1a7bd3278_TypeEnum* _self_, jule::Str _8924_ident);
inline jule::Str _1a7bd60a0_Str(_1a7bd5ba4_comptimeRange* _self_);
inline jule::Bool _1a7bd63e1_Equal(jule::Ptr<_1a7bd5ba4_comptimeRange> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _2718_other);
inline jule::Str _1a7bd6ab7_Str(_1a7bd6710_comptimeStructField* _self_);
inline jule::Bool _1a7bd6e08_Equal(jule::Ptr<_1a7bd6710_comptimeStructField> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _3718_other);
inline jule::Ptr<_1a7cd41ae_Data> _1a7bd7414__Decl(jule::Ptr<_1a7bd6710_comptimeStructField> _self_, jule::Ptr<_1a7cd5dd6_eval>* _4127_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _4142_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7bd7810__Type(jule::Ptr<_1a7bd6710_comptimeStructField> _self_, jule::Ptr<_1a7cd5dd6_eval>* _5327_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _5342_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7bd7b51_subIdent(jule::Ptr<_1a7bd6710_comptimeStructField> _self_, jule::Str* _6126_ident);
inline jule::Str _1a7bd836b_Str(_1a7bd7ea3_comptimeStructFields* _self_);
inline jule::Bool _1a7bd86ac_Equal(jule::Ptr<_1a7bd7ea3_comptimeStructFields> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _9018_other);
inline void _1a7bd8b41_ready(_1a7bd7ea3_comptimeStructFields* _self_, jule::Ptr<_1a7c7b178_Var>* _9426_keyA, jule::Ptr<_1a7c7b178_Var>* _9443_keyB);
inline void _1a7bd8ea4_index(_1a7bd7ea3_comptimeStructFields* _self_, jule::Ptr<_1a7cd41ae_Data>* _11526_d, jule::I64 _11536_i);
inline void _1a7bd93c2_step(_1a7bd7ea3_comptimeStructFields* _self_, jule::I64 _12620_i, jule::Ptr<_1a7c7b178_Var>* _12633_keyA, jule::Ptr<_1a7c7b178_Var>* _12650_keyB);
inline jule::I64 _1a7bd9658_len(_1a7bd7ea3_comptimeStructFields* _self_);
inline jule::Str _1a7bd9cda_Str(_1a7bd9933_comptimeStatic* _self_);
inline jule::Bool _1a7bda12b_Equal(jule::Ptr<_1a7bd9933_comptimeStatic> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _15018_other);
inline jule::Ptr<_1a7cd41ae_Data> _1a7bda637__Decl(jule::Ptr<_1a7bd9933_comptimeStatic> _self_, jule::Ptr<_1a7cd5dd6_eval>* _15427_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _15442_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7bdaa33__Type(jule::Ptr<_1a7bd9933_comptimeStatic> _self_, jule::Ptr<_1a7cd5dd6_eval>* _16627_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _16642_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7bdad74_subIdent(jule::Ptr<_1a7bd9933_comptimeStatic> _self_, jule::Str* _17426_ident);
inline jule::Str _1a7bdb58e_Str(_1a7bdb1d7_comptimeStatics* _self_);
inline jule::Bool _1a7bdb8d0_Equal(jule::Ptr<_1a7bdb1d7_comptimeStatics> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _20318_other);
inline void _1a7bdbd64_ready(_1a7bdb1d7_comptimeStatics* _self_, jule::Ptr<_1a7c7b178_Var>* _20726_keyA, jule::Ptr<_1a7c7b178_Var>* _20743_keyB);
inline void _1a7bdc1c7_index(_1a7bdb1d7_comptimeStatics* _self_, jule::Ptr<_1a7cd41ae_Data>* _22826_d, jule::I64 _22836_i);
inline void _1a7bdc5e5_step(_1a7bdb1d7_comptimeStatics* _self_, jule::I64 _23920_i, jule::Ptr<_1a7c7b178_Var>* _23933_keyA, jule::Ptr<_1a7c7b178_Var>* _23950_keyB);
inline jule::I64 _1a7bdc87b_len(_1a7bdb1d7_comptimeStatics* _self_);
inline jule::Str _1a7bdd00d_Str(_1a7bdcb56_comptimeEnumField* _self_);
inline jule::Bool _1a7bdd34e_Equal(jule::Ptr<_1a7bdcb56_comptimeEnumField> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _26318_other);
inline jule::Ptr<_1a7cd41ae_Data> _1a7bdd849__Decl(jule::Ptr<_1a7bdcb56_comptimeEnumField> _self_, jule::Ptr<_1a7cd5dd6_eval>* _26727_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _26742_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7bddb8a_subIdent(jule::Ptr<_1a7bdcb56_comptimeEnumField> _self_, jule::Str* _27926_ident);
inline jule::Str _1a7bde42c_Str(_1a7bdde65_comptimeEnumFields* _self_);
inline jule::Bool _1a7bde76d_Equal(jule::Ptr<_1a7bdde65_comptimeEnumFields> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _30118_other);
inline void _1a7bdeb7a_ready(_1a7bdde65_comptimeEnumFields* _self_, jule::Ptr<_1a7c7b178_Var>* _30526_keyA, jule::Ptr<_1a7c7b178_Var>* _30543_keyB);
inline void _1a7bdeedd_index(_1a7bdde65_comptimeEnumFields* _self_, jule::Ptr<_1a7cd41ae_Data>* _32626_d, jule::I64 _32636_i);
inline void _1a7be040b_step(_1a7bdde65_comptimeEnumFields* _self_, jule::I64 _33720_i, jule::Ptr<_1a7c7b178_Var>* _33733_keyA, jule::Ptr<_1a7c7b178_Var>* _33750_keyB);
inline jule::I64 _1a7be0692_len(_1a7bdde65_comptimeEnumFields* _self_);
inline jule::Str _1a7be0d24_Str(_1a7be096c_comptimeParam* _self_);
inline jule::Bool _1a7be1165_Equal(jule::Ptr<_1a7be096c_comptimeParam> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _36118_other);
inline jule::Ptr<_1a7cd41ae_Data> _1a7be1682__Decl(jule::Ptr<_1a7be096c_comptimeParam> _self_, jule::Ptr<_1a7cd5dd6_eval>* _36527_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _36542_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7be1a7d__Type(jule::Ptr<_1a7be096c_comptimeParam> _self_, jule::Ptr<_1a7cd5dd6_eval>* _37727_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _37742_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7be1e79__Recv(jule::Ptr<_1a7be096c_comptimeParam> _self_, jule::Ptr<_1a7cd5dd6_eval>* _38527_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _38542_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7be22ba_subIdent(jule::Ptr<_1a7be096c_comptimeParam> _self_, jule::Str* _39826_ident);
inline jule::Str _1a7be2a6d_Str(_1a7be27c6_comptimeParams* _self_);
inline jule::Bool _1a7be2dae_Equal(jule::Ptr<_1a7be27c6_comptimeParams> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _43418_other);
inline void _1a7be3343_ready(_1a7be27c6_comptimeParams* _self_, jule::Ptr<_1a7c7b178_Var>* _43826_keyA, jule::Ptr<_1a7c7b178_Var>* _43843_keyB);
inline void _1a7be36a6_index(_1a7be27c6_comptimeParams* _self_, jule::Ptr<_1a7cd41ae_Data>* _45926_d, jule::I64 _45936_i);
inline void _1a7be3ac4_step(_1a7be27c6_comptimeParams* _self_, jule::I64 _47020_i, jule::Ptr<_1a7c7b178_Var>* _47033_keyA, jule::Ptr<_1a7c7b178_Var>* _47050_keyB);
inline jule::I64 _1a7be3d5a_len(_1a7be27c6_comptimeParams* _self_);
inline jule::Str _1a7be44dc_Str(_1a7be4135_comptimeTypeInfos* _self_);
inline jule::Bool _1a7be482d_Equal(jule::Ptr<_1a7be4135_comptimeTypeInfos> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _49418_other);
inline void _1a7be4cb2_ready(_1a7be4135_comptimeTypeInfos* _self_, jule::Ptr<_1a7c7b178_Var>* _49826_keyA, jule::Ptr<_1a7c7b178_Var>* _49843_keyB);
inline void _1a7be5125_index(_1a7be4135_comptimeTypeInfos* _self_, jule::Ptr<_1a7cd41ae_Data>* _51926_d, jule::I64 _51936_i);
inline void _1a7be5543_step(_1a7be4135_comptimeTypeInfos* _self_, jule::I64 _52820_i, jule::Ptr<_1a7c7b178_Var>* _52833_keyA, jule::Ptr<_1a7c7b178_Var>* _52850_keyB);
inline jule::I64 _1a7be57c9_len(_1a7be4135_comptimeTypeInfos* _self_);
inline jule::Str _1a7be5e5b_Str(_1a7be5aa4_comptimeTypeInfo* _self_);
inline jule::Bool _1a7be629c_Equal(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _55218_other);
inline jule::Ptr<_1a7cd41ae_Data> _1a7be68da__Decl(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _55627_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _55642_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7be6cd6__Str(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _59322_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _59337_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7be71d2__Kind(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _60627_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _60642_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7be75cd__Bits(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _68627_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _68642_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7be79c9__Elem(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _71027_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _71042_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7be7dc5__Size(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _74327_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _74342_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7be82c1__Key(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _76226_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _76241_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7be86bc__Value(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _77528_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _77543_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7be8ab8__Fields(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _78829_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _78844_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7be8eb4__Statics(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _81730_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _81745_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7be93b0__Binded(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _83629_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _83644_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7be97ab__Ordered(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _84926_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _84941_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7be9ba7__Comparable(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _86229_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _86244_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7bea0a3__Mutable(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _87526_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _87541_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7bea49e__Types(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _88828_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _88843_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7bea89a__CanNil(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _91129_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _91144_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7beac96__GC(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _92425_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _92440_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7beb192__Result(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _93729_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _93744_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7beb58d__Params(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _95329_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _95344_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7beb8ce_subIdent(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Str* _97026_ident);
inline jule::Str _1a7bec061_Str(_1a7bebba9_comptimeValue* _self_);
inline jule::Bool _1a7bec3a2_Equal(jule::Ptr<_1a7bebba9_comptimeValue> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _111818_other);
inline jule::Ptr<_1a7cd41ae_Data> _1a7bec913__Unwrap(jule::Ptr<_1a7bebba9_comptimeValue> _self_, jule::Ptr<_1a7cd5dd6_eval>* _112229_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _112244_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7becd0e__Type(jule::Ptr<_1a7bebba9_comptimeValue> _self_, jule::Ptr<_1a7cd5dd6_eval>* _113027_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _113042_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7bed20a__Lvalue(jule::Ptr<_1a7bebba9_comptimeValue> _self_, jule::Ptr<_1a7cd5dd6_eval>* _113829_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _113844_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7bed606__Mutable(jule::Ptr<_1a7bebba9_comptimeValue> _self_, jule::Ptr<_1a7cd5dd6_eval>* _115130_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _115145_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7beda02__Const(jule::Ptr<_1a7bebba9_comptimeValue> _self_, jule::Ptr<_1a7cd5dd6_eval>* _116428_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _116443_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7bedded__Field(jule::Ptr<_1a7bebba9_comptimeValue> _self_, jule::Ptr<_1a7cd5dd6_eval>* _117728_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _117743_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7bee2e9__Method(jule::Ptr<_1a7bebba9_comptimeValue> _self_, jule::Ptr<_1a7cd5dd6_eval>* _121229_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _121244_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7bee63a_subIdent(jule::Ptr<_1a7bebba9_comptimeValue> _self_, jule::Str* _125826_ident);
inline jule::Str _1a7beecbc_Str(_1a7bee915_comptimeFiles* _self_);
inline jule::Bool _1a7c0010d_Equal(jule::Ptr<_1a7bee915_comptimeFiles> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _132218_other);
inline void _1a7c00592_ready(_1a7bee915_comptimeFiles* _self_, jule::Ptr<_1a7c7b178_Var>* _132626_keyA, jule::Ptr<_1a7c7b178_Var>* _132643_keyB);
inline void _1a7c00905_index(_1a7bee915_comptimeFiles* _self_, jule::Ptr<_1a7cd41ae_Data>* _134726_d, jule::I64 _134736_i);
inline void _1a7c00d23_step(_1a7bee915_comptimeFiles* _self_, jule::I64 _135820_i, jule::Ptr<_1a7c7b178_Var>* _135833_keyA, jule::Ptr<_1a7c7b178_Var>* _135850_keyB);
inline jule::I64 _1a7c010a9_len(_1a7bee915_comptimeFiles* _self_);
inline jule::Str _1a7c0173b_Str(_1a7c01384_comptimeFile* _self_);
inline jule::Bool _1a7c01a7c_Equal(jule::Ptr<_1a7c01384_comptimeFile> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _138218_other);
inline jule::Ptr<_1a7cd41ae_Data> _1a7c02099__Path(jule::Ptr<_1a7c01384_comptimeFile> _self_, jule::Ptr<_1a7cd5dd6_eval>* _138627_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _138642_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7c02495__Name(jule::Ptr<_1a7c01384_comptimeFile> _self_, jule::Ptr<_1a7cd5dd6_eval>* _139927_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _139942_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7c02891__Dir(jule::Ptr<_1a7c01384_comptimeFile> _self_, jule::Ptr<_1a7cd5dd6_eval>* _141226_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _141241_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7c02bd2_subIdent(jule::Ptr<_1a7c01384_comptimeFile> _self_, jule::Str* _142526_ident);
inline jule::Str _1a7c03595_Str(_1a7c02eac_comptimeDecls* _self_);
inline jule::Bool _1a7c038d6_Equal(jule::Ptr<_1a7c02eac_comptimeDecls> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _146118_other);
inline void _1a7c03c5a_ready(_1a7c02eac_comptimeDecls* _self_, jule::Ptr<_1a7c7b178_Var>* _146526_keyA, jule::Ptr<_1a7c7b178_Var>* _146543_keyB);
inline void _1a7c040bd_index(_1a7c02eac_comptimeDecls* _self_, jule::Ptr<_1a7cd41ae_Data>* _148626_d, jule::I64 _148636_i);
inline void _1a7c044db_step(_1a7c02eac_comptimeDecls* _self_, jule::I64 _149520_i, jule::Ptr<_1a7c7b178_Var>* _149533_keyA, jule::Ptr<_1a7c7b178_Var>* _149550_keyB);
inline jule::I64 _1a7c04772_len(_1a7c02eac_comptimeDecls* _self_);
inline jule::Str _1a7c05652_Str(_1a7c0529a_comptimeDecl* _self_);
inline jule::Bool _1a7c05993_Equal(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _153418_other);
inline jule::Str _1a7c05de4_declAsStr(_1a7c0529a_comptimeDecl* _self_);
inline jule::Ptr<_1a7cd41ae_Data> _1a7c062e0__Name(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Ptr<_1a7cd5dd6_eval>* _156527_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _156542_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7c066db__Public(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Ptr<_1a7cd5dd6_eval>* _160329_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _160344_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7c06ad7__Binded(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Ptr<_1a7cd5dd6_eval>* _164129_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _164144_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7c06ed3__Exceptional(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Ptr<_1a7cd5dd6_eval>* _167534_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _167549_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7c073ce__Mutable(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Ptr<_1a7cd5dd6_eval>* _169630_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _169645_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7c077ca__Variadic(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Ptr<_1a7cd5dd6_eval>* _172931_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _172946_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7c07bc6__Reference(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Ptr<_1a7cd5dd6_eval>* _176032_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _176047_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7c080c2__Params(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Ptr<_1a7cd5dd6_eval>* _179229_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _179244_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7c084bd__Fields(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Ptr<_1a7cd5dd6_eval>* _182729_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _182744_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7c088b9__Statics(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Ptr<_1a7cd5dd6_eval>* _186830_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _186845_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7c08cb5__Methods(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Ptr<_1a7cd5dd6_eval>* _190430_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _190445_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7c09106_subIdent(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Str* _194526_ident);
inline jule::Fn<jule::Bool,jule::Ptr<_1a7c56c14_sema>*,jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>*> _1a7c0c280_readyFn(jule::Ptr<_1a7c0bd51_constraintChecker> _self_);
inline jule::Bool _1a7c0c516_readyFi(jule::Ptr<_1a7c0bd51_constraintChecker> _self_);
inline jule::Bool _1a7c0c79c_readySi(jule::Ptr<_1a7c0bd51_constraintChecker> _self_);
inline jule::Bool _1a7c0ca33_ready(jule::Ptr<_1a7c0bd51_constraintChecker> _self_);
inline jule::Bool _1a7c0ccb9_check(jule::Ptr<_1a7c0bd51_constraintChecker> _self_);
inline jule::Bool _1a7c0e5a1_IsTraitImpl(_1a7c0e1a5_Impl* _self_);
inline jule::Bool _1a7c0e837_IsStructImpl(_1a7c0e1a5_Impl* _self_);
inline jule::Bool _1a7c15211_IsWhileNext(_1a7c14d6a_WhileIter* _self_);
inline jule::Ptr<_1a7c36793_ImportInfo> _1a7c1b1e5_SelectPackage(_1a7c1ac1c_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7c36793_ImportInfo>> _37429_selector);
inline jule::Ptr<_1a7c7b178_Var> _1a7c1b5e1_FindVar(_1a7c1ac1c_scopeChecker* _self_, jule::Str _38523_ident, jule::Bool _38535_binded);
inline jule::Ptr<_1a7d1aea4_TypeAlias> _1a7c1b9dc_FindTypeAlias(_1a7c1ac1c_scopeChecker* _self_, jule::Str _40229_ident, jule::Bool _40241_binded);
inline jule::Ptr<_1a7ba5ca6_Struct> _1a7c1bdd8_FindStruct(_1a7c1ac1c_scopeChecker* _self_, jule::Str _42726_ident, jule::Bool _42738_binded);
inline jule::Ptr<_1a7bba8d1_Fn> _1a7c1c2d4_FindFn(_1a7c1ac1c_scopeChecker* _self_, jule::Str _43622_ident, jule::Bool _43634_binded);
inline jule::Ptr<_1a7bce362_Trait> _1a7c1c625_FindTrait(_1a7c1ac1c_scopeChecker* _self_, jule::Str _44525_ident);
inline jule::Ptr<_1a7bd1a6d_Enum> _1a7c1c966_FindEnum(_1a7c1ac1c_scopeChecker* _self_, jule::Str _45424_ident);
inline jule::Ptr<_1a7bd3278_TypeEnum> _1a7c1cca7_FindTypeEnum(_1a7c1ac1c_scopeChecker* _self_, jule::Str _46328_ident);
inline jule::Bool _1a7c1d109_isUnsafe(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_);
inline jule::Bool _1a7c1d390_isRoot(_1a7c1ac1c_scopeChecker* _self_);
inline void _1a7c1d58d_stop(_1a7c1ac1c_scopeChecker* _self_);
inline jule::Bool _1a7c1d824_stopped(_1a7c1ac1c_scopeChecker* _self_);
inline jule::Bool _1a7c1daaa_isDeferred(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_);
inline void _1a7c1dd63_pushCaptured(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7c7b178_Var>* _52534_v);
inline jule::Ptr<_1a7c1ac1c_scopeChecker> _1a7c1e0e9_getRoot(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_);
inline jule::Ptr<_1a7c1ac1c_scopeChecker> _1a7c1e380_getHardRoot(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_);
inline jule::Ptr<_1a7bc1a4c_ReferenceStack> _1a7c1e616_getOwnerRefers(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_);
inline jule::Ptr<_1a7c7b178_Var> _1a7c1e957_findVar(_1a7c1ac1c_scopeChecker* _self_, jule::Str _57223_ident);
inline jule::Ptr<_1a7c164cb_Label> _1a7c1ec98_findLabel(_1a7c1ac1c_scopeChecker* _self_, jule::Str* _59326_ident);
inline jule::Ptr<_1a7c19c2c_scopeLabel> _1a7c200d9_findLabelScope(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Str* _60932_ident);
inline jule::Ptr<_1a7c19c2c_scopeLabel> _1a7c2042a_findLabelAll(_1a7c1ac1c_scopeChecker* _self_, jule::Str* _62029_ident);
inline jule::Bool _1a7c20826_isDuplicatedIdent(_1a7c1ac1c_scopeChecker* _self_, jule::Uintptr _63233_itself, jule::Str* _63251_ident);
inline void _1a7c20ace_checkVarDecl(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b97c87_VarDecl> _65233_decl);
inline void _1a7c20d87_checkTypeAlias(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7d1aea4_TypeAlias>* _68336_ta);
inline void _1a7c21140_checkTypeAliasDecl(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b9b939_TypeAliasDecl> _69939_decl);
inline jule::Ptr<_1a7c1397e_Scope> _1a7c213c6_getChild(_1a7c1ac1c_scopeChecker* _self_);
inline void _1a7c217e4_checkChildSsc(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b94e3d_ScopeTree>* _71035_tree, jule::Ptr<_1a7c1397e_Scope>* _71058_s, jule::Ptr<_1a7c1ac1c_scopeChecker>* _71074_ssc);
inline jule::Ptr<_1a7c1397e_Scope> _1a7c21be0_checkChildSc(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b94e3d_ScopeTree>* _71734_tree, jule::Ptr<_1a7c1ac1c_scopeChecker>* _71757_ssc);
inline jule::Ptr<_1a7c1397e_Scope> _1a7c22031_checkChild(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b94e3d_ScopeTree>* _72332_tree);
inline void _1a7c222d9_checkAnonScope(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b94e3d_ScopeTree> _72835_tree);
inline void _1a7c2264c_processErrorCall(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7bb6624_BuiltinErrorCallExprModel>* _73338_m, jule::Ptr<_1a7b69b05_Token> _73369_err);
inline void _1a7c22905_checkExpr(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b89251_Expr> _74630_expr);
inline jule::Ptr<_1a7c13d9c_If> _1a7c22c46_checkIf(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b9a86c_If> _77728_i);
inline jule::Ptr<_1a7c14199_Else> _1a7c23087_checkElse(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b9ac46_Else> _79730_e);
inline void _1a7c23340_checkConditional(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b9b1ec_Conditional> _80337_conditional);
inline void _1a7c23818_checkIterScopeSsc(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Uintptr _81934_it, jule::Ptr<_1a7b94e3d_ScopeTree> _81951_tree, jule::Ptr<_1a7c1397e_Scope>* _81974_s, jule::Ptr<_1a7c1ac1c_scopeChecker> _81989_ssc);
inline jule::Ptr<_1a7c1397e_Scope> _1a7c23cbe_checkIterScopeSc(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Uintptr _82433_it, jule::Ptr<_1a7b94e3d_ScopeTree> _82450_tree, jule::Ptr<_1a7c1ac1c_scopeChecker> _82472_ssc);
inline jule::Ptr<_1a7c1397e_Scope> _1a7c241ba_checkIterScope(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Uintptr _83031_it, jule::Ptr<_1a7b94e3d_ScopeTree>* _83049_tree);
inline void _1a7c24473_checkInfIter(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b988d1_Iter>* _83534_it);
inline void _1a7c2472b_checkWhileIter(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b988d1_Iter>* _84136_it);
inline void _1a7c24b49_checkComptimeRangeIter(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b988d1_Iter>* _89144_it, jule::Ptr<_1a7c157b6_RangeIter>* _89160_kind, jule::Ptr<_1a7cd41ae_Data>* _89183_d);
inline void _1a7c24e02_checkRangeIter(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b988d1_Iter>* _94836_it);
inline void _1a7c251aa_checkIter(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b988d1_Iter> _100830_it);
inline jule::Bool _1a7c254eb_checkValidContLabel(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Uintptr _103236_it);
inline jule::Bool _1a7c2583c_checkValidBreakLabel(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Uintptr _104837_ptr);
inline jule::Ptr<_1a7c15b4b_ContSt> _1a7c25b7d_checkContValidScope(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b9a3b6_ContSt> _107136_c);
inline void _1a7c25e36_checkCont(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b9a3b6_ContSt> _109526_c);
inline void _1a7c261de_checkLabel(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b92501_LabelSt> _114231_l);
inline void _1a7c26497_pushGoto(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b928ca_GotoSt> _116129_gt);
inline void _1a7c26750_checkPostfix(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b938ba_AssignSt> _117233_a);
inline jule::Bool _1a7c26a91_isNewAssignIdent(_1a7c1ac1c_scopeChecker* _self_, jule::Str _120532_ident);
inline void _1a7c26d49_removeInteriorMutRisk(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7cd41ae_Data>* _121843_d);
inline jule::Bool _1a7c27300_checkStructureAssignOp(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _123244_s, jule::Ptr<_1a7b938ba_AssignSt>* _123264_a, jule::Ptr<_1a7cd41ae_Data>* _123283_r);
inline void _1a7c275a8_checkSingleAssign(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b938ba_AssignSt>* _127139_a);
inline void _1a7c27be6_processEndPartOfMultiAssign(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7c17972_MultiAssign>* _135349_st, jule::Ptr<_1a7b938ba_AssignSt>* _135372_a, jule::Ptr<_1a7b93337_AssignLeft>* _13548_lexpr, jule::Ptr<_1a7cd41ae_Data>* _135433_l, jule::Ptr<_1a7cd41ae_Data>* _135448_r, jule::Bool _135458_strict);
inline void _1a7c27e9e_checkMultiAssign(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b938ba_AssignSt>* _142938_a);
inline void _1a7c28257_checkAssignSt(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b938ba_AssignSt> _149634_a);
inline jule::Ptr<_1a7c1397e_Scope> _1a7c28653_checkCaseScope(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7c18bd7_Case>* _150732_c, jule::Ptr<_1a7b94e3d_ScopeTree>* _150747_tree);
inline jule::Ptr<_1a7c18bd7_Case> _1a7c28bb4_checkCase(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7c181ae_Match> _151330_m, jule::I64 _151341_i, jule::Ptr<_1a7b9bde0_Case> _151353_c, jule::Ptr<_1a7cd41ae_Data> _151372_expr);
inline void _1a7c290d2_checkCases(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b9c709_MatchCase>* _159032_m, jule::Ptr<_1a7c181ae_Match> _159051_rm, jule::Ptr<_1a7cd41ae_Data> _159067_expr);
inline jule::Ptr<_1a7c18bd7_Case> _1a7c294cd_checkDefault(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7c181ae_Match> _161133_m, jule::Ptr<_1a7b9ac46_Else> _161148_d);
inline void _1a7c29841_checkComptimePanic(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b69b05_Token> _161939_callToken, jule::Ptr<_1a7c1397e_Scope>* _161959_s);
inline void _1a7c29ba4_processConstMatch(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7c181ae_Match>* _165139_tm, jule::Ptr<_1a7b9c709_MatchCase>* _165156_m);
inline void _1a7c29e5c_checkTypeMatch(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b9c709_MatchCase>* _168036_m);
inline void _1a7c2a215_checkCommonMatch(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b9c709_MatchCase>* _172338_m);
inline void _1a7c2a4bd_checkMatch(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b9c709_MatchCase> _177431_m);
inline void _1a7c2a776_checkFall(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b92bc7_FallSt> _178226_f);
inline jule::Ptr<_1a7c16025_BreakSt> _1a7c2aab7_checkBreakWithLabel(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b99edc_BreakSt> _180536_b);
inline jule::Ptr<_1a7c16025_BreakSt> _1a7c2ae08_checkPlainBreak(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b99edc_BreakSt> _186332_b);
inline void _1a7c2b1b1_checkBreak(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b99edc_BreakSt> _188527_b);
inline void _1a7c2b469_checkRet(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b98161_RetSt> _189629_r);
inline void _1a7c2b722_checkUseExpr(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b89b25_UseExpr> _192129_ue);
inline void _1a7c2b9ca_checkNode(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Any* _193731_node);
inline void _1a7c2bbc8_checkResult(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_);
inline void _1a7c2bdc6_checkTree(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_);
inline void _1a7c2c239_checkGoto(_1a7c1ac1c_scopeChecker* _self_, jule::Ptr<_1a7c16b3b_GotoSt>* _203930_gt, jule::Ptr<_1a7c19c2c_scopeLabel>* _203948_label);
inline void _1a7c2c437_checkGotos(_1a7c1ac1c_scopeChecker* _self_);
inline void _1a7c2c635_checkLabels(_1a7c1ac1c_scopeChecker* _self_);
inline void _1a7c2c833_checkVars(_1a7c1ac1c_scopeChecker* _self_);
inline void _1a7c2ca31_checkAliases(_1a7c1ac1c_scopeChecker* _self_);
inline void _1a7c2cd94_check(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b94e3d_ScopeTree>* _213427_tree, jule::Ptr<_1a7c1397e_Scope>* _213450_s);
inline jule::Ptr<_1a7c1ac1c_scopeChecker> _1a7c2d12a_newChildChecker(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_);
inline void _1a7c3010a_checkCdef(_1a7c2eba9_directiveChecker* _self_, jule::Ptr<_1a7b7e4cc_Directive>* _1626_d);
inline void _1a7c303b3_checkTypedef(_1a7c2eba9_directiveChecker* _self_, jule::Ptr<_1a7b7e4cc_Directive>* _3229_d);
inline void _1a7c3066b_checkNamespace(_1a7c2eba9_directiveChecker* _self_, jule::Ptr<_1a7b7e4cc_Directive>* _4835_d);
inline void _1a7c30924_checkDeprecated(_1a7c2eba9_directiveChecker* _self_, jule::Ptr<_1a7b7e4cc_Directive>* _10036_d);
inline void _1a7c30bcc_checkTest(_1a7c2eba9_directiveChecker* _self_, jule::Ptr<_1a7b7e4cc_Directive>* _14126_d);
inline void _1a7c30e85_checkExport(_1a7c2eba9_directiveChecker* _self_, jule::Ptr<_1a7b7e4cc_Directive>* _16232_d);
inline void _1a7c3123d_checkDirective(_1a7c2eba9_directiveChecker* _self_, jule::Ptr<_1a7b7e4cc_Directive>* _20035_d);
inline void _1a7c3143b_check(_1a7c2eba9_directiveChecker* _self_);
inline jule::Ptr<_1a7c36793_ImportInfo> _1a7c36cb0_SelectPackage(_1a7c36793_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7c36793_ImportInfo>> );
inline jule::Ptr<_1a7c7b178_Var> _1a7c371ab_FindVar(_1a7c36793_ImportInfo* _self_, jule::Str _19823_ident, jule::Bool );
inline jule::Ptr<_1a7d1aea4_TypeAlias> _1a7c375a7_FindTypeAlias(_1a7c36793_ImportInfo* _self_, jule::Str _21029_ident, jule::Bool );
inline jule::Ptr<_1a7ba5ca6_Struct> _1a7c379a3_FindStruct(_1a7c36793_ImportInfo* _self_, jule::Str _22226_ident, jule::Bool );
inline jule::Ptr<_1a7bba8d1_Fn> _1a7c37d9e_FindFn(_1a7c36793_ImportInfo* _self_, jule::Str _23422_ident, jule::Bool );
inline jule::Ptr<_1a7bce362_Trait> _1a7c381e0_FindTrait(_1a7c36793_ImportInfo* _self_, jule::Str _24525_ident);
inline jule::Ptr<_1a7bd1a6d_Enum> _1a7c38531_FindEnum(_1a7c36793_ImportInfo* _self_, jule::Str _25624_ident);
inline jule::Ptr<_1a7bd3278_TypeEnum> _1a7c38872_FindTypeEnum(_1a7c36793_ImportInfo* _self_, jule::Str _26728_ident);
inline jule::Bool _1a7c38d17_isLookupable(_1a7c36793_ImportInfo* _self_, jule::Str* _27625_ident);
inline jule::Bool _1a7c39158_existIdent(_1a7c36793_ImportInfo* _self_, jule::Str _29622_ident);
inline jule::Bool _1a7c393de_isAccessibleViaSelection(_1a7c36793_ImportInfo* _self_);
inline jule::Ptr<_1a7c36793_ImportInfo> _1a7c39b92_SelectPackage(_1a7c396b9_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7c36793_ImportInfo>> );
inline jule::Ptr<_1a7c7b178_Var> _1a7c3a08d_FindVar(_1a7c396b9_Package* _self_, jule::Str _32323_ident, jule::Bool _32335_binded);
inline jule::Ptr<_1a7d1aea4_TypeAlias> _1a7c3a489_FindTypeAlias(_1a7c396b9_Package* _self_, jule::Str _32929_ident, jule::Bool _32941_binded);
inline jule::Ptr<_1a7ba5ca6_Struct> _1a7c3a885_FindStruct(_1a7c396b9_Package* _self_, jule::Str _33526_ident, jule::Bool _33538_binded);
inline jule::Ptr<_1a7bba8d1_Fn> _1a7c3ac81_FindFn(_1a7c396b9_Package* _self_, jule::Str _34122_ident, jule::Bool _34134_binded);
inline jule::Ptr<_1a7bce362_Trait> _1a7c3b0c2_FindTrait(_1a7c396b9_Package* _self_, jule::Str _34725_ident);
inline jule::Ptr<_1a7bd1a6d_Enum> _1a7c3b413_FindEnum(_1a7c396b9_Package* _self_, jule::Str _35324_ident);
inline jule::Ptr<_1a7bd3278_TypeEnum> _1a7c3b754_FindTypeEnum(_1a7c396b9_Package* _self_, jule::Str _35928_ident);
inline jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _1a7c56582_pushComptimeTypeInfo(_1a7c560dc_commonSemaMeta* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _22341_t);
inline jule::Ptr<_1a7c36793_ImportInfo> _1a7c571dc_SelectPackage(_1a7c56c14_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7c36793_ImportInfo>> _25229_selector);
inline jule::Ptr<_1a7c7b178_Var> _1a7c575d8_FindVar(_1a7c56c14_sema* _self_, jule::Str _26223_ident, jule::Bool _26235_binded);
inline jule::Ptr<_1a7d1aea4_TypeAlias> _1a7c579d4_FindTypeAlias(_1a7c56c14_sema* _self_, jule::Str _29429_ident, jule::Bool _29441_binded);
inline jule::Ptr<_1a7ba5ca6_Struct> _1a7c57dd0_FindStruct(_1a7c56c14_sema* _self_, jule::Str _32626_ident, jule::Bool _32638_binded);
inline jule::Ptr<_1a7bba8d1_Fn> _1a7c582cb_FindFn(_1a7c56c14_sema* _self_, jule::Str _35722_ident, jule::Bool _35734_binded);
inline jule::Ptr<_1a7bce362_Trait> _1a7c5861c_FindTrait(_1a7c56c14_sema* _self_, jule::Str _38925_ident);
inline jule::Ptr<_1a7bd1a6d_Enum> _1a7c5895d_FindEnum(_1a7c56c14_sema* _self_, jule::Str _42124_ident);
inline jule::Ptr<_1a7bd3278_TypeEnum> _1a7c58c9e_FindTypeEnum(_1a7c56c14_sema* _self_, jule::Str _45328_ident);
inline jule::Bool _1a7c591ab_isFlag(_1a7c56c14_sema* _self_, jule::I64 _48218_flags);
inline jule::Ptr<_1a7ccd9e4_SymbolTable> _1a7c59442_getCurrentFile(_1a7c56c14_sema* _self_);
inline void _1a7c596ea_setCurrentFile(_1a7c56c14_sema* _self_, jule::Ptr<_1a7ccd9e4_SymbolTable> _48534_f);
inline void _1a7c59b18_pushErr(_1a7c56c14_sema* _self_, jule::Ptr<_1a7b69b05_Token> _48723_token, jule::Str _48738_fmt, jule::Slice<jule::Any> _48751_args);
inline void _1a7c59e7b_pushSuggestion(_1a7c56c14_sema* _self_, jule::Str _49230_fmt, jule::Slice<jule::Any> _49243_args);
inline jule::Bool _1a7c5a377_isAccessibleDefine(_1a7c56c14_sema* _self_, jule::Bool _49830_public, jule::Ptr<_1a7b69b05_Token> _49844_token);
inline jule::Bool _1a7c5a82d_isDuplicatedIdent(_1a7c56c14_sema* _self_, jule::Uintptr _52129_itself, jule::Str* _52147_ident, jule::Bool _52159_binded);
inline void _1a7c5ab91_checkDirectives(jule::Ptr<_1a7c56c14_sema> _self_, jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>* _53837_d, jule::Any _53863_o);
inline jule::Bool _1a7c5b147_checkGenericQuantity(_1a7c56c14_sema* _self_, jule::I64 _54736_required, jule::I64 _54751_given, jule::Ptr<_1a7b69b05_Token> _54763_token);
inline jule::Bool _1a7c5b543_isDuplicatedImportSelection(_1a7c56c14_sema* _self_, jule::Uintptr _56639_itself, jule::Str* _56657_ident);
inline jule::Any _1a7c5b93e_getImportDef(_1a7c56c14_sema* _self_, jule::Str* _57925_ident, jule::Ptr<_1a7c36793_ImportInfo>* _57942_imp);
inline jule::Bool _1ab6c2406_checkImportSelection(_1a7c56c14_sema* _self_, jule::Ptr<_1a7b69b05_Token>* _59440_ident, jule::Ptr<_1a7c7b178_Var>* _59456_s);
inline jule::Bool _1ab6c6c02_checkImportSelection(_1a7c56c14_sema* _self_, jule::Ptr<_1a7b69b05_Token>* _59440_ident, jule::Ptr<_1a7d1aea4_TypeAlias>* _59456_s);
inline jule::Bool _1ab6cb366_checkImportSelection(_1a7c56c14_sema* _self_, jule::Ptr<_1a7b69b05_Token>* _59440_ident, jule::Ptr<_1a7ba5ca6_Struct>* _59456_s);
inline jule::Bool _1ab6d0a1e_checkImportSelection(_1a7c56c14_sema* _self_, jule::Ptr<_1a7b69b05_Token>* _59440_ident, jule::Ptr<_1a7bce362_Trait>* _59456_s);
inline jule::Bool _1ab6d5183_checkImportSelection(_1a7c56c14_sema* _self_, jule::Ptr<_1a7b69b05_Token>* _59440_ident, jule::Ptr<_1a7bd1a6d_Enum>* _59456_s);
inline jule::Bool _1ab6d9583_checkImportSelection(_1a7c56c14_sema* _self_, jule::Ptr<_1a7b69b05_Token>* _59440_ident, jule::Ptr<_1a7bd3278_TypeEnum>* _59456_s);
inline jule::Bool _1ab6ddbe7_checkImportSelection(_1a7c56c14_sema* _self_, jule::Ptr<_1a7b69b05_Token>* _59440_ident, jule::Ptr<_1a7bba8d1_Fn>* _59456_s);
inline jule::Bool _1a7c5c17b_checkImportSelectedSelections(_1a7c56c14_sema* _self_, jule::Ptr<_1a7c36793_ImportInfo>* _60850_imp);
inline jule::Bool _1ab6e389a_checkImportsAllSelectionsFromCollection(_1a7c56c14_sema* _self_, jule::Slice<jule::Ptr<_1a7c7b178_Var>>* _65759_s, jule::Ptr<_1a7b69b05_Token>* _65768_et);
inline jule::Bool _1ab6e4a33_checkImportsAllSelectionsFromCollection(_1a7c56c14_sema* _self_, jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>* _65759_s, jule::Ptr<_1a7b69b05_Token>* _65768_et);
inline jule::Bool _1ab6e6ace_checkImportsAllSelectionsFromCollection(_1a7c56c14_sema* _self_, jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>>* _65759_s, jule::Ptr<_1a7b69b05_Token>* _65768_et);
inline jule::Bool _1ab6e99c2_checkImportsAllSelectionsFromCollection(_1a7c56c14_sema* _self_, jule::Slice<jule::Ptr<_1a7bba8d1_Fn>>* _65759_s, jule::Ptr<_1a7b69b05_Token>* _65768_et);
inline jule::Bool _1ab6ec6a6_checkImportsAllSelectionsFromCollection(_1a7c56c14_sema* _self_, jule::Slice<jule::Ptr<_1a7bce362_Trait>>* _65759_s, jule::Ptr<_1a7b69b05_Token>* _65768_et);
inline jule::Bool _1ab6eedc3_checkImportsAllSelectionsFromCollection(_1a7c56c14_sema* _self_, jule::Slice<jule::Ptr<_1a7bd1a6d_Enum>>* _65759_s, jule::Ptr<_1a7b69b05_Token>* _65768_et);
inline jule::Bool _1ab70259b_checkImportsAllSelectionsFromCollection(_1a7c56c14_sema* _self_, jule::Slice<jule::Ptr<_1a7bd3278_TypeEnum>>* _65759_s, jule::Ptr<_1a7b69b05_Token>* _65768_et);
inline jule::Bool _1a7c5c8b8_checkImportAllSelections(_1a7c56c14_sema* _self_, jule::Ptr<_1a7c36793_ImportInfo>* _66741_imp);
inline jule::Bool _1a7c5cc09_checkImportSelections(_1a7c56c14_sema* _self_, jule::Ptr<_1a7c36793_ImportInfo>* _68142_imp);
inline jule::Bool _1a7c5d04a_isUseAliasDuplication(_1a7c56c14_sema* _self_, jule::Ptr<_1a7c36793_ImportInfo>* _69038_imp);
inline jule::Bool _1a7c5d38b_checkImport(_1a7c56c14_sema* _self_, jule::Ptr<_1a7c36793_ImportInfo>* _70632_imp);
inline void _1a7c5d589_checkImports(_1a7c56c14_sema* _self_);
inline void _1a7c5d787_implFileImpls(jule::Ptr<_1a7c56c14_sema> _self_);
inline void _1a7c5d985_implImpls(jule::Ptr<_1a7c56c14_sema> _self_);
inline void _1a7c5db83_checkEnums(jule::Ptr<_1a7c56c14_sema> _self_);
inline void _1a7c5dd81_checkFileInherits(jule::Ptr<_1a7c56c14_sema> _self_);
inline void _1a7c5e07e_checkInherits(jule::Ptr<_1a7c56c14_sema> _self_);
inline _1a7d2e193_typeChecker _1a7c5e535_typeChecker(jule::Ptr<_1a7c56c14_sema> _self_, jule::Trait _79532_l, jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>> _79547_generics, jule::Ptr<_1a7d2d1a3_referencer> _7967_referencer);
inline jule::Ptr<_1a7d1bc96_TypeKind> _1a7c5ea96_buildTypeWithRefers(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7b800b0_TypeDecl>* _82241_t, jule::Trait _82264_l, jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>> _8237_generics, jule::Ptr<_1a7d2d1a3_referencer> _82335_referencer);
inline jule::Bool _1a7c60107_checkTypeWithRefers(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7d244a7_TypeSymbol>* _82941_t, jule::Trait _82961_l, jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>> _8307_generics, jule::Ptr<_1a7d2d1a3_referencer> _83035_referencer);
inline jule::Ptr<_1a7c0bd51_constraintChecker> _1a7c6038d_constraintChecker(jule::Ptr<_1a7c56c14_sema> _self_);
inline jule::Bool _1a7c60789_checkType(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7d244a7_TypeSymbol>* _84431_t, jule::Trait _84451_l);
inline jule::Ptr<_1a7d1bc96_TypeKind> _1a7c60c40_checkTypeRefers(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7b800b0_TypeDecl>* _84937_t, jule::Trait _84960_l, jule::Ptr<_1a7bc1a4c_ReferenceStack> _84975_refers);
inline jule::Ptr<_1a7d1bc96_TypeKind> _1a7c611e6_buildTypeWithGenerics(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7b800b0_TypeDecl>* _86143_t, jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>> _8627_generics, jule::Ptr<_1a7bc1a4c_ReferenceStack> _86235_refers);
inline jule::Ptr<_1a7d1bc96_TypeKind> _1a7c61878_selectType(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7b800b0_TypeDecl>* _87932_t);
inline jule::Ptr<_1a7cd5dd6_eval> _1a7c61d2e_evalpd(jule::Ptr<_1a7c56c14_sema> _self_, jule::Trait _89127_l, jule::Ptr<_1a7d1bc96_TypeKind> _89142_p, jule::Ptr<_1a7c7b178_Var> _89160_owner);
inline jule::Ptr<_1a7cd5dd6_eval> _1a7c6222a_evalp(jule::Ptr<_1a7c56c14_sema> _self_, jule::Trait _90626_l, jule::Ptr<_1a7d1bc96_TypeKind> _90641_p);
inline jule::Ptr<_1a7cd5dd6_eval> _1a7c6256b_eval(jule::Ptr<_1a7c56c14_sema> _self_, jule::Trait _91125_l);
inline jule::Bool _1a7c62b87_checkAssignType(jule::Ptr<_1a7c56c14_sema> _self_, jule::Bool _91532_destIsRef, jule::Ptr<_1a7d1bc96_TypeKind>* _91554_dest, jule::Ptr<_1a7cd41ae_Data>* _9168_d, jule::Ptr<_1a7b69b05_Token> _91622_errorToken, jule::Ptr<_1a7bc1a4c_ReferenceStack> _91646_refers);
inline jule::Bool _1a7c6313d__checkTypeCompatibility(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _95845_dest, jule::Ptr<_1a7d1bc96_TypeKind>* _95867_src, jule::Ptr<_1a7b69b05_Token> _9597_errorToken);
inline jule::Bool _1a7c635e4_checkTypeCompatibility(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _97644_dest, jule::Ptr<_1a7d1bc96_TypeKind>* _9778_src, jule::Ptr<_1a7b69b05_Token>* _97729_errorToken);
inline void _1a7c63a12_pushCompatiblityError(_1a7c56c14_sema* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _98542_dest, jule::Ptr<_1a7cd41ae_Data>* _98564_src, jule::Ptr<_1a7b69b05_Token>* _9868_errorToken);
inline jule::Bool _1a7c63eb8_checkTypeCompatibility1(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _100345_dest, jule::Ptr<_1a7cd41ae_Data>* _100367_src, jule::Ptr<_1a7b69b05_Token>* _10048_errorToken);
inline jule::Ptr<_1a7d1bc96_TypeKind> _1a7c6446e_buildNonGenericTypeKind(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7b800b0_TypeDecl>* _101845_ast, jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>>* _10198_generics, jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>* _101944_ignored);
inline jule::Bool _1a7c6486a_buildFnNonGenericTypeKinds(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bbd8b2_FnIns> _103047_f, jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>* _103063_ignored);
inline jule::Ptr<_1a7bbd8b2_FnIns> _1a7c64bab_getTraitCheckFnKind(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bba8d1_Fn>* _105341_f);
inline jule::Bool _1a7c65162_checkConstraintsFn(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _108240_f, jule::Ptr<_1a7b69b05_Token>* _108256_et, jule::Ptr<_1a7bbd8b2_FnIns> _108272_exist);
inline jule::Bool _1a7c65618_checkConstraintsStruct(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _109644_s, jule::Ptr<_1a7b69b05_Token>* _109664_et, jule::Ptr<_1a7ba8b11_StructIns> _109680_exist);
inline jule::Bool _1a7c65a14_basicFnEnvironment(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _111340_f, jule::Fn<jule::Bool,jule::Ptr<_1a7c56c14_sema>*> _111351_algo);
inline jule::Bool _1a7c65e10_fnEnvironment(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _113335_f, jule::Fn<jule::Bool,jule::Ptr<_1a7c56c14_sema>*,jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>*> _113346_algo);
inline void _1a7c661b8_checkFnParamKind(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bbc839_ParamIns>* _114538_p);
inline jule::Bool _1a7c66509_reloadFnInsTypes(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bbd8b2_FnIns> _115237_f);
inline jule::Bool _1a7c669b0_checkRefValidityForInitExpr(jule::Ptr<_1a7c56c14_sema> _self_, jule::Bool _119244_leftMut, jule::Ptr<_1a7cd41ae_Data>* _119264_d, jule::Ptr<_1a7b69b05_Token>* _119279_errorToken);
inline jule::Bool _1a7c66d01_isMutRiskyStruct(_1a7c56c14_sema* _self_, jule::Ptr<_1a7ba8b11_StructIns>* _120929_s);
inline jule::Bool _1a7c6741c_checkValidityForInitExpr(jule::Ptr<_1a7c56c14_sema> _self_, jule::Bool _123641_leftMut, jule::Bool _123656_leftRef, jule::Ptr<_1a7d1bc96_TypeKind>* _12374_leftKind, jule::Ptr<_1a7cd41ae_Data>* _123730_d, jule::Ptr<_1a7b69b05_Token>* _123745_errorToken);
inline jule::Bool _1a7c67818_checkTypeAliasDeclKind(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7d1aea4_TypeAlias>* _126444_ta, jule::Trait _126464_l);
inline void _1a7c67b7b_checkTypeAliasDecl(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7d1aea4_TypeAlias>* _128740_ta, jule::Trait _128760_l);
inline void _1a7c67e34_checkTypeAliasDeclDup(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7d1aea4_TypeAlias>* _129543_ta);
inline jule::Bool _1a7c681ba_checkTypeAliasDecls(jule::Ptr<_1a7c56c14_sema> _self_);
inline void _1ab7ad437_checkEnumItemsDup(_1a7c56c14_sema* _self_, jule::Slice<jule::Ptr<_1a7bd1001_EnumItem>> _131936_items);
inline void _1ab7bb478_checkEnumItemsDup(_1a7c56c14_sema* _self_, jule::Slice<jule::Ptr<_1a7bd2ba1_TypeEnumItem>> _131936_items);
inline void _1a7c6872b_checkEnumItemsStr(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bd1a6d_Enum>* _133939_e);
inline void _1ab78c416_checkEnumItemInt(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7cd5dd6_eval>* _136643_eval, jule::Ptr<_1a7bd1a6d_Enum>* _136661_e, jule::Ptr<_1a7d24dae_Prim>* _136672_prim, jule::Ptr<_1a7bd1001_EnumItem>* _136690_item, jule::U64* _1366112_n);
inline void _1ab79ce71_checkEnumItemInt(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7cd5dd6_eval>* _136643_eval, jule::Ptr<_1a7bd1a6d_Enum>* _136661_e, jule::Ptr<_1a7d24dae_Prim>* _136672_prim, jule::Ptr<_1a7bd1001_EnumItem>* _136690_item, jule::I64* _1366112_n);
inline void _1ab788599_checkEnumItemsInt1(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7d24dae_Prim>* _140241_prim, jule::Ptr<_1a7bd1a6d_Enum>* _140259_e);
inline void _1ab788885_checkEnumItemsInt1(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7d24dae_Prim>* _140241_prim, jule::Ptr<_1a7bd1a6d_Enum>* _140259_e);
inline void _1a7c693ca_checkEnumItemsInt(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bd1a6d_Enum>* _143739_e);
inline void _1a7c69683_checkEnumDecl(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bd1a6d_Enum>* _144735_e);
inline void _1a7c6993b_checkTypeEnumDecl(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bd3278_TypeEnum>* _148839_e);
inline jule::Bool _1a7c69bc2_checkEnumDecls(jule::Ptr<_1a7c56c14_sema> _self_);
inline jule::Bool _1a7c69e58_checkTypeEnumDecls(jule::Ptr<_1a7c56c14_sema> _self_);
inline jule::Bool _1a7c6a299_checkDeclGenerics(_1a7c56c14_sema* _self_, jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>>* _155134_generics);
inline jule::Bool _1a7c6a5da_checkFnDeclParamsDup(_1a7c56c14_sema* _self_, jule::Ptr<_1a7bba8d1_Fn>* _157837_f);
inline jule::Bool _1a7c6a92b_checkFnDeclResultDup(_1a7c56c14_sema* _self_, jule::Ptr<_1a7bba8d1_Fn>* _161537_f);
inline jule::Bool _1a7c6ac6c_checkFnVariadicParam(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bba8d1_Fn>* _166042_f);
inline void _1a7c6b025_checkFnDeclPrototype(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bba8d1_Fn>* _167342_f);
inline jule::Bool _1a7c6b4cb_catchTraitInheritCycle(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bce362_Trait> _169539_t1, jule::Ptr<_1a7bce362_Trait> _169555_t2, _1daed18b7_StrBuilder* _169572_message);
inline jule::Bool _1a7c6b81c__checkTraitDeclInherits(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bce362_Trait>* _171445_t);
inline void _1a7c6bac5_checkTraitDeclInherits(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bce362_Trait>* _175544_t);
inline void _1a7c6bd7d_checkTraitDeclMethod(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bba8d1_Fn>* _178042_f);
inline void _1a7c6c136_checkTraitDeclMethods(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bce362_Trait>* _179443_t);
inline void _1a7c6c3de_checkTraitDecl(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bce362_Trait>* _183036_t);
inline jule::Bool _1a7c6c675_checkTraitDecls(jule::Ptr<_1a7c56c14_sema> _self_);
inline jule::Bool _1a7c6ca71_checkTraitImplMethods(_1a7c56c14_sema* _self_, jule::Ptr<_1a7bce362_Trait>* _185442_base, jule::Ptr<_1a7c0e1a5_Impl>* _185457_ipl);
inline jule::Bool _1a7c6ce6c_implToStruct(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba5ca6_Struct>* _186534_dest, jule::Ptr<_1a7c0e1a5_Impl>* _186554_ipl);
inline void _1a7c6d225_implTrait(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7c0e1a5_Impl>* _190731_decl);
inline void _1a7c6d4cd_implStruct(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7c0e1a5_Impl>* _195032_decl);
inline void _1a7c6d786_implImpl(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7c0e1a5_Impl>* _197430_decl);
inline void _1a7c6dae9_checkVarDecl(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7c7b178_Var>* _198534_decl, jule::Trait _198550_l);
inline void _1a7c6dda2_checkGlobalVarDecl(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7c7b178_Var>* _203140_decl);
inline jule::Bool _1a7c6e138_checkGlobalDecls(jule::Ptr<_1a7c56c14_sema> _self_);
inline jule::Bool _1a7c6e534_checkStructTraitImpl(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba5ca6_Struct>* _205942_strct, jule::Ptr<_1a7bce362_Trait>* _205963_trt);
inline jule::Bool _1a7c6e875_checkStructImpls(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba5ca6_Struct>* _208538_s);
inline jule::Bool _1a7c6ebb6_checkStructFields(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba5ca6_Struct>* _209339_st);
inline void _1a7c6ee6e_checkStructDecl(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba5ca6_Struct>* _211037_s);
inline jule::Bool _1a7c70205_checkStructDecls(jule::Ptr<_1a7c56c14_sema> _self_);
inline void _1a7c704ad_checkAnonFuncDecl(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bba8d1_Fn>* _214039_f);
inline void _1a7c70766_checkFuncDecl(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bba8d1_Fn>* _214535_f);
inline jule::Bool _1a7c70aa7_checkFuncDeclsBy(jule::Ptr<_1a7c56c14_sema> _self_, jule::Slice<jule::Ptr<_1a7bba8d1_Fn>>* _216738_funcs);
inline jule::Bool _1a7c70d3d_checkFuncDecls(jule::Ptr<_1a7c56c14_sema> _self_);
inline void _1a7c7125b_pushCycleError(_1a7c56c14_sema* _self_, jule::Str* _218327_st1, jule::Str* _218338_st2, _1daed18b7_StrBuilder* _218353_message);
inline void _1a7c71910_checkPackageDecls(jule::Ptr<_1a7c56c14_sema> _self_);
inline void _1a7c71c73_checkDataForTypeInference(_1a7c56c14_sema* _self_, jule::Ptr<_1a7cd41ae_Data>* _224342_d, jule::Ptr<_1a7b69b05_Token>* _224353_err_token);
inline void _1a7c7202b_checkVarValue(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7c7b178_Var>* _225535_v);
inline void _1a7c7238e_evalVarValue(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7c7b178_Var>* _230834_decl, jule::Trait _230850_l);
inline void _1a7c72702_checkVar(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7c7b178_Var>* _232530_decl, jule::Trait _232546_l);
inline void _1a7c72900_checkGlobals(jule::Ptr<_1a7c56c14_sema> _self_);
inline jule::Ptr<_1a7bbd8b2_FnIns> _1a7c72ceb_readyToCheckFn(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _234936_s, jule::Ptr<_1a7bba8d1_Fn>* _234956_f);
inline __jule_tuple_bool__jule_tuple_bool _1a7c731e7_checkGenericFn(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _236536_f, jule::Ptr<_1a7b69b05_Token>* _236552_et);
inline void _1a7c7355a_checkTypeMethod(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _238837_s, jule::Ptr<_1a7bba8d1_Fn>* _238857_f);
inline jule::Ptr<_1a7bbd8b2_FnIns> _1a7c73a11_checkStructInsOp(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _240138_s, jule::Ptr<_1a7bba8d1_Fn>* _240158_f, jule::Fn<jule::Bool,jule::Ptr<_1a7bba8d1_Fn>> _240166_p);
inline jule::Bool _1a7c73e0c_checkStructEnv(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _241136_s, jule::Ptr<_1a7b69b05_Token> _241155_errorToken);
inline jule::Bool _1a7c74308_precheckStructIns(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _250839_s, jule::Ptr<_1a7b69b05_Token> _250858_errorToken);
inline void _1a7c745b1_checkStructIns(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _254536_s);
inline void _1a7c74869_checkTypeStruct(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba5ca6_Struct>* _255137_s);
inline void _1a7c74a67_checkStructTypes(jule::Ptr<_1a7c56c14_sema> _self_);
inline void _1a7c74d20_checkStructInsOperators(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba8b11_StructIns> _257544_s);
inline void _1a7c750c8_precheckStructType(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba5ca6_Struct>* _263940_s);
inline void _1a7c752c6_precheckStructTypes(jule::Ptr<_1a7c56c14_sema> _self_);
inline void _1a7c7557e_checkRets(_1a7c56c14_sema* _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _266530_f);
inline void _1a7c758e2_checkFnInsSc(_1a7c56c14_sema* _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _267633_f, jule::Ptr<_1a7c1ac1c_scopeChecker>* _267649_sc);
inline void _1a7c75c55_checkFnInsCaller(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _268938_f, jule::Ptr<_1a7b69b05_Token> _268953_caller);
inline void _1a7c7600d_checkFnIns(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _271132_f);
inline void _1a7c762b6_checkFunc(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bba8d1_Fn>* _271531_f);
inline void _1a7c7656e_checkTestFn(_1a7c56c14_sema* _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _273032_f);
inline void _1a7c76827_precheckFunc(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bba8d1_Fn>* _276334_f);
inline void _1a7c76a25_precheckFuncs(jule::Ptr<_1a7c56c14_sema> _self_);
inline void _1a7c76c23_checkFuncs(jule::Ptr<_1a7c56c14_sema> _self_);
inline void _1a7c76e21_checkPackageTypes(jule::Ptr<_1a7c56c14_sema> _self_);
inline void _1a7c7711e_setFileSemaFields(jule::Ptr<_1a7c56c14_sema> _self_);
inline void _1a7c7731c_setSemaFields(jule::Ptr<_1a7c56c14_sema> _self_);
inline void _1a7c775c5_check(jule::Ptr<_1a7c56c14_sema> _self_, jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>* _284127_files);
inline _1a7c779c1_missingRetChecker static__1a7c77dbc_new(void);
inline jule::Bool _1a7c781ca_checkConditional(_1a7c779c1_missingRetChecker* _self_, jule::Ptr<_1a7c145b7_Conditional> _288932_c);
inline jule::Bool _1a7c7851b_checkMatch(_1a7c779c1_missingRetChecker* _self_, jule::Ptr<_1a7c181ae_Match> _290126_m);
inline jule::Bool _1a7c78917_checkInfIter(_1a7c779c1_missingRetChecker* _self_, jule::Uintptr _292724_it, jule::Ptr<_1a7c1397e_Scope>* _292742_s);
inline jule::Bool _1a7c78c58_checkScope(_1a7c779c1_missingRetChecker* _self_, jule::Ptr<_1a7c1397e_Scope> _294526_s);
inline jule::Bool _1a7c79099_check(_1a7c779c1_missingRetChecker* _self_, jule::Ptr<_1a7c1397e_Scope> _300021_s);
inline jule::Bool _1a7c7b585_IsInitialized(_1a7c7b178_Var* _self_);
inline jule::Bool _1a7c7b81b_IsTypeInferred(_1a7c7b178_Var* _self_);
inline jule::Bool _1a7c7baa2_untypedConstant(_1a7c7b178_Var* _self_);
inline jule::Bool static__1a7c7c773_Dispose(jule::Ptr<_1a7bba8d1_Fn> _1020_f);
inline jule::Bool static__1a7c7ca3c_Str(jule::Ptr<_1a7bba8d1_Fn> _2416_f);
inline jule::Bool static__1a7c7cdb1_logical(jule::Ptr<_1a7bba8d1_Fn>* _4621_f, jule::Str _4629_ident);
inline jule::Bool static__1a7c7d17a_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _7215_f);
inline jule::Bool static__1a7c7d444_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _7715_f);
inline jule::Bool static__1a7c7d70d_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _8217_f);
inline jule::Bool static__1a7c7d9c7_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _8715_f);
inline jule::Bool static__1a7c7dc91_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _9217_f);
inline jule::Bool static__1a7c7e115_result(jule::Ptr<_1a7bba8d1_Fn>* _9620_f, jule::Str _9628_ident);
inline jule::Bool static__1a7c7e3ce_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _11816_f);
inline jule::Bool static__1a7c7e698_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _12316_f);
inline jule::Bool static__1a7c7e962_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _12816_f);
inline jule::Bool static__1a7c7ec2b_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _13316_f);
inline jule::Bool static__1a7c7eee5_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _13816_f);
inline jule::Bool static__1a7c802ae_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _14316_f);
inline jule::Bool static__1a7c80578_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _14816_f);
inline jule::Bool static__1a7c80842_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _15319_f);
inline jule::Bool static__1a7c80b0b_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _15818_f);
inline jule::Bool static__1a7c80dc5_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _16319_f);
inline jule::Bool static__1a7c81249_unary(jule::Ptr<_1a7bba8d1_Fn>* _16719_f, jule::Str _16727_ident);
inline jule::Bool static__1a7c81513_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _18716_f);
inline jule::Bool static__1a7c817cc_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _19216_f);
inline jule::Bool static__1a7c81a96_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _19719_f);
inline jule::Bool static__1a7c81e1a_assign(jule::Ptr<_1a7bba8d1_Fn>* _20120_f, jule::Str _20128_ident);
inline jule::Bool static__1a7c821d4_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _22122_f);
inline jule::Bool static__1a7c8249d_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _22622_f);
inline jule::Bool static__1a7c82767_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _23122_f);
inline jule::Bool static__1a7c82a31_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _23622_f);
inline jule::Bool static__1a7c82cea_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _24122_f);
inline jule::Bool static__1a7c830b4_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _24622_f);
inline jule::Bool static__1a7c8337d_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _25122_f);
inline jule::Bool static__1a7c83647_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _25624_f);
inline jule::Bool static__1a7c83911_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _26125_f);
inline jule::Bool static__1a7c83bca_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _26625_f);
inline void _1a7cbae76_pushErr(_1a7cba948_typeCompatibilityChecker* _self_, jule::Str _11923_fmt, jule::Slice<jule::Any> _11936_args);
inline jule::Bool _1a7cbb20c_checkTrait(_1a7cba948_typeCompatibilityChecker* _self_);
inline jule::Bool _1a7cbb493_checkPtr(_1a7cba948_typeCompatibilityChecker* _self_);
inline jule::Bool _1a7cbb729_checkPrim(_1a7cba948_typeCompatibilityChecker* _self_);
inline jule::Bool _1a7cbbb25_typeEnum(_1a7cba948_typeCompatibilityChecker* _self_, jule::Ptr<_1a7bd3278_TypeEnum>* _19925_e, jule::Ptr<_1a7d1bc96_TypeKind>* _19944_t2);
inline jule::Bool _1a7cbbdab_checkTypeEnum(_1a7cba948_typeCompatibilityChecker* _self_);
inline jule::Bool _1a7cbc142_check(_1a7cba948_typeCompatibilityChecker* _self_);
inline void _1a7cbcc8b_pushErr(_1a7cbc7c4_assignTypeChecker* _self_, jule::Str _25623_fmt, jule::Slice<jule::Any> _25636_args);
inline jule::Bool _1a7cbd022_checkValidity(_1a7cbc7c4_assignTypeChecker* _self_);
inline jule::Bool _1a7cbd2a8_checkConst(_1a7cbc7c4_assignTypeChecker* _self_);
inline jule::Bool _1a7cbd53e_checkCompatibility(_1a7cbc7c4_assignTypeChecker* _self_);
inline jule::Bool _1a7cbd7c5_check(_1a7cbc7c4_assignTypeChecker* _self_);
inline jule::Bool _1ab9ab998_annotateConstraintElem(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _35846_k);
inline jule::Bool _1ab9ab206_annotateConstraintElem(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _35846_k);
inline jule::Bool _1ab9b4033_annotateConstraintElem(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _35846_k);
inline jule::Bool _1ab9bb1c2_annotateConstraintElem(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _35846_k);
inline jule::Bool _1a7cbeac3_annotateConstraintMap(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _37842_k);
inline jule::Bool _1a7cbee14_annotateConstraintTup(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _39342_k);
inline jule::Bool _1a7cc0255_annotateConstraintFn(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _41041_k);
inline jule::Bool _1a7cc0596_annotateConstraintIdent(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _43144_k);
inline jule::Bool _1a7cc08d7_annotateConstraint(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _46039_k);
inline void _1a7cc0c4a_pushGeneric(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _48532_k, jule::I64 _48546_i);
inline jule::Bool _1a7cc108b_annotatePrim(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _50040_k);
inline jule::Bool _1a7cc13cc_annotateArr(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _50439_k);
inline jule::Bool _1a7cc171d_annotateSlc(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _51439_k);
inline jule::Bool _1a7cc1b19_checkMapKey(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _52438_k, jule::Ptr<_1a7d1bc96_TypeKind>* _52458_ck);
inline jule::Bool _1a7cc1e5a_annotateMap(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _53239_k);
inline jule::Bool _1a7cc229b_annotateFn(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _54238_k);
inline jule::Bool _1a7cc25dc_annotatePtr(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _57139_k);
inline jule::Bool _1a7cc292d_annotateSptr(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _58140_k);
inline jule::Bool _1a7cc2c6e_annotateStruct(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _59142_k);
inline jule::Bool _1a7cc30b0_annotateAny(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _61339_k);
inline jule::Bool _1a7cc3401_annotateKind(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _63440_k);
inline jule::Bool _1a7cc3687_annotate(_1a7cbe199_dynamicTypeAnnotation* _self_);
inline void _1a7cc459a_pushErrToken(_1a7cc4006_fnCallArgChecker* _self_, jule::Ptr<_1a7b69b05_Token> _67928_token, jule::Str _67943_fmt, jule::Slice<jule::Any> _67956_args);
inline void _1a7cc490d_pushErr(_1a7cc4006_fnCallArgChecker* _self_, jule::Str _68323_fmt, jule::Slice<jule::Any> _68336_args);
inline jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>> _1a7cc4b94_getParams(_1a7cc4006_fnCallArgChecker* _self_);
inline jule::Bool _1a7cc4ed5_checkCounts(_1a7cc4006_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>* _69628_params);
inline jule::Bool _1a7cc548b_checkArg(_1a7cc4006_fnCallArgChecker* _self_, jule::Ptr<_1a7bbc839_ParamIns>* _72829_p, jule::Ptr<_1a7cd41ae_Data>* _72848_arg, jule::Ptr<_1a7b69b05_Token>* _72865_errorToken);
inline jule::Bool _1a7cc5887_push(_1a7cc4006_fnCallArgChecker* _self_, jule::Ptr<_1a7bbc839_ParamIns>* _75725_p, jule::Ptr<_1a7b89251_Expr> _75743_arg);
inline jule::Bool _1a7cc5c83_pushVariadic(_1a7cc4006_fnCallArgChecker* _self_, jule::Ptr<_1a7bbc839_ParamIns>* _78133_p, jule::I64 _78151_i);
inline jule::Bool _1a7cc60c4_checkArgs(_1a7cc4006_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>* _86230_params);
inline jule::Bool _1a7cc635a_checkDynamicTypeAnnotation(_1a7cc4006_fnCallArgChecker* _self_);
inline jule::Bool _1a7cc65e1_check(_1a7cc4006_fnCallArgChecker* _self_);
inline void _1a7cc74c1_pushErr(_1a7cc6e3d_structLitChecker* _self_, jule::Ptr<_1a7b69b05_Token> _94223_token, jule::Str _94238_fmt, jule::Slice<jule::Any> _94251_args);
inline void _1a7cc7834_pushSuggestion(_1a7cc6e3d_structLitChecker* _self_, jule::Str _94730_fmt, jule::Slice<jule::Any> _94743_args);
inline void _1a7cc7c52_pushMatch(_1a7cc6e3d_structLitChecker* _self_, jule::Ptr<_1a7ba8061_FieldIns>* _95130_f, jule::Ptr<_1a7cd41ae_Data>* _95149_d, jule::Ptr<_1a7b69b05_Token>* _95164_errorToken);
inline void _1a7cc80b5_checkPair(_1a7cc6e3d_structLitChecker* _self_, jule::Ptr<_1a7b8d970_FieldExprPair>* _97030_pair, jule::Slice<jule::Ptr<_1a7b89251_Expr>>* _97057_exprs);
inline jule::Bool _1a7cc8406_readyExprs(_1a7cc6e3d_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a7b89251_Expr>>* _100931_exprs);
inline void _1a7cc86ae_check(_1a7cc6e3d_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a7b89251_Expr>>* _103326_exprs);
inline jule::Ptr<_1a7c7b178_Var> _1a7cc923c_buildVar(_1a7cc8c20_rangeChecker* _self_, jule::Ptr<_1a7b97c87_VarDecl>* _110925_decl);
inline void _1a7cc943a_setSizeKey(_1a7cc8c20_rangeChecker* _self_);
inline void _1a7cc9858_checkRangeExprValidity(_1a7cc8c20_rangeChecker* _self_, jule::Ptr<_1a7cd41ae_Data>* _112843_d, jule::Ptr<_1a7c7b178_Var>* _112854_key, jule::Ptr<_1a7d1bc96_TypeKind>* _112870_k);
inline void _1a7cc9a56_checkSlice(_1a7cc8c20_rangeChecker* _self_);
inline void _1a7cc9c54_checkArray(_1a7cc8c20_rangeChecker* _self_);
inline void _1a7cc9e52_checkMapKeyA(_1a7cc8c20_rangeChecker* _self_);
inline void _1a7cca150_checkMapKeyB(_1a7cc8c20_rangeChecker* _self_);
inline void _1a7cca34d_checkMap(_1a7cc8c20_rangeChecker* _self_);
inline void _1a7cca54b_checkStr(_1a7cc8c20_rangeChecker* _self_);
inline void _1a7cca749_checkComptime(_1a7cc8c20_rangeChecker* _self_);
inline jule::Bool _1a7cca9d0_checkComptimeRange(_1a7cc8c20_rangeChecker* _self_);
inline jule::Bool _1a7ccac66_check(_1a7cc8c20_rangeChecker* _self_);
inline void _1a7ccb8e3_prepareTypes(_1a7ccb481_retTypeChecker* _self_);
inline void _1a7ccbb9b_prepareExprs(_1a7ccb481_retTypeChecker* _self_, jule::Ptr<_1a7b89251_Expr>* _128733_e);
inline void _1a7ccbd99_checkExprs(_1a7ccb481_retTypeChecker* _self_);
inline jule::Bool _1a7ccc130_tryFuncMultiRetForward(_1a7ccb481_retTypeChecker* _self_);
inline jule::Bool _1a7ccc471_check(_1a7ccb481_retTypeChecker* _self_, jule::Ptr<_1a7b89251_Expr>* _138926_e);
inline jule::Ptr<_1a7c36793_ImportInfo> _1a7cce011_SelectPackage(_1a7ccd9e4_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7c36793_ImportInfo>> _2729_selector);
inline jule::Ptr<_1a7c7b178_Var> _1a7cce40c_FindVar(_1a7ccd9e4_SymbolTable* _self_, jule::Str _4123_ident, jule::Bool _4135_binded);
inline jule::Ptr<_1a7d1aea4_TypeAlias> _1a7cce808_FindTypeAlias(_1a7ccd9e4_SymbolTable* _self_, jule::Str _4729_ident, jule::Bool _4741_binded);
inline jule::Ptr<_1a7ba5ca6_Struct> _1a7ccec04_FindStruct(_1a7ccd9e4_SymbolTable* _self_, jule::Str _5326_ident, jule::Bool _5338_binded);
inline jule::Ptr<_1a7bba8d1_Fn> _1a7cd0100_FindFn(_1a7ccd9e4_SymbolTable* _self_, jule::Str _6422_ident, jule::Bool _6434_binded);
inline jule::Ptr<_1a7bce362_Trait> _1a7cd0441_FindTrait(_1a7ccd9e4_SymbolTable* _self_, jule::Str _7525_ident);
inline jule::Ptr<_1a7bd1a6d_Enum> _1a7cd0782_FindEnum(_1a7ccd9e4_SymbolTable* _self_, jule::Str _8624_ident);
inline jule::Ptr<_1a7bd3278_TypeEnum> _1a7cd0ac3_FindTypeEnum(_1a7ccd9e4_SymbolTable* _self_, jule::Str _9728_ident);
inline jule::I64 _1a7cd108a_findVar1(_1a7ccd9e4_SymbolTable* _self_, jule::Ptr<_1a7c7b178_Var>* _10825_v);
inline jule::Ptr<_1a7c7b178_Var> _1a7cd1541_findVar(_1a7ccd9e4_SymbolTable* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse);
inline jule::Ptr<_1a7d1aea4_TypeAlias> _1a7cd19e7_findTypeAlias(_1a7ccd9e4_SymbolTable* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse);
inline jule::Any _1a7cd1de3_defByIdent(_1a7ccd9e4_SymbolTable* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded);
inline jule::Bool _1a7cd2399_isDuplicatedIdent(_1a7ccd9e4_SymbolTable* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded);
inline jule::Bool _1a7cd45cc_IsNil(_1a7cd41ae_Data* _self_);
inline jule::Bool _1a7cd4863_IsVoid(_1a7cd41ae_Data* _self_);
inline jule::Bool _1a7cd4ae9_IsConst(_1a7cd41ae_Data* _self_);
inline jule::Bool _1a7cd4e3a_GoodOperand(_1a7cd41ae_Data* _self_, jule::Ptr<_1a7cd41ae_Data>* _10628_other);
inline void _1a7cd6469_pushErr(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _13723_token, jule::Str _13738_fmt, jule::Slice<jule::Any> _13751_args);
inline void _1a7cd67cc_pushSuggestion(_1a7cd5dd6_eval* _self_, jule::Str _14230_fmt, jule::Slice<jule::Any> _14243_args);
inline void _1a7cd69ca_allowBuiltin(_1a7cd5dd6_eval* _self_);
inline void _1a7cd6bc8_disallowBuiltin(_1a7cd5dd6_eval* _self_);
inline jule::Bool _1a7cd6e5e_isUnsafe(_1a7cd5dd6_eval* _self_);
inline jule::Bool _1a7cd71e5_isGlobal(_1a7cd5dd6_eval* _self_);
inline jule::Bool _1a7cd7503_applyNumericPrefix(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _16939_d);
inline jule::Ptr<_1a7cd41ae_Data> _1a7cd7844_litStr(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b8a1db_LitExpr>* _20419_l);
inline jule::Ptr<_1a7cd41ae_Data> _1a7cd7b85_litRune(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b8a1db_LitExpr>* _22120_l);
inline jule::Ptr<_1a7cd41ae_Data> _1a7cd7ec6_litFloat(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b8a1db_LitExpr>* _24021_l);
inline jule::Ptr<_1a7cd41ae_Data> _1a7cd8317_litInt(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b8a1db_LitExpr>* _25223_l);
inline jule::Ptr<_1a7cd41ae_Data> _1a7cd8658_litNum(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b8a1db_LitExpr>* _30723_l);
inline jule::Ptr<_1a7cd41ae_Data> _1a7cd8999_evalLit(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b8a1db_LitExpr> _31623_lit);
inline jule::Any _1a7cd8cda_findBuiltins(_1a7cd5dd6_eval* _self_, jule::Str* _32929_ident);
inline jule::Any _1a7cd91d6_getDef(_1a7cd5dd6_eval* _self_, jule::Str* _35623_ident, jule::Bool _35635_binded);
inline jule::Ptr<_1a7bc1a4c_ReferenceStack> _1a7cd946c_getOwnerRefers(_1a7cd5dd6_eval* _self_);
inline void _1abb75876_pushReference(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _41437_ref);
inline void _1abb8bbbc_pushReference(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7c7b178_Var>* _41437_ref);
inline void _1aa7c5928_pushReference(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7ba8b11_StructIns>* _41437_ref);
inline jule::Ptr<_1a7cd41ae_Data> _1a7cd9a66__evalEnum(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bd1a6d_Enum> _42125_enm);
inline jule::Ptr<_1a7cd41ae_Data> _1a7cd9e62_evalEnum(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bd1a6d_Enum> _43028_enm, jule::Ptr<_1a7b69b05_Token> _43040_errorToken);
inline jule::Ptr<_1a7cd41ae_Data> _1a7cda2a3__evalTypeEnum(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bd3278_TypeEnum> _43929_enm);
inline jule::Ptr<_1a7cd41ae_Data> _1a7cda69e_evalTypeEnum(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bd3278_TypeEnum> _44832_enm, jule::Ptr<_1a7b69b05_Token> _44848_errorToken);
inline jule::Ptr<_1a7cd41ae_Data> _1a7cda9e0__evalStruct(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7ba8b11_StructIns> _45727_s);
inline jule::Ptr<_1a7cd41ae_Data> _1a7cdaddb_evalStruct(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7ba5ca6_Struct> _47130_s, jule::Ptr<_1a7b69b05_Token> _47146_errorToken);
inline jule::Ptr<_1a7cd41ae_Data> _1a7cdb22c_evalFnIns(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bbd8b2_FnIns> _50025_f);
inline void _1a7ce13ec_checkDeprecated(_1a7cd5dd6_eval* _self_, jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>* _50936_directives, jule::Ptr<_1a7b69b05_Token> _50967_tok);
inline jule::Ptr<_1a7cd41ae_Data> _1a7ce17e8_evalFn(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bba8d1_Fn> _52526_f, jule::Ptr<_1a7b69b05_Token> _52534_errorToken);
inline void _1a7ce1c16_pushIllegalCycleError(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7c7b178_Var>* _55038_v1, jule::Ptr<_1a7c7b178_Var>* _55049_v2, _1daed18b7_StrBuilder* _55064_message);
inline jule::Bool _1a7ce2112_checkCrossCycle(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7c7b178_Var>* _56032_v, _1daed18b7_StrBuilder* _56046_message);
inline jule::Bool _1a7ce250d_checkIllegalCycles(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7c7b178_Var>* _57739_v, jule::Ptr<_1a7b69b05_Token> _57748_declToken);
inline jule::Ptr<_1a7cd41ae_Data> _1a7ce2909_evalVar(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7c7b178_Var> _60527_v, jule::Ptr<_1a7b69b05_Token> _60536_errorToken);
inline jule::Ptr<_1a7cd41ae_Data> _1a7ce2d05_evalTypeAlias(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7d1aea4_TypeAlias> _72633_ta, jule::Ptr<_1a7b69b05_Token> _72649_errorToken);
inline jule::Ptr<_1a7cd41ae_Data> _1a7ce3201_evalDef(_1a7cd5dd6_eval* _self_, jule::Any* _76528_def, jule::Ptr<_1a7b69b05_Token> _76542_ident);
inline jule::Ptr<_1a7cd41ae_Data> _1a7ce3542_evalIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b8aa6b_IdentExpr> _78929_ident);
inline jule::Ptr<_1a7cd41ae_Data> _1a7ce3883_evalUnary(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8b30d_UnaryExpr> _79430_u);
inline jule::Ptr<_1a7cd41ae_Data> _1a7ce3bc4_evalVariadic(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8b6d7_VariadicExpr> _79933_v);
inline jule::Ptr<_1a7cd41ae_Data> _1a7ce4015_evalUnsafe(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8a5b5_UnsafeExpr> _82131_u);
inline jule::Ptr<_1a7cd41ae_Data> _1a7ce4356_evalArr(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b907a7_SliceExpr> _82928_s);
inline jule::Ptr<_1a7cd41ae_Data> _1a7ce480c_evalExpSlc(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b907a7_SliceExpr> _90631_s, jule::Ptr<_1a7d1bc96_TypeKind> _90650_t, jule::Any _90668_first);
inline jule::Ptr<_1a7cd41ae_Data> _1a7ce4b4d_evalSliceExpr(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b907a7_SliceExpr> _94434_s);
inline jule::Bool _1a7ce5049_checkIntegerIndexingByData(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _98047_d, jule::Ptr<_1a7b69b05_Token> _98061_token);
inline void _1a7ce5467_indexingPtr(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _99332_d, jule::Ptr<_1a7cd41ae_Data>* _99347_index, jule::Ptr<_1a7b91214_IndexingExpr>* _99366_i);
inline void _1a7ce5885_indexingArr(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _100932_d, jule::Ptr<_1a7cd41ae_Data>* _100947_index, jule::Ptr<_1a7b91214_IndexingExpr>* _100966_i);
inline void _1a7ce5ca3_indexingSlc(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _101932_d, jule::Ptr<_1a7cd41ae_Data>* _101947_index, jule::Ptr<_1a7b91214_IndexingExpr>* _101966_i);
inline void _1a7ce61c1_indexingMap(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _104232_d, jule::Ptr<_1a7cd41ae_Data>* _104247_index, jule::Ptr<_1a7b91214_IndexingExpr>* _104266_i);
inline void _1a7ce65de_indexingStr(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _105932_d, jule::Ptr<_1a7cd41ae_Data>* _105947_index, jule::Ptr<_1a7b91214_IndexingExpr>* _105966_i);
inline void _1a7ce6a0c_comptimeRange(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _108834_d, jule::Ptr<_1a7cd41ae_Data>* _108849_index, jule::Ptr<_1a7b91214_IndexingExpr>* _108868_i);
inline void _1a7ce6e2a_toIndexing(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _111331_d, jule::Ptr<_1a7cd41ae_Data>* _111346_index, jule::Ptr<_1a7b91214_IndexingExpr>* _111365_i);
inline jule::Bool _1a7ce73d1_pushGenericsFromExprSubIdent(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8c364_SubIdentExpr>* _114150_sexpr, jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>>* _11428_generics, jule::Ptr<_1a7b89251_Expr>* _114236_expr);
inline jule::Bool _1a7ce77cc_pushGenericsFromData(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>>* _115242_generics, jule::Ptr<_1a7b89251_Expr>* _115270_expr);
inline void _1a7ce7b40_evalIdentDeclFromIndexing(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7cd41ae_Data>* _122247_d, jule::Ptr<_1a7b91214_IndexingExpr>* _122262_i);
inline __jule_tuple_bool__jule_tuple_bool _1a7ce80e6_checkGenericFn(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _126536_f, jule::Ptr<_1a7b69b05_Token>* _126552_et, jule::Any* _126569_model);
inline void _1a7ce8459_evalFnGenericFromIndexing(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7cd41ae_Data>* _128147_d, jule::Ptr<_1a7b91214_IndexingExpr>* _128162_i);
inline jule::Ptr<_1a7cd41ae_Data> _1a7ce879a_evalIndexing(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b91214_IndexingExpr> _132133_i);
inline __jule_tuple_x_1a7cd41ae_Data__jule_tuple_x_1a7cd41ae_Data _1a7ce8adb_evalSlicingExprs(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b91874_SlicingExpr>* _138138_s);
inline void _1a7ce8d94_slicingArr(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _141727_d);
inline void _1a7ce92b2_slicingStr(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _143227_d, jule::Ptr<_1a7cd41ae_Data>* _143238_l, jule::Ptr<_1a7cd41ae_Data>* _143249_r);
inline void _1a7ce978a_checkSlicing(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _147033_d, jule::Ptr<_1a7cd41ae_Data>* _147044_l, jule::Ptr<_1a7cd41ae_Data>* _147055_r, jule::Ptr<_1a7b91874_SlicingExpr>* _147066_s);
inline jule::Ptr<_1a7cd41ae_Data> _1a7ce9acb_evalSlicing(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b91874_SlicingExpr> _148932_s);
inline void _1a7ce9ee9_castPtr(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7d1bc96_TypeKind> _152627_t, jule::Ptr<_1a7cd41ae_Data> _152645_d, jule::Ptr<_1a7b69b05_Token> _152655_errorToken);
inline void _1a7cea417_castStruct(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7d1bc96_TypeKind> _154830_t, jule::Ptr<_1a7cd41ae_Data> _154848_d, jule::Ptr<_1a7b69b05_Token> _154858_errorToken);
inline void _1a7cea835_castRef(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7d1bc96_TypeKind> _156527_t, jule::Ptr<_1a7cd41ae_Data> _156545_d, jule::Ptr<_1a7b69b05_Token> _156555_errorToken);
inline void _1a7ceac53_castSlc(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7d1bc96_TypeKind> _158827_t, jule::Ptr<_1a7cd41ae_Data> _158845_d, jule::Ptr<_1a7b69b05_Token> _158855_errorToken);
inline void _1a7ceb0b6_castStr(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data> _164327_d, jule::Ptr<_1a7b69b05_Token> _164337_errorToken);
inline void _1a7ceb4d4_castInt(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7d1bc96_TypeKind> _169027_t, jule::Ptr<_1a7cd41ae_Data> _169045_d, jule::Ptr<_1a7b69b05_Token> _169055_errorToken);
inline void _1a7ceb902_castNum(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7d1bc96_TypeKind> _173627_t, jule::Ptr<_1a7cd41ae_Data> _173645_d, jule::Ptr<_1a7b69b05_Token> _173655_errorToken);
inline void _1a7cebd20_castPrim(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7d1bc96_TypeKind> _176728_t, jule::Ptr<_1a7cd41ae_Data> _176746_d, jule::Ptr<_1a7b69b05_Token> _176756_errorToken);
inline void _1a7cec183_castConstant(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _178533_t, jule::Ptr<_1a7cd41ae_Data>* _178552_d);
inline void _1a7cec5a1_castTypeEnum(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _179433_t, jule::Ptr<_1a7cd41ae_Data>* _179452_d, jule::Ptr<_1a7b69b05_Token>* _179467_errorToken);
inline void _1a7cec9be_castTypeEnumT(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _180434_t, jule::Ptr<_1a7cd41ae_Data>* _180453_d, jule::Ptr<_1a7b69b05_Token>* _180468_errorToken);
inline jule::Ptr<_1a7cd41ae_Data> _1a7cece75_evalCastByTypeNData(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7d1bc96_TypeKind> _181439_t, jule::Ptr<_1a7cd41ae_Data> _181457_d, jule::Ptr<_1a7b69b05_Token> _181471_errorToken);
inline jule::Ptr<_1a7cd41ae_Data> _1a7ced42b_evalCastT(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _188731_t, jule::Ptr<_1a7b89251_Expr>* _188750_e, jule::Ptr<_1a7b69b05_Token>* _188765_et);
inline jule::Ptr<_1a7cd41ae_Data> _1a7ced76c_evalCast(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8bab1_CastExpr> _190429_c);
inline jule::Ptr<_1a7cd41ae_Data> _1a7cedaad_evalNsSelection(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b8be8a_NsSelectionExpr> _191335_s);
inline jule::Ptr<_1a7cd41ae_Data> _1a7cee064_evalStructLitExplicit(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7ba8b11_StructIns> _193942_s, jule::Slice<jule::Ptr<_1a7b89251_Expr>> _19407_exprs, jule::Ptr<_1a7b69b05_Token> _194027_errorToken);
inline jule::Ptr<_1a7cd41ae_Data> _1a7cee3a5_evalStructLit(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8e29a_StructLit> _197734_lit);
inline _1a7d2e193_typeChecker _1a7cee63b_typeChecker(_1a7cd5dd6_eval* _self_);
inline jule::Ptr<_1a7cd41ae_Data> _1a7cee97c_evalType(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b800b0_TypeDecl> _200928_t);
inline void _1a7ceece0_callTypeFn(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _202232_fc, jule::Ptr<_1a7cd41ae_Data>* _202254_d);
inline void _1a7d00153_callBuiltinFn(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _204835_fc, jule::Ptr<_1a7cd41ae_Data>* _204857_d);
inline void _1a7d004b6_checkFnOfConcurrentCall(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _206040_f, jule::Ptr<_1a7b69b05_Token> _206051_errorToken);
inline void _1a7d008d4_processExceptionalHandler(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _207946_f, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _207962_fc, jule::Ptr<_1a7cd41ae_Data>* _207984_d);
inline void _1a7d00c47_callFn(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _210628_fc, jule::Ptr<_1a7cd41ae_Data>* _210650_d);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d01088_evalFnCall(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8ce7a_FnCallExpr> _225931_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d01484_evalEnumStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bd1a6d_Enum> _229234_enm, jule::Ptr<_1a7b69b05_Token> _229250_ident);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d01880_evalTypeEnumStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bd3278_TypeEnum> _230038_enm, jule::Ptr<_1a7b69b05_Token> _230054_ident);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d01c7b_evalStructStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7ba8b11_StructIns> _232336_s, jule::Ptr<_1a7b69b05_Token> _232351_ident);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d02232_evalTraitSubIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data> _235837_d, jule::Ptr<_1a7bce362_Trait> _235851_trt, jule::Ptr<_1a7b69b05_Token> _235868_ident);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d02793_evalStructSubIdentField(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _238044_d, jule::Ptr<_1a7ba8b11_StructIns>* _238059_s, jule::Ptr<_1a7b69b05_Token>* _238079_tok, jule::Ptr<_1a7ba8061_FieldIns>* _238097_f);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d02dae_evalStructSubIdentMethod(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _240545_d, jule::Ptr<_1a7ba8b11_StructIns>* _240560_s, jule::Ptr<_1a7b69b05_Token>* _240580_tok, jule::Ptr<_1a7bba8d1_Fn>* _240598_m, jule::Bool _2405106_ref);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d03420_evalStructSubIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data> _242638_d, jule::Ptr<_1a7ba8b11_StructIns> _242652_s, jule::Ptr<_1a7b8c364_SubIdentExpr> _242671_si, jule::Bool _242690_ref);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d03761_evalIntTypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _245033_ident);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d03aa2_evalUintTypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _247734_ident);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d03de3_evalI8TypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _249532_ident);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d04234_evalI16TypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _252433_ident);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d04575_evalI32TypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _255333_ident);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d048b6_evalI64TypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _258233_ident);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d04c07_evalU8TypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _261132_ident);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d05048_evalU16TypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _263033_ident);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d05389_evalU32TypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _264933_ident);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d056ca_evalU64TypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _266833_ident);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d05a1b_evalF32TypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _268733_ident);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d05d5c_evalF64TypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _272633_ident);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d06258_evalPrimStatic(_1a7cd5dd6_eval* _self_, jule::Str _276530_kind, jule::Ptr<_1a7b69b05_Token> _276541_ident);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d06654_evalTypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data> _279734_d, jule::Ptr<_1a7b8c364_SubIdentExpr> _279748_si);
inline jule::Ptr<_1a7cd41ae_Data> _1abebd65d_comptimeObjSubIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7be5aa4_comptimeTypeInfo>* _281354_ct, jule::Ptr<_1a7cd41ae_Data>* _281374_d, jule::Ptr<_1a7b8c364_SubIdentExpr>* _281385_si);
inline jule::Ptr<_1a7cd41ae_Data> _1abec2e48_comptimeObjSubIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bd6710_comptimeStructField>* _281354_ct, jule::Ptr<_1a7cd41ae_Data>* _281374_d, jule::Ptr<_1a7b8c364_SubIdentExpr>* _281385_si);
inline jule::Ptr<_1a7cd41ae_Data> _1abec76bc_comptimeObjSubIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bdcb56_comptimeEnumField>* _281354_ct, jule::Ptr<_1a7cd41ae_Data>* _281374_d, jule::Ptr<_1a7b8c364_SubIdentExpr>* _281385_si);
inline jule::Ptr<_1a7cd41ae_Data> _1abecbe85_comptimeObjSubIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7be096c_comptimeParam>* _281354_ct, jule::Ptr<_1a7cd41ae_Data>* _281374_d, jule::Ptr<_1a7b8c364_SubIdentExpr>* _281385_si);
inline jule::Ptr<_1a7cd41ae_Data> _1abed197e_comptimeObjSubIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bd9933_comptimeStatic>* _281354_ct, jule::Ptr<_1a7cd41ae_Data>* _281374_d, jule::Ptr<_1a7b8c364_SubIdentExpr>* _281385_si);
inline jule::Ptr<_1a7cd41ae_Data> _1abed6203_comptimeObjSubIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bebba9_comptimeValue>* _281354_ct, jule::Ptr<_1a7cd41ae_Data>* _281374_d, jule::Ptr<_1a7b8c364_SubIdentExpr>* _281385_si);
inline jule::Ptr<_1a7cd41ae_Data> _1abeda977_comptimeObjSubIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7c01384_comptimeFile>* _281354_ct, jule::Ptr<_1a7cd41ae_Data>* _281374_d, jule::Ptr<_1a7b8c364_SubIdentExpr>* _281385_si);
inline jule::Ptr<_1a7cd41ae_Data> _1abee0284_comptimeObjSubIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7c0529a_comptimeDecl>* _281354_ct, jule::Ptr<_1a7cd41ae_Data>* _281374_d, jule::Ptr<_1a7b8c364_SubIdentExpr>* _281385_si);
inline __jule_tuple_x_1a7cd41ae_Data__jule_tuple_bool _1a7d07006_tryComptimeObjSubIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _282143_d, jule::Ptr<_1a7b8c364_SubIdentExpr> _282157_si);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d07402_evalObjSubIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data> _285235_d, jule::Ptr<_1a7b8c364_SubIdentExpr> _285249_si);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d07743_evalSubIdent(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8c364_SubIdentExpr> _289633_si);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d07a84_evalTuple(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b89d45_TupleExpr> _291030_tup);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d07e80_evalMap(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7d2aa52_Map> _293928_m, jule::Ptr<_1a7b8e751_BraceLit> _293941_lit);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d082c1_evalBraceLit(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8e751_BraceLit> _298733_lit);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d08612_evalAnonFunc(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b96acc_FnDecl> _300233_decl);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d08953_evalBinary(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8c81a_BinaryExpr> _304031_op);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d08c94_evalExprKind(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Any _305533_kind);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d090d5_eval1(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b89251_Expr> _310326_expr);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d09426_eval(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b89251_Expr> _314825_expr);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d09767_evalExpr1(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b89251_Expr> _316330_expr);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d09aa8_evalExpr(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b89251_Expr> _317929_expr);
inline _1a7d0a03c_unaryEval static__1a7d0a4b0_new(jule::Ptr<_1a7cd5dd6_eval> _320020_e);
inline void _1a7d0a6ad_minus(_1a7d0a03c_unaryEval* _self_);
inline void _1a7d0a8ab_plus(_1a7d0a03c_unaryEval* _self_);
inline void _1a7d0aaa9_caret(_1a7d0a03c_unaryEval* _self_);
inline void _1a7d0aca7_excl(_1a7d0a03c_unaryEval* _self_);
inline void _1a7d0aea5_star(_1a7d0a03c_unaryEval* _self_);
inline void _1a7d0b1a3_amper(_1a7d0a03c_unaryEval* _self_);
inline void _1a7d0b3a1_typeDecl(_1a7d0a03c_unaryEval* _self_);
inline void _1a7d0b59e_evalData(_1a7d0a03c_unaryEval* _self_);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d0b8e0_eval(_1a7d0a03c_unaryEval* _self_, jule::Ptr<_1a7b8b30d_UnaryExpr> _346024_u);
inline _1a7d0bec8_binaryEval static__1a7d0c5b1_newPlain(jule::Ptr<_1a7cd5dd6_eval> _350825_e);
inline _1a7d0bec8_binaryEval static__1a7d0c935_new(jule::Ptr<_1a7cd5dd6_eval> _351420_e, jule::Ptr<_1a7b69b05_Token> _351434_op);
inline jule::Bool _1a7d0cbbb_checkTypeCompatibility(_1a7d0bec8_binaryEval* _self_);
inline jule::Bool _1a7d0ce52_checkStructCommonOperatorCompatibility(_1a7d0bec8_binaryEval* _self_);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d0d1d8_evalComptimeTypeInfo(_1a7d0bec8_binaryEval* _self_);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d0d46e_evalNil(_1a7d0bec8_binaryEval* _self_);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d0d705_evalEnum(_1a7d0bec8_binaryEval* _self_);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d0d98b_evalTypeEnum(_1a7d0bec8_binaryEval* _self_);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d0dc22_evalSptr(_1a7d0bec8_binaryEval* _self_);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d0dea8_evalPtr(_1a7d0bec8_binaryEval* _self_);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d0e23e_evalArr(_1a7d0bec8_binaryEval* _self_);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d0e4c5_evalStruct(_1a7d0bec8_binaryEval* _self_);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d0e75b_evalTrait(_1a7d0bec8_binaryEval* _self_);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d0e9e2_evalAny(_1a7d0bec8_binaryEval* _self_);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d0ec78_evalBool(_1a7d0bec8_binaryEval* _self_);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d1000e_evalStr(_1a7d0bec8_binaryEval* _self_);
inline void _1a7d1020c_setTypeToGreater(_1a7d0bec8_binaryEval* _self_);
inline void _1a7d104b5_checkModData(_1a7d0bec8_binaryEval* _self_, jule::Ptr<_1a7cd41ae_Data>* _391333_d);
inline void _1a7d106b3_mod(_1a7d0bec8_binaryEval* _self_);
inline jule::Bool _1a7d10aae_numbersAreCompatibile(_1a7d0bec8_binaryEval* _self_, jule::Str* _393534_lk, jule::Str* _393544_rk);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d10d45_shift(_1a7d0bec8_binaryEval* _self_);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d110cb_evalFloat(_1a7d0bec8_binaryEval* _self_);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d11362_evalInt(_1a7d0bec8_binaryEval* _self_);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d115e8_evalPrim(_1a7d0bec8_binaryEval* _self_);
inline jule::Bool _1a7d1187e_checkSpecialCases(_1a7d0bec8_binaryEval* _self_);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d11b15_evalOp(_1a7d0bec8_binaryEval* _self_);
inline void _1a7d11dbd_evalConst(_1a7d0bec8_binaryEval* _self_, jule::Ptr<_1a7cd41ae_Data>* _422530_d);
inline void _1a7d12176_checkData(_1a7d0bec8_binaryEval* _self_, jule::Ptr<_1a7cd41ae_Data>* _430330_d);
inline void _1a7d12374_checkDatas(_1a7d0bec8_binaryEval* _self_);
inline void _1a7d1262c_setModel(_1a7d0bec8_binaryEval* _self_, jule::Ptr<_1a7cd41ae_Data>* _431529_d);
inline void _1a7d128d5_postEval(_1a7d0bec8_binaryEval* _self_, jule::Ptr<_1a7cd41ae_Data>* _434429_d);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d12cd1_solveExplicit(_1a7d0bec8_binaryEval* _self_, jule::Ptr<_1a7cd41ae_Data>* _434934_l, jule::Ptr<_1a7cd41ae_Data>* _434949_r);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d13122_eval(_1a7d0bec8_binaryEval* _self_, jule::Ptr<_1a7b8c81a_BinaryExpr>* _436925_op);
inline jule::Str _1a7d1c192_Str(_1a7d1bc96_TypeKind* _self_);
inline jule::Bool _1a7d1c4d3_Equal(jule::Ptr<_1a7d1bc96_TypeKind> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _9018_other);
inline jule::Bool _1a7d1cb43_Binded(_1a7d1bc96_TypeKind* _self_);
inline jule::Bool _1a7d1cdc9_IsNil(_1a7d1bc96_TypeKind* _self_);
inline jule::Bool _1a7d1d160_Void(_1a7d1bc96_TypeKind* _self_);
inline jule::Bool _1a7d1d3e6_Comparable(_1a7d1bc96_TypeKind* _self_);
inline jule::Bool _1a7d1d67c_Mutable(_1a7d1bc96_TypeKind* _self_);
inline jule::Bool _1a7d1d913_Ordered(_1a7d1bc96_TypeKind* _self_);
inline jule::Bool _1a7d1db99_NilCompatible(_1a7d1bc96_TypeKind* _self_);
inline jule::Bool _1a7d1de30_GC(_1a7d1bc96_TypeKind* _self_);
inline jule::Bool _1a7d1e1b6_Variadicable(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7d24dae_Prim> _1a7d1e44c_Prim(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7d288da_Sptr> _1a7d1e6d3_Sptr(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7d2c1a2_Ptr> _1a7d1e969_Ptr(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7bd1a6d_Enum> _1a7d1ec00_Enum(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7bd3278_TypeEnum> _1a7d1ee86_TypeEnum(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7d2b6ce_Arr> _1a7d2021c_Arr(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7d293ad_Slc> _1a7d204a3_Slc(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7bbd8b2_FnIns> _1a7d20739_Fn(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7ba8b11_StructIns> _1a7d209c0_Struct(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7bce362_Trait> _1a7d20c56_Trait(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7d2aa52_Map> _1a7d20edc_Map(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7d29ea2_Tuple> _1a7d21273_Tup(_1a7d1bc96_TypeKind* _self_);
inline jule::Bool _1a7d21509_comptime(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7bd7ea3_comptimeStructFields> _1a7d21790_comptimeStructFields(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7bd6710_comptimeStructField> _1a7d21a26_comptimeStructField(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7bdde65_comptimeEnumFields> _1a7d21cac_comptimeEnumFields(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7bdcb56_comptimeEnumField> _1a7d22043_comptimeEnumField(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7be27c6_comptimeParams> _1a7d222c9_comptimeParams(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7be096c_comptimeParam> _1a7d22560_comptimeParam(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7bd5ba4_comptimeRange> _1a7d227e6_comptimeRange(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7be4135_comptimeTypeInfos> _1a7d22a7c_comptimeTypeInfos(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _1a7d22d13_comptimeTypeInfo(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7bdb1d7_comptimeStatics> _1a7d23099_comptimeStatics(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7bd9933_comptimeStatic> _1a7d23330_comptimeStatic(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7bebba9_comptimeValue> _1a7d235b6_comptimeValue(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7c0529a_comptimeDecl> _1a7d2384c_comptimeDecl(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7c02eac_comptimeDecls> _1a7d23ad3_comptimeDecls(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7c01384_comptimeFile> _1a7d23d69_comptimeFile(_1a7d1bc96_TypeKind* _self_);
inline jule::Ptr<_1a7bee915_comptimeFiles> _1a7d24100_comptimeFiles(_1a7d1bc96_TypeKind* _self_);
inline jule::Bool _1a7d2485e_checked(_1a7d244a7_TypeSymbol* _self_);
inline jule::Str _1a7d25233_Str(_1a7d24dae_Prim* _self_);
inline jule::Bool _1a7d25574_Equal(jule::Ptr<_1a7d24dae_Prim> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _53218_other);
inline jule::Bool _1a7d25a19_IsConstraint(_1a7d24dae_Prim* _self_);
inline jule::Bool _1a7d25ca0_IsI8(_1a7d24dae_Prim* _self_);
inline jule::Bool _1a7d26036_IsI16(_1a7d24dae_Prim* _self_);
inline jule::Bool _1a7d262bc_IsI32(_1a7d24dae_Prim* _self_);
inline jule::Bool _1a7d26553_IsI64(_1a7d24dae_Prim* _self_);
inline jule::Bool _1a7d267d9_IsU8(_1a7d24dae_Prim* _self_);
inline jule::Bool _1a7d26a70_IsU16(_1a7d24dae_Prim* _self_);
inline jule::Bool _1a7d26d06_IsU32(_1a7d24dae_Prim* _self_);
inline jule::Bool _1a7d2708c_IsU64(_1a7d24dae_Prim* _self_);
inline jule::Bool _1a7d27323_IsF32(_1a7d24dae_Prim* _self_);
inline jule::Bool _1a7d275a9_IsF64(_1a7d24dae_Prim* _self_);
inline jule::Bool _1a7d27840_IsInt(_1a7d24dae_Prim* _self_);
inline jule::Bool _1a7d27ac6_IsUint(_1a7d24dae_Prim* _self_);
inline jule::Bool _1a7d27d5c_IsUintptr(_1a7d24dae_Prim* _self_);
inline jule::Bool _1a7d280e3_IsBool(_1a7d24dae_Prim* _self_);
inline jule::Bool _1a7d28379_IsStr(_1a7d24dae_Prim* _self_);
inline jule::Bool _1a7d28610_IsAny(_1a7d24dae_Prim* _self_);
inline jule::Str _1a7d28c92_Str(_1a7d288da_Sptr* _self_);
inline jule::Bool _1a7d290d3_Equal(jule::Ptr<_1a7d288da_Sptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _60918_other);
inline jule::Str _1a7d29875_Str(_1a7d293ad_Slc* _self_);
inline jule::Bool _1a7d29bb6_Equal(jule::Ptr<_1a7d293ad_Slc> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _62818_other);
inline jule::Str _1a7d2a359_Str(_1a7d29ea2_Tuple* _self_);
inline jule::Bool _1a7d2a69a_Equal(jule::Ptr<_1a7d29ea2_Tuple> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _65718_other);
inline jule::Str _1a7d2ae09_Str(_1a7d2aa52_Map* _self_);
inline jule::Bool _1a7d2b24a_Equal(jule::Ptr<_1a7d2aa52_Map> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _69418_other);
inline jule::Str _1a7d2ba86_Str(_1a7d2b6ce_Arr* _self_);
inline jule::Bool _1a7d2bdc7_Equal(jule::Ptr<_1a7d2b6ce_Arr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _72218_other);
inline jule::Str _1a7d2c559_Str(_1a7d2c1a2_Ptr* _self_);
inline jule::Bool _1a7d2c89a_Equal(jule::Ptr<_1a7d2c1a2_Ptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _74618_other);
inline jule::Bool _1a7d2cc1e_IsUnsafe(_1a7d2c1a2_Ptr* _self_);
inline void _1a7d2e924_pushErr(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b69b05_Token> _83823_token, jule::Str _83838_fmt, jule::Slice<jule::Any> _83851_args);
inline void _1a7d2eb22_allowBuiltin(_1a7d2e193_typeChecker* _self_);
inline void _1a7d2ed20_disallowBuiltin(_1a7d2e193_typeChecker* _self_);
inline void _1ac2036a6_pushReference(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7ba8b11_StructIns>* _85037_t);
inline void _1ac20617b_pushReference(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7bce362_Trait>* _85037_t);
inline void _1a7d30381_pushReferenceByKind(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _86040_k);
inline void _1a7d3079e_pushCycleError(_1a7d2e193_typeChecker* _self_, jule::Any _87126_def1, jule::Any _87137_def2, _1daed18b7_StrBuilder* _87153_message);
inline jule::Bool _1a7d30b9a_checkCrossCycle(_1a7d2e193_typeChecker* _self_, jule::Any _89327_decl, _1daed18b7_StrBuilder* _89343_message);
inline jule::Bool _1a7d31096_checkIllegalCycles(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b806ba_IdentTypeDecl>* _92735_ident, jule::Any _92762_decl);
inline jule::Trait _1a7d31492_fromTypeAlias(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b806ba_IdentTypeDecl>* _97730_decl, jule::Ptr<_1a7d1aea4_TypeAlias>* _97757_ta);
inline jule::Ptr<_1a7bd1a6d_Enum> _1a7d3188d_fromEnum(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b806ba_IdentTypeDecl>* _105425_decl, jule::Ptr<_1a7bd1a6d_Enum>* _105452_e);
inline jule::Ptr<_1a7bd3278_TypeEnum> _1a7d31c89_fromTypeEnum(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b806ba_IdentTypeDecl>* _106629_decl, jule::Ptr<_1a7bd3278_TypeEnum>* _106656_e);
inline jule::Ptr<_1a7bce362_Trait> _1a7d32185_fromTrait(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b806ba_IdentTypeDecl>* _107826_decl, jule::Ptr<_1a7bce362_Trait>* _107853_t);
inline jule::Bool _1a7d32581_checkStructIns(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7ba8b11_StructIns>* _109135_ins, jule::Ptr<_1a7b69b05_Token>* _109157_errorToken);
inline void _1a7d32839_appendUsedStructReference(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7ba5ca6_Struct>* _111246_s);
inline jule::Ptr<_1a7ba8b11_StructIns> _1a7d32c35_buildStructInstance(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b806ba_IdentTypeDecl>* _112540_decl, jule::Ptr<_1a7ba5ca6_Struct>* _112567_s);
inline jule::Ptr<_1a7ba8b11_StructIns> _1a7d33131_fromStructIns(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7ba8b11_StructIns>* _117334_ins, jule::Ptr<_1a7b69b05_Token> _117355_token);
inline jule::Ptr<_1a7ba8b11_StructIns> _1a7d3352c_fromStruct(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b806ba_IdentTypeDecl>* _119131_decl, jule::Ptr<_1a7ba5ca6_Struct>* _119158_s);
inline jule::Trait _1a7d3386d_getDef(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b806ba_IdentTypeDecl>* _123527_decl);
inline jule::Trait _1a7d33bae_buildIdent(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b806ba_IdentTypeDecl> _129630_decl);
inline jule::Trait _1a7d34000_buildSubIdent(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b857e1_SubIdentTypeDecl> _130033_decl);
inline jule::Ptr<_1a7d288da_Sptr> _1a7d34341_buildSptrFromType(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _133438_elem);
inline jule::Ptr<_1a7d288da_Sptr> _1a7d34682_buildSptr(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b85eb7_SptrTypeDecl> _135429_decl);
inline jule::Ptr<_1a7d2c1a2_Ptr> _1a7d349c3_buildPtrFromType(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _136337_elem);
inline jule::Ptr<_1a7d2c1a2_Ptr> _1a7d34d14_buildPtr(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b86946_PtrTypeDecl> _137828_decl);
inline jule::Ptr<_1a7d293ad_Slc> _1a7d35155_buildSlc(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b8634c_SlcTypeDecl> _139528_decl);
inline jule::Ptr<_1a7d2b6ce_Arr> _1a7d35496_buildArr(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b871d8_ArrTypeDecl> _141628_decl);
inline jule::Ptr<_1a7d2aa52_Map> _1a7d357d7_buildMap(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b87936_MapTypeDecl> _146528_decl);
inline jule::Ptr<_1a7d29ea2_Tuple> _1a7d35b28_buildTuple(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b86649_TupleTypeDecl> _149730_decl);
inline jule::Bool _1a7d35e69_checkFuncTypes(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _151035_f);
inline jule::Ptr<_1a7bbd8b2_FnIns> _1a7d362aa_buildFunc(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b96acc_FnDecl> _152829_decl);
inline jule::Trait _1a7d365eb_buildByNamespace(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b85bba_NamespaceTypeDecl> _155836_decl);
inline jule::Ptr<_1a7d1bc96_TypeKind> _1a7d3693c_build(_1a7d2e193_typeChecker* _self_, jule::Any* _158226_declKind);
inline jule::Ptr<_1a7d1bc96_TypeKind> _1a7d36c7d_checkDecl(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b800b0_TypeDecl>* _167030_decl);
inline jule::Bool static__1a7d376c9_prim(jule::Str* _169718_ident, jule::Ptr<_1a7d24dae_Prim> _169730_t);
inline jule::Bool static__1a7d37a4d_exist(jule::Str* _170119_ident, jule::Ptr<_1a7d1bc96_TypeKind>* _170136_k);
inline void _1a87e0d52_stop(_1a87e069d_scopeParser* _self_);
inline jule::Bool _1a87e10d8_stopped(_1a87e069d_scopeParser* _self_);
inline jule::Bool _1a87e136e_finished(_1a87e069d_scopeParser* _self_);
inline jule::Bool _1a87e1605_isLastSt(_1a87e069d_scopeParser* _self_);
inline void _1a87e1968_pushErr(_1a87e069d_scopeParser* _self_, jule::Ptr<_1a7b69b05_Token> _18823_token, jule::Str _18838_fmt);
inline void _1a87e1ccb_pushSuggestion(_1a87e069d_scopeParser* _self_, jule::Str _19330_fmt, jule::Slice<jule::Any> _19343_args);
inline void _1a87e2084_insertAsNext(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _19733_tokens);
inline jule::Ptr<_1a87ded0c_stmt> _1a87e231a_next(_1a87e069d_scopeParser* _self_);
inline jule::Ptr<_1a7b94e3d_ScopeTree> _1a87e2716_buildScope(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _20731_tokens, jule::Ptr<_1a7b69b05_Token> _20753_end);
inline jule::Ptr<_1a7b97c87_VarDecl> _1a87e2a57_buildVarSt(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _21831_tokens);
inline jule::Ptr<_1a7b98161_RetSt> _1a87e2d98_buildRetSt(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _22630_tokens);
inline jule::Ptr<_1a7b988d1_Iter> _1a87e31d9_buildWhileNextIter(_1a87e069d_scopeParser* _self_, jule::Ptr<_1a87ded0c_stmt>* _23739_s);
inline jule::Ptr<_1a7b9920b_WhileKind> _1a87e352a_buildWhileIterKind(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _28239_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _1a87e386b_getRangeKindKeysTokens(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _28843_toks);
inline jule::Ptr<_1a7b97c87_VarDecl> _1a87e3bac_buildRangeKindKey(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _29438_tokens);
inline jule::Slice<jule::Ptr<_1a7b97c87_VarDecl>> _1a87e3eed_buildRangeKindKeys(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>>* _32039_parts);
inline void _1a87e4361_setupRangeKindKeysPlain(_1a87e069d_scopeParser* _self_, jule::Ptr<_1a7b99b13_RangeKind>* _32844_rng, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _32866_tokens);
inline void _1a87e46c4_setupRangeKindKeysExplicit(_1a87e069d_scopeParser* _self_, jule::Ptr<_1a7b99b13_RangeKind>* _34347_rng, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _34369_tokens);
inline void _1a87e4a37_setupRangeKindKeys(_1a87e069d_scopeParser* _self_, jule::Ptr<_1a7b99b13_RangeKind>* _35239_rng, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _35261_tokens);
inline jule::Ptr<_1a7b99b13_RangeKind> _1a87e4edd_buildRangeIterKind(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _36039_var_tokens, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _3618_exprTokens, jule::Ptr<_1a7b69b05_Token>* _36135_inToken);
inline jule::Any _1a87e53d9_buildCommonIterKind(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _37640_tokens, jule::Ptr<_1a7b69b05_Token>* _37659_err_tok);
inline jule::Ptr<_1a7b988d1_Iter> _1a87e572a_buildCommonIter(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _40335_tokens);
inline jule::Ptr<_1a7b988d1_Iter> _1a87e5a6b_buildIterSt(_1a87e069d_scopeParser* _self_, jule::Ptr<_1a87ded0c_stmt>* _43332_st);
inline jule::Ptr<_1a7b99edc_BreakSt> _1a87e5dac_buildBreakSt(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _44033_tokens);
inline jule::Ptr<_1a7b9a3b6_ContSt> _1a87e61ed_buildContSt(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _45832_tokens);
inline jule::Ptr<_1a7b9a86c_If> _1a87e653e_buildIf(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _47628_tokens);
inline jule::Ptr<_1a7b9ac46_Else> _1a87e6880_buildElse(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _50930_tokens);
inline jule::Ptr<_1a7b9b1ec_Conditional> _1a87e6bc1_buildIfElseChain(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _53336_tokens);
inline jule::Ptr<_1a7b89251_Expr> _1a87e7012_buildCoCallSt(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _55633_tokens);
inline jule::Ptr<_1a7b928ca_GotoSt> _1a87e7353_buildGotoSt(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _57232_tokens);
inline jule::Ptr<_1a7b92bc7_FallSt> _1a87e7694_buildFallSt(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _59232_tokens);
inline jule::Ptr<_1a7b9b939_TypeAliasDecl> _1a87e79d5_buildTypeAliasSt(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _60237_tokens);
inline void _1a87e7ead_pushCaseExpr(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _60832_tokens, jule::Ptr<_1a7b69b05_Token> _60854_token, jule::Bool _6093_typeMatch, jule::Slice<jule::Ptr<_1a7b89251_Expr>>* _60925_exprs);
inline __jule_tuple_sx_1a7b89251_Expr__jule_tuple_bool _1a87e8464_buildCaseExprs(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _63135_tokens, jule::Ptr<_1a7b69b05_Token>* _63158_colon, jule::Bool _63173_typeMatch);
inline jule::Ptr<_1a7b94e3d_ScopeTree> _1a87e87a5_buildCaseScope(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _67335_tokens);
inline __jule_tuple_x_1a7b9bde0_Case__jule_tuple_bool _1a87e8ba1_buildCase(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _70030_tokens, jule::Bool _70048_typeMatch);
inline __jule_tuple_sx_1a7b9bde0_Case__jule_tuple_x_1a7b9ac46_Else _1a87e909c_buildCases(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _71930_tokens, jule::Bool _71948_typeMatch);
inline jule::Ptr<_1a7b9c709_MatchCase> _1a87e93dd_buildMatchCase(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _75334_tokens);
inline jule::Ptr<_1a7b94e3d_ScopeTree> _1a87e972e_buildScopeSt(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _78632_tokens);
inline jule::Ptr<_1a7b92501_LabelSt> _1a87e9a70_buildLabelSt(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _82933_tokens);
inline __jule_tuple__1a7b9457a_StmtData__jule_tuple_bool _1a87e9db1_buildIdSt(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _84430_tokens);
inline jule::Ptr<_1a880a82d_assignInfo> _1a87ea202_buildAssignInfo(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _85836_tokens);
inline jule::Ptr<_1a7b93337_AssignLeft> _1a87ea543_buildAssignL(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _90333_tokens);
inline jule::Slice<jule::Ptr<_1a7b93337_AssignLeft>> _1a87ea884_buildAssignLs(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>>* _91434_parts);
inline __jule_tuple__1a7b9457a_StmtData__jule_tuple_bool _1a87eabc5_buildPlainAssign(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _92337_tokens);
inline jule::Bool _1a87eb0c1_buildDeclAssign1(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _97337_lefts, jule::Ptr<_1a7b938ba_AssignSt>* _97359_assign);
inline __jule_tuple_x_1a7b938ba_AssignSt__jule_tuple_bool _1a87eb412_buildDeclAssign(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _101835_tokens);
inline __jule_tuple__1a7b9457a_StmtData__jule_tuple_bool _1a87eb753_buildAssignSt(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _105234_tokens);
inline jule::Ptr<_1a7b89b25_UseExpr> _1a87eba94_buildUseExpr(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _106533_tokens);
inline jule::Any _1a87ebdd5_buildConstSt(_1a87e069d_scopeParser* _self_, jule::Ptr<_1a87ded0c_stmt>* _107833_st);
inline jule::Any _1a87ec226_buildSt(_1a87e069d_scopeParser* _self_, jule::Ptr<_1a87ded0c_stmt>* _110328_st);
inline void _1a87ec589_build(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _116726_tokens, jule::Ptr<_1a7b94e3d_ScopeTree>* _116749_s);
inline void _1a87ed8dc_pushErr(_1a87ed117_exprBuilder* _self_, jule::Ptr<_1a7b69b05_Token> _4523_token, jule::Str _4538_fmt, jule::Slice<jule::Any> _4551_args);
inline void _1a87edc50_pushSuggestion(_1a87ed117_exprBuilder* _self_, jule::Str _5030_fmt, jule::Slice<jule::Any> _5043_args);
inline jule::Ptr<_1a7b89d45_TupleExpr> _1a87ee091_buildTuple(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>>* _5431_parts);
inline jule::Ptr<_1a7b8a1db_LitExpr> _1a87ee3d2_buildLit(_1a87ed117_exprBuilder* _self_, jule::Ptr<_1a7b69b05_Token> _6424_token);
inline jule::Any _1a87eea64_buildSingle(_1a87ed117_exprBuilder* _self_, jule::Ptr<_1a7b69b05_Token> _7531_token);
inline jule::Ptr<_1a7b8aa6b_IdentExpr> _1a87eeda5_buildBindIdent(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _9235_tokens);
inline jule::Ptr<_1a7b8b30d_UnaryExpr> _1a88001e6_buildUnary(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _11130_tokens);
inline jule::Ptr<_1a7b8c364_SubIdentExpr> _1a8800537_buildObjSubIdent(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _13236_tokens);
inline jule::Ptr<_1a7b8be8a_NsSelectionExpr> _1a8800878_buildNsSubIdent(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _14736_tokens);
inline jule::Ptr<_1a7b800b0_TypeDecl> _1a8800bb9_buildType(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _17230_tokens);
inline jule::Any _1a880100a_buildSubIdent(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _18634_tokens);
inline jule::Ptr<_1a7b8b6d7_VariadicExpr> _1a880134b_buildVariadic(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _20833_tokens);
inline jule::Ptr<_1a7b8951a_RangeExpr> _1a880168c_buildBetweenParentheses(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _21743_tokens);
inline jule::Ptr<_1a7b8bab1_CastExpr> _1a88019cd_tryBuildCast(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _22933_tokens);
inline void _1a8801deb_pushArg(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b89251_Expr>>* _30328_args, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _30347_tokens, jule::Ptr<_1a7b69b05_Token> _30365_err_token);
inline jule::Slice<jule::Ptr<_1a7b89251_Expr>> _1a880223c_buildArgs(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _31229_tokens);
inline jule::Ptr<_1a7b8ce7a_FnCallExpr> _1a8802a34_buildFnCall(_1a87ed117_exprBuilder* _self_, jule::Ptr<_1a7b69b05_Token>* _37832_token, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _37852_expr, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _37873_args);
inline jule::Any _1a8802d75_buildParenthesesRange(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _38642_tokens);
inline jule::Ptr<_1a7b8a5b5_UnsafeExpr> _1a88031b6_buildUnsafeExpr(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _40835_tokens);
inline jule::Ptr<_1a7b96acc_FnDecl> _1a8803507_buildAnonFn(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _42332_tokens);
inline jule::Any _1a8803848_buildUnsafe(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _43232_tokens);
inline void _1a8803c66_pushRangeLitPart(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _44236_part, jule::Ptr<_1a7b69b05_Token> _4433_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>>* _44328_parts);
inline jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _1a88040a7_getBraceRangeLitExprParts(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _45345_tokens);
inline jule::Ptr<_1a7b8d970_FieldExprPair> _1a88043e8_buildFieldExprPair(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _49538_tokens);
inline jule::Ptr<_1a7b89251_Expr> _1a8804739_buildStructLitExpr(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _50839_tokens);
inline jule::Slice<jule::Ptr<_1a7b89251_Expr>> _1a8804a7a_buildStructLitExprs(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _52340_tokens);
inline jule::Ptr<_1a7b8e29a_StructLit> _1a8804dbb_buildTypedStructLiteral(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _53643_tokens);
inline jule::Ptr<_1a7b89251_Expr> _1a880520c_buildBraceLitPart(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _56038_tokens);
inline jule::Ptr<_1a7b8e751_BraceLit> _1a880554d_buildBraceLit(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _57734_tokens);
inline jule::Any _1a880588e_buildBraceRange(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _59636_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _1a8805bd0_getEnumerableParts(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _64838_tokens);
inline jule::Ptr<_1a7b907a7_SliceExpr> _1a8806021_buildSlice(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _65530_tokens);
inline jule::Ptr<_1a7b91214_IndexingExpr> _1a88064c7_buildIndexing(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _67733_exprTokens, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _6787_tokens, jule::Ptr<_1a7b69b05_Token> _67829_errorToken);
inline jule::Ptr<_1a7b91874_SlicingExpr> _1a8806ae3_buildSlicing(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _70133_exprTokens, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _70160_start, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _7028_to, jule::Ptr<_1a7b69b05_Token>* _70227_errorToken, jule::Ptr<_1a7b69b05_Token> _70251_end);
inline jule::Any _1a8806e34_buildBracketRange(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _71737_tokens);
inline jule::Any _1a8807275_buildExclRight(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _74235_tokens);
inline jule::Any _1a88075b6_buildData(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _76030_tokens);
inline jule::Any _1a88079b2_buildBinary(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _82932_tokens, jule::I64 _82950_i);
inline jule::Any _1a8807d03_build(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _85426_tokens);
inline jule::Any _1a8808144_buildKind(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _86530_tokens);
inline jule::Ptr<_1a7b89251_Expr> _1a8808485_buildFromTokens(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _87635_tokens);
inline void _1a880e05c_stop(_1a880dc2c_parser* _self_);
inline jule::Bool _1a880e2e3_stopped(_1a880dc2c_parser* _self_);
inline void _1a880e711_pushErr(_1a880dc2c_parser* _self_, jule::Ptr<_1a7b69b05_Token> _20823_token, jule::Str _20838_fmt, jule::Slice<jule::Any> _20851_args);
inline void _1a880ea74_pushSuggestion(_1a880dc2c_parser* _self_, jule::Str _21330_fmt, jule::Slice<jule::Any> _21343_args);
inline jule::Ptr<_1a7b89251_Expr> _1a880edb5_buildExpr(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _21731_tokens);
inline jule::Ptr<_1a7b7e4cc_Directive> _1a8810206_buildDirective(_1a880dc2c_parser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _22134_tokens);
inline void _1a88104ae_pushDirective(_1a880dc2c_parser* _self_, jule::Ptr<_1a7b7e4cc_Directive> _23633_d);
inline jule::Ptr<_1a7b94e3d_ScopeTree> _1a88108aa_buildScope(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _24932_tokens, jule::Ptr<_1a7b69b05_Token> _24954_end);
inline __jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool _1a8810d61__buildType(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _25939_tokens, jule::I64* _2607_i, jule::Bool _26016_err);
inline __jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool _1a8811317_buildType(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _27138_tokens, jule::I64* _2727_i, jule::Bool _27216_err);
inline jule::Ptr<_1a7b9b939_TypeAliasDecl> _1a8811658_buildTypeAliasDecl(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _28140_tokens);
inline void _1a88119bb_buildVarTypeAndExpr(jule::Ptr<_1a880dc2c_parser> _self_, jule::Ptr<_1a7b97c87_VarDecl>* _32141_v, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _32159_tokens);
inline void _1a8811d2e_buildVarCommon(jule::Ptr<_1a880dc2c_parser> _self_, jule::Ptr<_1a7b97c87_VarDecl>* _35436_v, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _35453_tokens);
inline void _1a8812192_buildVarBegin(_1a880dc2c_parser* _self_, jule::Ptr<_1a7b97c87_VarDecl>* _37034_v, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _37052_tokens);
inline jule::Ptr<_1a7b97c87_VarDecl> _1a88124d3_buildVar(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _39829_tokens);
inline jule::Ptr<_1a7b92127_GenericDecl> _1a8812824_buildGeneric(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _41734_tokens);
inline jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>> _1a8812c20_buildGenerics(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _45435_tokens, jule::Ptr<_1a7b69b05_Token>* _45454_errorToken);
inline jule::Ptr<_1a7b9567a_ParamDecl> _1a8813061_buildSelfParam(_1a880dc2c_parser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _47434_tokens);
inline void _1a881347e_paramTypeBegin(_1a880dc2c_parser* _self_, jule::Ptr<_1a7b9567a_ParamDecl>* _51435_param, jule::I64* _51459_i, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _51468_tokens);
inline void _1a88137e2_buildParamType(jule::Ptr<_1a880dc2c_parser> _self_, jule::Ptr<_1a7b9567a_ParamDecl>* _52936_param, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _52960_tokens);
inline void _1a8813b55_buildParamBody(jule::Ptr<_1a880dc2c_parser> _self_, jule::Ptr<_1a7b9567a_ParamDecl>* _54236_param, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _54259_tokens);
inline jule::Ptr<_1a7b9567a_ParamDecl> _1a8813e96_buildParam(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _56231_tokens);
inline void _1a881424e_checkParams(_1a880dc2c_parser* _self_, jule::Slice<jule::Ptr<_1a7b9567a_ParamDecl>>* _60532_params);
inline jule::Slice<jule::Ptr<_1a7b9567a_ParamDecl>> _1a881464a_buildParams(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _62533_tokens, jule::Bool _62551_method);
inline __jule_tuple_x_1a7b87d10_RetTypeDecl__jule_tuple_bool _1a8814a46_buildMultiRetType(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _65539_tokens, jule::I64* _65562_i);
inline __jule_tuple_x_1a7b87d10_RetTypeDecl__jule_tuple_bool _1a8814e42_buildRetType(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _72634_tokens, jule::I64* _72657_i);
inline jule::Ptr<_1a7b96acc_FnDecl> _1a88153e8_buildFnPrototype(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _76538_tokens, jule::I64* _76561_i, jule::Bool _76569_method);
inline jule::Ptr<_1a7b96acc_FnDecl> _1a881589e_buildFn(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _84229_tokens, jule::Bool _84247_method, jule::Bool _84261_prototype);
inline jule::Slice<jule::Ptr<_1a7b69b05_Token>> _1a8815be0_getUseDeclSelectors(_1a880dc2c_parser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _87639_tokens);
inline void _1a8816053_buildBindUseDecl(_1a880dc2c_parser* _self_, jule::Ptr<_1a7b9d023_UseDecl>* _90137_decl, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _90154_tokens);
inline jule::Str _1a8816394_useDeclTokstoa(_1a880dc2c_parser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _91431_tokens);
inline void _1a8816707_buildStdUseDecl(_1a880dc2c_parser* _self_, jule::Ptr<_1a7b9d023_UseDecl>* _92936_decl, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _92956_tokens);
inline void _1a8816a6a_buildIdentUseDecl(_1a880dc2c_parser* _self_, jule::Ptr<_1a7b9d023_UseDecl>* _98738_decl, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _98758_tokens);
inline void _1a8816dcd_parseUseDecl(_1a880dc2c_parser* _self_, jule::Ptr<_1a7b9d023_UseDecl>* _103533_decl, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _103553_tokens);
inline jule::Ptr<_1a7b9d023_UseDecl> _1a88172c9_buildUseDecl(_1a880dc2c_parser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _106932_tokens, jule::Bool _106950_binded);
inline jule::Ptr<_1a7b800b0_TypeDecl> _1a88176c5_buildTypeEnumItemKind(jule::Ptr<_1a880dc2c_parser> _self_, jule::I64* _108343_i, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _108356_tokens);
inline jule::Slice<jule::Ptr<_1a7b9e8b5_TypeEnumItemDecl>> _1a8817a16_buildTypeEnumItems(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _112040_tokens);
inline jule::Ptr<_1a7ba0025_TypeEnumDecl> _1a8817d57_buildTypeEnumDecl(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _114439_tokens);
inline jule::Ptr<_1a7b89251_Expr> _1a8818253_buildEnumItemExpr(jule::Ptr<_1a880dc2c_parser> _self_, jule::I64* _117139_i, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _117152_tokens);
inline jule::Slice<jule::Ptr<_1a7b9d4c9_EnumItemDecl>> _1a8818594_buildEnumItems(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _120336_tokens);
inline jule::Ptr<_1a7b9e08a_EnumDecl> _1a88188d5_buildEnumDecl(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _124035_tokens);
inline jule::Any _1a8818c26_buildNodeEnumDecl(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _128539_tokens);
inline jule::Ptr<_1a7ba02de_FieldDecl> _1a8819067_buildField(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _129431_tokens);
inline jule::Slice<jule::Ptr<_1a7ba02de_FieldDecl>> _1a88193a8_buildStructDeclFields(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _134342_tokens);
inline jule::Ptr<_1a7ba0bd5_StructDecl> _1a88196e9_buildStructDecl(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _135437_tokens);
inline void _1a88199a2_checkMethodReceiver(_1a880dc2c_parser* _self_, jule::Ptr<_1a7b96acc_FnDecl>* _140236_f);
inline void _1a8819d15_buildTraitBody(jule::Ptr<_1a880dc2c_parser> _self_, jule::Ptr<_1a7ba1422_TraitDecl>* _142136_t, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _142155_tokens);
inline jule::Ptr<_1a7ba1422_TraitDecl> _1a881a156_buildTraitDecl(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _145336_tokens);
inline jule::Ptr<_1a7b96acc_FnDecl> _1a881a497_buildBindFn(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _148332_tokens);
inline jule::Ptr<_1a7b97c87_VarDecl> _1a881a7d8_buildBindVar(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _149333_tokens);
inline jule::Ptr<_1a7ba0bd5_StructDecl> _1a881ab29_buildBindStruct(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _150636_tokens);
inline jule::Ptr<_1a7b9b939_TypeAliasDecl> _1a881ae6a_buildBindTypeAlias(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _152039_tokens);
inline jule::Ptr<_1a7b9d023_UseDecl> _1a881b2ab_buildBindUse(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _153033_tokens);
inline jule::Any _1a881b5ec_buildBind(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _154131_tokens);
inline jule::Ptr<_1a7b96acc_FnDecl> _1a881b93d_getMethod(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _156531_tokens);
inline void _1a881bca1_parseImplBody(jule::Ptr<_1a880dc2c_parser> _self_, jule::Ptr<_1a7ba1a82_Impl>* _159435_ipl, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _159452_tokens);
inline jule::Ptr<_1a7ba1a82_Impl> _1a881c0e2_buildImpl(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _162730_tokens);
inline jule::Any _1a881c433_buildNodeData(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _169835_tokens);
inline void _1a881c6db_applyFnMeta(_1a880dc2c_parser* _self_, jule::Ptr<_1a7b96acc_FnDecl>* _173132_f);
inline void _1a881c994_applyMeta(_1a880dc2c_parser* _self_, _1a7b7e0ae_Node* _173630_node);
inline void _1a881cc4c_pushUseDecl(jule::Ptr<_1a880dc2c_parser> _self_, jule::Ptr<_1a7b9d023_UseDecl>* _176133_decl);
inline jule::Bool _1a881d08d_pushMetaNodes(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _176935_tokens);
inline _1a7b7e0ae_Node _1a881d3ce_parseNode(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _178931_st);
inline void _1a881d687_appendNode(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _181332_st);
inline void _1a881db60_removeRange(_1a880dc2c_parser* _self_, jule::I64 _182327_i, jule::U64 _182335_id, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _182349_tokens, jule::Slice<jule::I64>* _182372_ranges);
inline void _1a881e07d_pushWrongOrderCloseErr(_1a880dc2c_parser* _self_, jule::Ptr<_1a7b69b05_Token>* _183539_t, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _183551_tokens, jule::Slice<jule::I64>* _183570_ranges);
inline void _1a881e556_pushRangeClose(_1a880dc2c_parser* _self_, jule::Ptr<_1a7b69b05_Token> _184630_t, jule::U64 _184641_left, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _184657_tokens, jule::Slice<jule::I64>* _184680_ranges);
inline void _1a881e80e_checkRanges(_1a880dc2c_parser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _186428_tokens);
inline void _1a881eab7_parse(jule::Ptr<_1a880dc2c_parser> _self_, jule::Ptr<_1a7b7038b_File>* _189527_f);
inline void _1a8821426_pushErr(_1a8820d4e_typeBuilder* _self_, jule::Ptr<_1a7b69b05_Token> _4123_token, jule::Str _4138_fmt);
inline void _1a8821789_pushSuggestion(_1a8820d4e_typeBuilder* _self_, jule::Str _4830_fmt, jule::Slice<jule::Any> _4843_args);
inline jule::Ptr<_1a7b800b0_TypeDecl> _1a8821a20_buildNamespace(_1a8820d4e_typeBuilder* _self_);
inline jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>> _1a8821ca6_buildGenerics(_1a8820d4e_typeBuilder* _self_);
inline jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _1a882203c_identGenerics(_1a8820d4e_typeBuilder* _self_);
inline jule::Ptr<_1a7b800b0_TypeDecl> _1a88222c3_buildIdent(_1a8820d4e_typeBuilder* _self_);
inline jule::Ptr<_1a7b800b0_TypeDecl> _1a8822559_buildCppLink(_1a8820d4e_typeBuilder* _self_);
inline jule::Ptr<_1a7b800b0_TypeDecl> _1a88227e0_buildFn(_1a8820d4e_typeBuilder* _self_);
inline jule::Ptr<_1a7b800b0_TypeDecl> _1a8822a76_buildPtr(_1a8820d4e_typeBuilder* _self_);
inline jule::Ptr<_1a7b800b0_TypeDecl> _1a8822d0c_buildSptr(_1a8820d4e_typeBuilder* _self_);
inline jule::Ptr<_1a7b800b0_TypeDecl> _1a8823093_buildSlc(_1a8820d4e_typeBuilder* _self_);
inline jule::Ptr<_1a7b800b0_TypeDecl> _1a8823329_buildArr(_1a8820d4e_typeBuilder* _self_);
inline jule::Ptr<_1a7b800b0_TypeDecl> _1a88235b0_buildMap(_1a8820d4e_typeBuilder* _self_);
inline jule::Ptr<_1a7b800b0_TypeDecl> _1a8823846_buildEnumerable(_1a8820d4e_typeBuilder* _self_);
inline jule::Ptr<_1a7b800b0_TypeDecl> _1a8823acc_step(_1a8820d4e_typeBuilder* _self_);
inline __jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool _1a8823d63_build(_1a8820d4e_typeBuilder* _self_);
inline void _1a804e98a_pushErr(_1a804e407_directiveEval* _self_, jule::Ptr<_1a7b69b05_Token> _2123_t, jule::Str _2134_fmt, jule::Slice<jule::Any> _2147_args);
inline jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _1a804ed86_splitOperans(_1a804e407_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _3346_tokens);
inline jule::Bool _1a80501c7_evalDirectiveIdent(_1a804e407_directiveEval* _self_, jule::Str _6430_ident);
inline jule::Bool _1a8050518_evalDirectivePart(_1a804e407_directiveEval* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _7837_part);
inline jule::Bool _1a805079e_eval(_1a804e407_directiveEval* _self_);
inline jule::Ptr<_1a8824e85_JuleImporter> static__1a88253b4_New(_1a804ce2d_CompileInfo _5816_info);
inline jule::Slice<jule::Ptr<_1a7c36793_ImportInfo>> _1a882564a_AllPackages(_1a8824e85_JuleImporter* _self_);
inline void _1a8825a8a_SetModPath(_1a8824e85_JuleImporter* _self_, jule::Str _7526_path);
inline jule::Str _1a8825d21_GetModPath(_1a8824e85_JuleImporter* _self_);
inline jule::Str _1a8826162_ModById(_1a8824e85_JuleImporter* _self_, jule::I64 _8319_id);
inline jule::Ptr<_1a7c36793_ImportInfo> _1a88264a3_GetImport(_1a8824e85_JuleImporter* _self_, jule::Str _8725_path);
inline __jule_tuple_sx_1a7b7d19b_AST__jule_tuple_s_1d9144ab5_Log _1a882689e_ImportPackage(_1a8824e85_JuleImporter* _self_, jule::Str _9629_path, jule::Bool _9640_updateMod);
inline void _1a8826b57_Imported(_1a8824e85_JuleImporter* _self_, jule::Ptr<_1a7c36793_ImportInfo> _15328_imp);
inline __jule_tuple_bool__jule_tuple_s_1d9144ab5_Log _1a8827086_isPassBuildDirectives(_1a8824e85_JuleImporter* _self_, jule::Ptr<_1a7b7d19b_AST>* _17942_file);
inline jule::Ptr<_1a882b992_ExprInspector> static__1a882bd38_New(void);
inline void _1a882c0e1_args(_1a882b992_ExprInspector* _self_, jule::Slice<jule::Any> _5624_args);
inline void _1a882c399_inspect(_1a882b992_ExprInspector* _self_, jule::Any* _6228_m);
inline void _1a882c70c_Inspect(_1a882b992_ExprInspector* _self_, jule::Any* _18928_m, jule::Fn<void,jule::Any*> _18942_f);
inline jule::Bool _1a896c2ec_isAllMethodsLive(_1a896be89_specialCaseDefines* _self_, jule::Ptr<_1a7ba5ca6_Struct> _3028_s);
inline jule::Ptr<_1a896cd58_ObjectDeadCode> static__1a896d3ca_new(jule::Ptr<_1a882795a_IR>* _5021_ir);
inline jule::Bool _1ac8a5aa0_isLive(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _5627_t);
inline jule::Bool _1ac8ac997_isLive(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _5627_t);
inline jule::Bool _1ac8d45c3_isLive(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7bce362_Trait>* _5627_t);
inline jule::Bool _1ac8de7ed_isLive(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7c7b178_Var>* _5627_t);
inline void _1ac8a64a7_pushLive(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7ba8b11_StructIns> _7632_t);
inline void _1ac8acda4_pushLive(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7bbd8b2_FnIns> _7632_t);
inline void _1ac8d4eca_pushLive(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7bce362_Trait> _7632_t);
inline void _1ac8deba5_pushLive(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7c7b178_Var> _7632_t);
inline void _1a896dc49_pushStructAsLive(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _8938_s);
inline void _1a896e002_setReferencesAsLive(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7bc1a4c_ReferenceStack>* _15241_rs);
inline void _1a896e2aa_inits(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7c396b9_Package>* _20227_pkg);
inline void _1a896e563_collectLivePackage(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7c396b9_Package>* _21640_pkg);
inline void _1a896e761_collectLive(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_);
inline void _1a896ea19_removeDeadGlobals(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a7c7b178_Var>>* _29239_vars);
inline void _1a896ecc2_removeDeadFns(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a7bba8d1_Fn>>* _30435_funcs);
inline void _1a897007a_removeDeadStructs(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>>* _32539_structs);
inline void _1a8970333_removeDeadTraits(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a7bce362_Trait>>* _34738_traits);
inline void _1a89705db_removeDeadsFile(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7ccd9e4_SymbolTable>* _36837_file);
inline void _1a8970894_removeDeadsPackage(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7c396b9_Package>* _37540_pkg);
inline void _1a8970a92_removeDeads(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_);
inline void _1a8970c90_collectSpecialCaseDefines(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_);
inline void _1a8970e8d_elimanate(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_);
inline void _1a897249a_optimizeChild(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Ptr<_1a7c1397e_Scope>* _3935_s);
inline void _1a8972753_optimizeBodyChildExceptional(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Ptr<_1a7c1397e_Scope>* _4950_s);
inline void _1a8972a0b_optimizeBodyChild(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Ptr<_1a7c1397e_Scope>* _5939_s);
inline void _1a8972cb4_optimizeExprModel(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Any* _6839_model);
inline void _1a8972eb2_eliminateFollowed(_1a8971e7d_scopeDeadCode* _self_);
inline void _1a897326a_pushGoto(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Ptr<_1a7c16b3b_GotoSt> _8929_gt);
inline void _1a8973523_pushLabel(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Ptr<_1a7c164cb_Label> _9930_l);
inline void _1a89737cb_optimizeRangeIter(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Ptr<_1a7c157b6_RangeIter> _11238_it);
inline void _1a8973a84_optimizeWhileIter(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Ptr<_1a7c14d6a_WhileIter> _11738_it);
inline void _1a8973d3c_optimizeInfIter(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Ptr<_1a7c148b4_InfIter> _12536_it);
inline void _1a89740e5_optimizeConditional(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Ptr<_1a7c145b7_Conditional> _12940_c);
inline void _1a897439d_optimizeMatch(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Ptr<_1a7c181ae_Match> _14734_m);
inline void _1a8974656_optimizeAssign(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Ptr<_1a7c174bb_Assign> _16535_assign);
inline void _1a897490e_optimizeMultiAssign(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Ptr<_1a7c17972_MultiAssign> _17040_assign);
inline void _1a8974bb7_optimizeStmt(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Any _17933_st);
inline void _1a8974db5_optimizeStmts(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_);
inline _1a8976625_exprDeadCode static__1a89769dd_new(jule::Ptr<_1a8971e7d_scopeDeadCode>* _1821_s);
inline void _1a8976c96_optimize(_1a8976625_exprDeadCode* _self_, jule::Any* _2425_model);
inline void _1a7e16a94_pushVar(_1a7e165ee_nils* _self_, jule::Uintptr _2923_var, jule::Bool _2937_safe);
inline jule::Bool _1a7e16dd5_removeVar(_1a7e165ee_nils* _self_, jule::Uintptr _5225_var);
inline jule::Bool _1a7e17226_isSafe(_1a7e165ee_nils* _self_, jule::Uintptr _6622_var);
inline jule::Ptr<_1a8834769_scopeOptimizer> static__1a8834d1e_new(jule::Ptr<_1a7c1397e_Scope> _5120_scope);
inline void _1a88350c7_setCurrentStmt(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Any _6335_stmt);
inline void _1a88352c5_removeCurrent(jule::Ptr<_1a8834769_scopeOptimizer> _self_);
inline jule::Bool _1a883555b_isLastStmt(jule::Ptr<_1a8834769_scopeOptimizer> _self_);
inline jule::Bool _1a88357e2_isIter(jule::Ptr<_1a8834769_scopeOptimizer> _self_);
inline void _1a8835a9a_optimizeData(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7cd41ae_Data> _9533_d);
inline void _1a8835d53_optimizeVar(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c7b178_Var> _12132_v);
inline void _1a883610b_optimizeConditional(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c145b7_Conditional> _14240_c);
inline void _1a8836529_buildDefaultConstantTrueCase(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c18bd7_Case> _21649_case, jule::I64* _21667_i, jule::Ptr<_1a7c181ae_Match>* _21680_m);
inline void _1a88367d2_optimizeMatch(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c181ae_Match> _24234_m);
inline void _1a8836a8a_optimizeRangeIter(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c157b6_RangeIter> _32438_it);
inline void _1a8836d43_optimizeWhileIter(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c14d6a_WhileIter> _36938_it);
inline jule::Bool _1a8837184_substr(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c174bb_Assign> _37527_a);
inline jule::Bool _1a88374c5_strAssign(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c174bb_Assign> _39530_a);
inline jule::Bool _1a8837816_sliceAssign(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c174bb_Assign> _40632_a);
inline void _1a8837abe_optimizePostfix(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c17015_Postfix> _41436_postfix);
inline void _1a8837d77_optimizeAssign(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c174bb_Assign> _42135_assign);
inline jule::Bool _1a88381b8_tryOptimizeSwap(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c17972_MultiAssign>* _53537_assign);
inline void _1a8838471_optimizeMultiAssign(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c17972_MultiAssign> _57240_assign);
inline void _1a8838729_optimizeRet(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c19776_RetSt> _61832_r);
inline void _1a88389d2_optimizeStmt(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Any _64233_stmt);
inline void _1a8838c8a_optimizeChild(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c1397e_Scope> _67134_child);
inline void _1a8838e88_optimize(jule::Ptr<_1a8834769_scopeOptimizer> _self_);
inline void static__1a883b694_optimize(jule::Any* _3626_model);
inline void static__1a883b980_optimizeData(jule::Any* _4030_model, jule::Ptr<_1a884457b_data>* _4053_d);
inline jule::Bool _1a883bcc1_selfCmpCond(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7bace23_BinaryExprModel>* _5228_m);
inline jule::Bool _1a883c112_boolCond(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7bace23_BinaryExprModel>* _7625_m);
inline jule::Bool _1a883c453_strCond(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7bace23_BinaryExprModel> _12923_m);
inline jule::Bool _1a883c909_tryNeutralElement1(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7bace23_BinaryExprModel>* _18635_m, jule::Ptr<_1c006a461_Const> _18660_c, jule::Ptr<_1a7bac928_OperandExprModel>* _18672_nc);
inline jule::Bool _1a883cc4a_tryNeutralElement(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7bace23_BinaryExprModel>* _23034_m);
inline void _1a883d003_checkBinaryForBoundary(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7bace23_BinaryExprModel>* _24539_m);
inline void _1a883d2ab_checkBinaryForNil(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7bace23_BinaryExprModel>* _29734_m);
inline void _1a883d564_binary(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7bace23_BinaryExprModel> _32922_m);
inline void _1a883d81c_unary(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7bad2ec_UnaryExprModel> _42721_m);
inline void _1a883dac5_structureLit(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7badbc1_StructLitExprModel> _47028_m);
inline void _1a883dd7d_casting(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7bae551_CastingExprModel> _48623_m);
inline void _1a883e1e1_args(_1a883b1bb_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>> _50020_params, jule::Slice<jule::Any>* _50046_args);
inline void _1a883e499_scope(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7c1397e_Scope>* _52222_s);
inline void _1a883e752_funcCall(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7baee03_FnCallExprModel> _52824_m);
inline void _1a883ea0a_indexing(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7bb0783_IndexingExprModel> _53524_m);
inline void _1a883ecb3_anonFunc(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7bb0c39_AnonFnExprModel> _55924_m);
inline void _1a883eeb1_do(_1a883b1bb_exprOptimizer* _self_);
inline void _1a8841d92_pushVar(jule::Ptr<_1a88418ec_dynamic> _self_, jule::Uintptr _3224_var, jule::Ptr<_1a7d1bc96_TypeKind> _3242_kind);
inline jule::Bool _1a88421d3_removeVar(_1a88418ec_dynamic* _self_, jule::Uintptr _5525_var);
inline jule::Bool _1a88425ce_isFits(_1a88418ec_dynamic* _self_, jule::Uintptr _6922_var, jule::Ptr<_1a7d1bc96_TypeKind> _6936_kind);
inline _1a8844081_dataCheckpoint _1a8844933_getCheckpoint(_1a884457b_data* _self_);
inline void _1a8844bdb_loadCheckpoint(_1a884457b_data* _self_, _1a8844081_dataCheckpoint* _3535_c);
inline void _1a8846418_pushVar(_1a8845e73_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize);
inline jule::Bool _1a8846b55_fitsMaxSize(_1a8845e73_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr);
inline jule::Ptr<_1a8977747_Optimizer> static__1a8977bed_New(jule::Ptr<_1a882795a_IR>* _2621_ir);
inline void _1a8977ea6_optimizeGlobal(_1a8977747_Optimizer* _self_, jule::Ptr<_1a7c7b178_Var>* _3235_v);
inline void _1a897825e_optimizeFunction(_1a8977747_Optimizer* _self_, jule::Ptr<_1a7bba8d1_Fn>* _3837_func);
inline void _1a8978517_optimizeStruct(_1a8977747_Optimizer* _self_, jule::Ptr<_1a7ba5ca6_Struct>* _4835_s);
inline void _1a89787c0_optimizeGlobals(_1a8977747_Optimizer* _self_, jule::Ptr<_1a7c396b9_Package>* _6436_p);
inline void _1a8978a78_optimizeFunctions(_1a8977747_Optimizer* _self_, jule::Ptr<_1a7c396b9_Package>* _7238_p);
inline void _1a8978d31_optimizeStructs(_1a8977747_Optimizer* _self_, jule::Ptr<_1a7c396b9_Package>* _8036_p);
inline void _1a89790d9_optimizePackage(_1a8977747_Optimizer* _self_, jule::Ptr<_1a7c396b9_Package>* _8836_p);
inline void _1a89792d7_Optimize(_1a8977747_Optimizer* _self_);
inline void static__1a89798e2_Reset(void);
inline void static__1a899c96a_Print(jule::Str _1918_escape, jule::Str _1931_text);
inline void static__1a89a0473_LogFlat(_1d9144ab5_Log* _1421_l);
inline void static__1a89a06a4_LogError(_1d9144ab5_Log* _1922_l);
inline void static__1a89a08d5_Log(_1d9144ab5_Log* _6417_l);
inline void static__1a89a0b16_PrintLogs(jule::Slice<_1d9144ab5_Log>* _7423_logs);
inline _1a9688743_Time static__1a9688b2d_Unix(jule::U64 _9117_sec);
inline _1a9688743_Time static__1a9688d3c_Now(void);
inline _1a968806c_AbsTime _1a968a525_Abs(_1a9688743_Time* _self_);
inline jule::Ptr<_1a95aebec_scopeCoder> static__1a95b03e5_new(jule::Ptr<_1a9694078_ObjectCoder>* _7321_oc);
inline void _1accc7bb4_iterHead(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c157b6_RangeIter>* _8029_it, jule::Bool* _8041_ref, jule::Str _8052_begin);
inline void _1a95b0abb_rangeIndexIter(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c157b6_RangeIter>* _12936_it);
inline void _1a95b0d74_rangeHashmapIter(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c157b6_RangeIter>* _19638_it);
inline void _1a95b112c_strRuneIter(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7e14ed2_StrRuneIter> _27932_it);
inline void _1a95b13d5_ifCase(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c13d9c_If> _39127_i);
inline void _1a95b168d_conditional(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c145b7_Conditional> _40032_c);
inline void _1a95b1946_infIter(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c148b4_InfIter> _42028_it);
inline void _1a95b1bee_whileIter(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c14d6a_WhileIter> _43730_it);
inline void _1a95b1ea7_rangeIter(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c157b6_RangeIter> _47630_it);
inline void _1a95b2260_cont(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c15b4b_ContSt> _48921_c);
inline void _1a95b2518_label(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c164cb_Label> _49422_l);
inline void _1a95b27c1_gotoSt(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c16b3b_GotoSt> _49923_gt);
inline void _1a95b2a79_postfix(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c17015_Postfix> _50428_p);
inline void _1a95b2d32_assignLeft(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Any* _51132_model);
inline void _1a95b30da_shl(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c174bb_Assign> _54324_a);
inline void _1a95b3393_shr(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c174bb_Assign> _54924_a);
inline void _1a95b364b_divByZeroAssign(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c174bb_Assign> _55536_a);
inline void _1a95b3b24_operatorOverloadingAssign(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _56147_s, jule::Ptr<_1a7bac928_OperandExprModel>* _56173_l, jule::Ptr<_1a7bac928_OperandExprModel>* _5628_r, jule::U64 _56236_op);
inline void _1a95b3dcc_assign(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c174bb_Assign> _57627_a);
inline void _1a95b4185_mapLookupAssign(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c17972_MultiAssign>* _60937_a);
inline void _1a95b443d_multiAssignTup(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c17972_MultiAssign>* _64236_a);
inline void _1a95b46e6_multiAssignFn(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c17972_MultiAssign>* _69135_a);
inline void _1a95b499e_multiAssign(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c17972_MultiAssign> _75032_a);
inline jule::Fn<void> _1a95b4ce0_matchExpr(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c181ae_Match> _77630_m);
inline void _1a95b5153_case(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c181ae_Match> _78625_m, jule::Ptr<_1a7c18bd7_Case> _78640_c);
inline void _1a95b540b_matchSt(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c181ae_Match> _85628_m);
inline void _1a95b56b4_fallSt(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c193d0_FallSt> _91123_f);
inline void _1a95b596c_breakSt(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c16025_BreakSt> _91624_b);
inline void _1a95b5c25_setResult(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c19776_RetSt> _92530_r);
inline void _1a95b5ecd_retSt(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c19776_RetSt> _95326_r);
inline void _1a95b6286_var(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c7b178_Var> _98924_v);
inline void _1a95b653e_mutSlicing(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7e13bc3_MutSlicingExprModel> _99531_m);
inline void _1a95b67e7_swap(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7e1296e_SwapExprModel> _101225_m);
inline void _1a95b6aa0_exceptionalForwarding(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7e125d9_ExceptionalForwardingExprModel> _102042_m);
inline void _1a95b6d58_st(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Any _102623_st);
inline void _1a95b7111_scopeStmts(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c1397e_Scope>* _108232_s);
inline void _1a95b73b9_scope(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c1397e_Scope> _109126_s);
inline void _1a95b7672_commonFuncScope(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _110637_f);
inline void _1a95b79d5_anonFuncScope(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7bb0c39_AnonFnExprModel> _114634_m, jule::Str _114655_ident);
inline void _1a95b7c8d_funcScope(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7bbd8b2_FnIns> _117830_f);
inline jule::Ptr<_1a95bb4cd_exprCoder> static__1a95bb8c9_new(jule::Ptr<_1a9694078_ObjectCoder>* _11321_oc);
inline void _1a95bbb82_string(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1c006a461_Const>* _11924_c);
inline void _1a95bbe3a_boolean(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Bool _13424_b);
inline void _1a95bc138_nilLit(jule::Ptr<_1a95bb4cd_exprCoder> _self_);
inline jule::Bool _1a95bc479_ftoaSpecialCases(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::F64* _14634_x);
inline void _1a95bc732_float32(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1c006a461_Const>* _16025_c);
inline void _1a95bc9da_float64(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1c006a461_Const>* _17925_c);
inline void _1a95bcc93_constant(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1c006a461_Const> _19729_c);
inline void _1a95bd1b1_operatorOverloadingUnary(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _22146_s, jule::U64 _22161_op, jule::Any _22178_e);
inline void _1a95bd5ce_divByZeroBinary(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7b69b05_Token>* _23333_op, jule::Ptr<_1a7bac928_OperandExprModel>* _23350_l, jule::Ptr<_1a7bac928_OperandExprModel>* _23377_r);
inline void _1a95bdcc7__unsafeBinary(jule::Ptr<_1a95bb4cd_exprCoder> _self_, _1daed18b7_StrBuilder* _27235_buf, jule::Str* _27253_l, jule::Str* _27262_r, jule::Ptr<_1a7d1bc96_TypeKind>* _2738_lk, jule::Ptr<_1a7d1bc96_TypeKind>* _27328_rk, jule::U64 _27343_op, jule::Str _27356_kind);
inline void _1a95be080_unsafeBinary(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bace23_BinaryExprModel> _34333_m);
inline void _1a95be3e3_shl(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bac928_OperandExprModel>* _35525_l, jule::Ptr<_1a7bac928_OperandExprModel>* _35552_r);
inline void _1a95be756_shr(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bac928_OperandExprModel>* _38325_l, jule::Ptr<_1a7bac928_OperandExprModel>* _38352_r);
inline void _1a95bea0e_binary(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bace23_BinaryExprModel> _41127_m);
inline void _1a95becb7_var(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7c7b178_Var> _43524_m);
inline void _1a95c0070_structureIns(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7ba8b11_StructIns> _45133_m);
inline void _1a95c0328_unary(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bad2ec_UnaryExprModel> _45526_m);
inline void _1a95c05d1_structureLit(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7badbc1_StructLitExprModel> _48633_m);
inline void _1a95c0889_allocStructure(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7badebd_AllocStructLitExprModel> _52935_m);
inline void _1a95c0b42_possibleRefExpr(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Any _53732_expr);
inline void _1a95c1060_castTraitFromTrait(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bae551_CastingExprModel>* _55140_m, jule::Ptr<_1a7bce362_Trait> _55166_t1, jule::Ptr<_1a7bce362_Trait> _55182_t2);
inline void _1a95c1318_casting(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bae551_CastingExprModel> _56428_m);
inline void _1a95c15c1_args(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7baee03_FnCallExprModel>* _71126_m);
inline void _1a95c1879_modelForCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Any _74233_expr);
inline void _1a95c1b32_pushCallInf(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7baee03_FnCallExprModel>* _75729_m);
inline jule::Bool _1a95c1e73_isWrapped(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7baee03_FnCallExprModel>* _78031_m);
inline jule::Bool _1a95c22b4_writeReceiver(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Any _80434_m);
inline void _1a95c256c_pureFuncCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7baee03_FnCallExprModel>* _81734_m);
inline void _1a95c2825_coFuncCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7baee03_FnCallExprModel>* _90732_m);
inline void _1a95c2b88_writeUseExpr(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _95834_f, jule::Ptr<_1a7cd41ae_Data> _95849_d);
inline void _1a95c2e41_funcCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7baee03_FnCallExprModel> _97929_m);
inline void _1a95c31e9_slice(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb02cc_SliceExprModel> _105226_m);
inline void _1a95c34a2_indexing(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb0783_IndexingExprModel> _108129_m);
inline void _1a95c375a_unsafeIndexing(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7e14355_UnsafeIndexingExprModel> _113335_m);
inline void _1a95c3a13_anonFunc(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb0c39_AnonFnExprModel> _115029_m);
inline void _1a95c3cbb_mapExpr(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb14dc_MapExprModel> _118128_m);
inline void _1a95c4074_slicing(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb1a70_SlicingExprModel> _121728_m);
inline void _1a95c432c_traitSub(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb2103_TraitSubIdentExprModel> _123329_m);
inline void _1a95c45d5_structureSub(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb2994_StructSubIdentExprModel> _124933_m);
inline void _1a95c488d_array(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb3214_ArrayExprModel> _125826_m);
inline void _1a95c4b46_funcInsCommon(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bbd8b2_FnIns> _130834_m);
inline void _1a95c4dee_funcIns(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bbd8b2_FnIns> _131528_m);
inline void _1a95c51a7_tuple(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb3511_TupleExprModel> _132626_m);
inline void _1a95c5460_newCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb418d_BuiltinNewCallExprModel> _133728_m);
inline void _1a95c5718_outCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb38da_BuiltinOutCallExprModel> _134928_m);
inline void _1a95c59c1_outlnCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb3cb4_BuiltinOutlnCallExprModel> _136230_m);
inline void _1a95c5c79_panicCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb4567_BuiltinPanicCallExprModel> _137530_m);
inline void _1a95c6032_assertCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb4a1d_BuiltinAssertCallExprModel> _138331_m);
inline void _1a95c62da_errorCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb6624_BuiltinErrorCallExprModel> _139630_m);
inline void _1a95c6593_copyCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb624a_BuiltinCopyCallExprModel> _142829_m);
inline void _1a95c684b_lenCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb569a_BuiltinLenCallExprModel> _143628_m);
inline void _1a95c6b04_capCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb5997_BuiltinCapCallExprModel> _145328_m);
inline void _1a95c6dac_deleteCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb5d71_BuiltinDeleteCallExprModel> _145831_m);
inline void _1a95c7165_makeCallSlice(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb4ec4_BuiltinMakeCallExprModel>* _148335_m);
inline void _1a95c741d_makeCallStr(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb4ec4_BuiltinMakeCallExprModel>* _150733_m);
inline void _1a95c76c6_makeCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb4ec4_BuiltinMakeCallExprModel> _151829_m);
inline void _1a95c797e_pushToSlice(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7e1472e_PushToSliceExprModel> _152632_m);
inline void _1a95c7c37_appendToSlice(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7e14b08_AppendToSliceExprModel> _158634_m);
inline void _1a95c7ee0_appendCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb539d_BuiltinAppendCallExprModel> _159431_m);
inline void _1a95c8298_sizeof(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb6cc8_SizeofExprModel> _160227_m);
inline void _1a95c8551_alignof(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb6eb5_AlignofExprModel> _160828_m);
inline void _1a95c8809_runeLit(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb725c_RuneExprModel> _161424_m);
inline void _1a95c8ab2_structureStatic(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb2d3a_StructStaticIdentExprModel> _162836_m);
inline void _1a95c8d6a_backendEmit(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb7636_BackendEmitExprModel> _163232_m);
inline void _1a95c9123_free(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb7933_FreeExprModel> _164825_m);
inline void _1a95c93cb_strComp(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7e13640_StrCompExprModel> _165728_m);
inline void _1a95c9684_emptyCompare(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7e12d48_EmptyCompareExprModel> _167333_m);
inline void _1a95c993c_unsafeDeref(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7e152ce_UnsafeDerefExprModel> _168232_m);
inline void _1a95c9be5_unsafeCasting(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7e155cb_UnsafeCastingExprModel> _169334_m);
inline void _1a95c9e9d_model(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Any _171026_m);
inline jule::Bool _1a95ca2de_handleFieldByDefault(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7ba8061_FieldIns>* _181242_f);
inline void _1a95ca597_initStructLit(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _183335_s);
inline void _1a95ca850_fillCollectionByDefault(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _185545_elem);
inline void _1a95cab08_initCollection(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _187036_elem);
inline void _1a95cadb1_initArray(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7d2b6ce_Arr>* _188431_arr);
inline void _1a95cb169_initExpr(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _189829_t);
inline jule::Ptr<_1a95ce03a_TestCoder> static__1a95ce4e1_New(jule::Ptr<_1a9694078_ObjectCoder>* _2921_oc);
inline jule::Ptr<_1a7c36793_ImportInfo> _1a95ce777_findTestingPackage(jule::Ptr<_1a95ce03a_TestCoder> _self_);
inline void _1a95cea30_appendTest(jule::Ptr<_1a95ce03a_TestCoder> _self_, jule::Ptr<_1a7bbd8b2_FnIns> _4431_f);
inline void _1a95cecd8_appendPackageTests(jule::Ptr<_1a95ce03a_TestCoder> _self_, jule::Ptr<_1a7c396b9_Package>* _5940_p);
inline jule::Bool _1a95d006e_readyTestingPackage(jule::Ptr<_1a95ce03a_TestCoder> _self_);
inline void _1a95d026c_callTmReset(jule::Ptr<_1a95ce03a_TestCoder> _self_);
inline void _1a95d046a_callTmFailed(jule::Ptr<_1a95ce03a_TestCoder> _self_);
inline void _1a95d0668_callTmSkipped(jule::Ptr<_1a95ce03a_TestCoder> _self_);
inline void _1a95d0866_Serialize(jule::Ptr<_1a95ce03a_TestCoder> _self_);
inline void static__1a95d2505_writeIdentTo(_1daed18b7_StrBuilder* _3530_buf, jule::Str* _3548_ident);
inline void static__1a95d289b_toOut(_1daed18b7_StrBuilder* _6323_buf, jule::Str _6340_ident, jule::Uintptr _6352_addr);
inline void static__1a95d2cec_toLocal(_1daed18b7_StrBuilder* _7825_buf, jule::I64 _7842_row, jule::I64 _7852_col, jule::Str* _7863_ident);
inline void static__1a95d30d8_func(_1daed18b7_StrBuilder* _8622_buf, jule::Ptr<_1a7bba8d1_Fn>* _8644_f);
inline void static__1a95d33c4_funcIns(_1daed18b7_StrBuilder* _10725_buf, jule::Ptr<_1a7bbd8b2_FnIns>* _10747_f);
inline void static__1a95d36b0_traitDecl(_1daed18b7_StrBuilder* _12227_buf, jule::Ptr<_1a7bce362_Trait> _12244_t);
inline void static__1a95d399b_param(_1daed18b7_StrBuilder* _12623_buf, jule::Ptr<_1a7bb8e0c_Param>* _12641_p);
inline void static__1a95d3c87_structure(_1daed18b7_StrBuilder* _14127_buf, jule::Ptr<_1a7ba5ca6_Struct>* _14145_s);
inline void static__1a95d4073_structureIns(_1daed18b7_StrBuilder* _15230_buf, jule::Ptr<_1a7ba8b11_StructIns>* _15248_s);
inline void static__1a95d435e_field(_1daed18b7_StrBuilder* _16023_buf, jule::Ptr<_1a7ba2d80_Field>* _16041_f);
inline void static__1a95d464a_var(_1daed18b7_StrBuilder* _17021_buf, jule::Ptr<_1a7c7b178_Var> _17042_v);
inline void static__1a95d4936_iterBegin(_1daed18b7_StrBuilder* _19727_buf, jule::Uintptr _19744_it);
inline void static__1a95d4c22_iterEnd(_1daed18b7_StrBuilder* _20225_buf, jule::Uintptr _20242_it);
inline void static__1a95d500d_iterNext(_1daed18b7_StrBuilder* _20726_buf, jule::Uintptr _20743_it);
inline void static__1a95d52e9_label(_1daed18b7_StrBuilder* _21223_buf, jule::Uintptr _21240_u);
inline void static__1a95d55d5_matchEnd(_1daed18b7_StrBuilder* _21726_buf, jule::Uintptr _21743_m);
inline void static__1a95d58c1_caseBegin(_1daed18b7_StrBuilder* _22227_buf, jule::Uintptr _22244_c);
inline jule::Ptr<_1a9694078_ObjectCoder> static__1a96944a7_New(jule::Ptr<_1a882795a_IR>* _11721_ir, _1a96922c9_SerializationInfo _11730_info);
inline void _1a9694760_write(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Str _13022_s);
inline void _1a9694a18_writeBytes(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Slice<jule::U8> _13427_b);
inline void _1a9694c16_addIndent(jule::Ptr<_1a9694078_ObjectCoder> _self_);
inline void _1a9694e14_doneIndent(jule::Ptr<_1a9694078_ObjectCoder> _self_);
inline void _1a9695112_indent(jule::Ptr<_1a9694078_ObjectCoder> _self_);
inline jule::I64 _1a9695453_findAnyType(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _15333_t);
inline jule::I64 _1a9695794_pushDealloc(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _16232_t);
inline jule::Str _1a9695ad5_pushAnonFn(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bb0c39_AnonFnExprModel>* _17832_m);
inline jule::I64 _1a9695e26_pushAnyType(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _21832_t);
inline void _1a96961ce_pushResultIns(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _32935_f);
inline void _1a9696487_pushResult(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bba8d1_Fn>* _35032_f);
inline void _1a96967ea_pushAndWriteMaskMapper(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bce362_Trait> _36343_t1, jule::Ptr<_1a7bce362_Trait> _36359_t2);
inline void _1a9696aa3_locInfo(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7b69b05_Token>* _41425_t);
inline void _1a9696ca1_head(jule::Ptr<_1a9694078_ObjectCoder> _self_);
inline void _1a9697059_links(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Bool _48122_std);
inline void _1a9697312_prepareStructure(_1a9694078_ObjectCoder* _self_, jule::Ptr<_1a7ba5ca6_Struct>* _50437_s);
inline void _1a9697510_prepareStructures(jule::Ptr<_1a9694078_ObjectCoder> _self_);
inline void _1a96977b8_structurePlainDecl(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7ba5ca6_Struct>* _53540_s);
inline void _1a96979b6_structurePlainDecls(jule::Ptr<_1a9694078_ObjectCoder> _self_);
inline void _1a9697c6e_fieldDecl(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7ba8061_FieldIns>* _55131_f);
inline void _1a9698027_structureDestructor(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _55841_s);
inline void _1a9698445_structureOperatorEq(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Str _57436_ident, jule::Ptr<_1a7ba8b11_StructIns>* _57453_s, jule::Bool _57468_decl);
inline void _1a96987a8_structureOperators(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _64240_s, jule::Bool _64255_decl);
inline void _1a9698a61_structureInsDecl(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _65138_s);
inline void _1a9698d19_structureDecl(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7ba5ca6_Struct>* _68135_s);
inline void _1a9699017_structureDecls(jule::Ptr<_1a9694078_ObjectCoder> _self_);
inline void _1a9699215_structureMethodDecls(jule::Ptr<_1a9694078_ObjectCoder> _self_);
inline void _1a96996dd_funcHead(jule::Ptr<_1a9694078_ObjectCoder> _self_, _1daed18b7_StrBuilder* _71530_buf, jule::Ptr<_1a7bbd8b2_FnIns>* _71552_f, jule::Bool _71563_ptr, jule::Str _71574_ident);
inline void _1a9699a51_funcDeclIns(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _73433_f, jule::Bool _73444_ptr);
inline void _1a9699db4_funcDecl(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bba8d1_Fn>* _74130_f, jule::Bool _74138_ptr);
inline void _1a969a16c_funcDeclTrait(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bba8d1_Fn>* _74735_f);
inline void _1a969a36a_funcDecls(jule::Ptr<_1a9694078_ObjectCoder> _self_);
inline void _1a969a623_traitDataTypeMethods(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bce362_Trait>* _76942_t);
inline void _1a969a821_traitDataTypes(jule::Ptr<_1a9694078_ObjectCoder> _self_);
inline void _1a969ab84_paramIns(jule::Ptr<_1a9694078_ObjectCoder> _self_, _1daed18b7_StrBuilder* _80530_buf, jule::Ptr<_1a7bbc839_ParamIns>* _80552_p);
inline void _1a969aee7_paramsIns(jule::Ptr<_1a9694078_ObjectCoder> _self_, _1daed18b7_StrBuilder* _81131_buf, jule::Ptr<_1a7bbd8b2_FnIns>* _81153_f);
inline void _1a969b35a_varInitExpr(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7c7b178_Var>* _83233_v, jule::Fn<void> _83242_init);
inline void _1a969b613_var(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7c7b178_Var> _85024_v);
inline void _1a969b976_anonFuncInsDecl(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bb0c39_AnonFnExprModel>* _88137_m, jule::Str _88158_ident);
inline void _1a969bcd9_anonFuncIns(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bb0c39_AnonFnExprModel>* _88733_m, jule::Str _88754_ident);
inline void _1a969c14c_funcIns(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _89729_f, jule::Str _89740_ident);
inline void _1a969c405_func(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bba8d1_Fn>* _90726_f);
inline void _1a969c768_funcTrait(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _91327_s, jule::Ptr<_1a7bbd8b2_FnIns>* _91347_f);
inline __jule_tuple_x_1a7bbd8b2_FnIns__jule_tuple_bool _1a969caa9_findTraitMetMap(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bba8d1_Fn>* _92837_m);
inline void _1a969ce1c_traitWrapper(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bce362_Trait>* _94034_t, jule::Ptr<_1a7bba8d1_Fn>* _94050_m);
inline void _1a969d11a_traitWrappers(jule::Ptr<_1a9694078_ObjectCoder> _self_);
inline void _1a969d47d_traitDataMethods(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bce362_Trait>* _100738_t, jule::Ptr<_1a7ba8b11_StructIns> _100749_s);
inline void _1a969d89b_traitData(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bce362_Trait>* _102431_t, jule::I64 _102442_i, jule::Ptr<_1a7ba8b11_StructIns>* _102455_s);
inline void _1a969da99_traitDatas(jule::Ptr<_1a9694078_ObjectCoder> _self_);
inline void _1a969dc97_globalDecls(jule::Ptr<_1a9694078_ObjectCoder> _self_);
inline void _1a969de95_decls(jule::Ptr<_1a9694078_ObjectCoder> _self_);
inline void _1a969e24d_structureMethods(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _108738_s);
inline void _1a969e506_structureIns(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _109434_s);
inline void _1a969e7ae_structure(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7ba5ca6_Struct>* _110031_s);
inline void _1a969e9ac_structures(jule::Ptr<_1a9694078_ObjectCoder> _self_);
inline void _1a969ebaa_funcs(jule::Ptr<_1a9694078_ObjectCoder> _self_);
inline void _1a969ee63_pushInit(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7c396b9_Package>* _113230_pkg);
inline void _1a96a0161_anonHashes(jule::Ptr<_1a9694078_ObjectCoder> _self_);
inline void _1a96a035e_initGlobals(jule::Ptr<_1a9694078_ObjectCoder> _self_);
inline void _1a96a055c_initCaller(jule::Ptr<_1a9694078_ObjectCoder> _self_);
inline void _1a96a075a_end(jule::Ptr<_1a9694078_ObjectCoder> _self_);
inline void _1a96a0abd_insertBuf(jule::Ptr<_1a9694078_ObjectCoder> _self_, _1daed18b7_StrBuilder* _120431_buf, jule::I64 _120448_pos);
inline void _1a96a0cbb_serializeHead(jule::Ptr<_1a9694078_ObjectCoder> _self_);
inline void _1a96a0eb9_Serialize(jule::Ptr<_1a9694078_ObjectCoder> _self_);
inline jule::Str _1a96a32eb_Str(_1a96a2e00_customType* _self_);
inline jule::Bool _1a96a363c_Equal(jule::Ptr<_1a96a2e00_customType> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _4418_k);
inline jule::Ptr<_1a96a3a38_typeCoder> static__1a96a4088_new(jule::Ptr<_1a9694078_ObjectCoder>* _6921_oc);
inline void _1a96a43eb_toType(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _7627_buf, jule::Str _7648_id);
inline void _1a96a475e_prim(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _9025_buf, jule::Ptr<_1a7d24dae_Prim> _9042_p);
inline void _1a96a4ac2_tuple(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _9526_buf, jule::Ptr<_1a7d29ea2_Tuple> _9547_t);
inline void _1a96a4e35_asSptr(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _10727_buf, jule::Slice<jule::U8> _10744_elem);
inline void _1a96a5298_sptr(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _11425_buf, jule::Ptr<_1a7d288da_Sptr> _11446_sptr);
inline void _1a96a560b_ptr(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _12124_buf, jule::Ptr<_1a7d2c1a2_Ptr> _12145_p);
inline void _1a96a596e_enumDecl(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _13229_buf, jule::Ptr<_1a7bd1a6d_Enum> _13250_e);
inline void _1a96a5cd2_typeEnumDecl(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _13733_buf, jule::Ptr<_1a7bd3278_TypeEnum> _13754_e);
inline void _1a96a6145_asSlice(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _14128_buf, jule::Ptr<_1a7d1bc96_TypeKind> _14149_elem);
inline void _1a96a64a8_slice(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _14826_buf, jule::Ptr<_1a7d293ad_Slc> _14847_s);
inline void _1a96a681b_mapType(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _15328_buf, jule::Ptr<_1a7d2aa52_Map> _15349_m);
inline void _1a96a6ee2_structureIns(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _16733_buf, jule::Ptr<_1a7ba8b11_StructIns> _16754_s);
inline void _1a96a7355_array(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _19126_buf, jule::Ptr<_1a7d2b6ce_Arr> _19147_a);
inline void _1a96a7a2b_paramIns(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _21429_buf, jule::Ptr<_1a7bbc839_ParamIns>* _21451_p);
inline void _1a96a8202_funcInsResult(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _24634_s, jule::Ptr<_1a7bbd8b2_FnIns>* _24654_f);
inline void _1a96a8565_anonFunc(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _26429_buf, jule::Ptr<_1a7bbd8b2_FnIns> _26450_f);
inline void _1a96a88c8_func(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _28525_buf, jule::Ptr<_1a7bbd8b2_FnIns> _28546_f);
inline void _1a96a8c3b_kind(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _29225_buf, jule::Ptr<_1a7d1bc96_TypeKind> _29246_k);
inline jule::Ptr<_1a96ab623_resultCoder> static__1a96abb2e_new(jule::Ptr<_1a96a3a38_typeCoder>* _36021_tc);
inline void _1a96abe92_ptr(_1a96ab623_resultCoder* _self_, _1daed18b7_StrBuilder* _36424_s, jule::Ptr<_1a7d2c1a2_Ptr> _36443_p);
inline void _1a96ac305_sptr(_1a96ab623_resultCoder* _self_, _1daed18b7_StrBuilder* _36925_s, jule::Ptr<_1a7d288da_Sptr> _36944_p);
inline void _1a96ac668_mapType(_1a96ab623_resultCoder* _self_, _1daed18b7_StrBuilder* _37428_s, jule::Ptr<_1a7d2aa52_Map> _37447_p);
inline void _1a96ac9cb_slice(_1a96ab623_resultCoder* _self_, _1daed18b7_StrBuilder* _38026_s, jule::Ptr<_1a7d293ad_Slc> _38045_slc);
inline void _1a96acd3e_arr(_1a96ab623_resultCoder* _self_, _1daed18b7_StrBuilder* _38524_s, jule::Ptr<_1a7d2b6ce_Arr> _38543_arr);
inline void _1a96ad1a2_func(_1a96ab623_resultCoder* _self_, _1daed18b7_StrBuilder* _39125_s, jule::Ptr<_1a7bbd8b2_FnIns> _39144_f);
inline void _1a96ad515_tup(_1a96ab623_resultCoder* _self_, _1daed18b7_StrBuilder* _40424_s, jule::Ptr<_1a7d29ea2_Tuple> _40443_tup);
inline void _1a96ad878_codeMut(_1a96ab623_resultCoder* _self_, _1daed18b7_StrBuilder* _41128_s, jule::Ptr<_1a7d1bc96_TypeKind>* _41148_t);
inline void _1a96adbdb_codeMut1(_1a96ab623_resultCoder* _self_, _1daed18b7_StrBuilder* _45129_s, jule::Ptr<_1a7d1bc96_TypeKind>* _45149_t);
inline jule::Slice<jule::U8> _1a96adee9_code(_1a96ab623_resultCoder* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _46025_t);
inline jule::Str _1ad381734_Name(_1ad3818cc_Flag* _self_);
inline jule::Str _1ad381bb8_What(_1ad3818cc_Flag* _self_);
inline void _1ad381d0b_Reset(_1ad3818cc_Flag* _self_);
inline jule::I32 _1ad381e4e_Short(_1ad3818cc_Flag* _self_);
inline jule::Str _1ad384d75_Name(_1ad3851e9_Flag* _self_);
inline jule::Str _1ad3854d5_What(_1ad3851e9_Flag* _self_);
inline void _1ad385628_Reset(_1ad3851e9_Flag* _self_);
inline jule::I32 _1ad38576b_Short(_1ad3851e9_Flag* _self_);
inline jule::Str _1ad388582_Name(_1ad388906_Flag* _self_);
inline jule::Str _1ad388be2_What(_1ad388906_Flag* _self_);
inline void _1ad388d35_Reset(_1ad388906_Flag* _self_);
inline jule::I32 _1ad388e78_Short(_1ad388906_Flag* _self_);
inline jule::Str _1ad38bcd3_Name(_1ad38c157_Flag* _self_);
inline jule::Str _1ad38c443_What(_1ad38c157_Flag* _self_);
inline void _1ad38c586_Reset(_1ad38c157_Flag* _self_);
inline jule::I32 _1ad38c6c9_Short(_1ad38c157_Flag* _self_);
inline jule::Str _1ad3904e0_Name(_1ad390864_Flag* _self_);
inline jule::Str _1ad390b50_What(_1ad390864_Flag* _self_);
inline void _1ad390c93_Reset(_1ad390864_Flag* _self_);
inline jule::I32 _1ad390dd6_Short(_1ad390864_Flag* _self_);
inline jule::Ptr<_1a97276b1_FlagSet> static__1a97279d0_New(void);
inline jule::Trait _1a9727e86_FindFlag(_1a97276b1_FlagSet* _self_, jule::Str _7124_name);
inline jule::Trait _1a97282c7_FindFlagShort(_1a97276b1_FlagSet* _self_, jule::I32 _8129_name);
inline jule::Exceptional<jule::Slice<jule::Str>> _1a972889e_Parse(_1a97276b1_FlagSet* _self_, jule::Slice<jule::Str> _11521_args);
inline jule::Ptr<_1ad390864_Flag> _1ad41c56c_addFlagCommon(_1a97276b1_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline jule::Ptr<_1ad38c157_Flag> _1ad426642_addFlagCommon(_1a97276b1_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline void _1ad419d3e_AddVar(_1a97276b1_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline void _1ad423e58_AddVar(_1a97276b1_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline __jule_tuple_i64__jule_tuple_bool _1ad3a3635_parseInteger(_1a972a175_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline __jule_tuple_u64__jule_tuple_bool _1ad3ab20e_parseInteger(_1a972a175_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline jule::Str _1a972a9c2_getData(_1a972a175_argParser* _self_);
inline jule::VoidExceptional _1a972ac47_processFlag(_1a972a175_argParser* _self_, jule::Trait* _21232_flag);
inline jule::VoidExceptional _1a972b000_singleDash(_1a972a175_argParser* _self_, jule::Str* _25227_arg);
inline jule::VoidExceptional _1a972b2a8_doubleDash(_1a972a175_argParser* _self_, jule::Str* _26627_arg);
inline jule::VoidExceptional _1a972b4a6_tryArg(_1a972a175_argParser* _self_);
inline jule::VoidExceptional _1a972b6a4_parse(_1a972a175_argParser* _self_);
inline __jule_tuple_x_1a882795a_IR__jule_tuple_s_1d9144ab5_Log static__1a8827e33_Build(jule::Str _2918_path, jule::I64 _2929_flags);
inline void _1a882841c_appendStructs(_1a882795a_IR* _self_, jule::Ptr<_1a7c396b9_Package>* _6730_p, jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>>* _6754_buffer);
inline jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>> _1a88286a3_GetAllStructures(_1a882795a_IR* _self_);
inline void _1a8828a16_appendGlobals(_1a882795a_IR* _self_, jule::Ptr<_1a7c396b9_Package>* _9030_p, jule::Slice<jule::Ptr<_1a7c7b178_Var>>* _9054_buffer);
inline jule::Slice<jule::Ptr<_1a7c7b178_Var>> _1a8828c9c_GetAllGlobals(_1a882795a_IR* _self_);
inline void _1a8828e9a_Order(_1a882795a_IR* _self_);
inline jule::Ptr<_1d92015cd_Cmd> static__1d9201a2e_New(jule::Str _2616_path);
inline jule::VoidExceptional _1d9201c2c_Spawn(_1d92015cd_Cmd* _self_);
inline jule::Exceptional<jule::I64> _1d92021b1_Wait(_1d92015cd_Cmd* _self_);
inline jule::VoidExceptional _1d9256358_spawn(_1d92015cd_Cmd* _self_);
inline jule::Exceptional<jule::I64> _1d92567dc_wait(_1d92015cd_Cmd* _self_);
inline void _1d7db74e8_Free(void* _4520_ptr);
inline jule::Str _1d7de7d31_BytePtrToStr(jule::U8* _6524_s);
inline jule::Slice<jule::U8> _1d7de80b7_StrToBytes(jule::Str _8915_s);
inline jule::I64 _1d7a9bba0_GetLastErrno(void);
inline jule::I64 _1d7e07857_Fcntl(jule::I64 _5410_handle, jule::I64 _5423_cmd, jule::I64 _5433_arg);
inline jule::I64 _1d7e07bcb_Stat(jule::U8* _5916_path, struct stat* _5933_stat);
inline jule::I64 _1d7e0810a_Open(jule::U8* _6416_path, jule::I64 _6429_flag, jule::I64 _6440_mode);
inline jule::U8* _1d7e0847e_Getcwd(jule::U8* _7018_buff, jule::U64 _7031_bufflen);
inline DIR* _1d7e08979_Opendir(jule::U8* _7519_path);
inline struct dirent* _1d7e08b55_Readdir(DIR* _7823_dir);
inline jule::I64 _1d7e08dec_Closedir(DIR* _8124_dir);
inline jule::I64 _1d7e09804_Mkdir(jule::U8* _9017_path, jule::I64 _9030_mode);
inline jule::I64 _1d7e09abd_Rmdir(jule::U8* _9517_path);
inline jule::I64 _1d7e09d87_Unlink(jule::U8* _9818_path);
inline jule::I64 _1d7e24ae9_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n);
inline jule::I64 _1d7e24ec3_Close(jule::I64 _2510_handle);
inline jule::I64 _1d7e2537a_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n);
inline void _1d7e255ab_Exit(jule::I64 _339_code);
inline jule::Str _1d7e42353_Str(jule::U8* _108_b, jule::I64 _1018_n);
inline jule::Slice<jule::U8> _1a97a7785_Slice(jule::U8* _2216_e, jule::I64 _2226_len, jule::I64 _2236_cap);
inline jule::Slice<jule::U8> _1d7e4d705_StrBytes(jule::Str _4013_s);
inline jule::Str _1d7e4d98b_BytesStr(jule::Slice<jule::U8> _4913_b);
inline jule::Str _1d7e4dc55_StrFromBytes(jule::Slice<jule::U8> _5717_b);
inline __jule_tuple_i32__jule_tuple_int _1d806264e_DecodeRune(jule::Slice<jule::U8> _18215_p);
inline __jule_tuple_i32__jule_tuple_int _1d8062990_DecodeRuneStr(jule::Str _22918_s);
inline __jule_tuple_i32__jule_tuple_int _1d8062ee0_DecodeLastRuneStr(jule::Str _31722_s);
inline jule::Slice<jule::U8> _1d8063a3a_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r);
inline jule::Slice<jule::U8> _1d8063dae_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r);
inline jule::I64 _1d8064442_RuneCountStr(jule::Str _47317_s);
inline jule::Bool _1d806470b_RuneStart(jule::U8 _51714_b);
inline jule::I64 _1d81b09de_LeadingZeros64(jule::U64 _6119_x);
inline jule::I64 _1d81b1935_TrailingZeros(jule::U64 _8318_x);
inline jule::I64 _1d81b231a_TrailingZeros32(jule::U32 _10520_x);
inline jule::I64 _1d81b25d4_TrailingZeros64(jule::U64 _11420_x);
inline jule::I64 _1d81b80ac_Len32(jule::U32 _35214_x);
inline jule::I64 _1d81b8376_Len64(jule::U64 _36614_x);
inline __jule_tuple_u64__jule_tuple_u64 _1d81b9113_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry);
inline __jule_tuple_u64__jule_tuple_u64 _1d81ba91c_Mul64(jule::U64 _49910_x, jule::U64 _49918_y);
inline jule::I64 _202401100_randInt(jule::U64 _716_seed, jule::I64 _727_max);
inline jule::Bool _1a9983a82_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _1aa882496_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _1acba57a6_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I64 _1040_n);
inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b);
inline void _1d7e34873__handleRW(jule::Slice<jule::U8>* _1615_b);
inline jule::I64 __jule_writeStdout(jule::Slice<jule::U8> _2520_buf);
inline jule::I64 __jule_writeStderr(jule::Slice<jule::U8> _3620_buf);
inline jule::I64 __jule_readStdin(jule::Slice<jule::U8> _4718_buf);
inline void __jule_panic(jule::U8* _1318_m, jule::I64 _1328_n);
inline jule::Str _1d7e54dc1_executable(void);
inline jule::U64 __jule_RCLoad(jule::U64* _1019_p);
inline void __jule_RCAdd(jule::U64* _1722_p);
inline jule::Bool __jule_RCDrop(jule::U64* _2523_p);
inline jule::U64* __jule_RCNew(void);
inline void __jule_RCFree(jule::U64* _3519_p);
inline jule::Str __jule_ptrToStr(void* _1113_p);
inline jule::Str __jule_boolToStr(jule::Bool _3214_b);
inline jule::Str __jule_i64ToStr(jule::I64 _4113_x);
inline jule::Str __jule_u64ToStr(jule::U64 _5017_x);
inline jule::I64 _1d7e5e54b_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x);
inline jule::Str __jule_f64ToStr(jule::F64 _8017_f);
inline jule::Str _1ad3dbb46_arrToStr(jule::Slice<jule::U8> _12316_x);
inline jule::Str _1ad3d19d7_structToStr(_1daed18b7_StrBuilder _15619_x);
inline jule::Str _1a9952d1a_toStr(jule::Any _19713_x);
inline jule::Str _1a9954ee8_toStr(jule::Str _19713_x);
inline jule::Str _1a9955746_toStr(jule::I64 _19713_x);
inline jule::Str _1a995a4a4_toStr(jule::I8 _19713_x);
inline jule::Str _1a99581d8_toStr(jule::I16 _19713_x);
inline jule::Str _1a99608b6_toStr(jule::I32 _19713_x);
inline jule::Str _1a996339c_toStr(jule::I64 _19713_x);
inline jule::Str _1a9965de9_toStr(jule::U64 _19713_x);
inline jule::Str _1a996390d_toStr(jule::Uintptr _19713_x);
inline jule::Str _1a9968acd_toStr(jule::U8 _19713_x);
inline jule::Str _1a996b020_toStr(jule::U16 _19713_x);
inline jule::Str _1a996d462_toStr(jule::U32 _19713_x);
inline jule::Str _1a99708a4_toStr(jule::U64 _19713_x);
inline jule::Str _1a9973c81_toStr(jule::F32 _19713_x);
inline jule::Str _1a9972d3a_toStr(jule::F64 _19713_x);
inline jule::Str _1a9960c90_toStr(jule::Bool _19713_x);
inline jule::Str _1a997a01d_toStr(jule::I64 _19713_x);
inline jule::Str _1aa6a3938_toStr(jule::I64 _19713_x);
inline jule::Str _1aa6dc18b_toStr(jule::I64 _19713_x);
inline jule::Str _1aa92190e_toStr(jule::I64 _19713_x);
inline jule::Str _1ab11dcdc_toStr(jule::Ptr<_1a7ba1a82_Impl> _19713_x);
inline jule::Str _1ab11e095_toStr(jule::Ptr<_1a7b9b939_TypeAliasDecl> _19713_x);
inline jule::Str _1ab1218c2_toStr(jule::Ptr<_1a7ba0bd5_StructDecl> _19713_x);
inline jule::Str _1ab128c4d_toStr(jule::Ptr<_1a7b96acc_FnDecl> _19713_x);
inline jule::Str _1ab12c845_toStr(jule::Ptr<_1a7ba1422_TraitDecl> _19713_x);
inline jule::Str _1ab13143c_toStr(jule::Ptr<_1a7b97c87_VarDecl> _19713_x);
inline jule::Str _1ab135034_toStr(jule::Ptr<_1a7b9e08a_EnumDecl> _19713_x);
inline jule::Str _1ab1388b7_toStr(jule::Ptr<_1a7ba0025_TypeEnumDecl> _19713_x);
inline jule::Str _1ab16067a_toStr(jule::Ptr<_1a7ba2d80_Field> _19713_x);
inline jule::Str _1ab172769_toStr(jule::Ptr<_1c006a461_Const> _19713_x);
inline jule::Str _1ab1788c4_toStr(jule::Ptr<_1a7c7b178_Var> _19713_x);
inline jule::Str _1ab18ecc5_toStr(jule::Ptr<_1a7bd1001_EnumItem> _19713_x);
inline jule::Str _1ab1a13be_toStr(jule::Ptr<_1a7bb8e0c_Param> _19713_x);
inline jule::Str _1ab1c7e84_toStr(jule::Ptr<_1a7ba5ca6_Struct> _19713_x);
inline jule::Str _1ab1ca56e_toStr(jule::Ptr<_1a7bce362_Trait> _19713_x);
inline jule::Str _1ab1cdce2_toStr(jule::Ptr<_1a7bd1a6d_Enum> _19713_x);
inline jule::Str _1ab1d2565_toStr(jule::Ptr<_1a7bd3278_TypeEnum> _19713_x);
inline jule::Str _1ab1da1b6_toStr(jule::Ptr<_1a7bba8d1_Fn> _19713_x);
inline jule::Str _1ab293bcb_toStr(jule::Str _19713_x);
inline jule::Str _1ab2e1795_toStr(jule::Ptr<_1a7d1aea4_TypeAlias> _19713_x);
inline jule::Str _1ab373096_toStr(jule::Ptr<_1a7b806ba_IdentTypeDecl> _19713_x);
inline jule::Str _1ab38a267_toStr(jule::Ptr<_1a7bb3511_TupleExprModel> _19713_x);
inline jule::Str _1ab38cb1b_toStr(jule::Ptr<_1a7b89d45_TupleExpr> _19713_x);
inline jule::Str _1ab39c5a9_toStr(jule::Ptr<_1a7b938ba_AssignSt> _19713_x);
inline jule::Str _1ab39c785_toStr(jule::Ptr<_1a7b89251_Expr> _19713_x);
inline jule::Str _1ab3a27ac_toStr(jule::Ptr<_1a7c17015_Postfix> _19713_x);
inline jule::Str _1ab3a5507_toStr(jule::Ptr<_1a7c174bb_Assign> _19713_x);
inline jule::Str _1ab3a80a9_toStr(jule::Ptr<_1a7c17972_MultiAssign> _19713_x);
inline jule::Str _1ab3a97d6_toStr(jule::Ptr<_1a7cd41ae_Data> _19713_x);
inline jule::Str _1ab3ae313_toStr(jule::Ptr<_1a7baee03_FnCallExprModel> _19713_x);
inline jule::Str _1ab3e0d28_toStr(jule::Ptr<_1a7c164cb_Label> _19713_x);
inline jule::Str _1ab414456_toStr(jule::Ptr<_1a7c1397e_Scope> _19713_x);
inline jule::Str _1ab41d8c2_toStr(jule::Ptr<_1a7bb6624_BuiltinErrorCallExprModel> _19713_x);
inline jule::Str _1ab423036_toStr(jule::Ptr<_1a7bb7636_BackendEmitExprModel> _19713_x);
inline jule::Str _1ab42490b_toStr(jule::Ptr<_1a7bb539d_BuiltinAppendCallExprModel> _19713_x);
inline jule::Str _1ab425a50_toStr(jule::Ptr<_1a7bb38da_BuiltinOutCallExprModel> _19713_x);
inline jule::Str _1ab42b5e4_toStr(jule::Ptr<_1a7bb3cb4_BuiltinOutlnCallExprModel> _19713_x);
inline jule::Str _1ab42e196_toStr(jule::Ptr<_1a7bb4567_BuiltinPanicCallExprModel> _19713_x);
inline jule::Str _1ab431c48_toStr(jule::Ptr<_1a7bb4a1d_BuiltinAssertCallExprModel> _19713_x);
inline jule::Str _1ab4347ea_toStr(jule::Ptr<_1a7bb624a_BuiltinCopyCallExprModel> _19713_x);
inline jule::Str _1ab43739c_toStr(jule::Ptr<_1a7bb5d71_BuiltinDeleteCallExprModel> _19713_x);
inline jule::Str _1ab439e1b_toStr(jule::Ptr<_1a7bb7933_FreeExprModel> _19713_x);
inline jule::Str _1ab444398_toStr(jule::Ptr<_1a7c145b7_Conditional> _19713_x);
inline jule::Str _1ab44e381_toStr(jule::Ptr<_1a7c148b4_InfIter> _19713_x);
inline jule::Str _1ab4551bc_toStr(jule::Ptr<_1a7c14d6a_WhileIter> _19713_x);
inline jule::Str _1ab47b8ec_toStr(jule::Ptr<_1a7c157b6_RangeIter> _19713_x);
inline jule::Str _1ab48b610_toStr(jule::Ptr<_1a7b9920b_WhileKind> _19713_x);
inline jule::Str _1ab48e28e_toStr(jule::Ptr<_1a7b99b13_RangeKind> _19713_x);
inline jule::Str _1ab4aa80a_toStr(jule::Ptr<_1a7c15b4b_ContSt> _19713_x);
inline jule::Str _1ab4b466b_toStr(jule::Ptr<_1a7c16b3b_GotoSt> _19713_x);
inline jule::Str _1ab4ea2d9_toStr(jule::Ptr<_1a7b8aa6b_IdentExpr> _19713_x);
inline jule::Str _1ab50ec9e_toStr(jule::Ptr<_1a7bb0783_IndexingExprModel> _19713_x);
inline jule::Str _1ab557e29_toStr(jule::Ptr<_1a7c181ae_Match> _19713_x);
inline jule::Str _1ab571d00_toStr(jule::Ptr<_1a7c193d0_FallSt> _19713_x);
inline jule::Str _1ab58cd71_toStr(jule::Ptr<_1a7c16025_BreakSt> _19713_x);
inline jule::Str _1ab5944e8_toStr(jule::Ptr<_1a7c19776_RetSt> _19713_x);
inline jule::Str _1ab59de70_toStr(jule::Ptr<_1a7b94e3d_ScopeTree> _19713_x);
inline jule::Str _1ab5a3a68_toStr(jule::Ptr<_1a7b9b1ec_Conditional> _19713_x);
inline jule::Str _1ab5a3c99_toStr(jule::Ptr<_1a7b988d1_Iter> _19713_x);
inline jule::Str _1ab5a5ebb_toStr(jule::Ptr<_1a7b9a3b6_ContSt> _19713_x);
inline jule::Str _1ab5a9189_toStr(jule::Ptr<_1a7b92501_LabelSt> _19713_x);
inline jule::Str _1ab5ac0e3_toStr(jule::Ptr<_1a7b928ca_GotoSt> _19713_x);
inline jule::Str _1ab5b36e3_toStr(jule::Ptr<_1a7b9c709_MatchCase> _19713_x);
inline jule::Str _1ab5b3858_toStr(jule::Ptr<_1a7b92bc7_FallSt> _19713_x);
inline jule::Str _1ab5b6dcd_toStr(jule::Ptr<_1a7b99edc_BreakSt> _19713_x);
inline jule::Str _1ab5ba09b_toStr(jule::Ptr<_1a7b98161_RetSt> _19713_x);
inline jule::Str _1ab5bd269_toStr(jule::Ptr<_1a7b89b25_UseExpr> _19713_x);
inline jule::Str _1ab6545a8_toStr(jule::Ptr<_1a7bb2994_StructSubIdentExprModel> _19713_x);
inline jule::Str _1ab654d39_toStr(jule::Ptr<_1a7bad2ec_UnaryExprModel> _19713_x);
inline jule::Str _1ab6894cd_toStr(jule::Ptr<_1a7bbd8b2_FnIns> _19713_x);
inline jule::Str _1ab9948a4_toStr(jule::Ptr<_1a7b87936_MapTypeDecl> _19713_x);
inline jule::Str _1ab99a217_toStr(jule::Ptr<_1a7b86649_TupleTypeDecl> _19713_x);
inline jule::Str _1ab9ad5b0_toStr(jule::Ptr<_1a7b871d8_ArrTypeDecl> _19713_x);
inline jule::Str _1ab9b49d4_toStr(jule::Ptr<_1a7b8634c_SlcTypeDecl> _19713_x);
inline jule::Str _1ab9bae08_toStr(jule::Ptr<_1a7b86946_PtrTypeDecl> _19713_x);
inline jule::Str _1ab9c200d_toStr(jule::Ptr<_1a7b85eb7_SptrTypeDecl> _19713_x);
inline jule::Str _1aba1c3aa_toStr(jule::Ptr<_1a7b8b6d7_VariadicExpr> _19713_x);
inline jule::Str _1aba230e7_toStr(jule::Ptr<_1a7bb02cc_SliceExprModel> _19713_x);
inline jule::Str _1aba3cce3_toStr(jule::Ptr<_1a7b8d970_FieldExprPair> _19713_x);
inline jule::Str _1aba466ae_toStr(jule::Ptr<_1a7b9007b_KeyValPair> _19713_x);
inline jule::Str _1aba9c869_toStr(jule::Ptr<_1a7b8ce7a_FnCallExpr> _19713_x);
inline jule::Str _1abad04a1_toStr(jule::Ptr<_1a7badebd_AllocStructLitExprModel> _19713_x);
inline jule::Str _1abae9b91_toStr(jule::Ptr<_1a7bae551_CastingExprModel> _19713_x);
inline jule::Str _1abb11c63_toStr(jule::Ptr<_1a7bb2d3a_StructStaticIdentExprModel> _19713_x);
inline jule::Str _1abb14947_toStr(jule::Ptr<_1a7b8c364_SubIdentExpr> _19713_x);
inline jule::Str _1abb21657_toStr(jule::Ptr<_1a7badbc1_StructLitExprModel> _19713_x);
inline jule::Str _1abb41b50_toStr(jule::Ptr<_1a7bb725c_RuneExprModel> _19713_x);
inline jule::Str _1abb648dc_toStr(jule::Ptr<_1a7ba8b11_StructIns> _19713_x);
inline jule::Str _1abba4344_toStr(jule::Ptr<_1a7d1bc96_TypeKind> _19713_x);
inline jule::Str _1abbc6388_toStr(jule::Ptr<_1a7bb3214_ArrayExprModel> _19713_x);
inline jule::Str _1abc10658_toStr(jule::Ptr<_1a7b857e1_SubIdentTypeDecl> _19713_x);
inline jule::Str _1abc14c67_toStr(jule::Ptr<_1a7b8b30d_UnaryExpr> _19713_x);
inline jule::Str _1abc1dde7_toStr(jule::Ptr<_1a7b800b0_TypeDecl> _19713_x);
inline jule::Str _1abc23847_toStr(jule::Ptr<_1a7b8be8a_NsSelectionExpr> _19713_x);
inline jule::Str _1abc2a332_toStr(jule::Ptr<_1a7b85bba_NamespaceTypeDecl> _19713_x);
inline jule::Str _1abc6a76d_toStr(jule::Ptr<_1a7bb1a70_SlicingExprModel> _19713_x);
inline jule::Str _1abde6a3c_toStr(jule::Ptr<_1a7b907a7_SliceExpr> _19713_x);
inline jule::Str _1abe65968_toStr(jule::Ptr<_1a7bb2103_TraitSubIdentExprModel> _19713_x);
inline jule::Str _1ac016178_toStr(jule::Ptr<_1a7bb14dc_MapExprModel> _19713_x);
inline jule::Str _1ac0266e9_toStr(jule::Ptr<_1a7bb0c39_AnonFnExprModel> _19713_x);
inline jule::Str _1ac02d7ab_toStr(jule::Ptr<_1a7b8951a_RangeExpr> _19713_x);
inline jule::Str _1ac02da64_toStr(jule::Ptr<_1a7b8a1db_LitExpr> _19713_x);
inline jule::Str _1ac036918_toStr(jule::Ptr<_1a7b8a5b5_UnsafeExpr> _19713_x);
inline jule::Str _1ac03908b_toStr(jule::Ptr<_1a7b91214_IndexingExpr> _19713_x);
inline jule::Str _1ac034c13_toStr(jule::Ptr<_1a7b91874_SlicingExpr> _19713_x);
inline jule::Str _1ac040922_toStr(jule::Ptr<_1a7b8bab1_CastExpr> _19713_x);
inline jule::Str _1ac043ae0_toStr(jule::Ptr<_1a7b8e29a_StructLit> _19713_x);
inline jule::Str _1ac047d36_toStr(jule::Ptr<_1a7b8e751_BraceLit> _19713_x);
inline jule::Str _1ac04ab08_toStr(jule::Ptr<_1a7b8c81a_BinaryExpr> _19713_x);
inline jule::Str _1ac173505_toStr(jule::Ptr<_1a7bace23_BinaryExprModel> _19713_x);
inline jule::Str _1ac31d194_toStr(jule::Ptr<_1a7bb418d_BuiltinNewCallExprModel> _19713_x);
inline jule::Str _1ac333d25_toStr(jule::Ptr<_1a7bb4ec4_BuiltinMakeCallExprModel> _19713_x);
inline jule::Str _1a763765b_toStr(jule::Ptr<_1a7bb569a_BuiltinLenCallExprModel> _19713_x);
inline jule::Str _1a7652434_toStr(jule::Ptr<_1a7bb5997_BuiltinCapCallExprModel> _19713_x);
inline jule::Str _1a76a5289_toStr(jule::Ptr<_1a7bb6cc8_SizeofExprModel> _19713_x);
inline jule::Str _1a76ae293_toStr(jule::Ptr<_1a7bb6eb5_AlignofExprModel> _19713_x);
inline jule::Str _1ac808d99_toStr(jule::Str _19713_x);
inline jule::Str _1ac9c24b3_toStr(jule::Ptr<_1a7e125d9_ExceptionalForwardingExprModel> _19713_x);
inline jule::Str _1aca094ea_toStr(jule::Ptr<_1a7e14ed2_StrRuneIter> _19713_x);
inline jule::Str _1aca11e3c_toStr(jule::Ptr<_1a7e13bc3_MutSlicingExprModel> _19713_x);
inline jule::Str _1aca3700b_toStr(jule::Ptr<_1a7e14b08_AppendToSliceExprModel> _19713_x);
inline jule::Str _1aca39838_toStr(jule::Ptr<_1a7e1472e_PushToSliceExprModel> _19713_x);
inline jule::Str _1aca47417_toStr(jule::Ptr<_1a7e1296e_SwapExprModel> _19713_x);
inline jule::Str _1aca84e8d_toStr(jule::Ptr<_1a7e12d48_EmptyCompareExprModel> _19713_x);
inline jule::Str _1aca87c1b_toStr(jule::Ptr<_1a7e13640_StrCompExprModel> _19713_x);
inline jule::Str _1acac0d0e_toStr(jule::Ptr<_1a7e13ec0_UnsafeBinaryExprModel> _19713_x);
inline jule::Str _1acac91ad_toStr(jule::Ptr<_1a7e152ce_UnsafeDerefExprModel> _19713_x);
inline jule::Str _1acad0a22_toStr(jule::Ptr<_1a7e131bc_RefExprModel> _19713_x);
inline jule::Str _1acad50ba_toStr(jule::Ptr<_1a7bad82a_StructArgExprModel> _19713_x);
inline jule::Str _1acadb885_toStr(jule::Ptr<_1a7e155cb_UnsafeCastingExprModel> _19713_x);
inline jule::Str _1acaea6eb_toStr(jule::Ptr<_1a7e14355_UnsafeIndexingExprModel> _19713_x);
inline jule::Str _1ad16bde3_toStr(jule::Ptr<jule::Str> _19713_x);
inline jule::Str _1ad3cba26_toStr(_1daed18b7_StrBuilder _19713_x);
inline jule::Str _1ad3d836d_toStr(jule::Slice<jule::U8> _19713_x);
inline jule::Str _1ad3d3698_toStr(jule::Str _19713_x);
inline jule::Str _1ad3da7b0_toStr(jule::Str _19713_x);
inline void _1d7e606e5_rev(jule::Slice<jule::U8> _25012_b);
inline jule::I64 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b);
inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes);
inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes);
inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s);
inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s);
inline jule::Str __jule_strFromByte(jule::U8 _7516_b);
inline jule::Str __jule_strFromRune(jule::I32 _8316_r);
inline void __jule_runeStep(jule::U8* _9420_s, jule::I64 _9430_n, jule::I32* _9442_r, jule::I64* _9456_outLen);
inline void _1d806707c_handleRW(jule::Slice<jule::U8>* _814_b);
inline jule::Slice<jule::Str> _1d8067654_args(void);
inline jule::I64 _1d8067b71_strlen(jule::U8* _3122_p);
inline jule::U64 _1d80bd39c_hash128to64(_1d80bcee5_u128 _4316_sum);
inline jule::U64 _1d80bd6aa_fetch64(jule::Slice<jule::U8> _5312_bytes);
inline jule::U32 _1d80bd974_fetch32(jule::Slice<jule::U8> _5412_bytes);
inline jule::U64 _1d80bdcb5_shiftMix(jule::U64 _5513_z);
inline jule::U64 _1d80be106_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v);
inline jule::U64 _1d80be47a_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift);
inline jule::U64 _1d80be8a9_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul);
inline jule::U64 _1d80bed3d_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I64 _7532_n);
inline _1d80bcee5_u128 _1d80c01e5_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I64 _10334_n, _1d80bcee5_u128 _10342_seed);
inline _1d80bcee5_u128 _1d80c0844_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b);
inline _1d80bcee5_u128 _1d80c0c73_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b);
inline _1d80bcee5_u128 _1d80c11a2_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I64 _16040_n, _1d80bcee5_u128 _16048_seed);
inline jule::U64 _1d80c146b_hash(jule::Slice<jule::U8> _23413_bytes);
inline jule::U64 _1d81bee4e_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h);
inline jule::U64 _1d81c025c_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m);
inline jule::U32 _1d81c0526_nextMatch(jule::U64* _6419_b);
inline jule::U64 _1d81c0867_hasZeroByte(jule::U64 _7016_x);
inline jule::U64 _1d81c0aed_castU64(jule::Array<jule::I8,8>* _7419_m);
inline jule::I64 _1d81c0db7_numGroups(jule::I64 _7914_n);
inline jule::Array<jule::I8,8> _1d81c10c6_newEmptyMetadata(void);
inline __jule_tuple_u64__jule_tuple_i8 _1d81c14a0_splitHash(jule::U64 _9414_h);
inline jule::U32 _1d81c179c_probeStart(jule::U64 _9815_hi, jule::I64 _9823_groups);
inline jule::U32 _1d81c1b21_fastModN(jule::U32 _10313_x, jule::U32 _10321_n);
inline jule::I64 _1d835936e_getLastOsError(void);
inline jule::Slice<jule::Str> _1d835987a_Args(void);
inline jule::Exceptional<jule::Str> _1d8359cdc_WorkingDir(void);
inline jule::Exceptional<jule::Str> _1d835acaa_getwd(void);
inline jule::Bool _1dae14ad6_IsLetter(jule::I32 _7613_r);
inline jule::Bool _1dae7a124_is16(jule::Slice<_1dae78386_Range16> _1919_ranges, jule::U16 _19128_r);
inline jule::Bool _1dae7a498_is32(jule::Slice<_1dae788b4_Range32> _2289_ranges, jule::U32 _22828_r);
inline jule::Bool _1dae7aca1_isExcludingLatin(jule::Ptr<_1dae78d37_RangeTable> _27821_rangeTab, jule::I32 _27844_r);
inline jule::Bool _1dae7aee3_IsUpper(jule::I32 _29512_r);
inline jule::I64 _1daebb82a_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b);
inline jule::I64 _1daebbe57_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b);
inline jule::I64 _1daebc2cb_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b);
inline jule::Str _1daebc5c8_Repeat(jule::Str _1111_s, jule::I64 _1123_n);
inline jule::Bool _1daebc991_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub);
inline jule::Bool _1daebcd15_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub);
inline jule::I64 _1daebd2bb_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i);
inline jule::I64 _1daebd60c_Find(jule::Str _549_s, jule::Str _5417_sub);
inline jule::I64 _1daebda3b_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i);
inline jule::I64 _1daebddb0_FindLast(jule::Str _8413_s, jule::Str _8421_sub);
inline jule::I64 _1daec0697_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b);
inline jule::I64 _1daec0a1b_FindRune(jule::Str _15513_s, jule::I32 _15521_r);
inline jule::I64 _1daec1445_FindAny(jule::Str _18512_s, jule::Str _18520_runes);
inline jule::Slice<jule::Str> _1daec1ad8_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n);
inline jule::Bool _1daec1e5c_Contains(jule::Str _24313_s, jule::Str _24321_sub);
inline jule::Bool _1daec29c9_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes);
inline jule::I64 _1daec2d4d_Count(jule::Str _26410_s, jule::Str _26418_sub);
inline jule::Str _1daec3337_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I64 _28444_n);
inline jule::Str _1daec40b3_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset);
inline jule::Str _1daec4437_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset);
inline jule::Str _1daec47ab_Trim(jule::Str _3699_s, jule::Str _36917_cutset);
inline jule::Str _1daec4b30_Join(jule::Slice<jule::Str> _3759_parts, jule::Str _37523_sep);
inline jule::Str _1daeddaa0_Clean(jule::Str _10914_path);
inline jule::Str _1daede177_FromSlash(jule::Str _21214_path);
inline jule::Str _1daede4b8_Join(jule::Slice<jule::Str> _2269_elem);
inline jule::Str _1daede74e_Ext(jule::Str _2318_path);
inline __jule_tuple_str__jule_tuple_bool _1daedea18_Abs(jule::Str _2468_path);
inline jule::Str _1daedecd2_Base(jule::Str _25213_path);
inline jule::Str _1daee01ab_Dir(jule::Str _2838_path);
inline jule::Str _1daee03ed_VolumeName(jule::Str _30115_path);
inline jule::Bool _1daee1344_IsPathSep(jule::U8 _4814_c);
inline jule::Bool _1daee1652_IsAbs(jule::Str _5310_path);
inline jule::I64 _1daee191b_volumeNameLen(jule::Str _5918_path);
inline __jule_tuple_str__jule_tuple_bool _1daee1c5c_abs(jule::Str _638_path);
inline jule::Str _1daee1ee3_join(jule::Slice<jule::Str> _739_elem);
inline jule::I64 _1d8289238_getLastFsError(void);
inline __jule_tuple_int__jule_tuple_bool _1d9202c0b_AtoiBp(jule::U8* _722_b, jule::I64 _736_n);
inline jule::Str _1d9251b8e_Itoa(jule::I64 _89_x);
inline jule::Str _1d9251e9c_Utoa(jule::U64 _1613_x);
inline void _1d92521cd_rev(jule::Slice<jule::U8>* _3513_b);
inline jule::Slice<char*> _1d9255a1c_strSliceToCstrSlice(jule::Slice<jule::Str>* _3525_s, jule::Slice<jule::Slice<jule::U8>>* _3540_bargs);
inline jule::I64 _1d9255d91_execvp(jule::Str* _4712_file, jule::Slice<jule::Str>* _4724_argv);
inline jule::VoidExceptional _1d92560c2_setenv(jule::Slice<jule::Str>* _5612_envv);
inline jule::I64 _1d925704b_processErrorFromCode(jule::I64 _1125_code);
inline jule::I64 _1d925729e_getLastProcessError(void);
inline void _1d92579db_Exit(jule::I64 _109_code);
inline jule::Str _1d9257c1c_Executable(void);
inline jule::Bool _1d9137415_IsStdHeaderPath(jule::Str _2620_p);
inline jule::Bool _1d91376e0_IsValidHeaderExt(jule::Str _3121_ext);
inline jule::Bool _1d91379a9_IsValidCppExt(jule::Str _4118_ext);
inline jule::Str _1d9145027_Logf(jule::Str _3249_fmt, jule::Slice<jule::Any> _32422_args);
inline jule::Str _1d9145335_argToStr(jule::Any _32813_arg);
inline jule::I64 _1d91455ee_findNextFmt(jule::Str _34116_fmt);
inline jule::Str _1d91459b7_applyFmt(jule::Str _35017_fmt, jule::Slice<jule::Any> _35027_args);
inline jule::Bool _1d91468b9_IsTopDirective(jule::Str _2319_directive);
inline jule::Bool _1d9147cd8_IsWindows(jule::Str _3714_os);
inline jule::Bool _1d91480e6_IsDarwin(jule::Str _4013_os);
inline jule::Bool _1d91483b0_IsLinux(jule::Str _4312_os);
inline jule::Bool _1d9148701_IsI386(jule::Str _4611_arch);
inline jule::Bool _1d9148987_IsAmd64(jule::Str _4912_arch);
inline jule::Bool _1d9148c51_IsArm64(jule::Str _5212_arch);
inline jule::Bool _1d914901a_IsUnix(jule::Str _5511_os);
inline jule::Bool _1d91493e4_Is32Bit(jule::Str _5812_arch);
inline jule::Bool _1d9149636_Is64Bit(jule::Str _6112_arch);
inline void _1d9258e60_init(void);
inline jule::U32 _1c0008696_F32Bits(jule::F32 _4112_f);
inline jule::F32 _1c0008982_F32FromBits(jule::U32 _4716_b);
inline jule::U64 _1c0008c4b_F64Bits(jule::F64 _5212_f);
inline jule::F64 _1c000908c_F64FromBits(jule::U64 _5816_b);
inline __jule_tuple_f64__jule_tuple_int _1c000b600_Frexp(jule::F64 _4714_f);
inline jule::F64 _1c0011abc_NaN(void);
inline jule::Bool _1c0011dca_IsNaN(jule::F64 _5210_f);
inline jule::F64 _1c0012194_Inf(jule::I64 _618_sign);
inline jule::Bool _1c001255c_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign);
inline __jule_tuple_f64__jule_tuple_int _1c0012826_normalize(jule::F64 _8214_x);
inline jule::F64 _1c00142ea_Log(jule::F64 _1118_x);
inline jule::F64 _1c0014bd0_Abs(jule::F64 _438_x);
inline __jule_tuple_f64__jule_tuple_f64 _1c001b7a8_Modf(jule::F64 _449_f);
inline jule::F64 _1c001c0b1_Log2(jule::F64 _449_x);
inline jule::Str _1c004567d_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize);
inline jule::Slice<jule::U8> _1c0045c66_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize);
inline jule::Slice<jule::U8> _1c0046470_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _1d949ac2e_floatInfo* _18824_flt);
inline jule::Slice<jule::U8> _1c0046b46_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1c00450ea_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt);
inline void _1c0047064_roundShortest(_1c0057c67_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1d949ac2e_floatInfo* _26257_flt);
inline jule::Slice<jule::U8> _1c0047608_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1c00450ea_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt);
inline jule::Slice<jule::U8> _1c0047ae2_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1c00450ea_decimalSlice _45637_d, jule::I64 _45654_prec);
inline jule::Slice<jule::U8> _1c0048296_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1d949ac2e_floatInfo* _48963_flt);
inline jule::Slice<jule::U8> _1c0048928_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _1d949ac2e_floatInfo* _51232_flt);
inline jule::I64 _1c0048c9c_min(jule::I64 _5968_a, jule::I64 _59616_b);
inline jule::I64 _1c0049121_max(jule::I64 _6038_a, jule::I64 _60316_b);
inline jule::U8 _1c0049bc1_lower(jule::U8 _4710_c);
inline __jule_tuple_u64__jule_tuple__1d9497d80_ConvError _1c004a144_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize);
inline jule::Exceptional<jule::U64> _1c004a573_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize);
inline jule::Exceptional<jule::I64> _1c004aa29_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize);
inline __jule_tuple_f64__jule_tuple_bool _1c004b6d9_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg);
inline __jule_tuple_f32__jule_tuple_bool _1c004bb5c_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg);
inline jule::I64 _1c004d93e_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1c004dc4c_special(jule::Str _6912_s);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1c004e016_readFloat(jule::Str* _10815_s);
inline __jule_tuple_f64__jule_tuple_bool _1c0050a62_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg);
inline __jule_tuple_f32__jule_tuple_bool _1c0050e91_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg);
inline __jule_tuple_f64__jule_tuple__1d9497d80_ConvError _1c0051535_atofHex(_1d949ac2e_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1d9497d80_ConvError _1c005190e_atof32(jule::Str _62111_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1d9497d80_ConvError _1c0051b51_atof64(jule::Str _67911_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1d9497d80_ConvError _1c0051ec5_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize);
inline jule::Exceptional<jule::F64> _1c0052349_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize);
inline void _1c0052bc9_ryuFtoaFixed32(_1c00450ea_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec);
inline void _1c005316e_ryuFtoaFixed64(_1c00450ea_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec);
inline void _1c00539aa_formatDecimal(_1c00450ea_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec);
inline void _1c0053e83_ryuFtoaShortest(_1c00450ea_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1d949ac2e_floatInfo* _26168_flt);
inline jule::I64 _1c0054219_mulByLog2Log10(jule::I64 _37719_x);
inline jule::I64 _1c00544d3_mulByLog10Log2(jule::I64 _38719_x);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1c0054912_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1d949ac2e_floatInfo* _3963_flt);
inline void _1c0055061_ryuDigits(_1c00450ea_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup);
inline void _1c00556d2_ryuDigits32(_1c00450ea_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1c0055b11_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1c0056040_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q);
inline jule::Bool _1c00563b4_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k);
inline __jule_tuple_u32__jule_tuple_u32 _1c005667d_divmod1e9(jule::U64 _60214_x);
inline void _1c00595b5_trim(_1c0057c67_decimal* _27414_a);
inline void _1c00598a1_rightShift(_1c0057c67_decimal* _28420_a, jule::U64 _28432_k);
inline jule::Bool _1c0059d57_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s);
inline void _1c005a110_leftShift(_1c0057c67_decimal* _35219_a, jule::U64 _35231_k);
inline jule::Bool _1c005a484_shouldRoundUp(_1c0057c67_decimal* _39919_a, jule::I64 _39931_nd);
inline jule::Str _1c005bc16_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base);
inline jule::Str _1c005c0ce_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base);
inline jule::Str _1c005c398_Itoa(jule::I64 _819_i);
inline jule::Str _1c005c6d9_small(jule::I64 _8610_i);
inline jule::Bool _1c005c970_isPowerOfTwo(jule::I64 _9617_x);
inline __jule_tuple_su8__jule_tuple_str _1c005d014_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_);
inline jule::Str _1c005e510_RealKindOf(jule::Str _4515_kind);
inline jule::I64 _1c005e7c9_BitsizeOf(jule::Str _5914_k);
inline jule::Str _1c005eb1a_IntFromBits(jule::I64 _8716_bits);
inline jule::Str _1c005eda1_UintFromBits(jule::I64 _10517_bits);
inline jule::Str _1c006016a_FloatFromBits(jule::I64 _12318_bits);
inline jule::Bool _1c0060c70_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit);
inline jule::I64 _1c0061039_BitsizeOfFloat(jule::F64 _16119_x);
inline jule::I64 _1c0061303_BitsizeOfInt(jule::I64 _17717_x);
inline jule::I64 _1c00615bc_BitsizeOfUint(jule::U64 _19718_x);
inline void _1c0061765_UpdateTarget(void);
inline void _1c00618db_init(void);
inline jule::I64 _1c0065549_MinI(jule::Str _6113_k);
inline jule::I64 _1c0065857_MaxI(jule::Str _7913_k);
inline jule::U64 _1c0065b21_MaxU(jule::Str _9713_k);
inline jule::F64 _1c0065e62_Min(jule::Str _11512_k);
inline jule::F64 _1c00661e8_Max(jule::Str _13312_k);
inline jule::Bool _1c006921d_IsSigInt(jule::Str _2717_k);
inline jule::Bool _1c006952b_IsUnsigInt(jule::Str _3619_k);
inline jule::Bool _1c00697e5_IsInt(jule::Str _4610_k);
inline jule::Bool _1c0069b36_IsFloat(jule::Str _5112_k);
inline jule::Bool _1c0069dbc_IsNum(jule::Str _5610_k);
inline jule::Bool _1c006a186_IsSigNum(jule::Str _6113_k);
inline void _1c007447b_lshiftUnsig(_1c006a461_Const* _59021_c, _1c006a461_Const* _59032_x);
inline void _1c00747ab_rshiftUnsig(_1c006a461_Const* _59621_c, _1c006a461_Const* _59632_x);
inline jule::Bool _1a7b6a342_IsUnaryOp(jule::U64 _33414_id);
inline jule::Bool _1a7b6a650_IsBinOp(jule::U64 _34412_id);
inline jule::Bool _1a7b6ac5a_IsStr(jule::Str _36410_k);
inline jule::Bool _1a7b6aee1_IsRawStr(jule::Str _36713_k);
inline jule::Bool _1a7b6b2aa_IsRune(jule::Str _37111_k);
inline jule::Bool _1a7b6bb90_IsFloat(jule::Str _38012_k);
inline jule::Bool _1a7b6be59_IsNum(jule::Str _38810_k);
inline jule::Bool _1a7b6c4dc_IsIgnoreIdent(jule::Str _40318_ident);
inline jule::Bool _1a7b6c7a6_IsAnonIdent(jule::Str _40616_ident);
inline jule::Bool _1a7b6cd39_IsSpace(jule::I32 _41912_r);
inline jule::Bool _1a7b6d334_IsLetter(jule::I32 _42913_r);
inline jule::Bool _1a7b6d7a7_IsDecimal(jule::U8 _44914_b);
inline jule::Bool _1a7b6da71_IsBinary(jule::U8 _45213_b);
inline jule::Bool _1a7b6dd3a_IsOctal(jule::U8 _45512_b);
inline jule::Bool _1a7b6e104_IsHex(jule::U8 _45810_b);
inline jule::Bool _1a7b6e3bd_IsAssign(jule::U64 _47313_id);
inline jule::Bool _1a7b6e687_IsPostfixOp(jule::U64 _48516_id);
inline jule::Bool _1a7b6e951_IsAssignOp(jule::U64 _49515_id);
inline jule::Ptr<_1a7b7038b_File> _1a7b71766_NewFileSet(jule::Str _5715_path);
inline _1d9144ab5_Log _1a7b73290_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1a7b7038b_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args);
inline jule::Bool _1a7b73658_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix);
inline jule::Str _1a7b739cc_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i);
inline jule::Str _1a7b73d95_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i);
inline jule::Str _1a7b74219_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i);
inline jule::Str _1a7b7458d_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i);
inline jule::Str _1a7b74912_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i);
inline jule::Str _1a7b74d96_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i);
inline jule::Str _1a7b750d8_commonNum(jule::Slice<jule::U8>* _21615_txt);
inline jule::Str _1a7b753a2_binaryNum(jule::Slice<jule::U8>* _23915_txt);
inline jule::Bool _1a7b75726_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i);
inline jule::Bool _1a7b75a9a_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i);
inline jule::Bool _1a7b75e1e_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i);
inline jule::Bool _1a7b76293_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i);
inline jule::Bool _1a7b76617_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i);
inline jule::Str _1a7b76b12_octalNum(jule::Slice<jule::U8>* _31814_txt);
inline jule::Str _1a7b76cdd_hexNum(jule::Slice<jule::U8>* _36012_txt);
inline jule::Str _1a7b77140_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n);
inline jule::Str _1a7b77409_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt);
inline jule::Str _1a7b776c3_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt);
inline jule::Str _1a7b7798c_hexByteEscape(jule::Slice<jule::U8>* _42119_txt);
inline jule::Str _1a7b77c56_byteEscape(jule::Slice<jule::U8>* _42616_txt);
inline jule::Slice<_1d9144ab5_Log> _1a7b7cc4a_Lex(jule::Ptr<_1a7b7038b_File> _80612_f, jule::I64 _80622_mode);
inline jule::Bool _1a7c52d31_FindModuleFile(jule::Slice<jule::Ptr<_1d828aeb5_DirEntry>>* _1320_dirents);
inline jule::Str _1a7c530d9_FindModuleFileDeep(jule::Str _2527_path);
inline jule::Slice<_1d9144ab5_Log> _1a7c533a3_CheckModuleFile(jule::Str* _4721_path);
inline jule::Bool _1a7c53c00_IsPub(jule::Str _910_ident);
inline jule::Bool _1a7c9cb39_IsAscii(jule::I32 _1112_r);
inline jule::I32 _1a7cb7c64_ToRune(jule::Str _2015_lit);
inline jule::Str _1a7cb7e73_ToRawStr(jule::Str _3613_lit);
inline jule::Str _1a7cb82b4_ToStr(jule::Str _4714_lit);
inline __jule_tuple_u8__jule_tuple_bool _1a7cb854a_tryBtoaCommonEsq(jule::Str _8321_s);
inline jule::I32 _1a7cb88be_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i);
inline void _1a7cb8c65_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i);
inline jule::I64 _1a7dec085_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I64 _1241_i);
inline jule::Slice<jule::U8> _1a7dec44d_getFormatRange(jule::I64* _2824_i, jule::Slice<jule::U8>* _2837_bytes);
inline void _1a7dec739_FmtByDefault(_1daed18b7_StrBuilder* _4822_buf, jule::Any* _4840_arg);
inline void _1a7decb57_applyFmtByDefault(_1daed18b7_StrBuilder* _8727_buf, jule::I64* _8749_j, jule::Slice<jule::Any> _8757_args);
inline void _1a7ded075_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _1daed18b7_StrBuilder* _9536_buf, jule::I64* _9558_j, jule::Slice<jule::Any> _9566_args);
inline jule::Slice<jule::U8> _1a7ded3e9_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args);
inline jule::Str _1a7e0041d_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args);
inline jule::Ptr<_1a7bba8d1_Fn> _1a78253d7_runtimeFindFn(jule::Ptr<_1a7c36793_ImportInfo>* _1023_runtime, jule::Str _1045_ident);
inline jule::Ptr<_1a7ba5ca6_Struct> _1a7825937_runtimeFindStruct(jule::Ptr<_1a7c36793_ImportInfo>* _2327_runtime, jule::Str _2349_ident);
inline jule::Bool _1a7bc0b8e_parameterUsesGenerics(jule::Ptr<_1a7bbc839_ParamIns>* _39431_p, jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>>* _39446_generics);
inline jule::Ptr<_1a7d244a7_TypeSymbol> _1a7bc33bc_buildType(jule::Ptr<_1a7b800b0_TypeDecl> _9418_t);
inline jule::Ptr<_1a7cd5336_Value> _1a7bc36ca_buildExpr(jule::Ptr<_1a7b89251_Expr> _10318_expr);
inline jule::Ptr<_1a7d1aea4_TypeAlias> _1a7bc3994_buildTypeAlias(jule::Ptr<_1a7b9b939_TypeAliasDecl> _11223_decl);
inline jule::Ptr<_1a7ba2d80_Field> _1a7bc3cd5_buildField(jule::Ptr<_1a7ba02de_FieldDecl> _12319_decl);
inline jule::Slice<jule::Ptr<_1a7ba2d80_Field>> _1a7bc406b_buildFields(jule::Slice<jule::Ptr<_1a7ba02de_FieldDecl>>* _13421_decls);
inline jule::Ptr<_1a7ba5ca6_Struct> _1a7bc4335_buildStruct(jule::Ptr<_1a7ba0bd5_StructDecl> _14220_decl);
inline jule::Ptr<_1a7bb8e0c_Param> _1a7bc45ee_buildParam(jule::Ptr<_1a7b9567a_ParamDecl> _15419_decl);
inline jule::Slice<jule::Ptr<_1a7bb8e0c_Param>> _1a7bc49c8_buildParams(jule::Slice<jule::Ptr<_1a7b9567a_ParamDecl>>* _16521_decls);
inline jule::Ptr<_1a7bb86c0_RetType> _1a7bc4c1a_buildRetType(jule::Ptr<_1a7b87d10_RetTypeDecl> _17321_decl);
inline jule::Ptr<_1a7bba8d1_Fn> _1a7bc4ed4_buildFunc(jule::Ptr<_1a7b96acc_FnDecl> _18318_decl);
inline jule::Slice<jule::Ptr<_1a7bba8d1_Fn>> _1a7bc529d_buildMethods(jule::Slice<jule::Ptr<_1a7b96acc_FnDecl>>* _20122_decls);
inline jule::Slice<jule::Ptr<_1a7d244a7_TypeSymbol>> _1a7bc5567_buildTraitInherits(jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>>* _20928_inherits);
inline jule::Ptr<_1a7bce362_Trait> _1a7bc5831_buildTrait(jule::Ptr<_1a7ba1422_TraitDecl> _21719_decl);
inline jule::Ptr<_1a7bd1001_EnumItem> _1a7bc5aea_buildEnumItem(jule::Ptr<_1a7b9d4c9_EnumItemDecl> _22722_decl);
inline jule::Slice<jule::Ptr<_1a7bd1001_EnumItem>> _1a7bc5db4_buildEnumItems(jule::Slice<jule::Ptr<_1a7b9d4c9_EnumItemDecl>>* _23524_decls);
inline jule::Ptr<_1a7bd1a6d_Enum> _1a7bc63ae_buildEnum(jule::Ptr<_1a7b9e08a_EnumDecl> _24318_decl);
inline jule::Ptr<_1a7bd2ba1_TypeEnumItem> _1a7bc658a_buildTypeEnumItem(jule::Ptr<_1a7b9e8b5_TypeEnumItemDecl> _25326_decl);
inline jule::Slice<jule::Ptr<_1a7bd2ba1_TypeEnumItem>> _1a7bc6832_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a7b9e8b5_TypeEnumItemDecl>>* _26128_decls);
inline jule::Ptr<_1a7bd3278_TypeEnum> _1a7bc6aeb_buildTypeEnum(jule::Ptr<_1a7ba0025_TypeEnumDecl> _26922_decl);
inline jule::Ptr<_1a7c7b178_Var> _1a7bc6db5_buildVar(jule::Ptr<_1a7b97c87_VarDecl> _27817_decl);
inline jule::Slice<jule::Ptr<_1a7c7b178_Var>> _1a7bc717e_buildVars(jule::Slice<jule::Ptr<_1a7b97c87_VarDecl>> _29518_decls);
inline jule::Ptr<_1a7c0e1a5_Impl> _1a7bc7448_buildImpl(jule::Ptr<_1a7ba1a82_Impl> _30318_decl);
inline jule::Bool _1a7bcd85b_isImplicitImport(jule::Ptr<_1a7c36793_ImportInfo> _78821_imp);
inline jule::Ptr<_1a7cd41ae_Data> _1a7c09788_buildAsComptimeMethodData(jule::Ptr<_1a7bbd8b2_FnIns>* _203035_f);
inline jule::Ptr<_1a7c36793_ImportInfo> _1a7c09997_findComptimePackage(jule::Ptr<_1a7c56c14_sema>* _203829_s);
inline jule::Ptr<_1a7cd41ae_Data> _1a7c09d1b_buildComptimeTypeInfoData(jule::Ptr<_1a7c56c14_sema>* _204435_s, jule::Ptr<_1a7d1bc96_TypeKind>* _204450_t);
inline jule::Ptr<_1a7cd41ae_Data> _1a7c0a15c_buildComptimeValue(jule::Ptr<_1a7cd41ae_Data>* _205228_d);
inline jule::Str _1a7c0d14e_toStrConstraints(jule::Ptr<_1a7d1a3b0_InsGeneric> _14321_g);
inline jule::Bool _1a7c0d517_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1a7d1bc96_TypeKind>* _15434_g);
inline jule::Bool _1a7c0d7d1_isBuiltinConstraint(jule::Str* _19325_ident);
inline jule::Ptr<_1a7c1ac1c_scopeChecker> _1a7c113d8_newScopeCheckerBase(jule::Ptr<_1a7c56c14_sema>* _5829_s, jule::Ptr<_1a7bbd8b2_FnIns> _5843_owner);
inline jule::Ptr<_1a7c1ac1c_scopeChecker> _1a7c117a1_newScopeChecker(jule::Ptr<_1a7c56c14_sema>* _6625_s, jule::Ptr<_1a7bbd8b2_FnIns> _6639_owner);
inline jule::Ptr<_1a7c19c2c_scopeLabel> _1a7c11b25_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1a7c1ac1c_scopeChecker> _7637_scope);
inline jule::Slice<jule::Ptr<_1a7cd41ae_Data>> _1a7c11e66_getDatasFromTupleData(jule::Ptr<_1a7cd41ae_Data>* _8831_d);
inline jule::Bool _1a7c126d6_checkMut(jule::Ptr<_1a7c56c14_sema>* _12318_s, jule::Ptr<_1a7cd41ae_Data>* _12329_left, jule::Ptr<_1a7cd41ae_Data> _12346_right, jule::Ptr<_1a7b69b05_Token> _12360_op);
inline jule::Bool _1a7c12bc0_checkAssign(jule::Ptr<_1a7c56c14_sema>* _14221_s, jule::Ptr<_1a7cd41ae_Data>* _14236_left, jule::Ptr<_1a7cd41ae_Data> _14253_right, jule::Ptr<_1a7b69b05_Token> _14267_op);
inline jule::Bool _1a7c13099_isValidAstStForNextSt(jule::Any* _16431_n);
inline jule::Bool _1a7c132db_isValidStForNextSt(jule::Any* _17524_st);
inline jule::U64 _1a7c2d46b_removeEqFromOp(jule::U64 _216719_op);
inline void _1a7c2d69c_makeComptimeRange(jule::Ptr<_1a7cd41ae_Data>* _219627_d);
inline jule::Bool _1a7c2d966_canComptimeMatch(jule::Ptr<_1a7cd41ae_Data>* _221926_d);
inline jule::Bool _1a7c2dc30_stmtIsDef(jule::Any* _222715_stmt);
inline jule::I64 _1a7c2e0a4_countMatchType(jule::Ptr<_1a7c181ae_Match>* _223920_m, jule::Ptr<_1a7d1bc96_TypeKind>* _223932_t);
inline jule::Ptr<_1a7ccd9e4_SymbolTable> _1a7c3384a_findVarFileInPackage(jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>* _4430_files, jule::Ptr<_1a7c7b178_Var>* _4454_v);
inline jule::Ptr<_1a7c7b178_Var> _1a7c33cbd_findVarInPackage(jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>* _5526_files, jule::Str* _5550_ident, jule::Bool _5562_binded);
inline jule::Ptr<_1a7d1aea4_TypeAlias> _1a7c341ec_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>* _6732_files, jule::Str* _6756_ident, jule::Bool _6768_binded);
inline jule::Ptr<_1a7ba5ca6_Struct> _1a7c346a3_findStructInPackage(jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>* _7929_files, jule::Str* _7953_ident, jule::Bool _7965_binded);
inline jule::Ptr<_1a7bba8d1_Fn> _1a7c34a9e_findFnInPackage(jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>* _9125_files, jule::Str* _9149_ident, jule::Bool _9161_binded);
inline jule::Ptr<_1a7bce362_Trait> _1a7c34e23_findTraitInPackage(jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>* _10328_files, jule::Str* _10352_ident);
inline jule::Ptr<_1a7bd1a6d_Enum> _1a7c35297_findEnumInPackage(jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>* _11527_files, jule::Str* _11551_ident);
inline jule::Ptr<_1a7bd3278_TypeEnum> _1a7c3572b_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>* _12731_files, jule::Str* _12755_ident);
inline jule::Any _1a7c35ad3_defByIdentPackage(jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>* _13827_files, jule::Str* _13851_ident, jule::Bool _13863_binded);
inline jule::Bool _1a7c3bb94_isStdPackage(jule::Str* _36918_f, jule::Str _36926_p);
inline jule::Bool _1a7c542c7_isValidModelForRef(jule::Any* _1328_m);
inline _1d9144ab5_Log _1a7c5477d_compilerErr(jule::Ptr<_1a7b69b05_Token>* _4717_token, jule::Bool _4732_line, jule::Str _4744_fmt, jule::Slice<jule::Any> _4757_args);
inline jule::Bool _1a7c54b02_impIsLookupable(jule::Ptr<_1a7c36793_ImportInfo>* _6121_i, jule::Str* _6138_ident);
inline void _1a7c54e32_appendRetVars(jule::Slice<jule::Ptr<_1a7c7b178_Var>>* _7323_dest, jule::Ptr<_1a7bbd8b2_FnIns>* _7342_f);
inline void _1a7c5521d_appendParamVars(jule::Slice<jule::Ptr<_1a7c7b178_Var>>* _10325_dest, jule::Ptr<_1a7bbd8b2_FnIns>* _10344_f);
inline void _1a7c55509_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>* _16334_dest, jule::Ptr<_1a7bbd8b2_FnIns>* _16359_f);
inline jule::Ptr<_1a7ccd9e4_SymbolTable> _1a7c5587d_findFile(jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>* _20418_files, jule::Ptr<_1a7b7038b_File>* _20442_handler);
inline void _1a7c55d34_pushSuggestion(_1d9144ab5_Log* _21330_log, jule::Str _21341_fmt, jule::Slice<jule::Any> _21354_args);
inline void _1a7c7940c_pushImplemented(jule::Ptr<_1a7bce362_Trait> _300524_t, jule::Ptr<_1a7ba5ca6_Struct>* _300540_d);
inline void _1a7c796e8_pushImplements(jule::Ptr<_1a7ba5ca6_Struct>* _302324_s, jule::Ptr<_1a7bce362_Trait> _302340_t);
inline void _1a7c79b49_pushRuntimeToStr(jule::Ptr<_1a7c56c14_sema>* _304126_s, jule::Ptr<_1a7d1bc96_TypeKind>* _304141_t, jule::Ptr<_1a7b69b05_Token>* _304160_token, jule::Ptr<_1a7bc1a4c_ReferenceStack> _30426_refers);
inline jule::Bool _1a7cb9518_traitHasReferenceReceiver(jule::Ptr<_1a7bce362_Trait>* _2831_t);
inline jule::Bool _1a7cb989d_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1a7cd41ae_Data>* _4333_d);
inline jule::Bool _1a7cb9c22_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1a7cd41ae_Data>* _4830_d);
inline jule::Bool _1a7cba0da_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1a7cd41ae_Data>* _7132_d);
inline jule::Bool _1a7cba45e_intAssignable(jule::Str _10018_kind, jule::Ptr<_1a7cd41ae_Data>* _10030_d);
inline void _1a7cc6954_checkMutRiskOfStructLit(jule::Ptr<_1a7c56c14_sema>* _92133_s, jule::Ptr<_1a7badbc1_StructLitExprModel>* _92144_m);
inline jule::Ptr<_1a7d1bc96_TypeKind> _1a7ccc790_lenKind(void);
inline jule::Bool _1a7cccae2_isGoodValueToInfer(jule::Ptr<_1a7cd41ae_Data>* _142624_d);
inline jule::Ptr<_1a7b7e4cc_Directive> _1a7d1351d_findDirective(jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>* _440323_directives, jule::Str _440354_d);
inline jule::Any _1a7d138d6_findBuiltinsImport(jule::Str* _441224_ident, jule::Ptr<_1a7c36793_ImportInfo> _441236_imp);
inline void _1a7d13b17_fitBitsize(jule::Ptr<_1a7cd41ae_Data>* _442120_d);
inline void _1a7d13e47_makeStructLitAlloc(jule::Ptr<_1a7cd41ae_Data>* _445028_d, jule::Ptr<_1a7badbc1_StructLitExprModel>* _445043_lit);
inline jule::Ptr<_1a7c7b178_Var> _1a7d142bb_buildErrorVar(jule::Ptr<_1a7c1397e_Scope>* _446123_s, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _446139_fc);
inline jule::Any _1a7d14640_findBuiltinsSema(jule::Str* _447622_ident, jule::Ptr<_1a7c56c14_sema> _447638_s);
inline jule::Bool _1a7d14909_isOkForShifting(jule::Ptr<_1a7cd41ae_Data>* _450125_d);
inline jule::Bool _1a7d14cd3_isInstancedStruct(jule::Ptr<_1a7ba8b11_StructIns> _451822_s);
inline jule::Bool _1a7d150d0_isPtrArithmeticCompatible(jule::Ptr<_1a7cd41ae_Data>* _452235_l, jule::Ptr<_1a7cd41ae_Data>* _452250_r);
inline void _1a7d155db_applyRuntimeToStr(jule::Ptr<_1a7c56c14_sema>* _454327_s, jule::Ptr<_1a7d1bc96_TypeKind>* _454342_from, jule::Ptr<_1a7d1bc96_TypeKind>* _454364_to, jule::Ptr<_1a7b69b05_Token>* _45447_token, jule::Ptr<_1a7bc1a4c_ReferenceStack> _454426_refers);
inline void _1a7d15ae7_applyCastKindModel(jule::Ptr<_1a7c56c14_sema>* _455828_s, jule::Ptr<_1a7cd41ae_Data>* _455843_d, jule::Ptr<_1a7d1bc96_TypeKind>* _455858_t, jule::Ptr<_1a7b69b05_Token>* _45597_token, jule::Ptr<_1a7bc1a4c_ReferenceStack> _455926_refers);
inline void _1a7d16103_applyCastKind(jule::Ptr<_1a7c56c14_sema>* _456923_s, jule::Ptr<_1a7cd41ae_Data>* _456938_d, jule::Ptr<_1a7d1bc96_TypeKind>* _456953_t, jule::Ptr<_1a7b69b05_Token>* _45707_token, jule::Ptr<_1a7bc1a4c_ReferenceStack> _457026_refers);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d16312_buildVoidData(void);
inline jule::Str _1a7d167eb_checkDataForIntegerIndexing(jule::Ptr<_1a7c56c14_sema>* _458137_s, jule::Ptr<_1a7cd41ae_Data>* _458152_d, jule::Ptr<_1a7b69b05_Token>* _45827_token, jule::Ptr<_1a7bc1a4c_ReferenceStack> _458226_refers);
inline void _1a7d16d07_applyCastModelByEnum(jule::Ptr<_1a7c56c14_sema>* _460730_s, jule::Ptr<_1a7cd41ae_Data>* _460745_d, jule::Ptr<_1a7bd1a6d_Enum> _460759_e, jule::Ptr<_1a7b69b05_Token>* _46087_token, jule::Ptr<_1a7bc1a4c_ReferenceStack> _460826_refers);
inline void _1a7d17324_castConstByType(jule::Str* _461521_t, jule::Ptr<_1a7cd41ae_Data>* _461534_d);
inline void _1a7d17500_updateModelToGenericIns(jule::Any* _464933_m, jule::Ptr<_1a7bbd8b2_FnIns>* _464952_f);
inline jule::Bool _1a7d17874_pushSubIdentFromExpr(jule::Any _466029_expr, jule::Ptr<_1a7b857e1_SubIdentTypeDecl>* _466050_t);
inline jule::Str _1a7d17b3d_constoa(jule::Ptr<_1c006a461_Const>* _468313_c);
inline jule::Ptr<_1a7cd41ae_Data> _1a7d181d2_evalEnumStatic(jule::Ptr<_1a7c56c14_sema>* _469424_s, jule::Ptr<_1a7bd1a6d_Enum>* _469439_enm, jule::Ptr<_1a7bd1001_EnumItem>* _469456_item, jule::Ptr<_1a7b69b05_Token>* _46957_token, jule::Ptr<_1a7bc1a4c_ReferenceStack> _469526_refers);
inline jule::Ptr<_1a7badbc1_StructLitExprModel> _1a7d1849b_isLitBased(jule::Any* _471220_m);
inline void _1a7d18787_makeImplicitDeref(jule::Ptr<_1a7cd41ae_Data>* _472927_d, jule::Ptr<_1a7b69b05_Token> _472941_baseToken);
inline void _1abc3865e_updateRefer(jule::Ptr<_1a7bc1a4c_ReferenceStack> _474023_ref, jule::Ptr<_1a7bbd8b2_FnIns>* _474046_old, jule::Ptr<_1a7bbd8b2_FnIns>* _474059_new);
inline void _1a7d18e19_makeVariadic(jule::Ptr<_1a7cd41ae_Data>* _474822_d, jule::Ptr<_1a7d1bc96_TypeKind> _474836_elem);
inline jule::Bool _1a7d19348_isVarCaptured(jule::Ptr<_1a7c1ac1c_scopeChecker> _476218_r, jule::Ptr<_1a7c1ac1c_scopeChecker> _476240_s, jule::Ptr<_1a7c7b178_Var> _476258_v);
inline jule::Bool _1a7d37e49_kindUsesGenerics(jule::Ptr<_1a7d1bc96_TypeKind>* _175726_k, jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>>* _175741_generics);
inline jule::Bool _1a7d38312_hasDirective(jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>* _176722_directives, jule::Str _176753_tag);
inline jule::Bool _1a7d385cb_canGetPtr(jule::Ptr<_1a7cd41ae_Data>* _177619_d);
inline jule::Bool _1a7d3891c_isValidForSptrType(jule::Ptr<_1a7d1bc96_TypeKind>* _178828_t);
inline jule::Bool _1a7d38ba3_isValidForRef(jule::Ptr<_1a7d1bc96_TypeKind>* _179723_t);
inline jule::Bool _1a7d38e6c_isBuiltinStrConvertable(jule::Ptr<_1a7d1bc96_TypeKind>* _180033_t);
inline jule::Str _1a7d39236_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _180427_tokens);
inline jule::Ptr<_1a7d24dae_Prim> _1a7d39610_buildPrimType(jule::Str _182318_kind);
inline void _1a7d39d5d_applyImplicitCast(jule::Ptr<_1a7c56c14_sema>* _185127_s, jule::Ptr<_1a7d1bc96_TypeKind>* _185142_dest, jule::Ptr<_1a7cd41ae_Data>* _185164_d, jule::Ptr<_1a7b69b05_Token>* _18527_token, jule::Ptr<_1a7bc1a4c_ReferenceStack> _185226_refers);
inline jule::Bool _1a7d3a127_validTypeForXof(jule::Ptr<_1a7d1bc96_TypeKind>* _188025_t);
inline __jule_tuple_x_1a7ccd9e4_SymbolTable__jule_tuple_s_1d9144ab5_Log _1a7d3d23a_buildSymbols(jule::Ptr<_1a7b7d19b_AST>* _1622_ast, jule::Trait* _1638_importer, jule::Ptr<_1a7bc7a0e_symbolBuilder> _1662_owner);
inline void _1a7d3d56a_collectImplicitImports(jule::Ptr<_1a7c56c14_sema>* _3132_s, jule::Ptr<_1a7ccd9e4_SymbolTable>* _3147_file);
inline __jule_tuple_x_1a7c396b9_Package__jule_tuple_s_1d9144ab5_Log _1a7d3d999_analyzePackage(jule::Slice<jule::Ptr<_1a7b7d19b_AST>>* _4524_files, jule::Trait* _4544_importer, jule::I64* _4565_flags);
inline __jule_tuple_x_1a7c396b9_Package__jule_tuple_s_1d9144ab5_Log _1a7d3de50_AnalyzePackage(jule::Slice<jule::Ptr<_1a7b7d19b_AST>> _9523_files, jule::Trait _9542_importer, jule::I64 _9562_flags);
inline jule::Ptr<_1a7bbd8b2_FnIns> _1a7e00dad_findBuiltinFunc(jule::Str* _2621_ident);
inline jule::Ptr<_1a7d1aea4_TypeAlias> _1a7e011bb_primTypeAlias(jule::Ptr<_1a7d1bc96_TypeKind>* _6623_k);
inline jule::Ptr<_1a7c7b178_Var> _1a7e04a71_findBuiltinVar(jule::Str* _9420_ident);
inline jule::Ptr<_1a7d1aea4_TypeAlias> _1a7e04db2_findBuiltinTypeAlias(jule::Str _14225_ident);
inline jule::Any _1a7e05148_findBuiltinDef(jule::Str* _19720_ident);
inline jule::Any _1a7e05412_findBuiltinDefStdDebug(jule::Str* _21328_ident);
inline jule::Any _1a7e056cb_findBuiltinDefStdMem(jule::Str* _22626_ident);
inline jule::Any _1a7e05aa5_findBuiltinDefStdComptime(jule::Str* _24231_ident);
inline jule::Any _1a7e05ce7_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident);
inline jule::Any _1a7e0616b_findPackageBuiltinDef(jule::Str* _28227_linkPath, jule::Str* _28243_ident);
inline jule::Ptr<_1a7cd41ae_Data> _1a7e064e0_builtinCallerError(jule::Ptr<_1a7cd5dd6_eval>* _29728_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _29743_fc);
inline jule::Ptr<_1a7cd41ae_Data> _1a7e0691e_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _32826_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _32841_fc, jule::Ptr<_1a7cd41ae_Data>* );
inline jule::Ptr<_1a7cd41ae_Data> _1a7e06d4d_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _35528_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _35543_fc, jule::Ptr<_1a7cd41ae_Data>* _35565_d);
inline jule::Ptr<_1a7cd41ae_Data> _1a7e0727c_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _36726_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _36741_fc, jule::Ptr<_1a7cd41ae_Data>* _36763_d);
inline jule::Ptr<_1a7cd41ae_Data> _1a7e076ab_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _42928_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _42943_fc, jule::Ptr<_1a7cd41ae_Data>* );
inline jule::Ptr<_1a7cd41ae_Data> _1a7e07d1b_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _45527_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _45542_fc, jule::Ptr<_1a7cd41ae_Data>* _45564_d);
inline jule::Ptr<_1a7cd41ae_Data> _1a7e0813a_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _50629_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _50644_fc, jule::Ptr<_1a7cd41ae_Data>* _50666_d);
inline jule::Ptr<_1a7cd41ae_Data> _1a7e08624_callerCopySlice(jule::Ptr<_1a7cd41ae_Data>* _61725_dest, jule::Ptr<_1a7cd5dd6_eval>* _61743_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _61758_fc, jule::Ptr<_1a7cd41ae_Data>* _61780_d);
inline jule::Ptr<_1a7cd41ae_Data> _1a7e08a53_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _65127_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _65142_fc, jule::Ptr<_1a7cd41ae_Data>* _65164_d);
inline jule::Ptr<_1a7cd41ae_Data> _1a7e08dc7_callerLenSlice(jule::Ptr<_1a7cd41ae_Data>* _67624_expr, jule::Ptr<_1a7cd41ae_Data>* _67642_d);
inline jule::Ptr<_1a7cd41ae_Data> _1a7e0924b_callerLenMap(jule::Ptr<_1a7cd41ae_Data>* _68422_expr, jule::Ptr<_1a7cd41ae_Data>* _68440_d);
inline jule::Ptr<_1a7cd41ae_Data> _1a7e095c0_callerLenArr(jule::Ptr<_1a7cd41ae_Data>* _69222_expr, jule::Ptr<_1a7cd41ae_Data>* _69240_d);
inline jule::Ptr<_1a7cd41ae_Data> _1a7e09944_callerLenStr(jule::Ptr<_1a7cd41ae_Data>* _69922_expr, jule::Ptr<_1a7cd41ae_Data>* _69940_d);
inline jule::Ptr<_1a7cd41ae_Data> _1a7e09cb8_callerLenComptime(jule::Ptr<_1a7cd41ae_Data>* _71227_d, jule::I64 _71237_n);
inline jule::Ptr<_1a7cd41ae_Data> _1a7e0a1e7_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _71926_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _71941_fc, jule::Ptr<_1a7cd41ae_Data>* _71963_d);
inline jule::Ptr<_1a7cd41ae_Data> _1a7e0a56b_callerCapSlice(jule::Ptr<_1a7cd41ae_Data>* _75924_expr, jule::Ptr<_1a7cd41ae_Data>* _75942_d);
inline jule::Ptr<_1a7cd41ae_Data> _1a7e0a99a_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _76726_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _76741_fc, jule::Ptr<_1a7cd41ae_Data>* _76763_d);
inline jule::Ptr<_1a7cd41ae_Data> _1a7e0ae84_callerDeleteMap(jule::Ptr<_1a7cd5dd6_eval>* _79025_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _79040_fc, jule::Ptr<_1a7cd41ae_Data>* _79062_expr, jule::Ptr<_1a7cd41ae_Data>* _79080_d);
inline jule::Ptr<_1a7cd41ae_Data> _1a7e0b3b3_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _81929_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _81944_fc, jule::Ptr<_1a7cd41ae_Data>* _81966_d);
inline jule::Ptr<_1a7cd41ae_Data> _1a7e0b7e2_builtinCallerAssert(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _84229_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _84244_fc, jule::Ptr<_1a7cd41ae_Data>* );
inline jule::Ptr<_1a7cd41ae_Data> _1a7e0bc21_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _88640_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _88655_fc, jule::Ptr<_1a7cd41ae_Data>* );
inline jule::Ptr<_1a7cd41ae_Data> _1a7e0c392_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _92241_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _92256_fc, jule::Ptr<_1a7cd41ae_Data>* );
inline jule::Ptr<_1a7cd41ae_Data> _1a7e0c7c1_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _94238_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _94253_fc, jule::Ptr<_1a7cd41ae_Data>* );
inline jule::Ptr<_1a7cd41ae_Data> _1a7e0cc00_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _95438_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _95453_fc, jule::Ptr<_1a7cd41ae_Data>* );
inline jule::Ptr<_1a7cd41ae_Data> _1a7e0d12e_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _96739_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _96754_fc, jule::Ptr<_1a7cd41ae_Data>* );
inline jule::Ptr<_1a7cd41ae_Data> _1a7e0d55d_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _98043_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _98058_fc, jule::Ptr<_1a7cd41ae_Data>* );
inline jule::Ptr<_1a7cd41ae_Data> _1a7e0d98c_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _104035_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _104050_fc, jule::Ptr<_1a7cd41ae_Data>* );
inline jule::Ptr<_1a7cd41ae_Data> _1a7e0ddbb_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _106536_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _106551_fc, jule::Ptr<_1a7cd41ae_Data>* );
inline jule::Ptr<_1a7cd41ae_Data> _1a7e0e2ea_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _109033_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _109048_fc, jule::Ptr<_1a7cd41ae_Data>* );
inline jule::Ptr<_1a7cd41ae_Data> _1a7e0e729_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _111344_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _111359_fc, jule::Ptr<_1a7cd41ae_Data>* _111381_d);
inline jule::Ptr<_1a7cd41ae_Data> _1a7e0eb58_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _116434_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _116449_fc, jule::Ptr<_1a7cd41ae_Data>* _116471_d);
inline jule::Ptr<_1a7cd41ae_Data> _1a7e10087_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _117336_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _117351_fc, jule::Ptr<_1a7cd41ae_Data>* _117373_d);
inline jule::Ptr<_1a879690c_FileInfo> _1a87dca52_ParseFile(jule::Ptr<_1a7b7038b_File> _2318_f);
inline __jule_tuple_x_1a7b7d19b_AST__jule_tuple_s_1d9144ab5_Log _1a87dd0e6_parseFileset(jule::Ptr<_1a7b7038b_File> _5521_f);
inline jule::Ptr<_1a7b94e3d_ScopeTree> _1a87ddab9_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1a87dde1b_isSt(jule::Ptr<_1a7b69b05_Token> _499_current, jule::Ptr<_1a7b69b05_Token> _4926_prev);
inline jule::Bool _1a87de290_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _5526_tokens, jule::I64* _5545_i);
inline __jule_tuple_int__jule_tuple_bool _1a87de658_nextStPos(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _6815_tokens, jule::I64 _6833_start);
inline __jule_tuple_sx_1a7b69b05_Token__jule_tuple_bool _1a87de9cc_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _13028_tokens);
inline jule::Slice<jule::Ptr<_1a87ded0c_stmt>> _1a87e01b4_splitStmts(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _15120_tokens);
inline jule::Bool _1a880881a_isTypeOp(jule::U64* _89314_id);
inline jule::Bool _1a8808b28_isTypeRange(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _90021_tokens);
inline jule::Slice<jule::Ptr<_1a7b69b05_Token>> _1a8808de2_getBlockExpr(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _93322_tokens);
inline __jule_tuple_sx_1a7b69b05_Token__jule_tuple_sx_1a7b69b05_Token _1a88092aa_splitDelim(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _96520_tokens, jule::U64 _96538_delim);
inline jule::I64 _1a8809574_findLowestPrecOp(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _100422_tokens);
inline jule::Ptr<_1a7b8aa6b_IdentExpr> _1a880983d_buildIdentExpr(jule::Ptr<_1a7b69b05_Token>* _106924_token);
inline __jule_tuple_sx_1a7b69b05_Token__jule_tuple_int _1a8809b07_getRangeExprTokens(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _107728_tokens);
inline jule::Bool _1a8809ed1_isAnonFnHead(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _110018_tokens);
inline jule::Bool _1a880abd5_checkAssignTokens(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _1623_tokens);
inline _1d9144ab5_Log _1a880bda1_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1a7b7038b_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args);
inline jule::Slice<jule::Ptr<_1a7b69b05_Token>> _1a880c3ce_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _6959_tokens);
inline __jule_tuple_sx_1a7b69b05_Token__jule_tuple_sx_1a7b69b05_Token _1a880c698_rangeLast(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _9919_tokens);
inline __jule_tuple_ssx_1a7b69b05_Token__jule_tuple_s_1d9144ab5_Log _1a880cb4e_parts(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust);
inline jule::U64 _1a880cdd5_getCloseOfBrace(jule::U64 _16720_left);
inline _1d9144ab5_Log _1a880d314_compilerErr(jule::Ptr<_1a7b69b05_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args);
inline void _1a880d6aa_pushSuggestion(_1d9144ab5_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args);
inline jule::Ptr<_1a7b800b0_TypeDecl> _1a88205bd_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1a80324ea_checkOs(jule::Str _912_arg);
inline __jule_tuple_bool__jule_tuple_bool _1a803263d_checkArch(jule::Str _2814_arg);
inline jule::Bool _1a80327d6_isPassFileAnnotation(jule::Str _5029_p);
inline void _1a804d24c_setOsVars(jule::Slice<jule::Str>* _3919_vars);
inline void _1a804d4c2_setArchVars(jule::Slice<jule::Str>* _4721_vars);
inline void _1a804d7ad_initVars(jule::Slice<jule::Str>* _5818_vars, _1a804ce2d_CompileInfo* _5832_info);
inline jule::Slice<jule::U8> _1a882468d_readBuff(jule::Str _3013_path);
inline _1d9144ab5_Log _1a882499b_flatCompilerErr(jule::Str _4120_text);
inline jule::Ptr<_1a7bba8d1_Fn> _1a7e9d840_RuntimeFindFn(jule::Ptr<_1a7c36793_ImportInfo>* _1223_runtime, jule::Str _1245_ident);
inline jule::Ptr<_1a7ba5ca6_Struct> _1a7e9de39_RuntimeFindStruct(jule::Ptr<_1a7c36793_ImportInfo>* _2727_runtime, jule::Str _2749_ident);
inline void _1a882930d_pushPasses(jule::Ptr<_1a7c396b9_Package>* _12220_p, jule::Slice<jule::Str>* _12244_passes);
inline jule::Slice<jule::Str> _1a88296c6_getAllUniquePasses(jule::Ptr<_1a7c396b9_Package>* _13928_pkg, jule::Slice<jule::Ptr<_1a7c36793_ImportInfo>> _13953_uses);
inline _1a804ce2d_CompileInfo _1a88298d5_buildCompileInfo(void);
inline void _1a8829b8d_pushRuntimeToAST(jule::Ptr<_1a7b7d19b_AST>* _17926_f);
inline void _1a882a386_IterPackages(jule::Ptr<_1a882795a_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1a7c396b9_Package>*> _731_f);
inline void _1a882a6b6_IterFiles(jule::Ptr<_1a7c396b9_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1a7ccd9e4_SymbolTable>*> _1634_f);
inline void _1a882aa5c_iterTraitInheritMethods(jule::Ptr<_1a7bce362_Trait>* _2233_base, jule::Ptr<_1a7bce362_Trait>* _2252_t, jule::Fn<void,jule::Ptr<_1a7bba8d1_Fn>*> _2263_f);
inline void _1a882ae7a_iterTraitInheritMethods1(jule::Ptr<_1a7bce362_Trait>* _3134_base, jule::Ptr<_1a7bce362_Trait>* _3153_t, jule::Fn<void,jule::Ptr<_1a7bba8d1_Fn>*> _3164_f);
inline void _1a882b233_IterTraitMethods(jule::Ptr<_1a7bce362_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1a7bba8d1_Fn>*> _3937_f);
inline jule::Bool _1a882d510_IsForwarded(jule::Ptr<_1a7c1397e_Scope>* _2417_s);
inline jule::Bool _1a882d81d_IsExprComesFromBind(jule::Ptr<_1a7cd41ae_Data>* _4025_d);
inline jule::Bool _1a882dad7_IsAny(jule::Ptr<_1a7d1bc96_TypeKind>* _5215_t);
inline jule::Bool _1a882de28_IsClosure(jule::Ptr<_1a7bb0c39_AnonFnExprModel>* _6115_m);
inline jule::Bool _1a882e1ae_IsOpMethod(jule::Ptr<_1a7bba8d1_Fn>* _6416_m);
inline jule::Bool _1a882e533_IsTraitMethod(jule::Ptr<_1a7ba8b11_StructIns>* _8023_owner, jule::Ptr<_1a7bbd8b2_FnIns>* _8043_f);
inline jule::Bool _1a882e8a7_IsStdPackage(jule::Str _9417_f, jule::Str _9425_p);
inline jule::Ptr<_1a7b7e4cc_Directive> _1a88308a8_FindDirective(jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>* _1123_directives, jule::Str _1154_tag);
inline jule::Bool _1a8830c71_HasDirective(jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>* _2118_directives, jule::Str _2149_tag);
inline jule::Bool _1a88310e5_ContainsTraitMethod(jule::Ptr<_1a7bce362_Trait>* _2629_t, jule::Str* _2641_ident);
inline jule::I64 _1a88317aa_FindTraitTypeOffsetS(jule::Ptr<_1a7bce362_Trait> _3925_t, jule::Ptr<_1a7ba8b11_StructIns> _3940_s);
inline jule::I64 _1a8831b2e_FindTraitTypeOffset(jule::Ptr<_1a7bce362_Trait> _6224_t, jule::Ptr<_1a7d1bc96_TypeKind> _6239_k);
inline jule::Ptr<_1a7bbd8b2_FnIns> _1a883205d_FindOperator(jule::Ptr<_1a7ba8b11_StructIns>* _7822_s, jule::U64 _7837_op, jule::Bool _7850_unary);
inline jule::Ptr<_1a7bbd8b2_FnIns> _1a88323d2_FindFnGenericInstance(jule::Ptr<_1a7bba8d1_Fn>* _14731_f, jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>> _14739_generics);
inline jule::Ptr<_1a7ba8b11_StructIns> _1a8832866_FindStructGenericInstance(jule::Ptr<_1a7ba5ca6_Struct>* _16335_s, jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>> _16347_generics);
inline jule::Bool _1ac8272c4_isOrdered(jule::Ptr<_1a7c7b178_Var>* _1418_t, jule::Slice<jule::Ptr<_1a7c7b178_Var>> _1425_s);
inline jule::Bool _1ac82d044_isOrdered(jule::Ptr<_1a7ba5ca6_Struct>* _1418_t, jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>> _1425_s);
inline void _1ac8248ed_order(jule::Slice<jule::Ptr<_1a7c7b178_Var>> _3717_s);
inline void _1ac8254d1_order(jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>> _3717_s);
inline void _1a8971246_EliminateDefines(jule::Ptr<_1a882795a_IR>* _40226_ir);
inline void _1a89751b2_eliminateDeadCodeOfScope(jule::Ptr<_1a7c1397e_Scope> _23833_s);
inline void _1a8975437_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a7bba8d1_Fn>>* _25033_funcs);
inline void _1a8975668_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>>* _25937_structs);
inline void _1a8975921_eliminateFunctionsScopePackage(jule::Ptr<_1a7c396b9_Package>* _26740_pkg);
inline void _1a8975b1e_eliminateScopePackage(jule::Ptr<_1a7c396b9_Package>* _27431_pkg);
inline void _1a8975d50_EliminateScopes(jule::Ptr<_1a882795a_IR>* _27925_ir);
inline jule::Uintptr _1a7e10340_typeData(jule::Any* _1714_m);
inline jule::Bool _1a7e10708_equalConst(jule::Ptr<_1c006a461_Const> _2115_l, jule::Ptr<_1c006a461_Const> _2126_r);
inline jule::Bool _1a7e10a7c_equalCasting(jule::Ptr<_1a7bae551_CastingExprModel> _4017_l, jule::Ptr<_1a7bae551_CastingExprModel> _4039_r);
inline jule::Bool _1a7e10e45_equalUnary(jule::Ptr<_1a7bad2ec_UnaryExprModel> _4715_l, jule::Ptr<_1a7bad2ec_UnaryExprModel> _4735_r);
inline jule::Bool _1a7e112b9_equalIndexing(jule::Ptr<_1a7bb0783_IndexingExprModel> _5418_l, jule::Ptr<_1a7bb0783_IndexingExprModel> _5441_r);
inline jule::Bool _1a7e1163d_equalBinary(jule::Ptr<_1a7bace23_BinaryExprModel> _5916_l, jule::Ptr<_1a7bace23_BinaryExprModel> _5937_r);
inline jule::Bool _1a7e119b2_equalModels(jule::Any _7016_l, jule::Any _7030_r);
inline void _1a7e175cd_possibleNilRemove(jule::Ptr<_1a7e165ee_nils>* _7827_n, jule::Any _7837_m);
inline jule::Bool _1a7e17996_isGuaranteedNonNilExpr(jule::Ptr<_1a7e165ee_nils>* _8432_n, jule::Any _8442_m);
inline jule::Bool _1a7e17c60_isNilValidType(jule::Ptr<_1a7d1bc96_TypeKind> _9223_t);
inline jule::Uintptr _1a7e180a1_getNilVar(jule::Any _9414_m);
inline jule::Bool _1a883931d_isConstantValidConditionalCase(jule::Ptr<_1a7c13d9c_If>* _68736_i);
inline jule::Bool _1a883962b_isUnreachableExpr(jule::Any* _69623_expr);
inline jule::Bool _1a88398e5_isConstantValidMatchCase(jule::Ptr<_1a7c18bd7_Case>* _71130_case);
inline jule::Bool _1a8839c36_isUnreachableConditionalCase(jule::Ptr<_1a7c13d9c_If>* _72034_i);
inline jule::Bool _1a8839ebc_isUnreachableMatchCase(jule::Ptr<_1a7c18bd7_Case>* _72428_case);
inline __jule_tuple_bool__jule_tuple_u64 _1a8840401_checkForBitShiftOpt(jule::Ptr<_1a7bac928_OperandExprModel>* _59625_l, jule::Ptr<_1a7bac928_OperandExprModel>* _59648_r);
inline jule::Bool _1a88407b9_areSameLvalueExprModel(jule::Any* _61328_l, jule::Any* _61343_r);
inline void _1a8842986_possibleDynamicRemove(jule::Ptr<_1a88418ec_dynamic>* _8131_d, jule::Any _8144_m);
inline jule::Bool _1a8842c94_isDynamicValidType(jule::Ptr<_1a7d1bc96_TypeKind> _8727_t);
inline jule::Ptr<_1a7d1bc96_TypeKind> _1a88431c3_isTypeGuaranteedDynamicData(jule::Ptr<_1a88418ec_dynamic>* _8937_dy, jule::Ptr<_1a7d1bc96_TypeKind> _8955_t, jule::Any _8973_m);
inline jule::Uintptr _1a8843514_getDynamicVar(jule::Any _11418_m);
inline jule::Bool _1a8846eda_isValidBoundaryInfo(jule::Any _8424_m);
inline jule::I64 _1a88473a3_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr);
inline jule::Bool _1a8847727_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2);
inline void _1a8847a57_possibleBoundaryRemove(jule::Ptr<_1a8845e73_boundary>* _12432_b, jule::Any _12446_model);
inline jule::Bool _1a8847d21_isBoundaryRiskyType(jule::Ptr<_1a7d1bc96_TypeKind> _13628_t);
inline jule::Bool _1a88480da_isBoundaryValidType(jule::Ptr<_1a7d1bc96_TypeKind> _14128_t);
inline jule::Uintptr _1a88483a4_getBoundaryVar(jule::Any _14319_m);
inline void _1a884b42e_PushOptLevel(jule::I64 _3217_level);
inline void _1a897954b_detectEnabled(void);
inline void _1a89a1595_Throw(jule::Str _910_msg);
inline jule::U64 _1a968a833_unix(void);
inline jule::Bool _1a95b8123_isCopyOptimizable(jule::Ptr<_1a7cd41ae_Data>* _119123_expr);
inline jule::Bool _1a95b84db_isIterCopyOptimizable(jule::Ptr<_1a7cd41ae_Data>* _120227_expr, jule::Ptr<_1a7c7b178_Var>* _120241_v);
inline jule::Bool _1a95b891a_captureVarHandling(jule::Ptr<_1a9694078_ObjectCoder>* _120928_oc, jule::Ptr<_1a7bb0c39_AnonFnExprModel>* _120951_m, jule::Ptr<_1a7c7b178_Var>* _120977_v);
inline jule::Str _1a95cb4ee_decomposeCommonEsq(jule::U8 _196323_b);
inline jule::Str _1a95cb80c_sbtoa(jule::U8 _199010_b);
inline void _1a95cbae8_cstrBytes(_1daed18b7_StrBuilder* _201019_s, jule::Str _201034_ctx);
inline void _1a95cbe28_cstrLit(_1daed18b7_StrBuilder* _201617_s, jule::Str _201632_ctx);
inline void _1a95cc2be_ftoa(_1daed18b7_StrBuilder* _202214_s, jule::F64 _202229_f, jule::I64 _202237_bitsize);
inline void _1a95cc5aa_itoa(_1daed18b7_StrBuilder* _204014_s, jule::I64 _204029_x);
inline void _1a95cc896_utoa(_1daed18b7_StrBuilder* _205714_s, jule::U64 _205729_x);
inline void _1a95ccee5_operatorOverloadingBinary(_1daed18b7_StrBuilder* _207135_buf, jule::Ptr<_1a7ba8b11_StructIns>* _207157_s, jule::Str* _207173_l, jule::Str* _20723_r, jule::U64 _207211_op, jule::Str _207224_kind);
inline jule::Slice<jule::U8> _1a96a134e_concatAllParts(jule::Slice<jule::Ptr<_1a7b69b05_Token>> _125019_parts);
inline jule::Bool _1a96a165c_isHeadDecl(jule::Ptr<_1a7bba8d1_Fn>* _126620_m);
inline jule::Bool _1a96a1926_defaultEq(jule::Ptr<_1a7ba8b11_StructIns>* _127915_s);
inline jule::Bool _1a96b0ade_ableToInit(jule::Ptr<_1a7d1bc96_TypeKind>* _46820_t);
inline jule::Bool _1a96b0db9_shouldInitialized(jule::Ptr<_1a7d1bc96_TypeKind>* _47527_t);
inline void _1d9262bc2_printErrorMessage(jule::Str _3022_msg);
inline void _1d9262e47_help(jule::Slice<jule::Str>* _3510_args);
inline void _1d9263178_version(jule::Slice<jule::Str>* _6313_args);
inline void _1d9263387_toolDistos(void);
inline void _1d92634ec_toolDistarch(void);
inline void _1d92636ea_tool(jule::Slice<jule::Str>* _9410_args);
inline void _1d926392b_julenv(jule::Slice<jule::Str>* _11712_args);
inline void _1d9263c6c_mod(jule::Slice<jule::Str>* _1309_args);
inline jule::Bool _1d9263eae_processCommand(jule::Slice<jule::Str>* _15320_args);
inline void _1d9264157_showInfo(void);
void entry_point(void);
inline void _1a972cd8c_init(void);
inline jule::Ptr<_1d828cd85_File> _1a972d156_openOutput(jule::Str* _4316_path);
inline void _1a972d2ee_clearObjects(void);
inline void _1a972d60c_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd);
inline jule::Bool _1a972d8c6_isCppSourceFile(jule::Str _9920_path);
inline void _1a972db07_pushCompCmdClang(_1daed18b7_StrBuilder* _10726_cmd);
inline void _1a972dd38_pushCompCmdGcc(_1daed18b7_StrBuilder* _13324_cmd);
inline __jule_tuple_str__jule_tuple_str _1a972e2bc_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1a882795a_IR>* _15936_ir);
inline jule::Str _1a972e454_getCompilePath(void);
inline void _1a972e685_applyTargetIndependentOptimizations(jule::Ptr<_1a882795a_IR>* _20545_ir);
inline void _1a972e82d_checkCompilerFlag(void);
inline void _1a972ea3c_checkTargetArch(jule::Str _22720_arch);
inline void _1a972ec6d_checkTargetOs(jule::Str _23518_os);
inline void _1a972ee9e_checkTargetFlag(jule::Str* _24321_target);
inline void _1a97301d0_checkOptFlag(jule::Str* _26618_opt);
inline void _1a9730598_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1a9730763_checkFlags(jule::Slice<jule::Str>* _29216_args);
inline void _1a9730972_setupSemaFlags(jule::I64* _33824_flags);
inline jule::Ptr<_1a882795a_IR> _1a9730c3b_buildIr(jule::Slice<jule::Str>* _34413_args);
inline void _1a9730e6c_compileCommand(jule::Slice<jule::Str>* _38424_args);


struct _1a7bd5984_comptimeRangeKindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1a7bd4d18_index)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7cd41ae_Data>* _1426_d, jule::I64 _1436_i);
	void(*_1a7bd517b_ready)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c7b178_Var>* _1526_keyA, jule::Ptr<_1a7c7b178_Var>* _1543_keyB);
	void(*_1a7bd5599_step)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1a7c7b178_Var>* _1633_keyA, jule::Ptr<_1a7c7b178_Var>* _1650_keyB);
	jule::I64(*_1a7bd5830_len)(jule::Ptr<jule::Uintptr> _self_);
};

struct _1a7c33509_ImporterMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1a7c322d8_SetModPath)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path);
	jule::Str(*_1a7c3256e_GetModPath)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1a7c328b0_ModById)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id);
	jule::Ptr<_1a7c36793_ImportInfo>(*_1a7c32c01_GetImport)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path);
	__jule_tuple_sx_1a7b7d19b_AST__jule_tuple_s_1d9144ab5_Log(*_1a7c330ec_ImportPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_update_mod);
	void(*_1a7c333a5_Imported)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c36793_ImportInfo> _4128__0);
};

struct _1a7d1b7e0_KindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1a7d1b34a_Str)(jule::Ptr<jule::Uintptr> _self_);
	jule::Bool(*_1a7d1b68b_Equal)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other);
};

struct _1a7d3c448_LookupMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Ptr<_1a7c36793_ImportInfo>(*_1a7d3a732_SelectPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7c36793_ImportInfo>> _929_selector);
	jule::Ptr<_1a7c7b178_Var>(*_1a7d3ab2d_FindVar)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded);
	jule::Ptr<_1a7d1aea4_TypeAlias>(*_1a7d3b029_FindTypeAlias)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded);
	jule::Ptr<_1a7ba5ca6_Struct>(*_1a7d3b425_FindStruct)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded);
	jule::Ptr<_1a7bba8d1_Fn>(*_1a7d3b821_FindFn)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded);
	jule::Ptr<_1a7bce362_Trait>(*_1a7d3bb62_FindTrait)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident);
	jule::Ptr<_1a7bd1a6d_Enum>(*_1a7d3bea3_FindEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident);
	jule::Ptr<_1a7bd3278_TypeEnum>(*_1a7d3c2e4_FindTypeEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident);
};

struct _1a9725add_CommonFlagMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1a96e499c_Name)(jule::Ptr<jule::Uintptr> _self_);
	jule::I32(*_1a96e4ae0_Short)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1a96e4c33_What)(jule::Ptr<jule::Uintptr> _self_);
	void(*_1a9725989_Reset)(jule::Ptr<jule::Uintptr> _self_);
};



void __jule_type_deallocator0(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bd7ea3_comptimeStructFields>().dealloc(); }
void __jule_type_deallocator1(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bdb1d7_comptimeStatics>().dealloc(); }
void __jule_type_deallocator2(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bdde65_comptimeEnumFields>().dealloc(); }
void __jule_type_deallocator3(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7be27c6_comptimeParams>().dealloc(); }
void __jule_type_deallocator4(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7be4135_comptimeTypeInfos>().dealloc(); }
void __jule_type_deallocator5(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bee915_comptimeFiles>().dealloc(); }
void __jule_type_deallocator6(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c02eac_comptimeDecls>().dealloc(); }
void __jule_type_deallocator7(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8824e85_JuleImporter>().dealloc(); }
void __jule_type_deallocator8(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7ba8b11_StructIns>().dealloc(); }
void __jule_type_deallocator9(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bbd8b2_FnIns>().dealloc(); }
void __jule_type_deallocator10(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bce362_Trait>().dealloc(); }
void __jule_type_deallocator11(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bd1a6d_Enum>().dealloc(); }
void __jule_type_deallocator12(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bd3278_TypeEnum>().dealloc(); }
void __jule_type_deallocator13(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bd5ba4_comptimeRange>().dealloc(); }
void __jule_type_deallocator14(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bd6710_comptimeStructField>().dealloc(); }
void __jule_type_deallocator15(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bd9933_comptimeStatic>().dealloc(); }
void __jule_type_deallocator16(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bdcb56_comptimeEnumField>().dealloc(); }
void __jule_type_deallocator17(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7be096c_comptimeParam>().dealloc(); }
void __jule_type_deallocator18(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7be5aa4_comptimeTypeInfo>().dealloc(); }
void __jule_type_deallocator19(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bebba9_comptimeValue>().dealloc(); }
void __jule_type_deallocator20(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c01384_comptimeFile>().dealloc(); }
void __jule_type_deallocator21(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c0529a_comptimeDecl>().dealloc(); }
void __jule_type_deallocator22(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7d1bc96_TypeKind>().dealloc(); }
void __jule_type_deallocator23(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7d24dae_Prim>().dealloc(); }
void __jule_type_deallocator24(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7d288da_Sptr>().dealloc(); }
void __jule_type_deallocator25(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7d293ad_Slc>().dealloc(); }
void __jule_type_deallocator26(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7d29ea2_Tuple>().dealloc(); }
void __jule_type_deallocator27(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7d2aa52_Map>().dealloc(); }
void __jule_type_deallocator28(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7d2b6ce_Arr>().dealloc(); }
void __jule_type_deallocator29(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7d2c1a2_Ptr>().dealloc(); }
void __jule_type_deallocator30(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a96a2e00_customType>().dealloc(); }
void __jule_type_deallocator31(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c1ac1c_scopeChecker>().dealloc(); }
void __jule_type_deallocator32(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c36793_ImportInfo>().dealloc(); }
void __jule_type_deallocator33(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c396b9_Package>().dealloc(); }
void __jule_type_deallocator34(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c56c14_sema>().dealloc(); }
void __jule_type_deallocator35(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7ccd9e4_SymbolTable>().dealloc(); }
void __jule_type_deallocator36(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad3818cc_Flag>().dealloc(); }
void __jule_type_deallocator37(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad3851e9_Flag>().dealloc(); }
void __jule_type_deallocator38(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad388906_Flag>().dealloc(); }
void __jule_type_deallocator39(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad38c157_Flag>().dealloc(); }
void __jule_type_deallocator40(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad390864_Flag>().dealloc(); }
void __jule_type_deallocator41(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator42(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator43(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
void __jule_type_deallocator44(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
void __jule_type_deallocator45(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator46(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
void __jule_type_deallocator47(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator48(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c7b178_Var>().dealloc(); }
void __jule_type_deallocator49(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7ba1a82_Impl>().dealloc(); }
void __jule_type_deallocator50(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b9b939_TypeAliasDecl>().dealloc(); }
void __jule_type_deallocator51(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7ba0bd5_StructDecl>().dealloc(); }
void __jule_type_deallocator52(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b96acc_FnDecl>().dealloc(); }
void __jule_type_deallocator53(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7ba1422_TraitDecl>().dealloc(); }
void __jule_type_deallocator54(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b97c87_VarDecl>().dealloc(); }
void __jule_type_deallocator55(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b9e08a_EnumDecl>().dealloc(); }
void __jule_type_deallocator56(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7ba0025_TypeEnumDecl>().dealloc(); }
void __jule_type_deallocator57(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7ba2d80_Field>().dealloc(); }
void __jule_type_deallocator58(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c006a461_Const>().dealloc(); }
void __jule_type_deallocator59(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bd1001_EnumItem>().dealloc(); }
void __jule_type_deallocator60(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb8e0c_Param>().dealloc(); }
void __jule_type_deallocator61(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7ba5ca6_Struct>().dealloc(); }
void __jule_type_deallocator62(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bba8d1_Fn>().dealloc(); }
void __jule_type_deallocator63(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7d1aea4_TypeAlias>().dealloc(); }
void __jule_type_deallocator64(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c164cb_Label>().dealloc(); }
void __jule_type_deallocator65(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c1397e_Scope>().dealloc(); }
void __jule_type_deallocator66(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb6624_BuiltinErrorCallExprModel>().dealloc(); }
void __jule_type_deallocator67(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7cd41ae_Data>().dealloc(); }
void __jule_type_deallocator68(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb7636_BackendEmitExprModel>().dealloc(); }
void __jule_type_deallocator69(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb539d_BuiltinAppendCallExprModel>().dealloc(); }
void __jule_type_deallocator70(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb38da_BuiltinOutCallExprModel>().dealloc(); }
void __jule_type_deallocator71(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb3cb4_BuiltinOutlnCallExprModel>().dealloc(); }
void __jule_type_deallocator72(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb4567_BuiltinPanicCallExprModel>().dealloc(); }
void __jule_type_deallocator73(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb4a1d_BuiltinAssertCallExprModel>().dealloc(); }
void __jule_type_deallocator74(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb624a_BuiltinCopyCallExprModel>().dealloc(); }
void __jule_type_deallocator75(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb5d71_BuiltinDeleteCallExprModel>().dealloc(); }
void __jule_type_deallocator76(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb7933_FreeExprModel>().dealloc(); }
void __jule_type_deallocator77(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7baee03_FnCallExprModel>().dealloc(); }
void __jule_type_deallocator78(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c145b7_Conditional>().dealloc(); }
void __jule_type_deallocator79(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c148b4_InfIter>().dealloc(); }
void __jule_type_deallocator80(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b9920b_WhileKind>().dealloc(); }
void __jule_type_deallocator81(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c14d6a_WhileIter>().dealloc(); }
void __jule_type_deallocator82(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b99b13_RangeKind>().dealloc(); }
void __jule_type_deallocator83(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c157b6_RangeIter>().dealloc(); }
void __jule_type_deallocator84(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c15b4b_ContSt>().dealloc(); }
void __jule_type_deallocator85(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c16b3b_GotoSt>().dealloc(); }
void __jule_type_deallocator86(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c17015_Postfix>().dealloc(); }
void __jule_type_deallocator87(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c174bb_Assign>().dealloc(); }
void __jule_type_deallocator88(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b8aa6b_IdentExpr>().dealloc(); }
void __jule_type_deallocator89(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb0783_IndexingExprModel>().dealloc(); }
void __jule_type_deallocator90(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c17972_MultiAssign>().dealloc(); }
void __jule_type_deallocator91(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c181ae_Match>().dealloc(); }
void __jule_type_deallocator92(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c193d0_FallSt>().dealloc(); }
void __jule_type_deallocator93(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c16025_BreakSt>().dealloc(); }
void __jule_type_deallocator94(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c19776_RetSt>().dealloc(); }
void __jule_type_deallocator95(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b94e3d_ScopeTree>().dealloc(); }
void __jule_type_deallocator96(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b89251_Expr>().dealloc(); }
void __jule_type_deallocator97(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b9b1ec_Conditional>().dealloc(); }
void __jule_type_deallocator98(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b988d1_Iter>().dealloc(); }
void __jule_type_deallocator99(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b9a3b6_ContSt>().dealloc(); }
void __jule_type_deallocator100(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b92501_LabelSt>().dealloc(); }
void __jule_type_deallocator101(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b928ca_GotoSt>().dealloc(); }
void __jule_type_deallocator102(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b938ba_AssignSt>().dealloc(); }
void __jule_type_deallocator103(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b9c709_MatchCase>().dealloc(); }
void __jule_type_deallocator104(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b92bc7_FallSt>().dealloc(); }
void __jule_type_deallocator105(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b99edc_BreakSt>().dealloc(); }
void __jule_type_deallocator106(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b98161_RetSt>().dealloc(); }
void __jule_type_deallocator107(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b89b25_UseExpr>().dealloc(); }
void __jule_type_deallocator108(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b871d8_ArrTypeDecl>().dealloc(); }
void __jule_type_deallocator109(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b8634c_SlcTypeDecl>().dealloc(); }
void __jule_type_deallocator110(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b86946_PtrTypeDecl>().dealloc(); }
void __jule_type_deallocator111(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b85eb7_SptrTypeDecl>().dealloc(); }
void __jule_type_deallocator112(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b87936_MapTypeDecl>().dealloc(); }
void __jule_type_deallocator113(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b86649_TupleTypeDecl>().dealloc(); }
void __jule_type_deallocator114(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b806ba_IdentTypeDecl>().dealloc(); }
void __jule_type_deallocator115(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b8b6d7_VariadicExpr>().dealloc(); }
void __jule_type_deallocator116(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb02cc_SliceExprModel>().dealloc(); }
void __jule_type_deallocator117(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b8d970_FieldExprPair>().dealloc(); }
void __jule_type_deallocator118(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b9007b_KeyValPair>().dealloc(); }
void __jule_type_deallocator119(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b89d45_TupleExpr>().dealloc(); }
void __jule_type_deallocator120(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb3511_TupleExprModel>().dealloc(); }
void __jule_type_deallocator121(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b8ce7a_FnCallExpr>().dealloc(); }
void __jule_type_deallocator122(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb725c_RuneExprModel>().dealloc(); }
void __jule_type_deallocator123(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb3214_ArrayExprModel>().dealloc(); }
void __jule_type_deallocator124(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b8c364_SubIdentExpr>().dealloc(); }
void __jule_type_deallocator125(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b857e1_SubIdentTypeDecl>().dealloc(); }
void __jule_type_deallocator126(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b8b30d_UnaryExpr>().dealloc(); }
void __jule_type_deallocator127(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b800b0_TypeDecl>().dealloc(); }
void __jule_type_deallocator128(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b8be8a_NsSelectionExpr>().dealloc(); }
void __jule_type_deallocator129(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b85bba_NamespaceTypeDecl>().dealloc(); }
void __jule_type_deallocator130(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb1a70_SlicingExprModel>().dealloc(); }
void __jule_type_deallocator131(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bae551_CastingExprModel>().dealloc(); }
void __jule_type_deallocator132(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b907a7_SliceExpr>().dealloc(); }
void __jule_type_deallocator133(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7badbc1_StructLitExprModel>().dealloc(); }
void __jule_type_deallocator134(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb2d3a_StructStaticIdentExprModel>().dealloc(); }
void __jule_type_deallocator135(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb2103_TraitSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator136(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb2994_StructSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator137(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb14dc_MapExprModel>().dealloc(); }
void __jule_type_deallocator138(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb0c39_AnonFnExprModel>().dealloc(); }
void __jule_type_deallocator139(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b8951a_RangeExpr>().dealloc(); }
void __jule_type_deallocator140(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b8a1db_LitExpr>().dealloc(); }
void __jule_type_deallocator141(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b8a5b5_UnsafeExpr>().dealloc(); }
void __jule_type_deallocator142(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b91214_IndexingExpr>().dealloc(); }
void __jule_type_deallocator143(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b91874_SlicingExpr>().dealloc(); }
void __jule_type_deallocator144(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b8bab1_CastExpr>().dealloc(); }
void __jule_type_deallocator145(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b8e29a_StructLit>().dealloc(); }
void __jule_type_deallocator146(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b8e751_BraceLit>().dealloc(); }
void __jule_type_deallocator147(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b8c81a_BinaryExpr>().dealloc(); }
void __jule_type_deallocator148(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bad2ec_UnaryExprModel>().dealloc(); }
void __jule_type_deallocator149(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bace23_BinaryExprModel>().dealloc(); }
void __jule_type_deallocator150(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7badebd_AllocStructLitExprModel>().dealloc(); }
void __jule_type_deallocator151(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb418d_BuiltinNewCallExprModel>().dealloc(); }
void __jule_type_deallocator152(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb4ec4_BuiltinMakeCallExprModel>().dealloc(); }
void __jule_type_deallocator153(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb569a_BuiltinLenCallExprModel>().dealloc(); }
void __jule_type_deallocator154(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb5997_BuiltinCapCallExprModel>().dealloc(); }
void __jule_type_deallocator155(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb6cc8_SizeofExprModel>().dealloc(); }
void __jule_type_deallocator156(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bb6eb5_AlignofExprModel>().dealloc(); }
void __jule_type_deallocator157(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7e125d9_ExceptionalForwardingExprModel>().dealloc(); }
void __jule_type_deallocator158(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7e14ed2_StrRuneIter>().dealloc(); }
void __jule_type_deallocator159(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7e13bc3_MutSlicingExprModel>().dealloc(); }
void __jule_type_deallocator160(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7e1472e_PushToSliceExprModel>().dealloc(); }
void __jule_type_deallocator161(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7e14b08_AppendToSliceExprModel>().dealloc(); }
void __jule_type_deallocator162(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7e1296e_SwapExprModel>().dealloc(); }
void __jule_type_deallocator163(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7e12d48_EmptyCompareExprModel>().dealloc(); }
void __jule_type_deallocator164(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7e13640_StrCompExprModel>().dealloc(); }
void __jule_type_deallocator165(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7e13ec0_UnsafeBinaryExprModel>().dealloc(); }
void __jule_type_deallocator166(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7e152ce_UnsafeDerefExprModel>().dealloc(); }
void __jule_type_deallocator167(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7e131bc_RefExprModel>().dealloc(); }
void __jule_type_deallocator168(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bad82a_StructArgExprModel>().dealloc(); }
void __jule_type_deallocator169(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7e155cb_UnsafeCastingExprModel>().dealloc(); }
void __jule_type_deallocator170(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7e14355_UnsafeIndexingExprModel>().dealloc(); }
void __jule_type_deallocator171(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator172(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
void __jule_type_deallocator173(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
void __jule_type_deallocator174(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
void __jule_type_deallocator175(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
void __jule_type_deallocator176(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
inline void __jule_trait_method_1aae8d750_1aae3631e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7cd41ae_Data>* _1426_d, jule::I64 _1436_i) {
	_1a7bd8ea4_index(_self_.as<_1a7bd7ea3_comptimeStructFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1aae8d750_1aae4ec83(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7cd41ae_Data>* _1426_d, jule::I64 _1436_i) {
	_1a7bdc1c7_index(_self_.as<_1a7bdb1d7_comptimeStatics>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1aae8d750_1aae3c655(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7cd41ae_Data>* _1426_d, jule::I64 _1436_i) {
	_1a7bdeedd_index(_self_.as<_1a7bdde65_comptimeEnumFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1aae8d750_1aae43161(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7cd41ae_Data>* _1426_d, jule::I64 _1436_i) {
	_1a7be36a6_index(_self_.as<_1a7be27c6_comptimeParams>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1aae8d750_1aae4b4aa(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7cd41ae_Data>* _1426_d, jule::I64 _1436_i) {
	_1a7be5125_index(_self_.as<_1a7be4135_comptimeTypeInfos>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1aae8d750_1aae6bb29(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7cd41ae_Data>* _1426_d, jule::I64 _1436_i) {
	_1a7c00905_index(_self_.as<_1a7bee915_comptimeFiles>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1aae8d750_1aae64eb8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7cd41ae_Data>* _1426_d, jule::I64 _1436_i) {
	_1a7c040bd_index(_self_.as<_1a7c02eac_comptimeDecls>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1aae8dc6c_1aae3631e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c7b178_Var>* _1526_keyA, jule::Ptr<_1a7c7b178_Var>* _1543_keyB) {
	_1a7bd8b41_ready(_self_.as<_1a7bd7ea3_comptimeStructFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1aae8dc6c_1aae4ec83(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c7b178_Var>* _1526_keyA, jule::Ptr<_1a7c7b178_Var>* _1543_keyB) {
	_1a7bdbd64_ready(_self_.as<_1a7bdb1d7_comptimeStatics>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1aae8dc6c_1aae3c655(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c7b178_Var>* _1526_keyA, jule::Ptr<_1a7c7b178_Var>* _1543_keyB) {
	_1a7bdeb7a_ready(_self_.as<_1a7bdde65_comptimeEnumFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1aae8dc6c_1aae43161(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c7b178_Var>* _1526_keyA, jule::Ptr<_1a7c7b178_Var>* _1543_keyB) {
	_1a7be3343_ready(_self_.as<_1a7be27c6_comptimeParams>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1aae8dc6c_1aae4b4aa(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c7b178_Var>* _1526_keyA, jule::Ptr<_1a7c7b178_Var>* _1543_keyB) {
	_1a7be4cb2_ready(_self_.as<_1a7be4135_comptimeTypeInfos>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1aae8dc6c_1aae6bb29(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c7b178_Var>* _1526_keyA, jule::Ptr<_1a7c7b178_Var>* _1543_keyB) {
	_1a7c00592_ready(_self_.as<_1a7bee915_comptimeFiles>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1aae8dc6c_1aae64eb8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c7b178_Var>* _1526_keyA, jule::Ptr<_1a7c7b178_Var>* _1543_keyB) {
	_1a7c03c5a_ready(_self_.as<_1a7c02eac_comptimeDecls>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1aae8e443_1aae3631e(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1a7c7b178_Var>* _1633_keyA, jule::Ptr<_1a7c7b178_Var>* _1650_keyB) {
	_1a7bd93c2_step(_self_.as<_1a7bd7ea3_comptimeStructFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1aae8e443_1aae4ec83(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1a7c7b178_Var>* _1633_keyA, jule::Ptr<_1a7c7b178_Var>* _1650_keyB) {
	_1a7bdc5e5_step(_self_.as<_1a7bdb1d7_comptimeStatics>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1aae8e443_1aae3c655(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1a7c7b178_Var>* _1633_keyA, jule::Ptr<_1a7c7b178_Var>* _1650_keyB) {
	_1a7be040b_step(_self_.as<_1a7bdde65_comptimeEnumFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1aae8e443_1aae43161(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1a7c7b178_Var>* _1633_keyA, jule::Ptr<_1a7c7b178_Var>* _1650_keyB) {
	_1a7be3ac4_step(_self_.as<_1a7be27c6_comptimeParams>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1aae8e443_1aae4b4aa(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1a7c7b178_Var>* _1633_keyA, jule::Ptr<_1a7c7b178_Var>* _1650_keyB) {
	_1a7be5543_step(_self_.as<_1a7be4135_comptimeTypeInfos>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1aae8e443_1aae6bb29(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1a7c7b178_Var>* _1633_keyA, jule::Ptr<_1a7c7b178_Var>* _1650_keyB) {
	_1a7c00d23_step(_self_.as<_1a7bee915_comptimeFiles>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1aae8e443_1aae64eb8(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1a7c7b178_Var>* _1633_keyA, jule::Ptr<_1a7c7b178_Var>* _1650_keyB) {
	_1a7c044db_step(_self_.as<_1a7c02eac_comptimeDecls>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline jule::I64 __jule_trait_method_1aae8eb2a_1aae3631e(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7bd9658_len(_self_.as<_1a7bd7ea3_comptimeStructFields>().alloc);
}
inline jule::I64 __jule_trait_method_1aae8eb2a_1aae4ec83(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7bdc87b_len(_self_.as<_1a7bdb1d7_comptimeStatics>().alloc);
}
inline jule::I64 __jule_trait_method_1aae8eb2a_1aae3c655(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7be0692_len(_self_.as<_1a7bdde65_comptimeEnumFields>().alloc);
}
inline jule::I64 __jule_trait_method_1aae8eb2a_1aae43161(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7be3d5a_len(_self_.as<_1a7be27c6_comptimeParams>().alloc);
}
inline jule::I64 __jule_trait_method_1aae8eb2a_1aae4b4aa(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7be57c9_len(_self_.as<_1a7be4135_comptimeTypeInfos>().alloc);
}
inline jule::I64 __jule_trait_method_1aae8eb2a_1aae6bb29(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7c010a9_len(_self_.as<_1a7bee915_comptimeFiles>().alloc);
}
inline jule::I64 __jule_trait_method_1aae8eb2a_1aae64eb8(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7c04772_len(_self_.as<_1a7c02eac_comptimeDecls>().alloc);
}
inline void __jule_trait_method_1aae8ee6b_1ac7a3d44(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path) {
	_1a8825a8a_SetModPath(_self_.as<_1a8824e85_JuleImporter>().alloc, _1726_path);
}
inline jule::Str __jule_trait_method_1aae903bc_1ac7a3d44(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8825d21_GetModPath(_self_.as<_1a8824e85_JuleImporter>().alloc);
}
inline jule::Str __jule_trait_method_1aae907c9_1ac7a3d44(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id) {
	return _1a8826162_ModById(_self_.as<_1a8824e85_JuleImporter>().alloc, _2519_id);
}
inline jule::Ptr<_1a7c36793_ImportInfo> __jule_trait_method_1aae90c91_1ac7a3d44(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path) {
	return _1a88264a3_GetImport(_self_.as<_1a8824e85_JuleImporter>().alloc, _3125_path);
}
inline __jule_tuple_sx_1a7b7d19b_AST__jule_tuple_s_1d9144ab5_Log __jule_trait_method_1aae91379_1ac7a3d44(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_update_mod) {
	return _1a882689e_ImportPackage(_self_.as<_1a8824e85_JuleImporter>().alloc, _3729_path, _3740_update_mod);
}
inline void __jule_trait_method_1aae91bc6_1ac7a3d44(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c36793_ImportInfo> _4128__0) {
	_1a8826b57_Imported(_self_.as<_1a8824e85_JuleImporter>().alloc, _4128__0);
}
inline jule::Str __jule_trait_method_1aae92226_1aad12140(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7ba8eb8_Str(_self_.as<_1a7ba8b11_StructIns>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aad11518(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7bbdc36_Str(_self_.as<_1a7bbd8b2_FnIns>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aad29a81(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7bce75d_Str(_self_.as<_1a7bce362_Trait>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aad034c7(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7bd1e25_Str(_self_.as<_1a7bd1a6d_Enum>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aad0a600(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7bd35ec_Str(_self_.as<_1a7bd3278_TypeEnum>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aae49cc2(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7bd60a0_Str(_self_.as<_1a7bd5ba4_comptimeRange>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aae395db(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7bd6ab7_Str(_self_.as<_1a7bd6710_comptimeStructField>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aae3631e(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7bd836b_Str(_self_.as<_1a7bd7ea3_comptimeStructFields>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aae53050(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7bd9cda_Str(_self_.as<_1a7bd9933_comptimeStatic>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aae4ec83(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7bdb58e_Str(_self_.as<_1a7bdb1d7_comptimeStatics>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aae40922(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7bdd00d_Str(_self_.as<_1a7bdcb56_comptimeEnumField>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aae3c655(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7bde42c_Str(_self_.as<_1a7bdde65_comptimeEnumFields>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aae4642d(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7be0d24_Str(_self_.as<_1a7be096c_comptimeParam>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aae43161(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7be2a6d_Str(_self_.as<_1a7be27c6_comptimeParams>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aae4b4aa(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7be44dc_Str(_self_.as<_1a7be4135_comptimeTypeInfos>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aad3c214(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7be5e5b_Str(_self_.as<_1a7be5aa4_comptimeTypeInfo>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aae560b9(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7bec061_Str(_self_.as<_1a7bebba9_comptimeValue>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aae6bb29(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7beecbc_Str(_self_.as<_1a7bee915_comptimeFiles>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aae68285(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7c0173b_Str(_self_.as<_1a7c01384_comptimeFile>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aae64eb8(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7c03595_Str(_self_.as<_1a7c02eac_comptimeDecls>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aae5bc18(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7c05652_Str(_self_.as<_1a7c0529a_comptimeDecl>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aace3bc1(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7d1c192_Str(_self_.as<_1a7d1bc96_TypeKind>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aace8676(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7d25233_Str(_self_.as<_1a7d24dae_Prim>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aaceee85(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7d28c92_Str(_self_.as<_1a7d288da_Sptr>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aad0eb98(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7d29875_Str(_self_.as<_1a7d293ad_Slc>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aad7c9e6(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7d2a359_Str(_self_.as<_1a7d29ea2_Tuple>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aad7ae78(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7d2ae09_Str(_self_.as<_1a7d2aa52_Map>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aad0d24b(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7d2ba86_Str(_self_.as<_1a7d2b6ce_Arr>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1aad0174a(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7d2c559_Str(_self_.as<_1a7d2c1a2_Ptr>().alloc);
}
inline jule::Str __jule_trait_method_1aae92226_1accbec77(jule::Ptr<jule::Uintptr> _self_) {
	return _1a96a32eb_Str(_self_.as<_1a96a2e00_customType>().alloc);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aad12140(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7ba9309_Equal(_self_.as<_1a7ba8b11_StructIns>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aad11518(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7bbe077_Equal(_self_.as<_1a7bbd8b2_FnIns>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aad29a81(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7bcea9e_Equal(_self_.as<_1a7bce362_Trait>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aad034c7(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7bd2266_Equal(_self_.as<_1a7bd1a6d_Enum>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aad0a600(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7bd393d_Equal(_self_.as<_1a7bd3278_TypeEnum>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aae49cc2(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7bd63e1_Equal(_self_.as<_1a7bd5ba4_comptimeRange>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aae395db(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7bd6e08_Equal(_self_.as<_1a7bd6710_comptimeStructField>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aae3631e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7bd86ac_Equal(_self_.as<_1a7bd7ea3_comptimeStructFields>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aae53050(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7bda12b_Equal(_self_.as<_1a7bd9933_comptimeStatic>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aae4ec83(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7bdb8d0_Equal(_self_.as<_1a7bdb1d7_comptimeStatics>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aae40922(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7bdd34e_Equal(_self_.as<_1a7bdcb56_comptimeEnumField>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aae3c655(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7bde76d_Equal(_self_.as<_1a7bdde65_comptimeEnumFields>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aae4642d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7be1165_Equal(_self_.as<_1a7be096c_comptimeParam>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aae43161(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7be2dae_Equal(_self_.as<_1a7be27c6_comptimeParams>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aae4b4aa(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7be482d_Equal(_self_.as<_1a7be4135_comptimeTypeInfos>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aad3c214(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7be629c_Equal(_self_.as<_1a7be5aa4_comptimeTypeInfo>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aae560b9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7bec3a2_Equal(_self_.as<_1a7bebba9_comptimeValue>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aae6bb29(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7c0010d_Equal(_self_.as<_1a7bee915_comptimeFiles>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aae68285(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7c01a7c_Equal(_self_.as<_1a7c01384_comptimeFile>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aae64eb8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7c038d6_Equal(_self_.as<_1a7c02eac_comptimeDecls>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aae5bc18(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7c05993_Equal(_self_.as<_1a7c0529a_comptimeDecl>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aace3bc1(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7d1c4d3_Equal(_self_.as<_1a7d1bc96_TypeKind>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aace8676(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7d25574_Equal(_self_.as<_1a7d24dae_Prim>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aaceee85(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7d290d3_Equal(_self_.as<_1a7d288da_Sptr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aad0eb98(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7d29bb6_Equal(_self_.as<_1a7d293ad_Slc>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aad7c9e6(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7d2a69a_Equal(_self_.as<_1a7d29ea2_Tuple>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aad7ae78(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7d2b24a_Equal(_self_.as<_1a7d2aa52_Map>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aad0d24b(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7d2bdc7_Equal(_self_.as<_1a7d2b6ce_Arr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1aad0174a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a7d2c89a_Equal(_self_.as<_1a7d2c1a2_Ptr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aae9259a_1accbec77(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _5618_other) {
	return _1a96a363c_Equal(_self_.as<_1a96a2e00_customType>(), _5618_other);
}
inline jule::Ptr<_1a7c36793_ImportInfo> __jule_trait_method_1aae92b1c_1aade0a7b(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7c36793_ImportInfo>> _929_selector) {
	return _1a7c1b1e5_SelectPackage(_self_.as<_1a7c1ac1c_scopeChecker>().alloc, _929_selector);
}
inline jule::Ptr<_1a7c36793_ImportInfo> __jule_trait_method_1aae92b1c_1aad15ab1(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7c36793_ImportInfo>> _929_selector) {
	return _1a7c36cb0_SelectPackage(_self_.as<_1a7c36793_ImportInfo>().alloc, _929_selector);
}
inline jule::Ptr<_1a7c36793_ImportInfo> __jule_trait_method_1aae92b1c_1aad16c5a(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7c36793_ImportInfo>> _929_selector) {
	return _1a7c39b92_SelectPackage(_self_.as<_1a7c396b9_Package>().alloc, _929_selector);
}
inline jule::Ptr<_1a7c36793_ImportInfo> __jule_trait_method_1aae92b1c_1aad1395a(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7c36793_ImportInfo>> _929_selector) {
	return _1a7c571dc_SelectPackage(_self_.as<_1a7c56c14_sema>().alloc, _929_selector);
}
inline jule::Ptr<_1a7c36793_ImportInfo> __jule_trait_method_1aae92b1c_1aad14450(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7c36793_ImportInfo>> _929_selector) {
	return _1a7cce011_SelectPackage(_self_.as<_1a7ccd9e4_SymbolTable>().alloc, _929_selector);
}
inline jule::Ptr<_1a7c7b178_Var> __jule_trait_method_1aae93997_1aade0a7b(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a7c1b5e1_FindVar(_self_.as<_1a7c1ac1c_scopeChecker>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a7c7b178_Var> __jule_trait_method_1aae93997_1aad15ab1(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a7c371ab_FindVar(_self_.as<_1a7c36793_ImportInfo>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a7c7b178_Var> __jule_trait_method_1aae93997_1aad16c5a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a7c3a08d_FindVar(_self_.as<_1a7c396b9_Package>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a7c7b178_Var> __jule_trait_method_1aae93997_1aad1395a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a7c575d8_FindVar(_self_.as<_1a7c56c14_sema>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a7c7b178_Var> __jule_trait_method_1aae93997_1aad14450(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a7cce40c_FindVar(_self_.as<_1a7ccd9e4_SymbolTable>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a7d1aea4_TypeAlias> __jule_trait_method_1aae9406e_1aade0a7b(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a7c1b9dc_FindTypeAlias(_self_.as<_1a7c1ac1c_scopeChecker>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a7d1aea4_TypeAlias> __jule_trait_method_1aae9406e_1aad15ab1(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a7c375a7_FindTypeAlias(_self_.as<_1a7c36793_ImportInfo>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a7d1aea4_TypeAlias> __jule_trait_method_1aae9406e_1aad16c5a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a7c3a489_FindTypeAlias(_self_.as<_1a7c396b9_Package>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a7d1aea4_TypeAlias> __jule_trait_method_1aae9406e_1aad1395a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a7c579d4_FindTypeAlias(_self_.as<_1a7c56c14_sema>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a7d1aea4_TypeAlias> __jule_trait_method_1aae9406e_1aad14450(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a7cce808_FindTypeAlias(_self_.as<_1a7ccd9e4_SymbolTable>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a7ba5ca6_Struct> __jule_trait_method_1aae94679_1aade0a7b(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a7c1bdd8_FindStruct(_self_.as<_1a7c1ac1c_scopeChecker>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a7ba5ca6_Struct> __jule_trait_method_1aae94679_1aad15ab1(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a7c379a3_FindStruct(_self_.as<_1a7c36793_ImportInfo>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a7ba5ca6_Struct> __jule_trait_method_1aae94679_1aad16c5a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a7c3a885_FindStruct(_self_.as<_1a7c396b9_Package>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a7ba5ca6_Struct> __jule_trait_method_1aae94679_1aad1395a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a7c57dd0_FindStruct(_self_.as<_1a7c56c14_sema>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a7ba5ca6_Struct> __jule_trait_method_1aae94679_1aad14450(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a7ccec04_FindStruct(_self_.as<_1a7ccd9e4_SymbolTable>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a7bba8d1_Fn> __jule_trait_method_1aae94c84_1aade0a7b(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a7c1c2d4_FindFn(_self_.as<_1a7c1ac1c_scopeChecker>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a7bba8d1_Fn> __jule_trait_method_1aae94c84_1aad15ab1(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a7c37d9e_FindFn(_self_.as<_1a7c36793_ImportInfo>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a7bba8d1_Fn> __jule_trait_method_1aae94c84_1aad16c5a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a7c3ac81_FindFn(_self_.as<_1a7c396b9_Package>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a7bba8d1_Fn> __jule_trait_method_1aae94c84_1aad1395a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a7c582cb_FindFn(_self_.as<_1a7c56c14_sema>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a7bba8d1_Fn> __jule_trait_method_1aae94c84_1aad14450(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a7cd0100_FindFn(_self_.as<_1a7ccd9e4_SymbolTable>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a7bce362_Trait> __jule_trait_method_1aae9538e_1aade0a7b(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a7c1c625_FindTrait(_self_.as<_1a7c1ac1c_scopeChecker>().alloc, _2925_ident);
}
inline jule::Ptr<_1a7bce362_Trait> __jule_trait_method_1aae9538e_1aad15ab1(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a7c381e0_FindTrait(_self_.as<_1a7c36793_ImportInfo>().alloc, _2925_ident);
}
inline jule::Ptr<_1a7bce362_Trait> __jule_trait_method_1aae9538e_1aad16c5a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a7c3b0c2_FindTrait(_self_.as<_1a7c396b9_Package>().alloc, _2925_ident);
}
inline jule::Ptr<_1a7bce362_Trait> __jule_trait_method_1aae9538e_1aad1395a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a7c5861c_FindTrait(_self_.as<_1a7c56c14_sema>().alloc, _2925_ident);
}
inline jule::Ptr<_1a7bce362_Trait> __jule_trait_method_1aae9538e_1aad14450(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a7cd0441_FindTrait(_self_.as<_1a7ccd9e4_SymbolTable>().alloc, _2925_ident);
}
inline jule::Ptr<_1a7bd1a6d_Enum> __jule_trait_method_1aae958de_1aade0a7b(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a7c1c966_FindEnum(_self_.as<_1a7c1ac1c_scopeChecker>().alloc, _3324_ident);
}
inline jule::Ptr<_1a7bd1a6d_Enum> __jule_trait_method_1aae958de_1aad15ab1(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a7c38531_FindEnum(_self_.as<_1a7c36793_ImportInfo>().alloc, _3324_ident);
}
inline jule::Ptr<_1a7bd1a6d_Enum> __jule_trait_method_1aae958de_1aad16c5a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a7c3b413_FindEnum(_self_.as<_1a7c396b9_Package>().alloc, _3324_ident);
}
inline jule::Ptr<_1a7bd1a6d_Enum> __jule_trait_method_1aae958de_1aad1395a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a7c5895d_FindEnum(_self_.as<_1a7c56c14_sema>().alloc, _3324_ident);
}
inline jule::Ptr<_1a7bd1a6d_Enum> __jule_trait_method_1aae958de_1aad14450(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a7cd0782_FindEnum(_self_.as<_1a7ccd9e4_SymbolTable>().alloc, _3324_ident);
}
inline jule::Ptr<_1a7bd3278_TypeEnum> __jule_trait_method_1aae95e3e_1aade0a7b(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a7c1cca7_FindTypeEnum(_self_.as<_1a7c1ac1c_scopeChecker>().alloc, _3728_ident);
}
inline jule::Ptr<_1a7bd3278_TypeEnum> __jule_trait_method_1aae95e3e_1aad15ab1(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a7c38872_FindTypeEnum(_self_.as<_1a7c36793_ImportInfo>().alloc, _3728_ident);
}
inline jule::Ptr<_1a7bd3278_TypeEnum> __jule_trait_method_1aae95e3e_1aad16c5a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a7c3b754_FindTypeEnum(_self_.as<_1a7c396b9_Package>().alloc, _3728_ident);
}
inline jule::Ptr<_1a7bd3278_TypeEnum> __jule_trait_method_1aae95e3e_1aad1395a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a7c58c9e_FindTypeEnum(_self_.as<_1a7c56c14_sema>().alloc, _3728_ident);
}
inline jule::Ptr<_1a7bd3278_TypeEnum> __jule_trait_method_1aae95e3e_1aad14450(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a7cd0ac3_FindTypeEnum(_self_.as<_1a7ccd9e4_SymbolTable>().alloc, _3728_ident);
}
inline jule::Str __jule_trait_method_1ad392888_1ad3818cc(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad381734_Name(_self_.as<_1ad3818cc_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad392888_1ad3851e9(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad384d75_Name(_self_.as<_1ad3851e9_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad392888_1ad388906(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad388582_Name(_self_.as<_1ad388906_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad392888_1ad38c157(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad38bcd3_Name(_self_.as<_1ad38c157_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad392888_1ad390864(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad3904e0_Name(_self_.as<_1ad390864_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1ad392976_1ad3818cc(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad381e4e_Short(_self_.as<_1ad3818cc_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1ad392976_1ad3851e9(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad38576b_Short(_self_.as<_1ad3851e9_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1ad392976_1ad388906(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad388e78_Short(_self_.as<_1ad388906_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1ad392976_1ad38c157(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad38c6c9_Short(_self_.as<_1ad38c157_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1ad392976_1ad390864(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad390dd6_Short(_self_.as<_1ad390864_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad39434b_1ad3818cc(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad381bb8_What(_self_.as<_1ad3818cc_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad39434b_1ad3851e9(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad3854d5_What(_self_.as<_1ad3851e9_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad39434b_1ad388906(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad388be2_What(_self_.as<_1ad388906_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad39434b_1ad38c157(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad38c443_What(_self_.as<_1ad38c157_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad39434b_1ad390864(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad390b50_What(_self_.as<_1ad390864_Flag>().alloc);
}
inline void __jule_trait_method_1ad394758_1ad3818cc(jule::Ptr<jule::Uintptr> _self_) {
	_1ad381d0b_Reset(_self_.as<_1ad3818cc_Flag>().alloc);
}
inline void __jule_trait_method_1ad394758_1ad3851e9(jule::Ptr<jule::Uintptr> _self_) {
	_1ad385628_Reset(_self_.as<_1ad3851e9_Flag>().alloc);
}
inline void __jule_trait_method_1ad394758_1ad388906(jule::Ptr<jule::Uintptr> _self_) {
	_1ad388d35_Reset(_self_.as<_1ad388906_Flag>().alloc);
}
inline void __jule_trait_method_1ad394758_1ad38c157(jule::Ptr<jule::Uintptr> _self_) {
	_1ad38c586_Reset(_self_.as<_1ad38c157_Flag>().alloc);
}
inline void __jule_trait_method_1ad394758_1ad390864(jule::Ptr<jule::Uintptr> _self_) {
	_1ad390c93_Reset(_self_.as<_1ad390864_Flag>().alloc);
}


static _1a7bd5984_comptimeRangeKindMptrData _1a7bd5984_comptimeRangeKind_mptr_data0 {
	.dealloc=__jule_type_deallocator0,
	._1a7bd4d18_index=__jule_trait_method_1aae8d750_1aae3631e,
	._1a7bd517b_ready=__jule_trait_method_1aae8dc6c_1aae3631e,
	._1a7bd5599_step=__jule_trait_method_1aae8e443_1aae3631e,
	._1a7bd5830_len=__jule_trait_method_1aae8eb2a_1aae3631e,
};
static _1a7bd5984_comptimeRangeKindMptrData _1a7bd5984_comptimeRangeKind_mptr_data1 {
	.dealloc=__jule_type_deallocator1,
	._1a7bd4d18_index=__jule_trait_method_1aae8d750_1aae4ec83,
	._1a7bd517b_ready=__jule_trait_method_1aae8dc6c_1aae4ec83,
	._1a7bd5599_step=__jule_trait_method_1aae8e443_1aae4ec83,
	._1a7bd5830_len=__jule_trait_method_1aae8eb2a_1aae4ec83,
};
static _1a7bd5984_comptimeRangeKindMptrData _1a7bd5984_comptimeRangeKind_mptr_data2 {
	.dealloc=__jule_type_deallocator2,
	._1a7bd4d18_index=__jule_trait_method_1aae8d750_1aae3c655,
	._1a7bd517b_ready=__jule_trait_method_1aae8dc6c_1aae3c655,
	._1a7bd5599_step=__jule_trait_method_1aae8e443_1aae3c655,
	._1a7bd5830_len=__jule_trait_method_1aae8eb2a_1aae3c655,
};
static _1a7bd5984_comptimeRangeKindMptrData _1a7bd5984_comptimeRangeKind_mptr_data3 {
	.dealloc=__jule_type_deallocator3,
	._1a7bd4d18_index=__jule_trait_method_1aae8d750_1aae43161,
	._1a7bd517b_ready=__jule_trait_method_1aae8dc6c_1aae43161,
	._1a7bd5599_step=__jule_trait_method_1aae8e443_1aae43161,
	._1a7bd5830_len=__jule_trait_method_1aae8eb2a_1aae43161,
};
static _1a7bd5984_comptimeRangeKindMptrData _1a7bd5984_comptimeRangeKind_mptr_data4 {
	.dealloc=__jule_type_deallocator4,
	._1a7bd4d18_index=__jule_trait_method_1aae8d750_1aae4b4aa,
	._1a7bd517b_ready=__jule_trait_method_1aae8dc6c_1aae4b4aa,
	._1a7bd5599_step=__jule_trait_method_1aae8e443_1aae4b4aa,
	._1a7bd5830_len=__jule_trait_method_1aae8eb2a_1aae4b4aa,
};
static _1a7bd5984_comptimeRangeKindMptrData _1a7bd5984_comptimeRangeKind_mptr_data5 {
	.dealloc=__jule_type_deallocator5,
	._1a7bd4d18_index=__jule_trait_method_1aae8d750_1aae6bb29,
	._1a7bd517b_ready=__jule_trait_method_1aae8dc6c_1aae6bb29,
	._1a7bd5599_step=__jule_trait_method_1aae8e443_1aae6bb29,
	._1a7bd5830_len=__jule_trait_method_1aae8eb2a_1aae6bb29,
};
static _1a7bd5984_comptimeRangeKindMptrData _1a7bd5984_comptimeRangeKind_mptr_data6 {
	.dealloc=__jule_type_deallocator6,
	._1a7bd4d18_index=__jule_trait_method_1aae8d750_1aae64eb8,
	._1a7bd517b_ready=__jule_trait_method_1aae8dc6c_1aae64eb8,
	._1a7bd5599_step=__jule_trait_method_1aae8e443_1aae64eb8,
	._1a7bd5830_len=__jule_trait_method_1aae8eb2a_1aae64eb8,
};
static _1a7c33509_ImporterMptrData _1a7c33509_Importer_mptr_data0 {
	.dealloc=__jule_type_deallocator7,
	._1a7c322d8_SetModPath=__jule_trait_method_1aae8ee6b_1ac7a3d44,
	._1a7c3256e_GetModPath=__jule_trait_method_1aae903bc_1ac7a3d44,
	._1a7c328b0_ModById=__jule_trait_method_1aae907c9_1ac7a3d44,
	._1a7c32c01_GetImport=__jule_trait_method_1aae90c91_1ac7a3d44,
	._1a7c330ec_ImportPackage=__jule_trait_method_1aae91379_1ac7a3d44,
	._1a7c333a5_Imported=__jule_trait_method_1aae91bc6_1ac7a3d44,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data0 {
	.dealloc=__jule_type_deallocator8,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aad12140,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aad12140,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data1 {
	.dealloc=__jule_type_deallocator9,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aad11518,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aad11518,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data2 {
	.dealloc=__jule_type_deallocator10,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aad29a81,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aad29a81,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data3 {
	.dealloc=__jule_type_deallocator11,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aad034c7,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aad034c7,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data4 {
	.dealloc=__jule_type_deallocator12,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aad0a600,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aad0a600,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data5 {
	.dealloc=__jule_type_deallocator13,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aae49cc2,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aae49cc2,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data6 {
	.dealloc=__jule_type_deallocator14,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aae395db,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aae395db,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data7 {
	.dealloc=__jule_type_deallocator0,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aae3631e,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aae3631e,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data8 {
	.dealloc=__jule_type_deallocator15,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aae53050,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aae53050,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data9 {
	.dealloc=__jule_type_deallocator1,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aae4ec83,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aae4ec83,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data10 {
	.dealloc=__jule_type_deallocator16,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aae40922,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aae40922,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data11 {
	.dealloc=__jule_type_deallocator2,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aae3c655,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aae3c655,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data12 {
	.dealloc=__jule_type_deallocator17,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aae4642d,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aae4642d,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data13 {
	.dealloc=__jule_type_deallocator3,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aae43161,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aae43161,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data14 {
	.dealloc=__jule_type_deallocator4,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aae4b4aa,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aae4b4aa,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data15 {
	.dealloc=__jule_type_deallocator18,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aad3c214,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aad3c214,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data16 {
	.dealloc=__jule_type_deallocator19,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aae560b9,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aae560b9,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data17 {
	.dealloc=__jule_type_deallocator5,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aae6bb29,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aae6bb29,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data18 {
	.dealloc=__jule_type_deallocator20,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aae68285,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aae68285,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data19 {
	.dealloc=__jule_type_deallocator6,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aae64eb8,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aae64eb8,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data20 {
	.dealloc=__jule_type_deallocator21,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aae5bc18,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aae5bc18,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data21 {
	.dealloc=__jule_type_deallocator22,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aace3bc1,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aace3bc1,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data22 {
	.dealloc=__jule_type_deallocator23,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aace8676,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aace8676,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data23 {
	.dealloc=__jule_type_deallocator24,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aaceee85,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aaceee85,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data24 {
	.dealloc=__jule_type_deallocator25,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aad0eb98,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aad0eb98,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data25 {
	.dealloc=__jule_type_deallocator26,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aad7c9e6,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aad7c9e6,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data26 {
	.dealloc=__jule_type_deallocator27,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aad7ae78,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aad7ae78,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data27 {
	.dealloc=__jule_type_deallocator28,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aad0d24b,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aad0d24b,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data28 {
	.dealloc=__jule_type_deallocator29,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1aad0174a,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1aad0174a,
};
static _1a7d1b7e0_KindMptrData _1a7d1b7e0_Kind_mptr_data29 {
	.dealloc=__jule_type_deallocator30,
	._1a7d1b34a_Str=__jule_trait_method_1aae92226_1accbec77,
	._1a7d1b68b_Equal=__jule_trait_method_1aae9259a_1accbec77,
};
static _1a7d3c448_LookupMptrData _1a7d3c448_Lookup_mptr_data0 {
	.dealloc=__jule_type_deallocator31,
	._1a7d3a732_SelectPackage=__jule_trait_method_1aae92b1c_1aade0a7b,
	._1a7d3ab2d_FindVar=__jule_trait_method_1aae93997_1aade0a7b,
	._1a7d3b029_FindTypeAlias=__jule_trait_method_1aae9406e_1aade0a7b,
	._1a7d3b425_FindStruct=__jule_trait_method_1aae94679_1aade0a7b,
	._1a7d3b821_FindFn=__jule_trait_method_1aae94c84_1aade0a7b,
	._1a7d3bb62_FindTrait=__jule_trait_method_1aae9538e_1aade0a7b,
	._1a7d3bea3_FindEnum=__jule_trait_method_1aae958de_1aade0a7b,
	._1a7d3c2e4_FindTypeEnum=__jule_trait_method_1aae95e3e_1aade0a7b,
};
static _1a7d3c448_LookupMptrData _1a7d3c448_Lookup_mptr_data1 {
	.dealloc=__jule_type_deallocator32,
	._1a7d3a732_SelectPackage=__jule_trait_method_1aae92b1c_1aad15ab1,
	._1a7d3ab2d_FindVar=__jule_trait_method_1aae93997_1aad15ab1,
	._1a7d3b029_FindTypeAlias=__jule_trait_method_1aae9406e_1aad15ab1,
	._1a7d3b425_FindStruct=__jule_trait_method_1aae94679_1aad15ab1,
	._1a7d3b821_FindFn=__jule_trait_method_1aae94c84_1aad15ab1,
	._1a7d3bb62_FindTrait=__jule_trait_method_1aae9538e_1aad15ab1,
	._1a7d3bea3_FindEnum=__jule_trait_method_1aae958de_1aad15ab1,
	._1a7d3c2e4_FindTypeEnum=__jule_trait_method_1aae95e3e_1aad15ab1,
};
static _1a7d3c448_LookupMptrData _1a7d3c448_Lookup_mptr_data2 {
	.dealloc=__jule_type_deallocator33,
	._1a7d3a732_SelectPackage=__jule_trait_method_1aae92b1c_1aad16c5a,
	._1a7d3ab2d_FindVar=__jule_trait_method_1aae93997_1aad16c5a,
	._1a7d3b029_FindTypeAlias=__jule_trait_method_1aae9406e_1aad16c5a,
	._1a7d3b425_FindStruct=__jule_trait_method_1aae94679_1aad16c5a,
	._1a7d3b821_FindFn=__jule_trait_method_1aae94c84_1aad16c5a,
	._1a7d3bb62_FindTrait=__jule_trait_method_1aae9538e_1aad16c5a,
	._1a7d3bea3_FindEnum=__jule_trait_method_1aae958de_1aad16c5a,
	._1a7d3c2e4_FindTypeEnum=__jule_trait_method_1aae95e3e_1aad16c5a,
};
static _1a7d3c448_LookupMptrData _1a7d3c448_Lookup_mptr_data3 {
	.dealloc=__jule_type_deallocator34,
	._1a7d3a732_SelectPackage=__jule_trait_method_1aae92b1c_1aad1395a,
	._1a7d3ab2d_FindVar=__jule_trait_method_1aae93997_1aad1395a,
	._1a7d3b029_FindTypeAlias=__jule_trait_method_1aae9406e_1aad1395a,
	._1a7d3b425_FindStruct=__jule_trait_method_1aae94679_1aad1395a,
	._1a7d3b821_FindFn=__jule_trait_method_1aae94c84_1aad1395a,
	._1a7d3bb62_FindTrait=__jule_trait_method_1aae9538e_1aad1395a,
	._1a7d3bea3_FindEnum=__jule_trait_method_1aae958de_1aad1395a,
	._1a7d3c2e4_FindTypeEnum=__jule_trait_method_1aae95e3e_1aad1395a,
};
static _1a7d3c448_LookupMptrData _1a7d3c448_Lookup_mptr_data4 {
	.dealloc=__jule_type_deallocator35,
	._1a7d3a732_SelectPackage=__jule_trait_method_1aae92b1c_1aad14450,
	._1a7d3ab2d_FindVar=__jule_trait_method_1aae93997_1aad14450,
	._1a7d3b029_FindTypeAlias=__jule_trait_method_1aae9406e_1aad14450,
	._1a7d3b425_FindStruct=__jule_trait_method_1aae94679_1aad14450,
	._1a7d3b821_FindFn=__jule_trait_method_1aae94c84_1aad14450,
	._1a7d3bb62_FindTrait=__jule_trait_method_1aae9538e_1aad14450,
	._1a7d3bea3_FindEnum=__jule_trait_method_1aae958de_1aad14450,
	._1a7d3c2e4_FindTypeEnum=__jule_trait_method_1aae95e3e_1aad14450,
};
static _1a9725add_CommonFlagMptrData _1a9725add_CommonFlag_mptr_data0 {
	.dealloc=__jule_type_deallocator36,
	._1a96e499c_Name=__jule_trait_method_1ad392888_1ad3818cc,
	._1a96e4ae0_Short=__jule_trait_method_1ad392976_1ad3818cc,
	._1a96e4c33_What=__jule_trait_method_1ad39434b_1ad3818cc,
	._1a9725989_Reset=__jule_trait_method_1ad394758_1ad3818cc,
};
static _1a9725add_CommonFlagMptrData _1a9725add_CommonFlag_mptr_data1 {
	.dealloc=__jule_type_deallocator37,
	._1a96e499c_Name=__jule_trait_method_1ad392888_1ad3851e9,
	._1a96e4ae0_Short=__jule_trait_method_1ad392976_1ad3851e9,
	._1a96e4c33_What=__jule_trait_method_1ad39434b_1ad3851e9,
	._1a9725989_Reset=__jule_trait_method_1ad394758_1ad3851e9,
};
static _1a9725add_CommonFlagMptrData _1a9725add_CommonFlag_mptr_data2 {
	.dealloc=__jule_type_deallocator38,
	._1a96e499c_Name=__jule_trait_method_1ad392888_1ad388906,
	._1a96e4ae0_Short=__jule_trait_method_1ad392976_1ad388906,
	._1a96e4c33_What=__jule_trait_method_1ad39434b_1ad388906,
	._1a9725989_Reset=__jule_trait_method_1ad394758_1ad388906,
};
static _1a9725add_CommonFlagMptrData _1a9725add_CommonFlag_mptr_data3 {
	.dealloc=__jule_type_deallocator39,
	._1a96e499c_Name=__jule_trait_method_1ad392888_1ad38c157,
	._1a96e4ae0_Short=__jule_trait_method_1ad392976_1ad38c157,
	._1a96e4c33_What=__jule_trait_method_1ad39434b_1ad38c157,
	._1a9725989_Reset=__jule_trait_method_1ad394758_1ad38c157,
};
static _1a9725add_CommonFlagMptrData _1a9725add_CommonFlag_mptr_data4 {
	.dealloc=__jule_type_deallocator40,
	._1a96e499c_Name=__jule_trait_method_1ad392888_1ad390864,
	._1a96e4ae0_Short=__jule_trait_method_1ad392976_1ad390864,
	._1a96e4c33_What=__jule_trait_method_1ad39434b_1ad390864,
	._1a9725989_Reset=__jule_trait_method_1ad394758_1ad390864,
};


jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type0_to_str(void *alloc) noexcept { return _1aa6a3938_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_type_deallocator41, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type1_to_str(void *alloc) noexcept { return _1a996339c_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_type_deallocator42, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other)); }
jule::Str __jule_any_type2_to_str(void *alloc) noexcept { return _1a99708a4_toStr(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_type_deallocator43, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other)); }
jule::Str __jule_any_type3_to_str(void *alloc) noexcept { return _1a9960c90_toStr(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_type_deallocator44, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other)); }
jule::Str __jule_any_type4_to_str(void *alloc) noexcept { return _1a9954ee8_toStr(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_type_deallocator45, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other)); }
jule::Str __jule_any_type5_to_str(void *alloc) noexcept { return _1a9972d3a_toStr(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_type_deallocator46, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type6_to_str(void *alloc) noexcept { return _1a99608b6_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_type_deallocator47, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_type_deallocator9, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1a7bbd8b2_FnIns> &other) { return any.type == &__jule_any_type7 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_type_deallocator48, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1a7c7b178_Var> &other) { return any.type == &__jule_any_type8 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_type_deallocator8, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1a7ba8b11_StructIns> &other) { return any.type == &__jule_any_type9 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_type_deallocator10, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1a7bce362_Trait> &other) { return any.type == &__jule_any_type10 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_type_deallocator49, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1a7ba1a82_Impl> &other) { return any.type == &__jule_any_type11 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_type_deallocator50, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1a7b9b939_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_type_deallocator51, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1a7ba0bd5_StructDecl> &other) { return any.type == &__jule_any_type13 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_type_deallocator52, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1a7b96acc_FnDecl> &other) { return any.type == &__jule_any_type14 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_type_deallocator53, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1a7ba1422_TraitDecl> &other) { return any.type == &__jule_any_type15 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_type_deallocator54, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1a7b97c87_VarDecl> &other) { return any.type == &__jule_any_type16 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_type_deallocator55, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1a7b9e08a_EnumDecl> &other) { return any.type == &__jule_any_type17 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_type_deallocator56, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1a7ba0025_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_type_deallocator57, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1a7ba2d80_Field> &other) { return any.type == &__jule_any_type19 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_type_deallocator58, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1c006a461_Const> &other) { return any.type == &__jule_any_type20 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_type_deallocator59, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1a7bd1001_EnumItem> &other) { return any.type == &__jule_any_type21 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_type_deallocator60, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1a7bb8e0c_Param> &other) { return any.type == &__jule_any_type22 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_type_deallocator61, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1a7ba5ca6_Struct> &other) { return any.type == &__jule_any_type23 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_type_deallocator11, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1a7bd1a6d_Enum> &other) { return any.type == &__jule_any_type24 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_type_deallocator12, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1a7bd3278_TypeEnum> &other) { return any.type == &__jule_any_type25 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_type_deallocator62, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1a7bba8d1_Fn> &other) { return any.type == &__jule_any_type26 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_type_deallocator63, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1a7d1aea4_TypeAlias> &other) { return any.type == &__jule_any_type27 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_type_deallocator64, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1a7c164cb_Label> &other) { return any.type == &__jule_any_type28 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_type_deallocator65, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1a7c1397e_Scope> &other) { return any.type == &__jule_any_type29 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_type_deallocator66, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1a7bb6624_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type30 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_type_deallocator67, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1a7cd41ae_Data> &other) { return any.type == &__jule_any_type31 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_type_deallocator68, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1a7bb7636_BackendEmitExprModel> &other) { return any.type == &__jule_any_type32 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_type_deallocator69, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1a7bb539d_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type33 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_type_deallocator70, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1a7bb38da_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type34 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_type_deallocator71, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1a7bb3cb4_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type35 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_type_deallocator72, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1a7bb4567_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type36 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_type_deallocator73, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1a7bb4a1d_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type37 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_type_deallocator74, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1a7bb624a_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type38 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_type_deallocator75, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1a7bb5d71_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type39 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_type_deallocator76, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1a7bb7933_FreeExprModel> &other) { return any.type == &__jule_any_type40 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_type_deallocator77, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1a7baee03_FnCallExprModel> &other) { return any.type == &__jule_any_type41 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_type_deallocator78, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1a7c145b7_Conditional> &other) { return any.type == &__jule_any_type42 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_type_deallocator79, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1a7c148b4_InfIter> &other) { return any.type == &__jule_any_type43 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_type_deallocator80, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1a7b9920b_WhileKind> &other) { return any.type == &__jule_any_type44 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_type_deallocator81, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1a7c14d6a_WhileIter> &other) { return any.type == &__jule_any_type45 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_type_deallocator82, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1a7b99b13_RangeKind> &other) { return any.type == &__jule_any_type46 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_type_deallocator83, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1a7c157b6_RangeIter> &other) { return any.type == &__jule_any_type47 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_type_deallocator84, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1a7c15b4b_ContSt> &other) { return any.type == &__jule_any_type48 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_type_deallocator85, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1a7c16b3b_GotoSt> &other) { return any.type == &__jule_any_type49 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_type_deallocator86, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1a7c17015_Postfix> &other) { return any.type == &__jule_any_type50 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_type_deallocator87, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1a7c174bb_Assign> &other) { return any.type == &__jule_any_type51 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_type_deallocator88, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1a7b8aa6b_IdentExpr> &other) { return any.type == &__jule_any_type52 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_type_deallocator89, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1a7bb0783_IndexingExprModel> &other) { return any.type == &__jule_any_type53 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_type_deallocator90, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1a7c17972_MultiAssign> &other) { return any.type == &__jule_any_type54 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_type_deallocator91, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1a7c181ae_Match> &other) { return any.type == &__jule_any_type55 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_type_deallocator92, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1a7c193d0_FallSt> &other) { return any.type == &__jule_any_type56 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_type_deallocator93, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1a7c16025_BreakSt> &other) { return any.type == &__jule_any_type57 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_type_deallocator94, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1a7c19776_RetSt> &other) { return any.type == &__jule_any_type58 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_type_deallocator95, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1a7b94e3d_ScopeTree> &other) { return any.type == &__jule_any_type59 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_type_deallocator96, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1a7b89251_Expr> &other) { return any.type == &__jule_any_type60 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_type_deallocator97, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1a7b9b1ec_Conditional> &other) { return any.type == &__jule_any_type61 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_type_deallocator98, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1a7b988d1_Iter> &other) { return any.type == &__jule_any_type62 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_type_deallocator99, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1a7b9a3b6_ContSt> &other) { return any.type == &__jule_any_type63 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_type_deallocator100, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1a7b92501_LabelSt> &other) { return any.type == &__jule_any_type64 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_type_deallocator101, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1a7b928ca_GotoSt> &other) { return any.type == &__jule_any_type65 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_type_deallocator102, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1a7b938ba_AssignSt> &other) { return any.type == &__jule_any_type66 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_type_deallocator103, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1a7b9c709_MatchCase> &other) { return any.type == &__jule_any_type67 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_type_deallocator104, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1a7b92bc7_FallSt> &other) { return any.type == &__jule_any_type68 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_type_deallocator105, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1a7b99edc_BreakSt> &other) { return any.type == &__jule_any_type69 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_type_deallocator106, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1a7b98161_RetSt> &other) { return any.type == &__jule_any_type70 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_type_deallocator107, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1a7b89b25_UseExpr> &other) { return any.type == &__jule_any_type71 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_type_deallocator108, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1a7b871d8_ArrTypeDecl> &other) { return any.type == &__jule_any_type72 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_type_deallocator109, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1a7b8634c_SlcTypeDecl> &other) { return any.type == &__jule_any_type73 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_type_deallocator110, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1a7b86946_PtrTypeDecl> &other) { return any.type == &__jule_any_type74 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_type_deallocator111, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1a7b85eb7_SptrTypeDecl> &other) { return any.type == &__jule_any_type75 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_type_deallocator112, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1a7b87936_MapTypeDecl> &other) { return any.type == &__jule_any_type76 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_type_deallocator113, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1a7b86649_TupleTypeDecl> &other) { return any.type == &__jule_any_type77 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_type_deallocator114, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1a7b806ba_IdentTypeDecl> &other) { return any.type == &__jule_any_type78 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_type_deallocator115, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1a7b8b6d7_VariadicExpr> &other) { return any.type == &__jule_any_type79 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_type_deallocator116, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1a7bb02cc_SliceExprModel> &other) { return any.type == &__jule_any_type80 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_type_deallocator117, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1a7b8d970_FieldExprPair> &other) { return any.type == &__jule_any_type81 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_type_deallocator118, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1a7b9007b_KeyValPair> &other) { return any.type == &__jule_any_type82 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_type_deallocator119, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1a7b89d45_TupleExpr> &other) { return any.type == &__jule_any_type83 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_type_deallocator120, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1a7bb3511_TupleExprModel> &other) { return any.type == &__jule_any_type84 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_type_deallocator121, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1a7b8ce7a_FnCallExpr> &other) { return any.type == &__jule_any_type85 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_type_deallocator122, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1a7bb725c_RuneExprModel> &other) { return any.type == &__jule_any_type86 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_type_deallocator22, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1a7d1bc96_TypeKind> &other) { return any.type == &__jule_any_type87 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_type_deallocator123, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1a7bb3214_ArrayExprModel> &other) { return any.type == &__jule_any_type88 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_type_deallocator124, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1a7b8c364_SubIdentExpr> &other) { return any.type == &__jule_any_type89 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_type_deallocator125, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1a7b857e1_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type90 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_type_deallocator126, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1a7b8b30d_UnaryExpr> &other) { return any.type == &__jule_any_type91 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_type_deallocator127, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1a7b800b0_TypeDecl> &other) { return any.type == &__jule_any_type92 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_type_deallocator128, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1a7b8be8a_NsSelectionExpr> &other) { return any.type == &__jule_any_type93 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_type_deallocator129, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1a7b85bba_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type94 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_type_deallocator130, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1a7bb1a70_SlicingExprModel> &other) { return any.type == &__jule_any_type95 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_type_deallocator131, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1a7bae551_CastingExprModel> &other) { return any.type == &__jule_any_type96 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_type_deallocator132, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1a7b907a7_SliceExpr> &other) { return any.type == &__jule_any_type97 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_type_deallocator133, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1a7badbc1_StructLitExprModel> &other) { return any.type == &__jule_any_type98 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_type_deallocator134, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1a7bb2d3a_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type99 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_type_deallocator135, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1a7bb2103_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type100 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_type_deallocator136, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1a7bb2994_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type101 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_type_deallocator137, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1a7bb14dc_MapExprModel> &other) { return any.type == &__jule_any_type102 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_type_deallocator138, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1a7bb0c39_AnonFnExprModel> &other) { return any.type == &__jule_any_type103 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_type_deallocator139, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1a7b8951a_RangeExpr> &other) { return any.type == &__jule_any_type104 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_type_deallocator140, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1a7b8a1db_LitExpr> &other) { return any.type == &__jule_any_type105 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_type_deallocator141, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1a7b8a5b5_UnsafeExpr> &other) { return any.type == &__jule_any_type106 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_type_deallocator142, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1a7b91214_IndexingExpr> &other) { return any.type == &__jule_any_type107 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_type_deallocator143, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1a7b91874_SlicingExpr> &other) { return any.type == &__jule_any_type108 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_type_deallocator144, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1a7b8bab1_CastExpr> &other) { return any.type == &__jule_any_type109 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_type_deallocator145, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1a7b8e29a_StructLit> &other) { return any.type == &__jule_any_type110 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_type_deallocator146, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1a7b8e751_BraceLit> &other) { return any.type == &__jule_any_type111 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_type_deallocator147, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1a7b8c81a_BinaryExpr> &other) { return any.type == &__jule_any_type112 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_type_deallocator148, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1a7bad2ec_UnaryExprModel> &other) { return any.type == &__jule_any_type113 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_type_deallocator149, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1a7bace23_BinaryExprModel> &other) { return any.type == &__jule_any_type114 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_type_deallocator150, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1a7badebd_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type115 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_type_deallocator151, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1a7bb418d_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type116 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_type_deallocator152, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1a7bb4ec4_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type117 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_type_deallocator153, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1a7bb569a_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type118 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_type_deallocator154, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1a7bb5997_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type119 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_type_deallocator155, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1a7bb6cc8_SizeofExprModel> &other) { return any.type == &__jule_any_type120 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_type_deallocator156, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1a7bb6eb5_AlignofExprModel> &other) { return any.type == &__jule_any_type121 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_type_deallocator157, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1a7e125d9_ExceptionalForwardingExprModel> &other) { return any.type == &__jule_any_type122 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_type_deallocator158, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1a7e14ed2_StrRuneIter> &other) { return any.type == &__jule_any_type123 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_type_deallocator159, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1a7e13bc3_MutSlicingExprModel> &other) { return any.type == &__jule_any_type124 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_type_deallocator160, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1a7e1472e_PushToSliceExprModel> &other) { return any.type == &__jule_any_type125 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_type_deallocator161, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1a7e14b08_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type126 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_type_deallocator162, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1a7e1296e_SwapExprModel> &other) { return any.type == &__jule_any_type127 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_type_deallocator163, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1a7e12d48_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type128 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_type_deallocator164, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1a7e13640_StrCompExprModel> &other) { return any.type == &__jule_any_type129 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_type_deallocator165, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1a7e13ec0_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type130 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_type_deallocator166, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1a7e152ce_UnsafeDerefExprModel> &other) { return any.type == &__jule_any_type131 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_type_deallocator167, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1a7e131bc_RefExprModel> &other) { return any.type == &__jule_any_type132 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_type_deallocator168, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_1a7bad82a_StructArgExprModel> &other) { return any.type == &__jule_any_type133 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_type_deallocator169, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::Ptr<_1a7e155cb_UnsafeCastingExprModel> &other) { return any.type == &__jule_any_type134 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_type_deallocator170, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::Ptr<_1a7e14355_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type135 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_type_deallocator45, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::Ptr<jule::Str> &other) { return any.type == &__jule_any_type136 && __jule_ptrEqual(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other)); }
jule::Str __jule_any_type137_to_str(void *alloc) noexcept { return _1a9968acd_toStr(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_type_deallocator171, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other)); }
jule::Str __jule_any_type138_to_str(void *alloc) noexcept { return _1a9973c81_toStr(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_type_deallocator172, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type138 && __jule_any_type138_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other)); }
jule::Str __jule_any_type139_to_str(void *alloc) noexcept { return _1a995a4a4_toStr(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_type_deallocator173, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type139_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type139 && __jule_any_type139_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type140_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other)); }
jule::Str __jule_any_type140_to_str(void *alloc) noexcept { return _1a99581d8_toStr(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type140{.dealloc=__jule_type_deallocator174, .eq=__jule_any_type140_eq, .to_str=__jule_any_type140_to_str};
jule::Bool __jule_any_type140_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type140 && __jule_any_type140_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type141_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other)); }
jule::Str __jule_any_type141_to_str(void *alloc) noexcept { return _1a996b020_toStr(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type141{.dealloc=__jule_type_deallocator175, .eq=__jule_any_type141_eq, .to_str=__jule_any_type141_to_str};
jule::Bool __jule_any_type141_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type141 && __jule_any_type141_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type142_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other)); }
jule::Str __jule_any_type142_to_str(void *alloc) noexcept { return _1a996d462_toStr(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type142{.dealloc=__jule_type_deallocator176, .eq=__jule_any_type142_eq, .to_str=__jule_any_type142_to_str};
jule::Bool __jule_any_type142_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type142 && __jule_any_type142_eq(any.data.alloc, (void*)&other); }
inline jule::Bool __jule_anon1ab08b441(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bbc839_ParamIns> _24921_p1, jule::Ptr<_1a7bbc839_ParamIns> _24936_p2);
struct __jule_anon_1ab0e5973_ctx{
	jule::Ptr<_1a7c36793_ImportInfo> *_49828_pkg;
};
static void __jule_anon_1ab0e5973_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab0e5973_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ab0e5973(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c36793_ImportInfo> _49935_spkg);
struct __jule_anon_1ab166ecd_ctx{
	jule::Ptr<_1a7bd6710_comptimeStructField> _self_;
};
static void __jule_anon_1ab166ecd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab166ecd_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab166ecd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _6521_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _6536_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab168e58_ctx{
	jule::Ptr<_1a7bd6710_comptimeStructField> _self_;
};
static void __jule_anon_1ab168e58_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab168e58_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab168e58(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _7221_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _7236_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab180d1b_ctx{
	jule::Ptr<_1a7bd9933_comptimeStatic> _self_;
};
static void __jule_anon_1ab180d1b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab180d1b_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab180d1b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _17821_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _17836_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab182c96_ctx{
	jule::Ptr<_1a7bd9933_comptimeStatic> _self_;
};
static void __jule_anon_1ab182c96_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab182c96_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab182c96(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _18521_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _18536_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab194208_ctx{
	jule::Ptr<_1a7bdcb56_comptimeEnumField> _self_;
};
static void __jule_anon_1ab194208_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab194208_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab194208(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _28321_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _28336_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab1aaa38_ctx{
	jule::Ptr<_1a7be096c_comptimeParam> _self_;
};
static void __jule_anon_1ab1aaa38_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab1aaa38_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab1aaa38(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _40221_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _40236_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab1ac9b3_ctx{
	jule::Ptr<_1a7be096c_comptimeParam> _self_;
};
static void __jule_anon_1ab1ac9b3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab1ac9b3_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab1ac9b3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _40921_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _40936_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab1ae93d_ctx{
	jule::Ptr<_1a7be096c_comptimeParam> _self_;
};
static void __jule_anon_1ab1ae93d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab1ae93d_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab1ae93d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _41621_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _41636_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab257541_ctx{
	jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab257541_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab257541_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab257541(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _97421_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _97436_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab2594bb_ctx{
	jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab2594bb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab2594bb_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2594bb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _98121_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _98136_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab25b446_ctx{
	jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab25b446_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab25b446_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab25b446(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _98821_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _98836_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab25d3c1_ctx{
	jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab25d3c1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab25d3c1_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab25d3c1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _99521_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _99536_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab26034b_ctx{
	jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab26034b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab26034b_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab26034b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _100221_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _100236_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab2622c6_ctx{
	jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab2622c6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab2622c6_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2622c6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _100921_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _100936_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab264251_ctx{
	jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab264251_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab264251_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab264251(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _101621_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _101636_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab2661cb_ctx{
	jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab2661cb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab2661cb_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2661cb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _102321_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _102336_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab268299_ctx{
	jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab268299_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab268299_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab268299(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _103021_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _103036_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab26a224_ctx{
	jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab26a224_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab26a224_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab26a224(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _103721_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _103736_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab26c19e_ctx{
	jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab26c19e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab26c19e_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab26c19e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _104421_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _104436_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab26e129_ctx{
	jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab26e129_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab26e129_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab26e129(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _105121_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _105136_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab2710a4_ctx{
	jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab2710a4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab2710a4_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2710a4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _105821_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _105836_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab27302e_ctx{
	jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab27302e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab27302e_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab27302e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _106521_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _106536_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab274ea9_ctx{
	jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab274ea9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab274ea9_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab274ea9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _107221_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _107236_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab276e34_ctx{
	jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab276e34_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab276e34_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab276e34(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _107921_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _107936_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab278dae_ctx{
	jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab278dae_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab278dae_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab278dae(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _108621_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _108636_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab27ad39_ctx{
	jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab27ad39_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab27ad39_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab27ad39(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _109321_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _109336_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab27ccb4_ctx{
	jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab27ccb4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab27ccb4_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab27ccb4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _110021_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _110036_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab2ade05_ctx{
	jule::Ptr<_1a7bebba9_comptimeValue> _self_;
};
static void __jule_anon_1ab2ade05_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab2ade05_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2ade05(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _126221_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _126236_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab2b0d80_ctx{
	jule::Ptr<_1a7bebba9_comptimeValue> _self_;
};
static void __jule_anon_1ab2b0d80_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab2b0d80_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2b0d80(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _126921_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _126936_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab2b2d0a_ctx{
	jule::Ptr<_1a7bebba9_comptimeValue> _self_;
};
static void __jule_anon_1ab2b2d0a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab2b2d0a_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2b2d0a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _127621_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _127636_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab2b4c85_ctx{
	jule::Ptr<_1a7bebba9_comptimeValue> _self_;
};
static void __jule_anon_1ab2b4c85_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab2b4c85_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2b4c85(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _128321_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _128336_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab2b6c10_ctx{
	jule::Ptr<_1a7bebba9_comptimeValue> _self_;
};
static void __jule_anon_1ab2b6c10_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab2b6c10_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2b6c10(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _129021_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _129036_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab2b8b8a_ctx{
	jule::Ptr<_1a7bebba9_comptimeValue> _self_;
};
static void __jule_anon_1ab2b8b8a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab2b8b8a_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2b8b8a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _129721_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _129736_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab2bab15_ctx{
	jule::Ptr<_1a7bebba9_comptimeValue> _self_;
};
static void __jule_anon_1ab2bab15_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab2bab15_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2bab15(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _130421_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _130436_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab2d082d_ctx{
	jule::Ptr<_1a7c01384_comptimeFile> _self_;
};
static void __jule_anon_1ab2d082d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab2d082d_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2d082d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _142921_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _142936_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab2d27a8_ctx{
	jule::Ptr<_1a7c01384_comptimeFile> _self_;
};
static void __jule_anon_1ab2d27a8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab2d27a8_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2d27a8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _143621_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _143636_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab2d4733_ctx{
	jule::Ptr<_1a7c01384_comptimeFile> _self_;
};
static void __jule_anon_1ab2d4733_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab2d4733_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2d4733(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _144321_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _144336_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab34b05d_ctx{
	jule::Ptr<_1a7c0529a_comptimeDecl> _self_;
};
static void __jule_anon_1ab34b05d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab34b05d_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab34b05d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _194921_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _194936_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab34ced8_ctx{
	jule::Ptr<_1a7c0529a_comptimeDecl> _self_;
};
static void __jule_anon_1ab34ced8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab34ced8_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab34ced8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _195621_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _195636_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab34ee63_ctx{
	jule::Ptr<_1a7c0529a_comptimeDecl> _self_;
};
static void __jule_anon_1ab34ee63_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab34ee63_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab34ee63(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _196321_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _196336_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab351ddd_ctx{
	jule::Ptr<_1a7c0529a_comptimeDecl> _self_;
};
static void __jule_anon_1ab351ddd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab351ddd_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab351ddd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _197021_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _197036_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab353d68_ctx{
	jule::Ptr<_1a7c0529a_comptimeDecl> _self_;
};
static void __jule_anon_1ab353d68_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab353d68_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab353d68(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _197721_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _197736_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab355ce3_ctx{
	jule::Ptr<_1a7c0529a_comptimeDecl> _self_;
};
static void __jule_anon_1ab355ce3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab355ce3_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab355ce3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _198421_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _198436_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab357c6d_ctx{
	jule::Ptr<_1a7c0529a_comptimeDecl> _self_;
};
static void __jule_anon_1ab357c6d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab357c6d_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab357c6d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _199121_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _199136_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab359be8_ctx{
	jule::Ptr<_1a7c0529a_comptimeDecl> _self_;
};
static void __jule_anon_1ab359be8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab359be8_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab359be8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _199821_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _199836_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab35bcb6_ctx{
	jule::Ptr<_1a7c0529a_comptimeDecl> _self_;
};
static void __jule_anon_1ab35bcb6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab35bcb6_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab35bcb6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _200521_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _200536_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab35dc41_ctx{
	jule::Ptr<_1a7c0529a_comptimeDecl> _self_;
};
static void __jule_anon_1ab35dc41_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab35dc41_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab35dc41(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _201221_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _201236_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab360bbb_ctx{
	jule::Ptr<_1a7c0529a_comptimeDecl> _self_;
};
static void __jule_anon_1ab360bbb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab360bbb_ctx>().dealloc(); }
inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab360bbb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _201921_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _201936_fc, jule::Ptr<_1a7cd41ae_Data>* );
struct __jule_anon_1ab36be91_ctx{
	jule::Ptr<_1a7c0bd51_constraintChecker> _self_;
};
static void __jule_anon_1ab36be91_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab36be91_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ab36be91(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c56c14_sema>* _6415_sema, jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>* _6433_generics);
struct __jule_anon_1ab7436db_ctx{
	jule::Ptr<_1a7bbd8b2_FnIns> _103047_f;
	jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>> _103111_generics;
	jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>> *_103063_ignored;
};
static void __jule_anon_1ab7436db_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab7436db_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ab7436db(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c56c14_sema>* _103742_sema);
struct __jule_anon_1ab75b6b0_ctx{
	jule::Fn<jule::Bool,jule::Ptr<_1a7c56c14_sema>*,jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>*> _113346_algo;
	jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>> _11387_generics;
};
static void __jule_anon_1ab75b6b0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab75b6b0_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ab75b6b0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c56c14_sema>* _114042_sema);
struct __jule_anon_1ab760e9a_ctx{
	jule::Ptr<_1a7bbd8b2_FnIns> _115237_f;
	jule::Ptr<_1a7c56c14_sema> _self_;
};
static void __jule_anon_1ab760e9a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab760e9a_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ab760e9a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c56c14_sema>* _115637_sema, jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>* _115655_generics);
struct __jule_anon_1abdee65a_ctx{
	jule::Ptr<_1a7b8be8a_NsSelectionExpr> _191335_s;
	jule::Str _19143_path;
};
static void __jule_anon_1abdee65a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abdee65a_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1abdee65a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c36793_ImportInfo> _191543_imp);
inline jule::Str __jule_anon1ac20a24b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _87319_def);
struct __jule_anon_1ac290017_ctx{
	jule::Ptr<_1a7b85bba_NamespaceTypeDecl> _155836_decl;
	jule::Str _15593_path;
};
static void __jule_anon_1ac290017_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac290017_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ac290017(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c36793_ImportInfo> _156043_imp);
struct __jule_anon_1ac8e8b59_ctx{
	jule::Ptr<_1a896cd58_ObjectDeadCode> _self_;
};
static void __jule_anon_1ac8e8b59_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac8e8b59_ctx>().dealloc(); }
inline void __jule_anon_1ac8e8b59(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7ccd9e4_SymbolTable>* _22131_file);
struct __jule_anon_1ac951c28_ctx{
	_1a8976625_exprDeadCode *_self_;
};
static void __jule_anon_1ac951c28_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac951c28_ctx>().dealloc(); }
inline void __jule_anon_1ac951c28(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2636_expr);
struct __jule_anon_1acb03c98_ctx{
	_1a883b1bb_exprOptimizer *_self_;
};
static void __jule_anon_1acb03c98_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1acb03c98_ctx>().dealloc(); }
inline void __jule_anon_1acb03c98(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _56447_m);
struct __jule_anon_1accd86ca_ctx{
	jule::Ptr<_1a95aebec_scopeCoder> _self_;
	jule::Bool _1377_ref;
};
static void __jule_anon_1accd86ca_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1accd86ca_ctx>().dealloc(); }
inline void __jule_anon_1accd86ca(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1accdc1d4_ctx{
	jule::Ptr<_1a95aebec_scopeCoder> _self_;
	jule::Ptr<_1a7c157b6_RangeIter> *_12936_it;
};
static void __jule_anon_1accdc1d4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1accdc1d4_ctx>().dealloc(); }
inline void __jule_anon_1accdc1d4(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1acd0c765_ctx{
	jule::Ptr<_1a95aebec_scopeCoder> _self_;
	jule::Str _2167_resultKey;
};
static void __jule_anon_1acd0c765_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1acd0c765_ctx>().dealloc(); }
inline void __jule_anon_1acd0c765(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1acd0ecd9_ctx{
	jule::Ptr<_1a95aebec_scopeCoder> _self_;
	jule::Str _2177_resultVal;
};
static void __jule_anon_1acd0ecd9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1acd0ecd9_ctx>().dealloc(); }
inline void __jule_anon_1acd0ecd9(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1acd28d36_ctx{
	jule::Ptr<_1a95aebec_scopeCoder> _self_;
};
static void __jule_anon_1acd28d36_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1acd28d36_ctx>().dealloc(); }
inline void __jule_anon_1acd28d36(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1acdb39e7_ctx{
	jule::Ptr<_1a95aebec_scopeCoder> _self_;
};
static void __jule_anon_1acdb39e7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1acdb39e7_ctx>().dealloc(); }
inline void __jule_anon_1acdb39e7(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1acdb4d28_ctx{
	jule::Ptr<_1a95aebec_scopeCoder> _self_;
	jule::Ptr<_1a7c181ae_Match> _77630_m;
};
static void __jule_anon_1acdb4d28_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1acdb4d28_ctx>().dealloc(); }
inline void __jule_anon_1acdb4d28(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ace3a552_ctx{
	jule::Ptr<_1a95aebec_scopeCoder> _self_;
	jule::Ptr<_1a7bb0c39_AnonFnExprModel> _114634_m;
};
static void __jule_anon_1ace3a552_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ace3a552_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ace3a552(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c7b178_Var> _115267_v);
struct __jule_anon_1ad2a4e71_ctx{
	jule::Ptr<_1a9694078_ObjectCoder> _self_;
};
static void __jule_anon_1ad2a4e71_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad2a4e71_ctx>().dealloc(); }
inline void __jule_anon_1ad2a4e71(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c396b9_Package>* _75738_pkg);
struct __jule_anon_1ad2a644a_ctx{
	jule::Ptr<_1a9694078_ObjectCoder> _self_;
};
static void __jule_anon_1ad2a644a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad2a644a_ctx>().dealloc(); }
inline void __jule_anon_1ad2a644a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn>* _77036_m);
struct __jule_anon_1ad2abab0_ctx{
	jule::Ptr<_1a9694078_ObjectCoder> _self_;
};
static void __jule_anon_1ad2abab0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad2abab0_ctx>().dealloc(); }
inline void __jule_anon_1ad2abab0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c396b9_Package>* _78338_pkg);
struct __jule_anon_1ad2bc263_ctx{
	jule::Ptr<_1a9694078_ObjectCoder> _self_;
	jule::Ptr<_1a7c7b178_Var> _85024_v;
};
static void __jule_anon_1ad2bc263_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad2bc263_ctx>().dealloc(); }
inline void __jule_anon_1ad2bc263(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad2be353_ctx{
	jule::Ptr<_1a9694078_ObjectCoder> _self_;
	jule::Ptr<_1a7c7b178_Var> _85024_v;
};
static void __jule_anon_1ad2be353_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad2be353_ctx>().dealloc(); }
inline void __jule_anon_1ad2be353(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad2c1a5e_ctx{
	jule::Ptr<_1a9694078_ObjectCoder> _self_;
};
static void __jule_anon_1ad2c1a5e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad2c1a5e_ctx>().dealloc(); }
inline void __jule_anon_1ad2c1a5e(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad2c2c08_ctx{
	jule::Ptr<_1a9694078_ObjectCoder> _self_;
	jule::Ptr<_1a7c7b178_Var> _85024_v;
};
static void __jule_anon_1ad2c2c08_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad2c2c08_ctx>().dealloc(); }
inline void __jule_anon_1ad2c2c08(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad2e0dbe_ctx{
	jule::Ptr<_1a9694078_ObjectCoder> _self_;
};
static void __jule_anon_1ad2e0dbe_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad2e0dbe_ctx>().dealloc(); }
inline void __jule_anon_1ad2e0dbe(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c396b9_Package>* _99338_pkg);
struct __jule_anon_1ad2e2244_ctx{
	jule::Ptr<_1a9694078_ObjectCoder> _self_;
	jule::Ptr<_1a7ba8b11_StructIns> _100749_s;
};
static void __jule_anon_1ad2e2244_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad2e2244_ctx>().dealloc(); }
inline void __jule_anon_1ad2e2244(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn>* _100836_m);
struct __jule_anon_1ad2eeac0_ctx{
	jule::Ptr<_1a9694078_ObjectCoder> _self_;
};
static void __jule_anon_1ad2eeac0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad2eeac0_ctx>().dealloc(); }
inline void __jule_anon_1ad2eeac0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c396b9_Package>* _104538_pkg);
struct __jule_anon_1ad315058_ctx{
	jule::Ptr<_1a9694078_ObjectCoder> _self_;
};
static void __jule_anon_1ad315058_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad315058_ctx>().dealloc(); }
inline void __jule_anon_1ad315058(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c396b9_Package>* _111738_pkg);
struct __jule_anon_1ad316532_ctx{
	jule::Ptr<_1a9694078_ObjectCoder> _self_;
};
static void __jule_anon_1ad316532_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad316532_ctx>().dealloc(); }
inline void __jule_anon_1ad316532(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7ccd9e4_SymbolTable>* _113331_file);
struct __jule_anon_1ad32174b_ctx{
	jule::Ptr<_1a9694078_ObjectCoder> _self_;
};
static void __jule_anon_1ad32174b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad32174b_ctx>().dealloc(); }
inline void __jule_anon_1ad32174b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c396b9_Package>* _117238_pkg);
inline __jule_tuple_i64__jule_tuple_bool __jule_anon1ad3a713e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base);
inline __jule_tuple_u64__jule_tuple_bool __jule_anon1ad3aeca1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base);
inline jule::Bool __jule_anon1ab15a840(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c36793_ImportInfo> _203925_pkg);
struct __jule_anon_1ad2a5d84_ctx{
	jule::Ptr<_1a9694078_ObjectCoder> _self_;
};
static void __jule_anon_1ad2a5d84_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad2a5d84_ctx>().dealloc(); }
inline void __jule_anon_1ad2a5d84(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7ccd9e4_SymbolTable>* _75832_file);
struct __jule_anon_1ad2ac9c3_ctx{
	jule::Ptr<_1a9694078_ObjectCoder> _self_;
};
static void __jule_anon_1ad2ac9c3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad2ac9c3_ctx>().dealloc(); }
inline void __jule_anon_1ad2ac9c3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7ccd9e4_SymbolTable>* _78432_file);
struct __jule_anon_1ad2e1cc1_ctx{
	jule::Ptr<_1a9694078_ObjectCoder> _self_;
};
static void __jule_anon_1ad2e1cc1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad2e1cc1_ctx>().dealloc(); }
inline void __jule_anon_1ad2e1cc1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7ccd9e4_SymbolTable>* _99432_file);
struct __jule_anon_1ad3009d3_ctx{
	jule::Ptr<_1a9694078_ObjectCoder> _self_;
};
static void __jule_anon_1ad3009d3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad3009d3_ctx>().dealloc(); }
inline void __jule_anon_1ad3009d3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7ccd9e4_SymbolTable>* _104632_file);
struct __jule_anon_1ad315e6b_ctx{
	jule::Ptr<_1a9694078_ObjectCoder> _self_;
};
static void __jule_anon_1ad315e6b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad315e6b_ctx>().dealloc(); }
inline void __jule_anon_1ad315e6b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7ccd9e4_SymbolTable>* _111832_file);
struct __jule_anon_1ad2e3cb2_ctx{
	jule::Ptr<_1a9694078_ObjectCoder> _self_;
	jule::Ptr<_1a7bce362_Trait> _99517_t;
};
static void __jule_anon_1ad2e3cb2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad2e3cb2_ctx>().dealloc(); }
inline void __jule_anon_1ad2e3cb2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn>* _99939_m);
jule::Array<jule::Array<jule::Str,2>,5> _1d92629e6_HelpMap;
jule::Str _1a972c661_OutDir;
jule::Str _1a972c92a_OutName;
jule::Str _1a972cbd3_Out;
jule::Uintptr _1d7e067ac_STDIN;
jule::Uintptr _1d7e06adc_STDOUT;
jule::Uintptr _1d7e06dc8_STDERR;
jule::Array<jule::U8,256> _1d80613b7_first;
jule::Array<_1d806196c_acceptRange,16> _1d8061d13_acceptRanges;
jule::Array<jule::U8,32> _1d81b112c__DE_BRUIJN32_TAB;
jule::Array<jule::U8,64> _1d81b16c1__DE_BRUIJN64_TAB;
jule::I64 __jule_argc;
jule::U8** __jule_argv;
jule::U8** __jule_envp;
jule::Ptr<_1dae78d37_RangeTable> _1dae16bb5__L;
jule::Ptr<_1dae78d37_RangeTable> _1dae17ac8__LU;
jule::Ptr<_1dae78d37_RangeTable> _1dae1daac_Letter;
jule::Ptr<_1dae78d37_RangeTable> _1dae24d7c_Upper;
jule::Array<jule::U8,256> _1dae72858__PROPERTIES;
jule::Array<jule::Str,4> _1d913516b_CppHeaderExts;
jule::Array<jule::Str,3> _1d9136e2b_CppExts;
jule::Array<jule::Str,1> _1d913713a_ObjectiveCppExts;
jule::Str _1d9257eb4_PathStdlib;
jule::Str _1d9258206_PathExec;
jule::Str _1d92584ae_PathWd;
jule::Str _1d92587ab_PathApi;
jule::Str _1d9258a64_Os;
jule::Str _1d9258d1c_Arch;
jule::Str _1d925db02_Compiler;
jule::Str _1d92601a8_CompilerPath;
jule::Str _1d92603b7_CppStd;
jule::Bool _1d92605c6_Shadowing;
jule::Bool _1d926086d_Transpilation;
jule::Bool _1d9260b26_Test;
jule::Bool _1d9260dce_RC;
jule::Bool _1d9261297_Safety;
jule::Bool _1d92614d9_Production;
jule::Bool _1d9261781_AtomicRC;
_1d949ac2e_floatInfo _1c0044869_f32info;
_1d949ac2e_floatInfo _1c0044b66_f64info;
jule::Array<jule::Array<jule::U64,2>,696> _1c004c553_detailedPowsOfTen;
jule::Slice<jule::I64> _1c004e368_powtab;
jule::Slice<jule::F64> _1c004ee29_f64pow10;
jule::Slice<jule::F32> _1c0050259_f32pow10;
jule::Array<jule::U64,20> _1c00534b0_u64pow10;
jule::Slice<_1c0057250_leftCheat> _1c005767e_leftCheats;
jule::I64 _1c005d72e_BitSize;
jule::Str _1c005da2b_SysInt;
jule::Str _1c005dcd4_SysUint;
jule::Array<jule::I32,5> _1a7ac0c04_Spaces;
jule::Array<jule::U64,6> _1a7ac0e13_UnaryOps;
jule::Array<jule::U64,18> _1a7ac1155_BinOps;
jule::Array<jule::U64,2> _1a7b640d8_PostfixOps;
jule::Array<jule::U64,11> _1a7b643c4_AssignOps;
jule::Array<_1a7b724e2_kindPair,28> _1a7b72921_keywords;
jule::Array<_1a7b724e2_kindPair,46> _1a7b72c51_basicOps;
jule::Slice<jule::Str> _1a7c0b515_builtinConstraints;
jule::Ptr<_1a7d1bc96_TypeKind> _1a7e014c9_primNil;
jule::Ptr<_1a7d1bc96_TypeKind> _1a7e017c6_primVoid;
jule::Ptr<_1a7d1bc96_TypeKind> _1a7e01a7e_primAny;
jule::Ptr<_1a7d1bc96_TypeKind> _1a7e01d7b_primStr;
jule::Ptr<_1a7d1bc96_TypeKind> _1a7e02134_primBool;
jule::Ptr<_1a7d1bc96_TypeKind> _1a7e023dc_primUintptr;
jule::Ptr<_1a7d1bc96_TypeKind> _1a7e02695_primUint;
jule::Ptr<_1a7d1bc96_TypeKind> _1a7e02a5d_primInt;
jule::Ptr<_1a7d1bc96_TypeKind> _1a7e02ca0_primI8;
jule::Ptr<_1a7d1bc96_TypeKind> _1a7e03047_primI16;
jule::Ptr<_1a7d1bc96_TypeKind> _1a7e03300_primI32;
jule::Ptr<_1a7d1bc96_TypeKind> _1a7e035a8_primI64;
jule::Ptr<_1a7d1bc96_TypeKind> _1a7e03861_primU8;
jule::Ptr<_1a7d1bc96_TypeKind> _1a7e03b19_primU16;
jule::Ptr<_1a7d1bc96_TypeKind> _1a7e03dc2_primU32;
jule::Ptr<_1a7d1bc96_TypeKind> _1a7e043ab_primU64;
jule::Ptr<_1a7d1bc96_TypeKind> _1a7e045ed_primF32;
jule::Ptr<_1a7d1bc96_TypeKind> _1a7e0480c_primF64;
jule::Ptr<_1a884457b_data> _1a8843b85_emptyData;
jule::Bool _1a8848b13_Copy;
jule::Bool _1a8848e10_Deadcode;
jule::Bool _1a88491b8_Append;
jule::Bool _1a88494b5_Math;
jule::Bool _1a884976d_Access;
jule::Bool _1a8849a26_Inline;
jule::Bool _1a8849cce_Ptr;
jule::Bool _1a884a197_Cond;
jule::Bool _1a884a3d9_Str;
jule::Bool _1a884a681_Slice;
jule::Bool _1a884a939_Assign;
jule::Bool _1a884abe2_Exceptional;
jule::Bool _1a884ae9a_Iter;
jule::Bool _1a884b253_Dynamic;
jule::Bool _1a8977318_exprEnabled;
jule::Bool _1a897755a_scopeEnabled;
jule::Array<jule::U64,12> _1a96874cd_mdays;
jule::Str _1a95ae48d_assignArgName;
jule::Ptr<_1a7d1bc96_TypeKind> _1a9692010_generalGCPtr;


inline jule::Bool _1d806196c_acceptRange_eq(_1d806196c_acceptRange *_self_, _1d806196c_acceptRange _other_) {
	return 
		(_self_->_field_lo == _other_._field_lo) &&
		(_self_->_field_hi == _self_->_field_hi);
}






inline jule::Bool _1d80a3838_LittleEndian_eq(_1d80a3838_LittleEndian *_self_, _1d80a3838_LittleEndian _other_) { return true; }

inline jule::U32 static__1d80b91cd_DecodeU32(jule::Slice<jule::U8> _4522_b) {
	return (((static_cast<jule::U32>(_4522_b[0LL]) | (jule::U32)(static_cast<jule::U32>(_4522_b[1LL]) << 8LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[2LL]) << 16LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[3LL]) << 24LLU));;
}



inline jule::U64 static__1d80b9a6e_DecodeU64(jule::Slice<jule::U8> _7522_b) {
	return (((((((static_cast<jule::U64>(_7522_b[0LL]) | (jule::U64)(static_cast<jule::U64>(_7522_b[1LL]) << 8LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[2LL]) << 16LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[3LL]) << 24LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[4LL]) << 32LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[5LL]) << 40LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[6LL]) << 48LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[7LL]) << 56LLU));;
}








inline jule::Bool _1d80bcee5_u128_eq(_1d80bcee5_u128 *_self_, _1d80bcee5_u128 _other_) {
	return 
		(_self_->_field_hi == _other_._field_hi) &&
		(_self_->_field_lo == _self_->_field_lo);
}






inline jule::Bool _1acba5069_group_eq(_1acba5069_group *_self_, _1acba5069_group _other_) {
	return 
		_1a9983a82_arrayCmp(_self_->_field_keys.begin(), _other_._field_keys.begin(), 8) &&
		_1acba57a6_arrayCmp(_self_->_field_values.begin(), _self_->_field_values.begin(), 8);
}







inline jule::Ptr<_1acba2c26__Map> static__1acba32dc_make(void) {
	return jule::new_ptr<_1acba2c26__Map>(_1acba2c26__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1acba5069_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _1acba3441_initData(_1acba2c26__Map* _self_, jule::I64 _13524_cap) {
	jule::I64 _1363_groups = _1d81c0db7_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1acba5069_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1acba5069_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=({ jule::I64 __jule_x = _1363_groups; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbc2581:;
		if (it != expr_end) {
			jule::I64 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_1d81c10c6_newEmptyMetadata();
			}
			_iter_next_1acbc2581:;
			++it;
			_1407_i++;
			goto _iter_begin_1acbc2581;
		}
		_iter_end_1acbc2581:;
	};
}



inline jule::U64 _1acba3595_hash(_1acba2c26__Map* _self_, jule::Str _14616_k) {
	jule::Str _1473_bytes = _1a9954ee8_toStr(_14616_k);;
	return _1d80c146b_hash(_1d7e4d705_StrBytes(_1473_bytes));;
}



inline void _1acba36e9_rehash(_1acba2c26__Map* _self_, jule::I64 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_1acba3441_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1acba5069_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_1acba5069_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1acba5069_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1acba5069_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbc5b7d:;
		if (it != expr_end) {
			jule::I64 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_1d81c10c6_newEmptyMetadata();
			}
			_iter_next_1acbc5b7d:;
			++it;
			_1617_i++;
			goto _iter_begin_1acbc5b7d;
		}
		_iter_end_1acbc5b7d:;
	};
	(*(_self_))._field_limit=({ jule::I64 __jule_x = _15122_n; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbc57d7:;
		if (it != expr_end) {
			jule::I64 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acbc7663:;
					if (it != expr_end) {
						jule::I64 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_1acbc7663;
							};
							{
								(*(_1acba3c5a_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_1acbc7663:;
						++it;
						_1678_s++;
						goto _iter_begin_1acbc7663;
					}
					_iter_end_1acbc7663:;
				};
			}
			_iter_next_1acbc57d7:;
			++it;
			_1667_g++;
			goto _iter_begin_1acbc57d7;
		}
		_iter_end_1acbc57d7:;
	};
}



inline jule::I64 _1acba384d_nextSize(_1acba2c26__Map* _self_) {
	jule::I64 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1acba39a2_lookup(jule::Ptr<_1acba2c26__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1d81c14a0_splitHash(_1acba3595_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _1d81c179c_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _1d81bee4e_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _1d81c0526_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_keys[static_cast<jule::I64>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_values[static_cast<jule::I64>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1acbcdd51:;
			}
			_iter_end_1acbcdd51:;;
			_2018_matches=_1d81c025c_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_1acbcaa51:;
	}
	_iter_end_1acbcaa51:;;
}



inline jule::Bool _1acba3b06_get(jule::Ptr<_1acba2c26__Map> _self_, jule::Str _23024_k) {
	jule::Bool _23111_v = false;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_1acba39a2_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Bool* _1acba3c5a_set(_1acba2c26__Map* _self_, jule::Str _24123_k) {
	jule::Bool* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_1acba36e9_rehash(_self_, _1acba384d_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1d81c14a0_splitHash(_1acba3595_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _1d81c179c_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _1d81bee4e_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _1d81c0526_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1acbd6b8e:;
			}
			_iter_end_1acbd6b8e:;;
			_2488_matches=_1d81c025c_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _1d81c0526_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)][static_cast<jule::I64>(_2615_s)]=static_cast<jule::I8>(_2457_lo);
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_1acbd5b38:;
	}
	_iter_end_1acbd5b38:;;
}



inline jule::Bool _1acba3dae_del(jule::Ptr<_1acba2c26__Map> _self_, jule::Str _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1d81c14a0_splitHash(_1acba3595_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _1d81c179c_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _1d81bee4e_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _1d81c0526_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)])) {
						__jule_func_result=true;
						if ((_1d81c025c_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)]))) != 0LLU)) {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-128LL;
							((*(_self_))._field_resident)--;
						} else {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-2LL;
							((*(_self_))._field_dead)++;
						};
						jule::Str _30214_key;;
						jule::Bool _30314_val = false;;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)]=_30214_key;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_values[static_cast<jule::I64>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1acbde878:;
			}
			_iter_end_1acbde878:;;
			_2838_matches=_1d81c025c_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_1acbdd602:;
	}
	_iter_end_1acbdd602:;;
}



inline void _1acba4013_clear(jule::Ptr<_1acba2c26__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbe6121:;
		if (it != expr_end) {
			jule::I64 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acbe6a8e:;
					if (it != expr_end) {
						jule::I64 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_1acbe6a8e:;
						++it;
						_3298_j++;
						goto _iter_begin_1acbe6a8e;
					}
					_iter_end_1acbe6a8e:;
				};
			}
			_iter_next_1acbe6121:;
			++it;
			_3287_i++;
			goto _iter_begin_1acbe6121;
		}
		_iter_end_1acbe6121:;
	};
	jule::Str _33311_k;;
	jule::Bool _33411_v = false;;
	{
		auto expr = &((*(_self_))._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbddba7:;
		if (it != expr_end) {
			jule::I64 _3357_i = it - expr->begin();
			{
				_1acba5069_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1acbe91e0:;
						if (it != expr_end) {
							jule::I64 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_1acbe91e0:;
							++it;
							_3389_j++;
							goto _iter_begin_1acbe91e0;
						}
						_iter_end_1acbe91e0:;
					};
				};
			}
			_iter_next_1acbddba7:;
			++it;
			_3357_i++;
			goto _iter_begin_1acbddba7;
		}
		_iter_end_1acbddba7:;
	};
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
}



inline jule::I64 _1acba4167_len(jule::Ptr<_1acba2c26__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*(_self_))._field_dead);;
}



inline jule::I64 _1acba42bb_cap(_1acba2c26__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _1acbae4a2_mapIterator _1acba4420_iterator(jule::Ptr<_1acba2c26__Map> _self_) {
	_1acbae4a2_mapIterator _3607_iterator = _1acbae4a2_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1acba5069_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1acbaea35_init(&_3607_iterator);
	return _3607_iterator;;
}





inline jule::Ptr<_1acbed59b__Map> static__1acbedab8_make(void) {
	return jule::new_ptr<_1acbed59b__Map>(_1acbed59b__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1acc006d0_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _1acbedc1c_initData(_1acbed59b__Map* _self_, jule::I64 _13524_cap) {
	jule::I64 _1363_groups = _1d81c0db7_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1acc006d0_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1acc006d0_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1a7bbd8b2_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7bbd8b2_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=({ jule::I64 __jule_x = _1363_groups; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc1ace4:;
		if (it != expr_end) {
			jule::I64 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_1d81c10c6_newEmptyMetadata();
			}
			_iter_next_1acc1ace4:;
			++it;
			_1407_i++;
			goto _iter_begin_1acc1ace4;
		}
		_iter_end_1acc1ace4:;
	};
}



inline jule::U64 _1acbedd71_hash(_1acbed59b__Map* _self_, jule::Ptr<_1a7bbd8b2_FnIns> _14616_k) {
	jule::Str _1473_bytes = _1ab6894cd_toStr(_14616_k);;
	return _1d80c146b_hash(_1d7e4d705_StrBytes(_1473_bytes));;
}



inline void _1acbedec5_rehash(_1acbed59b__Map* _self_, jule::I64 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_1acbedc1c_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1acc006d0_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_1acc006d0_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1acc006d0_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1acc006d0_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1a7bbd8b2_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7bbd8b2_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc1e3e1:;
		if (it != expr_end) {
			jule::I64 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_1d81c10c6_newEmptyMetadata();
			}
			_iter_next_1acc1e3e1:;
			++it;
			_1617_i++;
			goto _iter_begin_1acc1e3e1;
		}
		_iter_end_1acc1e3e1:;
	};
	(*(_self_))._field_limit=({ jule::I64 __jule_x = _15122_n; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc1e04a:;
		if (it != expr_end) {
			jule::I64 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acc20dc6:;
					if (it != expr_end) {
						jule::I64 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_1acc20dc6;
							};
							{
								(*(_1acbee536_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_1acc20dc6:;
						++it;
						_1678_s++;
						goto _iter_begin_1acc20dc6;
					}
					_iter_end_1acc20dc6:;
				};
			}
			_iter_next_1acc1e04a:;
			++it;
			_1667_g++;
			goto _iter_begin_1acc1e04a;
		}
		_iter_end_1acc1e04a:;
	};
}



inline jule::I64 _1acbee129_nextSize(_1acbed59b__Map* _self_) {
	jule::I64 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1acbee27d_lookup(jule::Ptr<_1acbed59b__Map> _self_, jule::Ptr<_1a7bbd8b2_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1d81c14a0_splitHash(_1acbedd71_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _1d81c179c_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _1d81bee4e_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _1d81c0526_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_keys[static_cast<jule::I64>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_values[static_cast<jule::I64>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1acc275b4:;
			}
			_iter_end_1acc275b4:;;
			_2018_matches=_1d81c025c_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_1acc242b4:;
	}
	_iter_end_1acc242b4:;;
}



inline jule::Slice<jule::Uintptr> _1acbee3d2_get(jule::Ptr<_1acbed59b__Map> _self_, jule::Ptr<_1a7bbd8b2_FnIns> _23024_k) {
	jule::Slice<jule::Uintptr> _23111_v;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_1acbee27d_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Slice<jule::Uintptr>* _1acbee536_set(_1acbed59b__Map* _self_, jule::Ptr<_1a7bbd8b2_FnIns> _24123_k) {
	jule::Slice<jule::Uintptr>* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_1acbedec5_rehash(_self_, _1acbee129_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1d81c14a0_splitHash(_1acbedd71_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _1d81c179c_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _1d81bee4e_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _1d81c0526_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1acc30402:;
			}
			_iter_end_1acc30402:;;
			_2488_matches=_1d81c025c_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _1d81c0526_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)][static_cast<jule::I64>(_2615_s)]=static_cast<jule::I8>(_2457_lo);
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_1acc2e39b:;
	}
	_iter_end_1acc2e39b:;;
}



inline jule::Bool _1acbee68a_del(jule::Ptr<_1acbed59b__Map> _self_, jule::Ptr<_1a7bbd8b2_FnIns> _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1d81c14a0_splitHash(_1acbedd71_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _1d81c179c_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _1d81bee4e_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _1d81c0526_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)])) {
						__jule_func_result=true;
						if ((_1d81c025c_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)]))) != 0LLU)) {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-128LL;
							((*(_self_))._field_resident)--;
						} else {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-2LL;
							((*(_self_))._field_dead)++;
						};
						jule::Ptr<_1a7bbd8b2_FnIns> _30214_key;;
						jule::Slice<jule::Uintptr> _30314_val;;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)]=_30214_key;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_values[static_cast<jule::I64>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1acc380db:;
			}
			_iter_end_1acc380db:;;
			_2838_matches=_1d81c025c_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_1acc36d65:;
	}
	_iter_end_1acc36d65:;;
}



inline void _1acbee7de_clear(jule::Ptr<_1acbed59b__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc3e884:;
		if (it != expr_end) {
			jule::I64 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acc40302:;
					if (it != expr_end) {
						jule::I64 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_1acc40302:;
						++it;
						_3298_j++;
						goto _iter_begin_1acc40302;
					}
					_iter_end_1acc40302:;
				};
			}
			_iter_next_1acc3e884:;
			++it;
			_3287_i++;
			goto _iter_begin_1acc3e884;
		}
		_iter_end_1acc3e884:;
	};
	jule::Ptr<_1a7bbd8b2_FnIns> _33311_k;;
	jule::Slice<jule::Uintptr> _33411_v;;
	{
		auto expr = &((*(_self_))._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc3741a:;
		if (it != expr_end) {
			jule::I64 _3357_i = it - expr->begin();
			{
				_1acc006d0_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1acc42953:;
						if (it != expr_end) {
							jule::I64 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_1acc42953:;
							++it;
							_3389_j++;
							goto _iter_begin_1acc42953;
						}
						_iter_end_1acc42953:;
					};
				};
			}
			_iter_next_1acc3741a:;
			++it;
			_3357_i++;
			goto _iter_begin_1acc3741a;
		}
		_iter_end_1acc3741a:;
	};
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
}



inline jule::I64 _1acbee943_len(jule::Ptr<_1acbed59b__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*(_self_))._field_dead);;
}



inline jule::I64 _1acbeea97_cap(_1acbed59b__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _1acc07b7c_mapIterator _1acbeebeb_iterator(jule::Ptr<_1acbed59b__Map> _self_) {
	_1acc07b7c_mapIterator _3607_iterator = _1acc07b7c_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1acc006d0_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1acc08210_init(&_3607_iterator);
	return _3607_iterator;;
}







inline void _1acbaea35_init(_1acbae4a2_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_1acba5069_group> _1___jule_assign_arg = (*((*(_self_))._field_m))._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_1acba4167_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_202401100_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_pstr__jule_tuple_pbool _1acbaeb89_next(_1acbae4a2_mapIterator* _self_) {
	__jule_tuple_pstr__jule_tuple_pbool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_1acbb7620;
					};
					jule::Str* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Bool* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_1acbb7620:;
			}
			_iter_end_1acbb7620:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1acbb68a5:;
	}
	_iter_end_1acbb68a5:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





inline void _1acc08210_init(_1acc07b7c_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_1acc006d0_group> _1___jule_assign_arg = (*((*(_self_))._field_m))._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_1acbee943_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_202401100_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_px_1a7bbd8b2_FnIns__jule_tuple_psuintptr _1acc08364_next(_1acc07b7c_mapIterator* _self_) {
	__jule_tuple_px_1a7bbd8b2_FnIns__jule_tuple_psuintptr __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_1acc10d83;
					};
					jule::Ptr<_1a7bbd8b2_FnIns>* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Slice<jule::Uintptr>* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_1acc10d83:;
			}
			_iter_end_1acc10d83:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1acc10118:;
	}
	_iter_end_1acc10118:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}








inline jule::Bool _1dae78386_Range16_eq(_1dae78386_Range16 *_self_, _1dae78386_Range16 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}






inline jule::Bool _1dae788b4_Range32_eq(_1dae788b4_Range32 *_self_, _1dae788b4_Range32 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}









inline _1daed18b7_StrBuilder static__1daed1bb4_New(jule::I64 _1516_cap) {
	if ((_1516_cap < 0LL)) {
		__jule_panic_s(jule::Str::lit("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:4"));;
	};
	return _1daed18b7_StrBuilder{._field_buf=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _1516_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; })};;
}



inline void _1daeda409_Write(_1daed18b7_StrBuilder* _self_, jule::Slice<jule::U8> _2521_b) {
	((*(_self_))._field_buf).append(_2521_b);;
}



inline void _1daeda6b2_WriteStr(_1daed18b7_StrBuilder* _self_, jule::Str _3024_s) {
	((*(_self_))._field_buf).append(_3024_s);;
}



inline void _1daeda96a_WriteByte(_1daed18b7_StrBuilder* _self_, jule::U8 _3525_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3525_b); };
}



inline jule::Str _1daedaea9_Str(_1daed18b7_StrBuilder* _self_) {
	jule::Str _507_s = _1d7e4dc55_StrFromBytes((*(_self_))._field_buf);;
	_1daedb1a7_Clear(_self_);
	return _507_s;;
}



inline void _1daedb1a7_Clear(_1daed18b7_StrBuilder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I64 _1daedb43d_Len(_1daed18b7_StrBuilder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _1daedb95a_Buf(_1daed18b7_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _1daedbc13_SetBuf(_1daed18b7_StrBuilder* _self_, jule::Slice<jule::U8> _7733_buf) {
	(*(_self_))._field_buf=_7733_buf;
}







inline jule::U8 _1daedd1cb_index(_1daedcc14_lazyBuff* _self_, jule::I64 _5521_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5521_i];;
	};
	return (*(_self_))._field_path[_5521_i];;
}



inline void _1daedd484_append(_1daedcc14_lazyBuff* _self_, jule::U8 _6222_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6222_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=({ auto __jule_collection = jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6222_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1daedd71a_string(_1daedcc14_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _1d7e4d98b_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}








inline jule::Bool _1d828aeb5_DirEntry_eq(_1d828aeb5_DirEntry *_self_, _1d828aeb5_DirEntry _other_) {
	return 
		(_self_->_field_Name == _other_._field_Name) &&
		(_self_->_field_Stat == _self_->_field_Stat);
}






inline jule::Bool _1d828b24b_Directory_eq(_1d828b24b_Directory *_self_, _1d828b24b_Directory _other_) { return true; }

inline jule::Exceptional<jule::Slice<jule::Ptr<_1d828aeb5_DirEntry>>> static__1daee2631_Read(jule::Str _1517_path) {
	jule::Slice<jule::Ptr<_1d828aeb5_DirEntry>> __jule_func_result;
	jule::Slice<jule::U8> _163_s = _1d7de80b7_StrToBytes(_1517_path);;
	DIR* _177_dir = _1d7e08979_Opendir((&(_163_s[0LL])));;
	if ((_177_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_1d828aeb5_DirEntry>>>{.error=jule::Any(_1d8289238_getLastFsError(), &__jule_any_type0)};
	};
	for (;;) {
		{
			struct dirent* _224_dirent = _1d7e08b55_Readdir(_177_dir);;
			if ((_224_dirent == nullptr)) {
				goto _iter_end_1aa6a77b6;
			};
			jule::Str _264_name = _1d7de7d31_BytePtrToStr(((jule::U8*)((*(_224_dirent)).d_name)));;
			jule::Ptr<_1d828ee75_Status> _278_stat = ({
				auto except = static__1d828bb42_Of(_1daede4b8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1517_path; (*it++) = _264_name; __jule_collection; })));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_1d828aeb5_DirEntry>>>{.error=except.error};
				} jule::Ptr<_1d828ee75_Status>(nullptr);});
			});;
			{ jule::Slice<jule::Ptr<_1d828aeb5_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(jule::new_ptr<_1d828aeb5_DirEntry>(_1d828aeb5_DirEntry{._field_Name=_264_name, ._field_Stat=_278_stat})); };
		}
	_iter_next_1aa6a77b6:;
	}
	_iter_end_1aa6a77b6:;;
	_1d7e08dec_Closedir(_177_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_1d828aeb5_DirEntry>>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__1daee2862_Create(jule::Str _4019_path) {
	jule::Slice<jule::U8> _443_s = _1d7de80b7_StrToBytes(_4019_path);;
	if ((_1d7e09804_Mkdir((&(_443_s[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1d8289238_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__1daee2a93_Remove(jule::Str _5319_path) {
	jule::Slice<jule::U8> _543_s = _1d7de80b7_StrToBytes(_5319_path);;
	if ((_1d7e09abd_Rmdir((&(_543_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1d8289238_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}








inline jule::Bool _1d828cd85_File_eq(_1d828cd85_File *_self_, _1d828cd85_File _other_) {
	return 
		(_self_->_field_handle == _other_._field_handle);
}

inline jule::Exceptional<jule::Ptr<_1d828cd85_File>> static__1d8289e1a_Open(jule::Str _2017_path, jule::I64 _2028_flag, jule::I64 _2041_mode) {
	jule::Slice<jule::U8> _213_s = _1d7de80b7_StrToBytes(_2017_path);;
	jule::I64 _223_handle = _1d7e0810a_Open((&(_213_s[0LL])), _2028_flag, _2041_mode);;
	if ((_223_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1d828cd85_File>>{.error=jule::Any(_1d8289238_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_1d828cd85_File>>{.result=static__1d828d2d6_New(static_cast<jule::Uintptr>(_223_handle))};;
}



inline jule::VoidExceptional static__1d828a14b_Remove(jule::Str _3319_path) {
	jule::Slice<jule::U8> _343_s = _1d7de80b7_StrToBytes(_3319_path);;
	if ((_1d7e09d87_Unlink((&(_343_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1d8289238_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _1d828a5d0_Write(_1d828cd85_File* _self_, jule::Slice<jule::U8> _4821_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_4821_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_1d806707c_handleRW(&(_4821_buf));
	__jule_func_result=_1d7e2537a_Write(static_cast<jule::I64>((*(_self_))._field_handle), (&(_4821_buf[0LL])), static_cast<jule::U64>(_4821_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_1d8289238_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I64> _1d828a921_Read(_1d828cd85_File* _self_, jule::Slice<jule::U8> _6924_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_6924_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_1d806707c_handleRW(&(_6924_buf));
	__jule_func_result=_1d7e24ae9_Read(static_cast<jule::I64>((*(_self_))._field_handle), (&(_6924_buf[0LL])), static_cast<jule::U64>(_6924_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_1d8289238_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Ptr<_1d828cd85_File> static__1d828d2d6_New(jule::Uintptr _4516_handle) {
	return jule::new_ptr<_1d828cd85_File>(_1d828cd85_File{._field_handle=_4516_handle});;
}



inline jule::Exceptional<jule::Ptr<_1d828cd85_File>> static__1d828d5a0_Create(jule::Str _5519_path) {
	return static__1d8289e1a_Open(_5519_path, static_cast<jule::I64>(1538LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1d828d869_Read(jule::Str _6717_path) {
	jule::Ptr<_1d828ee75_Status> _683_s = ({
		auto except = static__1d828bb42_Of(_6717_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_1d828ee75_Status>(nullptr);});
	});;
	if ((!(_1d8290618_IsReg(_683_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0)};
	};
	jule::I64 _737_sz = static_cast<jule::I64>(_1d829089e_Size(_683_s));;
	if ((_737_sz != static_cast<jule::I64>(_1d829089e_Size(_683_s)))) {
		_737_sz=0LL;
	};
	if ((_737_sz < 512LLU)) {
		_737_sz=512LLU;
	};
	jule::Ptr<_1d828cd85_File> _867_f = ({
		auto except = static__1d8289e1a_Open(_6717_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_1d828cd85_File>(nullptr);});
	});;
	jule::Slice<jule::U8> _877_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_737_sz, _737_sz); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _887_n = 0LL;;
	while ((_887_n < _737_sz)) {
		{
			jule::I64 _904_rn = ({
				auto except = _1d828a921_Read(_867_f.ptr(), _877_buf.slice(_887_n));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
				} 0;});
			});;
			if ((_904_rn == 0LL)) {
				goto _iter_end_1aa6b3580;
			};
			_887_n+=_904_rn;
		}
	_iter_next_1aa6b3580:;
	}
	_iter_end_1aa6b3580:;;
	({
		auto except = _1d828e44c_Close(_867_f);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_877_buf.slice(0LL, _887_n)};;
}



inline jule::VoidExceptional static__1d828dc10_Write(jule::Str _10518_path, jule::Slice<jule::U8> _10529_data, jule::I64 _10543_perm) {
	jule::Ptr<_1d828cd85_File> _1067_f = ({
		auto except = static__1d8289e1a_Open(_10518_path, static_cast<jule::I64>(1537LL), _10543_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_1d828cd85_File>(nullptr);});
	});;
	jule::I64 _1077_n = 0LL;;
	while ((_1077_n < _10529_data.len())) {
		{
			_1077_n+=({
				auto except = _1d828a5d0_Write(_1067_f.ptr(), _10529_data.slice(_1077_n));
				(except.ok()) ? (except.result) : ({{

					return jule::VoidExceptional{.error=std::move(except.error)};
				} 0;});
			});
		}
	_iter_next_1aa6b8992:;
	}
	_iter_end_1aa6b8992:;;
	return _1d828e44c_Close(_1067_f);
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1d828e44c_Close(_1d828cd85_File* _self_) {
	if ((_1d7e24ec3_Close(static_cast<jule::I64>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1d8289238_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}








inline jule::Bool _1d828ee75_Status_eq(_1d828ee75_Status *_self_, _1d828ee75_Status _other_) {
	return 
		(_self_->_field_mode == _other_._field_mode) &&
		(_self_->_field_size == _self_->_field_size);
}

inline jule::Exceptional<jule::Ptr<_1d828ee75_Status>> static__1d828bb42_Of(jule::Str _1215_path) {
	if ((_1215_path).empty()) {
		return jule::Exceptional<jule::Ptr<_1d828ee75_Status>>{.error=jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0)};
	};
	struct stat _167_handle = (struct stat){};;
	jule::Slice<jule::U8> _173_s = _1d7de80b7_StrToBytes(_1215_path);;
	jule::I64 _183_code = _1d7e07bcb_Stat((&(_173_s[0LL])), (&(_167_handle)));;
	if ((_183_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1d828ee75_Status>>{.error=jule::Any(_1d8289238_getLastFsError(), &__jule_any_type0)};
	};
	jule::Ptr<_1d828ee75_Status> _227_stat = jule::new_ptr<_1d828ee75_Status>(_1d828ee75_Status{._field_mode=0LL, ._field_size=0});;
	(*_227_stat.alloc)._field_size=_167_handle.st_size;
	if (((_167_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*_227_stat.alloc)._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_167_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*_227_stat.alloc)._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_1d828ee75_Status>>{.result=_227_stat};;
}



inline jule::Bool _1d8290382_IsDir(_1d828ee75_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _1d8290618_IsReg(_1d828ee75_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _1d829089e_Size(_1d828ee75_Status* _self_) {
	return (*(_self_))._field_size;;
}








inline jule::Bool _1d92555aa_cmdAttrs_eq(_1d92555aa_cmdAttrs *_self_, _1d92555aa_cmdAttrs _other_) {
	return 
		(_self_->_field_pid == _other_._field_pid);
}






inline jule::Bool _1d9144ab5_Log_eq(_1d9144ab5_Log *_self_, _1d9144ab5_Log _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Text == _self_->_field_Text) &&
		(_self_->_field_Line == _self_->_field_Line) &&
		(_self_->_field_Suggestion == _self_->_field_Suggestion);
}






inline jule::Bool _1d949ac2e_floatInfo_eq(_1d949ac2e_floatInfo *_self_, _1d949ac2e_floatInfo _other_) {
	return 
		(_self_->_field_mantbits == _other_._field_mantbits) &&
		(_self_->_field_expbits == _self_->_field_expbits) &&
		(_self_->_field_bias == _self_->_field_bias);
}










inline jule::Bool _1c0057250_leftCheat_eq(_1c0057250_leftCheat *_self_, _1c0057250_leftCheat _other_) {
	return 
		(_self_->_field_delta == _other_._field_delta) &&
		(_self_->_field_cutoff == _self_->_field_cutoff);
}






inline jule::Bool _1c0057c67_decimal_eq(_1c0057c67_decimal *_self_, _1c0057c67_decimal _other_) {
	return 
		_1aa882496_arrayCmp(_self_->_field_d.begin(), _other_._field_d.begin(), 800) &&
		(_self_->_field_nd == _self_->_field_nd) &&
		(_self_->_field_dp == _self_->_field_dp) &&
		(_self_->_field_neg == _self_->_field_neg) &&
		(_self_->_field_trunc == _self_->_field_trunc);
}

inline jule::Bool _1c004e6cb_set(_1c0057c67_decimal* _self_, jule::Slice<jule::U8> _23819_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _2397_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_2397_i >= _23819_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23819_s[_2397_i] == '+')) {
			_case_begin_1aaa72686:;
			{
				(_2397_i)++;
			}
		}
		else if ((_23819_s[_2397_i] == '-')) {
			_case_begin_1aaa7281d:;
			{
				(*(_self_))._field_neg=true;
				(_2397_i)++;
			}
		}
		_match_end_1aaa72620:;
	};
	jule::Bool _2567_sawdot = false;;
	jule::Bool _2577_sawdigits = false;;
	for (; (_2397_i < _23819_s.len()); (_2397_i)++) {
		{
			{
				
				if ((_23819_s[_2397_i] == '_')) {
					_case_begin_1aaa7426a:;
					{
						goto _iter_next_1aaa739ea;
					}
				}
				else if ((_23819_s[_2397_i] == '.')) {
					_case_begin_1aaa74314:;
					{
						if (_2567_sawdot) {
							return __jule_func_result;;
						};
						_2567_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1aaa739ea;
					}
				}
				else if ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9'))) {
					_case_begin_1aaa7437a:;
					{
						_2577_sawdigits=true;
						if (((_23819_s[_2397_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1aaa739ea;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23819_s[_2397_i];
							((*(_self_))._field_nd)++;
						} else if ((_23819_s[_2397_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1aaa739ea;
					}
				}
				_match_end_1aaa74138:;
			};
			goto _iter_end_1aaa739ea;
		}
	_iter_next_1aaa739ea:;
	}
	_iter_end_1aaa739ea:;;
	if ((!(_2577_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_2567_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_2397_i < _23819_s.len()) && (_1c0049bc1_lower(_23819_s[_2397_i]) == 'e'))) {
		(_2397_i)++;
		if ((_2397_i >= _23819_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _3028_esign = 1LL;;
		if ((_23819_s[_2397_i] == '+')) {
			(_2397_i)++;
		} else if ((_23819_s[_2397_i] == '-')) {
			(_2397_i)++;
			_3028_esign=-1LL;
		};
		if ((((_2397_i >= _23819_s.len()) || (_23819_s[_2397_i] < '0')) || (_23819_s[_2397_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _3128_e = 0LL;;
		for (; ((_2397_i < _23819_s.len()) && ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9')) || (_23819_s[_2397_i] == '_'))); (_2397_i)++) {
			{
				if ((_23819_s[_2397_i] == '_')) {
					goto _iter_next_1aaa7a194;
				};
				if ((_3128_e < 10000LL)) {
					_3128_e=(((_3128_e * 10LL) + static_cast<jule::I64>(_23819_s[_2397_i])) - '0');
				};
			}
		_iter_next_1aaa7a194:;
		}
		_iter_end_1aaa7a194:;;
		(*(_self_))._field_dp+=(_3128_e * _3028_esign);
	};
	if ((_2397_i != _23819_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1c004ea1c_floatBits(_1c0057c67_decimal* _self_, _1d949ac2e_floatInfo* _33226_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _3337_exp = 0LL;;
	jule::U64 _3347_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1aaa88bdb;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1aaa87c40;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1aaa88bdb;
	};
	_3337_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _3598_n = 0LL;;
			if (((*(_self_))._field_dp >= _1c004e368_powtab.len())) {
				_3598_n=27LL;
			} else {
				_3598_n=_1c004e368_powtab[(*(_self_))._field_dp];
			};
			_1c005840a_shift(_self_, (-(_3598_n)));
			_3337_exp+=_3598_n;
		}
	_iter_next_1aaa80551:;
	}
	_iter_end_1aaa80551:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _3698_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1c004e368_powtab.len())) {
				_3698_n=27LL;
			} else {
				_3698_n=_1c004e368_powtab[(-((*(_self_))._field_dp))];
			};
			_1c005840a_shift(_self_, _3698_n);
			_3337_exp-=_3698_n;
		}
	_iter_next_1aaa7da9e:;
	}
	_iter_end_1aaa7da9e:;;
	(_3337_exp)--;
	if ((_3337_exp < ((*(_33226_flt))._field_bias + 1LL))) {
		jule::I64 _3864_n = (((*(_33226_flt))._field_bias + 1LL) - _3337_exp);;
		_1c005840a_shift(_self_, (-(_3864_n)));
		_3337_exp+=_3864_n;
	};
	if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))) {
		goto _julec_label_1aaa87c40;
	};
	_1c005840a_shift(_self_, static_cast<jule::I64>((jule::U64)(1LL + (*(_33226_flt))._field_mantbits)));
	_3347_mant=_1c0058eaa_roundedInteger(_self_);
	if ((_3347_mant == ({ jule::U64 __jule_x = 2LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
		_3347_mant=(_3347_mant >> 1LLU);
		(_3337_exp)++;
		if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))) {
			goto _julec_label_1aaa87c40;
		};
	};
	if (((_3347_mant & ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) == 0LLU)) {
		_3337_exp=(*(_33226_flt))._field_bias;
	};
	goto _julec_label_1aaa88bdb;
	_julec_label_1aaa87c40:;
	_3347_mant=0LLU;
	_3337_exp=static_cast<jule::I64>((jule::U64)((jule::U64)(({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU) + static_cast<jule::U64>((*(_33226_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1aaa88bdb:;
	jule::U64 _4227_bits = (_3347_mant & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_4227_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_3337_exp - (*(_33226_flt))._field_bias) & static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))); jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if ((*(_self_))._field_neg) {
		_4227_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	__jule_func_result.__jule_result_arg0 = _4227_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1c0058152_assign(_1c0057c67_decimal* _self_, jule::U64 _15126_v) {
	jule::Array<jule::U8,24> _15211_buf = ({ auto __jule_collection = jule::Array<jule::U8,24>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1557_n = 0LL;;
	while ((_15126_v > 0LLU)) {
		{
			jule::U64 _1574_v1 = (_15126_v / 10LLU);;
			_15126_v-=(jule::U64)(10LLU * _1574_v1);
			_15211_buf[_1557_n]=static_cast<jule::U8>((jule::U64)(_15126_v + '0'));
			(_1557_n)++;
			_15126_v=_1574_v1;
		}
	_iter_next_1aaa8b45d:;
	}
	_iter_end_1aaa8b45d:;;
	(*(_self_))._field_nd=0LL;
	(_1557_n)--;
	for (; (_1557_n >= 0LL); (_1557_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15211_buf[_1557_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1aaa8bdcb:;
	}
	_iter_end_1aaa8bdcb:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1c00595b5_trim(_self_);
}



inline void _1c005840a_shift(_1c0057c67_decimal* _self_, jule::I64 _17625_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1aaa8dd56:;
		}
		else if ((_17625_k > 0LL)) {
			_case_begin_1aaa8de00:;
			{
				while ((_17625_k > 60LL)) {
					{
						_1c005a110_leftShift(_self_, 60LLU);
						_17625_k-=60LL;
					}
				_iter_next_1aaa8ea05:;
				}
				_iter_end_1aaa8ea05:;;
				_1c005a110_leftShift(_self_, static_cast<jule::U64>(_17625_k));
			}
		}
		else if ((_17625_k < 0LL)) {
			_case_begin_1aaa8de66:;
			{
				while ((_17625_k < -60LL)) {
					{
						_1c00598a1_rightShift(_self_, 60LLU);
						_17625_k+=60LL;
					}
				_iter_next_1aaa8e928:;
				}
				_iter_end_1aaa8e928:;;
				_1c00598a1_rightShift(_self_, static_cast<jule::U64>((-(_17625_k))));
			}
		}
		_match_end_1aaa8dbe1:;
	};
}



inline void _1c00586b3_roundDown(_1c0057c67_decimal* _self_, jule::I64 _19625_nd) {
	if (((_19625_nd < 0LL) || (_19625_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19625_nd;
	_1c00595b5_trim(_self_);
}



inline void _1c005896b_roundUp(_1c0057c67_decimal* _self_, jule::I64 _20523_nd) {
	if (((_20523_nd < 0LL) || (_20523_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _2117_i = (_20523_nd - 1LL);;
	for (; (_2117_i >= 0LL); (_2117_i)--) {
		{
			jule::U8 _2134_c = (*(_self_))._field_d[_2117_i];;
			if ((_2134_c < '9')) {
				((*(_self_))._field_d[_2117_i])++;
				(*(_self_))._field_nd=(_2117_i + 1LL);
				return;;
			};
		}
	_iter_next_1aaa92db0:;
	}
	_iter_end_1aaa92db0:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1c0058c24_round(_1c0057c67_decimal* _self_, jule::I64 _23221_nd) {
	if (((_23221_nd < 0LL) || (_23221_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1c005a484_shouldRoundUp(_self_, _23221_nd)) {
		_1c005896b_roundUp(_self_, _23221_nd);
	} else {
		_1c00586b3_roundDown(_self_, _23221_nd);
	};
}



inline jule::U64 _1c0058eaa_roundedInteger(_1c0057c67_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _2497_i = 0LL;;
	jule::U64 _2507_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2497_i < (*(_self_))._field_dp) && (_2497_i < (*(_self_))._field_nd)); (_2497_i)++) {
		{
			_2507_n=(jule::U64)((jule::U64)(_2507_n * 10LLU) + static_cast<jule::U64>((jule::U8)((*(_self_))._field_d[_2497_i] - '0')));
		}
	_iter_next_1aaa95d19:;
	}
	_iter_end_1aaa95d19:;;
	for (; (_2497_i < (*(_self_))._field_dp); (_2497_i)++) {
		{
			_2507_n*=10LLU;
		}
	_iter_next_1aaa97d1b:;
	}
	_iter_end_1aaa97d1b:;;
	if (_1c005a484_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_2507_n)++;
	};
	return _2507_n;;
}







inline jule::Ptr<_1c006a461_Const> static__1c006a8d4_NewI64(jule::I64 _1619_x) {
	return jule::new_ptr<_1c006a461_Const>(_1c006a461_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1619_x, &__jule_any_type1)});;
}



inline jule::Ptr<_1c006a461_Const> static__1c006ab9d_NewU64(jule::U64 _1919_x) {
	return jule::new_ptr<_1c006a461_Const>(_1c006a461_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1919_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1c006a461_Const> static__1c006ae67_NewBool(jule::Bool _2220_x) {
	return jule::new_ptr<_1c006a461_Const>(_1c006a461_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2220_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1c006a461_Const> static__1c006b231_NewStr(jule::Str _2519_x) {
	return jule::new_ptr<_1c006a461_Const>(_1c006a461_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2519_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1c006a461_Const> static__1c006b4ea_NewF64(jule::F64 _2819_x) {
	return jule::new_ptr<_1c006a461_Const>(_1c006a461_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2819_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1c006a461_Const> static__1c006b709_NewNil(void) {
	return jule::new_ptr<_1c006a461_Const>(_1c006a461_Const{._field_Kind=jule::Str(), ._field_data=nullptr});;
}



inline jule::I64 _1c006bd69_ReadI64(_1c006a461_Const* _self_) {
	if ((!(_1c006e465_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1);;
}



inline jule::U64 _1c006c100_ReadU64(_1c006a461_Const* _self_) {
	if ((!(_1c006e6eb_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2);;
}



inline jule::Bool _1c006c386_ReadBool(_1c006a461_Const* _self_) {
	if ((!(_1c006e982_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _1c006c61c_ReadStr(_1c006a461_Const* _self_) {
	if ((!(_1c006ec18_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _1c006c8a3_ReadF64(_1c006a461_Const* _self_) {
	if ((!(_1c006ee9e_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5);;
}



inline jule::I64 _1c006cb39_AsI64(_1c006a461_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1aab182dc:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aab18c38:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aab18c9e:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1aab18793:;
			{
				return 0LL;;
			}
		}
		_match_end_1aab185ea:;
	};
}



inline jule::U64 _1c006cdc0_AsU64(_1c006a461_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aab19882:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1aab1a5a8:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aab1a61e:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1aab19d5a:;
			{
				return 0LLU;;
			}
		}
		_match_end_1aab19ce4:;
	};
}



inline jule::F64 _1c006d156_AsF64(_1c006a461_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aab1c115:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1aab1b1e1:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aab1be06:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_1aab1b6a8:;
			{
				return 0LL;;
			}
		}
		_match_end_1aab1b642:;
	};
}



inline void _1c006d40e_SetI64(_1c006a461_Const* _self_, jule::I64 _13822_x) {
	(*(_self_))._field_data=jule::Any(_13822_x, &__jule_any_type1);
}



inline void _1c006d6b7_SetU64(_1c006a461_Const* _self_, jule::U64 _14122_x) {
	(*(_self_))._field_data=jule::Any(_14122_x, &__jule_any_type2);
}



inline void _1c006d970_SetBool(_1c006a461_Const* _self_, jule::Bool _14423_x) {
	(*(_self_))._field_data=jule::Any(_14423_x, &__jule_any_type3);
}



inline void _1c006dc28_SetStr(_1c006a461_Const* _self_, jule::Str _14722_x) {
	(*(_self_))._field_data=jule::Any(_14722_x, &__jule_any_type4);
}



inline void _1c006ded1_SetF64(_1c006a461_Const* _self_, jule::F64 _15022_x) {
	(*(_self_))._field_data=jule::Any(_15022_x, &__jule_any_type5);
}



inline jule::Bool _1c006e465_IsI64(_1c006a461_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1aab20a0e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aab20c40:;
			{
				return false;;
			}
		}
		_match_end_1aab20bc9:;
	};
}



inline jule::Bool _1c006e6eb_IsU64(_1c006a461_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aab2159d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aab20d72:;
			{
				return false;;
			}
		}
		_match_end_1aab20d0b:;
	};
}



inline jule::Bool _1c006e982_IsBool(_1c006a461_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1aab219dd:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aab21ec7:;
			{
				return false;;
			}
		}
		_match_end_1aab21e61:;
	};
}



inline jule::Bool _1c006ec18_IsStr(_1c006a461_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1aab2246c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aab22956:;
			{
				return false;;
			}
		}
		_match_end_1aab228e0:;
	};
}



inline jule::Bool _1c006ee9e_IsF64(_1c006a461_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aab22deb:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aab233d5:;
			{
				return false;;
			}
		}
		_match_end_1aab2336e:;
	};
}



inline jule::Bool _1c0070235_IsNil(_1c006a461_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1c00708b7_And(_1c006a461_Const* _self_, _1c006a461_Const _23815_x) {
	{
		
		if ((_1c006e982_IsBool(_self_) && _1c006e982_IsBool(&_23815_x))) {
			_case_begin_1aab2787e:;
			{
				return (_1c006c386_ReadBool(_self_) && _1c006c386_ReadBool(&_23815_x));;
			}
		}
		else {
			_case_begin_1aab27818:;
			{
				return false;;
			}
		}
		_match_end_1aab273c8:;
	};
}



inline jule::Bool _1c0070c08_Or(_1c006a461_Const* _self_, _1c006a461_Const _24914_x) {
	{
		
		if ((_1c006e982_IsBool(_self_) && _1c006e982_IsBool(&_24914_x))) {
			_case_begin_1aab28b7c:;
			{
				return (_1c006c386_ReadBool(_self_) || _1c006c386_ReadBool(&_24914_x));;
			}
		}
		else {
			_case_begin_1aab28363:;
			{
				return false;;
			}
		}
		_match_end_1aab28275:;
	};
}



inline jule::Bool _1c0071049_Eq(_1c006a461_Const* _self_, _1c006a461_Const _26014_x) {
	{
		
		if (_1c0070235_IsNil(_self_)) {
			_case_begin_1aab29ee1:;
			{
				return _1c0070235_IsNil(&_26014_x);;
			}
		}
		else if (_1c006e982_IsBool(_self_)) {
			_case_begin_1aab2a057:;
			{
				return (_1c006e982_IsBool(&_26014_x) && (_1c006c386_ReadBool(_self_) == _1c006c386_ReadBool(&_26014_x)));;
			}
		}
		else if (_1c006ec18_IsStr(_self_)) {
			_case_begin_1aab2a0bd:;
			{
				return (_1c006ec18_IsStr(&_26014_x) && (_1c006c61c_ReadStr(_self_) == _1c006c61c_ReadStr(&_26014_x)));;
			}
		}
		else if (_1c006e465_IsI64(_self_)) {
			_case_begin_1aab2a145:;
			{
				return (_1c006bd69_ReadI64(_self_) == _1c006cb39_AsI64(&_26014_x));;
			}
		}
		else if (_1c006e6eb_IsU64(_self_)) {
			_case_begin_1aab2a1bc:;
			{
				return (_1c006c100_ReadU64(_self_) == _1c006cdc0_AsU64(&_26014_x));;
			}
		}
		else if (_1c006ee9e_IsF64(_self_)) {
			_case_begin_1aab2a365:;
			{
				return (_1c006c8a3_ReadF64(_self_) == _1c006d156_AsF64(&_26014_x));;
			}
		}
		else {
			_case_begin_1aab29650:;
			{
				return false;;
			}
		}
		_match_end_1aab29562:;
	};
}



inline jule::Bool _1c007138a_Lt(_1c006a461_Const* _self_, _1c006a461_Const _28714_x) {
	{
		
		if (_1c006ec18_IsStr(_self_)) {
			_case_begin_1aab2dc1a:;
			{
				return (_1c006ec18_IsStr(&_28714_x) && (_1c006c61c_ReadStr(_self_) < _1c006c61c_ReadStr(&_28714_x)));;
			}
		}
		else if (_1c006e465_IsI64(_self_)) {
			_case_begin_1aab2dc81:;
			{
				return (_1c006bd69_ReadI64(_self_) < _1c006cb39_AsI64(&_28714_x));;
			}
		}
		else if (_1c006e6eb_IsU64(_self_)) {
			_case_begin_1aab2dce7:;
			{
				return (_1c006c100_ReadU64(_self_) < _1c006cdc0_AsU64(&_28714_x));;
			}
		}
		else if (_1c006ee9e_IsF64(_self_)) {
			_case_begin_1aab2dd6e:;
			{
				return (_1c006c8a3_ReadF64(_self_) < _1c006d156_AsF64(&_28714_x));;
			}
		}
		else {
			_case_begin_1aab2a9a3:;
			{
				return false;;
			}
		}
		_match_end_1aab2a8c6:;
	};
}



inline jule::Bool _1c00716cb_LtEq(_1c006a461_Const* _self_, _1c006a461_Const _31016_x) {
	{
		
		if (_1c006ec18_IsStr(_self_)) {
			_case_begin_1aab31921:;
			{
				return (_1c006ec18_IsStr(&_31016_x) && (_1c006c61c_ReadStr(_self_) <= _1c006c61c_ReadStr(&_31016_x)));;
			}
		}
		else if (_1c006e465_IsI64(_self_)) {
			_case_begin_1aab31987:;
			{
				return (_1c006bd69_ReadI64(_self_) <= _1c006cb39_AsI64(&_31016_x));;
			}
		}
		else if (_1c006e6eb_IsU64(_self_)) {
			_case_begin_1aab319ed:;
			{
				return (_1c006c100_ReadU64(_self_) <= _1c006cdc0_AsU64(&_31016_x));;
			}
		}
		else if (_1c006ee9e_IsF64(_self_)) {
			_case_begin_1aab31a75:;
			{
				return (_1c006c8a3_ReadF64(_self_) <= _1c006d156_AsF64(&_31016_x));;
			}
		}
		else {
			_case_begin_1aab2e5cd:;
			{
				return false;;
			}
		}
		_match_end_1aab2e501:;
	};
}



inline jule::Bool _1c0071a1c_Gt(_1c006a461_Const* _self_, _1c006a461_Const _33314_x) {
	{
		
		if (_1c006ec18_IsStr(_self_)) {
			_case_begin_1aab34627:;
			{
				return (_1c006ec18_IsStr(&_33314_x) && (_1c006c61c_ReadStr(_self_) > _1c006c61c_ReadStr(&_33314_x)));;
			}
		}
		else if (_1c006e465_IsI64(_self_)) {
			_case_begin_1aab3468d:;
			{
				return (_1c006bd69_ReadI64(_self_) > _1c006cb39_AsI64(&_33314_x));;
			}
		}
		else if (_1c006e6eb_IsU64(_self_)) {
			_case_begin_1aab34704:;
			{
				return (_1c006c100_ReadU64(_self_) > _1c006cdc0_AsU64(&_33314_x));;
			}
		}
		else if (_1c006ee9e_IsF64(_self_)) {
			_case_begin_1aab3477b:;
			{
				return (_1c006c8a3_ReadF64(_self_) > _1c006d156_AsF64(&_33314_x));;
			}
		}
		else {
			_case_begin_1aab322d4:;
			{
				return false;;
			}
		}
		_match_end_1aab32207:;
	};
}



inline jule::Bool _1c0071d5d_GtEq(_1c006a461_Const* _self_, _1c006a461_Const _35616_x) {
	{
		
		if (_1c006ec18_IsStr(_self_)) {
			_case_begin_1aab3732d:;
			{
				return (_1c006ec18_IsStr(&_35616_x) && (_1c006c61c_ReadStr(_self_) >= _1c006c61c_ReadStr(&_35616_x)));;
			}
		}
		else if (_1c006e465_IsI64(_self_)) {
			_case_begin_1aab37394:;
			{
				return (_1c006bd69_ReadI64(_self_) >= _1c006cb39_AsI64(&_35616_x));;
			}
		}
		else if (_1c006e6eb_IsU64(_self_)) {
			_case_begin_1aab3740a:;
			{
				return (_1c006c100_ReadU64(_self_) >= _1c006cdc0_AsU64(&_35616_x));;
			}
		}
		else if (_1c006ee9e_IsF64(_self_)) {
			_case_begin_1aab37482:;
			{
				return (_1c006c8a3_ReadF64(_self_) >= _1c006d156_AsF64(&_35616_x));;
			}
		}
		else {
			_case_begin_1aab34eda:;
			{
				return false;;
			}
		}
		_match_end_1aab34e0d:;
	};
}



inline jule::Bool _1c007219e_Add(_1c006a461_Const* _self_, _1c006a461_Const _37719_x) {
	{
		
		if (_1c006ec18_IsStr(_self_)) {
			_case_begin_1aab3a034:;
			{
				if ((!(_1c006ec18_IsStr(&_37719_x)))) {
					return false;;
				};
				_1c006dc28_SetStr(_self_, (_1c006c61c_ReadStr(_self_) + _1c006c61c_ReadStr(&_37719_x)));
			}
		}
		else if (_1c006ee9e_IsF64(_self_)) {
			_case_begin_1aab3a09a:;
			{
				_1c006ded1_SetF64(_self_, (_1c006c8a3_ReadF64(_self_) + _1c006d156_AsF64(&_37719_x)));
			}
		}
		else if (_1c006e465_IsI64(_self_)) {
			_case_begin_1aab3a111:;
			{
				if (_1c006ee9e_IsF64(&_37719_x)) {
					_1c006ded1_SetF64(_self_, (_1c006d156_AsF64(_self_) + _1c006c8a3_ReadF64(&_37719_x)));
				} else {
					_1c006d40e_SetI64(_self_, (_1c006bd69_ReadI64(_self_) + _1c006cb39_AsI64(&_37719_x)));
				};
			}
		}
		else if (_1c006e6eb_IsU64(_self_)) {
			_case_begin_1aab3a188:;
			{
				if (_1c006ee9e_IsF64(&_37719_x)) {
					_1c006ded1_SetF64(_self_, (_1c006d156_AsF64(_self_) + _1c006c8a3_ReadF64(&_37719_x)));
				} else {
					_1c006d6b7_SetU64(_self_, (jule::U64)(_1c006c100_ReadU64(_self_) + _1c006cdc0_AsU64(&_37719_x)));
				};
			}
		}
		else {
			_case_begin_1aab37be1:;
			{
				return false;;
			}
		}
		_match_end_1aab37b14:;
	};
	return true;;
}



inline jule::Bool _1c00724e0_Sub(_1c006a461_Const* _self_, _1c006a461_Const _40619_x) {
	{
		
		if (_1c006ee9e_IsF64(_self_)) {
			_case_begin_1aab3ed5d:;
			{
				_1c006ded1_SetF64(_self_, (_1c006c8a3_ReadF64(_self_) - _1c006d156_AsF64(&_40619_x)));
			}
		}
		else if (_1c006e465_IsI64(_self_)) {
			_case_begin_1aab3edc4:;
			{
				if (_1c006ee9e_IsF64(&_40619_x)) {
					_1c006ded1_SetF64(_self_, (_1c006d156_AsF64(_self_) - _1c006c8a3_ReadF64(&_40619_x)));
				} else {
					_1c006d40e_SetI64(_self_, (_1c006bd69_ReadI64(_self_) - _1c006cb39_AsI64(&_40619_x)));
				};
			}
		}
		else if (_1c006e6eb_IsU64(_self_)) {
			_case_begin_1aab3ee3a:;
			{
				if (_1c006ee9e_IsF64(&_40619_x)) {
					_1c006ded1_SetF64(_self_, (_1c006d156_AsF64(_self_) - _1c006c8a3_ReadF64(&_40619_x)));
				} else {
					_1c006d6b7_SetU64(_self_, (jule::U64)(_1c006c100_ReadU64(_self_) - _1c006cdc0_AsU64(&_40619_x)));
				};
			}
		}
		else {
			_case_begin_1aab3e599:;
			{
				return false;;
			}
		}
		_match_end_1aab3e49a:;
	};
	return true;;
}



inline jule::Bool _1c0072831_Mul(_1c006a461_Const* _self_, _1c006a461_Const _43019_x) {
	{
		
		if (_1c006ee9e_IsF64(_self_)) {
			_case_begin_1aab43c74:;
			{
				_1c006ded1_SetF64(_self_, (_1c006c8a3_ReadF64(_self_) * _1c006d156_AsF64(&_43019_x)));
			}
		}
		else if (_1c006e465_IsI64(_self_)) {
			_case_begin_1aab43cda:;
			{
				if (_1c006ee9e_IsF64(&_43019_x)) {
					_1c006ded1_SetF64(_self_, (_1c006d156_AsF64(_self_) * _1c006c8a3_ReadF64(&_43019_x)));
				} else {
					_1c006d40e_SetI64(_self_, (_1c006bd69_ReadI64(_self_) * _1c006cb39_AsI64(&_43019_x)));
				};
			}
		}
		else if (_1c006e6eb_IsU64(_self_)) {
			_case_begin_1aab43d51:;
			{
				if (_1c006ee9e_IsF64(&_43019_x)) {
					_1c006ded1_SetF64(_self_, (_1c006d156_AsF64(_self_) * _1c006c8a3_ReadF64(&_43019_x)));
				} else {
					_1c006d6b7_SetU64(_self_, (jule::U64)(_1c006c100_ReadU64(_self_) * _1c006cdc0_AsU64(&_43019_x)));
				};
			}
		}
		else {
			_case_begin_1aab4334a:;
			{
				return false;;
			}
		}
		_match_end_1aab4325c:;
	};
	return true;;
}



inline jule::Bool _1c0072b72_Div(_1c006a461_Const* _self_, _1c006a461_Const _45819_x) {
	{
		
		if (_1c006ee9e_IsF64(_self_)) {
			_case_begin_1aab47b79:;
			{
				jule::F64 _4614_l = _1c006d156_AsF64(&_45819_x);;
				if ((_4614_l == 0LL)) {
					return false;;
				};
				_1c006ded1_SetF64(_self_, ({ jule::F64 __jule_x = _1c006c8a3_ReadF64(_self_); jule::F64 __jule_y = _4614_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1c006e465_IsI64(_self_)) {
			_case_begin_1aab47be0:;
			{
				jule::F64 _4674_l = _1c006d156_AsF64(&_45819_x);;
				if ((_4674_l == 0LL)) {
					return false;;
				};
				_1c006ded1_SetF64(_self_, ({ jule::F64 __jule_x = _1c006d156_AsF64(_self_); jule::F64 __jule_y = _4674_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1c006e6eb_IsU64(_self_)) {
			_case_begin_1aab47c56:;
			{
				jule::F64 _4734_l = _1c006d156_AsF64(&_45819_x);;
				if ((_4734_l == 0LL)) {
					return false;;
				};
				_1c006ded1_SetF64(_self_, ({ jule::F64 __jule_x = _1c006d156_AsF64(_self_); jule::F64 __jule_y = _4734_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else {
			_case_begin_1aab47250:;
			{
				return false;;
			}
		}
		_match_end_1aab47162:;
	};
	return true;;
}



inline jule::Bool _1c0072eb3_Mod(_1c006a461_Const* _self_, _1c006a461_Const _48719_x) {
	{
		
		if (_1c006e465_IsI64(_self_)) {
			_case_begin_1aab4ba5c:;
			{
				jule::I64 _4904_l = _1c006cb39_AsI64(&_48719_x);;
				if ((_4904_l == 0LL)) {
					return false;;
				};
				_1c006d40e_SetI64(_self_, ({ jule::I64 __jule_x = _1c006bd69_ReadI64(_self_); jule::I64 __jule_y = _4904_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x % __jule_y)); }));
			}
		}
		else if (_1c006e6eb_IsU64(_self_)) {
			_case_begin_1aab4be69:;
			{
				jule::U64 _4964_l = _1c006cdc0_AsU64(&_48719_x);;
				if ((_4964_l == 0LLU)) {
					return false;;
				};
				_1c006d6b7_SetU64(_self_, ({ jule::U64 __jule_x = _1c006c100_ReadU64(_self_); jule::U64 __jule_y = _4964_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x % __jule_y)); }));
			}
		}
		else {
			_case_begin_1aab4b9d5:;
			{
				return false;;
			}
		}
		_match_end_1aab4b8c5:;
	};
	return true;;
}



inline jule::Bool _1c0073304_BitwiseAnd(_1c006a461_Const* _self_, _1c006a461_Const _50926_x) {
	{
		
		if (_1c006e465_IsI64(_self_)) {
			_case_begin_1aab4e8c8:;
			{
				_1c006d40e_SetI64(_self_, (_1c006bd69_ReadI64(_self_) & _1c006cb39_AsI64(&_50926_x)));
			}
		}
		else if (_1c006e6eb_IsU64(_self_)) {
			_case_begin_1aab4ecd5:;
			{
				_1c006d6b7_SetU64(_self_, (_1c006c100_ReadU64(_self_) & _1c006cdc0_AsU64(&_50926_x)));
			}
		}
		else {
			_case_begin_1aab4e851:;
			{
				return false;;
			}
		}
		_match_end_1aab4e741:;
	};
	return true;;
}



inline jule::Bool _1c0073645_BitwiseOr(_1c006a461_Const* _self_, _1c006a461_Const _52325_x) {
	{
		
		if (_1c006e465_IsI64(_self_)) {
			_case_begin_1aab51699:;
			{
				_1c006d40e_SetI64(_self_, (_1c006bd69_ReadI64(_self_) | _1c006cb39_AsI64(&_52325_x)));
			}
		}
		else if (_1c006e6eb_IsU64(_self_)) {
			_case_begin_1aab51aa6:;
			{
				_1c006d6b7_SetU64(_self_, (_1c006c100_ReadU64(_self_) | _1c006cdc0_AsU64(&_52325_x)));
			}
		}
		else {
			_case_begin_1aab51622:;
			{
				return false;;
			}
		}
		_match_end_1aab51512:;
	};
	return true;;
}



inline jule::Bool _1c0073986_Xor(_1c006a461_Const* _self_, _1c006a461_Const _53719_x) {
	{
		
		if (_1c006e465_IsI64(_self_)) {
			_case_begin_1aab5346a:;
			{
				_1c006d40e_SetI64(_self_, (_1c006bd69_ReadI64(_self_) ^ _1c006cb39_AsI64(&_53719_x)));
			}
		}
		else if (_1c006e6eb_IsU64(_self_)) {
			_case_begin_1aab53877:;
			{
				_1c006d6b7_SetU64(_self_, (_1c006c100_ReadU64(_self_) ^ _1c006cdc0_AsU64(&_53719_x)));
			}
		}
		else {
			_case_begin_1aab533e3:;
			{
				return false;;
			}
		}
		_match_end_1aab532d3:;
	};
	return true;;
}



inline jule::Bool _1c0073cc7_Lshift(_1c006a461_Const* _self_, _1c006a461_Const _55122_x) {
	{
		
		if (_1c006e465_IsI64(_self_)) {
			_case_begin_1aab5523b:;
			{
				jule::I64 _5544_l = _1c006cb39_AsI64(_self_);;
				if ((_5544_l < 0LL)) {
					jule::U64 _5565_r = _1c006cdc0_AsU64(&_55122_x);;
					_1c006d40e_SetI64(_self_, ({ jule::I64 __jule_x = _5544_l; jule::U64 __jule_y = _5565_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
				} else {
					_1c007447b_lshiftUnsig(_self_, &(_55122_x));
				};
			}
		}
		else if (_1c006e6eb_IsU64(_self_)) {
			_case_begin_1aab55648:;
			{
				_1c007447b_lshiftUnsig(_self_, &(_55122_x));
			}
		}
		else {
			_case_begin_1aab551b4:;
			{
				return false;;
			}
		}
		_match_end_1aab550a4:;
	};
	return true;;
}



inline jule::Bool _1c0074118_Rshift(_1c006a461_Const* _self_, _1c006a461_Const _57122_x) {
	{
		
		if (_1c006e465_IsI64(_self_)) {
			_case_begin_1aab577c1:;
			{
				jule::I64 _5744_l = _1c006cb39_AsI64(_self_);;
				if ((_5744_l < 0LL)) {
					jule::U64 _5765_r = _1c006cdc0_AsU64(&_57122_x);;
					_1c006d40e_SetI64(_self_, ({ jule::I64 __jule_x = _5744_l; jule::U64 __jule_y = _5765_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
				} else {
					_1c00747ab_rshiftUnsig(_self_, &(_57122_x));
				};
			}
		}
		else if (_1c006e6eb_IsU64(_self_)) {
			_case_begin_1aab57bcd:;
			{
				_1c00747ab_rshiftUnsig(_self_, &(_57122_x));
			}
		}
		else {
			_case_begin_1aab57749:;
			{
				return false;;
			}
		}
		_match_end_1aab5764a:;
	};
	return true;;
}








inline jule::Bool _1a7b69b05_Token_eq(_1a7b69b05_Token *_self_, _1a7b69b05_Token _other_) {
	return 
		(_self_->_field_File == _other_._field_File) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Id == _self_->_field_Id);
}

inline jule::U8 _1a7b69eac_Prec(_1a7b69b05_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1aabb829e:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1aabb7c93:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1aabb7d09:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1aabb8315:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1aabb838c:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1aabb77cb:;
			{
				return 0LLU;;
			}
		}
		_match_end_1aabb7ba5:;
	};
}







inline void _1a7b707dc_Fill(_1a7b7038b_File* _self_, jule::Slice<jule::U8> _1724_data) {
	(*(_self_))._field_Data=_1724_data;
}



inline jule::Str _1a7b70a73_Dir(_1a7b7038b_File* _self_) {
	return _1daee01ab_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1a7b70d09_Name(_1a7b7038b_File* _self_) {
	return _1daedecd2_Base((*(_self_))._field_Path);;
}



inline jule::Str _1a7b713d1_GetRow(_1a7b7038b_File* _self_, jule::I64 _3818_row) {
	jule::I64 _397_n = 0LL;;
	jule::I64 _407_lineStart = 0LL;;
	jule::I64 _417_i = 0LL;;
	for (; (_417_i < (*(_self_))._field_Data.len()); (_417_i)++) {
		{
			if (((*(_self_))._field_Data[_417_i] != '\n')) {
				goto _iter_next_1aabbda57;
			};
			(_397_n)++;
			if ((_397_n == _3818_row)) {
				return __jule_bytesToStr((*(_self_))._field_Data.slice(_407_lineStart, _417_i));;
			};
			_407_lineStart=(_417_i + 1LL);
		}
	_iter_next_1aabbda57:;
	}
	_iter_end_1aabbda57:;;
	return jule::Str();;
}








inline jule::Bool _1a7b724e2_kindPair_eq(_1a7b724e2_kindPair *_self_, _1a7b724e2_kindPair _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind) &&
		(_self_->_field_id == _self_->_field_id);
}





inline void _1a7b78a8c_pushErr(_1a7b784c6_lex* _self_, jule::Str _44723_fmt, jule::Slice<jule::Any> _44736_args) {
	{ jule::Slice<_1d9144ab5_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a7b73290_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44723_fmt, _44736_args)); };
}



inline void _1a7b790ed_lex(_1a7b784c6_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1a7b7b320_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1a7b69b05_Token> _4628_token = _1a7b7c80a_token(_self_);;
			if (((*(_4628_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1a7b69b05_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_4628_token); };
			};
		}
	_iter_next_1aabeba96:;
	}
	_iter_end_1aabeba96:;;
}



inline jule::Str _1a7b7943e_id(_1a7b784c6_lex* _self_, jule::Slice<jule::U8>* _47119_ln) {
	if (((*(_47119_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4753_r;
	jule::I64 _47510_i;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d806264e_DecodeRune((*(_47119_ln)));
		_4753_r = __jule_assign_result.__jule_result_arg0;
		_47510_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4753_r != '_') && (!(_1a7b6d334_IsLetter(_4753_r))))) {
		return jule::Str();;
	};
	while ((_47510_i < (*(_47119_ln)).len())) {
		{
			jule::I32 _4814_pr;
			jule::I64 _4818_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d806264e_DecodeRune((*(_47119_ln)).slice(_47510_i));
				_4814_pr = __jule_assign_result.__jule_result_arg0;
				_4818_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_4814_pr != '_') && (!(_1a7b6d7a7_IsDecimal(static_cast<jule::U8>(_4814_pr))))) && (!(_1a7b6d334_IsLetter(_4814_pr))))) {
				(*(_self_))._field_pos+=_47510_i;
				return __jule_bytesToStr((*(_47119_ln)).slice(0LL, _47510_i));;
			};
			_47510_i+=_4818_n;
		}
	_iter_next_1aabeec20:;
	}
	_iter_end_1aabeec20:;;
	(*(_self_))._field_pos+=(*(_47119_ln)).len();
	return __jule_bytesToStr((*(_47119_ln)));;
}



inline jule::Slice<jule::U8> _1a7b796c5_resume(_1a7b784c6_lex* _self_) {
	jule::I64 _4967_i = (*(_self_))._field_pos;;
	for (; (_4967_i < (*((*(_self_))._field_file))._field_Data.len()); (_4967_i)++) {
		{
			jule::I32 _4984_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_Data[_4967_i]);;
			if (_1a7b6cd39_IsSpace(_4984_r)) {
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _4984_r };
					
					if (_match_expr == '\n') {
						_case_begin_1aac04054:;
						{
							_1a7b7b320_newLine(_self_);
						}
					}
					else {
						_case_begin_1aac03828:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1aac03b03:;
				};
				goto _iter_next_1aabee956;
			};
			jule::I64 _5108_j = _4967_i;;
			for (; (_5108_j < (*(*(_self_))._field_file.alloc)._field_Data.len()); (_5108_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_Data[_5108_j] == '\n')) {
						goto _iter_end_1aac033e9;
					};
				}
			_iter_next_1aac033e9:;
			}
			_iter_end_1aac033e9:;;
			return (*(*(_self_))._field_file.alloc)._field_Data.slice(_4967_i, _5108_j);;
		}
	_iter_next_1aabee956:;
	}
	_iter_end_1aabee956:;;
	return nullptr;;
}



inline void _1a7b7997d_lexLineComment(_1a7b784c6_lex* _self_, jule::Ptr<_1a7b69b05_Token>* _52135_token) {
	jule::I64 _5223_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5254_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if (((_5254_r == '\n') || (_5254_r == '\r'))) {
				goto _iter_end_1aac0662d;
			};
		}
	_iter_next_1aac0662d:;
	}
	_iter_end_1aac0662d:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52135_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52135_token))))._field_Kind=__jule_bytesToStr((*(*(_self_))._field_file.alloc)._field_Data.slice(_5223_start, (*(_self_))._field_pos));
	};
}



inline void _1a7b79c36_lexRangeComment(_1a7b784c6_lex* _self_, jule::Ptr<_1a7b69b05_Token>* _53636_token) {
	jule::I64 _5373_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5404_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_5404_r == '\r')) {
				goto _iter_next_1aac09cc4;
			};
			if ((_5404_r == '\n')) {
				_1a7b7b320_newLine(_self_);
				goto _iter_next_1aac09cc4;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_Data.len()) && (_5404_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53636_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53636_token))))._field_Kind=__jule_bytesToStr((*(*(_self_))._field_file.alloc)._field_Data.slice(_5373_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1aac09cc4:;
	}
	_iter_end_1aac09cc4:;;
	_1a7b78a8c_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("missing block comment close", 27)), jule::Slice<jule::Any>());
}



inline jule::Str _1a7b7a077_num(_1a7b784c6_lex* _self_, jule::Slice<jule::U8>* _56420_txt) {
	jule::Str __jule_func_result;
	if (((*(_56420_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1a7b76cdd_hexNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1aac1198a;
	};
	__jule_func_result=_1a7b76b12_octalNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1aac1198a;
	};
	__jule_func_result=_1a7b753a2_binaryNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1aac1198a;
	};
	__jule_func_result=_1a7b750d8_commonNum(_56420_txt);
	_julec_label_1aac1198a:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1a7b7a3b8_escapeSeq(_1a7b784c6_lex* _self_, jule::Slice<jule::U8>* _58626_txt) {
	jule::Str _5877_seq = jule::Str();;
	if (((*(_58626_txt)).len() < 2LL)) {
		goto _julec_label_1aac15791;
	};
	{
		auto &_match_expr{ (*(_58626_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1aac13508:;
			{
				(*(_self_))._field_pos+=2LL;
				return __jule_bytesToStr((*(_58626_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1aac1356e:;
			{
				_5877_seq=_1a7b77409_bigUnicodePointEscape(_58626_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1aac131d9:;
			{
				_5877_seq=_1a7b776c3_littleUnicodePointEscape(_58626_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1aac13250:;
			{
				_5877_seq=_1a7b7798c_hexByteEscape(_58626_txt);
			}
		}
		else {
			_case_begin_1aac129ad:;
			{
				_5877_seq=_1a7b77c56_byteEscape(_58626_txt);
			}
		}
		_match_end_1aac13063:;
	};
	_julec_label_1aac15791:;
	if ((_5877_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1a7b78a8c_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("invalid escape sequence", 23)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_5877_seq.len();
	return _5877_seq;;
}



inline jule::Str _1a7b7a7b4_getRune(_1a7b784c6_lex* _self_, jule::Slice<jule::U8>* _61624_txt, jule::Bool _61637_raw) {
	if (((!(_61637_raw)) && ((*(_61624_txt))[0LL] == '\\'))) {
		return _1a7b7a3b8_escapeSeq(_self_, _61624_txt);;
	};
	jule::I32 _6203_r;
	jule::I64 _6206_n;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d806264e_DecodeRune((*(_61624_txt)));
		_6203_r = __jule_assign_result.__jule_result_arg0;
		_6206_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_6206_n;
	return __jule_strFromRune(_6203_r);;
}



inline jule::Str _1a7b7ab05_lexRune(_1a7b784c6_lex* _self_, jule::Slice<jule::U8>* _62524_txt) {
	_1daed18b7_StrBuilder _6267_run = static__1daed1bb4_New(8LL);;
	_1daeda96a_WriteByte(&_6267_run, '\'');
	((*(_self_))._field_column)++;
	jule::I64 _6297_n = 0LL;;
	jule::I64 _6307_i = 1LL;;
	for (; (_6307_i < (*(_62524_txt)).len()); (_6307_i)++) {
		{
			if (((*(_62524_txt))[_6307_i] == '\r')) {
				goto _iter_next_1aac1e404;
			};
			if (((*(_62524_txt))[_6307_i] == '\n')) {
				_1a7b78a8c_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is not finished", 20)), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1a7b7b320_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _6424_part = (*(_62524_txt)).slice(_6307_i);;
			jule::Str _6434_r = _1a7b7a7b4_getRune(_self_, &(_6424_part), false);;
			_1daeda6b2_WriteStr(&_6267_run, _6434_r);
			(*(_self_))._field_column+=_1d8064442_RuneCountStr(_6434_r);
			if (_6434_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1aac1e404;
			};
			if ((_6434_r.len() > 1LL)) {
				_6307_i+=(_6434_r.len() - 1LL);
			};
			(_6297_n)++;
		}
	_iter_next_1aac1e404:;
	}
	_iter_end_1aac1e404:;;
	if ((_6297_n == 0LL)) {
		_1a7b78a8c_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is cannot empty", 20)), jule::Slice<jule::Any>());
	} else if ((_6297_n > 1LL)) {
		_1a7b78a8c_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is should be single", 24)), jule::Slice<jule::Any>());
	};
	return _1daedaea9_Str(&_6267_run);;
}



inline jule::Str _1a7b7ad8b_lexStr(_1a7b784c6_lex* _self_) {
	_1daed18b7_StrBuilder _6667_s = static__1daed1bb4_New(16LL);;
	jule::U8 _6673_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6693_raw = (_6673_mark == '`');;
	_1daeda96a_WriteByte(&_6667_s, _6673_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_Data.len())) {
		{
			jule::U8 _6744_ch = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_6744_ch == '\r')) {
				goto _iter_next_1aac25251;
			};
			if ((_6744_ch == '\n')) {
				_1a7b7b320_newLine(_self_);
				if ((!(_6693_raw))) {
					_1a7b78a8c_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("string is not finished", 22)), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _6868_part = (*(*(_self_))._field_file.alloc)._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _6874_r = _1a7b7a7b4_getRune(_self_, &(_6868_part), _6693_raw);;
			_1daeda6b2_WriteStr(&_6667_s, _6874_r);
			(*(_self_))._field_column+=_1d8064442_RuneCountStr(_6874_r);
			if ((_6744_ch == _6673_mark)) {
				goto _iter_end_1aac25251;
			};
		}
	_iter_next_1aac25251:;
	}
	_iter_end_1aac25251:;;
	return _1daedaea9_Str(&_6667_s);;
}



inline void _1a7b7b320_newLine(_1a7b784c6_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1a7b7b881_isOp(_1a7b784c6_lex* _self_, jule::Slice<jule::U8>* _70721_txt, jule::Str _70734_kind, jule::U64 _70745_id, jule::Ptr<_1a7b69b05_Token>* _70763_t) {
	if ((!(_1a7b73658_bytesHasPrefix(_70721_txt, _70734_kind)))) {
		return false;;
	};
	(*((*(_70763_t))))._field_Kind=_70734_kind;
	(*((*(_70763_t))))._field_Id=_70745_id;
	(*(_self_))._field_pos+=_70734_kind.len();
	return true;;
}



inline jule::Bool _1a7b7bc7c_lexBasicOps(_1a7b784c6_lex* _self_, jule::Slice<jule::U8> _71727_txt, jule::Ptr<_1a7b69b05_Token>* _71745_tok) {
	{
		auto expr = &(_1a7b72c51_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac2b90b:;
		if (it != expr_end) {
			_1a7b724e2_kindPair *_71810_pair = it;
			{
				if (_1a7b7b881_isOp(_self_, &(_71727_txt), (*(_71810_pair))._field_kind, (*(_71810_pair))._field_id, _71745_tok)) {
					return true;;
				};
			}
			_iter_next_1aac2b90b:;
			++it;
			goto _iter_begin_1aac2b90b;
		}
		_iter_end_1aac2b90b:;
	};
	return false;;
}



inline jule::Bool _1a7b7c178_lexId(_1a7b784c6_lex* _self_, jule::Slice<jule::U8>* _72622_txt, jule::Ptr<_1a7b69b05_Token>* _72640_t) {
	jule::Str _7273_lex = _1a7b7943e_id(_self_, _72622_txt);;
	if ((_7273_lex).empty()) {
		return false;;
	};
	(*((*(_72640_t))))._field_Kind=_7273_lex;
	(*((*(_72640_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1a7b7c574_lexNum(_1a7b784c6_lex* _self_, jule::Slice<jule::U8>* _73623_txt, jule::Ptr<_1a7b69b05_Token>* _73641_t) {
	jule::Str _7373_lex = _1a7b7a077_num(_self_, _73623_txt);;
	if ((_7373_lex).empty()) {
		return false;;
	};
	(*((*(_73641_t))))._field_Kind=_7373_lex;
	(*((*(_73641_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_1a7b69b05_Token> _1a7b7c80a_token(_1a7b784c6_lex* _self_) {
	jule::Ptr<_1a7b69b05_Token> _7487_t = jule::new_ptr<_1a7b69b05_Token>(_1a7b69b05_Token{._field_File=(*(_self_))._field_file, ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str(), ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _7533_txt = _1a7b796c5_resume(_self_);;
	if ((_7533_txt == nullptr)) {
		return _7487_t;;
	};
	(*(_7487_t))._field_Column=(*(_self_))._field_column;
	(*_7487_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_1a7b7c574_lexNum(_self_, &(_7533_txt), &(_7487_t))) {
			_case_begin_1aac33abc:;
			{
				goto _match_end_1aac31977;
			}
		}
		else if ((_7533_txt[0LL] == '\'')) {
			_case_begin_1aac325d2:;
			{
				(*_7487_t.alloc)._field_Kind=_1a7b7ab05_lexRune(_self_, &(_7533_txt));
				(*_7487_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7487_t;;
			}
		}
		else if (((_7533_txt[0LL] == '\"') || (_7533_txt[0LL] == '`'))) {
			_case_begin_1aac32648:;
			{
				(*_7487_t.alloc)._field_Kind=_1a7b7ad8b_lexStr(_self_);
				(*_7487_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7487_t;;
			}
		}
		else if (_1a7b73658_bytesHasPrefix(&(_7533_txt), static_cast<jule::Str>(jule::Str::lit("//", 2)))) {
			_case_begin_1aac326ae:;
			{
				_1a7b7997d_lexLineComment(_self_, &(_7487_t));
				return _7487_t;;
			}
		}
		else if (_1a7b73658_bytesHasPrefix(&(_7533_txt), static_cast<jule::Str>(jule::Str::lit("/*", 2)))) {
			_case_begin_1aac32725:;
			{
				_1a7b79c36_lexRangeComment(_self_, &(_7487_t));
				return _7487_t;;
			}
		}
		else if (_1a7b7bc7c_lexBasicOps(_self_, _7533_txt, &(_7487_t))) {
			_case_begin_1aac3278b:;
			{
				goto _match_end_1aac31977;
			}
		}
		else if (_1a7b7c178_lexId(_self_, &(_7533_txt), &(_7487_t))) {
			_case_begin_1aac32802:;
			{
				{
					auto expr = &(_1a7b72921_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aac37b15:;
					if (it != expr_end) {
						_1a7b724e2_kindPair *_78511_pair = it;
						{
							if (((*(_78511_pair))._field_kind == (*_7487_t.alloc)._field_Kind)) {
								(*_7487_t.alloc)._field_Id=(*(_78511_pair))._field_id;
								goto _iter_end_1aac37b15;
							};
						}
						_iter_next_1aac37b15:;
						++it;
						goto _iter_begin_1aac37b15;
					}
					_iter_end_1aac37b15:;
				};
			}
		}
		else {
			_case_begin_1aac3256b:;
			{
				jule::I32 _7924_r;
				jule::I64 _7927_sz;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d806264e_DecodeRune(_7533_txt);
					_7924_r = __jule_assign_result.__jule_result_arg0;
					_7927_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1a7b78a8c_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("undefined token: @", 18)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7924_r, &__jule_any_type6); __jule_collection; }));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_7927_sz;
				return _7487_t;;
			}
		}
		_match_end_1aac31977:;
	};
	(*(_self_))._field_column+=_1d8064442_RuneCountStr((*_7487_t.alloc)._field_Kind);
	return _7487_t;;
}












inline jule::Bool _1a7b7e0ae_Node_eq(_1a7b7e0ae_Node *_self_, _1a7b7e0ae_Node _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1a7b800b0_TypeDecl_eq(_1a7b800b0_TypeDecl *_self_, _1a7b800b0_TypeDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}


















inline jule::Bool _1a7b85eb7_SptrTypeDecl_eq(_1a7b85eb7_SptrTypeDecl *_self_, _1a7b85eb7_SptrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}






inline jule::Bool _1a7b8634c_SlcTypeDecl_eq(_1a7b8634c_SlcTypeDecl *_self_, _1a7b8634c_SlcTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}










inline jule::Bool _1a7b86946_PtrTypeDecl_eq(_1a7b86946_PtrTypeDecl *_self_, _1a7b86946_PtrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Bool _1a7b86cdc_IsUnsafe(_1a7b86946_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1a7b871d8_ArrTypeDecl_eq(_1a7b871d8_ArrTypeDecl *_self_, _1a7b871d8_ArrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem) &&
		(_self_->_field_Size == _self_->_field_Size);
}

inline jule::Bool _1a7b8757e_AutoSized(_1a7b871d8_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}








inline jule::Bool _1a7b87936_MapTypeDecl_eq(_1a7b87936_MapTypeDecl *_self_, _1a7b87936_MapTypeDecl _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1a7b89251_Expr_eq(_1a7b89251_Expr *_self_, _1a7b89251_Expr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _1a7b8951a_RangeExpr_eq(_1a7b8951a_RangeExpr *_self_, _1a7b8951a_RangeExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a7b89b25_UseExpr_eq(_1a7b89b25_UseExpr *_self_, _1a7b89b25_UseExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1a7b8a1db_LitExpr_eq(_1a7b8a1db_LitExpr *_self_, _1a7b8a1db_LitExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Value == _self_->_field_Value);
}






inline jule::Bool _1a7b8a5b5_UnsafeExpr_eq(_1a7b8a5b5_UnsafeExpr *_self_, _1a7b8a5b5_UnsafeExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a7b8aa6b_IdentExpr_eq(_1a7b8aa6b_IdentExpr *_self_, _1a7b8aa6b_IdentExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _1a7b8b30d_UnaryExpr_eq(_1a7b8b30d_UnaryExpr *_self_, _1a7b8b30d_UnaryExpr _other_) {
	return 
		(_self_->_field_Op == _other_._field_Op) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a7b8b6d7_VariadicExpr_eq(_1a7b8b6d7_VariadicExpr *_self_, _1a7b8b6d7_VariadicExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a7b8bab1_CastExpr_eq(_1a7b8bab1_CastExpr *_self_, _1a7b8bab1_CastExpr _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1a7b8c364_SubIdentExpr_eq(_1a7b8c364_SubIdentExpr *_self_, _1a7b8c364_SubIdentExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1a7b8c81a_BinaryExpr_eq(_1a7b8c81a_BinaryExpr *_self_, _1a7b8c81a_BinaryExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}





inline jule::Bool _1a7b8d332_Unhandled(_1a7b8ce7a_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1a7b8d5b8_Ignored(_1a7b8ce7a_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(*(_self_))._field_Exception.alloc)._field_Deferred);;
}








inline jule::Bool _1a7b8d970_FieldExprPair_eq(_1a7b8d970_FieldExprPair *_self_, _1a7b8d970_FieldExprPair _other_) {
	return 
		(_self_->_field_Field == _other_._field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}














inline jule::Bool _1a7b9007b_KeyValPair_eq(_1a7b9007b_KeyValPair *_self_, _1a7b9007b_KeyValPair _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val) &&
		(_self_->_field_Colon == _self_->_field_Colon);
}










inline jule::Bool _1a7b91214_IndexingExpr_eq(_1a7b91214_IndexingExpr *_self_, _1a7b91214_IndexingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1a7b91874_SlicingExpr_eq(_1a7b91874_SlicingExpr *_self_, _1a7b91874_SlicingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Start == _self_->_field_Start) &&
		(_self_->_field_To == _self_->_field_To);
}










inline jule::Bool _1a7b92127_GenericDecl_eq(_1a7b92127_GenericDecl *_self_, _1a7b92127_GenericDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Constraint == _self_->_field_Constraint);
}






inline jule::Bool _1a7b92501_LabelSt_eq(_1a7b92501_LabelSt *_self_, _1a7b92501_LabelSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1a7b928ca_GotoSt_eq(_1a7b928ca_GotoSt *_self_, _1a7b928ca_GotoSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1a7b92bc7_FallSt_eq(_1a7b92bc7_FallSt *_self_, _1a7b92bc7_FallSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token);
}






inline jule::Bool _1a7b93337_AssignLeft_eq(_1a7b93337_AssignLeft *_self_, _1a7b93337_AssignLeft _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1a7b947cd_Stmt_eq(_1a7b947cd_Stmt *_self_, _1a7b947cd_Stmt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1a7b9567a_ParamDecl_eq(_1a7b9567a_ParamDecl *_self_, _1a7b9567a_ParamDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Bool _1a7b95a32_IsSelf(_1a7b9567a_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}







inline jule::Bool _1a7b96e73_IsAnon(_1a7b96acc_FnDecl* _self_) {
	return ((*(_self_))._field_Ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}












inline jule::Bool _1a7b98161_RetSt_eq(_1a7b98161_RetSt *_self_, _1a7b98161_RetSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a7b988d1_Iter_eq(_1a7b988d1_Iter *_self_, _1a7b988d1_Iter _other_) {
	return 
		(_self_->_field_Comptime == _other_._field_Comptime) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}

inline jule::Bool _1a7b98c77_IsInf(_1a7b988d1_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}








inline jule::Bool _1a7b9920b_WhileKind_eq(_1a7b9920b_WhileKind *_self_, _1a7b9920b_WhileKind _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next) &&
		(_self_->_field_NextToken == _self_->_field_NextToken);
}

inline jule::Bool _1a7b995a2_IsWhileNext(_1a7b9920b_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1a7b99b13_RangeKind_eq(_1a7b99b13_RangeKind *_self_, _1a7b99b13_RangeKind _other_) {
	return 
		(_self_->_field_InToken == _other_._field_InToken) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1a7b99edc_BreakSt_eq(_1a7b99edc_BreakSt *_self_, _1a7b99edc_BreakSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1a7b9a3b6_ContSt_eq(_1a7b9a3b6_ContSt *_self_, _1a7b9a3b6_ContSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1a7b9a86c_If_eq(_1a7b9a86c_If *_self_, _1a7b9a86c_If _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1a7b9ac46_Else_eq(_1a7b9ac46_Else *_self_, _1a7b9ac46_Else _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}










inline jule::Bool _1a7b9b939_TypeAliasDecl_eq(_1a7b9b939_TypeAliasDecl *_self_, _1a7b9b939_TypeAliasDecl _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}


















inline jule::Bool _1a7b9d4c9_EnumItemDecl_eq(_1a7b9d4c9_EnumItemDecl *_self_, _1a7b9d4c9_EnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1a7b9e8b5_TypeEnumItemDecl_eq(_1a7b9e8b5_TypeEnumItemDecl *_self_, _1a7b9e8b5_TypeEnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}










inline jule::Bool _1a7ba02de_FieldDecl_eq(_1a7ba02de_FieldDecl *_self_, _1a7ba02de_FieldDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}


















inline jule::Bool _1a7ba2d80_Field_eq(_1a7ba2d80_Field *_self_, _1a7ba2d80_Field _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}

inline jule::Ptr<_1a7ba8061_FieldIns> _1a7ba326a_instance(jule::Ptr<_1a7ba2d80_Field> _self_) {
	return jule::new_ptr<_1a7ba8061_FieldIns>(_1a7ba8061_FieldIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=_self_, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Default=jule::Ptr<_1a7cd41ae_Data>(nullptr)});;
}








inline jule::Bool _1a7ba4d93_Operators_eq(_1a7ba4d93_Operators *_self_, _1a7ba4d93_Operators _other_) {
	return 
		(_self_->_field_Eq == _other_._field_Eq) &&
		(_self_->_field_Gt == _self_->_field_Gt) &&
		(_self_->_field_GtEq == _self_->_field_GtEq) &&
		(_self_->_field_Lt == _self_->_field_Lt) &&
		(_self_->_field_LtEq == _self_->_field_LtEq) &&
		(_self_->_field_Shl == _self_->_field_Shl) &&
		(_self_->_field_Shr == _self_->_field_Shr) &&
		(_self_->_field_Add == _self_->_field_Add) &&
		(_self_->_field_Sub == _self_->_field_Sub) &&
		(_self_->_field_Div == _self_->_field_Div) &&
		(_self_->_field_Mul == _self_->_field_Mul) &&
		(_self_->_field_Mod == _self_->_field_Mod) &&
		(_self_->_field_BitAnd == _self_->_field_BitAnd) &&
		(_self_->_field_BitOr == _self_->_field_BitOr) &&
		(_self_->_field_BitXor == _self_->_field_BitXor) &&
		(_self_->_field_Neg == _self_->_field_Neg) &&
		(_self_->_field_Pos == _self_->_field_Pos) &&
		(_self_->_field_BitNot == _self_->_field_BitNot) &&
		(_self_->_field_AddAssign == _self_->_field_AddAssign) &&
		(_self_->_field_SubAssign == _self_->_field_SubAssign) &&
		(_self_->_field_DivAssign == _self_->_field_DivAssign) &&
		(_self_->_field_MulAssign == _self_->_field_MulAssign) &&
		(_self_->_field_ModAssign == _self_->_field_ModAssign) &&
		(_self_->_field_ShlAssign == _self_->_field_ShlAssign) &&
		(_self_->_field_ShrAssign == _self_->_field_ShrAssign) &&
		(_self_->_field_BitOrAssign == _self_->_field_BitOrAssign) &&
		(_self_->_field_BitAndAssign == _self_->_field_BitAndAssign) &&
		(_self_->_field_BitXorAssign == _self_->_field_BitXorAssign);
}





inline jule::Ptr<_1a7ba8b11_StructIns> _1a7ba624b_instance(jule::Ptr<_1a7ba5ca6_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1a7ba8b11_StructIns> _1007_ins = jule::new_ptr<_1a7ba8b11_StructIns>(_1a7ba8b11_StructIns{._field_Checked=false, ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ba8061_FieldIns>>::alloc(0LL, (*_self_.alloc)._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7ba8061_FieldIns>(nullptr); __jule_collection; }), ._field_Statics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c7b178_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7c7b178_Var>(nullptr); __jule_collection; }), ._field_Methods=jule::Slice<jule::Ptr<_1a7bba8d1_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=static__1a7bc1d6b_new(), ._field_Operators=_1a7ba4d93_Operators{._field_Eq=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_Add=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_Div=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr)}});;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0549e2:;
		if (it != expr_end) {
			jule::Ptr<_1a7c7b178_Var> _10715_s = *it;
			{
				(*(_1007_ins))._field_Statics=jule::append((*_1007_ins.alloc)._field_Statics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c7b178_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a7c7b178_Var>((*(_10715_s))); __jule_collection; }));
			}
			_iter_next_1ab0549e2:;
			++it;
			goto _iter_begin_1ab0549e2;
		}
		_iter_end_1ab0549e2:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0558a0:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba2d80_Field> _11115_f = *it;
			{
				jule::Ptr<_1a7ba8061_FieldIns> _1128_f2 = _1a7ba326a_instance(_11115_f);;
				(*(_1128_f2))._field_Owner=_1007_ins;
				(*_1007_ins.alloc)._field_Fields=jule::append((*_1007_ins.alloc)._field_Fields,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ba8061_FieldIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1128_f2; __jule_collection; }));
				if ((((!((*_11115_f.alloc)._field_Mutable)) && ((*((*_11115_f.alloc)._field_Kind))._field_Kind != nullptr)) && _1a7d1d67c_Mutable((*((*(_11115_f))._field_Kind))._field_Kind))) {
					(*_1007_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_1ab0558a0:;
			++it;
			goto _iter_begin_1ab0558a0;
		}
		_iter_end_1ab0558a0:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*_1007_ins.alloc)._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*_1007_ins.alloc)._field_Methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7bba8d1_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7bba8d1_Fn>(nullptr); __jule_collection; });
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab059c06:;
			if (it != expr_end) {
				jule::Ptr<_1a7bba8d1_Fn> _12416_f = *it;
				{
					jule::Ptr<_1a7bba8d1_Fn> _1259_fins = jule::new_ptr<_1a7bba8d1_Fn>((*(_12416_f)));;
					(*_1259_fins.alloc)._field_Instances=nullptr;
					(*_1007_ins.alloc)._field_Methods=jule::append((*_1007_ins.alloc)._field_Methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7bba8d1_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1259_fins; __jule_collection; }));
				}
				_iter_next_1ab059c06:;
				++it;
				goto _iter_begin_1ab059c06;
			}
			_iter_end_1ab059c06:;
		};
	};
	return _1007_ins;;
}



inline jule::Ptr<_1a7ba8b11_StructIns> _1a7ba6559_appendInstance(_1a7ba5ca6_Struct* _self_, jule::Ptr<_1a7ba8b11_StructIns>* _13635_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab05a0ad:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba8b11_StructIns> _14215_ains = *it;
			{
				if (_1a7ba97b0_Same(_14215_ains.ptr(), (*(_13635_ins)))) {
					return _14215_ains;;
				};
			}
			_iter_next_1ab05a0ad:;
			++it;
			goto _iter_begin_1ab05a0ad;
		}
		_iter_end_1ab05a0ad:;
	};
	{ jule::Slice<jule::Ptr<_1a7ba8b11_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13635_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1a7bba8d1_Fn> _1a7ba6955_FindMethod(_1a7ba5ca6_Struct* _self_, jule::Str _15426_ident, jule::Bool _15438_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab05d600:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _15515_f = *it;
			{
				if ((((*(_15515_f))._field_Statically == _15438_statically) && ((*_15515_f.alloc)._field_Ident == _15426_ident))) {
					return _15515_f;;
				};
			}
			_iter_next_1ab05d600:;
			++it;
			goto _iter_begin_1ab05d600;
		}
		_iter_end_1ab05d600:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7c7b178_Var> _1a7ba6c96_FindStatic(_1a7ba5ca6_Struct* _self_, jule::Str _16526_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab05e931:;
		if (it != expr_end) {
			jule::Ptr<_1a7c7b178_Var> _16615_v = *it;
			{
				if (((*(_16615_v))._field_Ident == _16526_ident)) {
					return _16615_v;;
				};
			}
			_iter_next_1ab05e931:;
			++it;
			goto _iter_begin_1ab05e931;
		}
		_iter_end_1ab05e931:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7ba2d80_Field> _1a7ba70d7_FindField(_1a7ba5ca6_Struct* _self_, jule::Str _17625_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab060932:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba2d80_Field> _17715_f = *it;
			{
				if (((*(_17715_f))._field_Ident == _17625_ident)) {
					return _17715_f;;
				};
			}
			_iter_next_1ab060932:;
			++it;
			goto _iter_begin_1ab060932;
		}
		_iter_end_1ab060932:;
	};
	return nullptr;;
}



inline jule::Bool _1a7ba7428_IsImplements(_1a7ba5ca6_Struct* _self_, jule::Ptr<_1a7bce362_Trait> _18624_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab061922:;
		if (it != expr_end) {
			jule::Ptr<_1a7bce362_Trait> *_18710_it = it;
			{
				if ((_18624_t == (*(_18710_it)))) {
					return true;;
				};
			}
			_iter_next_1ab061922:;
			++it;
			goto _iter_begin_1ab061922;
		}
		_iter_end_1ab061922:;
	};
	return false;;
}



inline jule::Bool _1a7ba7769_IsUses(_1a7ba5ca6_Struct* _self_, jule::Ptr<_1a7ba5ca6_Struct> _19618_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0623a1:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba5ca6_Struct> *_19710_u = it;
			{
				while ((_19618_s == (*(_19710_u)))) {
					{
						return true;;
					}
				_iter_next_1ab062dc9:;
				}
				_iter_end_1ab062dc9:;;
			}
			_iter_next_1ab0623a1:;
			++it;
			goto _iter_begin_1ab0623a1;
		}
		_iter_end_1ab0623a1:;
	};
	return false;;
}








inline jule::Bool _1a7ba8061_FieldIns_eq(_1a7ba8061_FieldIns *_self_, _1a7ba8061_FieldIns _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}





inline jule::Str _1a7ba8eb8_Str(_1a7ba8b11_StructIns* _self_) {
	_1daed18b7_StrBuilder _2427_kind = static__1daed1bb4_New(32LL);;
	_1daeda6b2_WriteStr(&_2427_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_1daeda96a_WriteByte(&_2427_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab065ae1:;
			if (it != expr_end) {
				jule::I64 _2468_i = it - expr->begin();
				jule::Ptr<_1a7d1a3b0_InsGeneric> *_24611_g = it;
				{
					_1daeda6b2_WriteStr(&_2427_kind, _1a7d1c192_Str((*((*(_24611_g))))._field_Kind.ptr()));
					if ((_2468_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_1daeda96a_WriteByte(&_2427_kind, ',');
					};
				}
				_iter_next_1ab065ae1:;
				++it;
				_2468_i++;
				goto _iter_begin_1ab065ae1;
			}
			_iter_end_1ab065ae1:;
		};
		_1daeda96a_WriteByte(&_2427_kind, ']');
	};
	return _1daedaea9_Str(&_2427_kind);;
}



inline jule::Bool _1a7ba9309_Equal(jule::Ptr<_1a7ba8b11_StructIns> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _25818_other) {
	jule::Ptr<_1a7ba8b11_StructIns> _2593_s = _1a7d209c0_Struct(_25818_other.ptr());;
	if ((_2593_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2593_s))._field_Decl)) {
		return false;;
	};
	if (((*_self_.alloc)._field_Generics.len() != (*(_2593_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _2727_i = 0LL;;
	for (; (_2727_i < (*_self_.alloc)._field_Generics.len()); (_2727_i)++) {
		{
			if ((!(_1a7d1c4d3_Equal((*((*(_self_))._field_Generics[_2727_i]))._field_Kind, (*((*(_2593_s))._field_Generics[_2727_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1ab069e8b:;
	}
	_iter_end_1ab069e8b:;;
	return true;;
}



inline jule::Bool _1a7ba97b0_Same(_1a7ba8b11_StructIns* _self_, jule::Ptr<_1a7ba8b11_StructIns> _28616_s) {
	if ((((*(_self_))._field_Decl != (*(_28616_s))._field_Decl) || ((*_28616_s.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab06c1ad:;
		if (it != expr_end) {
			jule::I64 _2907_i = it - expr->begin();
			jule::Ptr<_1a7d1a3b0_InsGeneric> *_29010_g = it;
			{
				jule::Ptr<_1a7d1a3b0_InsGeneric> _2914_g2 = (*(_28616_s))._field_Generics[_2907_i];;
				if ((((*((*((*(_29010_g))))._field_Kind))._field_BindIdent != (*(*(_2914_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1a7d1c4d3_Equal((*((*(_29010_g))))._field_Kind, (*(_2914_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1ab06c1ad:;
			++it;
			_2907_i++;
			goto _iter_begin_1ab06c1ad;
		}
		_iter_end_1ab06c1ad:;
	};
	return true;;
}



inline jule::Ptr<_1a7bba8d1_Fn> _1a7ba9bab_FindMethod(_1a7ba8b11_StructIns* _self_, jule::Str _30126_ident, jule::Bool _30138_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab07047a:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _30215_f = *it;
			{
				if ((((*(_30215_f))._field_Statically == _30138_statically) && ((*_30215_f.alloc)._field_Ident == _30126_ident))) {
					return _30215_f;;
				};
			}
			_iter_next_1ab07047a:;
			++it;
			goto _iter_begin_1ab07047a;
		}
		_iter_end_1ab07047a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7ba8061_FieldIns> _1a7ba9eec_FindField(_1a7ba8b11_StructIns* _self_, jule::Str _31225_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0717ab:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba8061_FieldIns> _31315_f = *it;
			{
				if (((*((*(_31315_f))._field_Decl))._field_Ident == _31225_ident)) {
					return _31315_f;;
				};
			}
			_iter_next_1ab0717ab:;
			++it;
			goto _iter_begin_1ab0717ab;
		}
		_iter_end_1ab0717ab:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7c7b178_Var> _1a7baa33d_FindStatic(_1a7ba8b11_StructIns* _self_, jule::Str _32326_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab072070:;
		if (it != expr_end) {
			jule::Ptr<_1a7c7b178_Var> _32415_v = *it;
			{
				if (((*(_32415_v))._field_Ident == _32326_ident)) {
					return _32415_v;;
				};
			}
			_iter_next_1ab072070:;
			++it;
			goto _iter_begin_1ab072070;
		}
		_iter_end_1ab072070:;
	};
	return nullptr;;
}








inline jule::Bool _1a7bac928_OperandExprModel_eq(_1a7bac928_OperandExprModel *_self_, _1a7bac928_OperandExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Model == _self_->_field_Model);
}






inline jule::Bool _1a7bace23_BinaryExprModel_eq(_1a7bace23_BinaryExprModel *_self_, _1a7bace23_BinaryExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1a7bad2ec_UnaryExprModel_eq(_1a7bad2ec_UnaryExprModel *_self_, _1a7bad2ec_UnaryExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1a7bad82a_StructArgExprModel_eq(_1a7bad82a_StructArgExprModel *_self_, _1a7bad82a_StructArgExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1a7badebd_AllocStructLitExprModel_eq(_1a7badebd_AllocStructLitExprModel *_self_, _1a7badebd_AllocStructLitExprModel _other_) {
	return 
		(_self_->_field_Lit == _other_._field_Lit);
}






inline jule::Bool _1a7bae551_CastingExprModel_eq(_1a7bae551_CastingExprModel *_self_, _1a7bae551_CastingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_ExprKind == _self_->_field_ExprKind);
}














inline jule::Bool _1a7bb0783_IndexingExprModel_eq(_1a7bb0783_IndexingExprModel *_self_, _1a7bb0783_IndexingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}










inline jule::Bool _1a7bb1113_KeyValPairExprModel_eq(_1a7bb1113_KeyValPairExprModel *_self_, _1a7bb1113_KeyValPairExprModel _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1a7bb1a70_SlicingExprModel_eq(_1a7bb1a70_SlicingExprModel *_self_, _1a7bb1a70_SlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1a7bb2103_TraitSubIdentExprModel_eq(_1a7bb2103_TraitSubIdentExprModel *_self_, _1a7bb2103_TraitSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Trt == _self_->_field_Trt);
}






inline jule::Bool _1a7bb2994_StructSubIdentExprModel_eq(_1a7bb2994_StructSubIdentExprModel *_self_, _1a7bb2994_StructSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Owner == _self_->_field_Owner);
}






inline jule::Bool _1a7bb2d3a_StructStaticIdentExprModel_eq(_1a7bb2d3a_StructStaticIdentExprModel *_self_, _1a7bb2d3a_StructStaticIdentExprModel _other_) {
	return 
		(_self_->_field_Structure == _other_._field_Structure) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method);
}














inline jule::Bool _1a7bb38da_BuiltinOutCallExprModel_eq(_1a7bb38da_BuiltinOutCallExprModel *_self_, _1a7bb38da_BuiltinOutCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Debug == _self_->_field_Debug);
}






inline jule::Bool _1a7bb3cb4_BuiltinOutlnCallExprModel_eq(_1a7bb3cb4_BuiltinOutlnCallExprModel *_self_, _1a7bb3cb4_BuiltinOutlnCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Debug == _self_->_field_Debug);
}






inline jule::Bool _1a7bb418d_BuiltinNewCallExprModel_eq(_1a7bb418d_BuiltinNewCallExprModel *_self_, _1a7bb418d_BuiltinNewCallExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Init == _self_->_field_Init);
}






inline jule::Bool _1a7bb4567_BuiltinPanicCallExprModel_eq(_1a7bb4567_BuiltinPanicCallExprModel *_self_, _1a7bb4567_BuiltinPanicCallExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a7bb4a1d_BuiltinAssertCallExprModel_eq(_1a7bb4a1d_BuiltinAssertCallExprModel *_self_, _1a7bb4a1d_BuiltinAssertCallExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Log == _self_->_field_Log);
}






inline jule::Bool _1a7bb4ec4_BuiltinMakeCallExprModel_eq(_1a7bb4ec4_BuiltinMakeCallExprModel *_self_, _1a7bb4ec4_BuiltinMakeCallExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Len == _self_->_field_Len) &&
		(_self_->_field_Cap == _self_->_field_Cap);
}






inline jule::Bool _1a7bb539d_BuiltinAppendCallExprModel_eq(_1a7bb539d_BuiltinAppendCallExprModel *_self_, _1a7bb539d_BuiltinAppendCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elements == _self_->_field_Elements);
}






inline jule::Bool _1a7bb569a_BuiltinLenCallExprModel_eq(_1a7bb569a_BuiltinLenCallExprModel *_self_, _1a7bb569a_BuiltinLenCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a7bb5997_BuiltinCapCallExprModel_eq(_1a7bb5997_BuiltinCapCallExprModel *_self_, _1a7bb5997_BuiltinCapCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a7bb5d71_BuiltinDeleteCallExprModel_eq(_1a7bb5d71_BuiltinDeleteCallExprModel *_self_, _1a7bb5d71_BuiltinDeleteCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Key == _self_->_field_Key);
}






inline jule::Bool _1a7bb624a_BuiltinCopyCallExprModel_eq(_1a7bb624a_BuiltinCopyCallExprModel *_self_, _1a7bb624a_BuiltinCopyCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Src == _self_->_field_Src);
}






inline jule::Bool _1a7bb6624_BuiltinErrorCallExprModel_eq(_1a7bb6624_BuiltinErrorCallExprModel *_self_, _1a7bb6624_BuiltinErrorCallExprModel _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Err == _self_->_field_Err);
}






inline jule::Bool _1a7bb6cc8_SizeofExprModel_eq(_1a7bb6cc8_SizeofExprModel *_self_, _1a7bb6cc8_SizeofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a7bb6eb5_AlignofExprModel_eq(_1a7bb6eb5_AlignofExprModel *_self_, _1a7bb6eb5_AlignofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a7bb725c_RuneExprModel_eq(_1a7bb725c_RuneExprModel *_self_, _1a7bb725c_RuneExprModel _other_) {
	return 
		(_self_->_field_Code == _other_._field_Code);
}










inline jule::Bool _1a7bb7933_FreeExprModel_eq(_1a7bb7933_FreeExprModel *_self_, _1a7bb7933_FreeExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}










inline jule::Bool _1a7bb8e0c_Param_eq(_1a7bb8e0c_Param *_self_, _1a7bb8e0c_Param _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Ptr<_1a7bbc839_ParamIns> _1a7bb92c5_instance(jule::Ptr<_1a7bb8e0c_Param> _self_) {
	return jule::new_ptr<_1a7bbc839_ParamIns>(_1a7bbc839_ParamIns{._field_Decl=_self_, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr)});;
}



inline jule::Bool _1a7bb955b_IsSelf(_1a7bb8e0c_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1a7bb97e2_IsRef(_1a7bb8e0c_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}







inline jule::Bool _1a7bbad87_IsVoid(_1a7bba8d1_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1a7bbb11d_IsMethod(_1a7bba8d1_Fn* _self_) {
	if (((*(_self_))._field_Owner != nullptr)) {
		return true;;
	};
	if (((*(_self_))._field_Params.len() > 0LL)) {
		jule::Ptr<_1a7bb8e0c_Param> _804_p = (*(_self_))._field_Params[0LL];;
		if (_1a7bb955b_IsSelf(_804_p.ptr())) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1a7bbb3a4_IsEntryPoint(_1a7bba8d1_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1a7bbb63a_IsInit(_1a7bba8d1_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1a7bbb8c1_IsAnon(_1a7bba8d1_Fn* _self_) {
	return _1a7b6c7a6_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1a7bbbb57_AnyVar(_1a7bba8d1_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(*(_self_))._field_Result.alloc)._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1a7bbd8b2_FnIns> _1a7bbbddd_instanceForce(jule::Ptr<_1a7bba8d1_Fn> _self_) {
	jule::Ptr<_1a7bbd8b2_FnIns> _1107_ins = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::new_ptr<_1a7c1397e_Scope>(_1a7c1397e_Scope{._field_Parent=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0}), ._field_Refers=static__1a7bc1d6b_new(), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>(nullptr), ._field_reloaded=false});;
	(*(_1107_ins))._field_Params=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7bbc839_ParamIns>(nullptr); __jule_collection; });
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab07ad37:;
		if (it != expr_end) {
			jule::Ptr<_1a7bb8e0c_Param> _11715_p = *it;
			{
				(*_1107_ins.alloc)._field_Params=jule::append((*_1107_ins.alloc)._field_Params,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a7bb92c5_instance(_11715_p); __jule_collection; }));
			}
			_iter_next_1ab07ad37:;
			++it;
			goto _iter_begin_1ab07ad37;
		}
		_iter_end_1ab07ad37:;
	};
	if (((*((*_1107_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_1107_ins.alloc)._field_Result=(*((*(*((*(_1107_ins))._field_Decl))._field_Result.alloc)._field_Kind))._field_Kind;
	};
	return _1107_ins;;
}



inline jule::Ptr<_1a7bbd8b2_FnIns> _1a7bbc174_instance(jule::Ptr<_1a7bba8d1_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1a7bbbddd_instanceForce(_self_);;
}



inline jule::Ptr<_1a7bbd8b2_FnIns> _1a7bbc482_appendInstance(_1a7bba8d1_Fn* _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _13835_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1a7bbd8b2_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1a7bbd8b2_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab080ce8:;
		if (it != expr_end) {
			jule::Ptr<_1a7bbd8b2_FnIns> _15415_ains = *it;
			{
				if (_1a7bc0452_Same(_15415_ains.ptr(), (*(_13835_ins)))) {
					return _15415_ains;;
				};
			}
			_iter_next_1ab080ce8:;
			++it;
			goto _iter_begin_1ab080ce8;
		}
		_iter_end_1ab080ce8:;
	};
	{ jule::Slice<jule::Ptr<_1a7bbd8b2_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
	return nullptr;;
}








inline jule::Bool _1a7bbc839_ParamIns_eq(_1a7bbc839_ParamIns *_self_, _1a7bbc839_ParamIns _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1a7bbcbd0_Str(_1a7bbc839_ParamIns* _self_) {
	_1daed18b7_StrBuilder _1767_s = static__1daed1bb4_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_1daeda6b2_WriteStr(&_1767_s, jule::Str::lit("mut ", 4));
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Reference) {
		_1daeda6b2_WriteStr(&_1767_s, jule::Str::lit("&_:", 3));
	};
	if (_1a7bb955b_IsSelf((*(_self_))._field_Decl)) {
		if (_1a7bb97e2_IsRef((*(_self_))._field_Decl)) {
			_1daeda96a_WriteByte(&_1767_s, '&');
		};
		_1daeda6b2_WriteStr(&_1767_s, jule::Str::lit("self", 4));
		return _1daedaea9_Str(&_1767_s);;
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Variadic) {
		_1daeda6b2_WriteStr(&_1767_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_1daeda6b2_WriteStr(&_1767_s, _1a7d1c192_Str((*(_self_))._field_Kind));
	};
	return _1daedaea9_Str(&_1767_s);;
}







inline jule::Str _1a7bbdc36_Str(_1a7bbd8b2_FnIns* _self_) {
	;
	return _1a7bc0793_GetKindStr(_self_, false);;
}



inline jule::Bool _1a7bbe077_Equal(jule::Ptr<_1a7bbd8b2_FnIns> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _22818_other) {
	jule::Ptr<_1a7bbd8b2_FnIns> _2293_f = _1a7d20739_Fn(_22818_other.ptr());;
	if ((_2293_f == nullptr)) {
		return false;;
	};
	return _1a7bbe51c_EqualFn(_self_, &(_2293_f));;
}



inline jule::Bool _1a7bbe51c_EqualFn(jule::Ptr<_1a7bbd8b2_FnIns> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _23921_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_23921_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Unsafety != (*(*((*(_23921_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_1a7bbad87_IsVoid((*(_self_))._field_Decl) != _1a7bbad87_IsVoid((*((*(_23921_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool,jule::Ptr<_1a7bbc839_ParamIns>,jule::Ptr<_1a7bbc839_ParamIns>> _2493_checkParams = jule::__new_closure<jule::Bool,jule::Ptr<_1a7bbc839_ParamIns>,jule::Ptr<_1a7bbc839_ParamIns>>((void*)__jule_anon1ab08b441, nullptr, nullptr);;
	if (((*((*(_23921_f))))._field_Params.len() != (*_self_.alloc)._field_Params.len())) {
		return false;;
	};
	jule::I64 _2817_i = 0LL;;
	for (; (_2817_i < (*_self_.alloc)._field_Params.len()); (_2817_i)++) {
		{
			if ((!(_2493_checkParams((*(_self_))._field_Params[_2817_i], (*((*(_23921_f))))._field_Params[_2817_i])))) {
				return false;;
			};
		}
	_iter_next_1ab09229e:;
	}
	_iter_end_1ab09229e:;;
	if ((!(_1a7bbad87_IsVoid((*(_self_))._field_Decl)))) {
		if ((!(_1a7d1c4d3_Equal((*_self_.alloc)._field_Result, (*((*(_23921_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1a7bbe85d_equalTrait(jule::Ptr<_1a7bbd8b2_FnIns> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _29824_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_29824_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Ident != (*(*((*(_29824_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_1a7bbe51c_EqualFn(_self_, _29824_other)))) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Generics.len() != (*(*((*(_29824_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>> _1a7bbeae4_Types(_1a7bbd8b2_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1ab097e42:;
			{
				return nullptr;;
			}
		}
		else if ((_1a7d21273_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1ab097ea8:;
			{
				return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_self_))._field_Result; __jule_collection; });;
			}
		}
		else {
			_case_begin_1ab0979be:;
			{
				return (*(_1a7d21273_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1ab0978ae:;
	};
}



inline jule::Bool _1a7bbed7a_IsBuiltin(_1a7bbd8b2_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1a7bc0111_IsAnon(_1a7bbd8b2_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1a7bbb8c1_IsAnon((*(_self_))._field_Decl)));;
}



inline jule::Bool _1a7bc0452_Same(_1a7bbd8b2_FnIns* _self_, jule::Ptr<_1a7bbd8b2_FnIns> _34116_f) {
	if ((((*(_self_))._field_Decl != (*(_34116_f))._field_Decl) || ((*_34116_f.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab09ab59:;
		if (it != expr_end) {
			jule::I64 _3467_i = it - expr->begin();
			jule::Ptr<_1a7d1a3b0_InsGeneric> *_34610_g = it;
			{
				jule::Ptr<_1a7d1a3b0_InsGeneric> _3474_g2 = (*(_34116_f))._field_Generics[_3467_i];;
				if ((((*((*((*(_34610_g))))._field_Kind))._field_BindIdent != (*(*(_3474_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1a7d1c4d3_Equal((*((*(_34610_g))))._field_Kind, (*(_3474_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1ab09ab59:;
			++it;
			_3467_i++;
			goto _iter_begin_1ab09ab59;
		}
		_iter_end_1ab09ab59:;
	};
	return true;;
}



inline jule::Str _1a7bc0793_GetKindStr(_1a7bbd8b2_FnIns* _self_, jule::Bool _35822_ident) {
	_1daed18b7_StrBuilder _3597_s = static__1daed1bb4_New(32LL);;
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Unsafety)) {
		_1daeda6b2_WriteStr(&_3597_s, jule::Str::lit("unsafe ", 7));
	};
	_1daeda6b2_WriteStr(&_3597_s, jule::Str::lit("fn", 2));
	if ((_35822_ident && ((*(_self_))._field_Decl != nullptr))) {
		_1daeda96a_WriteByte(&_3597_s, ' ');
		_1daeda6b2_WriteStr(&_3597_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
	};
	_1daeda96a_WriteByte(&_3597_s, '(');
	jule::I64 _3733_n = (*(_self_))._field_Params.len();;
	if ((_3733_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab0a1a72:;
			if (it != expr_end) {
				jule::I64 _3758_i = it - expr->begin();
				jule::Ptr<_1a7bbc839_ParamIns> *_37511_p = it;
				{
					_1daeda6b2_WriteStr(&_3597_s, _1a7bbcbd0_Str((*(_37511_p)).ptr()));
					if ((_3758_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_1daeda96a_WriteByte(&_3597_s, ',');
					};
				}
				_iter_next_1ab0a1a72:;
				++it;
				_3758_i++;
				goto _iter_begin_1ab0a1a72;
			}
			_iter_end_1ab0a1a72:;
		};
	};
	_1daeda96a_WriteByte(&_3597_s, ')');
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Exceptional)) {
		_1daeda96a_WriteByte(&_3597_s, '!');
	};
	if ((((*(_self_))._field_Decl != nullptr) && (!(_1a7bbad87_IsVoid((*(_self_))._field_Decl))))) {
		_1daeda96a_WriteByte(&_3597_s, ':');
		_1daeda6b2_WriteStr(&_3597_s, _1a7d1c192_Str((*(_self_))._field_Result.ptr()));
	};
	return _1daedaea9_Str(&_3597_s);;
}







inline jule::Ptr<_1a7bc1a4c_ReferenceStack> static__1a7bc1d6b_new(void) {
	return jule::new_ptr<_1a7bc1a4c_ReferenceStack>(_1a7bc1a4c_ReferenceStack{._field_buffer=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
}



inline jule::I64 _1a7bc2267_Len(_1a7bc1a4c_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _1a7bc25a8_At(_1a7bc1a4c_ReferenceStack* _self_, jule::I64 _6818_i) {
	return (*(_self_))._field_buffer[_6818_i];;
}



inline void _1a7bc2861_Push(_1a7bc1a4c_ReferenceStack* _self_, jule::Any _7324_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7324_ref); };
}



inline jule::Bool _1abb77d1d_Exist(_1a7bc1a4c_ReferenceStack* _self_, jule::Ptr<_1a7bbd8b2_FnIns> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb79182:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((jule::Any(_7820_t, &__jule_any_type7) == (*(_7910_ref)))) {
					return true;;
				};
			}
			_iter_next_1abb79182:;
			++it;
			goto _iter_begin_1abb79182;
		}
		_iter_end_1abb79182:;
	};
	return false;;
}

inline jule::Bool _1abb8e010_Exist(_1a7bc1a4c_ReferenceStack* _self_, jule::Ptr<_1a7c7b178_Var> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb90330:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((jule::Any(_7820_t, &__jule_any_type8) == (*(_7910_ref)))) {
					return true;;
				};
			}
			_iter_next_1abb90330:;
			++it;
			goto _iter_begin_1abb90330;
		}
		_iter_end_1abb90330:;
	};
	return false;;
}

inline jule::Bool _1aa7c808a_Exist(_1a7bc1a4c_ReferenceStack* _self_, jule::Ptr<_1a7ba8b11_StructIns> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa7c9443:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((jule::Any(_7820_t, &__jule_any_type9) == (*(_7910_ref)))) {
					return true;;
				};
			}
			_iter_next_1aa7c9443:;
			++it;
			goto _iter_begin_1aa7c9443;
		}
		_iter_end_1aa7c9443:;
	};
	return false;;
}

inline jule::Bool _1ac207d81_Exist(_1a7bc1a4c_ReferenceStack* _self_, jule::Ptr<_1a7bce362_Trait> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac209190:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((jule::Any(_7820_t, &__jule_any_type10) == (*(_7910_ref)))) {
					return true;;
				};
			}
			_iter_next_1ac209190:;
			++it;
			goto _iter_begin_1ac209190;
		}
		_iter_end_1ac209190:;
	};
	return false;;
}








inline jule::Bool _1a7bc3059_Pass_eq(_1a7bc3059_Pass *_self_, _1a7bc3059_Pass _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Text == _self_->_field_Text);
}





inline void _1a7bc8504_pushErr(_1a7bc7a0e_symbolBuilder* _self_, jule::Ptr<_1a7b69b05_Token>* _33224_token, jule::Str _33239_fmt, jule::Slice<jule::Any> _33252_args) {
	{ jule::Slice<_1d9144ab5_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a7c5477d_compilerErr(_33224_token, true, _33239_fmt, _33252_args)); };
}



inline void _1a7bc8c85_pushSuggestion(_1a7bc7a0e_symbolBuilder* _self_, jule::Str _34130_fmt, jule::Slice<jule::Any> _34143_args) {
	{
		_1a7c55d34_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34130_fmt, _34143_args);
	};
}



inline jule::Bool _1a7bc9181_checkCppUseDeclPath(_1a7bc7a0e_symbolBuilder* _self_, jule::Ptr<_1a7b9d023_UseDecl>* _34536_decl, jule::Str* _34553_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3463_ext = _1daede74e_Ext((*(_34553_path)));;
	if (((!(_1d91376e0_IsValidHeaderExt(_3463_ext))) && (!(_1d91379a9_IsValidCppExt(_3463_ext))))) {
		_1a7bc8504_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid C++ extension: @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3463_ext, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d828ee75_Status> _3533_info = ({
		auto except = static__1d828bb42_Of((*(_34553_path)));
		(except.ok()) ? (except.result) : ({{
			_1a7bc8504_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_34536_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_1d828ee75_Status>(nullptr);});
	});;
	if (_1d8290382_IsDir(_3533_info.ptr())) {
		_1a7bc8504_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_34536_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a7c36793_ImportInfo> _1a7bc948e_buildCppHeaderImport(_1a7bc7a0e_symbolBuilder* _self_, jule::Ptr<_1a7b9d023_UseDecl>* _36541_decl) {
	jule::Str _3667_path = (*((*(_36541_decl))))._field_LinkPath;;
	if ((!(_1d9137415_IsStdHeaderPath((*((*(_36541_decl))))._field_LinkPath)))) {
		_3667_path=_1daede4b8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1a7b70a73_Dir((*((*((*(_36541_decl))))._field_Token))._field_File.ptr()); (*it++) = (*((*(_36541_decl))))._field_LinkPath; __jule_collection; }));
		jule::Bool _3708_ok = _1a7bc9181_checkCppUseDeclPath(_self_, _36541_decl, &(_3667_path));;
		if ((!(_3708_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1daedea18_Abs(_3667_path);
			_3667_path = __jule_assign_result.__jule_result_arg0;
			_3708_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_3708_ok))) {
			_1a7bc8504_pushErr(_self_, &((*((*(_36541_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_36541_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		};
	};
	return jule::new_ptr<_1a7c36793_ImportInfo>(_1a7c36793_ImportInfo{._field_Token=(*((*(_36541_decl))))._field_Token, ._field_Path=_3667_path, ._field_LinkPath=(*((*(_36541_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=true, ._field_Std=false, ._field_ImportAll=false, ._field_Selected=jule::Slice<jule::Ptr<_1a7b69b05_Token>>(nullptr), ._field_Package=nullptr, ._field_ModId=0});;
}



inline jule::Ptr<_1a7c36793_ImportInfo> _1a7bc97d0_buildStdImport(_1a7bc7a0e_symbolBuilder* _self_, jule::Ptr<_1a7b9d023_UseDecl>* _39335_decl) {
	jule::Str _3957_path = (*((*(_39335_decl))))._field_LinkPath.slice(5LL);;
	_3957_path=_1daec3337_Replace(_3957_path, static_cast<jule::Str>(jule::Str::lit("::", 2)), jule::Str::lit("/", 1), -1LL);
	_3957_path=_1daede4b8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1d9257eb4_PathStdlib; (*it++) = _3957_path; __jule_collection; }));
	jule::Bool _3989_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1daedea18_Abs(_3957_path);
		_3957_path = __jule_assign_result.__jule_result_arg0;
		_3989_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_3989_ok))) {
		_1a7bc8504_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1d828ee75_Status> _4053_info = ({
		auto except = static__1d828bb42_Of(_3957_path);
		(except.ok()) ? (except.result) : ({{
			_1a7bc8504_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		} jule::Ptr<_1d828ee75_Status>(nullptr);});
	});;
	if ((!(_1d8290382_IsDir(_4053_info.ptr())))) {
		_1a7bc8504_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _4153_i = (_1daebddb0_FindLast((*((*(_39335_decl))))._field_LinkPath, static_cast<jule::Str>(jule::Str::lit("::", 2))) + 1LL);;
	jule::Str _4163_ident = (*((*(_39335_decl))))._field_LinkPath.slice(_4153_i);;
	return jule::new_ptr<_1a7c36793_ImportInfo>(_1a7c36793_ImportInfo{._field_Token=(*((*(_39335_decl))))._field_Token, ._field_Path=_3957_path, ._field_LinkPath=(*((*(_39335_decl))))._field_LinkPath, ._field_Ident=_4163_ident, ._field_Alias=(*((*(_39335_decl))))._field_Alias, ._field_Duplicate=false, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39335_decl))))._field_Full, ._field_Selected=jule::Slice<jule::Ptr<_1a7b69b05_Token>>(nullptr), ._field_Package=jule::new_ptr<_1a7c396b9_Package>(_1a7c396b9_Package{._field_Files=nullptr}), ._field_ModId=0});;
}



inline jule::Ptr<_1a7c36793_ImportInfo> _1a7bc9b21_buildIdentImport(jule::Ptr<_1a7bc7a0e_symbolBuilder> _self_, jule::Ptr<_1a7b9d023_UseDecl>* _43338_decl) {
	if ((((*((*(_43338_decl))))._field_LinkPath.equal("_", 1) || (_1daebd60c_Find((*((*(_43338_decl))))._field_LinkPath, jule::Str::lit("::_::", 5)) != -1LL)) || _1daebcd15_HasSuffix((*((*(_43338_decl))))._field_LinkPath, jule::Str::lit("::_", 3)))) {
		_1a7bc8504_pushErr(_self_.ptr(), &((*((*(_43338_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("use declaration paths cannot contain blank identifier", 53)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4413_modPath = ((_1a7c33509_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a7c3256e_GetModPath((*_self_.alloc)._field_importer.data);;
	if ((_4413_modPath.len() == 0LL)) {
		_1a7bc8504_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("no module file found in current directory or any parent directory", 65)), jule::Slice<jule::Any>());
		_1a7bc8c85_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"julec mod init\" command to initialize module", 49)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4487_path = (*((*(_43338_decl))))._field_LinkPath;;
	_4487_path=_1daec3337_Replace(_4487_path, static_cast<jule::Str>(jule::Str::lit("::", 2)), jule::Str::lit("/", 1), -1LL);
	_4487_path=_1daede4b8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _4413_modPath; (*it++) = _4487_path; __jule_collection; }));
	jule::Bool _4529_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1daedea18_Abs(_4487_path);
		_4487_path = __jule_assign_result.__jule_result_arg0;
		_4529_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_4529_ok))) {
		_1a7bc8504_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1d828ee75_Status> _4593_info = ({
		auto except = static__1d828bb42_Of(_4487_path);
		(except.ok()) ? (except.result) : ({{
			_1a7bc8504_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		} jule::Ptr<_1d828ee75_Status>(nullptr);});
	});;
	if ((!(_1d8290382_IsDir(_4593_info.ptr())))) {
		_1a7bc8504_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _4693_i = (_1daebddb0_FindLast((*((*(_43338_decl))))._field_LinkPath, static_cast<jule::Str>(jule::Str::lit("::", 2))) + 1LL);;
	jule::Str _4703_ident = (*((*(_43338_decl))))._field_LinkPath.slice(_4693_i);;
	return jule::new_ptr<_1a7c36793_ImportInfo>(_1a7c36793_ImportInfo{._field_Token=(*((*(_43338_decl))))._field_Token, ._field_Path=_4487_path, ._field_LinkPath=(*((*(_43338_decl))))._field_LinkPath, ._field_Ident=_4703_ident, ._field_Alias=(*((*(_43338_decl))))._field_Alias, ._field_Duplicate=false, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43338_decl))))._field_Full, ._field_Selected=jule::Slice<jule::Ptr<_1a7b69b05_Token>>(nullptr), ._field_Package=jule::new_ptr<_1a7c396b9_Package>(_1a7c396b9_Package{._field_Files=nullptr}), ._field_ModId=0});;
}



inline jule::Ptr<_1a7c36793_ImportInfo> _1a7bc9e62_buildImport(jule::Ptr<_1a7bc7a0e_symbolBuilder> _self_, jule::Ptr<_1a7b9d023_UseDecl>* _48733_decl) {
	{
		
		if ((*((*(_48733_decl))))._field_Binded) {
			_case_begin_1ab0e361e:;
			{
				return _1a7bc948e_buildCppHeaderImport(_self_.ptr(), _48733_decl);;
			}
		}
		else if ((*((*(_48733_decl))))._field_Std) {
			_case_begin_1ab0e3a2b:;
			{
				return _1a7bc97d0_buildStdImport(_self_.ptr(), _48733_decl);;
			}
		}
		else {
			_case_begin_1ab0e35a8:;
			{
				return _1a7bc9b21_buildIdentImport(_self_, _48733_decl);;
			}
		}
		_match_end_1ab0e3498:;
	};
}



inline jule::Ptr<_1a7c36793_ImportInfo> _1a7bca2a3_findUseDecl(_1a7bc7a0e_symbolBuilder* _self_, jule::Ptr<_1a7c36793_ImportInfo>* _49828_pkg) {
	return _1a7cce011_SelectPackage((*(_self_))._field_table.ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1a7c36793_ImportInfo>>((void*)__jule_anon_1ab0e5973, jule::Ptr<__jule_anon_1ab0e5973_ctx>::make(__jule_anon_1ab0e5973_ctx{._49828_pkg=_49828_pkg}).as<jule::Uintptr>(), __jule_anon_1ab0e5973_ctx_handler));;
}



inline jule::Bool _1a7bca5e4_checkDuplicateUseDecl(_1a7bc7a0e_symbolBuilder* _self_, jule::Ptr<_1a7c36793_ImportInfo>* _50642_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7c36793_ImportInfo> _5077_lpkg = _1a7bca2a3_findUseDecl(_self_, _50642_pkg);;
	if ((_5077_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1a7bc8504_pushErr(_self_, &((*((*(_50642_pkg))))._field_Token), static_cast<jule::Str>(jule::Str::lit("use declaration duplication: @ is already used above", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_50642_pkg))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
	_1a7bc8c85_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("remove this use declaration, already used, it is safe", 53)), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1a7bca957_implImportSelections(_1a7bc7a0e_symbolBuilder* _self_, jule::Ptr<_1a7c36793_ImportInfo>* _51641_imp, jule::Ptr<_1a7b9d023_UseDecl>* _51664_decl) {
	(*((*(_51641_imp))))._field_Selected=(*((*(_51664_decl))))._field_Selected;
	{
		auto expr = &((*((*(_51641_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0e937d:;
		if (it != expr_end) {
			jule::Ptr<_1a7b69b05_Token> _51810_item = *it;
			{
				{
					auto expr = &((*((*(_51641_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab0e9c85:;
					if (it != expr_end) {
						jule::Ptr<_1a7b69b05_Token> _51911_citem = *it;
						{
							if ((_51810_item == _51911_citem)) {
								goto _iter_end_1ab0e9c85;
							} else if (((*(_51810_item))._field_Kind == (*(_51911_citem))._field_Kind)) {
								_1a7bc8504_pushErr(_self_, &(_51810_item), static_cast<jule::Str>(jule::Str::lit("duplicated selection: @ is already selected", 43)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_51810_item.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
								_1a7bc8c85_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("remove this use selection, already selected, it is safe", 55)), jule::Slice<jule::Any>());
								goto _iter_end_1ab0e9c85;
							};
						}
						_iter_next_1ab0e9c85:;
						++it;
						goto _iter_begin_1ab0e9c85;
					}
					_iter_end_1ab0e9c85:;
				};
			}
			_iter_next_1ab0e937d:;
			++it;
			goto _iter_begin_1ab0e937d;
		}
		_iter_end_1ab0e937d:;
	};
}



inline jule::Str _1a7bcac98_getAsLinkPath(jule::Ptr<_1a7bc7a0e_symbolBuilder> _self_, jule::Str _53134_path) {
	if (_1daebc991_HasPrefix(_53134_path, _1d9257eb4_PathStdlib)) {
		(_53134_path).mut_slice(_1d9257eb4_PathStdlib.len());;
		return (jule::Str::lit("std", 3) + _1daec3337_Replace(_53134_path, jule::Str::lit("/", 1), static_cast<jule::Str>(jule::Str::lit("::", 2)), -1LL));;
	};
	jule::Str _5373_root;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1daedea18_Abs(((_1a7c33509_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a7c3256e_GetModPath((*(_self_))._field_importer.data));
		_5373_root = __jule_assign_result.__jule_result_arg0;
	});
	(_53134_path).mut_slice(_5373_root.len());;
	if ((_53134_path[0LL] == 47LLU)) {
		(_53134_path).mut_slice(1LL);;
	};
	return _1daec3337_Replace(_53134_path, jule::Str::lit("/", 1), static_cast<jule::Str>(jule::Str::lit("::", 2)), -1LL);;
}



inline void _1a7bcb1b6_pushCycleError(jule::Ptr<_1a7bc7a0e_symbolBuilder> _self_, jule::Ptr<_1a7bc7a0e_symbolBuilder>* _54532_sb, jule::Str _54552_path, _1daed18b7_StrBuilder* _54568_message) {
	;
	jule::Str _5473_refersTo = _1d9145027_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7bcac98_getAsLinkPath(_self_, _1a7b70a73_Dir((*((*((*(_54532_sb))))._field_table))._field_File.ptr())), &__jule_any_type4); (*it++) = jule::Any(_1a7bcac98_getAsLinkPath(_self_, _54552_path), &__jule_any_type4); __jule_collection; }));;
	jule::Str _5513_m = _1daedaea9_Str(_54568_message);;
	_1daeda6b2_WriteStr(_54568_message, _1daebc5c8_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1daeda6b2_WriteStr(_54568_message, _5473_refersTo);
	_1daeda96a_WriteByte(_54568_message, '\n');
	_1daeda6b2_WriteStr(_54568_message, _5513_m);
}



inline void _1a7bcb5d4_pushCrossCycleError(jule::Ptr<_1a7bc7a0e_symbolBuilder> _self_, jule::Ptr<_1a7bc7a0e_symbolBuilder>* _55837_target, jule::Ptr<_1a7c36793_ImportInfo>* _55862_imp, jule::Ptr<_1a7b69b05_Token>* _55881_errorToken) {
	_1daed18b7_StrBuilder _5597_message = static__1daed1bb4_New(32LL);;
	_1a7bcb1b6_pushCycleError(_self_, &(_self_), (*((*(_55862_imp))))._field_Path, &(_5597_message));
	jule::Ptr<_1a7bc7a0e_symbolBuilder> _5637_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_1a7bc7a0e_symbolBuilder> _5647_old = _self_;;
	while (((*(_5637_owner))._field_owner != nullptr)) {
		{
			_1a7bcb1b6_pushCycleError(_self_, &((*_5647_old.alloc)._field_owner), _1a7b70a73_Dir((*((*_5647_old.alloc)._field_table))._field_File.ptr()), &(_5597_message));
			if (((*_5637_owner.alloc)._field_owner == (*(_55837_target)))) {
				_1a7bcb1b6_pushCycleError(_self_, _55837_target, _1a7b70a73_Dir((*((*(_5637_owner))._field_table))._field_File), &(_5597_message));
				goto _iter_end_1ab102ee1;
			};
			_5647_old=_5637_owner;
			_5637_owner=(*_5637_owner.alloc)._field_owner;
		}
	_iter_next_1ab102ee1:;
	}
	_iter_end_1ab102ee1:;;
	_1a7bc8504_pushErr(_self_, _55881_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in use declarations;\n@", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1daedaea9_Str(&_5597_message), &__jule_any_type4); __jule_collection; }));
}



inline jule::Bool _1a7bcb9d0_checkImportCycles(jule::Ptr<_1a7bc7a0e_symbolBuilder> _self_, jule::Ptr<_1a7c36793_ImportInfo> _58134_imp, jule::Ptr<_1a7b9d023_UseDecl>* _58153_decl) {
	if (((*(_58134_imp))._field_Path == _1a7b70a73_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1a7bc8504_pushErr(_self_, &((*((*(_58153_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7bcac98_getAsLinkPath(_self_, (*_58134_imp.alloc)._field_Path), &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	if (((*_self_.alloc)._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1a7bc7a0e_symbolBuilder> _5917_owner = (*_self_.alloc)._field_owner;;
	_julec_label_1ab107787:;
	if ((_1a7b70a73_Dir((*((*(_5917_owner))._field_table))._field_File) == (*_58134_imp.alloc)._field_Path)) {
		_1a7bcb5d4_pushCrossCycleError(_self_, &(_5917_owner), &(_58134_imp), &((*((*(_58153_decl))))._field_Token));
		return false;;
	};
	if (((*(_5917_owner))._field_owner != nullptr)) {
		_5917_owner=(*_5917_owner.alloc)._field_owner;
		goto _julec_label_1ab107787;
	};
	return true;;
}



inline void _1a7bcbded_checkPackageAccessibility(_1a7bc7a0e_symbolBuilder* _self_, jule::Ptr<_1a7b9d023_UseDecl>* _61242_decl, jule::Str* _61259_mod, jule::Str* _61270_path) {
	if (((((_1a7c33509_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a7c3256e_GetModPath((*(_self_))._field_importer.data) != (*(_61259_mod))) && _1daec1e5c_Contains((*(_61270_path)), jule::Str::lit("internal", 8)))) {
		_1a7bc8504_pushErr(_self_, &((*((*(_61242_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a7bcc2e9_importPackage(jule::Ptr<_1a7bc7a0e_symbolBuilder> _self_, jule::Ptr<_1a7c36793_ImportInfo>* _61835_imp, jule::Ptr<_1a7b9d023_UseDecl>* _61858_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_61835_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7c36793_ImportInfo> _6237_port = ((_1a7c33509_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a7c32c01_GetImport((*(_self_))._field_importer.data, (*((*(_61835_imp))))._field_Path);;
	if ((_6237_port != nullptr)) {
		(*((*(_61835_imp))))._field_Package=(*_6237_port.alloc)._field_Package;
		(*((*(_61835_imp))))._field_Duplicate=true;
		jule::Str _6284_oldMod = ((_1a7c33509_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a7c3256e_GetModPath((*_self_.alloc)._field_importer.data);;
		((_1a7c33509_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a7c322d8_SetModPath((*_self_.alloc)._field_importer.data, ((_1a7c33509_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a7c328b0_ModById((*_self_.alloc)._field_importer.data, (*((*(_61835_imp))))._field_ModId));
		_1a7bcbded_checkPackageAccessibility(_self_, _61858_decl, &(_6284_oldMod), &((*_6237_port.alloc)._field_Path));
		((_1a7c33509_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a7c322d8_SetModPath((*_self_.alloc)._field_importer.data, _6284_oldMod);
	} else {
		if ((!(_1a7bcb9d0_checkImportCycles(_self_, (*(_61835_imp)), _61858_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _6374_oldMod = ((_1a7c33509_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a7c3256e_GetModPath((*_self_.alloc)._field_importer.data);;
		__JULE_DEFER({
			((_1a7c33509_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a7c322d8_SetModPath((*_self_.alloc)._field_importer.data, _6374_oldMod);
		});;
		if ((*((*(_61835_imp))))._field_Std) {
			((_1a7c33509_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a7c322d8_SetModPath((*_self_.alloc)._field_importer.data, _1d9257eb4_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1a7b7d19b_AST>> _6428_asts;
		jule::Slice<_1d9144ab5_Log> _64218_errors;
		({
			__jule_tuple_sx_1a7b7d19b_AST__jule_tuple_s_1d9144ab5_Log __jule_assign_result = ((_1a7c33509_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a7c330ec_ImportPackage((*_self_.alloc)._field_importer.data, (*((*(_61835_imp))))._field_Path, (!((*((*(_61835_imp))))._field_Std)));
			_6428_asts = __jule_assign_result.__jule_result_arg0;
			_64218_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_64218_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64218_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1a7bcbded_checkPackageAccessibility(_self_, _61858_decl, &(_6374_oldMod), &((*((*(_61835_imp))))._field_Path));
		{
			auto expr = &(_6428_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab115bc4:;
			if (it != expr_end) {
				jule::Ptr<_1a7b7d19b_AST> _65016_ast = *it;
				{
					jule::Ptr<_1a7ccd9e4_SymbolTable> _65113_table = nullptr;;
					({
						__jule_tuple_x_1a7ccd9e4_SymbolTable__jule_tuple_s_1d9144ab5_Log __jule_assign_result = _1a7d3d23a_buildSymbols(&(_65016_ast), &((*_self_.alloc)._field_importer), _self_);
						_65113_table = __jule_assign_result.__jule_result_arg0;
						_64218_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_64218_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64218_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_61835_imp))))._field_Package))._field_Files=jule::append((*(*((*(_61835_imp))))._field_Package.alloc)._field_Files,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _65113_table; __jule_collection; }));
				}
				_iter_next_1ab115bc4:;
				++it;
				goto _iter_begin_1ab115bc4;
			}
			_iter_end_1ab115bc4:;
		};
	};
	_1a7bca957_implImportSelections(_self_, _61835_imp, _61858_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a7c36793_ImportInfo> _1a7bcc63a_importUseDecl(jule::Ptr<_1a7bc7a0e_symbolBuilder> _self_, jule::Ptr<_1a7b9d023_UseDecl>* _66535_decl) {
	jule::Ptr<_1a7c36793_ImportInfo> _6667_imp = _1a7bc9e62_buildImport(_self_, _66535_decl);;
	if ((_6667_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _6717_ok = _1a7bca5e4_checkDuplicateUseDecl(_self_, &(_6667_imp));;
	if ((!(_6717_ok))) {
		return nullptr;;
	};
	_6717_ok=_1a7bcc2e9_importPackage(_self_, &(_6667_imp), _66535_decl);
	(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*(_self_))._field_table.alloc)._field_Imports,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c36793_ImportInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6667_imp; __jule_collection; }));
	if (_6717_ok) {
		((_1a7c33509_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a7c333a5_Imported((*_self_.alloc)._field_importer.data, _6667_imp);
		return _6667_imp;;
	};
	return nullptr;;
}



inline void _1a7bcc838_importUseDecls(jule::Ptr<_1a7bc7a0e_symbolBuilder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab11b856:;
		if (it != expr_end) {
			jule::Ptr<_1a7b9d023_UseDecl> _68515_decl = *it;
			{
				_1a7bcc63a_importUseDecl(_self_, &(_68515_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_1ab11b856;
				};
			}
			_iter_next_1ab11b856:;
			++it;
			goto _iter_begin_1ab11b856;
		}
		_iter_end_1ab11b856:;
	};
}



inline void _1a7bccae1_appendNode(_1a7bc7a0e_symbolBuilder* _self_, _1a7b7e0ae_Node* _69431_node) {
	{
		auto &_match_expr{ (*(_69431_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1ab11d391:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c0e1a5_Impl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a7bc7448_buildImpl((*(_69431_node))._field_Data.cast_ptr<_1a7ba1a82_Impl>(&__jule_any_type11)); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ab11bd95:;
			{
				jule::Ptr<_1a7d1aea4_TypeAlias> _6998_ta = _1a7bc3994_buildTypeAlias((*(_69431_node))._field_Data.cast_ptr<_1a7b9b939_TypeAliasDecl>(&__jule_any_type12));;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6998_ta; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1ab11cdeb:;
			{
				jule::Ptr<_1a7ba5ca6_Struct> _7028_srct = _1a7bc4335_buildStruct((*(_69431_node))._field_Data.cast_ptr<_1a7ba0bd5_StructDecl>(&__jule_any_type13));;
				(*((*(_self_))._field_table))._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7028_srct; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ab11ce62:;
			{
				jule::Ptr<_1a7bba8d1_Fn> _7058_f = _1a7bc4ed4_buildFunc((*(_69431_node))._field_Data.cast_ptr<_1a7b96acc_FnDecl>(&__jule_any_type14));;
				(*((*(_self_))._field_table))._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7bba8d1_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7058_f; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ab11cec8:;
			{
				jule::Ptr<_1a7bce362_Trait> _7088_t = _1a7bc5831_buildTrait((*(_69431_node))._field_Data.cast_ptr<_1a7ba1422_TraitDecl>(&__jule_any_type15));;
				(*((*(_self_))._field_table))._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7bce362_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7088_t; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ab11d03e:;
			{
				jule::Ptr<_1a7c7b178_Var> _7118_v = _1a7bc6db5_buildVar((*(_69431_node))._field_Data.cast_ptr<_1a7b97c87_VarDecl>(&__jule_any_type16));;
				(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c7b178_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7118_v; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1ab11d0a5:;
			{
				jule::Ptr<_1a7bd1a6d_Enum> _7148_e = _1a7bc63ae_buildEnum((*(_69431_node))._field_Data.cast_ptr<_1a7b9e08a_EnumDecl>(&__jule_any_type17));;
				(*((*(_self_))._field_table))._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7bd1a6d_Enum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7148_e; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1ab11d87a:;
			{
				jule::Ptr<_1a7bd3278_TypeEnum> _7178_e = _1a7bc6aeb_buildTypeEnum((*(_69431_node))._field_Data.cast_ptr<_1a7ba0025_TypeEnumDecl>(&__jule_any_type18));;
				(*((*(_self_))._field_table))._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7bd3278_TypeEnum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7178_e; __jule_collection; }));
			}
		}
		else {
			_case_begin_1ab11ccdb:;
			{
				_1a7bc8504_pushErr(_self_, &((*(_69431_node))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab11cc75:;
	};
}



inline void _1a7bcccde_appendNodes(_1a7bc7a0e_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab1423d7:;
		if (it != expr_end) {
			_1a7b7e0ae_Node _72515_node = *it;
			{
				_1a7bccae1_appendNode(_self_, &(_72515_node));
			}
			_iter_next_1ab1423d7:;
			++it;
			goto _iter_begin_1ab1423d7;
		}
		_iter_end_1ab1423d7:;
	};
}



inline void _1a7bcd097_pushDirectivePass(_1a7bc7a0e_symbolBuilder* _self_, jule::Ptr<_1a7b7e4cc_Directive>* _73038_d) {
	if (((*((*(_73038_d))))._field_Args.len() == 0LL)) {
		_1a7bc8504_pushErr(_self_, &((*((*(_73038_d))))._field_Tag), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_73038_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1a7b69b05_Token> _7354_arg = (*((*(_73038_d))))._field_Args[1LL];;
		_1a7bc8504_pushErr(_self_, &(_7354_arg), static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_73038_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1a7b69b05_Token> _7393_arg = (*((*(_73038_d))))._field_Args[0LL];;
	if (((*(_7393_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1a7bc8504_pushErr(_self_, &(_7393_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_7393_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a7bc8504_pushErr(_self_, &(_7393_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,({ auto __jule_collection = jule::Slice<_1a7bc3059_Pass>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a7bc3059_Pass{._field_Token=(*((*(_73038_d))))._field_Tag, ._field_Text=(*_7393_arg.alloc)._field_Kind.slice(1LL, ((*_7393_arg.alloc)._field_Kind.len() - 1LL))}; __jule_collection; }));
}



inline void _1a7bcd295_appendTopDirectives(_1a7bc7a0e_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab149356:;
		if (it != expr_end) {
			jule::Ptr<_1a7b7e4cc_Directive> _75715_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75715_d))._field_Tag))._field_Kind };
					
					if (_match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
						_case_begin_1ab14acb4:;
						{
							_1a7bcd097_pushDirectivePass(_self_, &(_75715_d));
						}
					}
					_match_end_1ab14abd7:;
				};
			}
			_iter_next_1ab149356:;
			++it;
			goto _iter_begin_1ab149356;
		}
		_iter_end_1ab149356:;
	};
}



inline void _1a7bcd493_build(jule::Ptr<_1a7bc7a0e_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1a7ccd9e4_SymbolTable>(_1a7ccd9e4_SymbolTable{._field_File=(*((*_self_.alloc)._field_ast))._field_File, ._field_Passes=jule::Slice<_1a7bc3059_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1a7c36793_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1a7c7b178_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1a7bba8d1_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1a7bce362_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1a7bd1a6d_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1a7bd3278_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1a7c0e1a5_Impl>>(nullptr)});
	_1a7bcd295_appendTopDirectives(_self_);
	_1a7bcc838_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_1a7bcccde_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}







inline jule::Str _1a7bce75d_Str(_1a7bce362_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a7bcea9e_Equal(jule::Ptr<_1a7bce362_Trait> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _2518_other) {
	jule::Ptr<_1a7bce362_Trait> _263_trt = _1a7d20c56_Trait(_2518_other.ptr());;
	return (_self_ == _263_trt);;
}



inline jule::Ptr<_1a7bba8d1_Fn> _1a7bd0044_FindMethod(_1a7bce362_Trait* _self_, jule::Str _3426_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab14e78a:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _3515_f = *it;
			{
				if (((*(_3515_f))._field_Ident == _3426_ident)) {
					return _3515_f;;
				};
			}
			_iter_next_1ab14e78a:;
			++it;
			goto _iter_begin_1ab14e78a;
		}
		_iter_end_1ab14e78a:;
	};
	return _1a7bd06c6_findMethodInherit(_self_, &(_3426_ident));;
}



inline jule::Ptr<_1a7bba8d1_Fn> _1a7bd06c6_findMethodInherit(_1a7bce362_Trait* _self_, jule::Str* _5534_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab152958:;
		if (it != expr_end) {
			jule::Ptr<_1a7d244a7_TypeSymbol> _5615_i = *it;
			{
				if (((*(_5615_i))._field_Kind == nullptr)) {
					goto _iter_next_1ab152958;
				};
				jule::Ptr<_1a7bce362_Trait> _608_t = _1a7d20c56_Trait((*_5615_i.alloc)._field_Kind.ptr());;
				if ((_608_t != nullptr)) {
					jule::Ptr<_1a7bba8d1_Fn> _629_f2 = _1a7bd0044_FindMethod(_608_t, (*(_5534_ident)));;
					if ((_629_f2 != nullptr)) {
						return _629_f2;;
					};
				};
			}
			_iter_next_1ab152958:;
			++it;
			goto _iter_begin_1ab152958;
		}
		_iter_end_1ab152958:;
	};
	return nullptr;;
}








inline jule::Bool _1a7bd1001_EnumItem_eq(_1a7bd1001_EnumItem *_self_, _1a7bd1001_EnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Value == _self_->_field_Value);
}

inline jule::Bool _1a7bd13db_AutoExpr(_1a7bd1001_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







inline jule::Str _1a7bd1e25_Str(_1a7bd1a6d_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a7bd2266_Equal(jule::Ptr<_1a7bd1a6d_Enum> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _3818_other) {
	jule::Ptr<_1a7bd1a6d_Enum> _393_enm = _1a7d1ec00_Enum(_3818_other.ptr());;
	return (_self_ == _393_enm);;
}



inline jule::Ptr<_1a7bd1001_EnumItem> _1a7bd2695_FindItem(_1a7bd1a6d_Enum* _self_, jule::Str _4724_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab156264:;
		if (it != expr_end) {
			jule::Ptr<_1a7bd1001_EnumItem> _4815_item = *it;
			{
				if (((*(_4815_item))._field_Ident == _4724_ident)) {
					return _4815_item;;
				};
			}
			_iter_next_1ab156264:;
			++it;
			goto _iter_begin_1ab156264;
		}
		_iter_end_1ab156264:;
	};
	return nullptr;;
}








inline jule::Bool _1a7bd2ba1_TypeEnumItem_eq(_1a7bd2ba1_TypeEnumItem *_self_, _1a7bd2ba1_TypeEnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}





inline jule::Str _1a7bd35ec_Str(_1a7bd3278_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a7bd393d_Equal(jule::Ptr<_1a7bd3278_TypeEnum> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _8018_other) {
	jule::Ptr<_1a7bd3278_TypeEnum> _813_tenm = _1a7d1ee86_TypeEnum(_8018_other.ptr());;
	return (_self_ == _813_tenm);;
}



inline jule::Ptr<_1a7bd2ba1_TypeEnumItem> _1a7bd3d6c_FindItem(_1a7bd3278_TypeEnum* _self_, jule::Str _8924_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab15850d:;
		if (it != expr_end) {
			jule::Ptr<_1a7bd2ba1_TypeEnumItem> _9015_item = *it;
			{
				if (((*(_9015_item))._field_Ident == _8924_ident)) {
					return _9015_item;;
				};
			}
			_iter_next_1ab15850d:;
			++it;
			goto _iter_begin_1ab15850d;
		}
		_iter_end_1ab15850d:;
	};
	return nullptr;;
}








inline jule::Bool _1a7bd5ba4_comptimeRange_eq(_1a7bd5ba4_comptimeRange *_self_, _1a7bd5ba4_comptimeRange _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1a7bd60a0_Str(_1a7bd5ba4_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1a7bd63e1_Equal(jule::Ptr<_1a7bd5ba4_comptimeRange> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _2718_other) {
	return false;;
}








inline jule::Bool _1a7bd6710_comptimeStructField_eq(_1a7bd6710_comptimeStructField *_self_, _1a7bd6710_comptimeStructField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1a7bd6ab7_Str(_1a7bd6710_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1a7bd6e08_Equal(jule::Ptr<_1a7bd6710_comptimeStructField> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _3718_other) {
	return false;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7bd7414__Decl(jule::Ptr<_1a7bd6710_comptimeStructField> _self_, jule::Ptr<_1a7cd5dd6_eval>* _4127_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _4142_fc) {
	if (((*((*(_4142_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_4127_e)).ptr(), (*((*((*(_4142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7c0529a_comptimeDecl>(_1a7c0529a_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_field))._field_Decl, &__jule_any_type19)}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7bd7810__Type(jule::Ptr<_1a7bd6710_comptimeStructField> _self_, jule::Ptr<_1a7cd5dd6_eval>* _5327_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _5342_fc) {
	if (((*((*(_5342_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_5327_e)).ptr(), (*((*((*(_5342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1a7c09d1b_buildComptimeTypeInfoData(&((*((*(_5327_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7bd7b51_subIdent(jule::Ptr<_1a7bd6710_comptimeStructField> _self_, jule::Str* _6126_ident) {
	{
		auto &_match_expr{ (*(_6126_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1ab165c57:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _648_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab166ecd, jule::Ptr<__jule_anon_1ab166ecd_ctx>::make(__jule_anon_1ab166ecd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab166ecd_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1ab165ce0:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _718_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab168e58, jule::Ptr<__jule_anon_1ab168e58_ctx>::make(__jule_anon_1ab168e58_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab168e58_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_718_method));;
			}
		}
		else {
			_case_begin_1ab165a8c:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab165b9c:;
	};
}







inline jule::Str _1a7bd836b_Str(_1a7bd7ea3_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1a7bd86ac_Equal(jule::Ptr<_1a7bd7ea3_comptimeStructFields> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _9018_other) {
	return false;;
}



inline void _1a7bd8b41_ready(_1a7bd7ea3_comptimeStructFields* _self_, jule::Ptr<_1a7c7b178_Var>* _9426_keyA, jule::Ptr<_1a7c7b178_Var>* _9443_keyB) {
	if (((*(_9426_keyA)) != nullptr)) {
		(*((*(_9426_keyA))))._field_Constant=true;
		(*((*(_9426_keyA))))._field_Value=jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)})});
		(*((*(_9426_keyA))))._field_Kind=(*(_1a7e04db2_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_9443_keyB)) != nullptr)) {
		(*((*(_9443_keyB))))._field_Constant=true;
		(*((*(_9443_keyB))))._field_Value=jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)})});
		(*((*(_9443_keyB))))._field_Kind=jule::new_ptr<_1a7d244a7_TypeSymbol>(_1a7d244a7_TypeSymbol{._field_Decl=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7bd6710_comptimeStructField>(_1a7bd6710_comptimeStructField{._field_field=jule::Ptr<_1a7ba8061_FieldIns>(nullptr)}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data6)})});
	};
}



inline void _1a7bd8ea4_index(_1a7bd7ea3_comptimeStructFields* _self_, jule::Ptr<_1a7cd41ae_Data>* _11526_d, jule::I64 _11536_i) {
	(*((*(_11526_d))))._field_Decl=false;
	(*((*(_11526_d))))._field_untyped=false;
	(*((*(_11526_d))))._field_Constant=nullptr;
	(*((*(_11526_d))))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7bd6710_comptimeStructField>(_1a7bd6710_comptimeStructField{._field_field=(*(_self_))._field_fields[_11536_i]}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data6)});
}



inline void _1a7bd93c2_step(_1a7bd7ea3_comptimeStructFields* _self_, jule::I64 _12620_i, jule::Ptr<_1a7c7b178_Var>* _12633_keyA, jule::Ptr<_1a7c7b178_Var>* _12650_keyB) {
	if (((*(_12633_keyA)) != nullptr)) {
		(*((*((*((*(_12633_keyA))))._field_Value))._field_Data))._field_Constant=static__1c006a8d4_NewI64(static_cast<jule::I64>(_12620_i));
		(*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_12650_keyB)) != nullptr)) {
		(*(_1a7d21a26_comptimeStructField((*((*((*(_12650_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_12620_i];
	};
}



inline jule::I64 _1a7bd9658_len(_1a7bd7ea3_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1a7bd9933_comptimeStatic_eq(_1a7bd9933_comptimeStatic *_self_, _1a7bd9933_comptimeStatic _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1a7bd9cda_Str(_1a7bd9933_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1a7bda12b_Equal(jule::Ptr<_1a7bd9933_comptimeStatic> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _15018_other) {
	return false;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7bda637__Decl(jule::Ptr<_1a7bd9933_comptimeStatic> _self_, jule::Ptr<_1a7cd5dd6_eval>* _15427_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _15442_fc) {
	if (((*((*(_15442_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_15427_e)).ptr(), (*((*((*(_15442_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7c0529a_comptimeDecl>(_1a7c0529a_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type8)}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7bdaa33__Type(jule::Ptr<_1a7bd9933_comptimeStatic> _self_, jule::Ptr<_1a7cd5dd6_eval>* _16627_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _16642_fc) {
	if (((*((*(_16642_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_16627_e)).ptr(), (*((*((*(_16642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1a7c09d1b_buildComptimeTypeInfoData(&((*((*(_16627_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7bdad74_subIdent(jule::Ptr<_1a7bd9933_comptimeStatic> _self_, jule::Str* _17426_ident) {
	{
		auto &_match_expr{ (*(_17426_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1ab17ea95:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _1778_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab180d1b, jule::Ptr<__jule_anon_1ab180d1b_ctx>::make(__jule_anon_1ab180d1b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab180d1b_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_1778_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1ab17eb2d:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _1848_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab182c96, jule::Ptr<__jule_anon_1ab182c96_ctx>::make(__jule_anon_1ab182c96_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab182c96_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_1848_method));;
			}
		}
		else {
			_case_begin_1ab17e8ca:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab17e9da:;
	};
}







inline jule::Str _1a7bdb58e_Str(_1a7bdb1d7_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1a7bdb8d0_Equal(jule::Ptr<_1a7bdb1d7_comptimeStatics> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _20318_other) {
	return false;;
}



inline void _1a7bdbd64_ready(_1a7bdb1d7_comptimeStatics* _self_, jule::Ptr<_1a7c7b178_Var>* _20726_keyA, jule::Ptr<_1a7c7b178_Var>* _20743_keyB) {
	if (((*(_20726_keyA)) != nullptr)) {
		(*((*(_20726_keyA))))._field_Constant=true;
		(*((*(_20726_keyA))))._field_Value=jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)})});
		(*((*(_20726_keyA))))._field_Kind=(*(_1a7e04db2_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_20743_keyB)) != nullptr)) {
		(*((*(_20743_keyB))))._field_Constant=true;
		(*((*(_20743_keyB))))._field_Value=jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)})});
		(*((*(_20743_keyB))))._field_Kind=jule::new_ptr<_1a7d244a7_TypeSymbol>(_1a7d244a7_TypeSymbol{._field_Decl=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7bd9933_comptimeStatic>(_1a7bd9933_comptimeStatic{._field_field=jule::Ptr<_1a7c7b178_Var>(nullptr)}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data8)})});
	};
}



inline void _1a7bdc1c7_index(_1a7bdb1d7_comptimeStatics* _self_, jule::Ptr<_1a7cd41ae_Data>* _22826_d, jule::I64 _22836_i) {
	(*((*(_22826_d))))._field_Decl=false;
	(*((*(_22826_d))))._field_untyped=false;
	(*((*(_22826_d))))._field_Constant=nullptr;
	(*((*(_22826_d))))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7bd9933_comptimeStatic>(_1a7bd9933_comptimeStatic{._field_field=(*(_self_))._field_fields[_22836_i]}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data8)});
}



inline void _1a7bdc5e5_step(_1a7bdb1d7_comptimeStatics* _self_, jule::I64 _23920_i, jule::Ptr<_1a7c7b178_Var>* _23933_keyA, jule::Ptr<_1a7c7b178_Var>* _23950_keyB) {
	if (((*(_23933_keyA)) != nullptr)) {
		(*((*((*((*(_23933_keyA))))._field_Value))._field_Data))._field_Constant=static__1c006a8d4_NewI64(static_cast<jule::I64>(_23920_i));
		(*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_23950_keyB)) != nullptr)) {
		(*(_1a7d23330_comptimeStatic((*((*((*(_23950_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_23920_i];
	};
}



inline jule::I64 _1a7bdc87b_len(_1a7bdb1d7_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1a7bdcb56_comptimeEnumField_eq(_1a7bdcb56_comptimeEnumField *_self_, _1a7bdcb56_comptimeEnumField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1a7bdd00d_Str(_1a7bdcb56_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1a7bdd34e_Equal(jule::Ptr<_1a7bdcb56_comptimeEnumField> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _26318_other) {
	return false;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7bdd849__Decl(jule::Ptr<_1a7bdcb56_comptimeEnumField> _self_, jule::Ptr<_1a7cd5dd6_eval>* _26727_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _26742_fc) {
	if (((*((*(_26742_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_26727_e)).ptr(), (*((*((*(_26742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7c0529a_comptimeDecl>(_1a7c0529a_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type21)}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7bddb8a_subIdent(jule::Ptr<_1a7bdcb56_comptimeEnumField> _self_, jule::Str* _27926_ident) {
	{
		auto &_match_expr{ (*(_27926_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1ab1900a0:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _2828_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab194208, jule::Ptr<__jule_anon_1ab194208_ctx>::make(__jule_anon_1ab194208_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab194208_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_2828_method));;
			}
		}
		else {
			_case_begin_1ab18e5dd:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab18e577:;
	};
}







inline jule::Str _1a7bde42c_Str(_1a7bdde65_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1a7bde76d_Equal(jule::Ptr<_1a7bdde65_comptimeEnumFields> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _30118_other) {
	return false;;
}



inline void _1a7bdeb7a_ready(_1a7bdde65_comptimeEnumFields* _self_, jule::Ptr<_1a7c7b178_Var>* _30526_keyA, jule::Ptr<_1a7c7b178_Var>* _30543_keyB) {
	if (((*(_30526_keyA)) != nullptr)) {
		(*((*(_30526_keyA))))._field_Constant=true;
		(*((*(_30526_keyA))))._field_Value=jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)})});
		(*((*(_30526_keyA))))._field_Kind=(*(_1a7e04db2_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_30543_keyB)) != nullptr)) {
		(*((*(_30543_keyB))))._field_Constant=true;
		(*((*(_30543_keyB))))._field_Value=jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)})});
		(*((*(_30543_keyB))))._field_Kind=jule::new_ptr<_1a7d244a7_TypeSymbol>(_1a7d244a7_TypeSymbol{._field_Decl=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7bdcb56_comptimeEnumField>(_1a7bdcb56_comptimeEnumField{._field_field=jule::Ptr<_1a7bd1001_EnumItem>(nullptr)}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data10)})});
	};
}



inline void _1a7bdeedd_index(_1a7bdde65_comptimeEnumFields* _self_, jule::Ptr<_1a7cd41ae_Data>* _32626_d, jule::I64 _32636_i) {
	(*((*(_32626_d))))._field_Decl=false;
	(*((*(_32626_d))))._field_untyped=false;
	(*((*(_32626_d))))._field_Constant=nullptr;
	(*((*(_32626_d))))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7bdcb56_comptimeEnumField>(_1a7bdcb56_comptimeEnumField{._field_field=(*(_self_))._field_fields[_32636_i]}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data10)});
}



inline void _1a7be040b_step(_1a7bdde65_comptimeEnumFields* _self_, jule::I64 _33720_i, jule::Ptr<_1a7c7b178_Var>* _33733_keyA, jule::Ptr<_1a7c7b178_Var>* _33750_keyB) {
	if (((*(_33733_keyA)) != nullptr)) {
		(*((*((*((*(_33733_keyA))))._field_Value))._field_Data))._field_Constant=static__1c006a8d4_NewI64(static_cast<jule::I64>(_33720_i));
		(*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_33750_keyB)) != nullptr)) {
		(*(_1a7d22043_comptimeEnumField((*((*((*(_33750_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_33720_i];
	};
}



inline jule::I64 _1a7be0692_len(_1a7bdde65_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1a7be096c_comptimeParam_eq(_1a7be096c_comptimeParam *_self_, _1a7be096c_comptimeParam _other_) {
	return 
		(_self_->_field_param == _other_._field_param);
}

inline jule::Str _1a7be0d24_Str(_1a7be096c_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1a7be1165_Equal(jule::Ptr<_1a7be096c_comptimeParam> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _36118_other) {
	return false;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7be1682__Decl(jule::Ptr<_1a7be096c_comptimeParam> _self_, jule::Ptr<_1a7cd5dd6_eval>* _36527_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _36542_fc) {
	if (((*((*(_36542_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_36527_e)).ptr(), (*((*((*(_36542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7c0529a_comptimeDecl>(_1a7c0529a_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_param))._field_Decl, &__jule_any_type22)}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7be1a7d__Type(jule::Ptr<_1a7be096c_comptimeParam> _self_, jule::Ptr<_1a7cd5dd6_eval>* _37727_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _37742_fc) {
	if (((*((*(_37742_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_37727_e)).ptr(), (*((*((*(_37742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1a7c09d1b_buildComptimeTypeInfoData(&((*((*(_37727_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7be1e79__Recv(jule::Ptr<_1a7be096c_comptimeParam> _self_, jule::Ptr<_1a7cd5dd6_eval>* _38527_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _38542_fc) {
	if (((*((*(_38542_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_38527_e)).ptr(), (*((*((*(_38542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Recv", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c006a461_Const> _3907_constant = static__1c006ae67_NewBool(_1a7bb955b_IsSelf((*((*(_self_))._field_param))._field_Decl.ptr()));;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_3907_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_3907_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7be22ba_subIdent(jule::Ptr<_1a7be096c_comptimeParam> _self_, jule::Str* _39826_ident) {
	{
		auto &_match_expr{ (*(_39826_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1ab1a9718:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _4018_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab1aaa38, jule::Ptr<__jule_anon_1ab1aaa38_ctx>::make(__jule_anon_1ab1aaa38_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab1aaa38_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_4018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Recv", 4)) {
			_case_begin_1ab1a97b2:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _4088_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab1ac9b3, jule::Ptr<__jule_anon_1ab1ac9b3_ctx>::make(__jule_anon_1ab1ac9b3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab1ac9b3_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_4088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1ab1a9839:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _4158_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab1ae93d, jule::Ptr<__jule_anon_1ab1ae93d_ctx>::make(__jule_anon_1ab1ae93d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab1ae93d_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_4158_method));;
			}
		}
		else {
			_case_begin_1ab1a940a:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab1a962a:;
	};
}







inline jule::Str _1a7be2a6d_Str(_1a7be27c6_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1a7be2dae_Equal(jule::Ptr<_1a7be27c6_comptimeParams> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _43418_other) {
	return false;;
}



inline void _1a7be3343_ready(_1a7be27c6_comptimeParams* _self_, jule::Ptr<_1a7c7b178_Var>* _43826_keyA, jule::Ptr<_1a7c7b178_Var>* _43843_keyB) {
	if (((*(_43826_keyA)) != nullptr)) {
		(*((*(_43826_keyA))))._field_Constant=true;
		(*((*(_43826_keyA))))._field_Value=jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)})});
		(*((*(_43826_keyA))))._field_Kind=(*(_1a7e04db2_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_43843_keyB)) != nullptr)) {
		(*((*(_43843_keyB))))._field_Constant=true;
		(*((*(_43843_keyB))))._field_Value=jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)})});
		(*((*(_43843_keyB))))._field_Kind=jule::new_ptr<_1a7d244a7_TypeSymbol>(_1a7d244a7_TypeSymbol{._field_Decl=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7be096c_comptimeParam>(_1a7be096c_comptimeParam{._field_param=jule::Ptr<_1a7bbc839_ParamIns>(nullptr)}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data12)})});
	};
}



inline void _1a7be36a6_index(_1a7be27c6_comptimeParams* _self_, jule::Ptr<_1a7cd41ae_Data>* _45926_d, jule::I64 _45936_i) {
	(*((*(_45926_d))))._field_Decl=false;
	(*((*(_45926_d))))._field_untyped=false;
	(*((*(_45926_d))))._field_Constant=nullptr;
	(*((*(_45926_d))))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7be096c_comptimeParam>(_1a7be096c_comptimeParam{._field_param=(*(_self_))._field_params[_45936_i]}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data12)});
}



inline void _1a7be3ac4_step(_1a7be27c6_comptimeParams* _self_, jule::I64 _47020_i, jule::Ptr<_1a7c7b178_Var>* _47033_keyA, jule::Ptr<_1a7c7b178_Var>* _47050_keyB) {
	if (((*(_47033_keyA)) != nullptr)) {
		(*((*((*((*(_47033_keyA))))._field_Value))._field_Data))._field_Constant=static__1c006a8d4_NewI64(static_cast<jule::I64>(_47020_i));
		(*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_47050_keyB)) != nullptr)) {
		(*(_1a7d22560_comptimeParam((*((*((*(_47050_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_47020_i];
	};
}



inline jule::I64 _1a7be3d5a_len(_1a7be27c6_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}







inline jule::Str _1a7be44dc_Str(_1a7be4135_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1a7be482d_Equal(jule::Ptr<_1a7be4135_comptimeTypeInfos> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _49418_other) {
	return false;;
}



inline void _1a7be4cb2_ready(_1a7be4135_comptimeTypeInfos* _self_, jule::Ptr<_1a7c7b178_Var>* _49826_keyA, jule::Ptr<_1a7c7b178_Var>* _49843_keyB) {
	if (((*(_49826_keyA)) != nullptr)) {
		(*((*(_49826_keyA))))._field_Constant=true;
		(*((*(_49826_keyA))))._field_Value=jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)})});
		(*((*(_49826_keyA))))._field_Kind=(*(_1a7e04db2_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_49843_keyB)) != nullptr)) {
		(*((*(_49843_keyB))))._field_Constant=true;
		(*((*(_49843_keyB))))._field_Value=jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)})});
		(*((*(_49843_keyB))))._field_Kind=jule::new_ptr<_1a7d244a7_TypeSymbol>(_1a7d244a7_TypeSymbol{._field_Decl=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7be5aa4_comptimeTypeInfo>(_1a7be5aa4_comptimeTypeInfo{._field_base=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr)}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data15)})});
	};
}



inline void _1a7be5125_index(_1a7be4135_comptimeTypeInfos* _self_, jule::Ptr<_1a7cd41ae_Data>* _51926_d, jule::I64 _51936_i) {
	(*((*(_51926_d))))._field_Decl=false;
	(*((*(_51926_d))))._field_untyped=false;
	(*((*(_51926_d))))._field_Constant=nullptr;
	(*((*(_51926_d))))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_types[_51936_i], (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data15)});
}



inline void _1a7be5543_step(_1a7be4135_comptimeTypeInfos* _self_, jule::I64 _52820_i, jule::Ptr<_1a7c7b178_Var>* _52833_keyA, jule::Ptr<_1a7c7b178_Var>* _52850_keyB) {
	if (((*(_52833_keyA)) != nullptr)) {
		(*((*((*((*(_52833_keyA))))._field_Value))._field_Data))._field_Constant=static__1c006a8d4_NewI64(static_cast<jule::I64>(_52820_i));
		(*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_52850_keyB)) != nullptr)) {
		(*((*((*((*(_52850_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait((*(_self_))._field_types[_52820_i], (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data15);
	};
}



inline jule::I64 _1a7be57c9_len(_1a7be4135_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}








inline jule::Bool _1a7be5aa4_comptimeTypeInfo_eq(_1a7be5aa4_comptimeTypeInfo *_self_, _1a7be5aa4_comptimeTypeInfo _other_) {
	return 
		(_self_->_field_base == _other_._field_base);
}

inline jule::Str _1a7be5e5b_Str(_1a7be5aa4_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1a7d1c192_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1a7be629c_Equal(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _55218_other) {
	return false;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7be68da__Decl(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _55627_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _55642_fc) {
	if (((*((*(_55642_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_55627_e)).ptr(), (*((*((*(_55642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Any _5617_decl = jule::Any();;
	{
		
		if ((_1a7d209c0_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab1c6944:;
			{
				_5617_decl=jule::Any((*(_1a7d209c0_Struct((*(_self_))._field_base)))._field_Decl, &__jule_any_type23);
			}
		}
		else if ((_1a7d20c56_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab1c69aa:;
			{
				_5617_decl=jule::Any(_1a7d20c56_Trait((*(_self_))._field_base), &__jule_any_type10);
			}
		}
		else if ((_1a7d1ec00_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab1c547b:;
			{
				_5617_decl=jule::Any(_1a7d1ec00_Enum((*(_self_))._field_base), &__jule_any_type24);
			}
		}
		else if ((_1a7d1ee86_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab1c54e2:;
			{
				_5617_decl=jule::Any(_1a7d1ee86_TypeEnum((*(_self_))._field_base), &__jule_any_type25);
			}
		}
		else if ((_1a7d20739_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab1c5558:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _5728_f = _1a7d20739_Fn((*(_self_))._field_base);;
				{
					
					if (_1a7bbed7a_IsBuiltin(_5728_f.ptr())) {
						_case_begin_1ab1d5e09:;
						{
							_1a7cd6469_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("<built-in function>", 19), &__jule_any_type4); __jule_collection; }));
							return nullptr;;
						}
					}
					else if (_1a7bc0111_IsAnon(_5728_f.ptr())) {
						_case_begin_1ab1d5ea3:;
						{
							_1a7cd6469_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("<anonymous function>", 20), &__jule_any_type4); __jule_collection; }));
							return nullptr;;
						}
					}
					_match_end_1ab1d5d71:;
				};
				_5617_decl=jule::Any((*(_5728_f))._field_Decl, &__jule_any_type26);
			}
		}
		else {
			_case_begin_1ab1c5415:;
			{
				_1a7cd6469_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_self_))._field_base.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ab1c52e4:;
	};
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7c0529a_comptimeDecl>(_1a7c0529a_comptimeDecl{._field_decl=_5617_decl}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7be6cd6__Str(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _59322_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _59337_fc) {
	if (((*((*(_59337_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_59322_e)).ptr(), (*((*((*(_59337_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Str", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c006a461_Const> _5987_constant = static__1c006b231_NewStr(_1a7d1c192_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e01d7b_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_5987_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_5987_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7be71d2__Kind(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _60627_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _60642_fc) {
	if (((*((*(_60642_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_60627_e)).ptr(), (*((*((*(_60642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7bd1a6d_Enum> _6117_enm = _1a7c38531_FindEnum(_1a7c09997_findComptimePackage(&((*((*(_60627_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1a7bd1001_EnumItem> _61211_item = nullptr;;
	{
		
		if (_1a7d1d160_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1ab1e3a3d:;
			{
				_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1a7d209c0_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab1e3950:;
			{
				_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1a7d20c56_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab1e36ec:;
			{
				_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1a7d1e969_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab1e3763:;
			{
				if (_1a7d2cc1e_IsUnsafe(_1a7d1e969_Ptr((*(_self_))._field_base).ptr())) {
					_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1a7d1e6d3_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab1e37c9:;
			{
				_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1a7d1ec00_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab1e3840:;
			{
				_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1a7d1ee86_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab1e429c:;
			{
				_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("TypeEnum", 8));
			}
		}
		else if ((_1a7d20edc_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab1e4313:;
			{
				_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1a7d204a3_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab1e4379:;
			{
				_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1a7d2021c_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab1e43e0:;
			{
				_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1a7d20739_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab1e4467:;
			{
				_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1a7d21273_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab1e44de:;
			{
				_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1a7d1e44c_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab1e4566:;
			{
				jule::Ptr<_1a7d24dae_Prim> _6434_prim = _1a7d1e44c_Prim((*(_self_))._field_base);;
				{
					
					if (_1a7d28610_IsAny(_6434_prim.ptr())) {
						_case_begin_1ab200ebd:;
						{
							_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1a7d280e3_IsBool(_6434_prim.ptr())) {
						_case_begin_1ab200dd0:;
						{
							_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1a7d28379_IsStr(_6434_prim.ptr())) {
						_case_begin_1ab200bb0:;
						{
							_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1a7d27323_IsF32(_6434_prim.ptr())) {
						_case_begin_1ab200c26:;
						{
							_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1a7d275a9_IsF64(_6434_prim.ptr())) {
						_case_begin_1ab200c8c:;
						{
							_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1a7d25ca0_IsI8(_6434_prim.ptr())) {
						_case_begin_1ab200d03:;
						{
							_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1a7d26036_IsI16(_6434_prim.ptr())) {
						_case_begin_1ab20172c:;
						{
							_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1a7d262bc_IsI32(_6434_prim.ptr())) {
						_case_begin_1ab2017a4:;
						{
							_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1a7d26553_IsI64(_6434_prim.ptr())) {
						_case_begin_1ab20182b:;
						{
							_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1a7d267d9_IsU8(_6434_prim.ptr())) {
						_case_begin_1ab2018a3:;
						{
							_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1a7d26a70_IsU16(_6434_prim.ptr())) {
						_case_begin_1ab20192a:;
						{
							_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1a7d26d06_IsU32(_6434_prim.ptr())) {
						_case_begin_1ab2019a2:;
						{
							_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1a7d2708c_IsU64(_6434_prim.ptr())) {
						_case_begin_1ab201a29:;
						{
							_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1a7d27840_IsInt(_6434_prim.ptr())) {
						_case_begin_1ab201aa1:;
						{
							_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1a7d27ac6_IsUint(_6434_prim.ptr())) {
						_case_begin_1ab201b28:;
						{
							_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1a7d27d5c_IsUintptr(_6434_prim.ptr())) {
						_case_begin_1ab201ba0:;
						{
							_61211_item=_1a7bd2695_FindItem(_6117_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1ab200a17:;
						{
							__jule_panic_s((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1a7d1c192_Str((*(_self_))._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:678:5"));;
						}
					}
					_match_end_1ab200990:;
				};
			}
		}
		else {
			_case_begin_1ab1e3587:;
			{
				__jule_panic_s((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1a7d1c192_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:681:4"));;
			}
		}
		_match_end_1ab1e34cc:;
	};
	return _1a7d181d2_evalEnumStatic(&((*((*(_60627_e))))._field_s), &(_6117_enm), &(_61211_item), &((*((*(_60642_fc))))._field_Token), _1a7cd946c_getOwnerRefers((*(_60627_e)).ptr()));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7be75cd__Bits(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _68627_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _68642_fc) {
	if (((*((*(_68642_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_68627_e)).ptr(), (*((*((*(_68642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7d24dae_Prim> _6913_prim = _1a7d1e44c_Prim((*(_self_))._field_base.ptr());;
	if ((_6913_prim == nullptr)) {
		_1a7cd6469_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _6963_n = _1c005e7c9_BitsizeOf((*(_6913_prim))._field_Kind);;
	if ((_6963_n == -1LL)) {
		_1a7cd6469_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c006a461_Const> _7017_constant = static__1c006a8d4_NewI64(static_cast<jule::I64>(_6963_n));;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=true, ._field_Kind=_1a7e02a5d_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7017_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_7017_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7be79c9__Elem(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _71027_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _71042_fc) {
	if (((*((*(_71042_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_71027_e)).ptr(), (*((*((*(_71042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7d2c1a2_Ptr> _7157_ptr = _1a7d1e969_Ptr((*(_self_))._field_base.ptr());;
	if ((_7157_ptr != nullptr)) {
		if (_1a7d2cc1e_IsUnsafe(_7157_ptr)) {
			_1a7cd6469_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		return _1a7c09d1b_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7157_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1a7d288da_Sptr> _7237_sptr = _1a7d1e6d3_Sptr((*(_self_))._field_base);;
	if ((_7237_sptr != nullptr)) {
		return _1a7c09d1b_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7237_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1a7d293ad_Slc> _7277_slice = _1a7d204a3_Slc((*(_self_))._field_base);;
	if ((_7277_slice != nullptr)) {
		return _1a7c09d1b_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7277_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_1a7d2b6ce_Arr> _7317_array = _1a7d2021c_Arr((*(_self_))._field_base);;
	if ((_7317_array != nullptr)) {
		return _1a7c09d1b_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7317_array.alloc)._field_Elem));;
	};
	jule::Ptr<_1a7bd1a6d_Enum> _7357_enm = _1a7d1ec00_Enum((*(_self_))._field_base);;
	if ((_7357_enm != nullptr)) {
		return _1a7c09d1b_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*((*_7357_enm.alloc)._field_Kind))._field_Kind));;
	};
	_1a7cd6469_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7be7dc5__Size(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _74327_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _74342_fc) {
	if (((*((*(_74342_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_74327_e)).ptr(), (*((*((*(_74342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7d2b6ce_Arr> _7487_arr = _1a7d2021c_Arr((*(_self_))._field_base.ptr());;
	if ((_7487_arr == nullptr)) {
		_1a7cd6469_pushErr((*(_74327_e)).ptr(), (*((*(_74342_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c006a461_Const> _7537_constant = static__1c006a8d4_NewI64(static_cast<jule::I64>((*(_7487_arr))._field_N));;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=true, ._field_Kind=_1a7e02a5d_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7537_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_7537_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7be82c1__Key(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _76226_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _76241_fc) {
	if (((*((*(_76241_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_76226_e)).ptr(), (*((*((*(_76241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7d2aa52_Map> _7677_m = _1a7d20edc_Map((*(_self_))._field_base.ptr());;
	if ((_7677_m == nullptr)) {
		_1a7cd6469_pushErr((*(_76226_e)).ptr(), (*((*(_76241_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1a7c09d1b_buildComptimeTypeInfoData(&((*((*(_76226_e))))._field_s), &((*(_7677_m))._field_Key));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7be86bc__Value(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _77528_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _77543_fc) {
	if (((*((*(_77543_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_77528_e)).ptr(), (*((*((*(_77543_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7d2aa52_Map> _7807_m = _1a7d20edc_Map((*(_self_))._field_base.ptr());;
	if ((_7807_m == nullptr)) {
		_1a7cd6469_pushErr((*(_77528_e)).ptr(), (*((*(_77543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1a7c09d1b_buildComptimeTypeInfoData(&((*((*(_77528_e))))._field_s), &((*(_7807_m))._field_Val));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7be8ab8__Fields(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _78829_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _78844_fc) {
	if (((*((*(_78844_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_78829_e)).ptr(), (*((*((*(_78844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7ba8b11_StructIns> _7937_s = _1a7d209c0_Struct((*(_self_))._field_base.ptr());;
	if ((_7937_s != nullptr)) {
		return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7bd7ea3_comptimeStructFields>(_1a7bd7ea3_comptimeStructFields{._field_fields=(*_7937_s.alloc)._field_Fields}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data7)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
	};
	jule::Ptr<_1a7bd1a6d_Enum> _8037_enm = _1a7d1ec00_Enum((*(_self_))._field_base);;
	if ((_8037_enm != nullptr)) {
		return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7bdde65_comptimeEnumFields>(_1a7bdde65_comptimeEnumFields{._field_fields=(*_8037_enm.alloc)._field_Items}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data11)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
	};
	_1a7cd6469_pushErr((*(_78829_e)).ptr(), (*((*(_78844_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7be8eb4__Statics(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _81730_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _81745_fc) {
	if (((*((*(_81745_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_81730_e)).ptr(), (*((*((*(_81745_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7ba8b11_StructIns> _8227_s = _1a7d209c0_Struct((*(_self_))._field_base.ptr());;
	if ((_8227_s == nullptr)) {
		_1a7cd6469_pushErr((*(_81730_e)).ptr(), (*((*(_81745_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7bdb1d7_comptimeStatics>(_1a7bdb1d7_comptimeStatics{._field_fields=(*(_8227_s))._field_Statics}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data9)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7be93b0__Binded(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _83629_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _83644_fc) {
	if (((*((*(_83644_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_83629_e)).ptr(), (*((*((*(_83644_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c006a461_Const> _8417_constant = static__1c006ae67_NewBool(_1a7d1cb43_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8417_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_8417_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7be97ab__Ordered(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _84926_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _84941_fc) {
	if (((*((*(_84941_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_84926_e)).ptr(), (*((*((*(_84941_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c006a461_Const> _8547_constant = static__1c006ae67_NewBool(_1a7d1d913_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8547_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_8547_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7be9ba7__Comparable(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _86229_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _86244_fc) {
	if (((*((*(_86244_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_86229_e)).ptr(), (*((*((*(_86244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c006a461_Const> _8677_constant = static__1c006ae67_NewBool(_1a7d1d3e6_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8677_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_8677_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7bea0a3__Mutable(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _87526_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _87541_fc) {
	if (((*((*(_87541_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_87526_e)).ptr(), (*((*((*(_87541_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c006a461_Const> _8807_constant = static__1c006ae67_NewBool(_1a7d1d67c_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8807_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_8807_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7bea49e__Types(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _88828_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _88843_fc) {
	if (((*((*(_88843_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_88828_e)).ptr(), (*((*((*(_88843_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7d29ea2_Tuple> _8937_tup = _1a7d21273_Tup((*(_self_))._field_base.ptr());;
	if ((_8937_tup == nullptr)) {
		_1a7cd6469_pushErr((*(_88828_e)).ptr(), (*((*(_88843_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7be4135_comptimeTypeInfos> _8987_infos = jule::new_ptr<_1a7be4135_comptimeTypeInfos>(_1a7be4135_comptimeTypeInfos{._field_types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7be5aa4_comptimeTypeInfo>>::alloc(0LL, (*(_8937_tup))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7be5aa4_comptimeTypeInfo>(nullptr); __jule_collection; })});;
	{
		auto expr = &((*(_8937_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2447b4:;
		if (it != expr_end) {
			jule::Ptr<_1a7d1bc96_TypeKind> _90115_t = *it;
			{
				(*(_8987_infos))._field_types=jule::append((*_8987_infos.alloc)._field_types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7be5aa4_comptimeTypeInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a7c56582_pushComptimeTypeInfo((*((*((*(_88828_e))))._field_s))._field_meta.ptr(), &(_90115_t)); __jule_collection; }));
			}
			_iter_next_1ab2447b4:;
			++it;
			goto _iter_begin_1ab2447b4;
		}
		_iter_end_1ab2447b4:;
	};
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8987_infos, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data14)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7bea89a__CanNil(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _91129_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _91144_fc) {
	if (((*((*(_91144_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_91129_e)).ptr(), (*((*((*(_91144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c006a461_Const> _9167_constant = static__1c006ae67_NewBool(_1a7d1db99_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9167_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_9167_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7beac96__GC(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _92425_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _92440_fc) {
	if (((*((*(_92440_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_92425_e)).ptr(), (*((*((*(_92440_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("GC", 2), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c006a461_Const> _9297_constant = static__1c006ae67_NewBool(_1a7d1de30_GC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9297_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_9297_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7beb192__Result(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _93729_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _93744_fc) {
	if (((*((*(_93744_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_93729_e)).ptr(), (*((*((*(_93744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7bbd8b2_FnIns> _9427_f = _1a7d20739_Fn((*(_self_))._field_base.ptr());;
	if ((_9427_f == nullptr)) {
		_1a7cd6469_pushErr((*(_93729_e)).ptr(), (*((*(_93744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*(_9427_f))._field_Result == nullptr)) {
		return _1a7c09d1b_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &(_1a7e017c6_primVoid));;
	};
	return _1a7c09d1b_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &((*(_9427_f))._field_Result));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7beb58d__Params(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Ptr<_1a7cd5dd6_eval>* _95329_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _95344_fc) {
	if (((*((*(_95344_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_95329_e)).ptr(), (*((*((*(_95344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7bbd8b2_FnIns> _9587_f = _1a7d20739_Fn((*(_self_))._field_base.ptr());;
	if ((_9587_f == nullptr)) {
		_1a7cd6469_pushErr((*(_95329_e)).ptr(), (*((*(_95344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7be27c6_comptimeParams>(_1a7be27c6_comptimeParams{._field_params=(*(_9587_f))._field_Params}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data13)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7beb8ce_subIdent(jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _self_, jule::Str* _97026_ident) {
	{
		auto &_match_expr{ (*(_97026_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1ab25597e:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _9738_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab257541, jule::Ptr<__jule_anon_1ab257541_ctx>::make(__jule_anon_1ab257541_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab257541_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_9738_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1ab2559e5:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _9808_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab2594bb, jule::Ptr<__jule_anon_1ab2594bb_ctx>::make(__jule_anon_1ab2594bb_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab2594bb_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_9808_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1ab255a5b:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _9878_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab25b446, jule::Ptr<__jule_anon_1ab25b446_ctx>::make(__jule_anon_1ab25b446_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab25b446_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_9878_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1ab255be3:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _9948_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab25d3c1, jule::Ptr<__jule_anon_1ab25d3c1_ctx>::make(__jule_anon_1ab25d3c1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab25d3c1_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_9948_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1ab255c6a:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _10018_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab26034b, jule::Ptr<__jule_anon_1ab26034b_ctx>::make(__jule_anon_1ab26034b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab26034b_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_10018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1ab255ce2:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _10088_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab2622c6, jule::Ptr<__jule_anon_1ab2622c6_ctx>::make(__jule_anon_1ab2622c6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab2622c6_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_10088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1ab255d69:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _10158_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab264251, jule::Ptr<__jule_anon_1ab264251_ctx>::make(__jule_anon_1ab264251_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab264251_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_10158_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1ab255e79:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _10228_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab2661cb, jule::Ptr<__jule_anon_1ab2661cb_ctx>::make(__jule_anon_1ab2661cb_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab2661cb_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_10228_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1ab255ee0:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _10298_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab268299, jule::Ptr<__jule_anon_1ab268299_ctx>::make(__jule_anon_1ab268299_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab268299_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_10298_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1ab256056:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _10368_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab26a224, jule::Ptr<__jule_anon_1ab26a224_ctx>::make(__jule_anon_1ab26a224_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab26a224_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_10368_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1ab2560bc:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _10438_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab26c19e, jule::Ptr<__jule_anon_1ab26c19e_ctx>::make(__jule_anon_1ab26c19e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab26c19e_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_10438_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1ab256144:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _10508_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab26e129, jule::Ptr<__jule_anon_1ab26e129_ctx>::make(__jule_anon_1ab26e129_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab26e129_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_10508_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1ab2561bb:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _10578_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab2710a4, jule::Ptr<__jule_anon_1ab2710a4_ctx>::make(__jule_anon_1ab2710a4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab2710a4_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_10578_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1ab256243:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _10648_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab27302e, jule::Ptr<__jule_anon_1ab27302e_ctx>::make(__jule_anon_1ab27302e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab27302e_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_10648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1ab2562ba:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _10718_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab274ea9, jule::Ptr<__jule_anon_1ab274ea9_ctx>::make(__jule_anon_1ab274ea9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab274ea9_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_10718_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1ab256342:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _10788_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab276e34, jule::Ptr<__jule_anon_1ab276e34_ctx>::make(__jule_anon_1ab276e34_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab276e34_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_10788_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("GC", 2)) {
			_case_begin_1ab2563b9:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _10858_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab278dae, jule::Ptr<__jule_anon_1ab278dae_ctx>::make(__jule_anon_1ab278dae_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab278dae_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_10858_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1ab256441:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _10928_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab27ad39, jule::Ptr<__jule_anon_1ab27ad39_ctx>::make(__jule_anon_1ab27ad39_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab27ad39_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_10928_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1ab2564b8:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _10998_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab27ccb4, jule::Ptr<__jule_anon_1ab27ccb4_ctx>::make(__jule_anon_1ab27ccb4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab27ccb4_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_10998_method));;
			}
		}
		else {
			_case_begin_1ab25343d:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab25575e:;
	};
}








inline jule::Bool _1a7bebba9_comptimeValue_eq(_1a7bebba9_comptimeValue *_self_, _1a7bebba9_comptimeValue _other_) {
	return 
		(_self_->_field_data == _other_._field_data);
}

inline jule::Str _1a7bec061_Str(_1a7bebba9_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1a7bec3a2_Equal(jule::Ptr<_1a7bebba9_comptimeValue> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _111818_other) {
	return false;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7bec913__Unwrap(jule::Ptr<_1a7bebba9_comptimeValue> _self_, jule::Ptr<_1a7cd5dd6_eval>* _112229_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _112244_fc) {
	if (((*((*(_112244_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_112229_e)).ptr(), (*((*((*(_112244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7becd0e__Type(jule::Ptr<_1a7bebba9_comptimeValue> _self_, jule::Ptr<_1a7cd5dd6_eval>* _113027_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _113042_fc) {
	if (((*((*(_113042_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_113027_e)).ptr(), (*((*((*(_113042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1a7c09d1b_buildComptimeTypeInfoData(&((*((*(_113027_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7bed20a__Lvalue(jule::Ptr<_1a7bebba9_comptimeValue> _self_, jule::Ptr<_1a7cd5dd6_eval>* _113829_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _113844_fc) {
	if (((*((*(_113844_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_113829_e)).ptr(), (*((*((*(_113844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c006a461_Const> _11437_constant = static__1c006ae67_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11437_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_11437_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7bed606__Mutable(jule::Ptr<_1a7bebba9_comptimeValue> _self_, jule::Ptr<_1a7cd5dd6_eval>* _115130_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _115145_fc) {
	if (((*((*(_115145_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_115130_e)).ptr(), (*((*((*(_115145_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c006a461_Const> _11567_constant = static__1c006ae67_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11567_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_11567_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7beda02__Const(jule::Ptr<_1a7bebba9_comptimeValue> _self_, jule::Ptr<_1a7cd5dd6_eval>* _116428_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _116443_fc) {
	if (((*((*(_116443_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_116428_e)).ptr(), (*((*((*(_116443_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Const", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c006a461_Const> _11697_constant = static__1c006ae67_NewBool(_1a7cd4ae9_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11697_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_11697_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7bedded__Field(jule::Ptr<_1a7bebba9_comptimeValue> _self_, jule::Ptr<_1a7cd5dd6_eval>* _117728_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _117743_fc) {
	if (((*((*(_117743_fc))))._field_Args.len() > 1LL)) {
		_1a7cd6469_pushErr((*(_117728_e)).ptr(), (*((*((*(_117743_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7ba8b11_StructIns> _11827_s = _1a7d209c0_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_11827_s == nullptr)) {
		_1a7cd6469_pushErr((*(_117728_e)).ptr(), (*((*(_117743_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_data))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7b89251_Expr> _11877_arg = (*((*(_117743_fc))))._field_Args[0LL];;
	jule::Ptr<_1a7cd41ae_Data> _11887_d = _1a7d09aa8_evalExpr((*(_117728_e)), _11877_arg);;
	if ((_11887_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a7cd4ae9_IsConst(_11887_d.ptr())))) {
		_1a7cd6469_pushErr((*(_117728_e)).ptr(), (*(_11877_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7d24dae_Prim> _11963_prim = _1a7d1e44c_Prim((*(_11887_d))._field_Kind);;
	if (((_11963_prim == nullptr) || (!(_1a7d28379_IsStr(_11963_prim.ptr()))))) {
		_1a7cd6469_pushErr((*(_117728_e)).ptr(), (*_11877_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*(_11887_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12013_ident = _1c006c61c_ReadStr((*(_11887_d))._field_Constant.ptr());;
	jule::Ptr<_1a7ba8061_FieldIns> _12027_f = _1a7ba9eec_FindField(_11827_s.ptr(), _12013_ident);;
	if ((_12027_f == nullptr)) {
		_1a7cd6469_pushErr((*(_117728_e)).ptr(), (*_11877_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_11827_s))._field_Decl))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_12013_ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_11887_d=jule::new_ptr<_1a7cd41ae_Data>((*(*(_self_))._field_data.alloc));
	_11887_d=_1a7d02793_evalStructSubIdentField((*(_117728_e)).ptr(), &(_11887_d), &(_11827_s), &((*_11877_arg.alloc)._field_Token), &(_12027_f));
	return _1a7c0a15c_buildComptimeValue(&(_11887_d));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7bee2e9__Method(jule::Ptr<_1a7bebba9_comptimeValue> _self_, jule::Ptr<_1a7cd5dd6_eval>* _121229_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _121244_fc) {
	if (((*((*(_121244_fc))))._field_Args.len() > 1LL)) {
		_1a7cd6469_pushErr((*(_121229_e)).ptr(), (*((*((*(_121244_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _12177_ref = false;;
	jule::Ptr<_1a7ba8b11_StructIns> _12187_s = static_cast<jule::Ptr<_1a7ba8b11_StructIns>>(nullptr);;
	if ((_1a7d1e6d3_Sptr((*((*(_self_))._field_data))._field_Kind.ptr()) != nullptr)) {
		_12187_s=_1a7d209c0_Struct((*(_1a7d1e6d3_Sptr((*((*(_self_))._field_data))._field_Kind)))._field_Elem.ptr());
		_12177_ref=true;
	} else {
		_12187_s=_1a7d209c0_Struct((*((*(_self_))._field_data))._field_Kind.ptr());
	};
	if ((_12187_s == nullptr)) {
		_1a7cd6469_pushErr((*(_121229_e)).ptr(), (*((*(_121244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_data))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7b89251_Expr> _12297_arg = (*((*(_121244_fc))))._field_Args[0LL];;
	jule::Ptr<_1a7cd41ae_Data> _12307_d = _1a7d09aa8_evalExpr((*(_121229_e)), _12297_arg);;
	if ((_12307_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a7cd4ae9_IsConst(_12307_d.ptr())))) {
		_1a7cd6469_pushErr((*(_121229_e)).ptr(), (*(_12297_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7d24dae_Prim> _12383_prim = _1a7d1e44c_Prim((*(_12307_d))._field_Kind);;
	if (((_12383_prim == nullptr) || (!(_1a7d28379_IsStr(_12383_prim.ptr()))))) {
		_1a7cd6469_pushErr((*(_121229_e)).ptr(), (*_12297_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*(_12307_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12433_ident = _1c006c61c_ReadStr((*(_12307_d))._field_Constant.ptr());;
	;
	jule::Ptr<_1a7bba8d1_Fn> _12457_m = _1a7ba9bab_FindMethod(_12187_s.ptr(), _12433_ident, false);;
	if ((_12457_m == nullptr)) {
		_1a7cd6469_pushErr((*(_121229_e)).ptr(), (*_12297_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_12187_s))._field_Decl))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_12433_ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_12307_d=jule::new_ptr<_1a7cd41ae_Data>((*(*(_self_))._field_data.alloc));
	if (_12177_ref) {
		_1a7d18787_makeImplicitDeref(&(_12307_d), (*((*(_121244_fc))))._field_Token);
	};
	_12307_d=_1a7d02dae_evalStructSubIdentMethod((*(_121229_e)).ptr(), &(_12307_d), &(_12187_s), &((*_12297_arg.alloc)._field_Token), &(_12457_m), _12177_ref);
	return _1a7c0a15c_buildComptimeValue(&(_12307_d));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7bee63a_subIdent(jule::Ptr<_1a7bebba9_comptimeValue> _self_, jule::Str* _125826_ident) {
	{
		auto &_match_expr{ (*(_125826_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1ab2ac93c:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _12618_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab2ade05, jule::Ptr<__jule_anon_1ab2ade05_ctx>::make(__jule_anon_1ab2ade05_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab2ade05_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_12618_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1ab2ac9a3:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _12688_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab2b0d80, jule::Ptr<__jule_anon_1ab2b0d80_ctx>::make(__jule_anon_1ab2b0d80_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab2b0d80_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_12688_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1ab2aca19:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _12758_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab2b2d0a, jule::Ptr<__jule_anon_1ab2b2d0a_ctx>::make(__jule_anon_1ab2b2d0a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab2b2d0a_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_12758_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1ab2aca91:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _12828_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab2b4c85, jule::Ptr<__jule_anon_1ab2b4c85_ctx>::make(__jule_anon_1ab2b4c85_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab2b4c85_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_12828_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1ab2acc7d:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _12898_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab2b6c10, jule::Ptr<__jule_anon_1ab2b6c10_ctx>::make(__jule_anon_1ab2b6c10_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab2b6c10_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_12898_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1ab2acce4:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _12968_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab2b8b8a, jule::Ptr<__jule_anon_1ab2b8b8a_ctx>::make(__jule_anon_1ab2b8b8a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab2b8b8a_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_12968_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Method", 6)) {
			_case_begin_1ab2acd5a:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _13038_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab2bab15, jule::Ptr<__jule_anon_1ab2bab15_ctx>::make(__jule_anon_1ab2bab15_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab2bab15_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_13038_method));;
			}
		}
		else {
			_case_begin_1ab2ac40e:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2ac7e9:;
	};
}







inline jule::Str _1a7beecbc_Str(_1a7bee915_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1a7c0010d_Equal(jule::Ptr<_1a7bee915_comptimeFiles> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _132218_other) {
	return false;;
}



inline void _1a7c00592_ready(_1a7bee915_comptimeFiles* _self_, jule::Ptr<_1a7c7b178_Var>* _132626_keyA, jule::Ptr<_1a7c7b178_Var>* _132643_keyB) {
	if (((*(_132626_keyA)) != nullptr)) {
		(*((*(_132626_keyA))))._field_Constant=true;
		(*((*(_132626_keyA))))._field_Value=jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)})});
		(*((*(_132626_keyA))))._field_Kind=(*(_1a7e04db2_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_132643_keyB)) != nullptr)) {
		(*((*(_132643_keyB))))._field_Constant=true;
		(*((*(_132643_keyB))))._field_Value=jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)})});
		(*((*(_132643_keyB))))._field_Kind=jule::new_ptr<_1a7d244a7_TypeSymbol>(_1a7d244a7_TypeSymbol{._field_Decl=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7c01384_comptimeFile>(_1a7c01384_comptimeFile{._field_file=jule::Ptr<_1a7ccd9e4_SymbolTable>(nullptr)}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data18)})});
	};
}



inline void _1a7c00905_index(_1a7bee915_comptimeFiles* _self_, jule::Ptr<_1a7cd41ae_Data>* _134726_d, jule::I64 _134736_i) {
	(*((*(_134726_d))))._field_Decl=false;
	(*((*(_134726_d))))._field_untyped=false;
	(*((*(_134726_d))))._field_Constant=nullptr;
	(*((*(_134726_d))))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7c01384_comptimeFile>(_1a7c01384_comptimeFile{._field_file=(*(_self_))._field_files[_134736_i]}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data18)});
}



inline void _1a7c00d23_step(_1a7bee915_comptimeFiles* _self_, jule::I64 _135820_i, jule::Ptr<_1a7c7b178_Var>* _135833_keyA, jule::Ptr<_1a7c7b178_Var>* _135850_keyB) {
	if (((*(_135833_keyA)) != nullptr)) {
		(*((*((*((*(_135833_keyA))))._field_Value))._field_Data))._field_Constant=static__1c006a8d4_NewI64(static_cast<jule::I64>(_135820_i));
		(*(*((*((*(_135833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_135833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_135850_keyB)) != nullptr)) {
		(*((*((*((*((*(_135850_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1a7c01384_comptimeFile>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data18)))._field_file=(*(_self_))._field_files[_135820_i];
	};
}



inline jule::I64 _1a7c010a9_len(_1a7bee915_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}








inline jule::Bool _1a7c01384_comptimeFile_eq(_1a7c01384_comptimeFile *_self_, _1a7c01384_comptimeFile _other_) {
	return 
		(_self_->_field_file == _other_._field_file);
}

inline jule::Str _1a7c0173b_Str(_1a7c01384_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1a7c01a7c_Equal(jule::Ptr<_1a7c01384_comptimeFile> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _138218_other) {
	return false;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7c02099__Path(jule::Ptr<_1a7c01384_comptimeFile> _self_, jule::Ptr<_1a7cd5dd6_eval>* _138627_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _138642_fc) {
	if (((*((*(_138642_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_138627_e)).ptr(), (*((*((*(_138642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Path", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c006a461_Const> _13917_constant = static__1c006b231_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e01d7b_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_13917_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_13917_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7c02495__Name(jule::Ptr<_1a7c01384_comptimeFile> _self_, jule::Ptr<_1a7cd5dd6_eval>* _139927_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _139942_fc) {
	if (((*((*(_139942_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_139927_e)).ptr(), (*((*((*(_139942_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c006a461_Const> _14047_constant = static__1c006b231_NewStr(_1a7b70d09_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e01d7b_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14047_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_14047_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7c02891__Dir(jule::Ptr<_1a7c01384_comptimeFile> _self_, jule::Ptr<_1a7cd5dd6_eval>* _141226_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _141241_fc) {
	if (((*((*(_141241_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_141226_e)).ptr(), (*((*((*(_141241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c006a461_Const> _14177_constant = static__1c006b231_NewStr(_1a7b70a73_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e01d7b_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14177_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_14177_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7c02bd2_subIdent(jule::Ptr<_1a7c01384_comptimeFile> _self_, jule::Str* _142526_ident) {
	{
		auto &_match_expr{ (*(_142526_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1ab2ce50d:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _14288_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab2d082d, jule::Ptr<__jule_anon_1ab2d082d_ctx>::make(__jule_anon_1ab2d082d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab2d082d_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_14288_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1ab2ce5a7:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _14358_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab2d27a8, jule::Ptr<__jule_anon_1ab2d27a8_ctx>::make(__jule_anon_1ab2d27a8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab2d27a8_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_14358_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1ab2ce62e:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _14428_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab2d4733, jule::Ptr<__jule_anon_1ab2d4733_ctx>::make(__jule_anon_1ab2d4733_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab2d4733_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_14428_method));;
			}
		}
		else {
			_case_begin_1ab2ce200:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2ce420:;
	};
}







inline jule::Str _1a7c03595_Str(_1a7c02eac_comptimeDecls* _self_) {
	return jule::Str::lit("comptimeDecls", 13);;
}



inline jule::Bool _1a7c038d6_Equal(jule::Ptr<_1a7c02eac_comptimeDecls> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _146118_other) {
	return false;;
}



inline void _1a7c03c5a_ready(_1a7c02eac_comptimeDecls* _self_, jule::Ptr<_1a7c7b178_Var>* _146526_keyA, jule::Ptr<_1a7c7b178_Var>* _146543_keyB) {
	if (((*(_146526_keyA)) != nullptr)) {
		(*((*(_146526_keyA))))._field_Constant=true;
		(*((*(_146526_keyA))))._field_Value=jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)})});
		(*((*(_146526_keyA))))._field_Kind=(*(_1a7e04db2_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_146543_keyB)) != nullptr)) {
		(*((*(_146543_keyB))))._field_Constant=true;
		(*((*(_146543_keyB))))._field_Value=jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)})});
		(*((*(_146543_keyB))))._field_Kind=jule::new_ptr<_1a7d244a7_TypeSymbol>(_1a7d244a7_TypeSymbol{._field_Decl=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7c0529a_comptimeDecl>(_1a7c0529a_comptimeDecl{._field_decl=jule::Any(nullptr)}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data20)})});
	};
}



inline void _1a7c040bd_index(_1a7c02eac_comptimeDecls* _self_, jule::Ptr<_1a7cd41ae_Data>* _148626_d, jule::I64 _148636_i) {
	(*((*(_148626_d))))._field_Decl=false;
	(*((*(_148626_d))))._field_untyped=false;
	(*((*(_148626_d))))._field_Constant=nullptr;
	(*((*(_148626_d))))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_decls[_148636_i], (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data20)});
}



inline void _1a7c044db_step(_1a7c02eac_comptimeDecls* _self_, jule::I64 _149520_i, jule::Ptr<_1a7c7b178_Var>* _149533_keyA, jule::Ptr<_1a7c7b178_Var>* _149550_keyB) {
	if (((*(_149533_keyA)) != nullptr)) {
		(*((*((*((*(_149533_keyA))))._field_Value))._field_Data))._field_Constant=static__1c006a8d4_NewI64(static_cast<jule::I64>(_149520_i));
		(*(*((*((*(_149533_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_149533_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_149550_keyB)) != nullptr)) {
		(*((*((*((*((*(_149550_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1a7c0529a_comptimeDecl>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data20)))._field_decl=(*((*(_self_))._field_decls[_149520_i]))._field_decl;
	};
}



inline jule::I64 _1a7c04772_len(_1a7c02eac_comptimeDecls* _self_) {
	return (*(_self_))._field_decls.len();;
}








inline jule::Bool _1a7c0529a_comptimeDecl_eq(_1a7c0529a_comptimeDecl *_self_, _1a7c0529a_comptimeDecl _other_) {
	return 
		(_self_->_field_decl == _other_._field_decl);
}

inline jule::Str _1a7c05652_Str(_1a7c0529a_comptimeDecl* _self_) {
	return jule::Str::lit("comptimeDecl", 12);;
}



inline jule::Bool _1a7c05993_Equal(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _153418_other) {
	return false;;
}



inline jule::Str _1a7c05de4_declAsStr(_1a7c0529a_comptimeDecl* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ab2de82b:;
			{
				return jule::Str::lit("<struct>", 8);;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ab2de2cb:;
			{
				return jule::Str::lit("<fn>", 4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ab2de6d8:;
			{
				return jule::Str::lit("<enum>", 6);;
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ab2de760:;
			{
				return jule::Str::lit("<type enum>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ab2de9d5:;
			{
				return jule::Str::lit("<trait>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ab2dea5c:;
			{
				return jule::Str::lit("<field>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ab2decd2:;
			{
				return jule::Str::lit("<type alias>", 12);;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab2ded48:;
			{
				return jule::Str::lit("<var>", 5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ab2dedae:;
			{
				return jule::Str::lit("<enum item>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ab2dee25:;
			{
				return jule::Str::lit("<param>", 7);;
			}
		}
		else {
			_case_begin_1ab2de672:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1561:4"));;
			}
		}
		_match_end_1ab2de40d:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7c062e0__Name(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Ptr<_1a7cd5dd6_eval>* _156527_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _156542_fc) {
	if (((*((*(_156542_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_156527_e)).ptr(), (*((*((*(_156542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _15707_name = jule::Str();;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ab2e6e4e:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7ba5ca6_Struct>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ab2e7306:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7bba8d1_Fn>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ab2e736c:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7bd1a6d_Enum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ab2e73e4:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7bd3278_TypeEnum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ab2e746b:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7bce362_Trait>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ab2e74e3:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7ba2d80_Field>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ab2e789a:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7d1aea4_TypeAlias>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab2e7911:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7c7b178_Var>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ab2e7977:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7bd1001_EnumItem>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ab2e79dd:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7bb8e0c_Param>()))._field_Ident;
			}
		}
		else {
			_case_begin_1ab2e7290:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1593:4"));;
			}
		}
		_match_end_1ab2e7229:;
	};
	jule::Ptr<_1c006a461_Const> _15957_constant = static__1c006b231_NewStr(_15707_name);;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e01d7b_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_15957_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_15957_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7c066db__Public(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Ptr<_1a7cd5dd6_eval>* _160329_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _160344_fc) {
	if (((*((*(_160344_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_160329_e)).ptr(), (*((*((*(_160344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16087_public = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type22) {
			_case_begin_1ab301332:;
			{
				_1a7cd6469_pushErr((*(_160329_e)).ptr(), (*((*(_160344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c05de4_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ab3016c8:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7ba5ca6_Struct>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ab30173e:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7bba8d1_Fn>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ab3017a5:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7bd1a6d_Enum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ab30182c:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7bd3278_TypeEnum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ab3018a4:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7bce362_Trait>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ab30192b:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7ba2d80_Field>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ab301c7d:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7d1aea4_TypeAlias>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab301d05:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7c7b178_Var>()))._field_Public;
			}
		}
		else {
			_case_begin_1ab301662:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Public: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1631:4"));;
			}
		}
		_match_end_1ab3015eb:;
	};
	jule::Ptr<_1c006a461_Const> _16337_constant = static__1c006ae67_NewBool(_16087_public);;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16337_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_16337_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7c06ad7__Binded(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Ptr<_1a7cd5dd6_eval>* _164129_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _164144_fc) {
	if (((*((*(_164144_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_164129_e)).ptr(), (*((*((*(_164144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16467_binded = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type22) {
			_case_begin_1ab30ad0e:;
			{
				_1a7cd6469_pushErr((*(_164129_e)).ptr(), (*((*(_164144_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c05de4_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ab30a9e0:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7ba5ca6_Struct>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ab30aa56:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7bba8d1_Fn>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ab30aabc:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7d1aea4_TypeAlias>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab30ab33:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7c7b178_Var>()))._field_Binded;
			}
		}
		else {
			_case_begin_1ab30a979:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Binded: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1665:4"));;
			}
		}
		_match_end_1ab30a913:;
	};
	jule::Ptr<_1c006a461_Const> _16677_constant = static__1c006ae67_NewBool(_16467_binded);;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16677_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_16677_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7c06ed3__Exceptional(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Ptr<_1a7cd5dd6_eval>* _167534_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _167549_fc) {
	if (((*((*(_167549_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_167534_e)).ptr(), (*((*((*(_167549_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ab3112cb:;
			{
				goto _match_end_1ab312662;
			}
		}
		else {
			_case_begin_1ab3126c8:;
			{
				_1a7cd6469_pushErr((*(_167534_e)).ptr(), (*((*(_167549_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c05de4_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ab312662:;
	};
	jule::Ptr<_1a7bba8d1_Fn> _16877_f = (*(_self_))._field_decl.cast_ptr<_1a7bba8d1_Fn>(&__jule_any_type26);;
	jule::Ptr<_1c006a461_Const> _16887_constant = static__1c006ae67_NewBool((*(_16877_f))._field_Exceptional);;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16887_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_16887_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7c073ce__Mutable(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Ptr<_1a7cd5dd6_eval>* _169630_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _169645_fc) {
	if (((*((*(_169645_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_169630_e)).ptr(), (*((*((*(_169645_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17017_mutable = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21) {
			_case_begin_1ab3176bc:;
			{
				_1a7cd6469_pushErr((*(_169630_e)).ptr(), (*((*(_169645_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c05de4_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ab31739d:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7bb8e0c_Param>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ab317414:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7ba2d80_Field>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab31747a:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7c7b178_Var>()))._field_Mutable;
			}
		}
		else {
			_case_begin_1ab317337:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Mutable: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1719:4"));;
			}
		}
		_match_end_1ab3172c1:;
	};
	jule::Ptr<_1c006a461_Const> _17217_constant = static__1c006ae67_NewBool(_17017_mutable);;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17217_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_17217_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7c077ca__Variadic(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Ptr<_1a7cd5dd6_eval>* _172931_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _172946_fc) {
	if (((*((*(_172946_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_172931_e)).ptr(), (*((*((*(_172946_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17347_variadic = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type8) {
			_case_begin_1ab31e00e:;
			{
				_1a7cd6469_pushErr((*(_172931_e)).ptr(), (*((*(_172946_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c05de4_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ab31dbe0:;
			{
				_17347_variadic=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7bb8e0c_Param>()))._field_Variadic;
			}
		}
		else {
			_case_begin_1ab31db79:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Variadic: unimplemented declaration kind", 59) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1750:4"));;
			}
		}
		_match_end_1ab31db13:;
	};
	jule::Ptr<_1c006a461_Const> _17527_constant = static__1c006ae67_NewBool(_17347_variadic);;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17527_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_17527_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7c07bc6__Reference(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Ptr<_1a7cd5dd6_eval>* _176032_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _176047_fc) {
	if (((*((*(_176047_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_176032_e)).ptr(), (*((*((*(_176047_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17657_ref = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19) {
			_case_begin_1ab324762:;
			{
				_1a7cd6469_pushErr((*(_176032_e)).ptr(), (*((*(_176047_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c05de4_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab324443:;
			{
				_17657_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7c7b178_Var>()))._field_Reference;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ab3244a9:;
			{
				_17657_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7bb8e0c_Param>()))._field_Reference;
			}
		}
		else {
			_case_begin_1ab3243cc:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Reference: unimplemented declaration kind", 60) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1782:4"));;
			}
		}
		_match_end_1ab324366:;
	};
	jule::Ptr<_1c006a461_Const> _17847_constant = static__1c006ae67_NewBool(_17657_ref);;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17847_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_17847_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7c080c2__Params(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Ptr<_1a7cd5dd6_eval>* _179229_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _179244_fc) {
	if (((*((*(_179244_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_179229_e)).ptr(), (*((*((*(_179244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type22) {
			_case_begin_1ab328b40:;
			{
				_1a7cd6469_pushErr((*(_179229_e)).ptr(), (*((*(_179244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c05de4_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ab32a438:;
			{
				jule::Ptr<_1a7bba8d1_Fn> _18108_f = (*(_self_))._field_decl.unsafe_cast_ptr<_1a7bba8d1_Fn>();;
				jule::Slice<jule::Ptr<_1a7c0529a_comptimeDecl>> _18118_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c0529a_comptimeDecl>>::alloc((*(_18108_f))._field_Params.len(), (*(_18108_f))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7c0529a_comptimeDecl>(nullptr); __jule_collection; });;
				{
					auto expr = &((*_18108_f.alloc)._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab32d969:;
					if (it != expr_end) {
						jule::I64 _18129_i = it - expr->begin();
						jule::Ptr<_1a7bb8e0c_Param> _181216_param = *it;
						{
							_18118_params[_18129_i]=jule::new_ptr<_1a7c0529a_comptimeDecl>(_1a7c0529a_comptimeDecl{._field_decl=jule::Any(_181216_param, &__jule_any_type22)});
						}
						_iter_next_1ab32d969:;
						++it;
						_18129_i++;
						goto _iter_begin_1ab32d969;
					}
					_iter_end_1ab32d969:;
				};
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7c02eac_comptimeDecls>(_1a7c02eac_comptimeDecls{._field_decls=_18118_params}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ab32a03c:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Params: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1823:4"));;
			}
		}
		_match_end_1ab329ec6:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7c084bd__Fields(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Ptr<_1a7cd5dd6_eval>* _182729_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _182744_fc) {
	if (((*((*(_182744_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_182729_e)).ptr(), (*((*((*(_182744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a7c0529a_comptimeDecl>> _18327_fields = static_cast<jule::Slice<jule::Ptr<_1a7c0529a_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type26) {
			_case_begin_1ab332484:;
			{
				_1a7cd6469_pushErr((*(_182729_e)).ptr(), (*((*(_182744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c05de4_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ab332165:;
			{
				jule::Ptr<_1a7bd1a6d_Enum> _18458_enm = (*(_self_))._field_decl.unsafe_cast_ptr<_1a7bd1a6d_Enum>();;
				_18327_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c0529a_comptimeDecl>>::alloc((*(_18458_enm))._field_Items.len(), (*(_18458_enm))._field_Items.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7c0529a_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18458_enm.alloc)._field_Items);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab335685:;
					if (it != expr_end) {
						jule::I64 _18479_i = it - expr->begin();
						jule::Ptr<_1a7bd1001_EnumItem> _184716_item = *it;
						{
							_18327_fields[_18479_i]=jule::new_ptr<_1a7c0529a_comptimeDecl>(_1a7c0529a_comptimeDecl{._field_decl=jule::Any(_184716_item, &__jule_any_type21)});
						}
						_iter_next_1ab335685:;
						++it;
						_18479_i++;
						goto _iter_begin_1ab335685;
					}
					_iter_end_1ab335685:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ab3321cb:;
			{
				jule::Ptr<_1a7ba5ca6_Struct> _18518_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1a7ba5ca6_Struct>();;
				_18327_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c0529a_comptimeDecl>>::alloc((*(_18518_s))._field_Fields.len(), (*(_18518_s))._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7c0529a_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18518_s.alloc)._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab337599:;
					if (it != expr_end) {
						jule::I64 _18539_i = it - expr->begin();
						jule::Ptr<_1a7ba2d80_Field> _185316_field = *it;
						{
							_18327_fields[_18539_i]=jule::new_ptr<_1a7c0529a_comptimeDecl>(_1a7c0529a_comptimeDecl{._field_decl=jule::Any(_185316_field, &__jule_any_type19)});
						}
						_iter_next_1ab337599:;
						++it;
						_18539_i++;
						goto _iter_begin_1ab337599;
					}
					_iter_end_1ab337599:;
				};
			}
		}
		else {
			_case_begin_1ab3320ee:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Fields: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1857:4"));;
			}
		}
		_match_end_1ab332088:;
	};
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7c02eac_comptimeDecls>(_1a7c02eac_comptimeDecls{._field_decls=_18327_fields}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7c088b9__Statics(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Ptr<_1a7cd5dd6_eval>* _186830_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _186845_fc) {
	if (((*((*(_186845_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_186830_e)).ptr(), (*((*((*(_186845_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a7c0529a_comptimeDecl>> _18737_fields = static_cast<jule::Slice<jule::Ptr<_1a7c0529a_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type24) {
			_case_begin_1ab33b12a:;
			{
				_1a7cd6469_pushErr((*(_186830_e)).ptr(), (*((*(_186845_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c05de4_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ab33ad0b:;
			{
				jule::Ptr<_1a7ba5ca6_Struct> _18878_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1a7ba5ca6_Struct>();;
				_18737_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c0529a_comptimeDecl>>::alloc((*(_18878_s))._field_Statics.len(), (*(_18878_s))._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7c0529a_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18878_s.alloc)._field_Statics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab33e419:;
					if (it != expr_end) {
						jule::I64 _18899_i = it - expr->begin();
						jule::Ptr<_1a7c7b178_Var> _188916_field = *it;
						{
							_18737_fields[_18899_i]=jule::new_ptr<_1a7c0529a_comptimeDecl>(_1a7c0529a_comptimeDecl{._field_decl=jule::Any(_188916_field, &__jule_any_type8)});
						}
						_iter_next_1ab33e419:;
						++it;
						_18899_i++;
						goto _iter_begin_1ab33e419;
					}
					_iter_end_1ab33e419:;
				};
			}
		}
		else {
			_case_begin_1ab33ac95:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Statics: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1893:4"));;
			}
		}
		_match_end_1ab33ac2e:;
	};
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7c02eac_comptimeDecls>(_1a7c02eac_comptimeDecls{._field_decls=_18737_fields}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7c08cb5__Methods(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Ptr<_1a7cd5dd6_eval>* _190430_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _190445_fc) {
	if (((*((*(_190445_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_190430_e)).ptr(), (*((*((*(_190445_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a7c0529a_comptimeDecl>> _19097_methods = static_cast<jule::Slice<jule::Ptr<_1a7c0529a_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type24) {
			_case_begin_1ab342e9a:;
			{
				_1a7cd6469_pushErr((*(_190430_e)).ptr(), (*((*(_190445_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c05de4_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ab342b7b:;
			{
				jule::Ptr<_1a7bce362_Trait> _19228_t = (*(_self_))._field_decl.unsafe_cast_ptr<_1a7bce362_Trait>();;
				_19097_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c0529a_comptimeDecl>>::alloc((*(_19228_t))._field_Methods.len(), (*(_19228_t))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7c0529a_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19228_t.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab34619b:;
					if (it != expr_end) {
						jule::I64 _19249_i = it - expr->begin();
						jule::Ptr<_1a7bba8d1_Fn> _192416_method = *it;
						{
							_19097_methods[_19249_i]=jule::new_ptr<_1a7c0529a_comptimeDecl>(_1a7c0529a_comptimeDecl{._field_decl=jule::Any(_192416_method, &__jule_any_type26)});
						}
						_iter_next_1ab34619b:;
						++it;
						_19249_i++;
						goto _iter_begin_1ab34619b;
					}
					_iter_end_1ab34619b:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ab342be2:;
			{
				jule::Ptr<_1a7ba5ca6_Struct> _19288_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1a7ba5ca6_Struct>();;
				_19097_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c0529a_comptimeDecl>>::alloc((*(_19288_s))._field_Methods.len(), (*(_19288_s))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7c0529a_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19288_s.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab3480b0:;
					if (it != expr_end) {
						jule::I64 _19309_i = it - expr->begin();
						jule::Ptr<_1a7bba8d1_Fn> _193016_method = *it;
						{
							_19097_methods[_19309_i]=jule::new_ptr<_1a7c0529a_comptimeDecl>(_1a7c0529a_comptimeDecl{._field_decl=jule::Any(_193016_method, &__jule_any_type26)});
						}
						_iter_next_1ab3480b0:;
						++it;
						_19309_i++;
						goto _iter_begin_1ab3480b0;
					}
					_iter_end_1ab3480b0:;
				};
			}
		}
		else {
			_case_begin_1ab342b15:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Methods: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1934:4"));;
			}
		}
		_match_end_1ab342a9e:;
	};
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7c02eac_comptimeDecls>(_1a7c02eac_comptimeDecls{._field_decls=_19097_methods}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7c09106_subIdent(jule::Ptr<_1a7c0529a_comptimeDecl> _self_, jule::Str* _194526_ident) {
	{
		auto &_match_expr{ (*(_194526_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1ab349875:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _19488_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab34b05d, jule::Ptr<__jule_anon_1ab34b05d_ctx>::make(__jule_anon_1ab34b05d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab34b05d_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_19488_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1ab3498db:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _19558_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab34ced8, jule::Ptr<__jule_anon_1ab34ced8_ctx>::make(__jule_anon_1ab34ced8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab34ced8_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_19558_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1ab349963:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _19628_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab34ee63, jule::Ptr<__jule_anon_1ab34ee63_ctx>::make(__jule_anon_1ab34ee63_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab34ee63_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_19628_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1ab3499da:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _19698_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab351ddd, jule::Ptr<__jule_anon_1ab351ddd_ctx>::make(__jule_anon_1ab351ddd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab351ddd_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_19698_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1ab349b94:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _19768_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab353d68, jule::Ptr<__jule_anon_1ab353d68_ctx>::make(__jule_anon_1ab353d68_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab353d68_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_19768_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1ab349c0a:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _19838_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab355ce3, jule::Ptr<__jule_anon_1ab355ce3_ctx>::make(__jule_anon_1ab355ce3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab355ce3_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_19838_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1ab349c82:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _19908_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab357c6d, jule::Ptr<__jule_anon_1ab357c6d_ctx>::make(__jule_anon_1ab357c6d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab357c6d_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_19908_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1ab349d09:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _19978_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab359be8, jule::Ptr<__jule_anon_1ab359be8_ctx>::make(__jule_anon_1ab359be8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab359be8_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_19978_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1ab349e2a:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _20048_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab35bcb6, jule::Ptr<__jule_anon_1ab35bcb6_ctx>::make(__jule_anon_1ab35bcb6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab35bcb6_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_20048_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1ab349e91:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _20118_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab35dc41, jule::Ptr<__jule_anon_1ab35dc41_ctx>::make(__jule_anon_1ab35dc41_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab35dc41_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_20118_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Methods", 7)) {
			_case_begin_1ab34a007:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _20188_method = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>((void*)__jule_anon_1ab360bbb, jule::Ptr<__jule_anon_1ab360bbb_ctx>::make(__jule_anon_1ab360bbb_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab360bbb_ctx_handler), ._field_reloaded=false});;
				return _1a7c09788_buildAsComptimeMethodData(&(_20188_method));;
			}
		}
		else {
			_case_begin_1ab345123:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab349633:;
	};
}







inline jule::Fn<jule::Bool,jule::Ptr<_1a7c56c14_sema>*,jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>*> _1a7c0c280_readyFn(jule::Ptr<_1a7c0bd51_constraintChecker> _self_) {
	return jule::__new_closure<jule::Bool,jule::Ptr<_1a7c56c14_sema>*,jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>*>((void*)__jule_anon_1ab36be91, jule::Ptr<__jule_anon_1ab36be91_ctx>::make(__jule_anon_1ab36be91_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab36be91_ctx_handler);;
}



inline jule::Bool _1a7c0c516_readyFi(jule::Ptr<_1a7c0bd51_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1a7c65e10_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _1a7c0c280_readyFn(_self_)));;
}



inline jule::Bool _1a7c0c79c_readySi(jule::Ptr<_1a7c0bd51_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1a7c0c280_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _1a7c0ca33_ready(jule::Ptr<_1a7c0bd51_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1a7c0c516_readyFi(_self_);;
	};
	return _1a7c0c79c_readySi(_self_);;
}



inline jule::Bool _1a7c0ccb9_check(jule::Ptr<_1a7c0bd51_constraintChecker> _self_) {
	if ((!(_1a7c0ca33_ready(_self_)))) {
		return false;;
	};
	_julec_label_1ab37ca95:;
	{
		auto expr = &((*_self_.alloc)._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab37d04b:;
		if (it != expr_end) {
			jule::I64 _1208_i = it - expr->begin();
			jule::Ptr<_1a7d1a3b0_InsGeneric> _12015_g = *it;
			{
				if (((*(_12015_g))._field_Constraint == nullptr)) {
					goto _iter_next_1ab37d04b;
				};
				{
					auto expr = &((*_12015_g.alloc)._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab37e25b:;
					if (it != expr_end) {
						jule::Ptr<_1a7d1bc96_TypeKind> _12416_c2 = *it;
						{
							jule::Ptr<_1a7d24dae_Prim> _1259_prim = _1a7d1e44c_Prim(_12416_c2.ptr());;
							if (((_1259_prim != nullptr) && _1a7d25a19_IsConstraint(_1259_prim))) {
								if (_1a7c0d517_matchConstraint(&((*_1259_prim.alloc)._field_Kind), &((*_12015_g.alloc)._field_Kind))) {
									goto _iter_next_1ab37d04b;
								};
								goto _iter_next_1ab37e25b;
							};
							if (_1a7d1c4d3_Equal(_12416_c2, (*_12015_g.alloc)._field_Kind)) {
								goto _iter_next_1ab37d04b;
							};
						}
						_iter_next_1ab37e25b:;
						++it;
						goto _iter_begin_1ab37e25b;
					}
					_iter_end_1ab37e25b:;
				};
				_1a7c59b18_pushErr((*_self_.alloc)._field_s.ptr(), (*_self_.alloc)._field_et, static_cast<jule::Str>(jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*_12015_g.alloc)._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*((*_self_.alloc)._field_genericsD[_1208_i]))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1a7c0d14e_toStrConstraints(_12015_g), &__jule_any_type4); __jule_collection; }));
				return false;;
			}
			_iter_next_1ab37d04b:;
			++it;
			_1208_i++;
			goto _iter_begin_1ab37d04b;
		}
		_iter_end_1ab37d04b:;
	};
	return true;;
}







inline jule::Bool _1a7c0e5a1_IsTraitImpl(_1a7c0e1a5_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1a7c0e837_IsStructImpl(_1a7c0e1a5_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}












inline jule::Bool _1a7c13d9c_If_eq(_1a7c13d9c_If *_self_, _1a7c13d9c_If _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1a7c14199_Else_eq(_1a7c14199_Else *_self_, _1a7c14199_Else _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}










inline jule::Bool _1a7c148b4_InfIter_eq(_1a7c148b4_InfIter *_self_, _1a7c148b4_InfIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}






inline jule::Bool _1a7c14d6a_WhileIter_eq(_1a7c14d6a_WhileIter *_self_, _1a7c14d6a_WhileIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next);
}

inline jule::Bool _1a7c15211_IsWhileNext(_1a7c14d6a_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1a7c157b6_RangeIter_eq(_1a7c157b6_RangeIter *_self_, _1a7c157b6_RangeIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1a7c15b4b_ContSt_eq(_1a7c15b4b_ContSt *_self_, _1a7c15b4b_ContSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It);
}






inline jule::Bool _1a7c16025_BreakSt_eq(_1a7c16025_BreakSt *_self_, _1a7c16025_BreakSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It) &&
		(_self_->_field_Mtch == _self_->_field_Mtch);
}






inline jule::Bool _1a7c164cb_Label_eq(_1a7c164cb_Label *_self_, _1a7c164cb_Label _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1a7c16b3b_GotoSt_eq(_1a7c16b3b_GotoSt *_self_, _1a7c16b3b_GotoSt _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Label == _self_->_field_Label) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1a7c17015_Postfix_eq(_1a7c17015_Postfix *_self_, _1a7c17015_Postfix _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1a7c174bb_Assign_eq(_1a7c174bb_Assign *_self_, _1a7c174bb_Assign _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}


















inline jule::Bool _1a7c193d0_FallSt_eq(_1a7c193d0_FallSt *_self_, _1a7c193d0_FallSt _other_) {
	return 
		(_self_->_field_DestCase == _other_._field_DestCase);
}






inline jule::Bool _1a7c19776_RetSt_eq(_1a7c19776_RetSt *_self_, _1a7c19776_RetSt _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a7c19c2c_scopeLabel_eq(_1a7c19c2c_scopeLabel *_self_, _1a7c19c2c_scopeLabel _other_) {
	return 
		(_self_->_field_token == _other_._field_token) &&
		(_self_->_field_node == _self_->_field_node) &&
		(_self_->_field_used == _self_->_field_used);
}






inline jule::Bool _1a7c1ac1c_scopeChecker_eq(_1a7c1ac1c_scopeChecker *_self_, _1a7c1ac1c_scopeChecker _other_) {
	return 
		(_self_->_field_calledFrom == _other_._field_calledFrom) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_parent == _self_->_field_parent) &&
		(_self_->_field_childIndex == _self_->_field_childIndex) &&
		(_self_->_field_table == _self_->_field_table) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_tree == _self_->_field_tree) &&
		(_self_->_field_result == _self_->_field_result) &&
		(_self_->_field_it == _self_->_field_it) &&
		(_self_->_field_cse == _self_->_field_cse) &&
		(_self_->_field_captured == _self_->_field_captured) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_i == _self_->_field_i);
}

inline jule::Ptr<_1a7c36793_ImportInfo> _1a7c1b1e5_SelectPackage(_1a7c1ac1c_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7c36793_ImportInfo>> _37429_selector) {
	return _1a7c571dc_SelectPackage((*(_self_))._field_s.ptr(), _37429_selector);;
}



inline jule::Ptr<_1a7c7b178_Var> _1a7c1b5e1_FindVar(_1a7c1ac1c_scopeChecker* _self_, jule::Str _38523_ident, jule::Bool _38535_binded) {
	if ((!(_38535_binded))) {
		jule::Ptr<_1a7c7b178_Var> _3878_v = _1a7c1e957_findVar(_self_, _38523_ident);;
		if ((_3878_v != nullptr)) {
			return _3878_v;;
		};
	};
	return _1a7c575d8_FindVar((*(_self_))._field_s.ptr(), _38523_ident, _38535_binded);;
}



inline jule::Ptr<_1a7d1aea4_TypeAlias> _1a7c1b9dc_FindTypeAlias(_1a7c1ac1c_scopeChecker* _self_, jule::Str _40229_ident, jule::Bool _40241_binded) {
	;
	jule::Ptr<_1a7d1aea4_TypeAlias> _4057_ta = _1a7cd19e7_findTypeAlias((*(_self_))._field_table.ptr(), &(_40229_ident), _40241_binded, true);;
	if ((_4057_ta != nullptr)) {
		return _4057_ta;;
	};
	jule::Ptr<_1a7c1ac1c_scopeChecker> _4107_parent = (*(_self_))._field_parent;;
	while ((_4107_parent != nullptr)) {
		{
			_4057_ta=_1a7cd19e7_findTypeAlias((*(_4107_parent))._field_table, &(_40229_ident), _40241_binded, true);
			if ((_4057_ta != nullptr)) {
				return _4057_ta;;
			};
			_4107_parent=(*_4107_parent.alloc)._field_parent;
		}
	_iter_next_1ab3cbc8c:;
	}
	_iter_end_1ab3cbc8c:;;
	return _1a7c579d4_FindTypeAlias((*(_self_))._field_s.ptr(), _40229_ident, _40241_binded);;
}



inline jule::Ptr<_1a7ba5ca6_Struct> _1a7c1bdd8_FindStruct(_1a7c1ac1c_scopeChecker* _self_, jule::Str _42726_ident, jule::Bool _42738_binded) {
	return _1a7c57dd0_FindStruct((*(_self_))._field_s.ptr(), _42726_ident, _42738_binded);;
}



inline jule::Ptr<_1a7bba8d1_Fn> _1a7c1c2d4_FindFn(_1a7c1ac1c_scopeChecker* _self_, jule::Str _43622_ident, jule::Bool _43634_binded) {
	return _1a7c582cb_FindFn((*(_self_))._field_s.ptr(), _43622_ident, _43634_binded);;
}



inline jule::Ptr<_1a7bce362_Trait> _1a7c1c625_FindTrait(_1a7c1ac1c_scopeChecker* _self_, jule::Str _44525_ident) {
	return _1a7c5861c_FindTrait((*(_self_))._field_s.ptr(), _44525_ident);;
}



inline jule::Ptr<_1a7bd1a6d_Enum> _1a7c1c966_FindEnum(_1a7c1ac1c_scopeChecker* _self_, jule::Str _45424_ident) {
	return _1a7c5895d_FindEnum((*(_self_))._field_s.ptr(), _45424_ident);;
}



inline jule::Ptr<_1a7bd3278_TypeEnum> _1a7c1cca7_FindTypeEnum(_1a7c1ac1c_scopeChecker* _self_, jule::Str _46328_ident) {
	return _1a7c58c9e_FindTypeEnum((*(_self_))._field_s.ptr(), _46328_ident);;
}



inline jule::Bool _1a7c1d109_isUnsafe(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_) {
	jule::Ptr<_1a7c1ac1c_scopeChecker> _4717_scope = _self_;;
	_julec_label_1ab3d205b:;
	if ((*((*(_4717_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*_4717_scope.alloc)._field_parent != nullptr)) {
		_4717_scope=(*_4717_scope.alloc)._field_parent;
		goto _julec_label_1ab3d205b;
	};
	return false;;
}



inline jule::Bool _1a7c1d390_isRoot(_1a7c1ac1c_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1a7c1d58d_stop(_1a7c1ac1c_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1a7c1d824_stopped(_1a7c1ac1c_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1a7c1daaa_isDeferred(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_) {
	jule::Ptr<_1a7c1ac1c_scopeChecker> _5047_scope = _self_;;
	_julec_label_1ab3d4b30:;
	if ((*((*(_5047_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*_5047_scope.alloc)._field_parent != nullptr)) {
		_5047_scope=(*_5047_scope.alloc)._field_parent;
		goto _julec_label_1ab3d4b30;
	};
	return false;;
}



inline void _1a7c1dd63_pushCaptured(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7c7b178_Var>* _52534_v) {
	jule::Ptr<_1a7c1ac1c_scopeChecker> _5267_sc = _self_;;
	for (;;) {
		{
			if (((*(_5267_sc))._field_captured != nullptr)) {
				{
					auto expr = &((*(*(_5267_sc))._field_captured.alloc));
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab3d725e:;
					if (it != expr_end) {
						jule::Ptr<_1a7c7b178_Var> _52912_cv = *it;
						{
							if ((_52912_cv == (*(_52534_v)))) {
								goto _julec_label_1ab3d81a5;
							};
						}
						_iter_next_1ab3d725e:;
						++it;
						goto _iter_begin_1ab3d725e;
					}
					_iter_end_1ab3d725e:;
				};
				(*(*(_5267_sc))._field_captured.alloc)=jule::append((*(*(_5267_sc))._field_captured.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c7b178_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_52534_v)); __jule_collection; }));
				_julec_label_1ab3d81a5:;
			};
			if (((*_5267_sc.alloc)._field_parent == nullptr)) {
				goto _iter_end_1ab3d6505;
			};
			_5267_sc=(*_5267_sc.alloc)._field_parent;
			if ((!(_1a7d19348_isVarCaptured(_5267_sc, _5267_sc, (*(_52534_v)))))) {
				goto _iter_end_1ab3d6505;
			};
		}
	_iter_next_1ab3d6505:;
	}
	_iter_end_1ab3d6505:;;
}



inline jule::Ptr<_1a7c1ac1c_scopeChecker> _1a7c1e0e9_getRoot(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_) {
	jule::Ptr<_1a7c1ac1c_scopeChecker> _5507_root = _self_;;
	while ((((*(_5507_root))._field_parent != nullptr) && ((*_5507_root.alloc)._field_owner == nullptr))) {
		{
			_5507_root=(*_5507_root.alloc)._field_parent;
		}
	_iter_next_1ab3d9283:;
	}
	_iter_end_1ab3d9283:;;
	return _5507_root;;
}



inline jule::Ptr<_1a7c1ac1c_scopeChecker> _1a7c1e380_getHardRoot(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_) {
	jule::Ptr<_1a7c1ac1c_scopeChecker> _5607_root = _self_;;
	while (((*(_5607_root))._field_parent != nullptr)) {
		{
			_5607_root=(*_5607_root.alloc)._field_parent;
		}
	_iter_next_1ab3da51a:;
	}
	_iter_end_1ab3da51a:;;
	return _5607_root;;
}



inline jule::Ptr<_1a7bc1a4c_ReferenceStack> _1a7c1e616_getOwnerRefers(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_) {
	return (*((*(_1a7c1e380_getHardRoot(_self_)))._field_owner))._field_Refers;;
}



inline jule::Ptr<_1a7c7b178_Var> _1a7c1e957_findVar(_1a7c1ac1c_scopeChecker* _self_, jule::Str _57223_ident) {
	;
	;
	jule::Ptr<_1a7c7b178_Var> _5757_v = _1a7cd1541_findVar((*(_self_))._field_table.ptr(), &(_57223_ident), false, true);;
	if ((_5757_v != nullptr)) {
		return _5757_v;;
	};
	jule::Ptr<_1a7c1ac1c_scopeChecker> _5797_parent = (*(_self_))._field_parent;;
	while ((_5797_parent != nullptr)) {
		{
			_5757_v=_1a7cd1541_findVar((*(_5797_parent))._field_table, &(_57223_ident), false, true);
			if ((_5757_v != nullptr)) {
				return _5757_v;;
			};
			_5797_parent=(*_5797_parent.alloc)._field_parent;
		}
	_iter_next_1ab3dd09a:;
	}
	_iter_end_1ab3dd09a:;;
	return nullptr;;
}



inline jule::Ptr<_1a7c164cb_Label> _1a7c1ec98_findLabel(_1a7c1ac1c_scopeChecker* _self_, jule::Str* _59326_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3e00d0:;
		if (it != expr_end) {
			jule::Any _59415_st = *it;
			{
				{
					auto &_match_expr{ _59415_st };
					
					if (_match_expr.type == &__jule_any_type28) {
						_case_begin_1ab3e08c7:;
						{
							jule::Ptr<_1a7c164cb_Label> _5979_label = _59415_st.unsafe_cast_ptr<_1a7c164cb_Label>();;
							if (((*(_5979_label))._field_Ident == (*(_59326_ident)))) {
								return _5979_label;;
							};
						}
					}
					_match_end_1ab3e0861:;
				};
			}
			_iter_next_1ab3e00d0:;
			++it;
			goto _iter_begin_1ab3e00d0;
		}
		_iter_end_1ab3e00d0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7c19c2c_scopeLabel> _1a7c200d9_findLabelScope(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Str* _60932_ident) {
	jule::Ptr<_1a7c19c2c_scopeLabel> _6107_label = _1a7c2042a_findLabelAll(_self_.ptr(), _60932_ident);;
	if (((_6107_label != nullptr) && ((*((*_6107_label.alloc)._field_node))._field_Scope == (*_self_.alloc)._field_scope))) {
		return _6107_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7c19c2c_scopeLabel> _1a7c2042a_findLabelAll(_1a7c1ac1c_scopeChecker* _self_, jule::Str* _62029_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3e5cd9:;
		if (it != expr_end) {
			jule::Ptr<_1a7c19c2c_scopeLabel> _62115_lbl = *it;
			{
				if (((*((*(_62115_lbl))._field_node))._field_Ident == (*(_62029_ident)))) {
					return _62115_lbl;;
				};
			}
			_iter_next_1ab3e5cd9:;
			++it;
			goto _iter_begin_1ab3e5cd9;
		}
		_iter_end_1ab3e5cd9:;
	};
	return nullptr;;
}



inline jule::Bool _1a7c20826_isDuplicatedIdent(_1a7c1ac1c_scopeChecker* _self_, jule::Uintptr _63233_itself, jule::Str* _63251_ident) {
	jule::Ptr<_1a7c7b178_Var> _6333_v = _1a7c1b5e1_FindVar(_self_, (*(_63251_ident)), false);;
	if (((_6333_v != nullptr) && (static_cast<jule::Uintptr>(_6333_v) != _63233_itself))) {
		if (((*_6333_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6333_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_1a7c591ab_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1a7d1aea4_TypeAlias> _6413_ta = _1a7c1b9dc_FindTypeAlias(_self_, (*(_63251_ident)), false);;
	if (((_6413_ta != nullptr) && (static_cast<jule::Uintptr>(_6413_ta) != _63233_itself))) {
		if (((*_6413_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6413_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_1a7c591ab_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1a7c20ace_checkVarDecl(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b97c87_VarDecl> _65233_decl) {
	jule::Ptr<_1a7c7b178_Var> _6537_v = _1a7bc6db5_buildVar(_65233_decl);;
	(*(_6537_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c7b178_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6537_v; __jule_collection; }));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_6537_v, &__jule_any_type8); __jule_collection; }));
	});;
	if (_1a7c20826_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_6537_v), &((*_6537_v.alloc)._field_Ident))) {
		_1a7c59b18_pushErr((*_self_.alloc)._field_s.ptr(), (*_6537_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_6537_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1a7c59e7b_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1a7c1d58d_stop(_self_);
		return;;
	};
	_1a7c6dae9_checkVarDecl((*(_self_))._field_s, &(_6537_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0));
	if (((!(_1a7c7b81b_IsTypeInferred(_6537_v))) && (((*_6537_v.alloc)._field_Kind == nullptr) || ((*((*_6537_v.alloc)._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1a7c7238e_evalVarValue((*(_self_))._field_s, &(_6537_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0));
	if (((!(_1a7c7b585_IsInitialized(_6537_v))) || ((*((*_6537_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1a7c26d49_removeInteriorMutRisk(_self_, &((*(*(_6537_v))._field_Value.alloc)._field_Data));
	_1a7c7202b_checkVarValue((*(_self_))._field_s, &(_6537_v));
}



inline void _1a7c20d87_checkTypeAlias(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7d1aea4_TypeAlias>* _68336_ta) {
	if (_1a7c20826_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_68336_ta))), &((*((*(_68336_ta))))._field_Ident))) {
		_1a7c59b18_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_68336_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_68336_ta))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1a7c59e7b_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1a7c1d58d_stop(_self_);
		return;;
	};
	_1a7c67b7b_checkTypeAliasDecl((*(_self_))._field_s, _68336_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_68336_ta)); __jule_collection; }));
	if (((*((*((*(_68336_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1a7c1d58d_stop(_self_);
	};
}



inline void _1a7c21140_checkTypeAliasDecl(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b9b939_TypeAliasDecl> _69939_decl) {
	jule::Ptr<_1a7d1aea4_TypeAlias> _7007_ta = _1a7bc3994_buildTypeAlias(_69939_decl);;
	_1a7c20d87_checkTypeAlias(_self_, &(_7007_ta));
}



inline jule::Ptr<_1a7c1397e_Scope> _1a7c213c6_getChild(_1a7c1ac1c_scopeChecker* _self_) {
	return jule::new_ptr<_1a7c1397e_Scope>(_1a7c1397e_Scope{._field_Parent=(*(_self_))._field_scope, ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0});;
}



inline void _1a7c217e4_checkChildSsc(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b94e3d_ScopeTree>* _71035_tree, jule::Ptr<_1a7c1397e_Scope>* _71058_s, jule::Ptr<_1a7c1ac1c_scopeChecker>* _71074_ssc) {
	(*((*(_71058_s))))._field_StmtIndex=(*(_self_))._field_i;
	(*((*(_71058_s))))._field_ChildIndex=(*((*(_71074_ssc))))._field_childIndex;
	(*((*(_71074_ssc))))._field_parent=_self_;
	_1a7c2cd94_check((*(_71074_ssc)), _71035_tree, _71058_s);
}



inline jule::Ptr<_1a7c1397e_Scope> _1a7c21be0_checkChildSc(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b94e3d_ScopeTree>* _71734_tree, jule::Ptr<_1a7c1ac1c_scopeChecker>* _71757_ssc) {
	jule::Ptr<_1a7c1397e_Scope> _7187_s = _1a7c213c6_getChild(_self_.ptr());;
	_1a7c217e4_checkChildSsc(_self_, _71734_tree, &(_7187_s), _71757_ssc);
	return _7187_s;;
}



inline jule::Ptr<_1a7c1397e_Scope> _1a7c22031_checkChild(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b94e3d_ScopeTree>* _72332_tree) {
	jule::Ptr<_1a7c1ac1c_scopeChecker> _7247_ssc = _1a7c2d12a_newChildChecker(_self_);;
	return _1a7c21be0_checkChildSc(_self_, _72332_tree, &(_7247_ssc));;
}



inline void _1a7c222d9_checkAnonScope(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b94e3d_ScopeTree> _72835_tree) {
	jule::Ptr<_1a7c1397e_Scope> _7297_s = _1a7c22031_checkChild(_self_, &(_72835_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7297_s, &__jule_any_type29); __jule_collection; }));
}



inline void _1a7c2264c_processErrorCall(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7bb6624_BuiltinErrorCallExprModel>* _73338_m, jule::Ptr<_1a7b69b05_Token> _73369_err) {
	if (_1a7c1daaa_isDeferred(_self_)) {
		_1a7c59b18_pushErr((*_self_.alloc)._field_s.ptr(), _73369_err, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports error calls", 44)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a7c1ac1c_scopeChecker> _7387_root = _1a7c1e0e9_getRoot(_self_);;
	if ((!((*((*((*(_7387_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1a7c59b18_pushErr((*(_self_))._field_s, _73369_err, static_cast<jule::Str>(jule::Str::lit("error call can only useable for exceptional functions", 53)), jule::Slice<jule::Any>());
		_1a7c59e7b_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57)), jule::Slice<jule::Any>());
	};
	(*((*(_73338_m))))._field_Func=(*_7387_root.alloc)._field_owner;
}



inline void _1a7c22905_checkExpr(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b89251_Expr> _74630_expr) {
	jule::Ptr<_1a7cd5dd6_eval> _7477_eval = _1a7c6256b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0));;
	(*(_7477_eval))._field_ignored=true;
	jule::Ptr<_1a7cd41ae_Data> _7497_d = _1a7d09aa8_evalExpr(_7477_eval, _74630_expr);;
	if (((_7497_d == nullptr) || ((*(_7497_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_7497_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1ab41c23e:;
			{
				jule::Ptr<_1a7bb6624_BuiltinErrorCallExprModel> _7588_m = (*(_7497_d))._field_Model.unsafe_cast_ptr<_1a7bb6624_BuiltinErrorCallExprModel>();;
				_1a7c2264c_processErrorCall(_self_, &(_7588_m), (*(_74630_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7497_d, &__jule_any_type31); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type35 || _match_expr.type == &__jule_any_type36 || _match_expr.type == &__jule_any_type37 || _match_expr.type == &__jule_any_type38 || _match_expr.type == &__jule_any_type39 || _match_expr.type == &__jule_any_type40 || _match_expr.type == &__jule_any_type41) {
			_case_begin_1ab41c85a:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7497_d, &__jule_any_type31); __jule_collection; }));
			}
		}
		else {
			_case_begin_1ab41c7e4:;
			{
				_1a7c59b18_pushErr((*(_self_))._field_s, (*(_74630_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab41c77d:;
	};
}



inline jule::Ptr<_1a7c13d9c_If> _1a7c22c46_checkIf(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b9a86c_If> _77728_i) {
	jule::Ptr<_1a7c1397e_Scope> _7787_s = _1a7c22031_checkChild(_self_, &((*(_77728_i))._field_Scope));;
	jule::Ptr<_1a7cd41ae_Data> _7807_d = _1a7d09aa8_evalExpr(_1a7c6256b_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0)), (*_77728_i.alloc)._field_Expr);;
	if ((_7807_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a7d24dae_Prim> _7857_prim = _1a7d1e44c_Prim((*(_7807_d))._field_Kind.ptr());;
	if (((_7857_prim == nullptr) || (!(_1a7d280e3_IsBool(_7857_prim.ptr()))))) {
		_1a7c59b18_pushErr((*(_self_))._field_s, (*((*_77728_i.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("if conditions must be have boolean expression", 45)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a7c13d9c_If>(_1a7c13d9c_If{._field_Expr=(*(_7807_d))._field_Model, ._field_Scope=_7787_s});;
}



inline jule::Ptr<_1a7c14199_Else> _1a7c23087_checkElse(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b9ac46_Else> _79730_e) {
	return jule::new_ptr<_1a7c14199_Else>(_1a7c14199_Else{._field_Scope=_1a7c22031_checkChild(_self_, &((*(_79730_e))._field_Scope))});;
}



inline void _1a7c23340_checkConditional(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b9b1ec_Conditional> _80337_conditional) {
	jule::Ptr<_1a7c145b7_Conditional> _8047_c = jule::new_ptr<_1a7c145b7_Conditional>(_1a7c145b7_Conditional{._field_Elifs=jule::Slice<jule::Ptr<_1a7c13d9c_If>>(nullptr), ._field_Default=jule::Ptr<_1a7c14199_Else>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8047_c, &__jule_any_type42); __jule_collection; }));
	(*_8047_c.alloc)._field_Elifs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c13d9c_If>>::alloc(0LL, ((*(_80337_conditional))._field_Tail.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7c13d9c_If>(nullptr); __jule_collection; });
	(*_8047_c.alloc)._field_Elifs=jule::append((*_8047_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c13d9c_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a7c22c46_checkIf(_self_, (*_80337_conditional.alloc)._field_Head); __jule_collection; }));
	{
		auto expr = &((*_80337_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab4464bb:;
		if (it != expr_end) {
			jule::Ptr<_1a7b9a86c_If> _81015_elif = *it;
			{
				(*_8047_c.alloc)._field_Elifs=jule::append((*_8047_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c13d9c_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a7c22c46_checkIf(_self_, _81015_elif); __jule_collection; }));
			}
			_iter_next_1ab4464bb:;
			++it;
			goto _iter_begin_1ab4464bb;
		}
		_iter_end_1ab4464bb:;
	};
	if (((*_80337_conditional.alloc)._field_Default != nullptr)) {
		(*_8047_c.alloc)._field_Default=_1a7c23087_checkElse(_self_, (*_80337_conditional.alloc)._field_Default);
	};
}



inline void _1a7c23818_checkIterScopeSsc(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Uintptr _81934_it, jule::Ptr<_1a7b94e3d_ScopeTree> _81951_tree, jule::Ptr<_1a7c1397e_Scope>* _81974_s, jule::Ptr<_1a7c1ac1c_scopeChecker> _81989_ssc) {
	(*(_81989_ssc))._field_it=_81934_it;
	_1a7c217e4_checkChildSsc(_self_, &(_81951_tree), _81974_s, &(_81989_ssc));
}



inline jule::Ptr<_1a7c1397e_Scope> _1a7c23cbe_checkIterScopeSc(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Uintptr _82433_it, jule::Ptr<_1a7b94e3d_ScopeTree> _82450_tree, jule::Ptr<_1a7c1ac1c_scopeChecker> _82472_ssc) {
	jule::Ptr<_1a7c1397e_Scope> _8257_scope = _1a7c213c6_getChild(_self_.ptr());;
	_1a7c23818_checkIterScopeSsc(_self_, _82433_it, _82450_tree, &(_8257_scope), _82472_ssc);
	return _8257_scope;;
}



inline jule::Ptr<_1a7c1397e_Scope> _1a7c241ba_checkIterScope(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Uintptr _83031_it, jule::Ptr<_1a7b94e3d_ScopeTree>* _83049_tree) {
	jule::Ptr<_1a7c1ac1c_scopeChecker> _8317_ssc = _1a7c2d12a_newChildChecker(_self_);;
	return _1a7c23cbe_checkIterScopeSc(_self_, _83031_it, (*(_83049_tree)), _8317_ssc);;
}



inline void _1a7c24473_checkInfIter(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b988d1_Iter>* _83534_it) {
	jule::Ptr<_1a7c148b4_InfIter> _8367_kind = jule::new_ptr<_1a7c148b4_InfIter>(_1a7c148b4_InfIter{._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8367_kind, &__jule_any_type43); __jule_collection; }));
	(*_8367_kind.alloc)._field_Scope=_1a7c241ba_checkIterScope(_self_, static_cast<jule::Uintptr>(_8367_kind), &((*((*(_83534_it))))._field_Scope));
}



inline void _1a7c2472b_checkWhileIter(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b988d1_Iter>* _84136_it) {
	jule::Ptr<_1a7b9920b_WhileKind> _8427_wh = (*((*(_84136_it))))._field_Kind.cast_ptr<_1a7b9920b_WhileKind>(&__jule_any_type44);;
	if ((((*(_8427_wh))._field_Expr == nullptr) && ((*_8427_wh.alloc)._field_Next == nullptr))) {
		_1a7c24473_checkInfIter(_self_, _84136_it);
		return;;
	};
	jule::Ptr<_1a7c14d6a_WhileIter> _8487_kind = jule::new_ptr<_1a7c14d6a_WhileIter>(_1a7c14d6a_WhileIter{._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Expr=jule::Any(nullptr), ._field_Next=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8487_kind, &__jule_any_type45); __jule_collection; }));
	(*_8487_kind.alloc)._field_Scope=_1a7c241ba_checkIterScope(_self_, static_cast<jule::Uintptr>(_8487_kind), &((*((*(_84136_it))))._field_Scope));
	if (((*_8427_wh.alloc)._field_Expr != nullptr)) {
		jule::Ptr<_1a7cd41ae_Data> _8538_d = _1a7d09aa8_evalExpr(_1a7c6256b_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0)), (*_8427_wh.alloc)._field_Expr);;
		if ((_8538_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1a7d24dae_Prim> _8584_prim = _1a7d1e44c_Prim((*(_8538_d))._field_Kind.ptr());;
		if ((_8584_prim == nullptr)) {
			_1a7c59b18_pushErr((*(_self_))._field_s, (*((*(_84136_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1a7d280e3_IsBool(_8584_prim.ptr())))) {
			_1a7c59b18_pushErr((*(_self_))._field_s, (*((*(_84136_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		(*_8487_kind.alloc)._field_Expr=(*(_8538_d))._field_Model;
	};
	if (_1a7b995a2_IsWhileNext(_8427_wh)) {
		if ((!(_1a7c13099_isValidAstStForNextSt(&((*_8427_wh.alloc)._field_Next))))) {
			_1a7c59b18_pushErr((*(_self_))._field_s, (*_8427_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _8784_n = (*(*(_self_))._field_scope.alloc)._field_Stmts.len();;
		_1a7c2b9ca_checkNode(_self_, &((*_8427_wh.alloc)._field_Next));
		if ((_8784_n < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _8819_st = (*((*(_self_))._field_scope))._field_Stmts[_8784_n];;
			((*((*(_self_))._field_scope))._field_Stmts).mut_slice(0LL, _8784_n);;
			if ((!(_1a7c132db_isValidStForNextSt(&(_8819_st))))) {
				_1a7c59b18_pushErr((*(_self_))._field_s, (*_8427_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			};
			(*_8487_kind.alloc)._field_Next=_8819_st;
		};
	};
}



inline void _1a7c24b49_checkComptimeRangeIter(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b988d1_Iter>* _89144_it, jule::Ptr<_1a7c157b6_RangeIter>* _89160_kind, jule::Ptr<_1a7cd41ae_Data>* _89183_d) {
	if (((*((*(_89160_kind))))._field_KeyA != nullptr)) {
		if (((!(_1a7c591ab_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1a7c20826_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_89160_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_1a7c59b18_pushErr((*(_self_))._field_s, (*(*((*(_89160_kind))))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_89160_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1a7c59e7b_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_89160_kind))))._field_KeyB != nullptr)) {
		if (((!(_1a7c591ab_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1a7c20826_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_89160_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_1a7c59b18_pushErr((*(_self_))._field_s, (*(*((*(_89160_kind))))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_89160_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1a7c59e7b_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1a7b99b13_RangeKind> _9057_rang = (*((*(_89144_it))))._field_Kind.cast_ptr<_1a7b99b13_RangeKind>(&__jule_any_type46);;
	_1a7c2d69c_makeComptimeRange(_89183_d);
	if ((*((*(_89183_d))))._field_Decl) {
		_1a7c59b18_pushErr((*(_self_))._field_s, (*((*(_9057_rang))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not supports comptime iterations", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_89183_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	_1a7cc8c20_rangeChecker _9127_rc = _1a7cc8c20_rangeChecker{._field_sc=_self_, ._field_rang=_9057_rang, ._field_Kind=(*(_89160_kind)), ._field_d=(*(_89183_d))};;
	jule::Bool _9183_ok = _1a7ccac66_check(&_9127_rc);;
	if ((!(_9183_ok))) {
		return;;
	};
	jule::Ptr<_1a7bd5ba4_comptimeRange> _9237_comptime = _1a7d227e6_comptimeRange((*((*(_89183_d))))._field_Kind);;
	((_1a7bd5984_comptimeRangeKindMptrData*)(*(_9237_comptime))._field_kind.safe_type())->_1a7bd517b_ready((*(_9237_comptime))._field_kind.data, &((*((*(_89160_kind))))._field_KeyA), &((*((*(_89160_kind))))._field_KeyB));
	jule::I64 _9257_i = 0LL;;
	jule::I64 _9263_errors = (*(*(_self_))._field_s.alloc)._field_errors.len();;
	for (; (_9257_i < ((_1a7bd5984_comptimeRangeKindMptrData*)(*_9237_comptime.alloc)._field_kind.safe_type())->_1a7bd5830_len((*_9237_comptime.alloc)._field_kind.data)); (_9257_i)++) {
		{
			jule::Ptr<_1a7c1ac1c_scopeChecker> _9288_ssc = _1a7c2d12a_newChildChecker(_self_);;
			jule::Ptr<_1a7c1397e_Scope> _9298_scope = _1a7c213c6_getChild(_self_);;
			if (((*((*(_89160_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_89160_kind))))._field_KeyA.alloc)._field_Scope=_9298_scope;
				(*((*(_9288_ssc))._field_table))._field_Vars=jule::append((*(*(_9288_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c7b178_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_89160_kind))))._field_KeyA; __jule_collection; }));
			};
			if (((*((*(_89160_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_89160_kind))))._field_KeyB.alloc)._field_Scope=_9298_scope;
				(*(*(_9288_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_9288_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c7b178_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_89160_kind))))._field_KeyB; __jule_collection; }));
			};
			((_1a7bd5984_comptimeRangeKindMptrData*)(*_9237_comptime.alloc)._field_kind.safe_type())->_1a7bd5599_step((*_9237_comptime.alloc)._field_kind.data, _9257_i, &((*((*(_89160_kind))))._field_KeyA), &((*((*(_89160_kind))))._field_KeyB));
			_1a7c217e4_checkChildSsc(_self_, &((*((*(_89144_it))))._field_Scope), &(_9298_scope), &(_9288_ssc));
			if ((_9263_errors != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
				goto _iter_end_1ab46d9dd;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9298_scope, &__jule_any_type29); __jule_collection; }));
		}
	_iter_next_1ab46d9dd:;
	}
	_iter_end_1ab46d9dd:;;
}



inline void _1a7c24e02_checkRangeIter(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b988d1_Iter>* _94836_it) {
	jule::Ptr<_1a7b99b13_RangeKind> _9497_rang = (*((*(_94836_it))))._field_Kind.cast_ptr<_1a7b99b13_RangeKind>(&__jule_any_type46);;
	jule::Ptr<_1a7cd41ae_Data> _9517_d = _1a7d09767_evalExpr1(_1a7c6256b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0)), (*(_9497_rang))._field_Expr);;
	if ((_9517_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1a7c157b6_RangeIter> _9567_kind = jule::new_ptr<_1a7c157b6_RangeIter>(_1a7c157b6_RangeIter{._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Expr=_9517_d, ._field_KeyA=jule::Ptr<_1a7c7b178_Var>(nullptr), ._field_KeyB=jule::Ptr<_1a7c7b178_Var>(nullptr)});;
	if ((*((*(_94836_it))))._field_Comptime) {
		_1a7c24b49_checkComptimeRangeIter(_self_, _94836_it, &(_9567_kind), &(_9517_d));
		return;;
	};
	if (_1a7d21509_comptime((*(_9517_d))._field_Kind.ptr())) {
		_1a7c59b18_pushErr((*(_self_))._field_s, (*((*_9497_rang.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime expressions cannot be iterated at runtime", 50)), jule::Slice<jule::Any>());
		_1a7c59e7b_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("declarate comptime iteration like: const for ...", 48)), jule::Slice<jule::Any>());
		return;;
	};
	_1a7cc8c20_rangeChecker _9707_rc = _1a7cc8c20_rangeChecker{._field_sc=_self_, ._field_rang=_9497_rang, ._field_Kind=_9567_kind, ._field_d=_9517_d};;
	jule::Bool _9763_ok = _1a7ccac66_check(&_9707_rc);;
	if ((!(_9763_ok))) {
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9567_kind, &__jule_any_type47); __jule_collection; }));
	jule::Ptr<_1a7c1ac1c_scopeChecker> _9837_ssc = _1a7c2d12a_newChildChecker(_self_);;
	jule::Ptr<_1a7c1397e_Scope> _9847_scope = _1a7c213c6_getChild(_self_);;
	if (((*(_9567_kind))._field_KeyA != nullptr)) {
		if (((!(_1a7c591ab_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1a7c20826_isDuplicatedIdent(_self_, 0LLU, &((*(*(_9567_kind))._field_KeyA.alloc)._field_Ident)))) {
			_1a7c59b18_pushErr((*(_self_))._field_s, (*(*(_9567_kind))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_9567_kind))._field_KeyA.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1a7c59e7b_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_9567_kind))._field_KeyA.alloc)._field_Scope=_9847_scope;
		(*((*(_9837_ssc))._field_table))._field_Vars=jule::append((*(*(_9837_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c7b178_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9567_kind.alloc)._field_KeyA; __jule_collection; }));
	};
	if (((*_9567_kind.alloc)._field_KeyB != nullptr)) {
		if (((!(_1a7c591ab_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1a7c20826_isDuplicatedIdent(_self_, 0LLU, &((*(*(_9567_kind))._field_KeyB.alloc)._field_Ident)))) {
			_1a7c59b18_pushErr((*(_self_))._field_s, (*(*(_9567_kind))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_9567_kind))._field_KeyB.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1a7c59e7b_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_9567_kind))._field_KeyB.alloc)._field_Scope=_9847_scope;
		(*(*(_9837_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_9837_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c7b178_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9567_kind.alloc)._field_KeyB; __jule_collection; }));
	};
	_1a7c23818_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_9567_kind), (*((*(_94836_it))))._field_Scope, &(_9847_scope), _9837_ssc);
	(*_9567_kind.alloc)._field_Scope=_9847_scope;
}



inline void _1a7c251aa_checkIter(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b988d1_Iter> _100830_it) {
	if (_1a7b98c77_IsInf(_100830_it.ptr())) {
		if ((*_100830_it.alloc)._field_Comptime) {
			_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*_100830_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
			return;;
		};
		_1a7c24473_checkInfIter(_self_, &(_100830_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_100830_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ab489ad6:;
			{
				if ((*_100830_it.alloc)._field_Comptime) {
					_1a7c59b18_pushErr((*(_self_))._field_s, (*_100830_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
					return;;
				};
				_1a7c2472b_checkWhileIter(_self_, &(_100830_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1ab48aca2:;
			{
				_1a7c24e02_checkRangeIter(_self_, &(_100830_it));
			}
		}
		else {
			_case_begin_1ab48ac3b:;
			{
				jule::outln(_1a9954ee8_toStr(jule::Str::lit("error <unimplemented iteration kind>", 36)));
			}
		}
		_match_end_1ab48abc5:;
	};
}



inline jule::Bool _1a7c254eb_checkValidContLabel(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Uintptr _103236_it) {
	jule::Ptr<_1a7c1ac1c_scopeChecker> _10337_scope = _self_;;
	_julec_label_1ab490bb9:;
	if (((*(_10337_scope))._field_it == _103236_it)) {
		return true;;
	};
	if (((*_10337_scope.alloc)._field_parent != nullptr)) {
		_10337_scope=(*_10337_scope.alloc)._field_parent;
		goto _julec_label_1ab490bb9;
	};
	return false;;
}



inline jule::Bool _1a7c2583c_checkValidBreakLabel(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Uintptr _104837_ptr) {
	jule::Ptr<_1a7c1ac1c_scopeChecker> _10497_scope = _self_;;
	_julec_label_1ab495372:;
	if (((*(_10497_scope))._field_it == _104837_ptr)) {
		return true;;
	};
	if (((*_10497_scope.alloc)._field_cse != 0LLU)) {
		jule::Uintptr _10574_mtch = static_cast<jule::Uintptr>((*(((_1a7c18bd7_Case*)((*_10497_scope.alloc)._field_cse))))._field_Owner);;
		if ((_10574_mtch == _104837_ptr)) {
			return true;;
		};
	};
	if (((*_10497_scope.alloc)._field_parent != nullptr)) {
		_10497_scope=(*_10497_scope.alloc)._field_parent;
		goto _julec_label_1ab495372;
	};
	return false;;
}



inline jule::Ptr<_1a7c15b4b_ContSt> _1a7c25b7d_checkContValidScope(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b9a3b6_ContSt> _107136_c) {
	if (_1a7c1daaa_isDeferred(_self_)) {
		_1a7c59b18_pushErr((*_self_.alloc)._field_s.ptr(), (*(_107136_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*_107136_c.alloc)._field_Label != nullptr)) {
		return jule::new_ptr<_1a7c15b4b_ContSt>(_1a7c15b4b_ContSt{._field_It=0});;
	};
	jule::Ptr<_1a7c1ac1c_scopeChecker> _10817_scope = _self_;;
	_julec_label_1ab497b16:;
	{
		
		if (((((*_10817_scope.alloc)._field_it == 0LLU) && ((*_10817_scope.alloc)._field_parent != nullptr)) && ((*_10817_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1ab4997b6:;
			{
				_10817_scope=(*_10817_scope.alloc)._field_parent;
				goto _julec_label_1ab497b16;
			}
		}
		else if (((*_10817_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1ab49984e:;
			{
				return jule::new_ptr<_1a7c15b4b_ContSt>(_1a7c15b4b_ContSt{._field_It=(*_10817_scope.alloc)._field_it});;
			}
		}
		_match_end_1ab49971c:;
	};
	_1a7c59b18_pushErr((*(_self_))._field_s, (*_107136_c.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1a7c25e36_checkCont(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b9a3b6_ContSt> _109526_c) {
	jule::Ptr<_1a7c15b4b_ContSt> _10967_cont = _1a7c25b7d_checkContValidScope(_self_, _109526_c);;
	if ((_10967_cont == nullptr)) {
		return;;
	};
	if (((*(_109526_c))._field_Label != nullptr)) {
		jule::Ptr<_1a7c19c2c_scopeLabel> _11028_label = _1a7c11b25_findLabelParent(&((*(*(_109526_c))._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_11028_label == nullptr)) {
			_1a7c59b18_pushErr((*_self_.alloc)._field_s.ptr(), (*_109526_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_109526_c))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
			return;;
		};
		(*(_11028_label))._field_used=true;
		if ((((*((*(_11028_label))._field_node))._field_Index + 1LL) >= (*((*(*(_11028_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
			_1a7c59b18_pushErr((*(_self_))._field_s, (*_109526_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_109526_c))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
			return;;
		};
		jule::I64 _11154_i = ((*(*(_11028_label))._field_node.alloc)._field_Index + 1LL);;
		if ((_11154_i >= (*(*((*(_11028_label))._field_node))._field_Scope.alloc)._field_Stmts.len())) {
			_1a7c59b18_pushErr((*(_self_))._field_s, (*_109526_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), jule::Slice<jule::Any>());
		} else {
			jule::Any _11199_st = (*(*((*(_11028_label))._field_node))._field_Scope.alloc)._field_Stmts[_11154_i];;
			{
				auto &_match_expr{ _11199_st };
				
				if (_match_expr.type == &__jule_any_type43) {
					_case_begin_1ab4a6509:;
					{
						(*(_10967_cont))._field_It=static_cast<jule::Uintptr>(_11199_st.unsafe_cast_ptr<_1a7c148b4_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type47) {
					_case_begin_1ab4a5173:;
					{
						(*(_10967_cont))._field_It=static_cast<jule::Uintptr>(_11199_st.unsafe_cast_ptr<_1a7c157b6_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type45) {
					_case_begin_1ab4a5360:;
					{
						(*(_10967_cont))._field_It=static_cast<jule::Uintptr>(_11199_st.unsafe_cast_ptr<_1a7c14d6a_WhileIter>());
					}
				}
				else {
					_case_begin_1ab4a52e9:;
					{
						_1a7c59b18_pushErr((*(_self_))._field_s, (*_109526_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_109526_c))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
					}
				}
				_match_end_1ab4a5283:;
			};
		};
	};
	if (((*(_10967_cont))._field_It != 0LLU)) {
		if ((!(_1a7c254eb_checkValidContLabel(_self_, (*(_10967_cont))._field_It)))) {
			_1a7c59b18_pushErr((*(_self_))._field_s, (*_109526_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_109526_c))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_10967_cont, &__jule_any_type48); __jule_collection; }));
}



inline void _1a7c261de_checkLabel(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b92501_LabelSt> _114231_l) {
	if ((_1a7c1ec98_findLabel(_self_.ptr(), &((*(_114231_l))._field_Ident)) != nullptr)) {
		_1a7c59b18_pushErr((*_self_.alloc)._field_s.ptr(), (*_114231_l.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("label is already exist in this identifier: @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_114231_l.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1a7c164cb_Label> _11487_label = jule::new_ptr<_1a7c164cb_Label>(_1a7c164cb_Label{._field_Ident=(*_114231_l.alloc)._field_Ident, ._field_Scope=(*_self_.alloc)._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11487_label, &__jule_any_type28); __jule_collection; }));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c19c2c_scopeLabel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a7c19c2c_scopeLabel>(_1a7c19c2c_scopeLabel{._field_token=(*_114231_l.alloc)._field_Token, ._field_node=_11487_label, ._field_used=false}); __jule_collection; }));
}



inline void _1a7c26497_pushGoto(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b928ca_GotoSt> _116129_gt) {
	jule::Ptr<_1a7c16b3b_GotoSt> _11627_st = jule::new_ptr<_1a7c16b3b_GotoSt>(_1a7c16b3b_GotoSt{._field_Ident=(*((*_116129_gt.alloc)._field_Label))._field_Kind, ._field_Token=(*(_116129_gt))._field_Label, ._field_Label=jule::Ptr<_1a7c164cb_Label>(nullptr), ._field_Scope=(*(_self_))._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11627_st, &__jule_any_type49); __jule_collection; }));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c16b3b_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _11627_st; __jule_collection; }));
}



inline void _1a7c26750_checkPostfix(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b938ba_AssignSt> _117233_a) {
	if (((*(_117233_a))._field_Left.len() > 1LL)) {
		_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*_117233_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7b89251_Expr> _11787_expr = (*((*(_117233_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1a7cd41ae_Data> _11797_d = _1a7d09aa8_evalExpr(_1a7c6256b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0)), _11787_expr);;
	if ((_11797_d == nullptr)) {
		return;;
	};
	_1a7c12bc0_checkAssign(&((*_self_.alloc)._field_s), &(_11797_d), nullptr, (*_117233_a.alloc)._field_Setter);
	if ((_1a7d1e969_Ptr((*(_11797_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a7d2c1a2_Ptr> _11878_ptr = _1a7d1e969_Ptr((*(_11797_d))._field_Kind);;
		if (_1a7d2cc1e_IsUnsafe(_11878_ptr.ptr())) {
			_1a7c59b18_pushErr((*(_self_))._field_s, (*_117233_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_117233_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*(_11797_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return;;
		};
	} else {
		if (((_1a7d1e44c_Prim((*(_11797_d))._field_Kind.ptr()) == nullptr) || (!(_1c0069dbc_IsNum((*(_1a7d1e44c_Prim((*(_11797_d))._field_Kind)))._field_Kind))))) {
			_1a7c59b18_pushErr((*(_self_))._field_s, (*_117233_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_117233_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*(_11797_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1a7c17015_Postfix>(_1a7c17015_Postfix{._field_Expr=(*(_11797_d))._field_Model, ._field_Op=(*((*_117233_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type50); __jule_collection; }));
}



inline jule::Bool _1a7c26a91_isNewAssignIdent(_1a7c1ac1c_scopeChecker* _self_, jule::Str _120532_ident) {
	if ((_1a7b6c4dc_IsIgnoreIdent(_120532_ident) || (_120532_ident).empty())) {
		return false;;
	};
	return (_1a7cd1de3_defByIdent((*(_self_))._field_table.ptr(), &(_120532_ident), false) == nullptr);;
}



inline void _1a7c26d49_removeInteriorMutRisk(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7cd41ae_Data>* _121843_d) {
	jule::Ptr<_1a7ba8b11_StructIns> _12193_s = _1a7d209c0_Struct((*((*(_121843_d))))._field_Kind.ptr());;
	if ((_12193_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1a7c1ac1c_scopeChecker> _12233_root = _1a7c1e380_getHardRoot(_self_);;
	if (((*((*(_12233_root))._field_owner))._field_Owner != _12193_s)) {
		return;;
	};
	(*((*(_121843_d))))._field_Mutable=true;
}



inline jule::Bool _1a7c27300_checkStructureAssignOp(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _123244_s, jule::Ptr<_1a7b938ba_AssignSt>* _123264_a, jule::Ptr<_1a7cd41ae_Data>* _123283_r) {
	jule::Ptr<_1a7bbd8b2_FnIns> _123511_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_123264_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1ab4c701e:;
			{
				_123511_overload=(*((*(_123244_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1ab4c6bbc:;
			{
				_123511_overload=(*((*(_123244_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1ab4c6c33:;
			{
				_123511_overload=(*((*(_123244_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1ab4c6c99:;
			{
				_123511_overload=(*((*(_123244_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1ab4c6d10:;
			{
				_123511_overload=(*((*(_123244_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1ab4c6d76:;
			{
				_123511_overload=(*((*(_123244_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1ab4c6ddc:;
			{
				_123511_overload=(*((*(_123244_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1ab4c8691:;
			{
				_123511_overload=(*((*(_123244_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1ab4c8707:;
			{
				_123511_overload=(*((*(_123244_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1ab4c876d:;
			{
				_123511_overload=(*((*(_123244_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1ab4c64c4:;
			{
				_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_123264_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_123264_a))))._field_Setter))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a7ba8eb8_Str((*(_123244_s)).ptr()), &__jule_any_type4); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1ab4c6b45:;
	};
	if ((_123511_overload == nullptr)) {
		_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_123264_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_123264_a))))._field_Setter))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a7ba8eb8_Str((*(_123244_s)).ptr()), &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1a7bbc839_ParamIns> _12677_p = (*(_123511_overload))._field_Params[1LL];;
	return _1a7c62b87_checkAssignType((*(_self_))._field_s, (*((*(_12677_p))._field_Decl))._field_Reference, &((*_12677_p.alloc)._field_Kind), _123283_r, (*((*(_123264_a))))._field_Setter, _1a7c1e616_getOwnerRefers(_self_));;
}



inline void _1a7c275a8_checkSingleAssign(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b938ba_AssignSt>* _127139_a) {
	jule::Ptr<_1a7cd41ae_Data> _127211_l = nullptr;;
	if ((!(_1a7b6c4dc_IsIgnoreIdent((*((*((*(_127139_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1a7b89251_Expr> _12758_expr = (*((*((*(_127139_a))))._field_Left[0LL]))._field_Expr;;
		_127211_l=_1a7d09aa8_evalExpr(_1a7c6256b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0)), _12758_expr);
		if ((_127211_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1a7cd5dd6_eval> _12827_eval = static_cast<jule::Ptr<_1a7cd5dd6_eval>>(nullptr);;
	if ((_127211_l != nullptr)) {
		_12827_eval=_1a7c6222a_evalp((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0), (*(_127211_l))._field_Kind);
	} else {
		_12827_eval=_1a7c6256b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0));
	};
	(*(_12827_eval))._field_unsafety=_1a7c1d109_isUnsafe(_self_);
	jule::Ptr<_1a7cd41ae_Data> _12897_r = _1a7d09aa8_evalExpr(_12827_eval, (*((*(_127139_a))))._field_Right);;
	if ((_12897_r == nullptr)) {
		return;;
	};
	_1a7c26d49_removeInteriorMutRisk(_self_, &(_12897_r));
	if ((_127211_l == nullptr)) {
		if (_1a7d1d160_Void((*(_12897_r))._field_Kind.ptr())) {
			_1a7c59b18_pushErr((*(_self_))._field_s, (*((*((*(_127139_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		if (((*((*((*(_127139_a))))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1a7c59b18_pushErr((*(_self_))._field_s, (*((*(_127139_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_12897_r, &__jule_any_type31); __jule_collection; }));
		return;;
	};
	if ((!(_1a7c12bc0_checkAssign(&((*_self_.alloc)._field_s), &(_127211_l), _12897_r, (*((*(_127139_a))))._field_Setter)))) {
		return;;
	};
	if ((_1a7d21273_Tup((*(_12897_r))._field_Kind) != nullptr)) {
		_1a7c59b18_pushErr((*(_self_))._field_s, (*((*(_127139_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7bac928_OperandExprModel> _13167_lm = jule::new_ptr<_1a7bac928_OperandExprModel>(_1a7bac928_OperandExprModel{._field_Kind=(*(_127211_l))._field_Kind, ._field_Model=(*(_127211_l))._field_Model});;
	jule::Ptr<_1a7bac928_OperandExprModel> _13207_rm = jule::new_ptr<_1a7bac928_OperandExprModel>(_1a7bac928_OperandExprModel{._field_Kind=(*(_12897_r))._field_Kind, ._field_Model=(*(_12897_r))._field_Model});;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1a7c174bb_Assign>(_1a7c174bb_Assign{._field_Left=_13167_lm, ._field_Right=_13207_rm, ._field_Op=(*((*(_127139_a))))._field_Setter}), &__jule_any_type51); __jule_collection; }));
	if (((*(*((*(_127139_a))))._field_Setter.alloc)._field_Id == static_cast<jule::U64>(71LLU))) {
		_1a7cbc7c4_assignTypeChecker _13278_checker = _1a7cbc7c4_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_127211_l))._field_Kind, ._field_d=_12897_r, ._field_errorToken=(*((*(_127139_a))))._field_Setter, ._field_refers=_1a7c1e616_getOwnerRefers(_self_)};;
		if (_1a7cbd7c5_check(&_13278_checker)) {
			(*(_13207_rm))._field_Model=(*(_12897_r))._field_Model;
			(*(_13167_lm))._field_Model=(*(_127211_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1a7ba8b11_StructIns> _13407_strct = _1a7d209c0_Struct((*(_127211_l))._field_Kind);;
	if ((_13407_strct != nullptr)) {
		_1a7c27300_checkStructureAssignOp(_self_, &(_13407_strct), _127139_a, &(_12897_r));
		return;;
	};
	jule::U64 _13453_id = (*(*((*(_127139_a))))._field_Setter.alloc)._field_Id;;
	(*(*((*(_127139_a))))._field_Setter.alloc)._field_Id=_1a7c2d46b_removeEqFromOp((*(*((*(_127139_a))))._field_Setter.alloc)._field_Id);
	_1a7d0bec8_binaryEval _13477_solver = static__1a7d0c935_new(_12827_eval, (*((*(_127139_a))))._field_Setter);;
	({
		jule::Ptr<_1a7cd41ae_Data> ___jule_assign_arg = _127211_l;
		jule::Ptr<_1a7cd41ae_Data> _1___jule_assign_arg = _12897_r;
		_13477_solver._field_l = ___jule_assign_arg;
		_13477_solver._field_r = _1___jule_assign_arg;
	});
	_1a7d11b15_evalOp(&_13477_solver);
	(*(*((*(_127139_a))))._field_Setter.alloc)._field_Id=_13453_id;
}



inline void _1a7c27be6_processEndPartOfMultiAssign(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7c17972_MultiAssign>* _135349_st, jule::Ptr<_1a7b938ba_AssignSt>* _135372_a, jule::Ptr<_1a7b93337_AssignLeft>* _13548_lexpr, jule::Ptr<_1a7cd41ae_Data>* _135433_l, jule::Ptr<_1a7cd41ae_Data>* _135448_r, jule::Bool _135458_strict) {
	if (((!((*((*(_13548_lexpr))))._field_Reference)) && _1a7b6c4dc_IsIgnoreIdent((*((*(_13548_lexpr))))._field_Ident))) {
		if (_1a7d1d160_Void((*((*(_135448_r))))._field_Kind.ptr())) {
			_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_135372_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1a7cd41ae_Data>> &__jule_push_dest = (*((*(_135349_st))))._field_Left; __jule_push_dest.push(nullptr); };
		return;;
	};
	if ((*((*(_135372_a))))._field_Declarative) {
		{
			auto &_match_expr{ (*((*((*(_13548_lexpr))))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type52) {
				_case_begin_1ab4e8abd:;
				{
					if ((!(_1a7c26a91_isNewAssignIdent(_self_, (*((*(_13548_lexpr))))._field_Ident)))) {
						goto _julec_label_1ab504447;
					};
				}
			}
			else {
				_case_begin_1ab4e8a57:;
				{
					if (((*((*(_13548_lexpr))))._field_Mutable || (*((*(_13548_lexpr))))._field_Reference)) {
						_1a7c59b18_pushErr((*(_self_))._field_s, (*((*(_13548_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						return;;
					};
					goto _julec_label_1ab504447;
				}
			}
			_match_end_1ab4e89e1:;
		};
		if (_1a7c20826_isDuplicatedIdent(_self_, 0LLU, &((*((*(_13548_lexpr))))._field_Ident))) {
			_1a7c59b18_pushErr((*(_self_))._field_s, (*((*(_13548_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_13548_lexpr))))._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1a7c59e7b_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
			_1a7c1d58d_stop(_self_);
			return;;
		};
		if (_1a7b6c4dc_IsIgnoreIdent((*((*(_13548_lexpr))))._field_Ident)) {
			_1a7c59b18_pushErr((*(_self_))._field_s, (*((*(_13548_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a7c7b178_Var> _13868_v = jule::new_ptr<_1a7c7b178_Var>(_1a7c7b178_Var{._field_Scope=(*_self_.alloc)._field_scope, ._field_Token=(*((*(_13548_lexpr))))._field_Token, ._field_Ident=(*((*(_13548_lexpr))))._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*((*(_13548_lexpr))))._field_Mutable, ._field_Public=false, ._field_Used=false, ._field_Statically=false, ._field_Reference=(*((*(_13548_lexpr))))._field_Reference, ._field_Kind=jule::Ptr<_1a7d244a7_TypeSymbol>(nullptr), ._field_Value=jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=(*((*(_135372_a))))._field_Right, ._field_Data=(*(_135448_r))}), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a7c7b178_Var>>(nullptr)});;
		_1a7c7202b_checkVarValue((*(_self_))._field_s, &(_13868_v));
		{ jule::Slice<jule::Ptr<_1a7cd41ae_Data>> &__jule_push_dest = (*((*(_135349_st))))._field_Left; __jule_push_dest.push(jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=(*((*_13868_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_13868_v.alloc)._field_Mutable, ._field_Reference=(*_13868_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_13868_v))._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_13868_v, &__jule_any_type8), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)})); };
		{ jule::Slice<jule::Ptr<_1a7c7b178_Var>> &__jule_push_dest = (*((*(_135349_st))))._field_Decls; __jule_push_dest.push(_13868_v); };
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c7b178_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _13868_v; __jule_collection; }));
		return;;
	};
	_julec_label_1ab504447:;
	if (((*((*(_13548_lexpr))))._field_Mutable || (*((*(_13548_lexpr))))._field_Reference)) {
		_1a7c59b18_pushErr((*(_self_))._field_s, (*((*(_13548_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_13548_lexpr))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1a7c59e7b_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if ((!(_1a7c12bc0_checkAssign(&((*_self_.alloc)._field_s), _135433_l, (*(_135448_r)), (*((*(_13548_lexpr))))._field_Token)))) {
		return;;
	};
	jule::Bool _14217_reference = false;;
	if (_1a7c6741c_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_135433_l))))._field_Mutable, _14217_reference, &((*((*(_135433_l))))._field_Kind), _135448_r, &((*((*(_13548_lexpr))))._field_Token))) {
		_14217_reference=_135458_strict;
		_1a7c62b87_checkAssignType((*(_self_))._field_s, _14217_reference, &((*((*(_135433_l))))._field_Kind), _135448_r, (*((*(_13548_lexpr))))._field_Token, _1a7c1e616_getOwnerRefers(_self_));
	};
	{ jule::Slice<jule::Ptr<_1a7cd41ae_Data>> &__jule_push_dest = (*((*(_135349_st))))._field_Left; __jule_push_dest.push((*(_135433_l))); };
}



inline void _1a7c27e9e_checkMultiAssign(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b938ba_AssignSt>* _142938_a) {
	if ((((*((*((*(_142938_a))))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU)) && ((*(*((*(_142938_a))))._field_Setter.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
		_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_142938_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7cd41ae_Data> _14347_rd = _1a7d09aa8_evalExpr(_1a7c6256b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0)), (*((*(_142938_a))))._field_Right);;
	if ((_14347_rd == nullptr)) {
		return;;
	};
	jule::Bool _14387_strict = false;;
	jule::Slice<jule::Ptr<_1a7cd41ae_Data>> _14397_right = _1a7c11e66_getDatasFromTupleData(&(_14347_rd));;
	if ((_14397_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_14397_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type53) {
				_case_begin_1ab50e84d:;
				{
					jule::Ptr<_1a7bb0783_IndexingExprModel> _14439_iem = (*(_14397_right[0LL]))._field_Model.unsafe_cast_ptr<_1a7bb0783_IndexingExprModel>();;
					if ((_1a7d20edc_Map((*((*(_14439_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_14387_strict=true;
						_14397_right=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7cd41ae_Data>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=(*(_1a7d20edc_Map((*((*(_14439_iem))._field_Expr))._field_Kind)))._field_Val, ._field_Mutable=(*(_14397_right[0LL]))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)}); (*it++) = jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)}); __jule_collection; });
					};
				}
			}
			_match_end_1ab50e793:;
		};
	};
	{
		
		if (((*((*(_142938_a))))._field_Left.len() > _14397_right.len())) {
			_case_begin_1ab510156:;
			{
				_1a7c59b18_pushErr((*(_self_))._field_s, (*((*(_142938_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("overflow multi assignment identifers", 36)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_142938_a))))._field_Left.len() < _14397_right.len())) {
			_case_begin_1ab5101bc:;
			{
				_1a7c59b18_pushErr((*(_self_))._field_s, (*((*(_142938_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1ab5100ac:;
	};
	jule::Ptr<_1a7c17972_MultiAssign> _14637_st = jule::new_ptr<_1a7c17972_MultiAssign>(_1a7c17972_MultiAssign{._field_Decls=jule::Slice<jule::Ptr<_1a7c7b178_Var>>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1a7cd41ae_Data>>(nullptr), ._field_Right=(*(_14347_rd))._field_Model});;
	{
		auto expr = &((*((*(_142938_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab517c96:;
		if (it != expr_end) {
			jule::I64 _14667_i = it - expr->begin();
			{
				jule::Ptr<_1a7b93337_AssignLeft> _14678_lexpr = (*((*(_142938_a))))._field_Left[_14667_i];;
				jule::Ptr<_1a7cd41ae_Data> _146812_l = nullptr;;
				if ((!(_1a7b6c4dc_IsIgnoreIdent((*(_14678_lexpr))._field_Ident)))) {
					if ((!((*((*(_142938_a))))._field_Declarative))) {
						goto _julec_label_1ab519539;
					};
					if (((*_14678_lexpr.alloc)._field_Mutable && (*_14678_lexpr.alloc)._field_Reference)) {
						goto _julec_label_1ab51c33e;
					};
					{
						auto &_match_expr{ (*((*(_14678_lexpr))._field_Expr))._field_Kind };
						
						if (_match_expr.type == &__jule_any_type52) {
							_case_begin_1ab51a749:;
							{
								if (_1a7c26a91_isNewAssignIdent(_self_, (*_14678_lexpr.alloc)._field_Ident)) {
									goto _julec_label_1ab51c33e;
								};
							}
						}
						_match_end_1ab51a6c2:;
					};
					_julec_label_1ab519539:;
					_146812_l=_1a7d09aa8_evalExpr(_1a7c6256b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0)), (*_14678_lexpr.alloc)._field_Expr);
					if ((_146812_l == nullptr)) {
						goto _iter_next_1ab517c96;
					};
					_julec_label_1ab51c33e:;
				};
				jule::Ptr<_1a7cd41ae_Data> _14898_r = _14397_right[_14667_i];;
				_1a7c26d49_removeInteriorMutRisk(_self_, &(_14898_r));
				_1a7c27be6_processEndPartOfMultiAssign(_self_, &(_14637_st), _142938_a, &(_14678_lexpr), &(_146812_l), &(_14898_r), _14387_strict);
			}
			_iter_next_1ab517c96:;
			++it;
			_14667_i++;
			goto _iter_begin_1ab517c96;
		}
		_iter_end_1ab517c96:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_14637_st, &__jule_any_type54); __jule_collection; }));
}



inline void _1a7c28257_checkAssignSt(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b938ba_AssignSt> _149634_a) {
	{
		
		if (_1a7b6e687_IsPostfixOp((*((*(_149634_a))._field_Setter))._field_Id)) {
			_case_begin_1ab51e1dc:;
			{
				_1a7c26750_checkPostfix(_self_, _149634_a);
			}
		}
		else if (((*(_149634_a))._field_Left.len() == 1LL)) {
			_case_begin_1ab51dd8a:;
			{
				_1a7c275a8_checkSingleAssign(_self_, &(_149634_a));
			}
		}
		else {
			_case_begin_1ab51dd24:;
			{
				_1a7c27e9e_checkMultiAssign(_self_, &(_149634_a));
			}
		}
		_match_end_1ab51dc36:;
	};
}



inline jule::Ptr<_1a7c1397e_Scope> _1a7c28653_checkCaseScope(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7c18bd7_Case>* _150732_c, jule::Ptr<_1a7b94e3d_ScopeTree>* _150747_tree) {
	jule::Ptr<_1a7c1ac1c_scopeChecker> _15087_ssc = _1a7c2d12a_newChildChecker(_self_);;
	(*(_15087_ssc))._field_cse=static_cast<jule::Uintptr>((*(_150732_c)));
	return _1a7c21be0_checkChildSc(_self_, _150747_tree, &(_15087_ssc));;
}



inline jule::Ptr<_1a7c18bd7_Case> _1a7c28bb4_checkCase(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7c181ae_Match> _151330_m, jule::I64 _151341_i, jule::Ptr<_1a7b9bde0_Case> _151353_c, jule::Ptr<_1a7cd41ae_Data> _151372_expr) {
	jule::Ptr<_1a7c18bd7_Case> _15147_case = (*(_151330_m))._field_Cases[_151341_i];;
	(*(_15147_case))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7cd41ae_Data>>::alloc(0LL, (*(_151353_c))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7cd41ae_Data>(nullptr); __jule_collection; });
	jule::Bool _15167_constMatched = false;;
	jule::Ptr<_1a7cd5dd6_eval> _15177_eval = _1a7c6256b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0));;
	{
		auto expr = &((*_151353_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab524984:;
		if (it != expr_end) {
			jule::Ptr<_1a7b89251_Expr> _151815_e = *it;
			{
				jule::Ptr<_1a7cd41ae_Data> _15198_d = _1a7d08c94_evalExprKind(_15177_eval, (*(_151815_e))._field_Kind);;
				if ((_15198_d == nullptr)) {
					goto _iter_next_1ab524984;
				};
				if ((*_151330_m.alloc)._field_TypeMatch) {
					(*_15147_case.alloc)._field_Exprs=jule::append((*_15147_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7cd41ae_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15198_d; __jule_collection; }));
					if ((_1a7c2e0a4_countMatchType(&(_151330_m), &((*(_15198_d))._field_Kind)) > 1LL)) {
						_1a7c59b18_pushErr((*(_self_))._field_s, (*_151815_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("duplicated pattern: type @ is already matched", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_15198_d))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
					};
					if ((*_151330_m.alloc)._field_Comptime) {
						_15167_constMatched=(_15167_constMatched || _1a7d1c4d3_Equal((*(_151372_expr))._field_Kind, (*(_15198_d))._field_Kind));
					} else {
						if ((_1a7d1ee86_TypeEnum((*(_151372_expr))._field_Kind) != nullptr)) {
							_1a7c635e4_checkTypeCompatibility((*(_self_))._field_s, &((*(_151372_expr))._field_Kind), &((*(_15198_d))._field_Kind), &((*_151815_e.alloc)._field_Token));
						} else {
							jule::Ptr<_1a7bce362_Trait> _15387_trt = _1a7d20c56_Trait((*(_151372_expr))._field_Kind);;
							if ((_15387_trt != nullptr)) {
								_1a7c635e4_checkTypeCompatibility((*(_self_))._field_s, &((*(_151372_expr))._field_Kind), &((*(_15198_d))._field_Kind), &((*_151815_e.alloc)._field_Token));
							};
						};
					};
					_1a7d155db_applyRuntimeToStr(&((*_self_.alloc)._field_s), &((*(_15198_d))._field_Kind), &((*((*_151330_m.alloc)._field_Expr))._field_Kind), &((*_151815_e.alloc)._field_Token), _1a7c1e616_getOwnerRefers(_self_));
					goto _iter_next_1ab524984;
				};
				if ((*(_15198_d))._field_Decl) {
					_1a7c59b18_pushErr((*(_self_))._field_s, (*_151815_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expecting expression, found type declaration", 44)), jule::Slice<jule::Any>());
					_1a7c59e7b_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can use type-match if you want to match types", 49)), jule::Slice<jule::Any>());
					goto _iter_next_1ab524984;
				};
				if ((*_151330_m.alloc)._field_Comptime) {
					if (((!(_1a7cd4ae9_IsConst(_15198_d.ptr()))) && (_1a7d22d13_comptimeTypeInfo((*(_15198_d))._field_Kind) == nullptr))) {
						_1a7c59b18_pushErr((*(_self_))._field_s, (*_151815_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
						_1a7c59e7b_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
						goto _iter_next_1ab524984;
					};
					if ((!(_15167_constMatched))) {
						if (_1a7cd4ae9_IsConst(_15198_d.ptr())) {
							_15167_constMatched=(_1a7cd4ae9_IsConst(_151372_expr.ptr()) && _1c0071049_Eq((*(_15198_d))._field_Constant.ptr(), (*((*(_151372_expr))._field_Constant))));
						} else {
							jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _15647_exprCti = _1a7d22d13_comptimeTypeInfo((*(_151372_expr))._field_Kind);;
							_15167_constMatched=((_15647_exprCti != nullptr) && _1a7d1c4d3_Equal((*(_1a7d22d13_comptimeTypeInfo((*(_15198_d))._field_Kind)))._field_base, (*_15647_exprCti.alloc)._field_base));
						};
					};
				};
				(*_15147_case.alloc)._field_Exprs=jule::append((*_15147_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7cd41ae_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15198_d; __jule_collection; }));
				if ((((!((*_151330_m.alloc)._field_Comptime)) || (_1a7d22d13_comptimeTypeInfo((*(_151372_expr))._field_Kind) == nullptr)) || (_1a7d22d13_comptimeTypeInfo((*(_15198_d))._field_Kind) == nullptr))) {
					_1a7cbc7c4_assignTypeChecker _15749_checker = _1a7cbc7c4_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_151372_expr))._field_Kind, ._field_d=_15198_d, ._field_errorToken=(*_151815_e.alloc)._field_Token, ._field_refers=_1a7c1e616_getOwnerRefers(_self_)};;
					_1a7cbd7c5_check(&_15749_checker);
				};
			}
			_iter_next_1ab524984:;
			++it;
			goto _iter_begin_1ab524984;
		}
		_iter_end_1ab524984:;
	};
	if (((!((*_151330_m.alloc)._field_Comptime)) || _15167_constMatched)) {
		(*_15147_case.alloc)._field_Scope=_1a7c28653_checkCaseScope(_self_, &(_15147_case), &((*_151353_c.alloc)._field_Scope));
	};
	return _15147_case;;
}



inline void _1a7c290d2_checkCases(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b9c709_MatchCase>* _159032_m, jule::Ptr<_1a7c181ae_Match> _159051_rm, jule::Ptr<_1a7cd41ae_Data> _159067_expr) {
	(*(_159051_rm))._field_Cases=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c18bd7_Case>>::alloc(0LL, (*((*(_159032_m))))._field_Cases.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7c18bd7_Case>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_159032_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5387ab:;
		if (it != expr_end) {
			jule::I64 _15927_i = it - expr->begin();
			{
				jule::Ptr<_1a7c18bd7_Case> _15938_case = jule::new_ptr<_1a7c18bd7_Case>(_1a7c18bd7_Case{._field_Owner=_159051_rm, ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1a7cd41ae_Data>>(nullptr), ._field_Next=jule::Ptr<_1a7c18bd7_Case>(nullptr)});;
				if ((_15927_i > 0LL)) {
					(*((*_159051_rm.alloc)._field_Cases[(_15927_i - 1LL)]))._field_Next=_15938_case;
				};
				(*_159051_rm.alloc)._field_Cases=jule::append((*_159051_rm.alloc)._field_Cases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c18bd7_Case>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15938_case; __jule_collection; }));
			}
			_iter_next_1ab5387ab:;
			++it;
			_15927_i++;
			goto _iter_begin_1ab5387ab;
		}
		_iter_end_1ab5387ab:;
	};
	if ((((*_159051_rm.alloc)._field_Default != nullptr) && ((*((*(_159032_m))))._field_Cases.len() > 0LL))) {
		(*((*_159051_rm.alloc)._field_Cases[((*_159051_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_159051_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_159032_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab53bced:;
		if (it != expr_end) {
			jule::I64 _16068_i = it - expr->begin();
			jule::Ptr<_1a7b9bde0_Case> _160615_c = *it;
			{
				_1a7c28bb4_checkCase(_self_, _159051_rm, _16068_i, _160615_c, _159067_expr);
			}
			_iter_next_1ab53bced:;
			++it;
			_16068_i++;
			goto _iter_begin_1ab53bced;
		}
		_iter_end_1ab53bced:;
	};
}



inline jule::Ptr<_1a7c18bd7_Case> _1a7c294cd_checkDefault(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7c181ae_Match> _161133_m, jule::Ptr<_1a7b9ac46_Else> _161148_d) {
	jule::Ptr<_1a7c18bd7_Case> _16127_def = jule::new_ptr<_1a7c18bd7_Case>(_1a7c18bd7_Case{._field_Owner=_161133_m, ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1a7cd41ae_Data>>(nullptr), ._field_Next=jule::Ptr<_1a7c18bd7_Case>(nullptr)});;
	(*(_16127_def))._field_Scope=_1a7c28653_checkCaseScope(_self_, &(_16127_def), &((*(_161148_d))._field_Scope));
	return _16127_def;;
}



inline void _1a7c29841_checkComptimePanic(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b69b05_Token> _161939_callToken, jule::Ptr<_1a7c1397e_Scope>* _161959_s) {
	if (((*((*(_161959_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16233_stmt = (*((*(_161959_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16233_stmt };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ab5404e9:;
			{
				jule::Ptr<_1a7cd41ae_Data> _16264_d = _16233_stmt.unsafe_cast_ptr<_1a7cd41ae_Data>();;
				{
					auto &_match_expr{ (*(_16264_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1ab5414c8:;
						{
							jule::Ptr<_1a7bb4567_BuiltinPanicCallExprModel> _16299_m = (*(_16264_d))._field_Model.unsafe_cast_ptr<_1a7bb4567_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ (*(_16299_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type20) {
									_case_begin_1ab542694:;
									{
										jule::Ptr<_1c006a461_Const> _16326_c = (*(_16299_m))._field_Expr.unsafe_cast_ptr<_1c006a461_Const>();;
										if ((!(_1c006ec18_IsStr(_16326_c.ptr())))) {
											goto _match_end_1ab54261c;
										};
										if ((_161939_callToken == nullptr)) {
											jule::Ptr<_1a7c1ac1c_scopeChecker> _163711_root = _1a7c1e380_getHardRoot(_self_);;
											if (((*(_163711_root))._field_calledFrom == nullptr)) {
												_161939_callToken=(*(_16299_m))._field_Token;
											} else {
												_161939_callToken=(*(_163711_root))._field_calledFrom;
											};
										};
										_1a7c59b18_pushErr((*_self_.alloc)._field_s.ptr(), _161939_callToken, static_cast<jule::Str>(jule::Str::lit("compile-time panic: @", 21)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c006c61c_ReadStr(_16326_c), &__jule_any_type4); __jule_collection; }));
										_1a7c1d58d_stop(_self_);
									}
								}
								_match_end_1ab54261c:;
							};
						}
					}
					_match_end_1ab541462:;
				};
			}
		}
		_match_end_1ab53ea37:;
	};
}



inline void _1a7c29ba4_processConstMatch(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7c181ae_Match>* _165139_tm, jule::Ptr<_1a7b9c709_MatchCase>* _165156_m) {
	{
		auto expr = &((*((*(_165139_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab542ae5:;
		if (it != expr_end) {
			jule::I64 _16528_i = it - expr->begin();
			jule::Ptr<_1a7c18bd7_Case> _165215_c = *it;
			{
				if (((*(_165215_c))._field_Scope != nullptr)) {
					jule::Ptr<_1a7b69b05_Token> _165413_token = nullptr;;
					if (((!((*((*(_165139_tm))))._field_TypeMatch)) && ((*(*(_165215_c))._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_165413_token=(*((*((*((*(_165156_m))))._field_Cases[_16528_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1a7c29841_checkComptimePanic(_self_, _165413_token, &((*_165215_c.alloc)._field_Scope));
					(*((*(_165139_tm))))._field_Default=_165215_c;
					(*((*(_165139_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1ab542ae5:;
			++it;
			_16528_i++;
			goto _iter_begin_1ab542ae5;
		}
		_iter_end_1ab542ae5:;
	};
	if (((*((*(_165156_m))))._field_Default != nullptr)) {
		(*((*(_165139_tm))))._field_Cases=nullptr;
		(*((*(_165139_tm))))._field_Default=_1a7c294cd_checkDefault(_self_, (*(_165139_tm)), (*((*(_165156_m))))._field_Default);
		if (((*((*(_165139_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1a7b69b05_Token> _166813_token = nullptr;;
			if ((!((*((*(_165139_tm))))._field_TypeMatch))) {
				_166813_token=(*((*((*((*(_165156_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1a7c29841_checkComptimePanic(_self_, _166813_token, &((*(*((*(_165139_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_165139_tm))))._field_Cases=nullptr;
	};
}



inline void _1a7c29e5c_checkTypeMatch(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b9c709_MatchCase>* _168036_m) {
	jule::Ptr<_1a7cd41ae_Data> _16817_d = _1a7d090d5_eval1(_1a7c6256b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0)), (*((*(_168036_m))))._field_Expr);;
	if ((_16817_d == nullptr)) {
		return;;
	};
	if ((*((*(_168036_m))))._field_Comptime) {
		jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _16878_cti = _1a7d22d13_comptimeTypeInfo((*(_16817_d))._field_Kind.ptr());;
		if ((_16878_cti == nullptr)) {
			if ((!((*(_16817_d))._field_Decl))) {
				_1a7c59b18_pushErr((*(_self_))._field_s, (*((*((*(_168036_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime type-match expressions can take only type declarations", 63)), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_16817_d))._field_Kind=(*(_16878_cti))._field_base;
		};
	} else if (((*(_16817_d))._field_Decl || (!(((((_1a7d1e44c_Prim((*(_16817_d))._field_Kind.ptr()) != nullptr) && _1a7d28610_IsAny(_1a7d1e44c_Prim((*(_16817_d))._field_Kind).ptr())) || (_1a7d20c56_Trait((*(_16817_d))._field_Kind) != nullptr)) || (_1a7d1ee86_TypeEnum((*(_16817_d))._field_Kind) != nullptr)))))) {
		_1a7c59b18_pushErr((*(_self_))._field_s, (*((*((*(_168036_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7c181ae_Match> _17017_tm = jule::new_ptr<_1a7c181ae_Match>(_1a7c181ae_Match{._field_Scope=(*_self_.alloc)._field_scope, ._field_Expr=_16817_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_168036_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1a7c18bd7_Case>>(nullptr), ._field_Default=jule::Ptr<_1a7c18bd7_Case>(nullptr)});;
	if (((!((*(_17017_tm))._field_Comptime)) && ((*((*(_168036_m))))._field_Default != nullptr))) {
		(*_17017_tm.alloc)._field_Default=_1a7c294cd_checkDefault(_self_, _17017_tm, (*((*(_168036_m))))._field_Default);
	};
	_1a7c290d2_checkCases(_self_, _168036_m, _17017_tm, _16817_d);
	if ((*_17017_tm.alloc)._field_Comptime) {
		_1a7c29ba4_processConstMatch(_self_, &(_17017_tm), _168036_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_17017_tm, &__jule_any_type55); __jule_collection; }));
}



inline void _1a7c2a215_checkCommonMatch(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b9c709_MatchCase>* _172338_m) {
	jule::Ptr<_1a7cd41ae_Data> _172411_d = nullptr;;
	if (((*((*(_172338_m))))._field_Expr == nullptr)) {
		_172411_d=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1c006ae67_NewBool(true)});
		(*(_172411_d))._field_Model=jule::Any((*_172411_d.alloc)._field_Constant, &__jule_any_type20);
	} else {
		_172411_d=_1a7d09767_evalExpr1(_1a7c6256b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0)), (*((*(_172338_m))))._field_Expr);
		if ((_172411_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_172338_m))))._field_Comptime) {
		if ((!(_1a7c2d966_canComptimeMatch(&(_172411_d))))) {
			_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_172338_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			_1a7c59e7b_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1a7d21509_comptime((*(_172411_d))._field_Kind.ptr())) {
		_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_172338_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		_1a7c59e7b_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7c181ae_Match> _17507_mc = jule::new_ptr<_1a7c181ae_Match>(_1a7c181ae_Match{._field_Scope=(*(_self_))._field_scope, ._field_Expr=_172411_d, ._field_TypeMatch=false, ._field_Comptime=(*((*(_172338_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1a7c18bd7_Case>>(nullptr), ._field_Default=jule::Ptr<_1a7c18bd7_Case>(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_17507_mc, &__jule_any_type55); __jule_collection; }));
	if (((!((*(_17507_mc))._field_Comptime)) && ((*((*(_172338_m))))._field_Default != nullptr))) {
		(*_17507_mc.alloc)._field_Default=_1a7c294cd_checkDefault(_self_, _17507_mc, (*((*(_172338_m))))._field_Default);
	};
	_1a7c290d2_checkCases(_self_, _172338_m, _17507_mc, _172411_d);
	if ((*_17507_mc.alloc)._field_Comptime) {
		_1a7c29ba4_processConstMatch(_self_, &(_17507_mc), _172338_m);
	};
}



inline void _1a7c2a4bd_checkMatch(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b9c709_MatchCase> _177431_m) {
	if ((*(_177431_m))._field_TypeMatch) {
		_1a7c29e5c_checkTypeMatch(_self_, &(_177431_m));
		return;;
	};
	_1a7c2a215_checkCommonMatch(_self_, &(_177431_m));
}



inline void _1a7c2a776_checkFall(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b92bc7_FallSt> _178226_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*_self_.alloc)._field_scope))._field_Stmts.len() + 1LL) < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) || _1a7c1daaa_isDeferred(_self_))) {
		_1a7c59b18_pushErr((*_self_.alloc)._field_s.ptr(), (*(_178226_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("fall keyword can only useable at end of the case scopes", 55)), jule::Slice<jule::Any>());
		return;;
	};
	_1a7c18bd7_Case* _17907_case = ((_1a7c18bd7_Case*)((*_self_.alloc)._field_cse));;
	if ((*((*(_17907_case))._field_Owner))._field_Comptime) {
		_1a7c59b18_pushErr((*(_self_))._field_s, (*_178226_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the fall statement is not allowed for comptime-matching", 55)), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_17907_case))._field_Next == nullptr)) {
		_1a7c59b18_pushErr((*(_self_))._field_s, (*_178226_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("fall cannot useable at final case", 33)), jule::Slice<jule::Any>());
		_1a7c59e7b_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("remove \"fall\" keyword", 21)), jule::Slice<jule::Any>());
		return;;
	};
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1a7c193d0_FallSt>(_1a7c193d0_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_17907_case))._field_Next)}), &__jule_any_type56); __jule_collection; }));
}



inline jule::Ptr<_1a7c16025_BreakSt> _1a7c2aab7_checkBreakWithLabel(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b99edc_BreakSt> _180536_b) {
	jule::Ptr<_1a7c16025_BreakSt> _18067_brk = _1a7c2ae08_checkPlainBreak(_self_, _180536_b);;
	if ((_18067_brk == nullptr)) {
		return nullptr;;
	};
	(*(_18067_brk))._field_It=0LLU;
	(*(_18067_brk))._field_Mtch=0LLU;
	jule::Ptr<_1a7c19c2c_scopeLabel> _18167_label = _1a7c11b25_findLabelParent(&((*((*(_180536_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_18167_label == nullptr)) {
		_1a7c59b18_pushErr((*_self_.alloc)._field_s.ptr(), (*_180536_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180536_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	(*(_18167_label))._field_used=true;
	if ((((*((*(_18167_label))._field_node))._field_Index + 1LL) >= (*((*(*(_18167_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
		_1a7c59b18_pushErr((*(_self_))._field_s, (*_180536_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180536_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _18293_i = ((*(*(_18167_label))._field_node.alloc)._field_Index + 1LL);;
	if ((_18293_i >= (*(*((*(_18167_label))._field_node))._field_Scope.alloc)._field_Stmts.len())) {
		_1a7c59b18_pushErr((*(_self_))._field_s, (*_180536_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180536_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	} else {
		jule::Any _18338_st = (*(*((*(_18167_label))._field_node))._field_Scope.alloc)._field_Stmts[_18293_i];;
		{
			auto &_match_expr{ _18338_st };
			
			if (_match_expr.type == &__jule_any_type43) {
				_case_begin_1ab57ecca:;
				{
					(*(_18067_brk))._field_It=static_cast<jule::Uintptr>(_18338_st.unsafe_cast_ptr<_1a7c148b4_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type47) {
				_case_begin_1ab57d944:;
				{
					(*(_18067_brk))._field_It=static_cast<jule::Uintptr>(_18338_st.unsafe_cast_ptr<_1a7c157b6_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1ab57db31:;
				{
					(*(_18067_brk))._field_It=static_cast<jule::Uintptr>(_18338_st.unsafe_cast_ptr<_1a7c14d6a_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type55) {
				_case_begin_1ab57db97:;
				{
					(*(_18067_brk))._field_Mtch=static_cast<jule::Uintptr>(_18338_st.unsafe_cast_ptr<_1a7c181ae_Match>());
				}
			}
			else {
				_case_begin_1ab57daba:;
				{
					_1a7c59b18_pushErr((*(_self_))._field_s, (*_180536_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180536_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
				}
			}
			_match_end_1ab57da54:;
		};
	};
	if (((*(_18067_brk))._field_It != 0LLU)) {
		if ((!(_1a7c2583c_checkValidBreakLabel(_self_, (*(_18067_brk))._field_It)))) {
			_1a7c59b18_pushErr((*(_self_))._field_s, (*_180536_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180536_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		};
	};
	if (((*(_18067_brk))._field_Mtch != 0LLU)) {
		if ((!(_1a7c2583c_checkValidBreakLabel(_self_, (*(_18067_brk))._field_Mtch)))) {
			_1a7c59b18_pushErr((*(_self_))._field_s, (*_180536_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180536_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		};
	};
	return _18067_brk;;
}



inline jule::Ptr<_1a7c16025_BreakSt> _1a7c2ae08_checkPlainBreak(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b99edc_BreakSt> _186332_b) {
	if (_1a7c1daaa_isDeferred(_self_)) {
		_1a7c59b18_pushErr((*_self_.alloc)._field_s.ptr(), (*(_186332_b))._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7c1ac1c_scopeChecker> _18697_scope = _self_;;
	_julec_label_1ab586397:;
	{
		
		if ((((((*_18697_scope.alloc)._field_it == 0LLU) && ((*_18697_scope.alloc)._field_cse == 0LLU)) && ((*_18697_scope.alloc)._field_parent != nullptr)) && ((*_18697_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1ab587574:;
			{
				_18697_scope=(*_18697_scope.alloc)._field_parent;
				goto _julec_label_1ab586397;
			}
		}
		else if (((*_18697_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1ab58760c:;
			{
				return jule::new_ptr<_1a7c16025_BreakSt>(_1a7c16025_BreakSt{._field_It=(*_18697_scope.alloc)._field_it, ._field_Mtch=0});;
			}
		}
		else if (((*_18697_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_1ab587673:;
			{
				return jule::new_ptr<_1a7c16025_BreakSt>(_1a7c16025_BreakSt{._field_It=0, ._field_Mtch=static_cast<jule::Uintptr>((*(((_1a7c18bd7_Case*)((*_18697_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_1ab587475:;
	};
	_1a7c59b18_pushErr((*(_self_))._field_s, (*_186332_b.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1a7c2b1b1_checkBreak(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b99edc_BreakSt> _188527_b) {
	if (((*(_188527_b))._field_Label != nullptr)) {
		jule::Ptr<_1a7c16025_BreakSt> _18878_brk = _1a7c2aab7_checkBreakWithLabel(_self_, _188527_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18878_brk, &__jule_any_type57); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1a7c16025_BreakSt> _18927_brk = _1a7c2ae08_checkPlainBreak(_self_, _188527_b);;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18927_brk, &__jule_any_type57); __jule_collection; }));
}



inline void _1a7c2b469_checkRet(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b98161_RetSt> _189629_r) {
	if (_1a7c1daaa_isDeferred(_self_)) {
		_1a7c59b18_pushErr((*_self_.alloc)._field_s.ptr(), (*(_189629_r))._field_Token, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports return statements", 50)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a7c19776_RetSt> _19017_rt = jule::new_ptr<_1a7c19776_RetSt>(_1a7c19776_RetSt{._field_Func=(*(_1a7c1e0e9_getRoot(_self_)))._field_owner, ._field_Expr=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19017_rt, &__jule_any_type58); __jule_collection; }));
	jule::Ptr<_1a7ccb481_retTypeChecker> _19067_rtc = jule::new_ptr<_1a7ccb481_retTypeChecker>(_1a7ccb481_retTypeChecker{._field_sc=_self_, ._field_f=(*(_19017_rt))._field_Func, ._field_types=jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>(nullptr), ._field_exprs=jule::Slice<jule::Ptr<_1a7b89251_Expr>>(nullptr), ._field_errorToken=(*_189629_r.alloc)._field_Token, ._field_model=jule::Any(nullptr)});;
	jule::Bool _19113_ok = _1a7ccc471_check(_19067_rtc.ptr(), &((*_189629_r.alloc)._field_Expr));;
	if ((!(_19113_ok))) {
		return;;
	};
	if (((*_189629_r.alloc)._field_Expr != nullptr)) {
		(*_19017_rt.alloc)._field_Expr=(*_19067_rtc.alloc)._field_model;
	};
}



inline void _1a7c2b722_checkUseExpr(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b89b25_UseExpr> _192129_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1a7c59b18_pushErr((*_self_.alloc)._field_s.ptr(), (*(_192129_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable out of non-void returned exceptional handler scopes", 82)), jule::Slice<jule::Any>());
		return;;
	};
	if (_1a7c1daaa_isDeferred(_self_)) {
		_1a7c59b18_pushErr((*(_self_))._field_s, (*_192129_ue.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable in deferred scopes", 49)), jule::Slice<jule::Any>());
	};
	if ((((*_self_.alloc)._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_1a7c59b18_pushErr((*(_self_))._field_s, (*_192129_ue.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions must be last statement of scope", 47)), jule::Slice<jule::Any>());
	};
}



inline void _1a7c2b9ca_checkNode(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Any* _193731_node) {
	{
		auto &_match_expr{ (*(_193731_node)) };
		
		if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1ab59cc60:;
			{
				_1a7c222d9_checkAnonScope(_self_, (*(_193731_node)).cast_ptr<_1a7b94e3d_ScopeTree>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ab59d0c3:;
			{
				_1a7c20ace_checkVarDecl(_self_, (*(_193731_node)).cast_ptr<_1a7b97c87_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ab59d139:;
			{
				_1a7c21140_checkTypeAliasDecl(_self_, (*(_193731_node)).cast_ptr<_1a7b9b939_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1ab59d1a0:;
			{
				_1a7c22905_checkExpr(_self_, (*(_193731_node)).cast_ptr<_1a7b89251_Expr>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1ab59d4e1:;
			{
				_1a7c23340_checkConditional(_self_, (*(_193731_node)).cast_ptr<_1a7b9b1ec_Conditional>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1ab59d557:;
			{
				_1a7c251aa_checkIter(_self_, (*(_193731_node)).cast_ptr<_1a7b988d1_Iter>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ab59d5bd:;
			{
				_1a7c25e36_checkCont(_self_, (*(_193731_node)).cast_ptr<_1a7b9a3b6_ContSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab59d634:;
			{
				_1a7c261de_checkLabel(_self_, (*(_193731_node)).cast_ptr<_1a7b92501_LabelSt>(&__jule_any_type64));
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ab59d69a:;
			{
				_1a7c26497_pushGoto(_self_, (*(_193731_node)).cast_ptr<_1a7b928ca_GotoSt>(&__jule_any_type65));
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ab59d711:;
			{
				_1a7c28257_checkAssignSt(_self_, (*(_193731_node)).cast_ptr<_1a7b938ba_AssignSt>(&__jule_any_type66));
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1ab59d788:;
			{
				_1a7c2a4bd_checkMatch(_self_, (*(_193731_node)).cast_ptr<_1a7b9c709_MatchCase>(&__jule_any_type67));
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1ab59d810:;
			{
				_1a7c2a776_checkFall(_self_, (*(_193731_node)).cast_ptr<_1a7b92bc7_FallSt>(&__jule_any_type68));
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1ab59d887:;
			{
				_1a7c2b1b1_checkBreak(_self_, (*(_193731_node)).cast_ptr<_1a7b99edc_BreakSt>(&__jule_any_type69));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ab59d90e:;
			{
				_1a7c2b469_checkRet(_self_, (*(_193731_node)).cast_ptr<_1a7b98161_RetSt>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ab59d986:;
			{
				_1a7c2b722_checkUseExpr(_self_, (*(_193731_node)).cast_ptr<_1a7b89b25_UseExpr>(&__jule_any_type71));
			}
		}
		else {
			_case_begin_1ab59ce3b:;
			{
				jule::outln(_1a9954ee8_toStr(jule::Str::lit("error <unimplemented scope node>", 32)));
			}
		}
		_match_end_1ab59cdc5:;
	};
}



inline void _1a7c2bbc8_checkResult(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_) {
	_1a7b947cd_Stmt _19757_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*(_self_))._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _19757_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ab5c4dca:;
			{
				jule::Ptr<_1a7b89b25_UseExpr> _19788_ue = _19757_stmt._field_Data.unsafe_cast_ptr<_1a7b89b25_UseExpr>();;
				jule::Ptr<_1a7cd41ae_Data> _19798_d = _1a7d09aa8_evalExpr(_1a7c6256b_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0)), (*(_19788_ue))._field_Expr);;
				if ((_19798_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19798_d, &__jule_any_type31); __jule_collection; }));
				jule::Ptr<_1a7ccb481_retTypeChecker> _19848_rtc = jule::new_ptr<_1a7ccb481_retTypeChecker>(_1a7ccb481_retTypeChecker{._field_sc=_self_, ._field_f=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_types=_1a7bbeae4_Types((*_self_.alloc)._field_result.ptr()), ._field_exprs=jule::Slice<jule::Ptr<_1a7b89251_Expr>>(nullptr), ._field_errorToken=(*((*_19788_ue.alloc)._field_Expr))._field_Token, ._field_model=jule::Any(nullptr)});;
				_1a7ccc471_check(_19848_rtc.ptr(), &((*_19788_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1ab5c6d00:;
			{
				jule::Ptr<_1a7b89251_Expr> _19918_expr = _19757_stmt._field_Data.unsafe_cast_ptr<_1a7b89251_Expr>();;
				jule::Ptr<_1a7cd41ae_Data> _19928_d = _1a7d09aa8_evalExpr(_1a7c6256b_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0)), _19918_expr);;
				if ((_19928_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_19928_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1ab5cc872:;
						{
							jule::Ptr<_1a7bb6624_BuiltinErrorCallExprModel> _19989_m = (*(_19928_d))._field_Model.unsafe_cast_ptr<_1a7bb6624_BuiltinErrorCallExprModel>();;
							_1a7c2264c_processErrorCall(_self_, &(_19989_m), (*(_19918_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19928_d, &__jule_any_type31); __jule_collection; }));
						}
					}
					else {
						_case_begin_1ab5cca4d:;
						{
							return;;
						}
					}
					_match_end_1ab5cc9d7:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65 || _match_expr.type == &__jule_any_type69 || _match_expr.type == &__jule_any_type63 || _match_expr.type == &__jule_any_type70) {
			_case_begin_1ab5c645e:;
			{
				_1a7c2b9ca_checkNode(_self_, &(_19757_stmt._field_Data));
			}
		}
		else {
			_case_begin_1ab5c63e8:;
			{
				_1a7c2b9ca_checkNode(_self_, &(_19757_stmt._field_Data));
				return;;
			}
		}
		_match_end_1ab5c6382:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _1a7c2bdc6_checkTree(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _20207_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_20207_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _20207_n); ((*_self_.alloc)._field_i)++) {
		{
			_1a7b947cd_Stmt _20288_stmt = (*(*(_self_))._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_1a7c2b9ca_checkNode(_self_, &(_20288_stmt._field_Data));
			if (_1a7c1d824_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_1ab5d16bc:;
	}
	_iter_end_1ab5d16bc:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*(_self_))._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_1a7c2bbc8_checkResult(_self_);
	};
}



inline void _1a7c2c239_checkGoto(_1a7c1ac1c_scopeChecker* _self_, jule::Ptr<_1a7c16b3b_GotoSt>* _203930_gt, jule::Ptr<_1a7c19c2c_scopeLabel>* _203948_label) {
	jule::I64 _20407_n = 0LL;;
	if (((*((*(_203930_gt))))._field_Scope == (*((*((*(_203948_label))))._field_node))._field_Scope)) {
		if (((*((*(_203930_gt))))._field_Index > (*(*((*(_203948_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_20407_n=(*((*(_203930_gt))))._field_Index;
	} else if (((*((*((*(_203930_gt))))._field_Scope))._field_ChildIndex > (*((*((*((*(_203948_label))))._field_node))._field_Scope))._field_ChildIndex)) {
		jule::Ptr<_1a7c1397e_Scope> _20538_gtsc = (*((*(_203930_gt))))._field_Scope;;
		while ((((*_20538_gtsc.alloc)._field_ChildIndex - 1LL) > (*(*((*((*(_203948_label))))._field_node))._field_Scope.alloc)._field_ChildIndex)) {
			{
				_20538_gtsc=(*_20538_gtsc.alloc)._field_Parent;
			}
		_iter_next_1ab5d6b23:;
		}
		_iter_end_1ab5d6b23:;;
		if (((*_20538_gtsc.alloc)._field_StmtIndex > (*(*((*(_203948_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_20407_n=(*_20538_gtsc.alloc)._field_StmtIndex;
	} else {
		_20407_n=0LL;
	};
	jule::Ptr<_1a7c1397e_Scope> _20757_s = (*((*((*(_203948_label))))._field_node))._field_Scope;;
	jule::I64 _20767_i = ((*(*((*(_203948_label))))._field_node.alloc)._field_Index - 1LL);;
	for (;;) {
		{
			for (; (_20767_i >= _20407_n); (_20767_i)--) {
				{
					jule::Any _20799_stmt = (*(_20757_s))._field_Stmts[_20767_i];;
					if (_1a7c2dc30_stmtIsDef(&(_20799_stmt))) {
						_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_203930_gt))))._field_Token, static_cast<jule::Str>(jule::Str::lit("goto @ jumps over declaration(s)", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_203930_gt))))._field_Ident, &__jule_any_type4); __jule_collection; }));
						return;;
					};
				}
			_iter_next_1ab5da62c:;
			}
			_iter_end_1ab5da62c:;;
			if (((*_20757_s.alloc)._field_ChildIndex > (*((*((*(_203930_gt))))._field_Scope))._field_ChildIndex)) {
				_20757_s=(*_20757_s.alloc)._field_Parent;
				_20767_i=((*_20757_s.alloc)._field_StmtIndex - 1LL);
				goto _iter_next_1ab5da2a8;
			};
			goto _iter_end_1ab5da2a8;
		}
	_iter_next_1ab5da2a8:;
	}
	_iter_end_1ab5da2a8:;;
}



inline void _1a7c2c437_checkGotos(_1a7c1ac1c_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5dd2de:;
		if (it != expr_end) {
			jule::Ptr<_1a7c16b3b_GotoSt> _209715_gt = *it;
			{
				jule::Ptr<_1a7c19c2c_scopeLabel> _20988_label = _1a7c2042a_findLabelAll(_self_, &((*(_209715_gt))._field_Ident));;
				if ((_20988_label == nullptr)) {
					_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*_209715_gt.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_209715_gt.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					goto _iter_next_1ab5dd2de;
				};
				(*_209715_gt.alloc)._field_Label=(*(_20988_label))._field_node;
				(*(_20988_label))._field_used=true;
				_1a7c2c239_checkGoto(_self_, &(_209715_gt), &(_20988_label));
			}
			_iter_next_1ab5dd2de:;
			++it;
			goto _iter_begin_1ab5dd2de;
		}
		_iter_end_1ab5dd2de:;
	};
}



inline void _1a7c2c635_checkLabels(_1a7c1ac1c_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5e0dc4:;
		if (it != expr_end) {
			jule::Ptr<_1a7c19c2c_scopeLabel> _211010_l = *it;
			{
				if ((!((*(_211010_l))._field_used))) {
					_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*_211010_l.alloc)._field_token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_211010_l.alloc)._field_node))._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
			}
			_iter_next_1ab5e0dc4:;
			++it;
			goto _iter_begin_1ab5e0dc4;
		}
		_iter_end_1ab5e0dc4:;
	};
}



inline void _1a7c2c833_checkVars(_1a7c1ac1c_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5e2b73:;
		if (it != expr_end) {
			jule::Ptr<_1a7c7b178_Var> _211810_v = *it;
			{
				if (((((!((*(_211810_v))._field_Used)) && (!((*_211810_v.alloc)._field_Constant))) && (!(_1a7b6c4dc_IsIgnoreIdent((*_211810_v.alloc)._field_Ident)))) && (!(_1a7b6c7a6_IsAnonIdent((*_211810_v.alloc)._field_Ident))))) {
					_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*_211810_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_211810_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
			}
			_iter_next_1ab5e2b73:;
			++it;
			goto _iter_begin_1ab5e2b73;
		}
		_iter_end_1ab5e2b73:;
	};
}



inline void _1a7c2ca31_checkAliases(_1a7c1ac1c_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5e547d:;
		if (it != expr_end) {
			jule::Ptr<_1a7d1aea4_TypeAlias> _212610_a = *it;
			{
				if ((((!((*(_212610_a))._field_Used)) && (!(_1a7b6c4dc_IsIgnoreIdent((*_212610_a.alloc)._field_Ident)))) && (!(_1a7b6c7a6_IsAnonIdent((*_212610_a.alloc)._field_Ident))))) {
					_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*_212610_a.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_212610_a.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
			}
			_iter_next_1ab5e547d:;
			++it;
			goto _iter_begin_1ab5e547d;
		}
		_iter_end_1ab5e547d:;
	};
}



inline void _1a7c2cd94_check(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_, jule::Ptr<_1a7b94e3d_ScopeTree>* _213427_tree, jule::Ptr<_1a7c1397e_Scope>* _213450_s) {
	(*((*(_213450_s))))._field_Deferred=(*((*(_213427_tree))))._field_Deferred;
	(*((*(_213450_s))))._field_Unsafety=(*((*(_213427_tree))))._field_Unsafety;
	jule::I64 _21383_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_213427_tree));
	(*_self_.alloc)._field_scope=(*(_213450_s));
	_1a7c2bdc6_checkTree(_self_);
	if ((_21383_errors == (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		_1a7c2c833_checkVars(_self_);
		_1a7c2ca31_checkAliases(_self_);
		if (_1a7c1d390_isRoot(_self_)) {
			_1a7c2c437_checkGotos(_self_);
			_1a7c2c635_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_1a7c1ac1c_scopeChecker> _1a7c2d12a_newChildChecker(jule::Ptr<_1a7c1ac1c_scopeChecker> _self_) {
	jule::Ptr<_1a7c1ac1c_scopeChecker> _21587_base = _1a7c113d8_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_21587_base))._field_parent=_self_;
	(*_21587_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_21587_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_21587_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _21587_base;;
}








inline jule::Bool _1a7c2eba9_directiveChecker_eq(_1a7c2eba9_directiveChecker *_self_, _1a7c2eba9_directiveChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_o == _self_->_field_o);
}

inline void _1a7c3010a_checkCdef(_1a7c2eba9_directiveChecker* _self_, jule::Ptr<_1a7b7e4cc_Directive>* _1626_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ab5ee6eb:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a7bba8d1_Fn>()))._field_Binded) {
					goto _match_end_1ab5ed552;
				};
				goto _case_begin_1ab5ed5b8;
			}
		}
		else {
			_case_begin_1ab5ed5b8:;
			{
				_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_1626_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1ab5ed552:;
	};
	if (((*((*(_1626_d))))._field_Args.len() > 0LL)) {
		_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1a7c303b3_checkTypedef(_1a7c2eba9_directiveChecker* _self_, jule::Ptr<_1a7b7e4cc_Directive>* _3229_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ab6028ec:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a7ba5ca6_Struct>()))._field_Binded) {
					goto _match_end_1ab601753;
				};
				goto _case_begin_1ab6017b9;
			}
		}
		else {
			_case_begin_1ab6017b9:;
			{
				_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_3229_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1ab601753:;
	};
	if (((*((*(_3229_d))))._field_Args.len() > 0LL)) {
		_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1a7c3066b_checkNamespace(_1a7c2eba9_directiveChecker* _self_, jule::Ptr<_1a7b7e4cc_Directive>* _4835_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ab605aed:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a7ba5ca6_Struct>()))._field_Binded))) {
					_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ab604723:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a7bba8d1_Fn>()))._field_Binded))) {
					_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab604a31:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a7c7b178_Var>()))._field_Binded))) {
					_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1ab6049ba:;
			{
				_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1ab604954:;
	};
	if (((*((*(_4835_d))))._field_Args.len() == 0LL)) {
		_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4835_d))))._field_Args.len() > 1LL)) {
		_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1a7b69b05_Token> _733_arg = (*((*(_4835_d))))._field_Args[0LL];;
	if (((*(_733_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_733_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a7c59b18_pushErr((*(_self_))._field_s, _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4835_d))))._field_Args[0LL]))._field_Kind=(*_733_arg.alloc)._field_Kind.slice(1LL, ((*_733_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ab611169:;
			{
				if ((_1a7d1351d_findDirective(&((*((*(_self_))._field_d))), static_cast<jule::Str>(jule::Str::lit("typedef", 7))) == nullptr)) {
					jule::Ptr<_1a7b7e4cc_Directive> _919_typedef = jule::new_ptr<_1a7b7e4cc_Directive>(_1a7b7e4cc_Directive{._field_Tag=(*((*(_4835_d))))._field_Tag, ._field_Args=jule::Slice<jule::Ptr<_1a7b69b05_Token>>(nullptr)});;
					(*((*(_919_typedef))._field_Tag))._field_Kind=static_cast<jule::Str>(jule::Str::lit("typedef", 7));
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _919_typedef; __jule_collection; }));
				};
			}
		}
		_match_end_1ab611103:;
	};
}



inline void _1a7c30924_checkDeprecated(_1a7c2eba9_directiveChecker* _self_, jule::Ptr<_1a7b7e4cc_Directive>* _10036_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ab614876:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a7ba5ca6_Struct>()))._field_Binded) {
					_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ab613545:;
			{
				jule::Ptr<_1a7bba8d1_Fn> _1078_f = (*(_self_))._field_o.unsafe_cast_ptr<_1a7bba8d1_Fn>();;
				if ((((*(_1078_f))._field_Binded || _1a7bbb3a4_IsEntryPoint(_1078_f)) || _1a7bbb63a_IsInit(_1078_f))) {
					_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab6137a9:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a7c7b178_Var>()))._field_Binded) {
					_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1ab613743:;
			{
				_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1ab6136cc:;
	};
	if (((*((*(_10036_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_10036_d))))._field_Args.len() > 1LL)) {
		_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1a7b69b05_Token> _1263_arg = (*((*(_10036_d))))._field_Args[0LL];;
	if (((*(_1263_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1a7c59b18_pushErr((*(_self_))._field_s, _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1263_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a7c59b18_pushErr((*(_self_))._field_s, _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_10036_d))))._field_Args[0LL]))._field_Kind=(*_1263_arg.alloc)._field_Kind.slice(1LL, ((*_1263_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1a7c30bcc_checkTest(_1a7c2eba9_directiveChecker* _self_, jule::Ptr<_1a7b7e4cc_Directive>* _14126_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ab621542:;
			{
				jule::Ptr<_1a7bba8d1_Fn> _1444_f = (*(_self_))._field_o.unsafe_cast_ptr<_1a7bba8d1_Fn>();;
				if ((((!((*(_1444_f))._field_Binded)) && (!(_1a7bbb63a_IsInit(_1444_f)))) && (!(_1a7bbb3a4_IsEntryPoint(_1444_f))))) {
					goto _match_end_1ab620398;
				};
				if (_1a7bbb11d_IsMethod(_1444_f)) {
					_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*_1444_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot declare test methods", 31)), jule::Slice<jule::Any>());
					goto _match_end_1ab620398;
				};
				goto _case_begin_1ab62040e;
			}
		}
		else {
			_case_begin_1ab62040e:;
			{
				_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_14126_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1ab620398:;
	};
	if (((*((*(_14126_d))))._field_Args.len() > 0LL)) {
		_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1a7c30e85_checkExport(_1a7c2eba9_directiveChecker* _self_, jule::Ptr<_1a7b7e4cc_Directive>* _16232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ab62628e:;
			{
				jule::Ptr<_1a7bba8d1_Fn> _1654_f = (*(_self_))._field_o.unsafe_cast_ptr<_1a7bba8d1_Fn>();;
				if ((((((*(_1654_f))._field_Binded || _1a7bbb63a_IsInit(_1654_f)) || _1a7bbb3a4_IsEntryPoint(_1654_f)) || _1a7bbb11d_IsMethod(_1654_f)) || ((*_1654_f.alloc)._field_Generics.len() > 0LL))) {
					_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
					return;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab624db4:;
			{
				jule::Ptr<_1a7c7b178_Var> _1714_v = (*(_self_))._field_o.unsafe_cast_ptr<_1a7c7b178_Var>();;
				if (((*(_1714_v))._field_Binded || (*_1714_v.alloc)._field_Constant)) {
					_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1ab62515b:;
			{
				_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return;;
			}
		}
		_match_end_1ab6250e5:;
	};
	if (((*((*(_16232_d))))._field_Args.len() > 1LL)) {
		_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	if (((*((*(_16232_d))))._field_Args.len() < 1LL)) {
		_1a7c59b18_pushErr((*(_self_))._field_s, (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7b69b05_Token> _1873_arg = (*((*(_16232_d))))._field_Args[0LL];;
	if (((*(_1873_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1a7c59b18_pushErr((*(_self_))._field_s, _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1873_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a7c59b18_pushErr((*(_self_))._field_s, _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_16232_d))))._field_Args[0LL]))._field_Kind=(*_1873_arg.alloc)._field_Kind.slice(1LL, ((*_1873_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1a7c3123d_checkDirective(_1a7c2eba9_directiveChecker* _self_, jule::Ptr<_1a7b7e4cc_Directive>* _20035_d) {
	{
		auto &_match_expr{ (*((*((*(_20035_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cdef", 4))) {
			_case_begin_1ab63339a:;
			{
				_1a7c3010a_checkCdef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("typedef", 7))) {
			_case_begin_1ab632245:;
			{
				_1a7c303b3_checkTypedef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("namespace", 9))) {
			_case_begin_1ab6322ab:;
			{
				_1a7c3066b_checkNamespace(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("deprecated", 10))) {
			_case_begin_1ab632322:;
			{
				_1a7c30924_checkDeprecated(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("test", 4))) {
			_case_begin_1ab632388:;
			{
				_1a7c30bcc_checkTest(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("export", 6))) {
			_case_begin_1ab6323ee:;
			{
				_1a7c30e85_checkExport(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("build", 5)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
			_case_begin_1ab632465:;
			{
				_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		else {
			_case_begin_1ab62c74b:;
			{
				_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1ab632168:;
	};
}



inline void _1a7c3143b_check(_1a7c2eba9_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab63615b:;
		if (it != expr_end) {
			jule::Ptr<_1a7b7e4cc_Directive> _22315_d = *it;
			{
				_1a7c3123d_checkDirective(_self_, &(_22315_d));
			}
			_iter_next_1ab63615b:;
			++it;
			goto _iter_begin_1ab63615b;
		}
		_iter_end_1ab63615b:;
	};
}







inline jule::Ptr<_1a7c36793_ImportInfo> _1a7c36cb0_SelectPackage(_1a7c36793_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7c36793_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1a7c7b178_Var> _1a7c371ab_FindVar(_1a7c36793_ImportInfo* _self_, jule::Str _19823_ident, jule::Bool ) {
	if ((!(_1a7c38d17_isLookupable(_self_, &(_19823_ident))))) {
		return nullptr;;
	};
	return _1a7c33cbd_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_19823_ident), false);;
}



inline jule::Ptr<_1a7d1aea4_TypeAlias> _1a7c375a7_FindTypeAlias(_1a7c36793_ImportInfo* _self_, jule::Str _21029_ident, jule::Bool ) {
	if ((!(_1a7c38d17_isLookupable(_self_, &(_21029_ident))))) {
		return nullptr;;
	};
	return _1a7c341ec_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21029_ident), false);;
}



inline jule::Ptr<_1a7ba5ca6_Struct> _1a7c379a3_FindStruct(_1a7c36793_ImportInfo* _self_, jule::Str _22226_ident, jule::Bool ) {
	if ((!(_1a7c38d17_isLookupable(_self_, &(_22226_ident))))) {
		return nullptr;;
	};
	return _1a7c346a3_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22226_ident), false);;
}



inline jule::Ptr<_1a7bba8d1_Fn> _1a7c37d9e_FindFn(_1a7c36793_ImportInfo* _self_, jule::Str _23422_ident, jule::Bool ) {
	if ((!(_1a7c38d17_isLookupable(_self_, &(_23422_ident))))) {
		return nullptr;;
	};
	return _1a7c34a9e_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23422_ident), false);;
}



inline jule::Ptr<_1a7bce362_Trait> _1a7c381e0_FindTrait(_1a7c36793_ImportInfo* _self_, jule::Str _24525_ident) {
	if ((!(_1a7c38d17_isLookupable(_self_, &(_24525_ident))))) {
		return nullptr;;
	};
	return _1a7c34e23_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24525_ident));;
}



inline jule::Ptr<_1a7bd1a6d_Enum> _1a7c38531_FindEnum(_1a7c36793_ImportInfo* _self_, jule::Str _25624_ident) {
	if ((!(_1a7c38d17_isLookupable(_self_, &(_25624_ident))))) {
		return nullptr;;
	};
	return _1a7c35297_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25624_ident));;
}



inline jule::Ptr<_1a7bd3278_TypeEnum> _1a7c38872_FindTypeEnum(_1a7c36793_ImportInfo* _self_, jule::Str _26728_ident) {
	if ((!(_1a7c38d17_isLookupable(_self_, &(_26728_ident))))) {
		return nullptr;;
	};
	return _1a7c3572b_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_26728_ident));;
}



inline jule::Bool _1a7c38d17_isLookupable(_1a7c36793_ImportInfo* _self_, jule::Str* _27625_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1a7c39158_existIdent(_self_, static_cast<jule::Str>(jule::Str::lit("self", 4))))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1a7c39158_existIdent(_self_, (*(_27625_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1a7c39158_existIdent(_1a7c36793_ImportInfo* _self_, jule::Str _29622_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab64d53b:;
		if (it != expr_end) {
			jule::Ptr<_1a7b69b05_Token> *_29710_sident = it;
			{
				if (((*((*(_29710_sident))))._field_Kind == _29622_ident)) {
					return true;;
				};
			}
			_iter_next_1ab64d53b:;
			++it;
			goto _iter_begin_1ab64d53b;
		}
		_iter_end_1ab64d53b:;
	};
	return false;;
}



inline jule::Bool _1a7c393de_isAccessibleViaSelection(_1a7c36793_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1a7c39158_existIdent(_self_, static_cast<jule::Str>(jule::Str::lit("self", 4))));;
}







inline jule::Ptr<_1a7c36793_ImportInfo> _1a7c39b92_SelectPackage(_1a7c396b9_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7c36793_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1a7c7b178_Var> _1a7c3a08d_FindVar(_1a7c396b9_Package* _self_, jule::Str _32323_ident, jule::Bool _32335_binded) {
	return _1a7c33cbd_findVarInPackage(&((*(_self_))._field_Files), &(_32323_ident), _32335_binded);;
}



inline jule::Ptr<_1a7d1aea4_TypeAlias> _1a7c3a489_FindTypeAlias(_1a7c396b9_Package* _self_, jule::Str _32929_ident, jule::Bool _32941_binded) {
	return _1a7c341ec_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32929_ident), _32941_binded);;
}



inline jule::Ptr<_1a7ba5ca6_Struct> _1a7c3a885_FindStruct(_1a7c396b9_Package* _self_, jule::Str _33526_ident, jule::Bool _33538_binded) {
	return _1a7c346a3_findStructInPackage(&((*(_self_))._field_Files), &(_33526_ident), _33538_binded);;
}



inline jule::Ptr<_1a7bba8d1_Fn> _1a7c3ac81_FindFn(_1a7c396b9_Package* _self_, jule::Str _34122_ident, jule::Bool _34134_binded) {
	return _1a7c34a9e_findFnInPackage(&((*(_self_))._field_Files), &(_34122_ident), _34134_binded);;
}



inline jule::Ptr<_1a7bce362_Trait> _1a7c3b0c2_FindTrait(_1a7c396b9_Package* _self_, jule::Str _34725_ident) {
	return _1a7c34e23_findTraitInPackage(&((*(_self_))._field_Files), &(_34725_ident));;
}



inline jule::Ptr<_1a7bd1a6d_Enum> _1a7c3b413_FindEnum(_1a7c396b9_Package* _self_, jule::Str _35324_ident) {
	return _1a7c35297_findEnumInPackage(&((*(_self_))._field_Files), &(_35324_ident));;
}



inline jule::Ptr<_1a7bd3278_TypeEnum> _1a7c3b754_FindTypeEnum(_1a7c396b9_Package* _self_, jule::Str _35928_ident) {
	return _1a7c3572b_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35928_ident));;
}







inline jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _1a7c56582_pushComptimeTypeInfo(_1a7c560dc_commonSemaMeta* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _22341_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab689d2a:;
		if (it != expr_end) {
			jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _22415_t2 = *it;
			{
				if ((((*((*(_22415_t2))._field_base))._field_BindIdent == (*((*(_22341_t))))._field_BindIdent) && _1a7d1c4d3_Equal((*(_22415_t2))._field_base, (*(_22341_t))))) {
					return _22415_t2;;
				};
			}
			_iter_next_1ab689d2a:;
			++it;
			goto _iter_begin_1ab689d2a;
		}
		_iter_end_1ab689d2a:;
	};
	jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _2297_t1 = jule::new_ptr<_1a7be5aa4_comptimeTypeInfo>(_1a7be5aa4_comptimeTypeInfo{._field_base=(*(_22341_t))});;
	{ jule::Slice<jule::Ptr<_1a7be5aa4_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_2297_t1); };
	return _2297_t1;;
}







inline jule::Ptr<_1a7c36793_ImportInfo> _1a7c571dc_SelectPackage(_1a7c56c14_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7c36793_ImportInfo>> _25229_selector) {
	return _1a7cce011_SelectPackage((*(_self_))._field_file.ptr(), _25229_selector);;
}



inline jule::Ptr<_1a7c7b178_Var> _1a7c575d8_FindVar(_1a7c56c14_sema* _self_, jule::Str _26223_ident, jule::Bool _26235_binded) {
	jule::Ptr<_1a7c7b178_Var> _2647_v = _1a7c33cbd_findVarInPackage(&((*(_self_))._field_files), &(_26223_ident), _26235_binded);;
	if ((_2647_v != nullptr)) {
		return _2647_v;;
	};
	if ((!(_1a7c53c00_IsPub(_26223_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6912d7:;
		if (it != expr_end) {
			jule::Ptr<_1a7c36793_ImportInfo> _27515_imp = *it;
			{
				if ((!(_1a7c54b02_impIsLookupable(&(_27515_imp), &(_26223_ident))))) {
					goto _iter_next_1ab6912d7;
				};
				_2647_v=_1a7c371ab_FindVar(_27515_imp.ptr(), _26223_ident, _26235_binded);
				if (((_2647_v != nullptr) && _1a7c5a377_isAccessibleDefine(_self_, (*_2647_v.alloc)._field_Public, (*_2647_v.alloc)._field_Token))) {
					return _2647_v;;
				};
			}
			_iter_next_1ab6912d7:;
			++it;
			goto _iter_begin_1ab6912d7;
		}
		_iter_end_1ab6912d7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7d1aea4_TypeAlias> _1a7c579d4_FindTypeAlias(_1a7c56c14_sema* _self_, jule::Str _29429_ident, jule::Bool _29441_binded) {
	jule::Ptr<_1a7d1aea4_TypeAlias> _2967_ta = _1a7c341ec_findTypeAliasInPackage(&((*(_self_))._field_files), &(_29429_ident), _29441_binded);;
	if ((_2967_ta != nullptr)) {
		return _2967_ta;;
	};
	if ((!(_1a7c53c00_IsPub(_29429_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab694241:;
		if (it != expr_end) {
			jule::Ptr<_1a7c36793_ImportInfo> _30715_imp = *it;
			{
				if ((!(_1a7c54b02_impIsLookupable(&(_30715_imp), &(_29429_ident))))) {
					goto _iter_next_1ab694241;
				};
				_2967_ta=_1a7c375a7_FindTypeAlias(_30715_imp.ptr(), _29429_ident, _29441_binded);
				if (((_2967_ta != nullptr) && _1a7c5a377_isAccessibleDefine(_self_, (*_2967_ta.alloc)._field_Public, (*_2967_ta.alloc)._field_Token))) {
					return _2967_ta;;
				};
			}
			_iter_next_1ab694241:;
			++it;
			goto _iter_begin_1ab694241;
		}
		_iter_end_1ab694241:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7ba5ca6_Struct> _1a7c57dd0_FindStruct(_1a7c56c14_sema* _self_, jule::Str _32626_ident, jule::Bool _32638_binded) {
	jule::Ptr<_1a7ba5ca6_Struct> _3287_s = _1a7c346a3_findStructInPackage(&((*(_self_))._field_files), &(_32626_ident), _32638_binded);;
	if ((_3287_s != nullptr)) {
		return _3287_s;;
	};
	if ((!(_1a7c53c00_IsPub(_32626_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab69719a:;
		if (it != expr_end) {
			jule::Ptr<_1a7c36793_ImportInfo> _33915_imp = *it;
			{
				if ((!(_1a7c54b02_impIsLookupable(&(_33915_imp), &(_32626_ident))))) {
					goto _iter_next_1ab69719a;
				};
				_3287_s=_1a7c379a3_FindStruct(_33915_imp.ptr(), _32626_ident, _32638_binded);
				if (((_3287_s != nullptr) && _1a7c5a377_isAccessibleDefine(_self_, (*_3287_s.alloc)._field_Public, (*_3287_s.alloc)._field_Token))) {
					return _3287_s;;
				};
			}
			_iter_next_1ab69719a:;
			++it;
			goto _iter_begin_1ab69719a;
		}
		_iter_end_1ab69719a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7bba8d1_Fn> _1a7c582cb_FindFn(_1a7c56c14_sema* _self_, jule::Str _35722_ident, jule::Bool _35734_binded) {
	jule::Ptr<_1a7bba8d1_Fn> _3597_f = _1a7c34a9e_findFnInPackage(&((*(_self_))._field_files), &(_35722_ident), _35734_binded);;
	if ((_3597_f != nullptr)) {
		return _3597_f;;
	};
	if ((!(_1a7c53c00_IsPub(_35722_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab69a104:;
		if (it != expr_end) {
			jule::Ptr<_1a7c36793_ImportInfo> _37015_imp = *it;
			{
				if ((!(_1a7c54b02_impIsLookupable(&(_37015_imp), &(_35722_ident))))) {
					goto _iter_next_1ab69a104;
				};
				_3597_f=_1a7c37d9e_FindFn(_37015_imp.ptr(), _35722_ident, _35734_binded);
				if (((_3597_f != nullptr) && _1a7c5a377_isAccessibleDefine(_self_, (*_3597_f.alloc)._field_Public, (*_3597_f.alloc)._field_Token))) {
					return _3597_f;;
				};
			}
			_iter_next_1ab69a104:;
			++it;
			goto _iter_begin_1ab69a104;
		}
		_iter_end_1ab69a104:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7bce362_Trait> _1a7c5861c_FindTrait(_1a7c56c14_sema* _self_, jule::Str _38925_ident) {
	jule::Ptr<_1a7bce362_Trait> _3917_t = _1a7c34e23_findTraitInPackage(&((*(_self_))._field_files), &(_38925_ident));;
	if ((_3917_t != nullptr)) {
		return _3917_t;;
	};
	if ((!(_1a7c53c00_IsPub(_38925_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab69cd1b:;
		if (it != expr_end) {
			jule::Ptr<_1a7c36793_ImportInfo> _40215_imp = *it;
			{
				if ((!(_1a7c54b02_impIsLookupable(&(_40215_imp), &(_38925_ident))))) {
					goto _iter_next_1ab69cd1b;
				};
				_3917_t=_1a7c381e0_FindTrait(_40215_imp.ptr(), _38925_ident);
				if (((_3917_t != nullptr) && _1a7c5a377_isAccessibleDefine(_self_, (*_3917_t.alloc)._field_Public, (*_3917_t.alloc)._field_Token))) {
					return _3917_t;;
				};
			}
			_iter_next_1ab69cd1b:;
			++it;
			goto _iter_begin_1ab69cd1b;
		}
		_iter_end_1ab69cd1b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7bd1a6d_Enum> _1a7c5895d_FindEnum(_1a7c56c14_sema* _self_, jule::Str _42124_ident) {
	jule::Ptr<_1a7bd1a6d_Enum> _4237_e = _1a7c35297_findEnumInPackage(&((*(_self_))._field_files), &(_42124_ident));;
	if ((_4237_e != nullptr)) {
		return _4237_e;;
	};
	if ((!(_1a7c53c00_IsPub(_42124_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6a0a33:;
		if (it != expr_end) {
			jule::Ptr<_1a7c36793_ImportInfo> _43415_imp = *it;
			{
				if ((!(_1a7c54b02_impIsLookupable(&(_43415_imp), &(_42124_ident))))) {
					goto _iter_next_1ab6a0a33;
				};
				_4237_e=_1a7c38531_FindEnum(_43415_imp.ptr(), _42124_ident);
				if (((_4237_e != nullptr) && _1a7c5a377_isAccessibleDefine(_self_, (*_4237_e.alloc)._field_Public, (*_4237_e.alloc)._field_Token))) {
					return _4237_e;;
				};
			}
			_iter_next_1ab6a0a33:;
			++it;
			goto _iter_begin_1ab6a0a33;
		}
		_iter_end_1ab6a0a33:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7bd3278_TypeEnum> _1a7c58c9e_FindTypeEnum(_1a7c56c14_sema* _self_, jule::Str _45328_ident) {
	jule::Ptr<_1a7bd3278_TypeEnum> _4557_e = _1a7c3572b_findTypeEnumInPackage(&((*(_self_))._field_files), &(_45328_ident));;
	if ((_4557_e != nullptr)) {
		return _4557_e;;
	};
	if ((!(_1a7c53c00_IsPub(_45328_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6a374a:;
		if (it != expr_end) {
			jule::Ptr<_1a7c36793_ImportInfo> _46615_imp = *it;
			{
				if ((!(_1a7c54b02_impIsLookupable(&(_46615_imp), &(_45328_ident))))) {
					goto _iter_next_1ab6a374a;
				};
				_4557_e=_1a7c38872_FindTypeEnum(_46615_imp.ptr(), _45328_ident);
				if (((_4557_e != nullptr) && _1a7c5a377_isAccessibleDefine(_self_, (*_4557_e.alloc)._field_Public, (*_4557_e.alloc)._field_Token))) {
					return _4557_e;;
				};
			}
			_iter_next_1ab6a374a:;
			++it;
			goto _iter_begin_1ab6a374a;
		}
		_iter_end_1ab6a374a:;
	};
	return nullptr;;
}



inline jule::Bool _1a7c591ab_isFlag(_1a7c56c14_sema* _self_, jule::I64 _48218_flags) {
	return (((*(_self_))._field_flags & _48218_flags) == _48218_flags);;
}



inline jule::Ptr<_1a7ccd9e4_SymbolTable> _1a7c59442_getCurrentFile(_1a7c56c14_sema* _self_) {
	return (*(_self_))._field_file;;
}



inline void _1a7c596ea_setCurrentFile(_1a7c56c14_sema* _self_, jule::Ptr<_1a7ccd9e4_SymbolTable> _48534_f) {
	(*(_self_))._field_file=_48534_f;
}



inline void _1a7c59b18_pushErr(_1a7c56c14_sema* _self_, jule::Ptr<_1a7b69b05_Token> _48723_token, jule::Str _48738_fmt, jule::Slice<jule::Any> _48751_args) {
	{ jule::Slice<_1d9144ab5_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a7c5477d_compilerErr(&(_48723_token), true, _48738_fmt, _48751_args)); };
}



inline void _1a7c59e7b_pushSuggestion(_1a7c56c14_sema* _self_, jule::Str _49230_fmt, jule::Slice<jule::Any> _49243_args) {
	{
		_1a7c55d34_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _49230_fmt, _49243_args);
	};
}



inline jule::Bool _1a7c5a377_isAccessibleDefine(_1a7c56c14_sema* _self_, jule::Bool _49830_public, jule::Ptr<_1a7b69b05_Token> _49844_token) {
	if ((_49830_public || ((*(_49844_token))._field_File == nullptr))) {
		return true;;
	};
	jule::Str _5033_selfDir = _1a7b70a73_Dir((*((*(_self_))._field_file))._field_File.ptr());;
	jule::Str _5043_tokenDir = _1a7b70a73_Dir((*_49844_token.alloc)._field_File.ptr());;
	if ((_5033_selfDir == _5043_tokenDir)) {
		return true;;
	};
	if ((_1a7c3bb94_isStdPackage(&(_5043_tokenDir), jule::Str::lit("runtime", 7)) && _1a7c3bb94_isStdPackage(&(_5033_selfDir), jule::Str()))) {
		return true;;
	};
	return false;;
}



inline jule::Bool _1a7c5a82d_isDuplicatedIdent(_1a7c56c14_sema* _self_, jule::Uintptr _52129_itself, jule::Str* _52147_ident, jule::Bool _52159_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6ab577:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> *_52210_f = it;
			{
				if (_1a7cd2399_isDuplicatedIdent((*(_52210_f)).ptr(), _52129_itself, _52147_ident, _52159_binded)) {
					return true;;
				};
				{
					auto expr = &((*(*(_52210_f)).alloc)._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab6ac59a:;
					if (it != expr_end) {
						jule::Ptr<_1a7c36793_ImportInfo> *_52711_imp = it;
						{
							{
								auto expr = &((*((*(_52711_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ab6acea2:;
								if (it != expr_end) {
									jule::Ptr<_1a7b69b05_Token> *_52812_selected = it;
									{
										if (((*((*(_52812_selected))))._field_Kind == (*(_52147_ident)))) {
											return true;;
										};
									}
									_iter_next_1ab6acea2:;
									++it;
									goto _iter_begin_1ab6acea2;
								}
								_iter_end_1ab6acea2:;
							};
						}
						_iter_next_1ab6ac59a:;
						++it;
						goto _iter_begin_1ab6ac59a;
					}
					_iter_end_1ab6ac59a:;
				};
			}
			_iter_next_1ab6ab577:;
			++it;
			goto _iter_begin_1ab6ab577;
		}
		_iter_end_1ab6ab577:;
	};
	return false;;
}



inline void _1a7c5ab91_checkDirectives(jule::Ptr<_1a7c56c14_sema> _self_, jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>* _53837_d, jule::Any _53863_o) {
	_1a7c2eba9_directiveChecker _5397_dc = _1a7c2eba9_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>>)(_53837_d)), ._field_o=_53863_o};;
	_1a7c3143b_check(&_5397_dc);
}



inline jule::Bool _1a7c5b147_checkGenericQuantity(_1a7c56c14_sema* _self_, jule::I64 _54736_required, jule::I64 _54751_given, jule::Ptr<_1a7b69b05_Token> _54763_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_54736_required == 0LL) && (_54751_given > 0LL))) {
			_case_begin_1ab6b04c1:;
			{
				_1a7c59b18_pushErr(_self_, _54763_token, static_cast<jule::Str>(jule::Str::lit("type have not generics but instantiate like generics", 52)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_54736_required > 0LL) && (_54751_given == 0LL))) {
			_case_begin_1ab6b0548:;
			{
				_1a7c59b18_pushErr(_self_, _54763_token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_54736_required < _54751_given)) {
			_case_begin_1ab6b05c0:;
			{
				_1a7c59b18_pushErr(_self_, _54763_token, static_cast<jule::Str>(jule::Str::lit("overflow generics", 17)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_54736_required > _54751_given)) {
			_case_begin_1ab6b0647:;
			{
				_1a7c59b18_pushErr(_self_, _54763_token, static_cast<jule::Str>(jule::Str::lit("missing generics", 16)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ab6b0405:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ab6b0328:;
	};
}



inline jule::Bool _1a7c5b543_isDuplicatedImportSelection(_1a7c56c14_sema* _self_, jule::Uintptr _56639_itself, jule::Str* _56657_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6b386a:;
		if (it != expr_end) {
			jule::Ptr<_1a7c36793_ImportInfo> *_56710_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_56710_imp))) == _56639_itself)) {
					goto _iter_end_1ab6b386a;
				};
				if (_1a7c39158_existIdent((*(_56710_imp)).ptr(), (*(_56657_ident)))) {
					return true;;
				};
			}
			_iter_next_1ab6b386a:;
			++it;
			goto _iter_begin_1ab6b386a;
		}
		_iter_end_1ab6b386a:;
	};
	return false;;
}



inline jule::Any _1a7c5b93e_getImportDef(_1a7c56c14_sema* _self_, jule::Str* _57925_ident, jule::Ptr<_1a7c36793_ImportInfo>* _57942_imp) {
	if ((_1a7e0616b_findPackageBuiltinDef(&((*((*(_57942_imp))))._field_LinkPath), _57925_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_57942_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6b5a15:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _58315_f = *it;
			{
				;
				jule::Any _5868_def = _1a7cd1de3_defByIdent(_58315_f.ptr(), _57925_ident, false);;
				if ((_5868_def != nullptr)) {
					return _5868_def;;
				};
			}
			_iter_next_1ab6b5a15:;
			++it;
			goto _iter_begin_1ab6b5a15;
		}
		_iter_end_1ab6b5a15:;
	};
	return nullptr;;
}



inline jule::Bool _1ab6c2406_checkImportSelection(_1a7c56c14_sema* _self_, jule::Ptr<_1a7b69b05_Token>* _59440_ident, jule::Ptr<_1a7c7b178_Var>* _59456_s) {
	if ((!(_1a7c5a377_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1a7c59b18_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a7c35ad3_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1a7c59b18_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ab6c6c02_checkImportSelection(_1a7c56c14_sema* _self_, jule::Ptr<_1a7b69b05_Token>* _59440_ident, jule::Ptr<_1a7d1aea4_TypeAlias>* _59456_s) {
	if ((!(_1a7c5a377_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1a7c59b18_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a7c35ad3_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1a7c59b18_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ab6cb366_checkImportSelection(_1a7c56c14_sema* _self_, jule::Ptr<_1a7b69b05_Token>* _59440_ident, jule::Ptr<_1a7ba5ca6_Struct>* _59456_s) {
	if ((!(_1a7c5a377_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1a7c59b18_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a7c35ad3_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1a7c59b18_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ab6d0a1e_checkImportSelection(_1a7c56c14_sema* _self_, jule::Ptr<_1a7b69b05_Token>* _59440_ident, jule::Ptr<_1a7bce362_Trait>* _59456_s) {
	if ((!(_1a7c5a377_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1a7c59b18_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a7c35ad3_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1a7c59b18_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ab6d5183_checkImportSelection(_1a7c56c14_sema* _self_, jule::Ptr<_1a7b69b05_Token>* _59440_ident, jule::Ptr<_1a7bd1a6d_Enum>* _59456_s) {
	if ((!(_1a7c5a377_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1a7c59b18_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a7c35ad3_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1a7c59b18_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ab6d9583_checkImportSelection(_1a7c56c14_sema* _self_, jule::Ptr<_1a7b69b05_Token>* _59440_ident, jule::Ptr<_1a7bd3278_TypeEnum>* _59456_s) {
	if ((!(_1a7c5a377_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1a7c59b18_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a7c35ad3_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1a7c59b18_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ab6ddbe7_checkImportSelection(_1a7c56c14_sema* _self_, jule::Ptr<_1a7b69b05_Token>* _59440_ident, jule::Ptr<_1a7bba8d1_Fn>* _59456_s) {
	if ((!(_1a7c5a377_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1a7c59b18_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a7c35ad3_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1a7c59b18_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}



inline jule::Bool _1a7c5c17b_checkImportSelectedSelections(_1a7c56c14_sema* _self_, jule::Ptr<_1a7c36793_ImportInfo>* _60850_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_60850_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6b7671:;
		if (it != expr_end) {
			jule::Ptr<_1a7b69b05_Token> _61010_ident = *it;
			{
				if (((*(_61010_ident))._field_Kind == static_cast<jule::Str>(jule::Str::lit("self", 4)))) {
					goto _iter_next_1ab6b7671;
				};
				if (_1a7c5b543_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>((*(_60850_imp))), &((*_61010_ident.alloc)._field_Kind))) {
					_1a7c59b18_pushErr(_self_, _61010_ident, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_61010_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
					_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1ab6b7671;
				};
				jule::Any _6228_def = _1a7c5b93e_getImportDef(_self_, &((*_61010_ident.alloc)._field_Kind), _60850_imp);;
				{
					auto &_match_expr{ _6228_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_1ab6bd6bb:;
						{
							goto _iter_next_1ab6b7671;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1ab6c03d2:;
						{
							jule::Ptr<_1a7c7b178_Var> _6289_v = _6228_def.unsafe_cast_ptr<_1a7c7b178_Var>();;
							__jule_func_result=(_1ab6c2406_checkImportSelection(_self_, &(_61010_ident), &(_6289_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type27) {
						_case_begin_1ab6c0448:;
						{
							jule::Ptr<_1a7d1aea4_TypeAlias> _6319_ta = _6228_def.unsafe_cast_ptr<_1a7d1aea4_TypeAlias>();;
							__jule_func_result=(_1ab6c6c02_checkImportSelection(_self_, &(_61010_ident), &(_6319_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1ab6c04ae:;
						{
							jule::Ptr<_1a7ba5ca6_Struct> _6349_s = _6228_def.unsafe_cast_ptr<_1a7ba5ca6_Struct>();;
							__jule_func_result=(_1ab6cb366_checkImportSelection(_self_, &(_61010_ident), &(_6349_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1ab6c0525:;
						{
							jule::Ptr<_1a7bce362_Trait> _6379_t = _6228_def.unsafe_cast_ptr<_1a7bce362_Trait>();;
							__jule_func_result=(_1ab6d0a1e_checkImportSelection(_self_, &(_61010_ident), &(_6379_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1ab6c058b:;
						{
							jule::Ptr<_1a7bd1a6d_Enum> _6409_e = _6228_def.unsafe_cast_ptr<_1a7bd1a6d_Enum>();;
							__jule_func_result=(_1ab6d5183_checkImportSelection(_self_, &(_61010_ident), &(_6409_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type25) {
						_case_begin_1ab6c124b:;
						{
							jule::Ptr<_1a7bd3278_TypeEnum> _6439_e = _6228_def.unsafe_cast_ptr<_1a7bd3278_TypeEnum>();;
							__jule_func_result=(_1ab6d9583_checkImportSelection(_self_, &(_61010_ident), &(_6439_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type26) {
						_case_begin_1ab6c12b2:;
						{
							jule::Ptr<_1a7bba8d1_Fn> _6469_f = _6228_def.unsafe_cast_ptr<_1a7bba8d1_Fn>();;
							__jule_func_result=(_1ab6ddbe7_checkImportSelection(_self_, &(_61010_ident), &(_6469_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1ab6c02c2:;
						{
							_1a7c59b18_pushErr(_self_, _61010_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_61010_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
							__jule_func_result=false;
							goto _iter_next_1ab6b7671;
						}
					}
					_match_end_1ab6becb6:;
				};
			}
			_iter_next_1ab6b7671:;
			++it;
			goto _iter_begin_1ab6b7671;
		}
		_iter_end_1ab6b7671:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab6e389a_checkImportsAllSelectionsFromCollection(_1a7c56c14_sema* _self_, jule::Slice<jule::Ptr<_1a7c7b178_Var>>* _65759_s, jule::Ptr<_1a7b69b05_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6e5490:;
		if (it != expr_end) {
			jule::Ptr<_1a7c7b178_Var> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1ab6c2406_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1ab6e5490:;
			++it;
			goto _iter_begin_1ab6e5490;
		}
		_iter_end_1ab6e5490:;
	};
	return _6587_ok;;
}

inline jule::Bool _1ab6e4a33_checkImportsAllSelectionsFromCollection(_1a7c56c14_sema* _self_, jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>* _65759_s, jule::Ptr<_1a7b69b05_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6e7bbd:;
		if (it != expr_end) {
			jule::Ptr<_1a7d1aea4_TypeAlias> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1ab6c6c02_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1ab6e7bbd:;
			++it;
			goto _iter_begin_1ab6e7bbd;
		}
		_iter_end_1ab6e7bbd:;
	};
	return _6587_ok;;
}

inline jule::Bool _1ab6e6ace_checkImportsAllSelectionsFromCollection(_1a7c56c14_sema* _self_, jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>>* _65759_s, jule::Ptr<_1a7b69b05_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6ea3da:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba5ca6_Struct> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1ab6cb366_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1ab6ea3da:;
			++it;
			goto _iter_begin_1ab6ea3da;
		}
		_iter_end_1ab6ea3da:;
	};
	return _6587_ok;;
}

inline jule::Bool _1ab6e99c2_checkImportsAllSelectionsFromCollection(_1a7c56c14_sema* _self_, jule::Slice<jule::Ptr<_1a7bba8d1_Fn>>* _65759_s, jule::Ptr<_1a7b69b05_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6ecb29:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1ab6ddbe7_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1ab6ecb29:;
			++it;
			goto _iter_begin_1ab6ecb29;
		}
		_iter_end_1ab6ecb29:;
	};
	return _6587_ok;;
}

inline jule::Bool _1ab6ec6a6_checkImportsAllSelectionsFromCollection(_1a7c56c14_sema* _self_, jule::Slice<jule::Ptr<_1a7bce362_Trait>>* _65759_s, jule::Ptr<_1a7b69b05_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab700302:;
		if (it != expr_end) {
			jule::Ptr<_1a7bce362_Trait> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1ab6d0a1e_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1ab700302:;
			++it;
			goto _iter_begin_1ab700302;
		}
		_iter_end_1ab700302:;
	};
	return _6587_ok;;
}

inline jule::Bool _1ab6eedc3_checkImportsAllSelectionsFromCollection(_1a7c56c14_sema* _self_, jule::Slice<jule::Ptr<_1a7bd1a6d_Enum>>* _65759_s, jule::Ptr<_1a7b69b05_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7029ca:;
		if (it != expr_end) {
			jule::Ptr<_1a7bd1a6d_Enum> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1ab6d5183_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1ab7029ca:;
			++it;
			goto _iter_begin_1ab7029ca;
		}
		_iter_end_1ab7029ca:;
	};
	return _6587_ok;;
}

inline jule::Bool _1ab70259b_checkImportsAllSelectionsFromCollection(_1a7c56c14_sema* _self_, jule::Slice<jule::Ptr<_1a7bd3278_TypeEnum>>* _65759_s, jule::Ptr<_1a7b69b05_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab70523b:;
		if (it != expr_end) {
			jule::Ptr<_1a7bd3278_TypeEnum> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1ab6d9583_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1ab70523b:;
			++it;
			goto _iter_begin_1ab70523b;
		}
		_iter_end_1ab70523b:;
	};
	return _6587_ok;;
}



inline jule::Bool _1a7c5c8b8_checkImportAllSelections(_1a7c56c14_sema* _self_, jule::Ptr<_1a7c36793_ImportInfo>* _66741_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_66741_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6b7a06:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> *_66910_file = it;
			{
				__jule_func_result=(_1ab6e389a_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_66910_file))))._field_Vars), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ab6e4a33_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_TypeAliases), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ab6e6ace_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_Structs), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ab6e99c2_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_Funcs), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ab6ec6a6_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_Traits), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ab6eedc3_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_Enums), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ab70259b_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_TypeEnums), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_1ab6b7a06:;
			++it;
			goto _iter_begin_1ab6b7a06;
		}
		_iter_end_1ab6b7a06:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a7c5cc09_checkImportSelections(_1a7c56c14_sema* _self_, jule::Ptr<_1a7c36793_ImportInfo>* _68142_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_68142_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _1a7c5c17b_checkImportSelectedSelections(_self_, _68142_imp);
		return __jule_func_result;;
	} else if ((*((*(_68142_imp))))._field_ImportAll) {
		__jule_func_result = _1a7c5c8b8_checkImportAllSelections(_self_, _68142_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a7c5d04a_isUseAliasDuplication(_1a7c56c14_sema* _self_, jule::Ptr<_1a7c36793_ImportInfo>* _69038_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab70746e:;
		if (it != expr_end) {
			jule::Ptr<_1a7c36793_ImportInfo> _69115_imp2 = *it;
			{
				if ((_69115_imp2 == (*(_69038_imp)))) {
					goto _iter_end_1ab70746e;
				};
				if (((*(_69115_imp2))._field_Alias == (*((*(_69038_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*_69115_imp2.alloc)._field_Ident == (*_69115_imp2.alloc)._field_LinkPath) && ((*_69115_imp2.alloc)._field_Ident == (*((*(_69038_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1ab70746e:;
			++it;
			goto _iter_begin_1ab70746e;
		}
		_iter_end_1ab70746e:;
	};
	return false;;
}



inline jule::Bool _1a7c5d38b_checkImport(_1a7c56c14_sema* _self_, jule::Ptr<_1a7c36793_ImportInfo>* _70632_imp) {
	if (((*((*(_70632_imp))))._field_Binded || ((*((*((*(_70632_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if ((*((*(_70632_imp))))._field_LinkPath.equal("std::unsafe", 11)) {
		if ((((*((*(_70632_imp))))._field_ImportAll || !((*((*(_70632_imp))))._field_Alias).empty()) || ((*((*(_70632_imp))))._field_Selected.len() > 0LL))) {
			_1a7c59b18_pushErr(_self_, (*((*(_70632_imp))))._field_Token, static_cast<jule::Str>(jule::Str::lit("expected plain use declaration for this package like: @", 55)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("use std::unsafe", 15), &__jule_any_type4); __jule_collection; }));
			return false;;
		};
	};
	if (((*((*(_70632_imp))))._field_Alias.len() != 0LL)) {
		if (_1a7b6c4dc_IsIgnoreIdent((*((*(_70632_imp))))._field_Alias)) {
			_1a7c59b18_pushErr(_self_, (*((*(_70632_imp))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		} else if (_1a7c5d04a_isUseAliasDuplication(_self_, _70632_imp)) {
			_1a7c59b18_pushErr(_self_, (*((*(_70632_imp))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_70632_imp))))._field_Alias, &__jule_any_type4); __jule_collection; }));
			_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename alias for this use declaration to avoid duplication", 58)), jule::Slice<jule::Any>());
		};
	};
	if ((!((*((*(_70632_imp))))._field_Duplicate))) {
		jule::Ptr<_1a7c56c14_sema> _7298_sema = jule::new_ptr<_1a7c56c14_sema>(_1a7c56c14_sema{._field_errors=jule::Slice<_1d9144ab5_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>(nullptr), ._field_file=jule::Ptr<_1a7ccd9e4_SymbolTable>(nullptr), ._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1a7c775c5_check(_7298_sema, &((*(*((*(_70632_imp))))._field_Package.alloc)._field_Files));
		if (((*_7298_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_7298_sema.alloc)._field_errors);;
			(*_7298_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return _1a7c5cc09_checkImportSelections(_self_, _70632_imp);;
}



inline void _1a7c5d589_checkImports(_1a7c56c14_sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab712006:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _74415_file = *it;
			{
				_1a7c596ea_setCurrentFile(_self_, _74415_file);
				{
					auto expr = &((*(_74415_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab712be9:;
					if (it != expr_end) {
						jule::Ptr<_1a7c36793_ImportInfo> _74616_imp = *it;
						{
							jule::Bool _7475_ok = _1a7c5d38b_checkImport(_self_, &(_74616_imp));;
							if ((!(_7475_ok))) {
								return;;
							};
						}
						_iter_next_1ab712be9:;
						++it;
						goto _iter_begin_1ab712be9;
					}
					_iter_end_1ab712be9:;
				};
			}
			_iter_next_1ab712006:;
			++it;
			goto _iter_begin_1ab712006;
		}
		_iter_end_1ab712006:;
	};
}



inline void _1a7c5d787_implFileImpls(jule::Ptr<_1a7c56c14_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab713139:;
		if (it != expr_end) {
			jule::Ptr<_1a7c0e1a5_Impl> _75715_imp = *it;
			{
				_1a7c6d786_implImpl(_self_, &(_75715_imp));
			}
			_iter_next_1ab713139:;
			++it;
			goto _iter_begin_1ab713139;
		}
		_iter_end_1ab713139:;
	};
}



inline void _1a7c5d985_implImpls(jule::Ptr<_1a7c56c14_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab714a64:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _76315_file = *it;
			{
				_1a7c596ea_setCurrentFile(_self_.ptr(), _76315_file);
				_1a7c5d787_implFileImpls(_self_);
			}
			_iter_next_1ab714a64:;
			++it;
			goto _iter_begin_1ab714a64;
		}
		_iter_end_1ab714a64:;
	};
}



inline void _1a7c5db83_checkEnums(jule::Ptr<_1a7c56c14_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab715b20:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _77015_file = *it;
			{
				_1a7c596ea_setCurrentFile(_self_.ptr(), _77015_file);
				{
					
					if ((!(_1a7c69bc2_checkEnumDecls(_self_)))) {
						_case_begin_1ab71626e:;
					}
					else if ((!(_1a7c69e58_checkTypeEnumDecls(_self_)))) {
						_case_begin_1ab716846:;
					}
					_match_end_1ab716769:;
				};
			}
			_iter_next_1ab715b20:;
			++it;
			goto _iter_begin_1ab715b20;
		}
		_iter_end_1ab715b20:;
	};
}



inline void _1a7c5dd81_checkFileInherits(jule::Ptr<_1a7c56c14_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7176c1:;
		if (it != expr_end) {
			jule::Ptr<_1a7bce362_Trait> _78015_t = *it;
			{
				jule::Bool _7814_ok = _1a7c6b81c__checkTraitDeclInherits(_self_, &(_78015_t));;
				if ((!(_7814_ok))) {
					return;;
				};
			}
			_iter_next_1ab7176c1:;
			++it;
			goto _iter_begin_1ab7176c1;
		}
		_iter_end_1ab7176c1:;
	};
}



inline void _1a7c5e07e_checkInherits(jule::Ptr<_1a7c56c14_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab717c65:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _78915_file = *it;
			{
				_1a7c596ea_setCurrentFile(_self_.ptr(), _78915_file);
				_1a7c5dd81_checkFileInherits(_self_);
			}
			_iter_next_1ab717c65:;
			++it;
			goto _iter_begin_1ab717c65;
		}
		_iter_end_1ab717c65:;
	};
}



inline _1a7d2e193_typeChecker _1a7c5e535_typeChecker(jule::Ptr<_1a7c56c14_sema> _self_, jule::Trait _79532_l, jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>> _79547_generics, jule::Ptr<_1a7d2d1a3_referencer> _7967_referencer) {
	_1a7d2e193_typeChecker _7977_tc = _1a7d2e193_typeChecker{._field_s=_self_, ._field_rootLookup=_79532_l, ._field_lookup=_79532_l, ._field_referencer=_7967_referencer, ._field_refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_79547_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a7d1aea4_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ _79532_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0)) {
			_case_begin_1ab71a927:;
			{
				jule::Ptr<_1a7c1ac1c_scopeChecker> _8068_hard = _1a7c1e380_getHardRoot(_79532_l.cast_ptr<_1a7c1ac1c_scopeChecker>((jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0));;
				_7977_tc._field_refers=(*((*(_8068_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1ab71a8b1:;
	};
	if (((_7967_referencer != nullptr) && ((*_7967_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_7967_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type27) {
				_case_begin_1ab71c297:;
				{
					_7977_tc._field_ownerAlias=(*(_7967_referencer))._field_owner.unsafe_cast_ptr<_1a7d1aea4_TypeAlias>();
				}
			}
			_match_end_1ab71c231:;
		};
	};
	return _7977_tc;;
}



inline jule::Ptr<_1a7d1bc96_TypeKind> _1a7c5ea96_buildTypeWithRefers(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7b800b0_TypeDecl>* _82241_t, jule::Trait _82264_l, jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>> _8237_generics, jule::Ptr<_1a7d2d1a3_referencer> _82335_referencer) {
	return ({ auto _wrap_copy = _1a7c5e535_typeChecker(_self_, _82264_l, _8237_generics, _82335_referencer); _1a7d36c7d_checkDecl(&_wrap_copy, _82241_t); });;
}



inline jule::Bool _1a7c60107_checkTypeWithRefers(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7d244a7_TypeSymbol>* _82941_t, jule::Trait _82961_l, jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>> _8307_generics, jule::Ptr<_1a7d2d1a3_referencer> _83035_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1a7d2485e_checked((*(_82941_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_82941_t))))._field_Kind=_1a7c5ea96_buildTypeWithRefers(_self_, &((*((*(_82941_t))))._field_Decl), _82961_l, _8307_generics, _83035_referencer);
	__jule_func_result = _1a7d2485e_checked((*(_82941_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1a7c0bd51_constraintChecker> _1a7c6038d_constraintChecker(jule::Ptr<_1a7c56c14_sema> _self_) {
	return jule::new_ptr<_1a7c0bd51_constraintChecker>(_1a7c0bd51_constraintChecker{._field_s=_self_, ._field_genericsD=jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>>(nullptr), ._field_generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_genericsA=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr), ._field_fi=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_si=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_et=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_uniq=false});;
}



inline jule::Bool _1a7c60789_checkType(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7d244a7_TypeSymbol>* _84431_t, jule::Trait _84451_l) {
	return _1a7c60107_checkTypeWithRefers(_self_, _84431_t, _84451_l, nullptr, nullptr);;
}



inline jule::Ptr<_1a7d1bc96_TypeKind> _1a7c60c40_checkTypeRefers(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7b800b0_TypeDecl>* _84937_t, jule::Trait _84960_l, jule::Ptr<_1a7bc1a4c_ReferenceStack> _84975_refers) {
	jule::Ptr<_1a7d2e193_typeChecker> _8507_tc = jule::new_ptr<_1a7d2e193_typeChecker>(_1a7d2e193_typeChecker{._field_s=_self_, ._field_rootLookup=_84960_l, ._field_lookup=_84960_l, ._field_referencer=jule::Ptr<_1a7d2d1a3_referencer>(nullptr), ._field_refers=_84975_refers, ._field_errorToken=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a7d1aea4_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1a7d36c7d_checkDecl(_8507_tc.ptr(), _84937_t);;
}



inline jule::Ptr<_1a7d1bc96_TypeKind> _1a7c611e6_buildTypeWithGenerics(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7b800b0_TypeDecl>* _86143_t, jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>> _8627_generics, jule::Ptr<_1a7bc1a4c_ReferenceStack> _86235_refers) {
	jule::Ptr<_1a7d2e193_typeChecker> _8637_tc = jule::new_ptr<_1a7d2e193_typeChecker>(_1a7d2e193_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3), ._field_referencer=jule::Ptr<_1a7d2d1a3_referencer>(nullptr), ._field_refers=_86235_refers, ._field_errorToken=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_8627_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a7d1aea4_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1a7d36c7d_checkDecl(_8637_tc.ptr(), _86143_t);;
}



inline jule::Ptr<_1a7d1bc96_TypeKind> _1a7c61878_selectType(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7b800b0_TypeDecl>* _87932_t) {
	jule::Ptr<_1a7d2e193_typeChecker> _8807_tc = jule::new_ptr<_1a7d2e193_typeChecker>(_1a7d2e193_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3), ._field_referencer=jule::Ptr<_1a7d2d1a3_referencer>(nullptr), ._field_refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=true, ._field_ownerAlias=jule::Ptr<_1a7d1aea4_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1a7d36c7d_checkDecl(_8807_tc.ptr(), _87932_t);;
}



inline jule::Ptr<_1a7cd5dd6_eval> _1a7c61d2e_evalpd(jule::Ptr<_1a7c56c14_sema> _self_, jule::Trait _89127_l, jule::Ptr<_1a7d1bc96_TypeKind> _89142_p, jule::Ptr<_1a7c7b178_Var> _89160_owner) {
	jule::Ptr<_1a7cd5dd6_eval> _8927_e = jule::new_ptr<_1a7cd5dd6_eval>(_1a7cd5dd6_eval{._field_s=_self_, ._field_lookup=_89127_l, ._field_prefix=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_unsafety=false, ._field_immutable=false, ._field_ignored=false, ._field_disBuiltin=false, ._field_owner=_89160_owner, ._field_field=jule::Ptr<_1a7ba8061_FieldIns>(nullptr), ._field_arg=false});;
	{
		auto &_match_expr{ _89127_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0)) {
			_case_begin_1ab727b10:;
			{
				(*(_8927_e))._field_unsafety=_1a7c1d109_isUnsafe(_89127_l.cast_ptr<_1a7c1ac1c_scopeChecker>((jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0));
			}
		}
		_match_end_1ab727a99:;
	};
	(*_8927_e.alloc)._field_prefix=_89142_p;
	return _8927_e;;
}



inline jule::Ptr<_1a7cd5dd6_eval> _1a7c6222a_evalp(jule::Ptr<_1a7c56c14_sema> _self_, jule::Trait _90626_l, jule::Ptr<_1a7d1bc96_TypeKind> _90641_p) {
	return _1a7c61d2e_evalpd(_self_, _90626_l, _90641_p, nullptr);;
}



inline jule::Ptr<_1a7cd5dd6_eval> _1a7c6256b_eval(jule::Ptr<_1a7c56c14_sema> _self_, jule::Trait _91125_l) {
	return _1a7c6222a_evalp(_self_, _91125_l, nullptr);;
}



inline jule::Bool _1a7c62b87_checkAssignType(jule::Ptr<_1a7c56c14_sema> _self_, jule::Bool _91532_destIsRef, jule::Ptr<_1a7d1bc96_TypeKind>* _91554_dest, jule::Ptr<_1a7cd41ae_Data>* _9168_d, jule::Ptr<_1a7b69b05_Token> _91622_errorToken, jule::Ptr<_1a7bc1a4c_ReferenceStack> _91646_refers) {
	if ((*((*(_9168_d))))._field_Decl) {
		_1a7c59b18_pushErr(_self_.ptr(), _91622_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	if (_91532_destIsRef) {
		if ((!(_1a7d1c4d3_Equal((*(_91554_dest)), (*((*(_9168_d))))._field_Kind)))) {
			_1a7c59b18_pushErr(_self_, _91622_errorToken, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_91554_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_9168_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
			return false;;
		};
	} else {
		jule::Ptr<_1a7cbc7c4_assignTypeChecker> _9278_atc = jule::new_ptr<_1a7cbc7c4_assignTypeChecker>(_1a7cbc7c4_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_91554_dest)), ._field_d=(*(_9168_d)), ._field_errorToken=_91622_errorToken, ._field_refers=_91646_refers});;
		jule::Bool _9344_ok = _1a7cbd7c5_check(_9278_atc.ptr());;
		if ((!(_9344_ok))) {
			return false;;
		};
	};
	if (((!(_1a7cd4ae9_IsConst((*(_9168_d)).ptr()))) || (_1a7d1e44c_Prim((*(_91554_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _9447_kind = (*(_1a7d1e44c_Prim((*(_91554_dest)).ptr())))._field_Kind;;
	{
		
		if (_1c006921d_IsSigInt(_9447_kind)) {
			_case_begin_1ab730b5c:;
			{
				_1c006d40e_SetI64((*((*(_9168_d))))._field_Constant.ptr(), _1c006cb39_AsI64((*((*(_9168_d))))._field_Constant));
			}
		}
		else if (_1c006952b_IsUnsigInt(_9447_kind)) {
			_case_begin_1ab730be5:;
			{
				_1c006d6b7_SetU64((*((*(_9168_d))))._field_Constant.ptr(), _1c006cdc0_AsU64((*((*(_9168_d))))._field_Constant));
			}
		}
		else if (_1c0069b36_IsFloat(_9447_kind)) {
			_case_begin_1ab730c5b:;
			{
				_1c006ded1_SetF64((*((*(_9168_d))))._field_Constant.ptr(), _1c006d156_AsF64((*((*(_9168_d))))._field_Constant));
			}
		}
		_match_end_1ab730aa2:;
	};
	return true;;
}



inline jule::Bool _1a7c6313d__checkTypeCompatibility(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _95845_dest, jule::Ptr<_1a7d1bc96_TypeKind>* _95867_src, jule::Ptr<_1a7b69b05_Token> _9597_errorToken) {
	if (((*(_95867_src)) == nullptr)) {
		return false;;
	};
	if ((_1a7d21273_Tup((*(_95867_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1a7cba948_typeCompatibilityChecker _9677_tcc = _1a7cba948_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_95845_dest)), ._field_src=(*(_95867_src)), ._field_errorToken=_9597_errorToken};;
	return _1a7cbc142_check(&_9677_tcc);;
}



inline jule::Bool _1a7c635e4_checkTypeCompatibility(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _97644_dest, jule::Ptr<_1a7d1bc96_TypeKind>* _9778_src, jule::Ptr<_1a7b69b05_Token>* _97729_errorToken) {
	if (_1a7c6313d__checkTypeCompatibility(_self_, _97644_dest, _9778_src, (*(_97729_errorToken)))) {
		return true;;
	};
	_1a7c59b18_pushErr(_self_, (*(_97729_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_97644_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*(_9778_src)).ptr()), &__jule_any_type4); __jule_collection; }));
	return false;;
}



inline void _1a7c63a12_pushCompatiblityError(_1a7c56c14_sema* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _98542_dest, jule::Ptr<_1a7cd41ae_Data>* _98564_src, jule::Ptr<_1a7b69b05_Token>* _9868_errorToken) {
	if ((*((*(_98564_src))))._field_untyped) {
		{
			
			if (_1c006e465_IsI64((*((*(_98564_src))))._field_Constant.ptr())) {
				_case_begin_1ab738082:;
				{
					_1a7c59b18_pushErr(_self_, (*(_9868_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_98542_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type4); __jule_collection; }));
					return;;
				}
			}
			else if (_1c006e6eb_IsU64((*((*(_98564_src))))._field_Constant.ptr())) {
				_case_begin_1ab73812b:;
				{
					_1a7c59b18_pushErr(_self_, (*(_9868_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_98542_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type4); __jule_collection; }));
					return;;
				}
			}
			else if (_1c006ee9e_IsF64((*((*(_98564_src))))._field_Constant.ptr())) {
				_case_begin_1ab738192:;
				{
					_1a7c59b18_pushErr(_self_, (*(_9868_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_98542_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type4); __jule_collection; }));
					return;;
				}
			}
			_match_end_1ab737e50:;
		};
	};
	_1a7c59b18_pushErr(_self_, (*(_9868_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_98542_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_98564_src))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
}



inline jule::Bool _1a7c63eb8_checkTypeCompatibility1(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _100345_dest, jule::Ptr<_1a7cd41ae_Data>* _100367_src, jule::Ptr<_1a7b69b05_Token>* _10048_errorToken) {
	if (_1a7c6313d__checkTypeCompatibility(_self_, _100345_dest, &((*((*(_100367_src))))._field_Kind), (*(_10048_errorToken)))) {
		return true;;
	};
	_1a7c63a12_pushCompatiblityError(_self_, _100345_dest, _100367_src, _10048_errorToken);
	return false;;
}



inline jule::Ptr<_1a7d1bc96_TypeKind> _1a7c6446e_buildNonGenericTypeKind(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7b800b0_TypeDecl>* _101845_ast, jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>>* _10198_generics, jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>* _101944_ignored) {
	jule::Ptr<_1a7d2e193_typeChecker> _10207_tc = jule::new_ptr<_1a7d2e193_typeChecker>(_1a7d2e193_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3), ._field_referencer=jule::Ptr<_1a7d2d1a3_referencer>(nullptr), ._field_refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_ignoreGenerics=(*(_10198_generics)), ._field_ignoredGenerics=_101944_ignored, ._field_useGenerics=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a7d1aea4_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1a7d36c7d_checkDecl(_10207_tc.ptr(), _101845_ast);;
}



inline jule::Bool _1a7c6486a_buildFnNonGenericTypeKinds(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bbd8b2_FnIns> _103047_f, jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>* _103063_ignored) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>> _103111_generics = nullptr;;
	if (_1a7bbb11d_IsMethod((*(_103047_f))._field_Decl.ptr())) {
		_103111_generics=jule::append((*(*(_103047_f))._field_Decl.alloc)._field_Generics,(*((*(*(_103047_f))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_103111_generics=(*((*(_103047_f))._field_Decl))._field_Generics;
	};
	__jule_func_result = _1a7c65a14_basicFnEnvironment(_self_, &(_103047_f), jule::__new_closure<jule::Bool,jule::Ptr<_1a7c56c14_sema>*>((void*)__jule_anon_1ab7436db, jule::Ptr<__jule_anon_1ab7436db_ctx>::make(__jule_anon_1ab7436db_ctx{._103047_f=_103047_f,._103111_generics=_103111_generics,._103063_ignored=_103063_ignored}).as<jule::Uintptr>(), __jule_anon_1ab7436db_ctx_handler));
	return __jule_func_result;;
}



inline jule::Ptr<_1a7bbd8b2_FnIns> _1a7c64bab_getTraitCheckFnKind(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bba8d1_Fn>* _105341_f) {
	if (((*((*(_105341_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_105341_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1a7bbd8b2_FnIns> _10577_ins = _1a7bbbddd_instanceForce((*(_105341_f)));;
	jule::Ptr<_1a7d2e193_typeChecker> _10597_tc = jule::new_ptr<_1a7d2e193_typeChecker>(_1a7d2e193_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3), ._field_referencer=jule::Ptr<_1a7d2d1a3_referencer>(nullptr), ._field_refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a7d1aea4_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr), ._field_inscatch=false});;
	{
		auto expr = &((*(_10577_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab749add:;
		if (it != expr_end) {
			jule::Ptr<_1a7bbc839_ParamIns> _106415_p = *it;
			{
				if ((!(_1a7bb955b_IsSelf((*(_106415_p))._field_Decl.ptr())))) {
					(*_106415_p.alloc)._field_Kind=_1a7d36c7d_checkDecl(_10597_tc.ptr(), &((*((*(*(_106415_p))._field_Decl.alloc)._field_Kind))._field_Decl));
					if (((*_106415_p.alloc)._field_Kind == nullptr)) {
						return nullptr;;
					};
				};
			}
			_iter_next_1ab749add:;
			++it;
			goto _iter_begin_1ab749add;
		}
		_iter_end_1ab749add:;
	};
	if ((!(_1a7bbad87_IsVoid((*(_105341_f)).ptr())))) {
		(*_10577_ins.alloc)._field_Result=_1a7d36c7d_checkDecl(_10597_tc, &((*((*((*((*(_105341_f))))._field_Result))._field_Kind))._field_Decl));
		if (((*_10577_ins.alloc)._field_Result == nullptr)) {
			return nullptr;;
		};
	};
	return _10577_ins;;
}



inline jule::Bool _1a7c65162_checkConstraintsFn(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _108240_f, jule::Ptr<_1a7b69b05_Token>* _108256_et, jule::Ptr<_1a7bbd8b2_FnIns> _108272_exist) {
	jule::Ptr<_1a7c0bd51_constraintChecker> _10837_cc = _1a7c6038d_constraintChecker(_self_);;
	(*(_10837_cc))._field_et=(*(_108256_et));
	(*_10837_cc.alloc)._field_fi=(*(_108240_f));
	if ((_108272_exist != nullptr)) {
		{
			auto expr = &((*_108272_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab74ec58:;
			if (it != expr_end) {
				jule::I64 _10879_i = it - expr->begin();
				jule::Ptr<_1a7d1a3b0_InsGeneric> _108716_g = *it;
				{
					(*((*((*(_108240_f))))._field_Generics[_10879_i]))._field_Constraint=(*(_108716_g))._field_Constraint;
				}
				_iter_next_1ab74ec58:;
				++it;
				_10879_i++;
				goto _iter_begin_1ab74ec58;
			}
			_iter_end_1ab74ec58:;
		};
	} else {
		(*_10837_cc.alloc)._field_uniq=true;
	};
	return _1a7c0ccb9_check(_10837_cc);;
}



inline jule::Bool _1a7c65618_checkConstraintsStruct(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _109644_s, jule::Ptr<_1a7b69b05_Token>* _109664_et, jule::Ptr<_1a7ba8b11_StructIns> _109680_exist) {
	jule::Ptr<_1a7c0bd51_constraintChecker> _10977_cc = _1a7c6038d_constraintChecker(_self_);;
	(*(_10977_cc))._field_et=(*(_109664_et));
	(*_10977_cc.alloc)._field_si=(*(_109644_s));
	if ((_109680_exist != nullptr)) {
		{
			auto expr = &((*_109680_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab752e26:;
			if (it != expr_end) {
				jule::I64 _11019_i = it - expr->begin();
				jule::Ptr<_1a7d1a3b0_InsGeneric> _110116_g = *it;
				{
					(*((*((*(_109644_s))))._field_Generics[_11019_i]))._field_Constraint=(*(_110116_g))._field_Constraint;
				}
				_iter_next_1ab752e26:;
				++it;
				_11019_i++;
				goto _iter_begin_1ab752e26;
			}
			_iter_end_1ab752e26:;
		};
	} else {
		(*_10977_cc.alloc)._field_uniq=true;
	};
	return _1a7c0ccb9_check(_10977_cc);;
}



inline jule::Bool _1a7c65a14_basicFnEnvironment(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _111340_f, jule::Fn<jule::Bool,jule::Ptr<_1a7c56c14_sema>*> _111351_algo) {
	jule::Ptr<_1a7c56c14_sema> _11147_sema = (*((*((*(_111340_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1a7ccd9e4_SymbolTable> _11157_old = _1a7c59442_getCurrentFile(_11147_sema.ptr());;
	jule::Ptr<_1a7ccd9e4_SymbolTable> _11167_file = _1a7c5587d_findFile(&((*_11147_sema.alloc)._field_files), &((*((*(*((*(_111340_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_11167_file != nullptr)) {
		_1a7c596ea_setCurrentFile(_11147_sema, _11167_file);
	};
	jule::Bool _11213_ok = _111351_algo(&(_11147_sema));;
	if ((_11147_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*_11147_sema.alloc)._field_errors);
		(*_11147_sema.alloc)._field_errors=nullptr;
	};
	_1a7c596ea_setCurrentFile(_11147_sema, _11157_old);
	return _11213_ok;;
}



inline jule::Bool _1a7c65e10_fnEnvironment(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _113335_f, jule::Fn<jule::Bool,jule::Ptr<_1a7c56c14_sema>*,jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>*> _113346_algo) {
	jule::I64 _11347_size = (*((*(_113335_f))))._field_Generics.len();;
	if ((((*((*(_113335_f))))._field_Decl != nullptr) && ((*(*((*(_113335_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_11347_size+=(*(*((*((*(_113335_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>> _11387_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>::alloc(0LL, _11347_size); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7d1aea4_TypeAlias>(nullptr); __jule_collection; });;
	_1a7c55509_appendGenericTypeAliases(&(_11387_generics), _113335_f);
	return _1a7c65a14_basicFnEnvironment(_self_, _113335_f, jule::__new_closure<jule::Bool,jule::Ptr<_1a7c56c14_sema>*>((void*)__jule_anon_1ab75b6b0, jule::Ptr<__jule_anon_1ab75b6b0_ctx>::make(__jule_anon_1ab75b6b0_ctx{._113346_algo=_113346_algo,._11387_generics=_11387_generics}).as<jule::Uintptr>(), __jule_anon_1ab75b6b0_ctx_handler));;
}



inline void _1a7c661b8_checkFnParamKind(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bbc839_ParamIns>* _114538_p) {
	(*((*((*(_114538_p))))._field_Kind))._field_Variadic=(*((*((*(_114538_p))))._field_Decl))._field_Variadic;
	if (((*(*((*(_114538_p))))._field_Decl.alloc)._field_Reference && (!(_1a7d38ba3_isValidForRef(&((*((*(_114538_p))))._field_Kind)))))) {
		_1a7c59b18_pushErr(_self_.ptr(), (*(*((*(_114538_p))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot points to type @", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_114538_p))))._field_Kind), &__jule_any_type4); __jule_collection; }));
	};
}



inline jule::Bool _1a7c66509_reloadFnInsTypes(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bbd8b2_FnIns> _115237_f) {
	if ((_1a7bbed7a_IsBuiltin(_115237_f.ptr()) || _1a7bc0111_IsAnon(_115237_f))) {
		return true;;
	};
	return _1a7c65e10_fnEnvironment(_self_, &(_115237_f), jule::__new_closure<jule::Bool,jule::Ptr<_1a7c56c14_sema>*,jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>*>((void*)__jule_anon_1ab760e9a, jule::Ptr<__jule_anon_1ab760e9a_ctx>::make(__jule_anon_1ab760e9a_ctx{._115237_f=_115237_f,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab760e9a_ctx_handler));;
}



inline jule::Bool _1a7c669b0_checkRefValidityForInitExpr(jule::Ptr<_1a7c56c14_sema> _self_, jule::Bool _119244_leftMut, jule::Ptr<_1a7cd41ae_Data>* _119264_d, jule::Ptr<_1a7b69b05_Token>* _119279_errorToken) {
	if ((!(_1a7c542c7_isValidModelForRef(&((*((*(_119264_d))))._field_Model))))) {
		_1a7c59b18_pushErr(_self_.ptr(), (*(_119279_errorToken)), static_cast<jule::Str>(jule::Str::lit("references requires variable based expression for assignment", 60)), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_119244_leftMut && (!((*((*(_119264_d))))._field_Mutable)))) {
		_1a7c59b18_pushErr(_self_, (*(_119279_errorToken)), static_cast<jule::Str>(jule::Str::lit("mutable reference cannot point to immutable data", 48)), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1a7c66d01_isMutRiskyStruct(_1a7c56c14_sema* _self_, jule::Ptr<_1a7ba8b11_StructIns>* _120929_s) {
	{
		auto expr = &((*((*(_120929_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab76b082:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba8061_FieldIns> *_121010_f = it;
			{
				if ((((*((*((*(_121010_f))))._field_Decl))._field_Mutable && _1a7d1d67c_Mutable((*(*(_121010_f)).alloc)._field_Kind.ptr())) && _1a7c5a377_isAccessibleDefine(_self_, (*(*((*(_121010_f))))._field_Decl.alloc)._field_Public, (*(*((*(_121010_f))))._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_1ab76b082:;
			++it;
			goto _iter_begin_1ab76b082;
		}
		_iter_end_1ab76b082:;
	};
	return false;;
}



inline jule::Bool _1a7c6741c_checkValidityForInitExpr(jule::Ptr<_1a7c56c14_sema> _self_, jule::Bool _123641_leftMut, jule::Bool _123656_leftRef, jule::Ptr<_1a7d1bc96_TypeKind>* _12374_leftKind, jule::Ptr<_1a7cd41ae_Data>* _123730_d, jule::Ptr<_1a7b69b05_Token>* _123745_errorToken) {
	if ((_123641_leftMut && (!((*((*(_123730_d))))._field_Mutable)))) {
		if (_1a7d1d67c_Mutable((*((*(_123730_d))))._field_Kind.ptr())) {
			_1a7c59b18_pushErr(_self_.ptr(), (*(_123745_errorToken)), static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_123730_d))))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return false;;
		};
		jule::Ptr<_1a7ba8b11_StructIns> _12454_s = _1a7d209c0_Struct((*((*(_123730_d))))._field_Kind);;
		if (((_12454_s != nullptr) && _1a7c66d01_isMutRiskyStruct(_self_, &(_12454_s)))) {
			_1a7c59b18_pushErr(_self_, (*(_123745_errorToken)), static_cast<jule::Str>(jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_123730_d))))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return false;;
		};
	};
	if (_123656_leftRef) {
		if ((!(_1a7c669b0_checkRefValidityForInitExpr(_self_, _123641_leftMut, _123730_d, _123745_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1a7cbc7c4_assignTypeChecker> _12567_atc = jule::new_ptr<_1a7cbc7c4_assignTypeChecker>(_1a7cbc7c4_assignTypeChecker{._field_s=_self_, ._field_dest=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_d=(*(_123730_d)), ._field_errorToken=(*(_123745_errorToken)), ._field_refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr)});;
	return _1a7cbd022_checkValidity(_12567_atc.ptr());;
}



inline jule::Bool _1a7c67818_checkTypeAliasDeclKind(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7d1aea4_TypeAlias>* _126444_ta, jule::Trait _126464_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7ccd9e4_SymbolTable> _12657_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1a7c596ea_setCurrentFile(_self_, _12657_old);
	});;
	if (((*((*(_126444_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1a7ccd9e4_SymbolTable> _12708_file = _1a7c5587d_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_126444_ta))))._field_Token.alloc)._field_File));;
		if ((_12708_file != nullptr)) {
			_1a7c596ea_setCurrentFile(_self_, _12708_file);
		};
	};
	__jule_func_result=_1a7c60107_checkTypeWithRefers(_self_, &((*((*(_126444_ta))))._field_Kind), _126464_l, nullptr, jule::new_ptr<_1a7d2d1a3_referencer>(_1a7d2d1a3_referencer{._field_ident=(*((*(_126444_ta))))._field_Ident, ._field_owner=jule::Any((*(_126444_ta)), &__jule_any_type27), ._field_refs=(&((*((*(_126444_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1a7d2021c_Arr((*((*((*(_126444_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1a7d2021c_Arr((*((*((*(_126444_ta))))._field_Kind))._field_Kind)))._field_Auto)) {
		_1a7c59b18_pushErr(_self_, (*((*(*((*(_126444_ta))))._field_Kind.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1a7c67b7b_checkTypeAliasDecl(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7d1aea4_TypeAlias>* _128740_ta, jule::Trait _128760_l) {
	if (_1a7b6c4dc_IsIgnoreIdent((*((*(_128740_ta))))._field_Ident)) {
		_1a7c59b18_pushErr(_self_.ptr(), (*((*(_128740_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	_1a7c67818_checkTypeAliasDeclKind(_self_, _128740_ta, _128760_l);
}



inline void _1a7c67e34_checkTypeAliasDeclDup(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7d1aea4_TypeAlias>* _129543_ta) {
	if (_1a7b6c4dc_IsIgnoreIdent((*((*(_129543_ta))))._field_Ident)) {
		_1a7c59b18_pushErr(_self_.ptr(), (*((*(_129543_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_1a7c5a82d_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_129543_ta))), &((*((*(_129543_ta))))._field_Ident), (*((*(_129543_ta))))._field_Binded)) {
		_1a7c59b18_pushErr(_self_, (*((*(_129543_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_129543_ta))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1a7c67818_checkTypeAliasDeclKind(_self_, _129543_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3));
}



inline jule::Bool _1a7c681ba_checkTypeAliasDecls(jule::Ptr<_1a7c56c14_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab77e55c:;
		if (it != expr_end) {
			jule::Ptr<_1a7d1aea4_TypeAlias> _130815_ta = *it;
			{
				_1a7c67e34_checkTypeAliasDeclDup(_self_, &(_130815_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab77e55c:;
			++it;
			goto _iter_begin_1ab77e55c;
		}
		_iter_end_1ab77e55c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ab7ad437_checkEnumItemsDup(_1a7c56c14_sema* _self_, jule::Slice<jule::Ptr<_1a7bd1001_EnumItem>> _131936_items) {
	{
		auto expr = &(_131936_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7ae845:;
		if (it != expr_end) {
			jule::Ptr<_1a7bd1001_EnumItem> *_132010_item = it;
			{
				if (((*((*(_132010_item))))._field_Ident).empty()) {
					goto _iter_next_1ab7ae845;
				} else if (_1a7b6c4dc_IsIgnoreIdent((*((*(_132010_item))))._field_Ident)) {
					_1a7c59b18_pushErr(_self_, (*(*(_132010_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_131936_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab7b0a66:;
						if (it != expr_end) {
							jule::Ptr<_1a7bd1001_EnumItem> *_132612_citem = it;
							{
								if (((*(_132010_item)) == (*(_132612_citem)))) {
									goto _iter_end_1ab7b0a66;
								} else if (((*((*(_132010_item))))._field_Ident == (*((*(_132612_citem))))._field_Ident)) {
									_1a7c59b18_pushErr(_self_, (*(*(_132010_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_132010_item)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
									_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1ab7b0a66;
								};
							}
							_iter_next_1ab7b0a66:;
							++it;
							goto _iter_begin_1ab7b0a66;
						}
						_iter_end_1ab7b0a66:;
					};
				};
			}
			_iter_next_1ab7ae845:;
			++it;
			goto _iter_begin_1ab7ae845;
		}
		_iter_end_1ab7ae845:;
	};
}

inline void _1ab7bb478_checkEnumItemsDup(_1a7c56c14_sema* _self_, jule::Slice<jule::Ptr<_1a7bd2ba1_TypeEnumItem>> _131936_items) {
	{
		auto expr = &(_131936_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7bc842:;
		if (it != expr_end) {
			jule::Ptr<_1a7bd2ba1_TypeEnumItem> *_132010_item = it;
			{
				if (((*((*(_132010_item))))._field_Ident).empty()) {
					goto _iter_next_1ab7bc842;
				} else if (_1a7b6c4dc_IsIgnoreIdent((*((*(_132010_item))))._field_Ident)) {
					_1a7c59b18_pushErr(_self_, (*(*(_132010_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_131936_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab7bda63:;
						if (it != expr_end) {
							jule::Ptr<_1a7bd2ba1_TypeEnumItem> *_132612_citem = it;
							{
								if (((*(_132010_item)) == (*(_132612_citem)))) {
									goto _iter_end_1ab7bda63;
								} else if (((*((*(_132010_item))))._field_Ident == (*((*(_132612_citem))))._field_Ident)) {
									_1a7c59b18_pushErr(_self_, (*(*(_132010_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_132010_item)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
									_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1ab7bda63;
								};
							}
							_iter_next_1ab7bda63:;
							++it;
							goto _iter_begin_1ab7bda63;
						}
						_iter_end_1ab7bda63:;
					};
				};
			}
			_iter_next_1ab7bc842:;
			++it;
			goto _iter_begin_1ab7bc842;
		}
		_iter_end_1ab7bc842:;
	};
}



inline void _1a7c6872b_checkEnumItemsStr(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bd1a6d_Enum>* _133939_e) {
	jule::Ptr<_1a7cd5dd6_eval> _13407_eval = _1a7c6256b_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3));;
	{
		auto expr = &((*((*(_133939_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7812ea:;
		if (it != expr_end) {
			jule::Ptr<_1a7bd1001_EnumItem> _134115_item = *it;
			{
				if (_1a7bd13db_AutoExpr(_134115_item.ptr())) {
					(*_134115_item.alloc)._field_Value=jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1c006b231_NewStr((*_134115_item.alloc)._field_Ident)})});
					(*((*((*_134115_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*((*(_134115_item))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
				} else {
					jule::Ptr<_1a7cd41ae_Data> _13509_d = _1a7d09aa8_evalExpr(_13407_eval, (*((*(_134115_item))._field_Value))._field_Expr);;
					if ((_13509_d == nullptr)) {
						goto _iter_next_1ab7812ea;
					};
					if ((!(_1a7cd4ae9_IsConst(_13509_d.ptr())))) {
						_1a7c59b18_pushErr(_self_, (*((*(*(_134115_item))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
					};
					jule::Ptr<_1a7bc1a4c_ReferenceStack> _13599_refers = static_cast<jule::Ptr<_1a7bc1a4c_ReferenceStack>>(nullptr);;
					_1a7c62b87_checkAssignType(_self_, false, &((*((*((*(_133939_e))))._field_Kind))._field_Kind), &(_13509_d), (*_134115_item.alloc)._field_Token, _13599_refers);
					(*(*(_134115_item))._field_Value.alloc)._field_Data=_13509_d;
				};
			}
			_iter_next_1ab7812ea:;
			++it;
			goto _iter_begin_1ab7812ea;
		}
		_iter_end_1ab7812ea:;
	};
}



inline void _1ab78c416_checkEnumItemInt(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7cd5dd6_eval>* _136643_eval, jule::Ptr<_1a7bd1a6d_Enum>* _136661_e, jule::Ptr<_1a7d24dae_Prim>* _136672_prim, jule::Ptr<_1a7bd1001_EnumItem>* _136690_item, jule::U64* _1366112_n) {
	if (_1a7bd13db_AutoExpr((*(_136690_item)).ptr())) {
		(*((*(_136690_item))))._field_Value=jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)})});
		{
			
{
				_case_begin_1ab78e803:;
				{
					(*((*((*((*(_136690_item))))._field_Value))._field_Data))._field_Constant=static__1c006ab9d_NewU64((*(_1366112_n)));
				}
			}
			_match_end_1ab7901b6:;
		};
		(*((*((*((*(_136690_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_136690_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	} else {
		jule::Ptr<_1a7cd41ae_Data> _13818_d = _1a7d09aa8_evalExpr((*(_136643_eval)), (*((*((*(_136690_item))))._field_Value))._field_Expr);;
		if ((_13818_d == nullptr)) {
			return;;
		};
		if ((!(_1a7cd4ae9_IsConst(_13818_d.ptr())))) {
			_1a7c59b18_pushErr(_self_.ptr(), (*((*(*((*(_136690_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a7bc1a4c_ReferenceStack> _13888_refers = static_cast<jule::Ptr<_1a7bc1a4c_ReferenceStack>>(nullptr);;
		_1a7c62b87_checkAssignType(_self_, false, &((*((*((*(_136661_e))))._field_Kind))._field_Kind), &(_13818_d), (*((*(_136690_item))))._field_Token, _13888_refers);
		(*(*((*(_136690_item))))._field_Value.alloc)._field_Data=_13818_d;
		{
			
{
				_case_begin_1ab794374:;
				{
					(*(_1366112_n))=_1c006c100_ReadU64((*((*(*((*(_136690_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1ab795694:;
		};
	};
}

inline void _1ab79ce71_checkEnumItemInt(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7cd5dd6_eval>* _136643_eval, jule::Ptr<_1a7bd1a6d_Enum>* _136661_e, jule::Ptr<_1a7d24dae_Prim>* _136672_prim, jule::Ptr<_1a7bd1001_EnumItem>* _136690_item, jule::I64* _1366112_n) {
	if (_1a7bd13db_AutoExpr((*(_136690_item)).ptr())) {
		(*((*(_136690_item))))._field_Value=jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)})});
		{
			
{
				_case_begin_1ab7a0c43:;
				{
					(*((*((*((*(_136690_item))))._field_Value))._field_Data))._field_Constant=static__1c006a8d4_NewI64((*(_1366112_n)));
				}
			}
			_match_end_1ab7a0bcc:;
		};
		(*((*((*((*(_136690_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_136690_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	} else {
		jule::Ptr<_1a7cd41ae_Data> _13818_d = _1a7d09aa8_evalExpr((*(_136643_eval)), (*((*((*(_136690_item))))._field_Value))._field_Expr);;
		if ((_13818_d == nullptr)) {
			return;;
		};
		if ((!(_1a7cd4ae9_IsConst(_13818_d.ptr())))) {
			_1a7c59b18_pushErr(_self_.ptr(), (*((*(*((*(_136690_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a7bc1a4c_ReferenceStack> _13888_refers = static_cast<jule::Ptr<_1a7bc1a4c_ReferenceStack>>(nullptr);;
		_1a7c62b87_checkAssignType(_self_, false, &((*((*((*(_136661_e))))._field_Kind))._field_Kind), &(_13818_d), (*((*(_136690_item))))._field_Token, _13888_refers);
		(*(*((*(_136690_item))))._field_Value.alloc)._field_Data=_13818_d;
		{
			
{
				_case_begin_1ab7a63b9:;
				{
					(*(_1366112_n))=_1c006bd69_ReadI64((*((*(*((*(_136690_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1ab7a6342:;
		};
	};
}



inline void _1ab788599_checkEnumItemsInt1(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7d24dae_Prim>* _140241_prim, jule::Ptr<_1a7bd1a6d_Enum>* _140259_e) {
	jule::U64 _14037_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1ab78a27c:;
			{
				_14037_max=_1c0065b21_MaxU(_1a7d25233_Str((*(_140241_prim)).ptr()));
			}
		}
		_match_end_1ab78a3e2:;
	};
	jule::Ptr<_1a7cd5dd6_eval> _14137_eval = _1a7c6256b_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3));;
	jule::U64 _14147_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1a7bd1001_EnumItem> _14157_first = (*((*(_140259_e))))._field_Items[0LL];;
	_1ab78c416_checkEnumItemInt(_self_, &(_14137_eval), _140259_e, _140241_prim, &(_14157_first), &(_14147_n));
	if (((*((*(_14157_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1ab789aa6:;
				{
					_14147_n=_1c006cdc0_AsU64((*(*((*(_14157_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1ab795e69:;
		};
	};
	{
		auto expr = (*((*(_140259_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ab791dee:;
		if (it != expr_end) {
			jule::Ptr<_1a7bd1001_EnumItem> _142715_item = *it;
			{
				if (((_1a7bd13db_AutoExpr(_142715_item.ptr()) && (_14147_n > 0LLU)) && ((jule::U64)(_14037_max - _14147_n) <= 0LLU))) {
					_1a7c59b18_pushErr(_self_, (*_142715_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1ab791dee;
				};
				(_14147_n)++;
				_1ab78c416_checkEnumItemInt(_self_, &(_14137_eval), _140259_e, _140241_prim, &(_142715_item), &(_14147_n));
			}
			_iter_next_1ab791dee:;
			++it;
			goto _iter_begin_1ab791dee;
		}
		_iter_end_1ab791dee:;
	};
}

inline void _1ab788885_checkEnumItemsInt1(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7d24dae_Prim>* _140241_prim, jule::Ptr<_1a7bd1a6d_Enum>* _140259_e) {
	jule::I64 _14037_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1ab79ad2b:;
			{
				_14037_max=_1c0065857_MaxI(_1a7d25233_Str((*(_140241_prim)).ptr()));
			}
		}
		_match_end_1ab79acb5:;
	};
	jule::Ptr<_1a7cd5dd6_eval> _14137_eval = _1a7c6256b_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3));;
	jule::I64 _14147_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1a7bd1001_EnumItem> _14157_first = (*((*(_140259_e))))._field_Items[0LL];;
	_1ab79ce71_checkEnumItemInt(_self_, &(_14137_eval), _140259_e, _140241_prim, &(_14157_first), &(_14147_n));
	if (((*((*(_14157_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1ab79d834:;
				{
					_14147_n=_1c006cb39_AsI64((*(*((*(_14157_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1ab7a386c:;
		};
	};
	{
		auto expr = (*((*(_140259_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ab7a80ad:;
		if (it != expr_end) {
			jule::Ptr<_1a7bd1001_EnumItem> _142715_item = *it;
			{
				if (((_1a7bd13db_AutoExpr(_142715_item.ptr()) && (_14147_n > 0LL)) && ((_14037_max - _14147_n) <= 0LL))) {
					_1a7c59b18_pushErr(_self_, (*_142715_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1ab7a80ad;
				};
				(_14147_n)++;
				_1ab79ce71_checkEnumItemInt(_self_, &(_14137_eval), _140259_e, _140241_prim, &(_142715_item), &(_14147_n));
			}
			_iter_next_1ab7a80ad:;
			++it;
			goto _iter_begin_1ab7a80ad;
		}
		_iter_end_1ab7a80ad:;
	};
}



inline void _1a7c693ca_checkEnumItemsInt(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bd1a6d_Enum>* _143739_e) {
	jule::Ptr<_1a7d24dae_Prim> _14383_prim = _1a7d1e44c_Prim((*((*((*(_143739_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_1c006921d_IsSigInt((*(_14383_prim))._field_Kind)) {
			_case_begin_1ab797c6d:;
			{
				_1ab788885_checkEnumItemsInt1(_self_, &(_14383_prim), _143739_e);
			}
		}
		else {
			_case_begin_1ab787ce6:;
			{
				_1ab788599_checkEnumItemsInt1(_self_, &(_14383_prim), _143739_e);
			}
		}
		_match_end_1ab787c6e:;
	};
}



inline void _1a7c69683_checkEnumDecl(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bd1a6d_Enum>* _144735_e) {
	if (_1a7b6c4dc_IsIgnoreIdent((*((*(_144735_e))))._field_Ident)) {
		_1a7c59b18_pushErr(_self_.ptr(), (*((*(_144735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1a7c5a82d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_144735_e))), &((*((*(_144735_e))))._field_Ident), false)) {
		_1a7c59b18_pushErr(_self_, (*((*(_144735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_144735_e))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_144735_e))))._field_Items.len() == 0LL)) {
		_1a7c59b18_pushErr(_self_.ptr(), (*((*(_144735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_144735_e))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	_1ab7ad437_checkEnumItemsDup(_self_, (*((*(_144735_e))))._field_Items);
	if (((*((*(_144735_e))))._field_Kind != nullptr)) {
		if ((!(_1a7c60789_checkType(_self_, &((*((*(_144735_e))))._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3))))) {
			return;;
		};
	} else {
		(*((*(_144735_e))))._field_Kind=(*(_1a7e04db2_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	jule::Ptr<_1a7d24dae_Prim> _14717_t = _1a7d1e44c_Prim((*((*((*(_144735_e))))._field_Kind))._field_Kind.ptr());;
	if ((_14717_t == nullptr)) {
		_1a7c59b18_pushErr(_self_, (*((*(_144735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1a7d28379_IsStr(_14717_t.ptr())) {
			_case_begin_1ab7b5b37:;
			{
				_1a7c6872b_checkEnumItemsStr(_self_, _144735_e);
			}
		}
		else if (_1c00697e5_IsInt(_1a7d25233_Str(_14717_t.ptr()))) {
			_case_begin_1ab7b5818:;
			{
				_1a7c693ca_checkEnumItemsInt(_self_, _144735_e);
			}
		}
		else {
			_case_begin_1ab7b57a2:;
			{
				_1a7c59b18_pushErr(_self_, (*((*(_144735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab7b4c79:;
	};
}



inline void _1a7c6993b_checkTypeEnumDecl(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bd3278_TypeEnum>* _148839_e) {
	if (_1a7b6c4dc_IsIgnoreIdent((*((*(_148839_e))))._field_Ident)) {
		_1a7c59b18_pushErr(_self_.ptr(), (*((*(_148839_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1a7c5a82d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_148839_e))), &((*((*(_148839_e))))._field_Ident), false)) {
		_1a7c59b18_pushErr(_self_, (*((*(_148839_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_148839_e))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_148839_e))))._field_Items.len() == 0LL)) {
		_1a7c59b18_pushErr(_self_.ptr(), (*((*(_148839_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_148839_e))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	_1ab7bb478_checkEnumItemsDup(_self_, (*((*(_148839_e))))._field_Items);
	{
		auto expr = &((*((*(_148839_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7bbdc4:;
		if (it != expr_end) {
			jule::Ptr<_1a7bd2ba1_TypeEnumItem> _150215_item = *it;
			{
				if (((*(_150215_item))._field_Kind == nullptr)) {
					_1a7c59b18_pushErr(_self_, (*_150215_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					goto _iter_next_1ab7bbdc4;
				};
				jule::Bool _15074_ok = _1a7c60789_checkType(_self_, &((*_150215_item.alloc)._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3));;
				if ((!(_15074_ok))) {
					goto _iter_next_1ab7bbdc4;
				};
				jule::Ptr<_1a7d24dae_Prim> _15114_p = _1a7d1e44c_Prim((*((*_150215_item.alloc)._field_Kind))._field_Kind.ptr());;
				if (((_15114_p != nullptr) && _1a7d28610_IsAny(_15114_p))) {
					_1a7c59b18_pushErr(_self_, (*_150215_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56)), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1ab7bbdc4:;
			++it;
			goto _iter_begin_1ab7bbdc4;
		}
		_iter_end_1ab7bbdc4:;
	};
	if (((*((*(_148839_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1a7bd2ba1_TypeEnumItem> _15178_item = (*((*(_148839_e))))._field_Items[0LL];;
		_1a7d1bc96_TypeKind _15184_tk = _1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_148839_e)), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data4)};;
		if ((((*((*(_15178_item))._field_Kind))._field_Kind != nullptr) && _1a7d1c4d3_Equal((*((*(_15178_item))._field_Kind))._field_Kind, ((jule::Ptr<_1a7d1bc96_TypeKind>)((&(_15184_tk))))))) {
			_1a7c59b18_pushErr(_self_, (*_15178_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7bd35ec_Str((*(_148839_e)).ptr()), &__jule_any_type4); __jule_collection; }));
		};
	};
}



inline jule::Bool _1a7c69bc2_checkEnumDecls(jule::Ptr<_1a7c56c14_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7c7de1:;
		if (it != expr_end) {
			jule::Ptr<_1a7bd1a6d_Enum> _152915_e = *it;
			{
				_1a7c69683_checkEnumDecl(_self_, &(_152915_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab7c7de1:;
			++it;
			goto _iter_begin_1ab7c7de1;
		}
		_iter_end_1ab7c7de1:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a7c69e58_checkTypeEnumDecls(jule::Ptr<_1a7c56c14_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7c95b8:;
		if (it != expr_end) {
			jule::Ptr<_1a7bd3278_TypeEnum> _154115_e = *it;
			{
				_1a7c6993b_checkTypeEnumDecl(_self_, &(_154115_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab7c95b8:;
			++it;
			goto _iter_begin_1ab7c95b8;
		}
		_iter_end_1ab7c95b8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a7c6a299_checkDeclGenerics(_1a7c56c14_sema* _self_, jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>>* _155134_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _155134_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7c9b6d:;
		if (it != expr_end) {
			jule::I64 _15537_i = it - expr->begin();
			jule::Ptr<_1a7b92127_GenericDecl> *_155310_g = it;
			{
				if (_1a7b6c4dc_IsIgnoreIdent((*((*(_155310_g))))._field_Ident)) {
					_1a7c59b18_pushErr(_self_, (*(*(_155310_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1ab7c9b6d;
				};
				_julec_label_1ab7cbad7:;
				{
					auto expr = _155134_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab7cc5cc:;
					if (it != expr_end) {
						jule::I64 _15628_j = it - expr->begin();
						jule::Ptr<_1a7b92127_GenericDecl> *_156211_ct = it;
						{
							{
								
								if ((_15628_j >= _15537_i)) {
									_case_begin_1ab7cd19e:;
									{
										goto _iter_end_1ab7cc5cc;
									}
								}
								else if (((*(*(_155310_g)).alloc)._field_Ident == (*((*(_156211_ct))))._field_Ident)) {
									_case_begin_1ab7cd237:;
									{
										_1a7c59b18_pushErr(_self_, (*(*(_155310_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_155310_g)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
										_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1ab7cc5cc;
									}
								}
								_match_end_1ab7cd0a0:;
							};
						}
						_iter_next_1ab7cc5cc:;
						++it;
						_15628_j++;
						goto _iter_begin_1ab7cc5cc;
					}
					_iter_end_1ab7cc5cc:;
				};
			}
			_iter_next_1ab7c9b6d:;
			++it;
			_15537_i++;
			goto _iter_begin_1ab7c9b6d;
		}
		_iter_end_1ab7c9b6d:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a7c6a5da_checkFnDeclParamsDup(_1a7c56c14_sema* _self_, jule::Ptr<_1a7bba8d1_Fn>* _157837_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1ab7cceb2:;
	{
		auto expr = &((*((*(_157837_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7cdea2:;
		if (it != expr_end) {
			jule::I64 _15817_i = it - expr->begin();
			jule::Ptr<_1a7bb8e0c_Param> *_158110_p = it;
			{
				{
					auto expr = &((*((*(_157837_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab7d0e4e:;
					if (it != expr_end) {
						jule::Ptr<_1a7b92127_GenericDecl> *_158311_g = it;
						{
							if (((*((*(_158110_p))))._field_Ident == (*((*(_158311_g))))._field_Ident)) {
								__jule_func_result=false;
								_1a7c59b18_pushErr(_self_, (*(*(_158110_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_158110_p)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
								_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								goto _iter_next_1ab7cdea2;
							};
						}
						_iter_next_1ab7d0e4e:;
						++it;
						goto _iter_begin_1ab7d0e4e;
					}
					_iter_end_1ab7d0e4e:;
				};
				_julec_label_1ab7d2e62:;
				{
					auto expr = &((*((*(_157837_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab7d1427:;
					if (it != expr_end) {
						jule::I64 _15938_j = it - expr->begin();
						jule::Ptr<_1a7bb8e0c_Param> *_159311_jp = it;
						{
							{
								
								if ((_15938_j >= _15817_i)) {
									_case_begin_1ab7d3a23:;
									{
										goto _iter_end_1ab7d1427;
									}
								}
								else if (_1a7b6c4dc_IsIgnoreIdent((*(*(_158110_p)).alloc)._field_Ident) || _1a7b6c4dc_IsIgnoreIdent((*((*(_159311_jp))))._field_Ident) || _1a7b6c7a6_IsAnonIdent((*(*(_158110_p)).alloc)._field_Ident) || _1a7b6c7a6_IsAnonIdent((*(*(_159311_jp)).alloc)._field_Ident)) {
									_case_begin_1ab7d3aab:;
									{
										goto _iter_end_1ab7d1427;
									}
								}
								else if (((*(*(_158110_p)).alloc)._field_Ident == (*((*(_159311_jp))))._field_Ident)) {
									_case_begin_1ab7d3b22:;
									{
										__jule_func_result=false;
										_1a7c59b18_pushErr(_self_, (*(*(_158110_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_158110_p)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
										_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_next_1ab7cdea2;
									}
								}
								_match_end_1ab7d38d0:;
							};
						}
						_iter_next_1ab7d1427:;
						++it;
						_15938_j++;
						goto _iter_begin_1ab7d1427;
					}
					_iter_end_1ab7d1427:;
				};
			}
			_iter_next_1ab7cdea2:;
			++it;
			_15817_i++;
			goto _iter_begin_1ab7cdea2;
		}
		_iter_end_1ab7cdea2:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a7c6a92b_checkFnDeclResultDup(_1a7c56c14_sema* _self_, jule::Ptr<_1a7bba8d1_Fn>* _161537_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1a7bbad87_IsVoid((*(_161537_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(*((*(_161537_f))))._field_Result.alloc)._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7d7098:;
		if (it != expr_end) {
			jule::I64 _16227_i = it - expr->begin();
			jule::Ptr<_1a7b69b05_Token> *_162210_v = it;
			{
				if ((_1a7b6c4dc_IsIgnoreIdent((*((*(_162210_v))))._field_Kind) || _1a7b6c7a6_IsAnonIdent((*(*(_162210_v)).alloc)._field_Kind))) {
					goto _iter_next_1ab7d7098;
				};
				{
					auto expr = &((*((*(_161537_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab7d8682:;
					if (it != expr_end) {
						jule::Ptr<_1a7b92127_GenericDecl> *_162711_g = it;
						{
							if (((*(*(_162210_v)).alloc)._field_Kind == (*((*(_162711_g))))._field_Ident)) {
								goto _julec_label_1ab7d9c27;
							};
						}
						_iter_next_1ab7d8682:;
						++it;
						goto _iter_begin_1ab7d8682;
					}
					_iter_end_1ab7d8682:;
				};
				{
					auto expr = &((*((*(_161537_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab7d8a7d:;
					if (it != expr_end) {
						jule::Ptr<_1a7bb8e0c_Param> *_163311_p = it;
						{
							if (((*(*(_162210_v)).alloc)._field_Kind == (*((*(_163311_p))))._field_Ident)) {
								goto _julec_label_1ab7d9c27;
							};
						}
						_iter_next_1ab7d8a7d:;
						++it;
						goto _iter_begin_1ab7d8a7d;
					}
					_iter_end_1ab7d8a7d:;
				};
				_julec_label_1ab7da200:;
				{
					auto expr = &((*((*((*(_161537_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab7da5eb:;
					if (it != expr_end) {
						jule::I64 _16418_j = it - expr->begin();
						jule::Ptr<_1a7b69b05_Token> *_164111_jv = it;
						{
							{
								
								if ((_16418_j >= _16227_i)) {
									_case_begin_1ab7db18a:;
									{
										goto _iter_end_1ab7da5eb;
									}
								}
								else if (((*((*(_164111_jv))))._field_Kind == (*(*(_162210_v)).alloc)._field_Kind)) {
									_case_begin_1ab7db223:;
									{
										goto _julec_label_1ab7d9c27;
									}
								}
								_match_end_1ab7db07a:;
							};
						}
						_iter_next_1ab7da5eb:;
						++it;
						_16418_j++;
						goto _iter_begin_1ab7da5eb;
					}
					_iter_end_1ab7da5eb:;
				};
				goto _iter_next_1ab7d7098;
				_julec_label_1ab7d9c27:;
				_1a7c59b18_pushErr(_self_, (*(_162210_v)), static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_162210_v)).alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
				_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1ab7d7098:;
			++it;
			_16227_i++;
			goto _iter_begin_1ab7d7098;
		}
		_iter_end_1ab7d7098:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a7c6ac6c_checkFnVariadicParam(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bba8d1_Fn>* _166042_f) {
	if (((*((*(_166042_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1a7bb8e0c_Param> _16647_param = (*((*(_166042_f))))._field_Params[((*((*(_166042_f))))._field_Params.len() - 1LL)];;
	if (((*(_16647_param))._field_Variadic && (*_16647_param.alloc)._field_Reference)) {
		_1a7c59b18_pushErr(_self_.ptr(), (*_16647_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic storage cannot be reference", 36)), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1a7c6b025_checkFnDeclPrototype(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bba8d1_Fn>* _167342_f) {
	if (((*((*(_167342_f))))._field_Exceptional && (*((*(_167342_f))))._field_Binded)) {
		_1a7c59b18_pushErr(_self_.ptr(), (*((*(_167342_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded defines cannot be exceptional", 36)), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_167342_f))))._field_Exceptional) {
		if (_1a7bbb3a4_IsEntryPoint((*(_167342_f)).ptr())) {
			_1a7c59b18_pushErr(_self_, (*((*(_167342_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("entry point cannot be exceptional", 33)), jule::Slice<jule::Any>());
		} else if (_1a7bbb63a_IsInit((*(_167342_f)).ptr())) {
			_1a7c59b18_pushErr(_self_, (*((*(_167342_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("initializer function cannot be exceptional", 42)), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1a7c6a299_checkDeclGenerics(_self_, &((*((*(_167342_f))))._field_Generics))))) {
			_case_begin_1ab7e2ec7:;
		}
		else if ((!(_1a7c6a5da_checkFnDeclParamsDup(_self_, _167342_f)))) {
			_case_begin_1ab7e303d:;
		}
		else if ((!(_1a7c6a92b_checkFnDeclResultDup(_self_, _167342_f)))) {
			_case_begin_1ab7e30a4:;
		}
		else if ((!(_1a7c6ac6c_checkFnVariadicParam(_self_, _167342_f)))) {
			_case_begin_1ab7e311a:;
		}
		_match_end_1ab7e126c:;
	};
}



inline jule::Bool _1a7c6b4cb_catchTraitInheritCycle(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bce362_Trait> _169539_t1, jule::Ptr<_1a7bce362_Trait> _169555_t2, _1daed18b7_StrBuilder* _169572_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*_169555_t2.alloc)._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7e56b1:;
		if (it != expr_end) {
			jule::Ptr<_1a7d244a7_TypeSymbol> _169715_i = *it;
			{
				if (((*(_169715_i))._field_Kind == nullptr)) {
					goto _iter_next_1ab7e56b1;
				};
				jule::Ptr<_1a7bce362_Trait> _17018_t3 = _1a7d20c56_Trait((*_169715_i.alloc)._field_Kind.ptr());;
				if ((_169539_t1 == _17018_t3)) {
					_1a7c7125b_pushCycleError(_self_.ptr(), &((*(_169555_t2))._field_Ident), &((*(_17018_t3))._field_Ident), _169572_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1a7c6b4cb_catchTraitInheritCycle(_self_, _169539_t1, _17018_t3, _169572_message)))) {
					_1a7c7125b_pushCycleError(_self_, &((*_169555_t2.alloc)._field_Ident), &((*_17018_t3.alloc)._field_Ident), _169572_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab7e56b1:;
			++it;
			goto _iter_begin_1ab7e56b1;
		}
		_iter_end_1ab7e56b1:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a7c6b81c__checkTraitDeclInherits(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bce362_Trait>* _171445_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_171445_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7e8e78:;
		if (it != expr_end) {
			jule::I64 _17168_i = it - expr->begin();
			jule::Ptr<_1a7d244a7_TypeSymbol> _171615_it = *it;
			{
				if ((!(_1a7c60789_checkType(_self_, &(_171615_it), jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3))))) {
					__jule_func_result=false;
					goto _iter_next_1ab7e8e78;
				};
				jule::Ptr<_1a7bce362_Trait> _17218_t2 = _1a7d20c56_Trait((*(_171615_it))._field_Kind.ptr());;
				if ((_17218_t2 == nullptr)) {
					_1a7c59b18_pushErr(_self_, (*((*_171615_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ cannot implement @, type should be trait", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_171445_t))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*(_171615_it))._field_Kind), &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1ab7e8e78;
				};
				{
					auto expr = &((*((*(_171445_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab7ead04:;
					if (it != expr_end) {
						jule::I64 _17278_j = it - expr->begin();
						jule::Ptr<_1a7d244a7_TypeSymbol> _172711_it2 = *it;
						{
							if ((_17278_j >= _17168_i)) {
								goto _iter_end_1ab7ead04;
							};
							if ((((*(_172711_it2))._field_Kind != nullptr) && _1a7d1c4d3_Equal((*(_171615_it))._field_Kind, (*_172711_it2.alloc)._field_Kind))) {
								_1a7c59b18_pushErr(_self_, (*(*(_171615_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_17218_t2))._field_Ident, &__jule_any_type4); __jule_collection; }));
								__jule_func_result=false;
								goto _iter_end_1ab7ead04;
							};
						}
						_iter_next_1ab7ead04:;
						++it;
						_17278_j++;
						goto _iter_begin_1ab7ead04;
					}
					_iter_end_1ab7ead04:;
				};
				if (((*(_171445_t)) == _17218_t2)) {
					_1a7c59b18_pushErr(_self_, (*(*(_171615_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_171445_t))))._field_Ident, &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
				} else {
					_1daed18b7_StrBuilder _17419_message = static__1daed1bb4_New(64LL);;
					__jule_func_result=(__jule_func_result && _1a7c6b4cb_catchTraitInheritCycle(_self_, (*(_171445_t)), _17218_t2, &(_17419_message)));
					if ((_1daedb43d_Len(&_17419_message) > 0LL)) {
						jule::Str _174410_errMsg = _1daedaea9_Str(&_17419_message);;
						_1daedb1a7_Clear(&_17419_message);
						_1a7c7125b_pushCycleError(_self_, &((*((*(_171445_t))))._field_Ident), &((*(_17218_t2))._field_Ident), &(_17419_message));
						_174410_errMsg+=_1daedaea9_Str(&_17419_message);
						_1a7c59b18_pushErr(_self_, (*(*(_171615_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_174410_errMsg, &__jule_any_type4); __jule_collection; }));
					};
				};
			}
			_iter_next_1ab7e8e78:;
			++it;
			_17168_i++;
			goto _iter_begin_1ab7e8e78;
		}
		_iter_end_1ab7e8e78:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1a7c6bac5_checkTraitDeclInherits(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bce362_Trait>* _175544_t) {
	{
		auto expr = &((*((*(_175544_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7e9781:;
		if (it != expr_end) {
			jule::I64 _17568_i = it - expr->begin();
			jule::Ptr<_1a7d244a7_TypeSymbol> _175615_it = *it;
			{
				jule::Ptr<_1a7bce362_Trait> _17578_t1 = _1a7d20c56_Trait((*(_175615_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_175544_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab805847:;
					if (it != expr_end) {
						jule::I64 _17589_j = it - expr->begin();
						jule::Ptr<_1a7d244a7_TypeSymbol> _175816_it2 = *it;
						{
							if ((_17589_j == _17568_i)) {
								goto _iter_next_1ab805847;
							};
							jule::Ptr<_1a7bce362_Trait> _17629_t2 = _1a7d20c56_Trait((*(_175816_it2))._field_Kind);;
							{
								auto expr = &((*(_17578_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ab8070da:;
								if (it != expr_end) {
									jule::Ptr<_1a7bba8d1_Fn> _176317_t1m = *it;
									{
										jule::Ptr<_1a7bba8d1_Fn> _176410_t2m = _1a7bd0044_FindMethod(_17629_t2.ptr(), (*(_176317_t1m))._field_Ident);;
										if ((_176410_t2m == nullptr)) {
											goto _iter_next_1ab8070da;
										};
										jule::Ptr<_1a7bbd8b2_FnIns> _17686_t1f = _1a7c64bab_getTraitCheckFnKind(_self_, &(_176317_t1m));;
										jule::Ptr<_1a7bbd8b2_FnIns> _17696_t2f = _1a7c64bab_getTraitCheckFnKind(_self_, &(_176410_t2m));;
										if ((!(_1a7bbe85d_equalTrait(_17686_t1f, &(_17696_t2f))))) {
											_1a7c59b18_pushErr(_self_, (*((*_175615_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_175544_t))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_17629_t2.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1a7bc0793_GetKindStr(_17686_t1f, true), &__jule_any_type4); (*it++) = jule::Any(_1a7bc0793_GetKindStr(_17696_t2f.ptr(), true), &__jule_any_type4); __jule_collection; }));
											return;;
										};
									}
									_iter_next_1ab8070da:;
									++it;
									goto _iter_begin_1ab8070da;
								}
								_iter_end_1ab8070da:;
							};
						}
						_iter_next_1ab805847:;
						++it;
						_17589_j++;
						goto _iter_begin_1ab805847;
					}
					_iter_end_1ab805847:;
				};
			}
			_iter_next_1ab7e9781:;
			++it;
			_17568_i++;
			goto _iter_begin_1ab7e9781;
		}
		_iter_end_1ab7e9781:;
	};
}



inline void _1a7c6bd7d_checkTraitDeclMethod(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bba8d1_Fn>* _178042_f) {
	if (_1a7b6c4dc_IsIgnoreIdent((*((*(_178042_f))))._field_Ident)) {
		_1a7c59b18_pushErr(_self_.ptr(), (*((*(_178042_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1a7b6c7a6_IsAnonIdent((*((*(_178042_f))))._field_Ident)) {
		_1a7c59b18_pushErr(_self_.ptr(), (*((*(_178042_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	(*((*(_178042_f))))._field_sema=_self_;
	_1a7c6b025_checkFnDeclPrototype(_self_, _178042_f);
	jule::Ptr<_1a7bbd8b2_FnIns> _17887_ins = _1a7bbc174_instance((*(_178042_f)));;
	_1a7c66509_reloadFnInsTypes(_self_, _17887_ins);
	(*(_17887_ins))._field_reloaded=true;
	_1a7bbc482_appendInstance((*(_178042_f)).ptr(), &(_17887_ins));
}



inline void _1a7c6c136_checkTraitDeclMethods(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bce362_Trait>* _179443_t) {
	{
		auto expr = &((*((*(_179443_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab80e752:;
		if (it != expr_end) {
			jule::I64 _17958_i = it - expr->begin();
			jule::Ptr<_1a7bba8d1_Fn> _179515_f = *it;
			{
				_1a7c6bd7d_checkTraitDeclMethod(_self_, &(_179515_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1a7bd06c6_findMethodInherit((*(_179443_t)).ptr(), &((*(_179515_f))._field_Ident)) != nullptr)) {
					_1a7c59b18_pushErr(_self_, (*_179515_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_179515_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
					goto _iter_next_1ab80e752;
				};
				_julec_label_1ab8125ce:;
				{
					auto expr = &((*((*(_179443_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab812a0d:;
					if (it != expr_end) {
						jule::I64 _18118_j = it - expr->begin();
						jule::Ptr<_1a7bba8d1_Fn> _181111_jf = *it;
						{
							{
								
								if ((_18118_j >= _17958_i)) {
									_case_begin_1ab81359c:;
									{
										goto _iter_end_1ab812a0d;
									}
								}
								else if (((*_179515_f.alloc)._field_Ident == (*(_181111_jf))._field_Ident)) {
									_case_begin_1ab813635:;
									{
										_1a7c59b18_pushErr(_self_, (*_179515_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_179515_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
										_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_end_1ab812a0d;
									}
								}
								_match_end_1ab81348c:;
							};
						}
						_iter_next_1ab812a0d:;
						++it;
						_18118_j++;
						goto _iter_begin_1ab812a0d;
					}
					_iter_end_1ab812a0d:;
				};
			}
			_iter_next_1ab80e752:;
			++it;
			_17958_i++;
			goto _iter_begin_1ab80e752;
		}
		_iter_end_1ab80e752:;
	};
}



inline void _1a7c6c3de_checkTraitDecl(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bce362_Trait>* _183036_t) {
	if (_1a7b6c4dc_IsIgnoreIdent((*((*(_183036_t))))._field_Ident)) {
		_1a7c59b18_pushErr(_self_.ptr(), (*((*(_183036_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1a7c5a82d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_183036_t))), &((*((*(_183036_t))))._field_Ident), false)) {
		_1a7c59b18_pushErr(_self_, (*((*(_183036_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_183036_t))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1a7c6bac5_checkTraitDeclInherits(_self_, _183036_t);
	_1a7c6c136_checkTraitDeclMethods(_self_, _183036_t);
}



inline jule::Bool _1a7c6c675_checkTraitDecls(jule::Ptr<_1a7c56c14_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab81885a:;
		if (it != expr_end) {
			jule::Ptr<_1a7bce362_Trait> _184415_t = *it;
			{
				_1a7c6c3de_checkTraitDecl(_self_, &(_184415_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab81885a:;
			++it;
			goto _iter_begin_1ab81885a;
		}
		_iter_end_1ab81885a:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a7c6ca71_checkTraitImplMethods(_1a7c56c14_sema* _self_, jule::Ptr<_1a7bce362_Trait>* _185442_base, jule::Ptr<_1a7c0e1a5_Impl>* _185457_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_185457_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab81a340:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> *_185610_f = it;
			{
				if ((_1a7bd0044_FindMethod((*(_185442_base)).ptr(), (*((*(_185610_f))))._field_Ident) == nullptr)) {
					_1a7c59b18_pushErr(_self_, (*(*(_185610_f)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: trait @ has no define @", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_185442_base))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*(*(_185610_f)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1ab81a340:;
			++it;
			goto _iter_begin_1ab81a340;
		}
		_iter_end_1ab81a340:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a7c6ce6c_implToStruct(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba5ca6_Struct>* _186534_dest, jule::Ptr<_1a7c0e1a5_Impl>* _186554_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_186554_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab81cbb1:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _186915_f = *it;
			{
				if (((_1a7ba6955_FindMethod((*(_186534_dest)).ptr(), (*(_186915_f))._field_Ident, (*_186915_f.alloc)._field_Statically) != nullptr) || (_1a7ba70d7_FindField((*(_186534_dest)).ptr(), (*_186915_f.alloc)._field_Ident) != nullptr))) {
					_1a7c59b18_pushErr(_self_.ptr(), (*_186915_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_186534_dest))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_186915_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1ab81cbb1;
				};
				if ((((*((*(_186534_dest))))._field_Generics.len() > 0LL) && ((*_186915_f.alloc)._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_186915_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab820c4c:;
						if (it != expr_end) {
							jule::Ptr<_1a7b92127_GenericDecl> _187712_fg = *it;
							{
								{
									auto expr = &((*((*(_186534_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1ab8216a9:;
									if (it != expr_end) {
										jule::Ptr<_1a7b92127_GenericDecl> _187813_dg = *it;
										{
											if (((*(_187712_fg))._field_Ident == (*(_187813_dg))._field_Ident)) {
												_1a7c59b18_pushErr(_self_, (*_187712_fg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods cannot have same generic identifier with owner same time", 64)), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1ab8216a9:;
										++it;
										goto _iter_begin_1ab8216a9;
									}
									_iter_end_1ab8216a9:;
								};
							}
							_iter_next_1ab820c4c:;
							++it;
							goto _iter_begin_1ab820c4c;
						}
						_iter_end_1ab820c4c:;
					};
				};
				_1a7c5ab91_checkDirectives(_self_, &((*_186915_f.alloc)._field_Directives), jule::Any(_186915_f, &__jule_any_type26));
				(*_186915_f.alloc)._field_sema=_self_;
				(*_186915_f.alloc)._field_Owner=(*(_186534_dest));
				{ jule::Slice<jule::Ptr<_1a7bba8d1_Fn>> &__jule_push_dest = (*((*(_186534_dest))))._field_Methods; __jule_push_dest.push(_186915_f); };
			}
			_iter_next_1ab81cbb1:;
			++it;
			goto _iter_begin_1ab81cbb1;
		}
		_iter_end_1ab81cbb1:;
	};
	{
		auto expr = &((*((*(_186554_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab81d09b:;
		if (it != expr_end) {
			jule::Ptr<_1a7c7b178_Var> _189415_v = *it;
			{
				;
				if (((_1a7ba6955_FindMethod((*(_186534_dest)).ptr(), (*(_189415_v))._field_Ident, true) != nullptr) || (_1a7ba6c96_FindStatic((*(_186534_dest)).ptr(), (*_189415_v.alloc)._field_Ident) != nullptr))) {
					_1a7c59b18_pushErr(_self_, (*_189415_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_186534_dest))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_189415_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1ab81d09b;
				};
				{ jule::Slice<jule::Ptr<_1a7c7b178_Var>> &__jule_push_dest = (*((*(_186534_dest))))._field_Statics; __jule_push_dest.push(_189415_v); };
			}
			_iter_next_1ab81d09b:;
			++it;
			goto _iter_begin_1ab81d09b;
		}
		_iter_end_1ab81d09b:;
	};
	return __jule_func_result;;
}



inline void _1a7c6d225_implTrait(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7c0e1a5_Impl>* _190731_decl) {
	jule::Ptr<_1a7d1bc96_TypeKind> _19087_base_t = _1a7c61878_selectType(_self_, &((*((*(_190731_decl))))._field_Base));;
	if ((_19087_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1a7bce362_Trait> _19127_base = _1a7d20c56_Trait(_19087_base_t.ptr());;
	if ((_19127_base == nullptr)) {
		_1a7c59b18_pushErr(_self_, (*((*((*(_190731_decl))))._field_Base))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid base type for impl: @", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str(_19087_base_t.ptr()), &__jule_any_type4); __jule_collection; }));
		_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected trait, use a trait", 27)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7d1bc96_TypeKind> _19197_destT = _1a7c61878_selectType(_self_, &((*((*(_190731_decl))))._field_Dest));;
	if ((_19197_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a7ba8b11_StructIns> _19237_destS = _1a7d209c0_Struct(_19197_destT.ptr());;
	if ((_19237_destS == nullptr)) {
		_1a7c59b18_pushErr(_self_, (*((*((*(_190731_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str(_19197_destT.ptr()), &__jule_any_type4); __jule_collection; }));
		_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7ba5ca6_Struct> _19307_dest = (*(_19237_destS))._field_Decl;;
	if ((_1a7b70a73_Dir((*((*(_19307_dest))._field_Token))._field_File.ptr()) != _1a7b70a73_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1a7c59b18_pushErr(_self_, (*(*((*(_190731_decl))))._field_Dest.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	_1a7c7940c_pushImplemented(_19127_base, &(_19307_dest));
	_1a7c796e8_pushImplements(&(_19307_dest), _19127_base);
	if (((*((*(_190731_decl))))._field_Statics.len() > 0LL)) {
		_1a7c59b18_pushErr(_self_, (*((*((*(_190731_decl))))._field_Statics[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot implement static field", 51)), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1a7c6ca71_checkTraitImplMethods(_self_, &(_19127_base), _190731_decl)))) {
			_case_begin_1ab83649e:;
		}
		else if ((!(_1a7c6ce6c_implToStruct(_self_, &(_19307_dest), _190731_decl)))) {
			_case_begin_1ab836515:;
		}
		_match_end_1ab8354e2:;
	};
}



inline void _1a7c6d4cd_implStruct(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7c0e1a5_Impl>* _195032_decl) {
	jule::Ptr<_1a7d1bc96_TypeKind> _19517_destT = _1a7c61878_selectType(_self_, &((*((*(_195032_decl))))._field_Dest));;
	if ((_19517_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a7ba8b11_StructIns> _19557_destS = _1a7d209c0_Struct(_19517_destT.ptr());;
	if ((_19557_destS == nullptr)) {
		_1a7c59b18_pushErr(_self_, (*((*((*(_195032_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str(_19517_destT.ptr()), &__jule_any_type4); __jule_collection; }));
		_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7ba5ca6_Struct> _19627_dest = (*(_19557_destS))._field_Decl;;
	if ((_1a7b70a73_Dir((*((*(_19627_dest))._field_Token))._field_File.ptr()) != _1a7b70a73_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1a7c59b18_pushErr(_self_, (*(*((*(_195032_decl))))._field_Dest.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1a7c6ce6c_implToStruct(_self_, &(_19627_dest), _195032_decl)))) {
			_case_begin_1ab83c31d:;
		}
		_match_end_1ab83a8d2:;
	};
}



inline void _1a7c6d786_implImpl(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7c0e1a5_Impl>* _197430_decl) {
	{
		
		if (_1a7c0e5a1_IsTraitImpl((*(_197430_decl)).ptr())) {
			_case_begin_1ab83cdac:;
			{
				_1a7c6d225_implTrait(_self_, _197430_decl);
			}
		}
		else if (_1a7c0e837_IsStructImpl((*(_197430_decl)).ptr())) {
			_case_begin_1ab83ce56:;
			{
				_1a7c6d4cd_implStruct(_self_, _197430_decl);
			}
		}
		_match_end_1ab83cc8b:;
	};
}



inline void _1a7c6dae9_checkVarDecl(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7c7b178_Var>* _198534_decl, jule::Trait _198550_l) {
	if (_1a7b6c4dc_IsIgnoreIdent((*((*(_198534_decl))))._field_Ident)) {
		_1a7c59b18_pushErr(_self_.ptr(), (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_1a7c7b81b_IsTypeInferred((*(_198534_decl)).ptr())) {
		if ((!(_1a7c7b585_IsInitialized((*(_198534_decl)).ptr())))) {
			_1a7c59b18_pushErr(_self_, (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type inferred declarations should have a initializer expression", 63)), jule::Slice<jule::Any>());
		};
	} else {
		jule::Ptr<_1a7bc1a4c_ReferenceStack> _19958_refers = static_cast<jule::Ptr<_1a7bc1a4c_ReferenceStack>>(nullptr);;
		{
			auto &_match_expr{ _198550_l };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3)) {
				_case_begin_1ab84207b:;
				{
					_19958_refers=(*((*(_198534_decl))))._field_Refers;
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0)) {
				_case_begin_1ab842554:;
				{
					_19958_refers=_1a7c1e616_getOwnerRefers(_198550_l.cast_ptr<_1a7c1ac1c_scopeChecker>((jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0));
				}
			}
			else {
				_case_begin_1ab842169:;
				{
					__jule_panic_s(jule::Str::lit("sema: checkVarDecl: unimplemented referencer", 44) + jule::Str("\nlocation: std/jule/sema/sema.jule:2002:5"));;
				}
			}
			_match_end_1ab842103:;
		};
		(*((*((*(_198534_decl))))._field_Kind))._field_Kind=_1a7c60c40_checkTypeRefers(_self_, &((*(*((*(_198534_decl))))._field_Kind.alloc)._field_Decl), _198550_l, _19958_refers);
	};
	if ((*((*(_198534_decl))))._field_Reference) {
		if ((*((*(_198534_decl))))._field_Constant) {
			_1a7c59b18_pushErr(_self_, (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot be constant", 29)), jule::Slice<jule::Any>());
		};
		if ((*((*(_198534_decl))))._field_Statically) {
			_1a7c59b18_pushErr(_self_, (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables cannot be reference", 36)), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1a7c7b585_IsInitialized((*(_198534_decl)).ptr())))) {
		if ((*((*(_198534_decl))))._field_Constant) {
			_1a7c59b18_pushErr(_self_, (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for constant variable initialization", 55)), jule::Slice<jule::Any>());
		};
		if ((*((*(_198534_decl))))._field_Statically) {
			_1a7c59b18_pushErr(_self_, (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables must be have initialize expression", 51)), jule::Slice<jule::Any>());
		};
		if ((*((*(_198534_decl))))._field_Reference) {
			_1a7c59b18_pushErr(_self_, (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("reference variables must be have lvalue initialize expression", 61)), jule::Slice<jule::Any>());
		};
	};
}



inline void _1a7c6dda2_checkGlobalVarDecl(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7c7b178_Var>* _203140_decl) {
	if (_1a7c5a82d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_203140_decl))), &((*((*(_203140_decl))))._field_Ident), (*((*(_203140_decl))))._field_Binded)) {
		_1a7c59b18_pushErr(_self_, (*((*(_203140_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_203140_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_203140_decl))))._field_Binded && (*((*(_203140_decl))))._field_Constant)) {
		_1a7c59b18_pushErr(_self_, (*((*(_203140_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot be constant", 35)), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_203140_decl))))._field_Binded)) && (!((*((*(_203140_decl))))._field_Constant))) && (!((*((*(_203140_decl))))._field_Statically)))) {
		_1a7c59b18_pushErr(_self_, (*((*(_203140_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("global variables must be static", 31)), jule::Slice<jule::Any>());
		_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"static\" keyword to define", 30)), jule::Slice<jule::Any>());
	};
	_1a7c5ab91_checkDirectives(_self_, &((*((*(_203140_decl))))._field_Directives), jule::Any((*(_203140_decl)), &__jule_any_type8));
	_1a7c6dae9_checkVarDecl(_self_, _203140_decl, jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3));
}



inline jule::Bool _1a7c6e138_checkGlobalDecls(jule::Ptr<_1a7c56c14_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab84e231:;
		if (it != expr_end) {
			jule::Ptr<_1a7c7b178_Var> _204915_decl = *it;
			{
				_1a7c6dda2_checkGlobalVarDecl(_self_, &(_204915_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab84e231:;
			++it;
			goto _iter_begin_1ab84e231;
		}
		_iter_end_1ab84e231:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a7c6e534_checkStructTraitImpl(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba5ca6_Struct>* _205942_strct, jule::Ptr<_1a7bce362_Trait>* _205963_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_205963_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab850b17:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _206015_tf = *it;
			{
				jule::Bool _20618_exist = false;;
				jule::Ptr<_1a7bba8d1_Fn> _20628_sf = _1a7ba6955_FindMethod((*(_205942_strct)).ptr(), (*(_206015_tf))._field_Ident, (*_206015_tf.alloc)._field_Statically);;
				jule::Ptr<_1a7bbd8b2_FnIns> _20634_tfK = _1a7c64bab_getTraitCheckFnKind(_self_, &(_206015_tf));;
				if ((_20628_sf != nullptr)) {
					jule::Ptr<_1a7bbd8b2_FnIns> _20659_sfK = _1a7c64bab_getTraitCheckFnKind(_self_, &(_20628_sf));;
					if ((_20659_sfK != nullptr)) {
						_20618_exist=_1a7bbe85d_equalTrait(_20634_tfK, &(_20659_sfK));
					};
				};
				if (_20618_exist) {
					jule::Ptr<_1a7b7e4cc_Directive> _20715_d = _1a7d1351d_findDirective(&((*_20628_sf.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
					if ((_20715_d != nullptr)) {
						_1a7c59b18_pushErr(_self_, (*_20715_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot have deprecated code", 49)), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1a7c59b18_pushErr(_self_, (*((*(_205942_strct))))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ derived but not implemented define @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_205963_trt))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1a7bc0793_GetKindStr(_20634_tfK, true), &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1ab850b17:;
			++it;
			goto _iter_begin_1ab850b17;
		}
		_iter_end_1ab850b17:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a7c6e875_checkStructImpls(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba5ca6_Struct>* _208538_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_208538_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab85702a:;
		if (it != expr_end) {
			jule::Ptr<_1a7bce362_Trait> _208715_trt = *it;
			{
				__jule_func_result=(_1a7c6e534_checkStructTraitImpl(_self_, _208538_s, &(_208715_trt)) && __jule_func_result);
			}
			_iter_next_1ab85702a:;
			++it;
			goto _iter_begin_1ab85702a;
		}
		_iter_end_1ab85702a:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a7c6ebb6_checkStructFields(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba5ca6_Struct>* _209339_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_209339_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8584c1:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba2d80_Field> _209515_f = *it;
			{
				(*(_209515_f))._field_Owner=(*(_209339_st));
				{
					auto expr = &((*((*(_209339_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab8591e7:;
					if (it != expr_end) {
						jule::Ptr<_1a7ba2d80_Field> _209711_cf = *it;
						{
							if ((_209515_f == _209711_cf)) {
								goto _iter_end_1ab8591e7;
							} else if (((*_209515_f.alloc)._field_Ident == (*(_209711_cf))._field_Ident)) {
								_1a7c59b18_pushErr(_self_.ptr(), (*_209515_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_209515_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
								_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1ab8591e7:;
						++it;
						goto _iter_begin_1ab8591e7;
					}
					_iter_end_1ab8591e7:;
				};
			}
			_iter_next_1ab8584c1:;
			++it;
			goto _iter_begin_1ab8584c1;
		}
		_iter_end_1ab8584c1:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1a7c6ee6e_checkStructDecl(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba5ca6_Struct>* _211037_s) {
	if (_1a7b6c4dc_IsIgnoreIdent((*((*(_211037_s))))._field_Ident)) {
		_1a7c59b18_pushErr(_self_.ptr(), (*((*(_211037_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1a7c5a82d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_211037_s))), &((*((*(_211037_s))))._field_Ident), (*((*(_211037_s))))._field_Binded)) {
		_1a7c59b18_pushErr(_self_, (*((*(_211037_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_211037_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1a7c5ab91_checkDirectives(_self_, &((*((*(_211037_s))))._field_Directives), jule::Any((*(_211037_s)), &__jule_any_type23));
	{
		
		if ((!(_1a7c6a299_checkDeclGenerics(_self_, &((*((*(_211037_s))))._field_Generics))))) {
			_case_begin_1ab85e5c6:;
		}
		else if ((!(_1a7c6ebb6_checkStructFields(_self_, _211037_s)))) {
			_case_begin_1ab85e63c:;
		}
		else if ((!(_1a7c6e875_checkStructImpls(_self_, _211037_s)))) {
			_case_begin_1ab85e6a3:;
		}
		else if ((!(_1a7c70aa7_checkFuncDeclsBy(_self_, &((*((*(_211037_s))))._field_Methods))))) {
			_case_begin_1ab85e719:;
		}
		_match_end_1ab85e494:;
	};
}



inline jule::Bool _1a7c70205_checkStructDecls(jule::Ptr<_1a7c56c14_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab861a6d:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba5ca6_Struct> _213015_s = *it;
			{
				_1a7c6ee6e_checkStructDecl(_self_, &(_213015_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab861a6d:;
			++it;
			goto _iter_begin_1ab861a6d;
		}
		_iter_end_1ab861a6d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a7c704ad_checkAnonFuncDecl(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bba8d1_Fn>* _214039_f) {
	(*((*(_214039_f))))._field_sema=_self_;
	_1a7c6b025_checkFnDeclPrototype(_self_, _214039_f);
}



inline void _1a7c70766_checkFuncDecl(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bba8d1_Fn>* _214535_f) {
	if (_1a7b6c4dc_IsIgnoreIdent((*((*(_214535_f))))._field_Ident)) {
		_1a7c59b18_pushErr(_self_.ptr(), (*((*(_214535_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1a7bbb8c1_IsAnon((*(_214535_f)).ptr())) {
		_1a7c59b18_pushErr(_self_.ptr(), (*((*(_214535_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	_1a7c5ab91_checkDirectives(_self_, &((*((*(_214535_f))))._field_Directives), jule::Any((*(_214535_f)), &__jule_any_type26));
	_1a7c704ad_checkAnonFuncDecl(_self_, _214535_f);
	if ((((*((*(_214535_f))))._field_Owner == nullptr) && _1a7c5a82d_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_214535_f))), &((*((*(_214535_f))))._field_Ident), (*((*(_214535_f))))._field_Binded))) {
		if ((*((*(_214535_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1a7bba8d1_Fn> _21575_init = _1a7c582cb_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_21575_init != nullptr)) {
				return;;
			};
		};
		_1a7c59b18_pushErr(_self_, (*((*(_214535_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_214535_f))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a7c70aa7_checkFuncDeclsBy(jule::Ptr<_1a7c56c14_sema> _self_, jule::Slice<jule::Ptr<_1a7bba8d1_Fn>>* _216738_funcs) {
	{
		auto expr = _216738_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab86947c:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _216815_f = *it;
			{
				_1a7c70766_checkFuncDecl(_self_, &(_216815_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1ab86947c:;
			++it;
			goto _iter_begin_1ab86947c;
		}
		_iter_end_1ab86947c:;
	};
	return true;;
}



inline jule::Bool _1a7c70d3d_checkFuncDecls(jule::Ptr<_1a7c56c14_sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1a7c70aa7_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1a7c7125b_pushCycleError(_1a7c56c14_sema* _self_, jule::Str* _218327_st1, jule::Str* _218338_st2, _1daed18b7_StrBuilder* _218353_message) {
	;
	jule::Str _21853_refersTo = _1d9145027_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_218327_st1)), &__jule_any_type4); (*it++) = jule::Any((*(_218338_st2)), &__jule_any_type4); __jule_collection; }));;
	jule::Str _21863_m = _1daedaea9_Str(_218353_message);;
	_1daeda6b2_WriteStr(_218353_message, _1daebc5c8_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1daeda6b2_WriteStr(_218353_message, _21853_refersTo);
	_1daeda96a_WriteByte(_218353_message, '\n');
	_1daeda6b2_WriteStr(_218353_message, _21863_m);
}



inline void _1a7c71910_checkPackageDecls(jule::Ptr<_1a7c56c14_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab871264:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _221015_f = *it;
			{
				_1a7c596ea_setCurrentFile(_self_.ptr(), _221015_f);
				if ((!(_1a7c681ba_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1ab871264:;
			++it;
			goto _iter_begin_1ab871264;
		}
		_iter_end_1ab871264:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8716e8:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _221715_f = *it;
			{
				_1a7c596ea_setCurrentFile(_self_, _221715_f);
				if ((!(_1a7c6c675_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1ab8716e8:;
			++it;
			goto _iter_begin_1ab8716e8;
		}
		_iter_end_1ab8716e8:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab87270a:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _222415_f = *it;
			{
				_1a7c596ea_setCurrentFile(_self_, _222415_f);
				if ((!(_1a7c6e138_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1ab87270a:;
			++it;
			goto _iter_begin_1ab87270a;
		}
		_iter_end_1ab87270a:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab873761:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _223115_f = *it;
			{
				_1a7c596ea_setCurrentFile(_self_, _223115_f);
				{
					
					if ((!(_1a7c70d3d_checkFuncDecls(_self_)))) {
						_case_begin_1ab874db1:;
					}
					else if ((!(_1a7c70205_checkStructDecls(_self_)))) {
						_case_begin_1ab874e5a:;
					}
					else {
						_case_begin_1ab87480b:;
						{
							goto _iter_next_1ab873761;
						}
					}
					_match_end_1ab874d17:;
				};
				return;;
			}
			_iter_next_1ab873761:;
			++it;
			goto _iter_begin_1ab873761;
		}
		_iter_end_1ab873761:;
	};
}



inline void _1a7c71c73_checkDataForTypeInference(_1a7c56c14_sema* _self_, jule::Ptr<_1a7cd41ae_Data>* _224342_d, jule::Ptr<_1a7b69b05_Token>* _224353_err_token) {
	{
		
		if (_1a7cd45cc_IsNil((*(_224342_d)).ptr())) {
			_case_begin_1ab87605a:;
			{
				_1a7c59b18_pushErr(_self_, (*(_224353_err_token)), static_cast<jule::Str>(jule::Str::lit("nil is cannot use with type inferred definitions", 48)), jule::Slice<jule::Any>());
			}
		}
		else if (_1a7cd4863_IsVoid((*(_224342_d)).ptr())) {
			_case_begin_1ab876104:;
			{
				_1a7c59b18_pushErr(_self_, (*(_224353_err_token)), static_cast<jule::Str>(jule::Str::lit("void data is cannot use for type inferred definitions", 53)), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_224342_d))))._field_Kind))._field_Variadic) {
			_case_begin_1ab87616a:;
			{
				_1a7c59b18_pushErr(_self_, (*(_224353_err_token)), static_cast<jule::Str>(jule::Str::lit("invalid expression for type inference", 37)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab875e28:;
	};
}



inline void _1a7c7202b_checkVarValue(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7c7b178_Var>* _225535_v) {
	if (_1a7c7b81b_IsTypeInferred((*(_225535_v)).ptr())) {
		(*((*(_225535_v))))._field_Kind=jule::new_ptr<_1a7d244a7_TypeSymbol>(_1a7d244a7_TypeSymbol{._field_Decl=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Kind=(*((*((*((*(_225535_v))))._field_Value))._field_Data))._field_Kind});
		_1a7c71c73_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_225535_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_225535_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_1a7c6741c_checkValidityForInitExpr(_self_, (*((*(_225535_v))))._field_Mutable, (*((*(_225535_v))))._field_Reference, &((*((*((*(_225535_v))))._field_Kind))._field_Kind), &((*(*((*(_225535_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_225535_v))))._field_Value))._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_1a7d2b6ce_Arr> _22688_arr = _1a7d2021c_Arr((*((*((*(_225535_v))))._field_Kind))._field_Kind.ptr());;
		if ((_22688_arr != nullptr)) {
			if ((*_22688_arr.alloc)._field_Auto) {
				jule::Ptr<_1a7d2b6ce_Arr> _22716_dataArr = _1a7d2021c_Arr((*((*((*((*(_225535_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_22716_dataArr != nullptr)) {
					(*_22688_arr.alloc)._field_N=(*_22716_dataArr.alloc)._field_N;
				};
			};
		};
		if (_1a7c62b87_checkAssignType(_self_, (*((*(_225535_v))))._field_Reference, &((*(*((*(_225535_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_225535_v))))._field_Value.alloc)._field_Data), (*((*(*((*(_225535_v))))._field_Value.alloc)._field_Expr))._field_Token, (*((*(_225535_v))))._field_Refers)) {
			_1a7c6741c_checkValidityForInitExpr(_self_, (*((*(_225535_v))))._field_Mutable, (*((*(_225535_v))))._field_Reference, &((*(*((*(_225535_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_225535_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_225535_v))))._field_Value))._field_Expr.alloc)._field_Token));
		};
	};
	if (((*((*(_225535_v))))._field_Reference && (!(_1a7d38ba3_isValidForRef(&((*((*((*(_225535_v))))._field_Kind))._field_Kind)))))) {
		_1a7c59b18_pushErr(_self_.ptr(), (*((*(_225535_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot points to type @", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(*((*(_225535_v))))._field_Kind.alloc)._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
	};
	if ((*((*(_225535_v))))._field_Constant) {
		if (((!(_1a7cd4ae9_IsConst((*((*((*(_225535_v))))._field_Value))._field_Data.ptr()))) && (!(_1a7d21509_comptime((*(*((*((*(_225535_v))))._field_Value))._field_Data.alloc)._field_Kind.ptr()))))) {
			_1a7c59b18_pushErr(_self_, (*((*(*((*(_225535_v))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_225535_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*((*((*(_225535_v))))._field_Value))._field_Data.alloc)._field_untyped=false;
	};
	if ((_1a7d21273_Tup((*((*((*(_225535_v))))._field_Kind))._field_Kind) != nullptr)) {
		(*(*((*(_225535_v))))._field_Kind.alloc)._field_Kind=nullptr;
	};
}



inline void _1a7c7238e_evalVarValue(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7c7b178_Var>* _230834_decl, jule::Trait _230850_l) {
	if ((!(_1a7c7b585_IsInitialized((*(_230834_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1a7cd5dd6_eval> _23137_eval = static_cast<jule::Ptr<_1a7cd5dd6_eval>>(nullptr);;
	if (((*((*(_230834_decl))))._field_Kind != nullptr)) {
		_23137_eval=_1a7c61d2e_evalpd(_self_, _230850_l, (*(*((*(_230834_decl))))._field_Kind.alloc)._field_Kind, (*(_230834_decl)));
	} else {
		_23137_eval=_1a7c61d2e_evalpd(_self_, _230850_l, nullptr, (*(_230834_decl)));
	};
	(*(_23137_eval))._field_immutable=(!((*((*(_230834_decl))))._field_Mutable));
	(*((*((*(_230834_decl))))._field_Value))._field_Data=_1a7d09aa8_evalExpr(_23137_eval, (*(*((*(_230834_decl))))._field_Value.alloc)._field_Expr);
}



inline void _1a7c72702_checkVar(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7c7b178_Var>* _232530_decl, jule::Trait _232546_l) {
	_1a7c7238e_evalVarValue(_self_, _232530_decl, _232546_l);
	if (((*((*((*(_232530_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1a7c7202b_checkVarValue(_self_, _232530_decl);
}



inline void _1a7c72900_checkGlobals(jule::Ptr<_1a7c56c14_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab88d4b2:;
		if (it != expr_end) {
			jule::Ptr<_1a7c7b178_Var> _233515_decl = *it;
			{
				if ((*(_233515_decl))._field_Binded) {
					goto _iter_next_1ab88d4b2;
				};
				if (((_1a7c7b585_IsInitialized(_233515_decl) && ((*((*_233515_decl.alloc)._field_Value))._field_Data == nullptr)) || (_1a7c7b81b_IsTypeInferred(_233515_decl) && ((*((*_233515_decl.alloc)._field_Kind))._field_Kind == nullptr)))) {
					_1a7c72702_checkVar(_self_, &(_233515_decl), jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3));
				};
			}
			_iter_next_1ab88d4b2:;
			++it;
			goto _iter_begin_1ab88d4b2;
		}
		_iter_end_1ab88d4b2:;
	};
}



inline jule::Ptr<_1a7bbd8b2_FnIns> _1a7c72ceb_readyToCheckFn(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _234936_s, jule::Ptr<_1a7bba8d1_Fn>* _234956_f) {
	jule::Ptr<_1a7bbd8b2_FnIns> _23507_ins = _1a7bbc174_instance((*(_234956_f)));;
	if (((*((*(_234956_f))))._field_Instances.len() != 0LL)) {
		return _23507_ins;;
	};
	(*(_23507_ins))._field_Owner=(*(_234936_s));
	_1a7bbc482_appendInstance((*(_234956_f)).ptr(), &(_23507_ins));
	(*_23507_ins.alloc)._field_reloaded=true;
	if (_1a7c66509_reloadFnInsTypes(_self_, _23507_ins)) {
		return _23507_ins;;
	};
	return nullptr;;
}



inline __jule_tuple_bool__jule_tuple_bool _1a7c731e7_checkGenericFn(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _236536_f, jule::Ptr<_1a7b69b05_Token>* _236552_et) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=_1a7c66509_reloadFnInsTypes(_self_, (*(_236536_f)));
	(*((*(_236536_f))))._field_reloaded=true;
	if ((!(__jule_func_result.__jule_result_arg0))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7bbd8b2_FnIns> _23717_existInstance = _1a7bbc482_appendInstance((*((*(_236536_f))))._field_Decl.ptr(), _236536_f);;
	if ((!(_1a7c65162_checkConstraintsFn(_self_, _236536_f, _236552_et, _23717_existInstance)))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	if ((_23717_existInstance != nullptr)) {
		(*(_236536_f))=_23717_existInstance;
		__jule_func_result.__jule_result_arg1=true;
	} else {
		_1a7c75c55_checkFnInsCaller(_self_, _236536_f, (*(_236552_et)));
	};
	__jule_func_result.__jule_result_arg0=true;
	return __jule_func_result;;
}



inline void _1a7c7355a_checkTypeMethod(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _238837_s, jule::Ptr<_1a7bba8d1_Fn>* _238857_f) {
	if (((*((*(_238857_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1a7bbd8b2_FnIns> _23937_ins = (*((*(_238857_f))))._field_Instances[0LL];;
	if (((*((*(_23937_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1a7c7600d_checkFnIns(_self_, &(_23937_ins));
}



inline jule::Ptr<_1a7bbd8b2_FnIns> _1a7c73a11_checkStructInsOp(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _240138_s, jule::Ptr<_1a7bba8d1_Fn>* _240158_f, jule::Fn<jule::Bool,jule::Ptr<_1a7bba8d1_Fn>> _240166_p) {
	if (((((*(_240158_f)) == nullptr) || ((*((*(_240158_f))))._field_Generics.len() > 0LL)) || (!(_240166_p((*(_240158_f))))))) {
		return nullptr;;
	};
	return (*((*(_240158_f))))._field_Instances[0LL];;
}



inline jule::Bool _1a7c73e0c_checkStructEnv(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _241136_s, jule::Ptr<_1a7b69b05_Token> _241155_errorToken) {
	jule::Bool __jule_func_result = false;
	_1a7d2e193_typeChecker _24127_tc = _1a7d2e193_typeChecker{._field_s=(*((*((*(_241136_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait((*(*((*(_241136_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3), ._field_lookup=jule::Trait((*(*((*(_241136_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3), ._field_referencer=jule::new_ptr<_1a7d2d1a3_referencer>(_1a7d2d1a3_referencer{._field_ident=(*(*((*(_241136_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_241136_s))))._field_Decl, &__jule_any_type23), ._field_refs=nullptr}), ._field_refers=(*((*(_241136_s))))._field_Refers, ._field_errorToken=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a7d1aea4_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr), ._field_inscatch=false};;
	if (((*((*(_241136_s))))._field_Generics.len() > 0LL)) {
		_24127_tc._field_useGenerics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>::alloc(0LL, (*((*(_241136_s))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7d1aea4_TypeAlias>(nullptr); __jule_collection; });
		{
			auto expr = &((*((*(_241136_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab89d15e:;
			if (it != expr_end) {
				jule::I64 _24259_i = it - expr->begin();
				jule::Ptr<_1a7d1a3b0_InsGeneric> _242516_g = *it;
				{
					jule::Ptr<_1a7b92127_GenericDecl> _24269_decl = (*(*((*(_241136_s))))._field_Decl.alloc)._field_Generics[_24259_i];;
					{ jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>> &__jule_push_dest = _24127_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1a7d1aea4_TypeAlias>(_1a7d1aea4_TypeAlias{._field_Scope=jule::Ptr<_1a7b94e3d_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_24269_decl.alloc)._field_Token, ._field_Ident=(*(_24269_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1a7d244a7_TypeSymbol>(_1a7d244a7_TypeSymbol{._field_Decl=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Kind=(*(_242516_g))._field_Kind}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1ab89d15e:;
				++it;
				_24259_i++;
				goto _iter_begin_1ab89d15e;
			}
			_iter_end_1ab89d15e:;
		};
	};
	jule::Ptr<_1a7ccd9e4_SymbolTable> _24357_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1a7c596ea_setCurrentFile(_self_, _24357_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_241136_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_1a7ccd9e4_SymbolTable> _24398_file = _1a7c5587d_findFile(&((*_self_.alloc)._field_files), &((*(*((*((*(_241136_s))))._field_Decl))._field_Token.alloc)._field_File));;
		if ((_24398_file != nullptr)) {
			_1a7c596ea_setCurrentFile(_self_, _24398_file);
		};
	};
	if (((*((*(_241136_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1a7c0bd51_constraintChecker> _24468_cc = _1a7c6038d_constraintChecker(_self_);;
		(*(_24468_cc))._field_et=_241155_errorToken;
		(*_24468_cc.alloc)._field_si=(*(_241136_s));
		(*_24468_cc.alloc)._field_genericsA=_24127_tc._field_useGenerics;
		(*_24468_cc.alloc)._field_uniq=true;
		if ((!(_1a7c0ccb9_check(_24468_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_241136_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _24598_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_24127_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_241136_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab8a6b3a:;
			if (it != expr_end) {
				jule::Ptr<_1a7c7b178_Var> _246116_v = *it;
				{
					_1a7c6dae9_checkVarDecl(_self_, &(_246116_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3));
					_1a7c72702_checkVar(_self_, &(_246116_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _24598_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1ab8a6b3a:;
				++it;
				goto _iter_begin_1ab8a6b3a;
			}
			_iter_end_1ab8a6b3a:;
		};
		((*((*(_self_))._field_files[0LL]))._field_TypeAliases).mut_slice(_24127_tc._field_useGenerics.len());;
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1a7cd5dd6_eval> _24727_eval = _1a7c6256b_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3));;
	(*((*(_241136_s))))._field_Comparable=(!((*(*((*(_241136_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_241136_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8aa600:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba8061_FieldIns> _247415_f = *it;
			{
				jule::Ptr<_1a7d1bc96_TypeKind> _24758_kind = _1a7d36c7d_checkDecl(&_24127_tc, &((*((*((*(_247415_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_24758_kind != nullptr) && __jule_func_result);
				if ((_24758_kind == nullptr)) {
					if (((_self_ != (*(*((*(_241136_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_241136_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_241136_s))))._field_Decl))._field_sema.alloc)._field_errors);
						(*(*((*((*(_241136_s))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_1ab8aa600;
				};
				(*_247415_f.alloc)._field_Kind=_24758_kind;
				(*((*(_241136_s))))._field_Mutable=((*((*(_241136_s))))._field_Mutable || ((!((*(*(_247415_f))._field_Decl.alloc)._field_Mutable)) && _1a7d1d67c_Mutable((*(_247415_f))._field_Kind)));
				(*((*(_241136_s))))._field_Comparable=((*((*(_241136_s))))._field_Comparable && _1a7d1d3e6_Comparable((*(_247415_f))._field_Kind));
				if (((*(*(_247415_f))._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_1ab8aa600;
				};
				(*(_24727_eval))._field_prefix=(*_247415_f.alloc)._field_Kind;
				(*_24727_eval.alloc)._field_field=_247415_f;
				(*_247415_f.alloc)._field_Default=_1a7d09aa8_evalExpr(_24727_eval, (*(*(_247415_f))._field_Decl.alloc)._field_Default);
				if (((*_247415_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_1ab8aa600;
				};
				;
				_1a7c62b87_checkAssignType(_self_, false, &((*_247415_f.alloc)._field_Kind), &((*_247415_f.alloc)._field_Default), (*((*(*(_247415_f))._field_Decl.alloc)._field_Default))._field_Token, (*((*(_241136_s))))._field_Refers);
			}
			_iter_next_1ab8aa600:;
			++it;
			goto _iter_begin_1ab8aa600;
		}
		_iter_end_1ab8aa600:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a7c74308_precheckStructIns(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _250839_s, jule::Ptr<_1a7b69b05_Token> _250858_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1a7c73e0c_checkStructEnv(_self_, _250839_s, _250858_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if ((((*((*(_250839_s))))._field_Comparable && ((*((*(_250839_s))))._field_Operators._field_Eq == nullptr)) && ((*((*_self_.alloc)._field_meta))._field_runtime != nullptr))) {
		jule::Ptr<_1a7bba8d1_Fn> _25198_decl = _1a78253d7_runtimeFindFn(&((*(*(_self_))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8)));;
		{
			auto expr = &((*((*(_250839_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab8b6496:;
			if (it != expr_end) {
				jule::Ptr<_1a7ba8061_FieldIns> _252016_field = *it;
				{
					jule::Ptr<_1a7d2b6ce_Arr> _25219_arr = _1a7d2021c_Arr((*(_252016_field))._field_Kind.ptr());;
					if ((_25219_arr == nullptr)) {
						goto _iter_next_1ab8b6496;
					};
					jule::Ptr<_1a7bbd8b2_FnIns> _25259_f = _1a7bbbddd_instanceForce(_25198_decl);;
					(*(_25259_f))._field_Generics=jule::append((*_25259_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a7d1a3b0_InsGeneric>(_1a7d1a3b0_InsGeneric{._field_Kind=(*(_25219_arr))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>(nullptr)}); __jule_collection; }));
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7c731e7_checkGenericFn(_self_, &(_25259_f), &((*((*_252016_field.alloc)._field_Decl))._field_Token));
						__jule_func_result = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(__jule_func_result))) {
						__jule_panic_s(jule::Str::lit("arrayCmp evaluation failed, this is an implementation mistake", 61) + jule::Str("\nlocation: std/jule/sema/sema.jule:2529:6"));;
					};
					_1a7bc2861_Push((*((*(_250839_s))))._field_Refers.ptr(), jule::Any(_25259_f, &__jule_any_type7));
				}
				_iter_next_1ab8b6496:;
				++it;
				goto _iter_begin_1ab8b6496;
			}
			_iter_end_1ab8b6496:;
		};
	};
	{
		auto expr = &((*((*(_250839_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8ba500:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _253515_f = *it;
			{
				if (((*(_253515_f))._field_Generics.len() == 0LL)) {
					if ((_1a7c72ceb_readyToCheckFn(_self_, _250839_s, &(_253515_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1ab8ba500:;
			++it;
			goto _iter_begin_1ab8ba500;
		}
		_iter_end_1ab8ba500:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a7c745b1_checkStructIns(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _254536_s) {
	{
		auto expr = &((*((*(_254536_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8bbec4:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _254615_f = *it;
			{
				_1a7c7355a_checkTypeMethod(_self_, _254536_s, &(_254615_f));
			}
			_iter_next_1ab8bbec4:;
			++it;
			goto _iter_begin_1ab8bbec4;
		}
		_iter_end_1ab8bbec4:;
	};
}



inline void _1a7c74869_checkTypeStruct(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba5ca6_Struct>* _255137_s) {
	if ((*((*(_255137_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_255137_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_255137_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8bd9cb:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba8b11_StructIns> _256415_ins = *it;
			{
				_1a7c745b1_checkStructIns(_self_, &(_256415_ins));
			}
			_iter_next_1ab8bd9cb:;
			++it;
			goto _iter_begin_1ab8bd9cb;
		}
		_iter_end_1ab8bd9cb:;
	};
}



inline void _1a7c74a67_checkStructTypes(jule::Ptr<_1a7c56c14_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8be977:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba5ca6_Struct> _257015_s = *it;
			{
				_1a7c74869_checkTypeStruct(_self_, &(_257015_s));
			}
			_iter_next_1ab8be977:;
			++it;
			goto _iter_begin_1ab8be977;
		}
		_iter_end_1ab8be977:;
	};
}



inline void _1a7c74d20_checkStructInsOperators(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba8b11_StructIns> _257544_s) {
	{
		auto expr = &((*(_257544_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8c0912:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _257615_m = *it;
			{
				{
					auto &_match_expr{ (*(_257615_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1ab8c1094:;
						{
							(*(_257544_s))._field_Operators._field_Eq=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c7d17a_Eq);
							(*_257544_s.alloc)._field_Comparable=((*_257544_s.alloc)._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1ab8c168d:;
						{
							(*(_257544_s))._field_Operators._field_Gt=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c7d444_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1ab8c1704:;
						{
							(*(_257544_s))._field_Operators._field_GtEq=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c7d70d_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1ab8c176a:;
						{
							(*(_257544_s))._field_Operators._field_Lt=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c7d9c7_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1ab8c17d1:;
						{
							(*(_257544_s))._field_Operators._field_LtEq=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c7dc91_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1ab8c1858:;
						{
							(*(_257544_s))._field_Operators._field_Shl=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c7e3ce_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1ab8c18d0:;
						{
							(*(_257544_s))._field_Operators._field_Shr=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c7e698_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1ab8c1957:;
						{
							(*(_257544_s))._field_Operators._field_Add=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c7e962_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1ab8c19ce:;
						{
							(*(_257544_s))._field_Operators._field_Sub=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c7ec2b_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1ab8c1a56:;
						{
							(*(_257544_s))._field_Operators._field_Div=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c7eee5_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1ab8c1acd:;
						{
							(*(_257544_s))._field_Operators._field_Mul=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c802ae_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1ab8c1b55:;
						{
							(*(_257544_s))._field_Operators._field_Mod=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c80578_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1ab8c1bcc:;
						{
							(*(_257544_s))._field_Operators._field_BitAnd=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c80842_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1ab8c1c54:;
						{
							(*(_257544_s))._field_Operators._field_BitOr=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c80b0b_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1ab8c1ccb:;
						{
							(*(_257544_s))._field_Operators._field_BitXor=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c80dc5_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1ab8c1d53:;
						{
							(*(_257544_s))._field_Operators._field_Neg=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c81513_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1ab8c1dca:;
						{
							(*(_257544_s))._field_Operators._field_Pos=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c817cc_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1ab8c1e52:;
						{
							(*(_257544_s))._field_Operators._field_BitNot=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c81a96_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1ab8c1ec9:;
						{
							(*(_257544_s))._field_Operators._field_AddAssign=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c821d4_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1ab8c2051:;
						{
							(*(_257544_s))._field_Operators._field_SubAssign=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c8249d_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1ab8c20c8:;
						{
							(*(_257544_s))._field_Operators._field_DivAssign=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c82767_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1ab8c2150:;
						{
							(*(_257544_s))._field_Operators._field_MulAssign=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c82a31_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1ab8c21c7:;
						{
							(*(_257544_s))._field_Operators._field_ModAssign=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c82cea_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1ab8c224e:;
						{
							(*(_257544_s))._field_Operators._field_ShlAssign=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c830b4_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1ab8c22c6:;
						{
							(*(_257544_s))._field_Operators._field_ShrAssign=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c8337d_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1ab8c234d:;
						{
							(*(_257544_s))._field_Operators._field_BitOrAssign=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c83647_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1ab8c23c5:;
						{
							(*(_257544_s))._field_Operators._field_BitAndAssign=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c83911_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1ab8c244c:;
						{
							(*(_257544_s))._field_Operators._field_BitXorAssign=_1a7c73a11_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1a7c83bca_BitXorAssign);
						}
					}
					_match_end_1ab8c136e:;
				};
			}
			_iter_next_1ab8c0912:;
			++it;
			goto _iter_begin_1ab8c0912;
		}
		_iter_end_1ab8c0912:;
	};
}



inline void _1a7c750c8_precheckStructType(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7ba5ca6_Struct>* _263940_s) {
	if ((*((*(_263940_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_263940_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_263940_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a7ba8b11_StructIns> _26508_ins = _1a7ba624b_instance((*(_263940_s)));;
		(*(_26508_ins))._field_Checked=true;
		_1a7ba6559_appendInstance((*(_263940_s)).ptr(), &(_26508_ins));
		_1a7c74308_precheckStructIns(_self_, &(_26508_ins), nullptr);
	};
	_1a7c74d20_checkStructInsOperators(_self_, (*((*(_263940_s))))._field_Instances[0LL]);
}



inline void _1a7c752c6_precheckStructTypes(jule::Ptr<_1a7c56c14_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8d8584:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba5ca6_Struct> _266015_s = *it;
			{
				_1a7c750c8_precheckStructType(_self_, &(_266015_s));
			}
			_iter_next_1ab8d8584:;
			++it;
			goto _iter_begin_1ab8d8584;
		}
		_iter_end_1ab8d8584:;
	};
}



inline void _1a7c7557e_checkRets(_1a7c56c14_sema* _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _266530_f) {
	if (_1a7bbad87_IsVoid((*((*(_266530_f))))._field_Decl.ptr())) {
		return;;
	};
	_1a7c779c1_missingRetChecker _26693_mrc = static__1a7c77dbc_new();;
	jule::Bool _26703_ok = _1a7c79099_check(&_26693_mrc, (*((*(_266530_f))))._field_Scope);;
	if ((!(_26703_ok))) {
		_1a7c59b18_pushErr(_self_, (*(*((*(_266530_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("missing return at end of function", 33)), jule::Slice<jule::Any>());
	};
}



inline void _1a7c758e2_checkFnInsSc(_1a7c56c14_sema* _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _267633_f, jule::Ptr<_1a7c1ac1c_scopeChecker>* _267649_sc) {
	_1a7c54e32_appendRetVars(&((*((*((*(_267649_sc))))._field_table))._field_Vars), _267633_f);
	_1a7c5521d_appendParamVars(&((*(*((*(_267649_sc))))._field_table.alloc)._field_Vars), _267633_f);
	_1a7c55509_appendGenericTypeAliases(&((*(*((*(_267649_sc))))._field_table.alloc)._field_TypeAliases), _267633_f);
	_1a7c2cd94_check((*(_267649_sc)), &((*((*((*(_267633_f))))._field_Decl))._field_Scope), &((*((*(_267633_f))))._field_Scope));
	if ((!(_1a7c1d824_stopped((*(_267649_sc)).ptr())))) {
		_1a7c7557e_checkRets(_self_, _267633_f);
	};
}



inline void _1a7c75c55_checkFnInsCaller(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _268938_f, jule::Ptr<_1a7b69b05_Token> _268953_caller) {
	if ((*((*((*(_268938_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1a7ccd9e4_SymbolTable> _26947_old = (*((*(*((*(_268938_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1a7c596ea_setCurrentFile((*((*((*(_268938_f))))._field_Decl))._field_sema, _26947_old);
	});;
	jule::Ptr<_1a7ccd9e4_SymbolTable> _26967_file = _1a7c5587d_findFile(&((*(*((*((*(_268938_f))))._field_Decl))._field_sema.alloc)._field_files), &((*((*(*((*(_268938_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_26967_file != nullptr)) {
		_1a7c596ea_setCurrentFile((*((*((*(_268938_f))))._field_Decl))._field_sema, _26967_file);
	};
	jule::Ptr<_1a7c1ac1c_scopeChecker> _27017_sc = _1a7c117a1_newScopeChecker(&((*(*((*(_268938_f))))._field_Decl.alloc)._field_sema), (*(_268938_f)));;
	(*(_27017_sc))._field_calledFrom=_268953_caller;
	_1a7c758e2_checkFnInsSc(_self_.ptr(), _268938_f, &(_27017_sc));
	if (((*(*((*(_268938_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_268938_f))))._field_Decl))._field_sema.alloc)._field_errors);
		(*(*((*((*(_268938_f))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _1a7c7600d_checkFnIns(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _271132_f) {
	_1a7c75c55_checkFnInsCaller(_self_, _271132_f, nullptr);
}



inline void _1a7c762b6_checkFunc(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bba8d1_Fn>* _271531_f) {
	if ((*((*(_271531_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_271531_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_271531_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8e6bbe:;
		if (it != expr_end) {
			jule::Ptr<_1a7bbd8b2_FnIns> _272515_ins = *it;
			{
				_1a7c7600d_checkFnIns(_self_, &(_272515_ins));
			}
			_iter_next_1ab8e6bbe:;
			++it;
			goto _iter_begin_1ab8e6bbe;
		}
		_iter_end_1ab8e6bbe:;
	};
}



inline void _1a7c7656e_checkTestFn(_1a7c56c14_sema* _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _273032_f) {
	if ((*((*((*(_273032_f))))._field_Decl))._field_Public) {
		_1a7c59b18_pushErr(_self_, (*(*((*(_273032_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("test function cannot be public", 30)), jule::Slice<jule::Any>());
		_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81)), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(*((*(_273032_f))))._field_Decl.alloc)._field_Unsafety || (!(_1a7bbad87_IsVoid((*((*(_273032_f))))._field_Decl)))) || ((*(*((*(_273032_f))))._field_Decl.alloc)._field_Generics.len() != 0LL)) || ((*((*(_273032_f))))._field_Params.len() != 1LL)) || (*((*(*((*(_273032_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_273032_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1a7c59b18_pushErr(_self_, (*(*((*(_273032_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7d288da_Sptr> _27487_sptr = _1a7d1e6d3_Sptr((*((*((*(_273032_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_27487_sptr == nullptr)) {
		_1a7c59b18_pushErr(_self_, (*(*((*(_273032_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7ba8b11_StructIns> _27553_s = _1a7d209c0_Struct((*(_27487_sptr))._field_Elem.ptr());;
	if (((_27553_s == nullptr) || (!(_1a7c3bb94_isStdPackage(&((*((*((*((*(_27553_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1a7c59b18_pushErr(_self_, (*(*((*(_273032_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1a7c59e7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a7c76827_precheckFunc(jule::Ptr<_1a7c56c14_sema> _self_, jule::Ptr<_1a7bba8d1_Fn>* _276334_f) {
	if ((*((*(_276334_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_276334_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_276334_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a7bbd8b2_FnIns> _27748_ins = _1a7bbbddd_instanceForce((*(_276334_f)));;
		{ jule::Slice<jule::Ptr<_1a7bbd8b2_FnIns>> &__jule_push_dest = (*((*(_276334_f))))._field_Instances; __jule_push_dest.push(_27748_ins); };
		jule::Bool _27764_ok = _1a7c66509_reloadFnInsTypes(_self_, _27748_ins);;
		(*(_27748_ins))._field_reloaded=true;
		if ((_27764_ok && _1a7d38312_hasDirective(&((*((*(_276334_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
			_1a7c7656e_checkTestFn(_self_, &(_27748_ins));
		};
	};
}



inline void _1a7c76a25_precheckFuncs(jule::Ptr<_1a7c56c14_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab905914:;
		if (it != expr_end) {
			jule::Ptr<_1a7bce362_Trait> _278715_decl = *it;
			{
				{
					auto expr = &((*(_278715_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab906371:;
					if (it != expr_end) {
						jule::Ptr<_1a7bba8d1_Fn> _278816_m = *it;
						{
							_1a7c76827_precheckFunc(_self_, &(_278816_m));
						}
						_iter_next_1ab906371:;
						++it;
						goto _iter_begin_1ab906371;
					}
					_iter_end_1ab906371:;
				};
			}
			_iter_next_1ab905914:;
			++it;
			goto _iter_begin_1ab905914;
		}
		_iter_end_1ab905914:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab906717:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _279215_decl = *it;
			{
				_1a7c76827_precheckFunc(_self_, &(_279215_decl));
			}
			_iter_next_1ab906717:;
			++it;
			goto _iter_begin_1ab906717;
		}
		_iter_end_1ab906717:;
	};
}



inline void _1a7c76c23_checkFuncs(jule::Ptr<_1a7c56c14_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab907b58:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _279915_decl = *it;
			{
				_1a7c762b6_checkFunc(_self_, &(_279915_decl));
			}
			_iter_next_1ab907b58:;
			++it;
			goto _iter_begin_1ab907b58;
		}
		_iter_end_1ab907b58:;
	};
}



inline void _1a7c76e21_checkPackageTypes(jule::Ptr<_1a7c56c14_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab90894a:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _280715_f = *it;
			{
				_1a7c596ea_setCurrentFile(_self_.ptr(), _280715_f);
				_1a7c72900_checkGlobals(_self_);
				_1a7c76a25_precheckFuncs(_self_);
				_1a7c752c6_precheckStructTypes(_self_);
			}
			_iter_next_1ab90894a:;
			++it;
			goto _iter_begin_1ab90894a;
		}
		_iter_end_1ab90894a:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab90a4c9:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _281815_f = *it;
			{
				_1a7c596ea_setCurrentFile(_self_, _281815_f);
				_1a7c76c23_checkFuncs(_self_);
				_1a7c74a67_checkStructTypes(_self_);
			}
			_iter_next_1ab90a4c9:;
			++it;
			goto _iter_begin_1ab90a4c9;
		}
		_iter_end_1ab90a4c9:;
	};
}



inline void _1a7c7711e_setFileSemaFields(jule::Ptr<_1a7c56c14_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab90baa2:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _282615_f = *it;
			{
				(*(_282615_f))._field_sema=_self_;
			}
			_iter_next_1ab90baa2:;
			++it;
			goto _iter_begin_1ab90baa2;
		}
		_iter_end_1ab90baa2:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab90c71d:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba5ca6_Struct> _282915_st = *it;
			{
				(*(_282915_st))._field_sema=_self_;
			}
			_iter_next_1ab90c71d:;
			++it;
			goto _iter_begin_1ab90c71d;
		}
		_iter_end_1ab90c71d:;
	};
}



inline void _1a7c7731c_setSemaFields(jule::Ptr<_1a7c56c14_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab90d3de:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _283515_file = *it;
			{
				_1a7c596ea_setCurrentFile(_self_.ptr(), _283515_file);
				_1a7c7711e_setFileSemaFields(_self_);
			}
			_iter_next_1ab90d3de:;
			++it;
			goto _iter_begin_1ab90d3de;
		}
		_iter_end_1ab90d3de:;
	};
}



inline void _1a7c775c5_check(jule::Ptr<_1a7c56c14_sema> _self_, jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>* _284127_files) {
	(*(_self_))._field_files=(*(_284127_files));
	_1a7c7731c_setSemaFields(_self_);
	_1a7c5d589_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a7c5e07e_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a7c5d985_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a7c5db83_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a7c71910_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a7c76e21_checkPackageTypes(_self_);
}







inline _1a7c779c1_missingRetChecker static__1a7c77dbc_new(void) {
	return _1a7c779c1_missingRetChecker{._field_breaked=({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_falled=false};;
}



inline jule::Bool _1a7c781ca_checkConditional(_1a7c779c1_missingRetChecker* _self_, jule::Ptr<_1a7c145b7_Conditional> _288932_c) {
	{
		auto expr = &((*(_288932_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab913a76:;
		if (it != expr_end) {
			jule::Ptr<_1a7c13d9c_If> _289015_elif = *it;
			{
				if ((_289015_elif == nullptr)) {
					return false;;
				};
				if ((!(_1a7c78c58_checkScope(_self_, (*(_289015_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1ab913a76:;
			++it;
			goto _iter_begin_1ab913a76;
		}
		_iter_end_1ab913a76:;
	};
	return (((*_288932_c.alloc)._field_Default != nullptr) && _1a7c78c58_checkScope(_self_, (*(*(_288932_c))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1a7c7851b_checkMatch(_1a7c779c1_missingRetChecker* _self_, jule::Ptr<_1a7c181ae_Match> _290126_m) {
	{
		auto expr = &((*(_290126_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab915b44:;
		if (it != expr_end) {
			jule::Ptr<_1a7c18bd7_Case> _290215_c = *it;
			{
				if ((_290215_c == nullptr)) {
					return false;;
				};
				jule::I64 _29064_n = (*(_self_))._field_breaked.len();;
				jule::Bool _29074_ok = _1a7c78c58_checkScope(_self_, (*(_290215_c))._field_Scope);;
				{
					
					if ((_29064_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1ab917618:;
						{
							return false;;
						}
					}
					else if ((!(_29074_ok))) {
						_case_begin_1ab9176a1:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1ab917717;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1ab917717:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_290215_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1ab915b44;
						}
					}
					_match_end_1ab9175a2:;
				};
			}
			_iter_next_1ab915b44:;
			++it;
			goto _iter_begin_1ab915b44;
		}
		_iter_end_1ab915b44:;
	};
	return (((*_290126_m.alloc)._field_Default != nullptr) && _1a7c78c58_checkScope(_self_, (*(*(_290126_m))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1a7c78917_checkInfIter(_1a7c779c1_missingRetChecker* _self_, jule::Uintptr _292724_it, jule::Ptr<_1a7c1397e_Scope>* _292742_s) {
	jule::I64 _29283_n = (*(_self_))._field_breaked.len();;
	if (_1a7c78c58_checkScope(_self_, (*(_292742_s)))) {
		((*(_self_))._field_breaked).mut_slice(0LL, _29283_n);;
		return true;;
	};
	if ((_29283_n != (*(_self_))._field_breaked.len())) {
		{
			auto expr = (*(_self_))._field_breaked.slice(_29283_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1ab91b056:;
			if (it != expr_end) {
				jule::Uintptr _293411_addr = *it;
				{
					if ((_292724_it == _293411_addr)) {
						((*(_self_))._field_breaked).mut_slice(0LL, _29283_n);;
						return false;;
					};
				}
				_iter_next_1ab91b056:;
				++it;
				goto _iter_begin_1ab91b056;
			}
			_iter_end_1ab91b056:;
		};
		((*(_self_))._field_breaked).mut_slice(0LL, _29283_n);;
	};
	return true;;
}



inline jule::Bool _1a7c78c58_checkScope(_1a7c779c1_missingRetChecker* _self_, jule::Ptr<_1a7c1397e_Scope> _294526_s) {
	if ((_294526_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_294526_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab91c684:;
		if (it != expr_end) {
			jule::Any _294915_st = *it;
			{
				{
					auto &_match_expr{ _294915_st };
					
					if (_match_expr.type == &__jule_any_type56) {
						_case_begin_1ab91d355:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type57) {
						_case_begin_1ab91d135:;
						{
							jule::Uintptr _29555_addr = (*(_294915_st.unsafe_cast_ptr<_1a7c16025_BreakSt>()))._field_It;;
							if ((_29555_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_29555_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1ab91d3dd:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type43) {
						_case_begin_1ab91d465:;
						{
							jule::Ptr<_1a7c148b4_InfIter> _29639_ii = _294915_st.unsafe_cast_ptr<_1a7c148b4_InfIter>();;
							if (_1a7c78917_checkInfIter(_self_, static_cast<jule::Uintptr>(_29639_ii), &((*(_29639_ii))._field_Scope))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type45) {
						_case_begin_1ab91d4dc:;
						{
							jule::Ptr<_1a7c14d6a_WhileIter> _29689_wn = _294915_st.unsafe_cast_ptr<_1a7c14d6a_WhileIter>();;
							if ((_1a7c15211_IsWhileNext(_29689_wn.ptr()) && ((*_29689_wn.alloc)._field_Expr == nullptr))) {
								if (_1a7c78917_checkInfIter(_self_, static_cast<jule::Uintptr>(_29689_wn), &((*_29689_wn.alloc)._field_Scope))) {
									return true;;
								};
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type58) {
						_case_begin_1ab91d564:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type29) {
						_case_begin_1ab91d5db:;
						{
							if (_1a7c78c58_checkScope(_self_, _294915_st.cast_ptr<_1a7c1397e_Scope>(&__jule_any_type29))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type31) {
						_case_begin_1ab91d663:;
						{
							{
								auto &_match_expr{ (*(_294915_st.cast_ptr<_1a7cd41ae_Data>(&__jule_any_type31)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type36 || _match_expr.type == &__jule_any_type30) {
									_case_begin_1ab92449e:;
									{
										return true;;
									}
								}
								_match_end_1ab924405:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type42) {
						_case_begin_1ab91d6da:;
						{
							if (_1a7c781ca_checkConditional(_self_, _294915_st.cast_ptr<_1a7c145b7_Conditional>(&__jule_any_type42))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type55) {
						_case_begin_1ab91d762:;
						{
							if (_1a7c7851b_checkMatch(_self_, _294915_st.cast_ptr<_1a7c181ae_Match>(&__jule_any_type55))) {
								return true;;
							};
						}
					}
					_match_end_1ab91d1ac:;
				};
			}
			_iter_next_1ab91c684:;
			++it;
			goto _iter_begin_1ab91c684;
		}
		_iter_end_1ab91c684:;
	};
	return false;;
}



inline jule::Bool _1a7c79099_check(_1a7c779c1_missingRetChecker* _self_, jule::Ptr<_1a7c1397e_Scope> _300021_s) {
	return _1a7c78c58_checkScope(_self_, _300021_s);;
}







inline jule::Bool _1a7c7b585_IsInitialized(_1a7c7b178_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1a7c7b81b_IsTypeInferred(_1a7c7b178_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1a7c7baa2_untypedConstant(_1a7c7b178_Var* _self_) {
	return (_1a7c7b81b_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}







inline jule::Bool static__1a7c7c773_Dispose(jule::Ptr<_1a7bba8d1_Fn> _1020_f) {
	return ((((((((((_1020_f != nullptr) && ((*_1020_f.alloc)._field_Owner != nullptr)) && (*(_1020_f))._field_Ident.equal("Dispose", 7)) && (!((*_1020_f.alloc)._field_Statically))) && (!((*_1020_f.alloc)._field_Unsafety))) && _1a7bbad87_IsVoid(_1020_f)) && ((*_1020_f.alloc)._field_Generics.len() == 0LL)) && ((*_1020_f.alloc)._field_Params.len() == 1LL)) && (*((*(_1020_f))._field_Params[0LL]))._field_Mutable) && (!(_1a7bb97e2_IsRef((*(_1020_f))._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1a7c7ca3c_Str(jule::Ptr<_1a7bba8d1_Fn> _2416_f) {
	if (((((((((((_2416_f == nullptr) || ((*(_2416_f))._field_Owner == nullptr)) || (!(*(_2416_f))._field_Ident.equal("Str", 3))) || (*(_2416_f))._field_Statically) || (*(_2416_f))._field_Unsafety) || _1a7bbad87_IsVoid(_2416_f.ptr())) || ((*(_2416_f))._field_Generics.len() != 0LL)) || ((*(_2416_f))._field_Params.len() != 1LL)) || (*((*(_2416_f))._field_Params[0LL]))._field_Mutable) || _1a7bb97e2_IsRef((*(_2416_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1a7bbd8b2_FnIns> _387_ins = (*(_2416_f))._field_Instances[0LL];;
	jule::Ptr<_1a7d24dae_Prim> _393_prim = _1a7d1e44c_Prim((*(_387_ins))._field_Result.ptr());;
	if ((_393_prim == nullptr)) {
		return false;;
	};
	return _1a7d28379_IsStr(_393_prim.ptr());;
}



inline jule::Bool static__1a7c7cdb1_logical(jule::Ptr<_1a7bba8d1_Fn>* _4621_f, jule::Str _4629_ident) {
	if (((((((((((((((*(_4621_f)) == nullptr) || ((*((*(_4621_f))))._field_Ident != _4629_ident)) || ((*((*(_4621_f))))._field_Owner == nullptr)) || ((*((*(_4621_f))))._field_Instances.len() == 0LL)) || (*((*(_4621_f))))._field_Statically) || (*((*(_4621_f))))._field_Unsafety) || _1a7bbad87_IsVoid((*(_4621_f)).ptr())) || ((*((*(_4621_f))))._field_Generics.len() != 0LL)) || ((*((*(_4621_f))))._field_Params.len() != 2LL)) || (*((*((*(_4621_f))))._field_Params[0LL]))._field_Mutable) || _1a7bb97e2_IsRef((*((*(_4621_f))))._field_Params[0LL].ptr())) || (*((*((*(_4621_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4621_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1a7bbd8b2_FnIns> _637_ins = (*((*(_4621_f))))._field_Instances[0LL];;
	jule::Ptr<_1a7d24dae_Prim> _643_prim = _1a7d1e44c_Prim((*(_637_ins))._field_Result.ptr());;
	if (((_643_prim == nullptr) || (!(_1a7d280e3_IsBool(_643_prim.ptr()))))) {
		return false;;
	};
	return ((*_637_ins.alloc)._field_Owner == _1a7d209c0_Struct((*((*_637_ins.alloc)._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1a7c7d17a_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _7215_f) {
	return static__1a7c7cdb1_logical(&(_7215_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1a7c7d444_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _7715_f) {
	return static__1a7c7cdb1_logical(&(_7715_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1a7c7d70d_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _8217_f) {
	return static__1a7c7cdb1_logical(&(_8217_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1a7c7d9c7_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _8715_f) {
	return static__1a7c7cdb1_logical(&(_8715_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1a7c7dc91_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _9217_f) {
	return static__1a7c7cdb1_logical(&(_9217_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1a7c7e115_result(jule::Ptr<_1a7bba8d1_Fn>* _9620_f, jule::Str _9628_ident) {
	if (((((((((((((((*(_9620_f)) == nullptr) || ((*((*(_9620_f))))._field_Ident != _9628_ident)) || ((*((*(_9620_f))))._field_Owner == nullptr)) || ((*((*(_9620_f))))._field_Instances.len() == 0LL)) || (*((*(_9620_f))))._field_Statically) || (*((*(_9620_f))))._field_Unsafety) || _1a7bbad87_IsVoid((*(_9620_f)).ptr())) || ((*((*(_9620_f))))._field_Generics.len() != 0LL)) || ((*((*(_9620_f))))._field_Params.len() != 2LL)) || (*((*((*(_9620_f))))._field_Params[0LL]))._field_Mutable) || _1a7bb97e2_IsRef((*((*(_9620_f))))._field_Params[0LL].ptr())) || (*((*((*(_9620_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9620_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1a7bbd8b2_FnIns> _1137_ins = (*((*(_9620_f))))._field_Instances[0LL];;
	return (_1a7d209c0_Struct((*(_1137_ins))._field_Result.ptr()) == (*_1137_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1a7c7e3ce_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _11816_f) {
	return static__1a7c7e115_result(&(_11816_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1a7c7e698_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _12316_f) {
	return static__1a7c7e115_result(&(_12316_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1a7c7e962_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _12816_f) {
	return static__1a7c7e115_result(&(_12816_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1a7c7ec2b_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _13316_f) {
	return static__1a7c7e115_result(&(_13316_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1a7c7eee5_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _13816_f) {
	return static__1a7c7e115_result(&(_13816_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1a7c802ae_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _14316_f) {
	return static__1a7c7e115_result(&(_14316_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1a7c80578_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _14816_f) {
	return static__1a7c7e115_result(&(_14816_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1a7c80842_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _15319_f) {
	return static__1a7c7e115_result(&(_15319_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1a7c80b0b_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _15818_f) {
	return static__1a7c7e115_result(&(_15818_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1a7c80dc5_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _16319_f) {
	return static__1a7c7e115_result(&(_16319_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1a7c81249_unary(jule::Ptr<_1a7bba8d1_Fn>* _16719_f, jule::Str _16727_ident) {
	if (((((((((((((*(_16719_f)) == nullptr) || ((*((*(_16719_f))))._field_Ident != _16727_ident)) || ((*((*(_16719_f))))._field_Owner == nullptr)) || ((*((*(_16719_f))))._field_Instances.len() == 0LL)) || (*((*(_16719_f))))._field_Statically) || (*((*(_16719_f))))._field_Unsafety) || _1a7bbad87_IsVoid((*(_16719_f)).ptr())) || ((*((*(_16719_f))))._field_Generics.len() != 0LL)) || ((*((*(_16719_f))))._field_Params.len() != 1LL)) || (*((*((*(_16719_f))))._field_Params[0LL]))._field_Mutable) || _1a7bb97e2_IsRef((*((*(_16719_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1a7bbd8b2_FnIns> _1827_ins = (*((*(_16719_f))))._field_Instances[0LL];;
	return (_1a7d209c0_Struct((*(_1827_ins))._field_Result.ptr()) == (*_1827_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1a7c81513_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _18716_f) {
	return static__1a7c81249_unary(&(_18716_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1a7c817cc_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _19216_f) {
	return static__1a7c81249_unary(&(_19216_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1a7c81a96_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _19719_f) {
	return static__1a7c81249_unary(&(_19719_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1a7c81e1a_assign(jule::Ptr<_1a7bba8d1_Fn>* _20120_f, jule::Str _20128_ident) {
	if (((((((((((((((*(_20120_f)) == nullptr) || ((*((*(_20120_f))))._field_Ident != _20128_ident)) || ((*((*(_20120_f))))._field_Owner == nullptr)) || ((*((*(_20120_f))))._field_Instances.len() == 0LL)) || (*((*(_20120_f))))._field_Statically) || (*((*(_20120_f))))._field_Unsafety) || (!(_1a7bbad87_IsVoid((*(_20120_f)).ptr())))) || ((*((*(_20120_f))))._field_Generics.len() != 0LL)) || ((*((*(_20120_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20120_f))))._field_Params[0LL]))._field_Mutable))) || _1a7bb97e2_IsRef((*((*(_20120_f))))._field_Params[0LL].ptr())) || (*((*((*(_20120_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20120_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1a7c821d4_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _22122_f) {
	return static__1a7c81e1a_assign(&(_22122_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1a7c8249d_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _22622_f) {
	return static__1a7c81e1a_assign(&(_22622_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1a7c82767_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _23122_f) {
	return static__1a7c81e1a_assign(&(_23122_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1a7c82a31_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _23622_f) {
	return static__1a7c81e1a_assign(&(_23622_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1a7c82cea_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _24122_f) {
	return static__1a7c81e1a_assign(&(_24122_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1a7c830b4_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _24622_f) {
	return static__1a7c81e1a_assign(&(_24622_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1a7c8337d_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _25122_f) {
	return static__1a7c81e1a_assign(&(_25122_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1a7c83647_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _25624_f) {
	return static__1a7c81e1a_assign(&(_25624_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1a7c83911_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _26125_f) {
	return static__1a7c81e1a_assign(&(_26125_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1a7c83bca_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn> _26625_f) {
	return static__1a7c81e1a_assign(&(_26625_f), jule::Str::lit("BitXorAssign", 12));;
}








inline jule::Bool _1a7cba948_typeCompatibilityChecker_eq(_1a7cba948_typeCompatibilityChecker *_self_, _1a7cba948_typeCompatibilityChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_src == _self_->_field_src) &&
		(_self_->_field_errorToken == _self_->_field_errorToken);
}

inline void _1a7cbae76_pushErr(_1a7cba948_typeCompatibilityChecker* _self_, jule::Str _11923_fmt, jule::Slice<jule::Any> _11936_args) {
	_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11923_fmt, _11936_args);
}



inline jule::Bool _1a7cbb20c_checkTrait(_1a7cba948_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a7d1cdc9_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7bce362_Trait> _1277_trt = _1a7d20c56_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _1287_ref = false;;
	{
		
		if ((_1a7d1e6d3_Sptr((*(_self_))._field_src) != nullptr)) {
			_case_begin_1ab965c3d:;
			{
				_1287_ref=true;
				(*(_self_))._field_src=(*(_1a7d1e6d3_Sptr((*(_self_))._field_src)))._field_Elem;
				if ((_1a7d209c0_Struct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1ab965cd7;
			}
		}
		else if ((_1a7d209c0_Struct((*(_self_))._field_src) != nullptr)) {
			_case_begin_1ab965cd7:;
			{
				jule::Ptr<_1a7ba8b11_StructIns> _1384_s = _1a7d209c0_Struct((*(_self_))._field_src);;
				if ((!(_1a7ba7428_IsImplements((*(_1384_s))._field_Decl.ptr(), _1277_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_1287_ref)) && _1a7cb9518_traitHasReferenceReceiver(&(_1277_trt)))) {
					_1a7cbae76_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7d20c56_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_1ab965d5e:;
			{
				jule::Ptr<_1a7bce362_Trait> _1488_base = _1a7d20c56_Trait((*(_self_))._field_src);;
				if ((_1277_trt == _1488_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1ab96ae1e:;
				{
					auto expr = &((*(_1488_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab96b1a5:;
					if (it != expr_end) {
						jule::Ptr<_1a7ba5ca6_Struct> _15311_s1 = *it;
						{
							{
								auto expr = &((*(_1277_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ab96baac:;
								if (it != expr_end) {
									jule::Ptr<_1a7ba5ca6_Struct> _15412_s2 = *it;
									{
										if ((_15311_s1 == _15412_s2)) {
											goto _iter_next_1ab96b1a5;
										};
									}
									_iter_next_1ab96baac:;
									++it;
									goto _iter_begin_1ab96baac;
								}
								_iter_end_1ab96baac:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1ab96b1a5:;
						++it;
						goto _iter_begin_1ab96b1a5;
					}
					_iter_end_1ab96b1a5:;
				};
				{
					auto expr = &((*_1277_trt.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab96be97:;
					if (it != expr_end) {
						jule::Ptr<_1a7bba8d1_Fn> _16116_m1 = *it;
						{
							jule::Ptr<_1a7bba8d1_Fn> _1629_m2 = _1a7bd0044_FindMethod(_1488_base, (*(_16116_m1))._field_Ident);;
							if ((_1629_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1a7bbd8b2_FnIns> _1665_m1k = _1a7c64bab_getTraitCheckFnKind((*(_self_))._field_s, &(_16116_m1));;
							jule::Ptr<_1a7bbd8b2_FnIns> _1675_m2k = _1a7c64bab_getTraitCheckFnKind((*(_self_))._field_s, &(_1629_m2));;
							if ((!(_1a7bbe85d_equalTrait(_1665_m1k, &(_1675_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1ab96be97:;
						++it;
						goto _iter_begin_1ab96be97;
					}
					_iter_end_1ab96be97:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ab965ba5:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ab965b2d:;
	};
}



inline jule::Bool _1a7cbb493_checkPtr(_1a7cba948_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a7d1cdc9_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7d2c1a2_Ptr> _1827_dest = _1a7d1e969_Ptr((*(_self_))._field_dest.ptr());;
	if (_1a7d2cc1e_IsUnsafe(_1827_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1a7d1c4d3_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1a7cbb729_checkPrim(_1a7cba948_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1a7d24dae_Prim> _1914_prim = _1a7d1e44c_Prim((*(_self_))._field_dest);;
		if (((_1914_prim != nullptr) && _1a7d28610_IsAny(_1914_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1a7d1c4d3_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1a7cbbb25_typeEnum(_1a7cba948_typeCompatibilityChecker* _self_, jule::Ptr<_1a7bd3278_TypeEnum>* _19925_e, jule::Ptr<_1a7d1bc96_TypeKind>* _19944_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19925_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab973465:;
		if (it != expr_end) {
			jule::Ptr<_1a7bd2ba1_TypeEnumItem> _20015_item = *it;
			{
				if (_1a7d1c4d3_Equal((*((*(_20015_item))._field_Kind))._field_Kind, (*(_19944_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1a7bd3278_TypeEnum> _2048_ke = _1a7d1ee86_TypeEnum((*((*(_20015_item))._field_Kind))._field_Kind);;
				if ((_2048_ke == nullptr)) {
					goto _iter_next_1ab973465;
				};
				if (_1a7cbbb25_typeEnum(_self_, &(_2048_ke), _19944_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab973465:;
			++it;
			goto _iter_begin_1ab973465;
		}
		_iter_end_1ab973465:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a7cbbdab_checkTypeEnum(_1a7cba948_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a7d1c4d3_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7bd3278_TypeEnum> _2197_e = _1a7d1ee86_TypeEnum((*(_self_))._field_dest);;
	__jule_func_result = _1a7cbbb25_typeEnum(_self_, &(_2197_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1a7cbc142_check(_1a7cba948_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1a7d1e969_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1a7cbb493_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1a7d1db99_NilCompatible((*(_self_))._field_dest)) {
		if (_1a7d1cdc9_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1a7d1e44c_Prim((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1ab978c73:;
			{
				__jule_func_result = _1a7cbb729_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1a7d1ee86_TypeEnum((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1ab978d0b:;
			{
				__jule_func_result = _1a7cbbdab_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1a7d20c56_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1ab978701:;
			{
				__jule_func_result = _1a7cbb20c_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ab978338:;
			{
				__jule_func_result = _1a7d1c4d3_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1ab9778a9:;
	};
}








inline jule::Bool _1a7cbc7c4_assignTypeChecker_eq(_1a7cbc7c4_assignTypeChecker *_self_, _1a7cbc7c4_assignTypeChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_errorToken == _self_->_field_errorToken) &&
		(_self_->_field_refers == _self_->_field_refers);
}

inline void _1a7cbcc8b_pushErr(_1a7cbc7c4_assignTypeChecker* _self_, jule::Str _25623_fmt, jule::Slice<jule::Any> _25636_args) {
	_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25623_fmt, _25636_args);
}



inline jule::Bool _1a7cbd022_checkValidity(_1a7cbc7c4_assignTypeChecker* _self_) {
	jule::Bool _2617_valid = true;;
	{
		
		if ((_1a7d20739_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab97b946:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _2644_f = _1a7d20739_Fn((*((*(_self_))._field_d))._field_Kind);;
				{
					
					if (_1a7bbed7a_IsBuiltin(_2644_f.ptr())) {
						_case_begin_1ab97d2b6:;
						{
							_1a7cbcc8b_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("builtin define cannot use as anonymous function", 47)), jule::Slice<jule::Any>());
							_2617_valid=false;
						}
					}
					else if ((*((*(_2644_f))._field_Decl))._field_Binded) {
						_case_begin_1ab97d360:;
						{
							_1a7cbcc8b_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("binded functions cannot use as anonymous function", 49)), jule::Slice<jule::Any>());
							_2617_valid=false;
						}
					}
					else if (((!((*((*(_2644_f))._field_Decl))._field_Statically)) && _1a7bbb11d_IsMethod((*(_2644_f))._field_Decl))) {
						_case_begin_1ab97d3c6:;
						{
							_1a7cbcc8b_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("non-static methods cannot use as anonymous function", 51)), jule::Slice<jule::Any>());
							_2617_valid=false;
						}
					}
					else if ((((*((*(_2644_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_2644_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_1ab97d43c:;
						{
							_1a7cbcc8b_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
							_1a7c59e7b_pushSuggestion((*(_self_))._field_s.ptr(), static_cast<jule::Str>(jule::Str::lit("instantiate generic function to use as anonymous function", 57)), jule::Slice<jule::Any>());
							_2617_valid=false;
						}
					}
					_match_end_1ab97d1c8:;
				};
			}
		}
		else if ((_1a7d21273_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab97b9e0:;
			{
				_1a7cbcc8b_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("tuples cannot assign to single define in same time", 50)), jule::Slice<jule::Any>());
				_2617_valid=false;
			}
		}
		_match_end_1ab97b8ad:;
	};
	return _2617_valid;;
}



inline jule::Bool _1a7cbd2a8_checkConst(_1a7cbc7c4_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1a7d1e44c_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2933_kind = (*(_1a7d1e44c_Prim((*(_self_))._field_dest)))._field_Kind;;
	{
		
		if (_1c0069b36_IsFloat(_2933_kind)) {
			_case_begin_1ab9899dc:;
			{
				if ((!(_1a7cb989d_floatAssignable(&(_2933_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2933_kind;
			}
		}
		else if (_1c00697e5_IsInt(_2933_kind)) {
			_case_begin_1ab989a75:;
			{
				if ((!(_1a7cba45e_intAssignable(_2933_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2933_kind;
			}
		}
		else {
			_case_begin_1ab989976:;
			{
				return false;;
			}
		}
		_match_end_1ab989844:;
	};
	return true;;
}



inline jule::Bool _1a7cbd53e_checkCompatibility(_1a7cbc7c4_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1ab98bd0d:;
			{
				return false;;
			}
		}
		else if ((!(_1a7cbd022_checkValidity(_self_)))) {
			_case_begin_1ab98bd85:;
			{
				return false;;
			}
		}
		else if (_1a7cbd2a8_checkConst(_self_)) {
			_case_begin_1ab98bdeb:;
			{
				return true;;
			}
		}
		else if ((_1a7d1ec00_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab98be62:;
			{
				jule::Ptr<_1a7d1bc96_TypeKind> _3228_dkind = (*(_self_))._field_dest;;
				if ((_1a7d1ec00_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_3228_dkind=(*((*(_1a7d1ec00_Enum((*(_self_))._field_dest)))._field_Kind))._field_Kind;
				};
				jule::Ptr<_1a7d24dae_Prim> _3264_prim = _1a7d1e44c_Prim((*(_self_))._field_dest);;
				if (((_3264_prim == nullptr) || _1a7d28610_IsAny(_3264_prim.ptr()))) {
					goto _match_end_1ab98b109;
				};
				jule::Ptr<_1a7d1bc96_TypeKind> _3318_dest = (*(*(_1a7d1ec00_Enum((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind.alloc)._field_Kind;;
				return _1a7c635e4_checkTypeCompatibility((*(_self_))._field_s, &(_3318_dest), &(_3228_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1ab98b109:;
	};
	return _1a7c63eb8_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1a7cbd7c5_check(_1a7cbc7c4_assignTypeChecker* _self_) {
	jule::Bool _3383_ok = _1a7cbd53e_checkCompatibility(_self_);;
	if ((_3383_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1a7d39d5d_applyImplicitCast(&((*(_self_))._field_s), &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken), (*(_self_))._field_refers);
	};
	return _3383_ok;;
}







inline jule::Bool _1ab9ab998_annotateConstraintElem(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _35846_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1ab9ad170:;
			{
				jule::Ptr<_1a7d1bc96_TypeKind> _36112_elem = nullptr;;
				{
					
{
						_case_begin_1ab9b17c2:;
						{
							_36112_elem=(*(_1a7d2021c_Arr((*(_35846_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ab9b175b:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a7b871d8_ArrTypeDecl>()))._field_Elem;
				return _1a7cc08d7_annotateConstraint(_self_, &(_36112_elem));;
			}
		}
		_match_end_1ab9ad0e8:;
	};
	return false;;
}

inline jule::Bool _1ab9ab206_annotateConstraintElem(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _35846_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1ab9b4594:;
			{
				jule::Ptr<_1a7d1bc96_TypeKind> _36112_elem = nullptr;;
				{
					
{
						_case_begin_1ab9b7960:;
						{
							_36112_elem=(*(_1a7d204a3_Slc((*(_35846_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ab9b7b80:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a7b8634c_SlcTypeDecl>()))._field_Elem;
				return _1a7cc08d7_annotateConstraint(_self_, &(_36112_elem));;
			}
		}
		_match_end_1ab9b451c:;
	};
	return false;;
}

inline jule::Bool _1ab9b4033_annotateConstraintElem(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _35846_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ab9ba9b8:;
			{
				jule::Ptr<_1a7d1bc96_TypeKind> _36112_elem = nullptr;;
				{
					
{
						_case_begin_1ab9be192:;
						{
							_36112_elem=(*(_1a7d1e969_Ptr((*(_35846_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ab9be0a4:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a7b86946_PtrTypeDecl>()))._field_Elem;
				return _1a7cc08d7_annotateConstraint(_self_, &(_36112_elem));;
			}
		}
		_match_end_1ab9ba941:;
	};
	return false;;
}

inline jule::Bool _1ab9bb1c2_annotateConstraintElem(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _35846_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1ab9c1abd:;
			{
				jule::Ptr<_1a7d1bc96_TypeKind> _36112_elem = nullptr;;
				{
					
{
						_case_begin_1ab9c41a8:;
						{
							_36112_elem=(*(_1a7d1e6d3_Sptr((*(_35846_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ab9c51a9:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a7b85eb7_SptrTypeDecl>()))._field_Elem;
				return _1a7cc08d7_annotateConstraint(_self_, &(_36112_elem));;
			}
		}
		_match_end_1ab9c1a46:;
	};
	return false;;
}



inline jule::Bool _1a7cbeac3_annotateConstraintMap(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _37842_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1ab994453:;
			{
				jule::Ptr<_1a7d2aa52_Map> _3818_m = _1a7d20edc_Map((*(_37842_k)).ptr());;
				jule::Ptr<_1a7b87936_MapTypeDecl> _3828_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a7b87936_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_3828_m2))._field_Key;
				if ((!(_1a7cc08d7_annotateConstraint(_self_, &((*(_3818_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_3828_m2.alloc)._field_Val;
				__jule_func_result = _1a7cc08d7_annotateConstraint(_self_, &((*_3818_m.alloc)._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1ab9943cb:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a7cbee14_annotateConstraintTup(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _39342_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1ab999cb6:;
			{
				jule::Ptr<_1a7b86649_TupleTypeDecl> _3968_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a7b86649_TupleTypeDecl>();;
				jule::Ptr<_1a7d29ea2_Tuple> _3978_tup2 = _1a7d21273_Tup((*(_39342_k)).ptr());;
				{
					auto expr = &((*(_3978_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab99cc31:;
					if (it != expr_end) {
						jule::Ptr<_1a7d1bc96_TypeKind> _39816_t2 = *it;
						{
							{
								auto expr = &((*(_3968_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ab99e97a:;
								if (it != expr_end) {
									jule::Ptr<_1a7b800b0_TypeDecl> _39917_t = *it;
									{
										(*(_self_))._field_c=_39917_t;
										if (_1a7cc08d7_annotateConstraint(_self_, &(_39816_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1ab99e97a:;
									++it;
									goto _iter_begin_1ab99e97a;
								}
								_iter_end_1ab99e97a:;
							};
						}
						_iter_next_1ab99cc31:;
						++it;
						goto _iter_begin_1ab99cc31;
					}
					_iter_end_1ab99cc31:;
				};
			}
		}
		_match_end_1ab999c3e:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a7cc0255_annotateConstraintFn(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _41041_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ab99e53a:;
			{
				jule::Ptr<_1a7b96acc_FnDecl> _4138_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a7b96acc_FnDecl>();;
				jule::Ptr<_1a7bbd8b2_FnIns> _4148_f = _1a7d20739_Fn((*(_41041_k)).ptr());;
				{
					auto expr = &((*(_4148_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab9a1e66:;
					if (it != expr_end) {
						jule::I64 _4159_i = it - expr->begin();
						jule::Ptr<_1a7bbc839_ParamIns> _41516_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_4138_pf))._field_Params[_4159_i]))._field_Kind;
							if (_1a7cc08d7_annotateConstraint(_self_, &((*(_41516_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1ab9a1e66:;
						++it;
						_4159_i++;
						goto _iter_begin_1ab9a1e66;
					}
					_iter_end_1ab9a1e66:;
				};
				if (((*_4138_pf.alloc)._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*(_4138_pf))._field_Result.alloc)._field_Kind;
					if (_1a7cc08d7_annotateConstraint(_self_, &((*_4148_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1ab99e4c4:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a7cc0596_annotateConstraintIdent(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _43144_k) {
	jule::Ptr<_1a7b806ba_IdentTypeDecl> _4327_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1a7b806ba_IdentTypeDecl>(&__jule_any_type78);;
	jule::Ptr<_1a7ba8b11_StructIns> _4337_s = _1a7d209c0_Struct((*(_43144_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9a5909:;
		if (it != expr_end) {
			jule::I64 _4347_i = it - expr->begin();
			jule::Ptr<_1a7b92127_GenericDecl> _43410_g = *it;
			{
				if (((*(_43410_g))._field_Ident == (*(_4327_ident))._field_Ident)) {
					jule::Ptr<_1a7d1a3b0_InsGeneric> _4369_fg = (*((*(_self_))._field_f))._field_Generics[_4347_i];;
					if ((_4369_fg != nullptr)) {
						return false;;
					};
					_1a7cc0c4a_pushGeneric(_self_, _43144_k, _4347_i);
					return true;;
				};
				if ((_4337_s == nullptr)) {
					goto _iter_next_1ab9a5909;
				};
				jule::Ptr<_1a7b800b0_TypeDecl> _4468_c = (*(_self_))._field_c;;
				{
					auto expr = &((*_4327_ident.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab9a849a:;
					if (it != expr_end) {
						jule::Ptr<_1a7b800b0_TypeDecl> _44716_ig = *it;
						{
							(*(_self_))._field_c=_44716_ig;
							{
								auto expr = &((*(_4337_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ab9a90b1:;
								if (it != expr_end) {
									jule::Ptr<_1a7d1a3b0_InsGeneric> _44917_sg = *it;
									{
										if (_1a7cc08d7_annotateConstraint(_self_, &((*(_44917_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1ab9a90b1:;
									++it;
									goto _iter_begin_1ab9a90b1;
								}
								_iter_end_1ab9a90b1:;
							};
						}
						_iter_next_1ab9a849a:;
						++it;
						goto _iter_begin_1ab9a849a;
					}
					_iter_end_1ab9a849a:;
				};
				(*(_self_))._field_c=_4468_c;
			}
			_iter_next_1ab9a5909:;
			++it;
			_4347_i++;
			goto _iter_begin_1ab9a5909;
		}
		_iter_end_1ab9a5909:;
	};
	return false;;
}



inline jule::Bool _1a7cc08d7_annotateConstraint(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _46039_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1ab9a9512:;
			{
				return _1a7cc0596_annotateConstraintIdent(_self_, _46039_k);;
			}
		}
		_match_end_1ab9a949b:;
	};
	{
		
		if ((_1a7d2021c_Arr((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1ab9aa3d1:;
			{
				return _1ab9ab998_annotateConstraintElem(_self_, _46039_k);;
			}
		}
		else if ((_1a7d204a3_Slc((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1ab9aa447:;
			{
				return _1ab9ab206_annotateConstraintElem(_self_, _46039_k);;
			}
		}
		else if ((_1a7d1e969_Ptr((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1ab9aa4ad:;
			{
				return _1ab9b4033_annotateConstraintElem(_self_, _46039_k);;
			}
		}
		else if ((_1a7d1e6d3_Sptr((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1ab9aa524:;
			{
				return _1ab9bb1c2_annotateConstraintElem(_self_, _46039_k);;
			}
		}
		else if ((_1a7d20edc_Map((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1ab9aa59b:;
			{
				return _1a7cbeac3_annotateConstraintMap(_self_, _46039_k);;
			}
		}
		else if ((_1a7d20739_Fn((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1ab9aa9ec:;
			{
				return _1a7cc0255_annotateConstraintFn(_self_, _46039_k);;
			}
		}
		else if ((_1a7d21273_Tup((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1ab9aaa74:;
			{
				return _1a7cbee14_annotateConstraintTup(_self_, _46039_k);;
			}
		}
		else {
			_case_begin_1ab9aa2d2:;
			{
				return false;;
			}
		}
		_match_end_1ab9aa26b:;
	};
}



inline void _1a7cc0c4a_pushGeneric(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _48532_k, jule::I64 _48546_i) {
	(*((*(_self_))._field_f))._field_Generics[_48546_i]=jule::new_ptr<_1a7d1a3b0_InsGeneric>(_1a7d1a3b0_InsGeneric{._field_Kind=(*(_48532_k)), ._field_Constraint=jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>(nullptr)});
	jule::Ptr<_1a7b92127_GenericDecl> _4877_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_48546_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9c7431:;
		if (it != expr_end) {
			jule::Ptr<_1a7d1bc96_TypeKind> _48815_ignored = *it;
			{
				if (((*(_4877_gd))._field_Ident == _1a7d1c192_Str(_48815_ignored.ptr()))) {
					(*_48815_ignored.alloc)._field_Kind=(*((*(_48532_k))))._field_Kind;
				};
			}
			_iter_next_1ab9c7431:;
			++it;
			goto _iter_begin_1ab9c7431;
		}
		_iter_end_1ab9c7431:;
	};
	if ((((*_4877_gd.alloc)._field_Constraint == nullptr) || ((*((*_4877_gd.alloc)._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*_4877_gd.alloc)._field_Constraint))._field_Mask[0LL];
	_1a7cc08d7_annotateConstraint(_self_, _48532_k);
}



inline jule::Bool _1a7cc108b_annotatePrim(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _50040_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1a7cc30b0_annotateAny(_self_, _50040_k);
	return __jule_func_result;;
}



inline jule::Bool _1a7cc13cc_annotateArr(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _50439_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7d2b6ce_Arr> _5057_parr = _1a7d2021c_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_5057_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7d2b6ce_Arr> _5097_arr = _1a7d2021c_Arr((*(_50439_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5057_parr))._field_Elem));
	__jule_func_result = _1a7cc3401_annotateKind(_self_, &((*(_5097_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a7cc171d_annotateSlc(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _51439_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7d293ad_Slc> _5157_pslc = _1a7d204a3_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_5157_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7d293ad_Slc> _5197_slc = _1a7d204a3_Slc((*(_51439_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5157_pslc))._field_Elem));
	__jule_func_result = _1a7cc3401_annotateKind(_self_, &((*(_5197_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a7cc1b19_checkMapKey(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _52438_k, jule::Ptr<_1a7d1bc96_TypeKind>* _52458_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7d1bc96_TypeKind>* _5257_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_52438_k;
	__jule_func_result=_1a7cc3401_annotateKind(_self_, _52458_ck);
	(*(_self_))._field_k=_5257_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a7cc1e5a_annotateMap(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _53239_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7d2aa52_Map> _5337_pmap = _1a7d20edc_Map((*((*(_self_))._field_k)).ptr());;
	if ((_5337_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7d2aa52_Map> _5377_m = _1a7d20edc_Map((*(_53239_k)).ptr());;
	__jule_func_result = (_1a7cc1b19_checkMapKey(_self_, (&((*(_5337_pmap))._field_Key)), &((*(_5377_m))._field_Key)) && _1a7cc1b19_checkMapKey(_self_, (&((*(_5337_pmap))._field_Val)), &((*_5377_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1a7cc229b_annotateFn(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _54238_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7bbd8b2_FnIns> _5437_pf = _1a7d20739_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_5437_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7bbd8b2_FnIns> _5477_f = _1a7d20739_Fn((*(_54238_k)).ptr());;
	{
		
		if (((*(_5437_pf))._field_Params.len() != (*(_5477_f))._field_Params.len())) {
			_case_begin_1ab9d5ce1:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1a7bbad87_IsVoid((*(_5437_pf))._field_Decl.ptr()) != _1a7bbad87_IsVoid((*(_5477_f))._field_Decl))) {
			_case_begin_1ab9d5d79:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ab9d5c47:;
	};
	__jule_func_result=true;
	jule::Ptr<_1a7d1bc96_TypeKind>* _5567_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_5477_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9d7c16:;
		if (it != expr_end) {
			jule::I64 _5578_i = it - expr->begin();
			jule::Ptr<_1a7bbc839_ParamIns> _55715_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_5437_pf))._field_Params[_5578_i]))._field_Kind));
				__jule_func_result=(_1a7cc3401_annotateKind(_self_, &((*(_55715_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1ab9d7c16:;
			++it;
			_5578_i++;
			goto _iter_begin_1ab9d7c16;
		}
		_iter_end_1ab9d7c16:;
	};
	if ((!(_1a7bbad87_IsVoid((*(_5437_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_5437_pf))._field_Result));
		__jule_func_result=(_1a7cc3401_annotateKind(_self_, &((*_5477_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_5567_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a7cc25dc_annotatePtr(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _57139_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7d2c1a2_Ptr> _5727_pptr = _1a7d1e969_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_5727_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7d2c1a2_Ptr> _5767_ptr = _1a7d1e969_Ptr((*(_57139_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5727_pptr))._field_Elem));
	__jule_func_result = _1a7cc3401_annotateKind(_self_, &((*(_5767_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a7cc292d_annotateSptr(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _58140_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7d288da_Sptr> _5827_ssptr = _1a7d1e6d3_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_5827_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7d288da_Sptr> _5867_sptr = _1a7d1e6d3_Sptr((*(_58140_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5827_ssptr))._field_Elem));
	__jule_func_result = _1a7cc3401_annotateKind(_self_, &((*(_5867_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a7cc2c6e_annotateStruct(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _59142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7ba8b11_StructIns> _5927_s = _1a7d209c0_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_5927_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7ba8b11_StructIns> _5967_s2 = _1a7d209c0_Struct((*(_59142_k)).ptr());;
	if (((*(_5927_s))._field_Generics.len() != (*(_5967_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_5927_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9e1bdc:;
		if (it != expr_end) {
			jule::I64 _6008_i = it - expr->begin();
			jule::Ptr<_1a7d1a3b0_InsGeneric> _60015_g = *it;
			{
				jule::Ptr<_1a7d1a3b0_InsGeneric> _6018_g2 = (*(_5967_s2))._field_Generics[_6008_i];;
				if (_1a7d1c4d3_Equal((*(_60015_g))._field_Kind, (*(_6018_g2))._field_Kind)) {
					goto _iter_next_1ab9e1bdc;
				};
				(*(_self_))._field_k=(&((*_60015_g.alloc)._field_Kind));
				if ((!(_1a7cc3401_annotateKind(_self_, &((*_6018_g2.alloc)._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab9e1bdc:;
			++it;
			_6008_i++;
			goto _iter_begin_1ab9e1bdc;
		}
		_iter_end_1ab9e1bdc:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a7cc30b0_annotateAny(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _61339_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6143_kind = _1a7d1c192_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9e52a6:;
		if (it != expr_end) {
			jule::I64 _6157_i = it - expr->begin();
			jule::Ptr<_1a7b92127_GenericDecl> _61510_g = *it;
			{
				if ((_6143_kind != (*(_61510_g))._field_Ident)) {
					goto _iter_next_1ab9e52a6;
				};
				jule::Ptr<_1a7d1a3b0_InsGeneric> _6194_t = (*((*(_self_))._field_f))._field_Generics[_6157_i];;
				{
					
					if ((_6194_t == nullptr) || ((*(_6194_t))._field_Kind == nullptr)) {
						_case_begin_1ab9e6b04:;
						{
							_1a7cc0c4a_pushGeneric(_self_, _61339_k, _6157_i);
						}
					}
					else if ((!(_1a7d1c4d3_Equal((*(_6194_t))._field_Kind, (*(_61339_k)))))) {
						_case_begin_1ab9e6b9d:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1ab9e69b1:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_61339_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1ab9e52a6:;
			++it;
			_6157_i++;
			goto _iter_begin_1ab9e52a6;
		}
		_iter_end_1ab9e52a6:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a7cc3401_annotateKind(_1a7cbe199_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _63440_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1a7cc30b0_annotateAny(_self_, _63440_k)) {
			_case_begin_1ab9e9244:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7d1e44c_Prim((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1ab9e92aa:;
			{
				__jule_func_result = _1a7cc108b_annotatePrim(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a7d2021c_Arr((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1ab9e9321:;
			{
				__jule_func_result = _1a7cc13cc_annotateArr(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a7d204a3_Slc((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1ab9e9398:;
			{
				__jule_func_result = _1a7cc171d_annotateSlc(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a7d20edc_Map((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1ab9e9552:;
			{
				__jule_func_result = _1a7cc1e5a_annotateMap(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a7d20739_Fn((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1ab9e95b8:;
			{
				__jule_func_result = _1a7cc229b_annotateFn(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a7d1e969_Ptr((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1ab9e962e:;
			{
				__jule_func_result = _1a7cc25dc_annotatePtr(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a7d1e6d3_Sptr((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1ab9e9695:;
			{
				__jule_func_result = _1a7cc292d_annotateSptr(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a7d209c0_Struct((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1ab9e971c:;
			{
				__jule_func_result = _1a7cc2c6e_annotateStruct(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ab9e9123:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ab9e8ba0:;
	};
}



inline jule::Bool _1a7cc3687_annotate(_1a7cbe199_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1a7cc3401_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}







inline void _1a7cc459a_pushErrToken(_1a7cc4006_fnCallArgChecker* _self_, jule::Ptr<_1a7b69b05_Token> _67928_token, jule::Str _67943_fmt, jule::Slice<jule::Any> _67956_args) {
	_1a7c59b18_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _67928_token, _67943_fmt, _67956_args);
}



inline void _1a7cc490d_pushErr(_1a7cc4006_fnCallArgChecker* _self_, jule::Str _68323_fmt, jule::Slice<jule::Any> _68336_args) {
	_1a7cc459a_pushErrToken(_self_, (*(_self_))._field_errorToken, _68323_fmt, _68336_args);
}



inline jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>> _1a7cc4b94_getParams(_1a7cc4006_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1a7bb955b_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*(*(_self_))._field_f.alloc)._field_Params;;
}



inline jule::Bool _1a7cc4ed5_checkCounts(_1a7cc4006_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>* _69628_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _6977_n = (*(_69628_params)).len();;
	if (((_6977_n > 0LL) && _1a7bb955b_IsSelf((*((*(_69628_params))[0LL]))._field_Decl.ptr()))) {
		(_6977_n)--;
	};
	jule::I64 _7027_diff = (_6977_n - (*(_self_))._field_args.len());;
	jule::Str _7037_log = static_cast<jule::Str>(jule::Str());;
	{
		
		if ((_7027_diff == 0LL)) {
			_case_begin_1aba06185:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6977_n > 0LL) && (*(*((*(_69628_params))[(_6977_n - 1LL)]))._field_Decl.alloc)._field_Variadic)) {
			_case_begin_1aba05d33:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_7027_diff < 0LL) || (_7027_diff > (*(_69628_params)).len()))) {
			_case_begin_1aba05d99:;
			{
				_7037_log=static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63));
			}
		}
		else {
			_case_begin_1aba05cbc:;
			{
				_7037_log=static_cast<jule::Str>(jule::Str::lit("missing arguments to call @", 27));
			}
		}
		_match_end_1aba05c45:;
	};
	_1daed18b7_StrBuilder _7147_err = static__1daed1bb4_New(32LL);;
	_1daeda6b2_WriteStr(&_7147_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_1daeda6b2_WriteStr(&_7147_err, jule::Str::lit("\n       want (", 14));
	{
		auto expr = _69628_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba05739:;
		if (it != expr_end) {
			jule::I64 _7177_i = it - expr->begin();
			jule::Ptr<_1a7bbc839_ParamIns> *_71710_p = it;
			{
				_1daeda6b2_WriteStr(&_7147_err, _1a7d1c192_Str((*((*(_71710_p))))._field_Kind.ptr()));
				if ((((*(_69628_params)).len() - _7177_i) > 1LL)) {
					_1daeda6b2_WriteStr(&_7147_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1aba05739:;
			++it;
			_7177_i++;
			goto _iter_begin_1aba05739;
		}
		_iter_end_1aba05739:;
	};
	_1daeda96a_WriteByte(&_7147_err, ')');
	_1a7cc490d_pushErr(_self_, _7037_log, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1daedaea9_Str(&_7147_err), &__jule_any_type4); __jule_collection; }));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a7cc548b_checkArg(_1a7cc4006_fnCallArgChecker* _self_, jule::Ptr<_1a7bbc839_ParamIns>* _72829_p, jule::Ptr<_1a7cd41ae_Data>* _72848_arg, jule::Ptr<_1a7b69b05_Token>* _72865_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1a7bc0b8e_parameterUsesGenerics(_72829_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_72829_p))))._field_Decl))._field_Variadic)) && _1a7cccae2_isGoodValueToInfer(_72848_arg));
		if (__jule_func_result) {
			_1a7cbe199_dynamicTypeAnnotation _7339_dta = _1a7cbe199_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_72829_p)), ._field_a=(*(_72848_arg)), ._field_errorToken=(*(_72865_errorToken)), ._field_k=nullptr, ._field_c=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1a7cc3687_annotate(&_7339_dta);
		};
		if ((!(__jule_func_result))) {
			_1a7cc459a_pushErrToken(_self_, (*(_72865_errorToken)), static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1a7c6741c_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*(*((*(_72829_p))))._field_Decl.alloc)._field_Mutable, (*(*((*(_72829_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72829_p))))._field_Kind), _72848_arg, _72865_errorToken)) {
		__jule_func_result = _1a7c62b87_checkAssignType((*((*(_self_))._field_e))._field_s, (*(*((*(_72829_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72829_p))))._field_Kind), _72848_arg, (*(_72865_errorToken)), _1a7cd946c_getOwnerRefers((*(_self_))._field_e));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a7cc5887_push(_1a7cc4006_fnCallArgChecker* _self_, jule::Ptr<_1a7bbc839_ParamIns>* _75725_p, jule::Ptr<_1a7b89251_Expr> _75743_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7d1bc96_TypeKind> _7587_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7593_oldImmut = (*(*(_self_))._field_e.alloc)._field_immutable;;
	(*(*(_self_))._field_e.alloc)._field_immutable=(!((*((*((*(_75725_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_75725_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_75725_p))))._field_Kind;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_1a7cd41ae_Data> _7677_d = _1a7d09aa8_evalExpr((*(_self_))._field_e, _75743_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7587_old;
	(*(*(_self_))._field_e.alloc)._field_immutable=_7593_oldImmut;
	if ((_7677_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1a7cc548b_checkArg(_self_, _75725_p, &(_7677_d), &((*(_75743_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_7677_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1a7cc5c83_pushVariadic(_1a7cc4006_fnCallArgChecker* _self_, jule::Ptr<_1a7bbc839_ParamIns>* _78133_p, jule::I64 _78151_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _7837_variadiced = false;;
	jule::Bool _7843_more = ((_78151_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1a7bb02cc_SliceExprModel> _7857_model = jule::new_ptr<_1a7bb02cc_SliceExprModel>(_1a7bb02cc_SliceExprModel{._field_ElemKind=(*((*(_78133_p))))._field_Kind, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	jule::Ptr<_1a7d1bc96_TypeKind> _7897_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Ptr<_1a7d1bc96_TypeKind> _7967_oldKind = (*((*(_78133_p))))._field_Kind;;
	(*((*(_78133_p))))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>((*(*((*(_78133_p))))._field_Kind.alloc));
	(*(*((*(_78133_p))))._field_Kind.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_78133_p))))._field_Kind.alloc)._field_Variadic=false;
		(*((*(_78133_p))))._field_Kind=_7967_oldKind;
	});;
	for (; (_78151_i < (*(_self_))._field_args.len()); (_78151_i)++) {
		{
			jule::Ptr<_1a7b89251_Expr> _8058_arg = (*(_self_))._field_args[_78151_i];;
			{
				auto &_match_expr{ (*(_8058_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type79) {
					_case_begin_1aba1b3cb:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7d293ad_Slc>(_1a7d293ad_Slc{._field_Elem=(*((*(_78133_p))))._field_Kind}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data24)});
					}
				}
				else {
					_case_begin_1aba1b6c8:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_78133_p))))._field_Kind;
					}
				}
				_match_end_1aba1b662:;
			};
			jule::Ptr<_1a7cd41ae_Data> _8188_d = _1a7d09426_eval((*(_self_))._field_e, _8058_arg);;
			if ((_8188_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1aba1a85e;
			};
			if ((*((*(_8188_d))._field_Kind))._field_Variadic) {
				_7837_variadiced=true;
				(*(*((*(_78133_p))))._field_Kind.alloc)._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1a7cc548b_checkArg(_self_, _78133_p, &(_8188_d), &((*(_8058_arg))._field_Token)));
				(*(*((*(_78133_p))))._field_Kind.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_8188_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type80) {
						_case_begin_1aba200e4:;
						{
							_7857_model=(*(_8188_d))._field_Model.unsafe_cast_ptr<_1a7bb02cc_SliceExprModel>();
							(*(_7857_model))._field_ElemKind=(*((*(_78133_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1aba22e0a:;
						{
							_7857_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_8188_d))._field_Model); };
						}
					}
					_match_end_1aba22d94:;
				};
				(_78151_i)++;
				goto _iter_end_1aba1a85e;
			};
			__jule_func_result=(__jule_func_result && _1a7cc548b_checkArg(_self_, _78133_p, &(_8188_d), &((*_8058_arg.alloc)._field_Token)));
			(*(_7857_model))._field_Elems=jule::append((*_7857_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8188_d))._field_Model; __jule_collection; }));
		}
	_iter_next_1aba1a85e:;
	}
	_iter_end_1aba1a85e:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7897_old;
	if ((_7837_variadiced && _7843_more)) {
		_1a7cc459a_pushErrToken(_self_, (*((*(_self_))._field_args[_78151_i]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
	};
	if ((_7857_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_7857_model, &__jule_any_type80)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a7cc60c4_checkArgs(_1a7cc4006_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>* _86230_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8633_arg = (*((*(_self_))._field_e))._field_arg;;
	(*(*(_self_))._field_e.alloc)._field_arg=true;
	__jule_func_result=true;
	jule::I64 _8677_i = 0LL;;
	if ((((*(_86230_params)).len() > 0LL) && _1a7bb955b_IsSelf((*((*(_86230_params))[0LL]))._field_Decl.ptr()))) {
		(_8677_i)++;
	};
	_julec_label_1aba2b144:;
	while ((_8677_i < (*(_86230_params)).len())) {
		{
			jule::Ptr<_1a7bbc839_ParamIns> _8748_p = (*(_86230_params))[_8677_i];;
			{
				
				if ((*(*(_8748_p))._field_Decl.alloc)._field_Variadic) {
					_case_begin_1aba2cae6:;
					{
						__jule_func_result=(_1a7cc5c83_pushVariadic(_self_, &(_8748_p), _8677_i) && __jule_func_result);
						goto _iter_end_1aba2b3db;
					}
				}
				else if (((*(_self_))._field_args.len() <= _8677_i)) {
					_case_begin_1aba2cbd4:;
					{
						__jule_func_result=false;
						goto _iter_end_1aba2b3db;
					}
				}
				else {
					_case_begin_1aba2c72d:;
					{
						__jule_func_result=(_1a7cc5887_push(_self_, &(_8748_p), (*(_self_))._field_args[_8677_i]) && __jule_func_result);
					}
				}
				_match_end_1aba2c6a6:;
			};
			(_8677_i)++;
		}
	_iter_next_1aba2b3db:;
	}
	_iter_end_1aba2b3db:;;
	(*(*(_self_))._field_e.alloc)._field_arg=_8633_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a7cc635a_checkDynamicTypeAnnotation(_1a7cc4006_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba2e92d:;
		if (it != expr_end) {
			jule::Ptr<_1a7d1a3b0_InsGeneric> _89410_g = *it;
			{
				if ((_89410_g == nullptr)) {
					_1a7cc490d_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aba2e92d:;
			++it;
			goto _iter_begin_1aba2e92d;
		}
		_iter_end_1aba2e92d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a7cc65e1_check(_1a7cc4006_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>> _9047_params = _1a7cc4b94_getParams(_self_);;
	__jule_func_result=_1a7cc4ed5_checkCounts(_self_, &(_9047_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1a7cc60c4_checkArgs(_self_, &(_9047_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1a7cc635a_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







inline void _1a7cc74c1_pushErr(_1a7cc6e3d_structLitChecker* _self_, jule::Ptr<_1a7b69b05_Token> _94223_token, jule::Str _94238_fmt, jule::Slice<jule::Any> _94251_args) {
	_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), _94223_token, _94238_fmt, _94251_args);
}



inline void _1a7cc7834_pushSuggestion(_1a7cc6e3d_structLitChecker* _self_, jule::Str _94730_fmt, jule::Slice<jule::Any> _94743_args) {
	_1a7cd67cc_pushSuggestion((*(_self_))._field_e.ptr(), _94730_fmt, _94743_args);
}



inline void _1a7cc7c52_pushMatch(_1a7cc6e3d_structLitChecker* _self_, jule::Ptr<_1a7ba8061_FieldIns>* _95130_f, jule::Ptr<_1a7cd41ae_Data>* _95149_d, jule::Ptr<_1a7b69b05_Token>* _95164_errorToken) {
	;
	jule::Bool _9573_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_95130_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1a7c6741c_checkValidityForInitExpr((*(*(_self_))._field_e.alloc)._field_s, _9573_mutable, false, &((*((*(_95130_f))))._field_Kind), _95149_d, _95164_errorToken)) {
		_1a7c62b87_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_95130_f))))._field_Kind), _95149_d, (*(_95164_errorToken)), _1a7cd946c_getOwnerRefers((*(_self_))._field_e));
	};
	{ jule::Slice<jule::Ptr<_1a7bad82a_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1a7bad82a_StructArgExprModel>(_1a7bad82a_StructArgExprModel{._field_Token=(*(_95164_errorToken)), ._field_Field=(*(_95130_f)), ._field_Expr=(*(_95149_d))})); };
}



inline void _1a7cc80b5_checkPair(_1a7cc6e3d_structLitChecker* _self_, jule::Ptr<_1a7b8d970_FieldExprPair>* _97030_pair, jule::Slice<jule::Ptr<_1a7b89251_Expr>>* _97057_exprs) {
	jule::Ptr<_1a7ba8061_FieldIns> _9727_f = _1a7ba9eec_FindField((*(_self_))._field_s.ptr(), (*((*((*(_97030_pair))))._field_Field))._field_Kind);;
	if ((_9727_f == nullptr)) {
		_1a7cc74c1_pushErr(_self_, (*((*(_97030_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_97030_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	if ((!(_1a7c5a377_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_9727_f))._field_Decl))._field_Public, (*(*(_9727_f))._field_Decl.alloc)._field_Token)))) {
		_1a7cc74c1_pushErr(_self_, (*((*(_97030_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_97030_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1a7cc7834_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	_julec_label_1aba3adce:;
	{
		auto expr = _97057_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba3bd9c:;
		if (it != expr_end) {
			jule::Ptr<_1a7b89251_Expr> _98415_expr = *it;
			{
				{
					auto &_match_expr{ (*(_98415_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1aba3c892:;
						{
							jule::Ptr<_1a7b8d970_FieldExprPair> _9879_dpair = (*(_98415_expr))._field_Kind.unsafe_cast_ptr<_1a7b8d970_FieldExprPair>();;
							{
								
								if (((*(_97030_pair)) == _9879_dpair)) {
									_case_begin_1aba3eee3:;
									{
										goto _iter_end_1aba3bd9c;
									}
								}
								else if (((*(*((*(_97030_pair))))._field_Field.alloc)._field_Kind == (*(*(_9879_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_1aba4008c:;
									{
										_1a7cc74c1_pushErr(_self_, (*((*(_97030_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("@ already has expression", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_97030_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
										goto _iter_end_1aba3bd9c;
									}
								}
								_match_end_1aba3ee7c:;
							};
						}
					}
					_match_end_1aba3c81a:;
				};
			}
			_iter_next_1aba3bd9c:;
			++it;
			goto _iter_begin_1aba3bd9c;
		}
		_iter_end_1aba3bd9c:;
	};
	jule::Ptr<_1a7d1bc96_TypeKind> _9987_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_9987_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_9727_f))._field_Kind;
	jule::Ptr<_1a7cd41ae_Data> _10027_d = _1a7d09aa8_evalExpr((*(_self_))._field_e, (*((*(_97030_pair))))._field_Expr);;
	if ((_10027_d == nullptr)) {
		return;;
	};
	_1a7cc7c52_pushMatch(_self_, &(_9727_f), &(_10027_d), &((*((*(_97030_pair))))._field_Field));
}



inline jule::Bool _1a7cc8406_readyExprs(_1a7cc6e3d_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a7b89251_Expr>>* _100931_exprs) {
	jule::Bool _10107_ok = true;;
	{
		auto expr = _100931_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba4556a:;
		if (it != expr_end) {
			jule::I64 _10118_i = it - expr->begin();
			jule::Ptr<_1a7b89251_Expr> _101115_expr = *it;
			{
				{
					auto &_match_expr{ (*(_101115_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1aba4625d:;
						{
							jule::Ptr<_1a7b9007b_KeyValPair> _10149_pair = (*(_101115_expr))._field_Kind.unsafe_cast_ptr<_1a7b9007b_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_10149_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type52) {
									_case_begin_1aba49904:;
									{
										goto _match_end_1aba48c00;
									}
								}
								else {
									_case_begin_1aba48c66:;
									{
										_1a7cc74c1_pushErr(_self_, (*(_10149_pair))._field_Colon, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
										_10107_ok=false;
										goto _iter_next_1aba4556a;
									}
								}
								_match_end_1aba48c00:;
							};
							(*((*(_100931_exprs))[_10118_i]))._field_Kind=jule::Any(jule::new_ptr<_1a7b8d970_FieldExprPair>(_1a7b8d970_FieldExprPair{._field_Field=(*((*(_10149_pair))._field_Key))._field_Token, ._field_Expr=(*_10149_pair.alloc)._field_Val}), &__jule_any_type81);
						}
					}
					_match_end_1aba461d6:;
				};
			}
			_iter_next_1aba4556a:;
			++it;
			_10118_i++;
			goto _iter_begin_1aba4556a;
		}
		_iter_end_1aba4556a:;
	};
	return _10107_ok;;
}



inline void _1a7cc86ae_check(_1a7cc6e3d_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a7b89251_Expr>>* _103326_exprs) {
	if (((*(_103326_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1a7cc8406_readyExprs(_self_, _103326_exprs)))) {
		return;;
	};
	jule::Bool _10407_paired = false;;
	{
		auto expr = _103326_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba4c451:;
		if (it != expr_end) {
			jule::I64 _10418_i = it - expr->begin();
			jule::Ptr<_1a7b89251_Expr> _104115_expr = *it;
			{
				{
					auto &_match_expr{ (*(_104115_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1aba53314:;
						{
							jule::Ptr<_1a7b8d970_FieldExprPair> _10449_pair = (*(_104115_expr))._field_Kind.unsafe_cast_ptr<_1a7b8d970_FieldExprPair>();;
							if (((_10418_i > 0LL) && (!(_10407_paired)))) {
								_1a7cc74c1_pushErr(_self_, (*(_10449_pair))._field_Field, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							_10407_paired=true;
							_1a7cc80b5_checkPair(_self_, &(_10449_pair), _103326_exprs);
						}
					}
					else {
						_case_begin_1aba4d60b:;
						{
							if (_10407_paired) {
								_1a7cc74c1_pushErr(_self_, (*(_104115_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument must target to field", 29)), jule::Slice<jule::Any>());
							};
							if ((_10418_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1a7cc74c1_pushErr(_self_, (*_104115_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), jule::Slice<jule::Any>());
								goto _iter_next_1aba4c451;
							};
							jule::Ptr<_1a7ba8061_FieldIns> _10599_field = (*(*(_self_))._field_s.alloc)._field_Fields[_10418_i];;
							if ((!(_1a7c5a377_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_10599_field))._field_Decl))._field_Public, (*(*(_10599_field))._field_Decl.alloc)._field_Token)))) {
								_1a7cc74c1_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("structure cannot instantiating because it has non-public fields", 63)), jule::Slice<jule::Any>());
								_1a7cc7834_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use field:expression pairs to instantiate", 41)), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1a7d1bc96_TypeKind> _10679_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_10679_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*_10599_field.alloc)._field_Kind;
							jule::Ptr<_1a7cd41ae_Data> _10719_d = _1a7d09aa8_evalExpr((*(_self_))._field_e, _104115_expr);;
							if ((_10719_d == nullptr)) {
								goto _iter_next_1aba4c451;
							};
							_1a7cc7c52_pushMatch(_self_, &(_10599_field), &(_10719_d), &((*_104115_expr.alloc)._field_Token));
						}
					}
					_match_end_1aba4d595:;
				};
			}
			_iter_next_1aba4c451:;
			++it;
			_10418_i++;
			goto _iter_begin_1aba4c451;
		}
		_iter_end_1aba4c451:;
	};
	if ((!(_10407_paired))) {
		jule::I64 _10824_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _10838_diff = (_10824_n - (*(_103326_exprs)).len());;
		{
			
			if ((_10838_diff <= 0LL)) {
				_case_begin_1aba56e2d:;
				{
					return;;
				}
			}
			_match_end_1aba56d0c:;
		};
		_1daed18b7_StrBuilder _10898_idents = static__1daed1bb4_New(32LL);;
		for (; (_10838_diff > 0LL); (_10838_diff)--) {
			{
				_1daeda6b2_WriteStr(&_10898_idents, jule::Str::lit(", ", 2));
				_1daeda6b2_WriteStr(&_10898_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_10824_n - _10838_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1aba5767b:;
		}
		_iter_end_1aba5767b:;;
		_1a7cc74c1_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(__jule_bytesToStr(_1daedb95a_Buf(&_10898_idents).slice(2LL)), &__jule_any_type4); __jule_collection; }));
	};
}








inline jule::Bool _1a7cc8c20_rangeChecker_eq(_1a7cc8c20_rangeChecker *_self_, _1a7cc8c20_rangeChecker _other_) {
	return 
		(_self_->_field_sc == _other_._field_sc) &&
		(_self_->_field_rang == _self_->_field_rang) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_d == _self_->_field_d);
}

inline jule::Ptr<_1a7c7b178_Var> _1a7cc923c_buildVar(_1a7cc8c20_rangeChecker* _self_, jule::Ptr<_1a7b97c87_VarDecl>* _110925_decl) {
	jule::Ptr<_1a7c7b178_Var> _11107_v = _1a7bc6db5_buildVar((*(_110925_decl)));;
	return _11107_v;;
}



inline void _1a7cc943a_setSizeKey(_1a7cc8c20_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1a7b6c4dc_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1a7cc923c_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=(*(_1a7e04db2_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
}



inline void _1a7cc9858_checkRangeExprValidity(_1a7cc8c20_rangeChecker* _self_, jule::Ptr<_1a7cd41ae_Data>* _112843_d, jule::Ptr<_1a7c7b178_Var>* _112854_key, jule::Ptr<_1a7d1bc96_TypeKind>* _112870_k) {
	jule::Bool _11297__mut = (*((*(_112854_key))))._field_Mutable;;
	if ((_11297__mut && (!(_1a7d1d67c_Mutable((*(_112870_k)).ptr()))))) {
		_11297__mut=false;
	};
	_1a7c6741c_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _11297__mut, (*((*(_112854_key))))._field_Reference, &((*((*((*(_112854_key))))._field_Kind))._field_Kind), _112843_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1a7cc9a56_checkSlice(_1a7cc8c20_rangeChecker* _self_) {
	_1a7cc943a_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a7b6c4dc_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a7d293ad_Slc> _11477_slc = _1a7d204a3_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a7cc923c_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1a7d244a7_TypeSymbol>(_1a7d244a7_TypeSymbol{._field_Decl=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Kind=(*(_11477_slc))._field_Elem});
	_1a7cc9858_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11477_slc.alloc)._field_Elem));
}



inline void _1a7cc9c54_checkArray(_1a7cc8c20_rangeChecker* _self_) {
	_1a7cc943a_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a7b6c4dc_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a7d2b6ce_Arr> _11607_arr = _1a7d2021c_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a7cc923c_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1a7d244a7_TypeSymbol>(_1a7d244a7_TypeSymbol{._field_Decl=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Kind=(*(_11607_arr))._field_Elem});
	_1a7cc9858_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11607_arr.alloc)._field_Elem));
}



inline void _1a7cc9e52_checkMapKeyA(_1a7cc8c20_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1a7b6c4dc_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a7d2aa52_Map> _11727_m = _1a7d20edc_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1a7cc923c_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=jule::new_ptr<_1a7d244a7_TypeSymbol>(_1a7d244a7_TypeSymbol{._field_Decl=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Kind=(*(_11727_m))._field_Key});
	jule::Ptr<_1a7cd41ae_Data> _11767_d = jule::new_ptr<_1a7cd41ae_Data>((*(*(_self_))._field_d.alloc));;
	(*_11767_d.alloc)._field_Kind=(*_11727_m.alloc)._field_Key;
	_1a7cc9858_checkRangeExprValidity(_self_, &(_11767_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_11727_m.alloc)._field_Key));
}



inline void _1a7cca150_checkMapKeyB(_1a7cc8c20_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a7b6c4dc_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a7d2aa52_Map> _11877_m = _1a7d20edc_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a7cc923c_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1a7d244a7_TypeSymbol>(_1a7d244a7_TypeSymbol{._field_Decl=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Kind=(*(_11877_m))._field_Val});
	jule::Ptr<_1a7cd41ae_Data> _11917_d = jule::new_ptr<_1a7cd41ae_Data>((*(*(_self_))._field_d.alloc));;
	(*_11917_d.alloc)._field_Kind=(*_11877_m.alloc)._field_Val;
	_1a7cc9858_checkRangeExprValidity(_self_, &(_11917_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11877_m.alloc)._field_Val));
}



inline void _1a7cca34d_checkMap(_1a7cc8c20_rangeChecker* _self_) {
	_1a7cc9e52_checkMapKeyA(_self_);
	_1a7cca150_checkMapKeyB(_self_);
}



inline void _1a7cca54b_checkStr(_1a7cc8c20_rangeChecker* _self_) {
	_1a7cc943a_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a7b6c4dc_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1a7cc923c_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=(*(_1a7e04db2_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("u8", 2)))))._field_Kind;
}



inline void _1a7cca749_checkComptime(_1a7cc8c20_rangeChecker* _self_) {
	_1a7cc943a_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Mutable)) {
		_1a7c59b18_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Mutable)) {
		_1a7c59b18_pushErr((*((*(_self_))._field_sc))._field_s, (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB == nullptr) || _1a7b6c4dc_IsIgnoreIdent((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1a7cc923c_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
}



inline jule::Bool _1a7cca9d0_checkComptimeRange(_1a7cc8c20_rangeChecker* _self_) {
	jule::Ptr<_1a7bd5ba4_comptimeRange> _12267_range = _1a7d227e6_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_12267_range))._field_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7bd5984_comptimeRangeKind_mptr_data0) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a7bd5984_comptimeRangeKind_mptr_data2) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a7bd5984_comptimeRangeKind_mptr_data3) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a7bd5984_comptimeRangeKind_mptr_data4) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a7bd5984_comptimeRangeKind_mptr_data1) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a7bd5984_comptimeRangeKind_mptr_data5) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a7bd5984_comptimeRangeKind_mptr_data6)) {
			_case_begin_1aba78e72:;
			{
				_1a7cca749_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1aba79280:;
			{
				_1a7c59b18_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1aba79219:;
	};
}



inline jule::Bool _1a7ccac66_check(_1a7cc8c20_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1aba7c607:;
		}
		else if ((_1a7d204a3_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aba7aea7:;
			{
				_1a7cc9a56_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1a7d2021c_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aba7b01d:;
			{
				_1a7cc9c54_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1a7d20edc_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aba7b57e:;
			{
				_1a7cca34d_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1a7d227e6_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aba7b5e5:;
			{
				return _1a7cca9d0_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1aba7ae1e:;
			{
				jule::Ptr<_1a7d24dae_Prim> _12594_prim = _1a7d1e44c_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_12594_prim != nullptr) && _1a7d28379_IsStr(_12594_prim))) {
					_1a7cca54b_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1aba7ad31:;
	};
	_1a7c59b18_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
	return false;;
}







inline void _1a7ccb8e3_prepareTypes(_1a7ccb481_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1a7bbeae4_Types((*(_self_))._field_f);
	};
}



inline void _1a7ccbb9b_prepareExprs(_1a7ccb481_retTypeChecker* _self_, jule::Ptr<_1a7b89251_Expr>* _128733_e) {
	if (((*(_128733_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_128733_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1aba839c6:;
			{
				(*(_self_))._field_exprs=(*((*((*(_128733_e))))._field_Kind.unsafe_cast_ptr<_1a7b89d45_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_1aba83355:;
			{
				{ jule::Slice<jule::Ptr<_1a7b89251_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_128733_e))); };
			}
		}
		_match_end_1aba82dc1:;
	};
}



inline void _1a7ccbd99_checkExprs(_1a7ccb481_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a7cd41ae_Data>> _13037_datas = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7cd41ae_Data>>::alloc(0LL, (*(_self_))._field_exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7cd41ae_Data>(nullptr); __jule_collection; });;
	jule::Ptr<_1a7cd5dd6_eval> _13047_eval = _1a7c6256b_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba8617c:;
		if (it != expr_end) {
			jule::I64 _13058_i = it - expr->begin();
			jule::Ptr<_1a7b89251_Expr> _130515_expr = *it;
			{
				if ((_13058_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1aba8617c;
				};
				jule::Ptr<_1a7d1bc96_TypeKind> _13108_t = (*(_self_))._field_types[_13058_i];;
				(*(_13047_eval))._field_prefix=_13108_t;
				jule::Ptr<_1a7cd41ae_Data> _13138_d = _1a7d09aa8_evalExpr(_13047_eval, _130515_expr);;
				if ((_13138_d == nullptr)) {
					goto _iter_next_1aba8617c;
				};
				{ jule::Slice<jule::Ptr<_1a7cd41ae_Data>> &__jule_push_dest = _13037_datas; __jule_push_dest.push(_13138_d); };
				if (((!((*(_13138_d))._field_Mutable)) && _1a7d1d67c_Mutable((*(_13138_d))._field_Kind.ptr()))) {
					_1a7c59b18_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("mutable typed return expressions should be mutable", 50)), jule::Slice<jule::Any>());
					return;;
				};
				_1a7cbc7c4_assignTypeChecker _13258_ac = _1a7cbc7c4_assignTypeChecker{._field_s=(*(*(_self_))._field_sc.alloc)._field_s, ._field_dest=_13108_t, ._field_d=_13138_d, ._field_errorToken=(*(_self_))._field_errorToken, ._field_refers=(*((*(_1a7c1e380_getHardRoot((*(_self_))._field_sc)))._field_owner))._field_Refers};;
				_1a7cbd7c5_check(&_13258_ac);
			}
			_iter_next_1aba8617c:;
			++it;
			_13058_i++;
			goto _iter_begin_1aba8617c;
		}
		_iter_end_1aba8617c:;
	};
	if ((_13037_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1a7bb3511_TupleExprModel>(_1a7bb3511_TupleExprModel{._field_Datas=_13037_datas}), &__jule_any_type84);
	} else if ((_13037_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_13037_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1a7ccc130_tryFuncMultiRetForward(_1a7ccb481_retTypeChecker* _self_) {
	jule::Ptr<_1a7cd5dd6_eval> _13477_eval = _1a7c6256b_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0));;
	jule::Ptr<_1a7cd41ae_Data> _13487_d = _1a7d09aa8_evalExpr(_13477_eval, (*(_self_))._field_exprs[0LL]);;
	if ((_13487_d == nullptr)) {
		return true;;
	};
	jule::Ptr<_1a7d29ea2_Tuple> _13547_tup = _1a7d21273_Tup((*(_13487_d))._field_Kind.ptr());;
	if ((_13547_tup == nullptr)) {
		return false;;
	};
	if (((*(_13547_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_1aba92243;
	};
	(*(_self_))._field_model=(*(_13487_d))._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba90373:;
		if (it != expr_end) {
			jule::I64 _13627_i = it - expr->begin();
			{
				jule::Ptr<_1a7d1bc96_TypeKind> _13638_t1 = (*(_self_))._field_types[_13627_i];;
				jule::Ptr<_1a7d1bc96_TypeKind> _13648_t2 = (*(_13547_tup))._field_Types[_13627_i];;
				if ((!(_1a7c6313d__checkTypeCompatibility((*((*(_self_))._field_sc))._field_s, &(_13638_t1), &(_13648_t2), (*(_self_))._field_errorToken)))) {
					goto _julec_label_1aba92243;
				};
			}
			_iter_next_1aba90373:;
			++it;
			_13627_i++;
			goto _iter_begin_1aba90373;
		}
		_iter_end_1aba90373:;
	};
	return true;;
	_julec_label_1aba92243:;
	_1daed18b7_StrBuilder _13717_wanted = static__1daed1bb4_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba92573:;
		if (it != expr_end) {
			jule::I64 _13727_i = it - expr->begin();
			jule::Ptr<_1a7d1bc96_TypeKind> _137210_t = *it;
			{
				_1daeda6b2_WriteStr(&_13717_wanted, _1a7d1c192_Str(_137210_t.ptr()));
				if ((((*(_self_))._field_types.len() - _13727_i) > 1LL)) {
					_1daeda6b2_WriteStr(&_13717_wanted, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1aba92573:;
			++it;
			_13727_i++;
			goto _iter_begin_1aba92573;
		}
		_iter_end_1aba92573:;
	};
	_1daed18b7_StrBuilder _13787_given = static__1daed1bb4_New(32LL);;
	{
		auto expr = &((*(_13547_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba9460d:;
		if (it != expr_end) {
			jule::I64 _13797_i = it - expr->begin();
			jule::Ptr<_1a7d1bc96_TypeKind> _137910_t = *it;
			{
				_1daeda6b2_WriteStr(&_13787_given, _1a7d1c192_Str(_137910_t.ptr()));
				if ((((*(_self_))._field_types.len() - _13797_i) > 1LL)) {
					_1daeda6b2_WriteStr(&_13787_given, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1aba9460d:;
			++it;
			_13797_i++;
			goto _iter_begin_1aba9460d;
		}
		_iter_end_1aba9460d:;
	};
	_1a7c59b18_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("function return forwaring is wrong\n       want (@)\n       have (@)", 66)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1daedaea9_Str(&_13717_wanted), &__jule_any_type4); (*it++) = jule::Any(_1daedaea9_Str(&_13787_given), &__jule_any_type4); __jule_collection; }));
	return false;;
}



inline jule::Bool _1a7ccc471_check(_1a7ccb481_retTypeChecker* _self_, jule::Ptr<_1a7b89251_Expr>* _138926_e) {
	_1a7ccb8e3_prepareTypes(_self_);
	_1a7ccbb9b_prepareExprs(_self_, _138926_e);
	{
		
		if ((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
			_case_begin_1aba978b9:;
			{
				if ((!(_1a7bbbb57_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
					_1a7c59b18_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("return statements of non-void functions should have return expression", 69)), jule::Slice<jule::Any>());
					return false;;
				};
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() > 0LL) && ((*(_self_))._field_f != nullptr)) && _1a7bbad87_IsVoid((*(*(_self_))._field_f.alloc)._field_Decl.ptr()))) {
			_case_begin_1aba97930:;
			{
				_1a7c59b18_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("void functions is cannot returns any value", 42)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if ((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL))) {
			_case_begin_1aba97996:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_1aba9c418:;
						{
							if (_1a7ccc130_tryFuncMultiRetForward(_self_)) {
								return true;;
							};
						}
					}
					_match_end_1aba9c35d:;
				};
				_1a7c59b18_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing return expressions for multi-return", 43)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
			_case_begin_1aba97a0c:;
			{
				_1a7c59b18_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing return expressions for multi-return", 43)), jule::Slice<jule::Any>());
			}
		}
		else if (((*(_self_))._field_exprs.len() > (*(_self_))._field_types.len())) {
			_case_begin_1aba97a73:;
			{
				_1a7c59b18_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("overflow return expressions", 27)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aba97798:;
	};
	_1a7ccbd99_checkExprs(_self_);
	return true;;
}







inline jule::Ptr<_1a7c36793_ImportInfo> _1a7cce011_SelectPackage(_1a7ccd9e4_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7c36793_ImportInfo>> _2729_selector) {
	if ((_2729_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abaa383c:;
		if (it != expr_end) {
			jule::Ptr<_1a7c36793_ImportInfo> _3115_pkg = *it;
			{
				if (_2729_selector(_3115_pkg)) {
					return _3115_pkg;;
				};
			}
			_iter_next_1abaa383c:;
			++it;
			goto _iter_begin_1abaa383c;
		}
		_iter_end_1abaa383c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7c7b178_Var> _1a7cce40c_FindVar(_1a7ccd9e4_SymbolTable* _self_, jule::Str _4123_ident, jule::Bool _4135_binded) {
	return _1a7cd1541_findVar(_self_, &(_4123_ident), _4135_binded, false);;
}



inline jule::Ptr<_1a7d1aea4_TypeAlias> _1a7cce808_FindTypeAlias(_1a7ccd9e4_SymbolTable* _self_, jule::Str _4729_ident, jule::Bool _4741_binded) {
	return _1a7cd19e7_findTypeAlias(_self_, &(_4729_ident), _4741_binded, false);;
}



inline jule::Ptr<_1a7ba5ca6_Struct> _1a7ccec04_FindStruct(_1a7ccd9e4_SymbolTable* _self_, jule::Str _5326_ident, jule::Bool _5338_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abaa55b9:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba5ca6_Struct> _5415_s = *it;
			{
				if ((((*(_5415_s))._field_Ident == _5326_ident) && ((*_5415_s.alloc)._field_Binded == _5338_binded))) {
					return _5415_s;;
				};
			}
			_iter_next_1abaa55b9:;
			++it;
			goto _iter_begin_1abaa55b9;
		}
		_iter_end_1abaa55b9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7bba8d1_Fn> _1a7cd0100_FindFn(_1a7ccd9e4_SymbolTable* _self_, jule::Str _6422_ident, jule::Bool _6434_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abaa72d0:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _6515_f = *it;
			{
				if ((((*(_6515_f))._field_Ident == _6422_ident) && ((*_6515_f.alloc)._field_Binded == _6434_binded))) {
					return _6515_f;;
				};
			}
			_iter_next_1abaa72d0:;
			++it;
			goto _iter_begin_1abaa72d0;
		}
		_iter_end_1abaa72d0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7bce362_Trait> _1a7cd0441_FindTrait(_1a7ccd9e4_SymbolTable* _self_, jule::Str _7525_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abaa8600:;
		if (it != expr_end) {
			jule::Ptr<_1a7bce362_Trait> _7615_t = *it;
			{
				if (((*(_7615_t))._field_Ident == _7525_ident)) {
					return _7615_t;;
				};
			}
			_iter_next_1abaa8600:;
			++it;
			goto _iter_begin_1abaa8600;
		}
		_iter_end_1abaa8600:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7bd1a6d_Enum> _1a7cd0782_FindEnum(_1a7ccd9e4_SymbolTable* _self_, jule::Str _8624_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abaa9612:;
		if (it != expr_end) {
			jule::Ptr<_1a7bd1a6d_Enum> _8715_e = *it;
			{
				if (((*(_8715_e))._field_Ident == _8624_ident)) {
					return _8715_e;;
				};
			}
			_iter_next_1abaa9612:;
			++it;
			goto _iter_begin_1abaa9612;
		}
		_iter_end_1abaa9612:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7bd3278_TypeEnum> _1a7cd0ac3_FindTypeEnum(_1a7ccd9e4_SymbolTable* _self_, jule::Str _9728_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abaaa602:;
		if (it != expr_end) {
			jule::Ptr<_1a7bd3278_TypeEnum> _9815_e = *it;
			{
				if (((*(_9815_e))._field_Ident == _9728_ident)) {
					return _9815_e;;
				};
			}
			_iter_next_1abaaa602:;
			++it;
			goto _iter_begin_1abaaa602;
		}
		_iter_end_1abaaa602:;
	};
	return nullptr;;
}



inline jule::I64 _1a7cd108a_findVar1(_1a7ccd9e4_SymbolTable* _self_, jule::Ptr<_1a7c7b178_Var>* _10825_v) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abaab5e2:;
		if (it != expr_end) {
			jule::I64 _1097_i = it - expr->begin();
			{
				if (((*(_self_))._field_Vars[_1097_i] == (*(_10825_v)))) {
					return _1097_i;;
				};
			}
			_iter_next_1abaab5e2:;
			++it;
			_1097_i++;
			goto _iter_begin_1abaab5e2;
		}
		_iter_end_1abaab5e2:;
	};
	return -1LL;;
}



inline jule::Ptr<_1a7c7b178_Var> _1a7cd1541_findVar(_1a7ccd9e4_SymbolTable* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse) {
	if (_11750_reverse) {
		jule::I64 _1198_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_1198_i >= 0LL); (_1198_i)--) {
			{
				jule::Ptr<_1a7c7b178_Var> _1219_v = (*(_self_))._field_Vars[_1198_i];;
				if ((((*(_1219_v))._field_Ident == (*(_11724_ident))) && ((*_1219_v.alloc)._field_Binded == _11736_binded))) {
					return _1219_v;;
				};
			}
		_iter_next_1abaad45c:;
		}
		_iter_end_1abaad45c:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abaae8e2:;
			if (it != expr_end) {
				jule::Ptr<_1a7c7b178_Var> _12716_v = *it;
				{
					if ((((*(_12716_v))._field_Ident == (*(_11724_ident))) && ((*_12716_v.alloc)._field_Binded == _11736_binded))) {
						return _12716_v;;
					};
				}
				_iter_next_1abaae8e2:;
				++it;
				goto _iter_begin_1abaae8e2;
			}
			_iter_end_1abaae8e2:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1a7d1aea4_TypeAlias> _1a7cd19e7_findTypeAlias(_1a7ccd9e4_SymbolTable* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse) {
	if (_13656_reverse) {
		jule::I64 _1388_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_1388_i >= 0LL); (_1388_i)--) {
			{
				jule::Ptr<_1a7d1aea4_TypeAlias> _1409_ta = (*(_self_))._field_TypeAliases[_1388_i];;
				if ((((*(_1409_ta))._field_Ident == (*(_13630_ident))) && ((*_1409_ta.alloc)._field_Binded == _13642_binded))) {
					return _1409_ta;;
				};
			}
		_iter_next_1abab17a1:;
		}
		_iter_end_1abab17a1:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abab2c36:;
			if (it != expr_end) {
				jule::Ptr<_1a7d1aea4_TypeAlias> _14616_ta = *it;
				{
					if ((((*(_14616_ta))._field_Ident == (*(_13630_ident))) && ((*_14616_ta.alloc)._field_Binded == _13642_binded))) {
						return _14616_ta;;
					};
				}
				_iter_next_1abab2c36:;
				++it;
				goto _iter_begin_1abab2c36;
			}
			_iter_end_1abab2c36:;
		};
	};
	return nullptr;;
}



inline jule::Any _1a7cd1de3_defByIdent(_1a7ccd9e4_SymbolTable* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abab3e9b:;
		if (it != expr_end) {
			jule::Ptr<_1a7c7b178_Var> _15815_v = *it;
			{
				if ((((*(_15815_v))._field_Ident == (*(_15727_ident))) && ((*_15815_v.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_15815_v, &__jule_any_type8);;
				};
			}
			_iter_next_1abab3e9b:;
			++it;
			goto _iter_begin_1abab3e9b;
		}
		_iter_end_1abab3e9b:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abab430e:;
		if (it != expr_end) {
			jule::Ptr<_1a7d1aea4_TypeAlias> _16415_ta = *it;
			{
				if ((((*(_16415_ta))._field_Ident == (*(_15727_ident))) && ((*_16415_ta.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_16415_ta, &__jule_any_type27);;
				};
			}
			_iter_next_1abab430e:;
			++it;
			goto _iter_begin_1abab430e;
		}
		_iter_end_1abab430e:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abab4b17:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba5ca6_Struct> _17015_s = *it;
			{
				if ((((*(_17015_s))._field_Ident == (*(_15727_ident))) && ((*_17015_s.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17015_s, &__jule_any_type23);;
				};
			}
			_iter_next_1abab4b17:;
			++it;
			goto _iter_begin_1abab4b17;
		}
		_iter_end_1abab4b17:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abab6278:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _17615_f = *it;
			{
				if ((((*(_17615_f))._field_Ident == (*(_15727_ident))) && ((*_17615_f.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17615_f, &__jule_any_type26);;
				};
			}
			_iter_next_1abab6278:;
			++it;
			goto _iter_begin_1abab6278;
		}
		_iter_end_1abab6278:;
	};
	if (_15739_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abab8038:;
		if (it != expr_end) {
			jule::Ptr<_1a7bce362_Trait> _18615_t = *it;
			{
				if (((*(_18615_t))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_18615_t, &__jule_any_type10);;
				};
			}
			_iter_next_1abab8038:;
			++it;
			goto _iter_begin_1abab8038;
		}
		_iter_end_1abab8038:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abab88a7:;
		if (it != expr_end) {
			jule::Ptr<_1a7bd1a6d_Enum> _19215_e = *it;
			{
				if (((*(_19215_e))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19215_e, &__jule_any_type24);;
				};
			}
			_iter_next_1abab88a7:;
			++it;
			goto _iter_begin_1abab88a7;
		}
		_iter_end_1abab88a7:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abab9578:;
		if (it != expr_end) {
			jule::Ptr<_1a7bd3278_TypeEnum> _19815_te = *it;
			{
				if (((*(_19815_te))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19815_te, &__jule_any_type25);;
				};
			}
			_iter_next_1abab9578:;
			++it;
			goto _iter_begin_1abab9578;
		}
		_iter_end_1abab9578:;
	};
	return nullptr;;
}



inline jule::Bool _1a7cd2399_isDuplicatedIdent(_1a7ccd9e4_SymbolTable* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ababaa74:;
		if (it != expr_end) {
			jule::Ptr<_1a7c7b178_Var> *_21110_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21110_v))) != _21029_itself) && ((*((*(_21110_v))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21110_v)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1ababaa74:;
			++it;
			goto _iter_begin_1ababaa74;
		}
		_iter_end_1ababaa74:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ababae1a:;
		if (it != expr_end) {
			jule::Ptr<_1a7d1aea4_TypeAlias> *_21710_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21710_ta))) != _21029_itself) && ((*((*(_21710_ta))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21710_ta)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1ababae1a:;
			++it;
			goto _iter_begin_1ababae1a;
		}
		_iter_end_1ababae1a:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ababb2d3:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba5ca6_Struct> *_22310_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22310_s))) != _21029_itself) && ((*((*(_22310_s))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22310_s)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1ababb2d3:;
			++it;
			goto _iter_begin_1ababb2d3;
		}
		_iter_end_1ababb2d3:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ababd37e:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> *_22910_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22910_f))) != _21029_itself) && ((*((*(_22910_f))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22910_f)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1ababd37e:;
			++it;
			goto _iter_begin_1ababd37e;
		}
		_iter_end_1ababd37e:;
	};
	if (_21059_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abac0804:;
		if (it != expr_end) {
			jule::Ptr<_1a7bce362_Trait> *_23910_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23910_t))) != _21029_itself) && ((*((*(_23910_t))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1abac0804:;
			++it;
			goto _iter_begin_1abac0804;
		}
		_iter_end_1abac0804:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abac089d:;
		if (it != expr_end) {
			jule::Ptr<_1a7bd1a6d_Enum> *_24510_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24510_e))) != _21029_itself) && ((*((*(_24510_e))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1abac089d:;
			++it;
			goto _iter_begin_1abac089d;
		}
		_iter_end_1abac089d:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abac189e:;
		if (it != expr_end) {
			jule::Ptr<_1a7bd3278_TypeEnum> *_25110_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_25110_te))) != _21029_itself) && ((*((*(_25110_te))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1abac189e:;
			++it;
			goto _iter_begin_1abac189e;
		}
		_iter_end_1abac189e:;
	};
	return false;;
}








inline jule::Bool _1a7cd41ae_Data_eq(_1a7cd41ae_Data *_self_, _1a7cd41ae_Data _other_) {
	return 
		(_self_->_field_untyped == _other_._field_untyped) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Lvalue == _self_->_field_Lvalue) &&
		(_self_->_field_IsRune == _self_->_field_IsRune) &&
		(_self_->_field_Model == _self_->_field_Model) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Constant == _self_->_field_Constant);
}

inline jule::Bool _1a7cd45cc_IsNil(_1a7cd41ae_Data* _self_) {
	return _1a7d1cdc9_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1a7cd4863_IsVoid(_1a7cd41ae_Data* _self_) {
	return _1a7d1d160_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1a7cd4ae9_IsConst(_1a7cd41ae_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1a7cd4e3a_GoodOperand(_1a7cd41ae_Data* _self_, jule::Ptr<_1a7cd41ae_Data>* _10628_other) {
	if ((_1a7d1ee86_TypeEnum((*((*(_10628_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1a7d1e44c_Prim((*((*(_10628_other))))._field_Kind) == nullptr) || (!(_1a7d28610_IsAny(_1a7d1e44c_Prim((*((*(_10628_other))))._field_Kind).ptr())))) && (_1a7d20c56_Trait((*((*(_10628_other))))._field_Kind) == nullptr)) && (!(_1a7d1cdc9_IsNil((*(_self_))._field_Kind))));;
}








inline jule::Bool _1a7cd5336_Value_eq(_1a7cd5336_Value *_self_, _1a7cd5336_Value _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Data == _self_->_field_Data);
}






inline jule::Bool _1a7cd5dd6_eval_eq(_1a7cd5dd6_eval *_self_, _1a7cd5dd6_eval _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_lookup == _self_->_field_lookup) &&
		(_self_->_field_prefix == _self_->_field_prefix) &&
		(_self_->_field_unsafety == _self_->_field_unsafety) &&
		(_self_->_field_immutable == _self_->_field_immutable) &&
		(_self_->_field_ignored == _self_->_field_ignored) &&
		(_self_->_field_disBuiltin == _self_->_field_disBuiltin) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_field == _self_->_field_field) &&
		(_self_->_field_arg == _self_->_field_arg);
}

inline void _1a7cd6469_pushErr(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _13723_token, jule::Str _13738_fmt, jule::Slice<jule::Any> _13751_args) {
	_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), _13723_token, _13738_fmt, _13751_args);
}



inline void _1a7cd67cc_pushSuggestion(_1a7cd5dd6_eval* _self_, jule::Str _14230_fmt, jule::Slice<jule::Any> _14243_args) {
	_1a7c59e7b_pushSuggestion((*(_self_))._field_s.ptr(), _14230_fmt, _14243_args);
}



inline void _1a7cd69ca_allowBuiltin(_1a7cd5dd6_eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1a7cd6bc8_disallowBuiltin(_1a7cd5dd6_eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1a7cd6e5e_isUnsafe(_1a7cd5dd6_eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1a7cd71e5_isGlobal(_1a7cd5dd6_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3)) {
			_case_begin_1abb32beb:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1abb33108:;
			{
				return false;;
			}
		}
		_match_end_1abb33092:;
	};
}



inline jule::Bool _1a7cd7503_applyNumericPrefix(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _16939_d) {
	if ((((((*(_16939_d)) == nullptr) || (!(_1a7cd4ae9_IsConst((*(_16939_d)).ptr())))) || (_1a7d1e44c_Prim((*((*(_16939_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1a7d24dae_Prim> _1763_prim = _1a7d1e44c_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1763_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1c0069b36_IsFloat(_1a7d25233_Str(_1763_prim.ptr()))) {
			_case_begin_1abb3576a:;
			{
				(*((*(_16939_d))))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>((*((*(_self_))._field_prefix)));
				_1c006ded1_SetF64((*((*(_16939_d))))._field_Constant.ptr(), _1c006d156_AsF64((*((*(_16939_d))))._field_Constant));
				(*(*((*(_16939_d))))._field_Constant.alloc)._field_Kind=(*(_1763_prim))._field_Kind;
			}
		}
		else if (_1c006921d_IsSigInt(_1a7d25233_Str(_1763_prim.ptr()))) {
			_case_begin_1abb357d1:;
			{
				if ((!(_1a7cb9c22_sigAssignable(_1a7d25233_Str(_1763_prim.ptr()), _16939_d)))) {
					return false;;
				};
				(*((*(_16939_d))))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>((*((*(_self_))._field_prefix)));
				_1c006d40e_SetI64((*((*(_16939_d))))._field_Constant.ptr(), _1c006cb39_AsI64((*((*(_16939_d))))._field_Constant));
				(*(*((*(_16939_d))))._field_Constant.alloc)._field_Kind=(*(_1763_prim))._field_Kind;
			}
		}
		else if (_1c006952b_IsUnsigInt(_1a7d25233_Str(_1763_prim.ptr()))) {
			_case_begin_1abb35847:;
			{
				if ((!(_1a7cba0da_unsigAssignable(_1a7d25233_Str(_1763_prim.ptr()), _16939_d)))) {
					return false;;
				};
				(*((*(_16939_d))))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>((*((*(_self_))._field_prefix)));
				_1c006d6b7_SetU64((*((*(_16939_d))))._field_Constant.ptr(), _1c006cdc0_AsU64((*((*(_16939_d))))._field_Constant));
				(*(*((*(_16939_d))))._field_Constant.alloc)._field_Kind=(*(_1763_prim))._field_Kind;
			}
		}
		_match_end_1abb3567c:;
	};
	return true;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7cd7844_litStr(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b8a1db_LitExpr>* _20419_l) {
	jule::Str _2057_s = jule::Str();;
	if (_1a7b6aee1_IsRawStr((*((*(_20419_l))))._field_Value)) {
		_2057_s=_1a7cb7e73_ToRawStr((*((*(_20419_l))))._field_Value);
	} else {
		_2057_s=_1a7cb82b4_ToStr((*((*(_20419_l))))._field_Value);
	};
	jule::Ptr<_1c006a461_Const> _2117_constant = static__1c006b231_NewStr(_2057_s);;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e01d7b_primStr, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_2117_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_2117_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7cd7b85_litRune(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b8a1db_LitExpr>* _22120_l) {
	jule::I32 _2223_r = _1a7cb7c64_ToRune((*((*(_22120_l))))._field_Value);;
	jule::Ptr<_1a7cd41ae_Data> _2237_data = jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1c006a8d4_NewI64(static_cast<jule::I64>(_2223_r))});;
	if ((_2223_r <= 255LL)) {
		(*(_2237_data))._field_Kind=_1a7e03861_primU8;
	} else {
		(*(_2237_data))._field_Kind=_1a7e03300_primI32;
	};
	(*(_2237_data))._field_Model=jule::Any(jule::new_ptr<_1a7bb725c_RuneExprModel>(_1a7bb725c_RuneExprModel{._field_Code=_2223_r}), &__jule_any_type86);
	(*_2237_data.alloc)._field_Mutable=true;
	(*_2237_data.alloc)._field_IsRune=true;
	(*_2237_data.alloc)._field_untyped=true;
	return _2237_data;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7cd7ec6_litFloat(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b8a1db_LitExpr>* _24021_l) {
	jule::F64 _2413_f = ({
		auto except = _1c0052349_ParseFloat((*((*(_24021_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1c006a461_Const> _2427_constant = static__1c006b4ea_NewF64(_2413_f);;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=true, ._field_Kind=_1a7e0480c_primF64, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_2427_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_2427_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7cd8317_litInt(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b8a1db_LitExpr>* _25223_l) {
	;
	jule::Str _2557_lit = (*((*(_25223_l))))._field_Value;;
	jule::I64 _2567_base = 0LL;;
	{
		
		if (_1daebc991_HasPrefix(_2557_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1abb47bab:;
			{
				(_2557_lit).mut_slice(2LL);;
				_2567_base=16LLU;
			}
		}
		else if (_1daebc991_HasPrefix(_2557_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1abb47c99:;
			{
				(_2557_lit).mut_slice(2LL);;
				_2567_base=2LLU;
			}
		}
		else if (_1daebc991_HasPrefix(_2557_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1abb47859:;
			{
				(_2557_lit).mut_slice(2LL);;
				_2567_base=8LLU;
			}
		}
		else if (((_2557_lit[0LL] == '0') && (_2557_lit.len() > 1LL))) {
			_case_begin_1abb478c0:;
			{
				(_2557_lit).mut_slice(1LL);;
				_2567_base=8LLU;
			}
		}
		else {
			_case_begin_1abb477e3:;
			{
				_2567_base=10LLU;
			}
		}
		_match_end_1abb4776b:;
	};
	jule::Ptr<_1a7cd41ae_Data> _2767_d = jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
	jule::Bool _2787_ok = true;;
	jule::I64 _2793_sig = ({
		auto except = _1c004aa29_ParseInt(_2557_lit, _2567_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_2787_ok=false;

			0LL;
		});
	});;
	if (_2787_ok) {
		(*_2767_d.alloc)._field_Constant=static__1c006a8d4_NewI64(_2793_sig);
		(*_2767_d.alloc)._field_Kind=_1a7e02a5d_primInt;
	} else {
		jule::U64 _2874_unsig = ({
			auto except = _1c004a573_ParseUint(_2557_lit, _2567_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1a7cd6469_pushErr(_self_, (*((*(_25223_l))))._field_Token, static_cast<jule::Str>(jule::Str::lit("arithmetic value overflow: this value too big", 45)), jule::Slice<jule::Any>());
				_1a7cd67cc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("floating-point literals may solve your problem", 46)), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_2767_d.alloc)._field_Constant=static__1c006ab9d_NewU64(_2874_unsig);
		(*_2767_d.alloc)._field_Kind=_1a7e02695_primUint;
	};
	(*_2767_d.alloc)._field_Model=jule::Any((*_2767_d.alloc)._field_Constant, &__jule_any_type20);
	(*_2767_d.alloc)._field_untyped=true;
	if ((!(_1a7cd7503_applyNumericPrefix(_self_, &(_2767_d))))) {
		_1a7d13b17_fitBitsize(&(_2767_d));
	};
	return _2767_d;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7cd8658_litNum(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b8a1db_LitExpr>* _30723_l) {
	{
		
		if (_1a7b6bb90_IsFloat((*((*(_30723_l))))._field_Value)) {
			_case_begin_1abb4ed28:;
			{
				return _1a7cd7ec6_litFloat(_self_, _30723_l);;
			}
		}
		else {
			_case_begin_1abb4ecb2:;
			{
				return _1a7cd8317_litInt(_self_, _30723_l);;
			}
		}
		_match_end_1abb4eba2:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7cd8999_evalLit(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b8a1db_LitExpr> _31623_lit) {
	{
		
		if (_1a7b6ac5a_IsStr((*(_31623_lit))._field_Value)) {
			_case_begin_1abb51049:;
			{
				return _1a7cd7844_litStr(_self_, &(_31623_lit));;
			}
		}
		else if (_1a7b6b2aa_IsRune((*(_31623_lit))._field_Value)) {
			_case_begin_1abb510b0:;
			{
				return _1a7cd7b85_litRune(_self_, &(_31623_lit));;
			}
		}
		else if (_1a7b6be59_IsNum((*(_31623_lit))._field_Value)) {
			_case_begin_1abb51126:;
			{
				return _1a7cd8658_litNum(_self_, &(_31623_lit));;
			}
		}
		else {
			_case_begin_1abb5093e:;
			{
				return nullptr;;
			}
		}
		_match_end_1abb5082e:;
	};
}



inline jule::Any _1a7cd8cda_findBuiltins(_1a7cd5dd6_eval* _self_, jule::Str* _32929_ident) {
	if (_1a7c53c00_IsPub((*(_32929_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data1)) {
				_case_begin_1abb533ae:;
				{
					jule::Any _3339_def = _1a7d138d6_findBuiltinsImport(_32929_ident, (*(_self_))._field_lookup.cast_ptr<_1a7c36793_ImportInfo>((jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data1));;
					if ((_3339_def != nullptr)) {
						return _3339_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3)) {
				_case_begin_1abb53106:;
				{
					jule::Any _3389_def = _1a7d14640_findBuiltinsSema(_32929_ident, (*(_self_))._field_lookup.cast_ptr<_1a7c56c14_sema>((jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3));;
					if ((_3389_def != nullptr)) {
						return _3389_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0)) {
				_case_begin_1abb53425:;
				{
					jule::Any _3439_def = _1a7d14640_findBuiltinsSema(_32929_ident, (*((*(_self_))._field_lookup.cast_ptr<_1a7c1ac1c_scopeChecker>((jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0)))._field_s);;
					if ((_3439_def != nullptr)) {
						return _3439_def;;
					};
				}
			}
			_match_end_1abb53304:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1a7e05148_findBuiltinDef(_32929_ident);;
}



inline jule::Any _1a7cd91d6_getDef(_1a7cd5dd6_eval* _self_, jule::Str* _35623_ident, jule::Bool _35635_binded) {
	jule::Ptr<_1a7c7b178_Var> _3617_v = ((_1a7d3c448_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7d3ab2d_FindVar((*(_self_))._field_lookup.data, (*(_35623_ident)), _35635_binded);;
	if ((_3617_v != nullptr)) {
		return jule::Any(_3617_v, &__jule_any_type8);;
	};
	jule::Ptr<_1a7d1aea4_TypeAlias> _3667_ta = ((_1a7d3c448_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7d3b029_FindTypeAlias((*(_self_))._field_lookup.data, (*(_35623_ident)), _35635_binded);;
	if ((_3667_ta != nullptr)) {
		return jule::Any(_3667_ta, &__jule_any_type27);;
	};
	if ((!(_35635_binded))) {
		jule::Ptr<_1a7bd1a6d_Enum> _3728_enm = ((_1a7d3c448_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7d3bea3_FindEnum((*(_self_))._field_lookup.data, (*(_35623_ident)));;
		if ((_3728_enm != nullptr)) {
			return jule::Any(_3728_enm, &__jule_any_type24);;
		};
		jule::Ptr<_1a7bd3278_TypeEnum> _3778_tenm = ((_1a7d3c448_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7d3c2e4_FindTypeEnum((*(_self_))._field_lookup.data, (*(_35623_ident)));;
		if ((_3778_tenm != nullptr)) {
			return jule::Any(_3778_tenm, &__jule_any_type25);;
		};
	};
	jule::Ptr<_1a7bba8d1_Fn> _3837_f = ((_1a7d3c448_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7d3b821_FindFn((*(_self_))._field_lookup.data, (*(_35623_ident)), _35635_binded);;
	if ((_3837_f != nullptr)) {
		return jule::Any(_3837_f, &__jule_any_type26);;
	};
	jule::Ptr<_1a7ba5ca6_Struct> _3887_s = ((_1a7d3c448_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7d3b425_FindStruct((*(_self_))._field_lookup.data, (*(_35623_ident)), _35635_binded);;
	if ((_3887_s != nullptr)) {
		return jule::Any(_3887_s, &__jule_any_type23);;
	};
	return _1a7cd8cda_findBuiltins(_self_, _35623_ident);;
}



inline jule::Ptr<_1a7bc1a4c_ReferenceStack> _1a7cd946c_getOwnerRefers(_1a7cd5dd6_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0)) {
			_case_begin_1abb5c8d5:;
			{
				return _1a7c1e616_getOwnerRefers((*(_self_))._field_lookup.cast_ptr<_1a7c1ac1c_scopeChecker>((jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0));;
			}
		}
		else {
			_case_begin_1abb5b274:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
				if (((*(_self_))._field_field != nullptr)) {
					return (*((*(*(_self_))._field_field.alloc)._field_Owner))._field_Refers;;
				};
			}
		}
		_match_end_1abb5b20d:;
	};
	return nullptr;;
}



inline void _1abb75876_pushReference(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _41437_ref) {
	jule::Ptr<_1a7bc1a4c_ReferenceStack> _4157_refers = _1a7cd946c_getOwnerRefers(_self_);;
	if (((_4157_refers != nullptr) && (!(_1abb77d1d_Exist(_4157_refers, (*(_41437_ref))))))) {
		_1a7bc2861_Push(_4157_refers, jule::Any((*(_41437_ref)), &__jule_any_type7));
	};
}

inline void _1abb8bbbc_pushReference(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7c7b178_Var>* _41437_ref) {
	jule::Ptr<_1a7bc1a4c_ReferenceStack> _4157_refers = _1a7cd946c_getOwnerRefers(_self_);;
	if (((_4157_refers != nullptr) && (!(_1abb8e010_Exist(_4157_refers, (*(_41437_ref))))))) {
		_1a7bc2861_Push(_4157_refers, jule::Any((*(_41437_ref)), &__jule_any_type8));
	};
}

inline void _1aa7c5928_pushReference(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7ba8b11_StructIns>* _41437_ref) {
	jule::Ptr<_1a7bc1a4c_ReferenceStack> _4157_refers = _1a7cd946c_getOwnerRefers(_self_);;
	if (((_4157_refers != nullptr) && (!(_1aa7c808a_Exist(_4157_refers, (*(_41437_ref))))))) {
		_1a7bc2861_Push(_4157_refers, jule::Any((*(_41437_ref)), &__jule_any_type9));
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7cd9a66__evalEnum(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bd1a6d_Enum> _42125_enm) {
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_42125_enm, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7cd9e62_evalEnum(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bd1a6d_Enum> _43028_enm, jule::Ptr<_1a7b69b05_Token> _43040_errorToken) {
	if ((!(_1a7c5a377_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_43028_enm))._field_Public, (*_43028_enm.alloc)._field_Token)))) {
		_1a7cd6469_pushErr(_self_, _43040_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_43028_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1a7cd67cc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a7cd9a66__evalEnum(_self_, _43028_enm);;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7cda2a3__evalTypeEnum(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bd3278_TypeEnum> _43929_enm) {
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_43929_enm, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data4)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7cda69e_evalTypeEnum(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bd3278_TypeEnum> _44832_enm, jule::Ptr<_1a7b69b05_Token> _44848_errorToken) {
	if ((!(_1a7c5a377_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44832_enm))._field_Public, (*_44832_enm.alloc)._field_Token)))) {
		_1a7cd6469_pushErr(_self_, _44848_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_44832_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1a7cd67cc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a7cda2a3__evalTypeEnum(_self_, _44832_enm);;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7cda9e0__evalStruct(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7ba8b11_StructIns> _45727_s) {
	jule::Ptr<_1a7cd41ae_Data> _4587_d = jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_45727_s, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data0)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_45727_s, &__jule_any_type9), ._field_Decl=true, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
	if ((((*(_45727_s))._field_Decl != nullptr) && (*(*(_45727_s))._field_Decl.alloc)._field_Binded)) {
		(*((*(_4587_d))._field_Kind))._field_BindIdent=(*(*(_45727_s))._field_Decl.alloc)._field_Ident;
	};
	return _4587_d;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7cdaddb_evalStruct(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7ba5ca6_Struct> _47130_s, jule::Ptr<_1a7b69b05_Token> _47146_errorToken) {
	if ((!(_1a7c5a377_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_47130_s))._field_Public, (*_47130_s.alloc)._field_Token)))) {
		_1a7cd6469_pushErr(_self_, _47146_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_47130_s.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1a7cd67cc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a7ce13ec_checkDeprecated(_self_, &((*_47130_s.alloc)._field_Directives), _47146_errorToken);
	jule::Ptr<_1a7ba8b11_StructIns> _4807_ins = _1a7ba624b_instance(_47130_s);;
	if (((*_47130_s.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1a7ba8b11_StructIns> _4878_exist = _1a7ba6559_appendInstance(_47130_s, &(_4807_ins));;
		if ((_4878_exist != nullptr)) {
			_4807_ins=_4878_exist;
		} else {
			if ((!(_1a7c74308_precheckStructIns((*(_self_))._field_s, &(_4807_ins), _47146_errorToken)))) {
				return nullptr;;
			};
		};
	};
	return _1a7cda9e0__evalStruct(_self_, _4807_ins);;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7cdb22c_evalFnIns(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bbd8b2_FnIns> _50025_f) {
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_50025_f, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_50025_f, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline void _1a7ce13ec_checkDeprecated(_1a7cd5dd6_eval* _self_, jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>* _50936_directives, jule::Ptr<_1a7b69b05_Token> _50967_tok) {
	if (_1a7cd6e5e_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1a7b7e4cc_Directive> _5143_d = _1a7d1351d_findDirective(_50936_directives, static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
	if ((_5143_d != nullptr)) {
		if (((*_5143_d.alloc)._field_Args.len() == 0LL)) {
			_1a7cd6469_pushErr(_self_, _50967_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type4); __jule_collection; }));
		} else {
			_1a7cd6469_pushErr(_self_, _50967_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_5143_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type4); __jule_collection; }));
		};
		_1a7cd67cc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60)), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7ce17e8_evalFn(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bba8d1_Fn> _52526_f, jule::Ptr<_1a7b69b05_Token> _52534_errorToken) {
	if ((!(_1a7c5a377_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_52526_f))._field_Public, (*_52526_f.alloc)._field_Token)))) {
		_1a7cd6469_pushErr(_self_, _52534_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_52526_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1a7cd67cc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a7ce13ec_checkDeprecated(_self_, &((*_52526_f.alloc)._field_Directives), _52534_errorToken);
	jule::Ptr<_1a7bbd8b2_FnIns> _5347_ins = _1a7bbc174_instance(_52526_f);;
	if (((*_52526_f.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1a7bbd8b2_FnIns> _5418_exist = _1a7bbc482_appendInstance(_52526_f, &(_5347_ins));;
		if ((_5418_exist != nullptr)) {
			_5347_ins=_5418_exist;
		};
	};
	_1abb75876_pushReference(_self_, &(_5347_ins));
	return _1a7cdb22c_evalFnIns(_self_, _5347_ins);;
}



inline void _1a7ce1c16_pushIllegalCycleError(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7c7b178_Var>* _55038_v1, jule::Ptr<_1a7c7b178_Var>* _55049_v2, _1daed18b7_StrBuilder* _55064_message) {
	;
	jule::Str _5523_refers_to = _1d9145027_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_55038_v1))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*((*(_55049_v2))))._field_Ident, &__jule_any_type4); __jule_collection; }));;
	jule::Slice<jule::U8> _5533_buf = _1daedb95a_Buf(_55064_message);;
	_1daeda6b2_WriteStr(_55064_message, _1daebc5c8_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1daeda6b2_WriteStr(_55064_message, _5523_refers_to);
	_1daeda96a_WriteByte(_55064_message, '\n');
	_1daeda409_Write(_55064_message, _5533_buf);
}



inline jule::Bool _1a7ce2112_checkCrossCycle(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7c7b178_Var>* _56032_v, _1daed18b7_StrBuilder* _56046_message) {
	{
		auto expr = &((*((*(_56032_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb7c1da:;
		if (it != expr_end) {
			jule::Ptr<_1a7c7b178_Var> *_56110_d = it;
			{
				if (((*(_56110_d)) == (*(_self_))._field_owner)) {
					_1a7ce1c16_pushIllegalCycleError(_self_, _56032_v, _56110_d, _56046_message);
					return false;;
				};
				if ((!(_1a7ce2112_checkCrossCycle(_self_, _56110_d, _56046_message)))) {
					_1a7ce1c16_pushIllegalCycleError(_self_, _56032_v, _56110_d, _56046_message);
					return false;;
				};
			}
			_iter_next_1abb7c1da:;
			++it;
			goto _iter_begin_1abb7c1da;
		}
		_iter_end_1abb7c1da:;
	};
	return true;;
}



inline jule::Bool _1a7ce250d_checkIllegalCycles(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7c7b178_Var>* _57739_v, jule::Ptr<_1a7b69b05_Token> _57748_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_57739_v)))) {
		_1a7cd6469_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1daed18b7_StrBuilder _5907_message = static__1daed1bb4_New(32LL);;
	if ((!(_1a7ce2112_checkCrossCycle(_self_, _57739_v, &(_5907_message))))) {
		jule::Str _5938_errMsg = _1daedaea9_Str(&_5907_message);;
		_1daedb1a7_Clear(&_5907_message);
		_1a7ce1c16_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _57739_v, &(_5907_message));
		_5938_errMsg+=_1daedaea9_Str(&_5907_message);
		_1a7cd6469_pushErr(_self_, _57748_declToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5938_errMsg, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1a7c7b178_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_57739_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7ce2909_evalVar(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7c7b178_Var> _60527_v, jule::Ptr<_1a7b69b05_Token> _60536_errorToken) {
	if ((!(_1a7c5a377_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_60527_v))._field_Public, (*_60527_v.alloc)._field_Token)))) {
		_1a7cd6469_pushErr(_self_, _60536_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_60527_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1a7cd67cc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a7ce13ec_checkDeprecated(_self_, &((*_60527_v.alloc)._field_Directives), _60536_errorToken);
	if (((*_60527_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_1abb94356;
	};
	(*_60527_v.alloc)._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3)) {
			_case_begin_1abb85e6e:;
			{
				jule::Bool _6244_ok = _1a7ce250d_checkIllegalCycles(_self_, &(_60527_v), _60536_errorToken);;
				if ((!(_6244_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0)) {
			_case_begin_1abb85523:;
			{
				jule::Ptr<_1a7c1ac1c_scopeChecker> _6298_s = (*(_self_))._field_lookup.cast_ptr<_1a7c1ac1c_scopeChecker>((jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0);;
				jule::Ptr<_1a7c1ac1c_scopeChecker> _6308_root = _1a7c1e0e9_getRoot(_6298_s);;
				if ((((*(_6308_root))._field_captured != nullptr) && _1a7d19348_isVarCaptured(_6308_root, _6298_s, _60527_v))) {
					_1a7c1dd63_pushCaptured(_6308_root, &(_60527_v));
				};
				if (((!((*_60527_v.alloc)._field_Reference)) || _1a7cd6e5e_isUnsafe(_self_))) {
					goto _match_end_1abb85dd6;
				};
				while ((((*_6298_s.alloc)._field_owner == nullptr) && ((*_6298_s.alloc)._field_parent != nullptr))) {
					{
						_6298_s=(*_6298_s.alloc)._field_parent;
					}
				_iter_next_1abb89280:;
				}
				_iter_end_1abb89280:;;
				if (((((*_6298_s.alloc)._field_owner != nullptr) && (*((*_6298_s.alloc)._field_owner))._field_Anon) && ((*_60527_v.alloc)._field_Scope != (*((*_6298_s.alloc)._field_owner))._field_Scope))) {
					_1a7cd6469_pushErr(_self_, _60536_errorToken, static_cast<jule::Str>(jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_60527_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		_match_end_1abb85dd6:;
	};
	if (((*_60527_v.alloc)._field_Scope == nullptr)) {
		_1abb8bbbc_pushReference(_self_, &(_60527_v));
	};
	if (((((!((*_60527_v.alloc)._field_Binded)) && (*_60527_v.alloc)._field_Constant) && ((*_60527_v.alloc)._field_Scope == nullptr)) && (((*_60527_v.alloc)._field_Value == nullptr) || ((*((*_60527_v.alloc)._field_Value))._field_Data == nullptr)))) {
		jule::Ptr<_1a7ccd9e4_SymbolTable> _6568_varfile = _1a7c3384a_findVarFileInPackage(&((*(*(_self_))._field_s.alloc)._field_files), &(_60527_v));;
		jule::Ptr<_1a7ccd9e4_SymbolTable> _6578_file = _1a7c59442_getCurrentFile((*(_self_))._field_s);;
		_1a7c596ea_setCurrentFile((*(_self_))._field_s, _6568_varfile);
		_1a7c72702_checkVar((*(_self_))._field_s, &(_60527_v), jule::Trait((*(_self_))._field_s, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3));
		_1a7c596ea_setCurrentFile((*(_self_))._field_s, _6578_file);
		if ((((*_60527_v.alloc)._field_Value == nullptr) || ((*((*_60527_v.alloc)._field_Value))._field_Data == nullptr))) {
			return nullptr;;
		};
	};
	if ((((*_60527_v.alloc)._field_Kind == nullptr) || ((*((*_60527_v.alloc)._field_Kind))._field_Kind == nullptr))) {
		if (((*_60527_v.alloc)._field_Scope != nullptr)) {
			return nullptr;;
		};
		jule::Ptr<_1a7ccd9e4_SymbolTable> _6868_varfile = _1a7c3384a_findVarFileInPackage(&((*(*(_self_))._field_s.alloc)._field_files), &(_60527_v));;
		jule::Ptr<_1a7ccd9e4_SymbolTable> _6878_file = _1a7c59442_getCurrentFile((*(_self_))._field_s);;
		_1a7c596ea_setCurrentFile((*(_self_))._field_s, _6868_varfile);
		_1a7c72702_checkVar((*(_self_))._field_s, &(_60527_v), (*(_self_))._field_lookup);
		_1a7c596ea_setCurrentFile((*(_self_))._field_s, _6878_file);
		if ((((*_60527_v.alloc)._field_Kind == nullptr) || ((*((*_60527_v.alloc)._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1abb94356:;
	jule::Ptr<_1a7cd41ae_Data> _7027_d = jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=(*((*_60527_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_60527_v.alloc)._field_Mutable, ._field_Reference=(*_60527_v.alloc)._field_Reference, ._field_Lvalue=(!((*_60527_v.alloc)._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_60527_v, &__jule_any_type8), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
	if ((((!((*_60527_v.alloc)._field_Binded)) && _1a7c7b585_IsInitialized(_60527_v)) && ((*((*_60527_v.alloc)._field_Value))._field_Data != nullptr))) {
		(*(_7027_d))._field_IsRune=(*((*((*_60527_v.alloc)._field_Value))._field_Data))._field_IsRune;
	};
	if (((*_60527_v.alloc)._field_Constant && ((*((*((*_60527_v.alloc)._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*_7027_d.alloc)._field_Constant=jule::new_ptr<_1c006a461_Const>((*(*((*((*(_60527_v))._field_Value))._field_Data))._field_Constant.alloc));
		(*_7027_d.alloc)._field_Model=jule::Any((*_7027_d.alloc)._field_Constant, &__jule_any_type20);
		if (_1a7c7baa2_untypedConstant(_60527_v)) {
			_1a7cd7503_applyNumericPrefix(_self_, &(_7027_d));
			(*_7027_d.alloc)._field_untyped=true;
		};
	};
	return _7027_d;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7ce2d05_evalTypeAlias(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7d1aea4_TypeAlias> _72633_ta, jule::Ptr<_1a7b69b05_Token> _72649_errorToken) {
	if ((!(_1a7c5a377_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_72633_ta))._field_Public, (*_72633_ta.alloc)._field_Token)))) {
		_1a7cd6469_pushErr(_self_, _72649_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_72633_ta.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1a7cd67cc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_72633_ta.alloc)._field_Used=true;
	jule::Trait _7357_kind = (*((*((*_72633_ta.alloc)._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1a7cd41ae_Data> _73611_d = nullptr;;
	{
		auto &_match_expr{ _7357_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data0)) {
			_case_begin_1abba2793:;
			{
				_73611_d=_1a7cda9e0__evalStruct(_self_, _7357_kind.cast_ptr<_1a7ba8b11_StructIns>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data0));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data3)) {
			_case_begin_1abba5565:;
			{
				_73611_d=_1a7cd9a66__evalEnum(_self_, _7357_kind.cast_ptr<_1a7bd1a6d_Enum>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data3));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data4)) {
			_case_begin_1abba59e9:;
			{
				_73611_d=_1a7cda2a3__evalTypeEnum(_self_, _7357_kind.cast_ptr<_1a7bd3278_TypeEnum>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data4));
			}
		}
		else {
			_case_begin_1abba1198:;
			{
				_73611_d=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_72633_ta))._field_Kind))._field_Kind.alloc)._field_Kind}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});
				if ((*_72633_ta.alloc)._field_Binded) {
					(*((*(_73611_d))._field_Kind))._field_BindIdent=(*_72633_ta.alloc)._field_Ident;
				} else {
					(*((*(_73611_d))._field_Kind))._field_BindIdent=(*(*((*(_72633_ta))._field_Kind))._field_Kind.alloc)._field_BindIdent;
				};
				(*(_73611_d))._field_Model=jule::Any((*_73611_d.alloc)._field_Kind, &__jule_any_type87);
			}
		}
		_match_end_1abba1022:;
	};
	(*((*(_73611_d))._field_Kind))._field_Generic=(*_72633_ta.alloc)._field_Generic;
	return _73611_d;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7ce3201_evalDef(_1a7cd5dd6_eval* _self_, jule::Any* _76528_def, jule::Ptr<_1a7b69b05_Token> _76542_ident) {
	{
		auto &_match_expr{ (*(_76528_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1abba91a1:;
			{
				return _1a7ce2909_evalVar(_self_, (*(_76528_def)).cast_ptr<_1a7c7b178_Var>(&__jule_any_type8), _76542_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1abba8e70:;
			{
				return _1a7cd9e62_evalEnum(_self_, (*(_76528_def)).cast_ptr<_1a7bd1a6d_Enum>(&__jule_any_type24), _76542_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1abba9217:;
			{
				return _1a7cda69e_evalTypeEnum(_self_, (*(_76528_def)).cast_ptr<_1a7bd3278_TypeEnum>(&__jule_any_type25), _76542_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1abba927d:;
			{
				return _1a7cdaddb_evalStruct(_self_, (*(_76528_def)).cast_ptr<_1a7ba5ca6_Struct>(&__jule_any_type23), _76542_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1abba92e4:;
			{
				jule::Ptr<_1a7bba8d1_Fn> _7768_f = (*(_76528_def)).cast_ptr<_1a7bba8d1_Fn>(&__jule_any_type26);;
				if ((!(*(_7768_f))._field_Ident.equal("init", 4))) {
					return _1a7ce17e8_evalFn(_self_, _7768_f, _76542_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1abba936b:;
			{
				return _1a7cdb22c_evalFnIns(_self_, (*(_76528_def)).cast_ptr<_1a7bbd8b2_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1abba93e3:;
			{
				return _1a7ce2d05_evalTypeAlias(_self_, (*(_76528_def)).cast_ptr<_1a7d1aea4_TypeAlias>(&__jule_any_type27), _76542_ident);;
			}
		}
		_match_end_1abba90a2:;
	};
	_1a7cd6469_pushErr(_self_, _76542_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_76542_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7ce3542_evalIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b8aa6b_IdentExpr> _78929_ident) {
	jule::Any _7907_def = _1a7cd91d6_getDef(_self_, &((*(_78929_ident))._field_Ident), (*_78929_ident.alloc)._field_Binded);;
	return _1a7ce3201_evalDef(_self_, &(_7907_def), (*_78929_ident.alloc)._field_Token);;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7ce3883_evalUnary(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8b30d_UnaryExpr> _79430_u) {
	_1a7d0a03c_unaryEval _7957_unary = static__1a7d0a4b0_new(_self_);;
	return _1a7d0b8e0_eval(&_7957_unary, _79430_u);;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7ce3bc4_evalVariadic(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8b6d7_VariadicExpr> _79933_v) {
	if (((*(_79933_v))._field_Expr == nullptr)) {
		_1a7cd6469_pushErr(_self_.ptr(), (*_79933_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7d1bc96_TypeKind> _8057_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_8057_prefix;
	});;
	jule::Ptr<_1a7cd41ae_Data> _8097_d = _1a7d09aa8_evalExpr(_self_, (*_79933_v.alloc)._field_Expr);;
	if ((_8097_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a7d1e1b6_Variadicable((*(_8097_d))._field_Kind.ptr())))) {
		_1a7cd6469_pushErr(_self_, (*_79933_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_8097_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_1a7d18e19_makeVariadic(&(_8097_d), (*(_1a7d204a3_Slc((*(_8097_d))._field_Kind)))._field_Elem);
	return _8097_d;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7ce4015_evalUnsafe(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8a5b5_UnsafeExpr> _82131_u) {
	jule::Bool _8223_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_1a7cd41ae_Data> _8247_d = _1a7d09aa8_evalExpr(_self_, (*(_82131_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_8223_unsafety;
	return _8247_d;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7ce4356_evalArr(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b907a7_SliceExpr> _82928_s) {
	jule::Ptr<_1a7d2b6ce_Arr> _8317_pt = _1a7d2021c_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1a7d2b6ce_Arr> _8337_arr = jule::new_ptr<_1a7d2b6ce_Arr>(_1a7d2b6ce_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_8317_pt))._field_Elem});;
	jule::Bool _8397_filled = false;;
	if (((*(_82928_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_82928_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type79) {
				_case_begin_1abbb95ac:;
				{
					if (((*((*((*(_82928_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_1a7b8b6d7_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_1abbb9502;
					};
					if ((*_8317_pt.alloc)._field_Auto) {
						_1a7cd6469_pushErr(_self_, (*_82928_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("auto-sized arrays cannot filled", 31)), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_8397_filled=true;
					((*(_82928_s))._field_Exprs).mut_slice(0LL, 1LL);;
				}
			}
			_match_end_1abbb9502:;
		};
	};
	(*(_8337_arr))._field_N=(*_82928_s.alloc)._field_Exprs.len();
	if ((!((*_8317_pt.alloc)._field_Auto))) {
		if (((*_8337_arr.alloc)._field_N > (*_8317_pt.alloc)._field_N)) {
			_1a7cd6469_pushErr(_self_, (*_82928_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else if (((*_8337_arr.alloc)._field_N < (*_8317_pt.alloc)._field_N)) {
			(*_8337_arr.alloc)._field_N=(*_8317_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_1a7bb3214_ArrayExprModel> _8687_model = jule::new_ptr<_1a7bb3214_ArrayExprModel>(_1a7bb3214_ArrayExprModel{._field_Kind=_8337_arr, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	if (_8397_filled) {
		(*(_8687_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 2LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	} else {
		(*(_8687_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*_82928_s.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	};
	jule::Ptr<_1a7d1bc96_TypeKind> _8777_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_8337_arr.alloc)._field_Elem;
	{
		auto expr = &((*_82928_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbc15a3:;
		if (it != expr_end) {
			jule::Ptr<_1a7b89251_Expr> _87915_elem = *it;
			{
				jule::Ptr<_1a7cd41ae_Data> _8808_d = _1a7d09aa8_evalExpr(_self_, _87915_elem);;
				if ((_8808_d == nullptr)) {
					goto _iter_next_1abbc15a3;
				};
				;
				if (_1a7c6741c_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_8337_arr.alloc)._field_Elem), &(_8808_d), &((*(_87915_elem))._field_Token))) {
					_1a7c62b87_checkAssignType((*(_self_))._field_s, false, &((*_8337_arr.alloc)._field_Elem), &(_8808_d), (*_87915_elem.alloc)._field_Token, _1a7cd946c_getOwnerRefers(_self_));
				};
				(*(_8687_model))._field_Elems=jule::append((*_8687_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8808_d))._field_Model; __jule_collection; }));
			}
			_iter_next_1abbc15a3:;
			++it;
			goto _iter_begin_1abbc15a3;
		}
		_iter_end_1abbc15a3:;
	};
	(*_self_.alloc)._field_prefix=_8777_prefix;
	if (_8397_filled) {
		(*_8687_model.alloc)._field_Elems=jule::append((*_8687_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = nullptr; __jule_collection; }));
	};
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8337_arr, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data27)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8687_model, &__jule_any_type88), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7ce480c_evalExpSlc(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b907a7_SliceExpr> _90631_s, jule::Ptr<_1a7d1bc96_TypeKind> _90650_t, jule::Any _90668_first) {
	jule::Ptr<_1a7d293ad_Slc> _9077_slc = jule::new_ptr<_1a7d293ad_Slc>(_1a7d293ad_Slc{._field_Elem=_90650_t});;
	jule::I64 _9117_i = 0LL;;
	jule::Ptr<_1a7bb02cc_SliceExprModel> _9127_model = jule::new_ptr<_1a7bb02cc_SliceExprModel>(_1a7bb02cc_SliceExprModel{._field_ElemKind=_90650_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*(_90631_s))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	if ((_90668_first != nullptr)) {
		(*(_9127_model))._field_Elems=jule::append((*_9127_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _90668_first; __jule_collection; }));
		_9117_i=1LL;
	};
	jule::Ptr<_1a7d1bc96_TypeKind> _9217_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_9077_slc))._field_Elem;
	{
		auto expr = (*_90631_s.alloc)._field_Exprs.slice(_9117_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1abbcc2b2:;
		if (it != expr_end) {
			jule::Ptr<_1a7b89251_Expr> _92315_elem = *it;
			{
				jule::Ptr<_1a7cd41ae_Data> _9248_d = _1a7d09aa8_evalExpr(_self_, _92315_elem);;
				if ((_9248_d != nullptr)) {
					;
					if (_1a7c6741c_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_9077_slc.alloc)._field_Elem), &(_9248_d), &((*(_92315_elem))._field_Token))) {
						_1a7c62b87_checkAssignType((*(_self_))._field_s, false, &((*_9077_slc.alloc)._field_Elem), &(_9248_d), (*_92315_elem.alloc)._field_Token, _1a7cd946c_getOwnerRefers(_self_));
					};
					(*_9127_model.alloc)._field_Elems=jule::append((*_9127_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9248_d.alloc)._field_Model; __jule_collection; }));
				};
			}
			_iter_next_1abbcc2b2:;
			++it;
			goto _iter_begin_1abbcc2b2;
		}
		_iter_end_1abbcc2b2:;
	};
	(*_self_.alloc)._field_prefix=_9217_prefix;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_9077_slc, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data24)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9127_model, &__jule_any_type80), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7ce4b4d_evalSliceExpr(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b907a7_SliceExpr> _94434_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1a7d2021c_Arr((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1abbd1eed:;
				{
					return _1a7ce4356_evalArr(_self_, _94434_s);;
				}
			}
			else if ((_1a7d204a3_Slc((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1abbd2097:;
				{
					jule::Ptr<_1a7d293ad_Slc> _9509_pt = _1a7d204a3_Slc((*(_self_))._field_prefix);;
					return _1a7ce480c_evalExpSlc(_self_, _94434_s, (*(_9509_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1abbd1e43:;
		};
	};
	jule::Ptr<_1a7d1bc96_TypeKind> _9557_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_94434_s))._field_Exprs.len() == 0LL)) {
		_1a7cd6469_pushErr(_self_, (*_94434_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7b89251_Expr> _9637_firstExpr = (*_94434_s.alloc)._field_Exprs[0LL];;
	jule::Ptr<_1a7cd41ae_Data> _9647_firstElem = _1a7d09aa8_evalExpr(_self_, _9637_firstExpr);;
	if ((_9647_firstElem == nullptr)) {
		return nullptr;;
	};
	;
	_1a7c6741c_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_9647_firstElem))._field_Kind), &(_9647_firstElem), &((*(_9637_firstExpr))._field_Token));
	jule::Ptr<_1a7cd41ae_Data> _9747_d = _1a7ce480c_evalExpSlc(_self_, _94434_s, (*(_9647_firstElem))._field_Kind, (*(_9647_firstElem))._field_Model);;
	(*_self_.alloc)._field_prefix=_9557_prefix;
	return _9747_d;;
}



inline jule::Bool _1a7ce5049_checkIntegerIndexingByData(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _98047_d, jule::Ptr<_1a7b69b05_Token> _98061_token) {
	jule::Str _9813_errKey = _1a7d167eb_checkDataForIntegerIndexing(&((*(_self_))._field_s), _98047_d, &(_98061_token), _1a7cd946c_getOwnerRefers(_self_));;
	{
		auto &_match_expr{ _9813_errKey };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str())) {
			_case_begin_1abbda15a:;
			{
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30))) {
			_case_begin_1abbd9d3b:;
			{
				_1a7cd6469_pushErr(_self_, _98061_token, _9813_errKey, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_98047_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
			}
		}
		else {
			_case_begin_1abbd9687:;
			{
				_1a7cd6469_pushErr(_self_, _98061_token, _9813_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_1abbd9cc5:;
	};
	return false;;
}



inline void _1a7ce5467_indexingPtr(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _99332_d, jule::Ptr<_1a7cd41ae_Data>* _99347_index, jule::Ptr<_1a7b91214_IndexingExpr>* _99366_i) {
	_1a7ce5049_checkIntegerIndexingByData(_self_, _99347_index, (*((*(_99366_i))))._field_Token);
	(*((*(_99332_d))))._field_Lvalue=true;
	jule::Ptr<_1a7d2c1a2_Ptr> _9977_ptr = _1a7d1e969_Ptr((*((*(_99332_d))))._field_Kind.ptr());;
	{
		
		if (_1a7d2cc1e_IsUnsafe(_9977_ptr.ptr())) {
			_case_begin_1abbdd02b:;
			{
				_1a7cd6469_pushErr(_self_, (*((*(_99366_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe pointers are not supports indexing", 41)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1a7cd6e5e_isUnsafe(_self_)))) {
			_case_begin_1abbdd0b4:;
			{
				_1a7cd6469_pushErr(_self_, (*((*(_99366_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1abbdce82:;
	};
	(*((*(_99332_d))))._field_Kind=(*(_9977_ptr))._field_Elem;
}



inline void _1a7ce5885_indexingArr(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _100932_d, jule::Ptr<_1a7cd41ae_Data>* _100947_index, jule::Ptr<_1a7b91214_IndexingExpr>* _100966_i) {
	jule::Ptr<_1a7d2b6ce_Arr> _10107_arr = _1a7d2021c_Arr((*((*(_100932_d))))._field_Kind.ptr());;
	(*((*(_100932_d))))._field_Kind=(*(_10107_arr))._field_Elem;
	_1a7ce5049_checkIntegerIndexingByData(_self_, _100947_index, (*((*(_100966_i))))._field_Token);
	(*((*(_100932_d))))._field_Lvalue=true;
	if ((_1a7cd4ae9_IsConst((*(_100947_index)).ptr()) && (_1c006d156_AsF64((*((*(_100947_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_10107_arr.alloc)._field_N)))) {
		_1a7cd6469_pushErr(_self_, (*((*(_100966_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
	};
}



inline void _1a7ce5ca3_indexingSlc(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _101932_d, jule::Ptr<_1a7cd41ae_Data>* _101947_index, jule::Ptr<_1a7b91214_IndexingExpr>* _101966_i) {
	jule::Ptr<_1a7d293ad_Slc> _10207_slc = _1a7d204a3_Slc((*((*(_101932_d))))._field_Kind.ptr());;
	(*((*(_101932_d))))._field_Kind=(*(_10207_slc))._field_Elem;
	_1a7ce5049_checkIntegerIndexingByData(_self_, _101947_index, (*((*(_101966_i))))._field_Token);
	(*((*(_101932_d))))._field_Lvalue=true;
	if ((!(_1a7cd4ae9_IsConst((*(_101947_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_101932_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1abbe574d:;
			{
				jule::Ptr<_1a7bb02cc_SliceExprModel> _10318_m = (*((*(_101932_d))))._field_Model.unsafe_cast_ptr<_1a7bb02cc_SliceExprModel>();;
				jule::F64 _10324_indx = _1c006d156_AsF64((*((*(_101947_index))))._field_Constant.ptr());;
				if ((_10324_indx >= static_cast<jule::F64>((*(_10318_m))._field_Elems.len()))) {
					_1a7cd6469_pushErr(_self_, (*((*(_101966_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
				} else {
					(*((*(_101932_d))))._field_Model=(*(_10318_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_10324_indx))];
					(*((*(_101932_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1abbe56d7:;
	};
}



inline void _1a7ce61c1_indexingMap(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _104232_d, jule::Ptr<_1a7cd41ae_Data>* _104247_index, jule::Ptr<_1a7b91214_IndexingExpr>* _104266_i) {
	(*((*(_104232_d))))._field_Lvalue=true;
	if (((*(_104247_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1a7d2aa52_Map> _10477_m = _1a7d20edc_Map((*((*(_104232_d))))._field_Kind.ptr());;
	_1a7cbc7c4_assignTypeChecker _10487_atc = _1a7cbc7c4_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_10477_m))._field_Key, ._field_d=(*(_104247_index)), ._field_errorToken=(*((*(_104266_i))))._field_Token, ._field_refers=_1a7cd946c_getOwnerRefers(_self_)};;
	_1a7cbd7c5_check(&_10487_atc);
	(*((*(_104232_d))))._field_Kind=(*_10477_m.alloc)._field_Val;
}



inline void _1a7ce65de_indexingStr(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _105932_d, jule::Ptr<_1a7cd41ae_Data>* _105947_index, jule::Ptr<_1a7b91214_IndexingExpr>* _105966_i) {
	(*((*(_105932_d))))._field_Kind=_1a7e03861_primU8;
	(*((*(_105932_d))))._field_Mutable=false;
	(*((*(_105932_d))))._field_Lvalue=true;
	if (((*(_105947_index)) == nullptr)) {
		return;;
	};
	_1a7ce5049_checkIntegerIndexingByData(_self_, _105947_index, (*((*(_105966_i))))._field_Token);
	if ((!(_1a7cd4ae9_IsConst((*(_105947_index)).ptr())))) {
		(*((*(_105932_d))))._field_Constant=nullptr;
		(*((*(_105932_d))))._field_untyped=false;
		return;;
	};
	if (_1a7cd4ae9_IsConst((*(_105932_d)).ptr())) {
		jule::Ptr<_1a7b69b05_Token> _10774_errorToken = (*((*(_105966_i))))._field_Token;;
		jule::I64 _10784_j = _1c006cb39_AsI64((*((*(_105947_index))))._field_Constant.ptr());;
		jule::Str _10794_s = _1c006c61c_ReadStr((*((*(_105932_d))))._field_Constant);;
		if ((static_cast<jule::I64>(_10784_j) >= _10794_s.len())) {
			_1a7cd6469_pushErr(_self_, _10774_errorToken, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else {
			_1c006d6b7_SetU64((*((*(_105932_d))))._field_Constant, static_cast<jule::U64>(_10794_s[_10784_j]));
		};
	};
}



inline void _1a7ce6a0c_comptimeRange(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _108834_d, jule::Ptr<_1a7cd41ae_Data>* _108849_index, jule::Ptr<_1a7b91214_IndexingExpr>* _108868_i) {
	if (((*(_108849_index)) == nullptr)) {
		(*(_108834_d))=nullptr;
		return;;
	};
	if ((!(_1a7ce5049_checkIntegerIndexingByData(_self_, _108849_index, (*((*((*(_108868_i))))._field_Index))._field_Token)))) {
		(*(_108834_d))=nullptr;
		return;;
	};
	if ((!(_1a7cd4ae9_IsConst((*(_108849_index)).ptr())))) {
		(*(_108834_d))=nullptr;
		_1a7cd6469_pushErr(_self_, (*(*((*(_108868_i))))._field_Index.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I64 _11033_j = static_cast<jule::I64>(_1c006cb39_AsI64((*((*(_108849_index))))._field_Constant.ptr()));;
	jule::Ptr<_1a7bd5ba4_comptimeRange> _11047_ci = _1a7d227e6_comptimeRange((*((*(_108834_d))))._field_Kind.ptr());;
	if ((_11033_j >= ((_1a7bd5984_comptimeRangeKindMptrData*)(*(_11047_ci))._field_kind.safe_type())->_1a7bd5830_len((*(_11047_ci))._field_kind.data))) {
		(*(_108834_d))=nullptr;
		_1a7cd6469_pushErr(_self_, (*(*((*(_108868_i))))._field_Index.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		return;;
	};
	((_1a7bd5984_comptimeRangeKindMptrData*)(*_11047_ci.alloc)._field_kind.safe_type())->_1a7bd4d18_index((*_11047_ci.alloc)._field_kind.data, _108834_d, _11033_j);
}



inline void _1a7ce6e2a_toIndexing(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _111331_d, jule::Ptr<_1a7cd41ae_Data>* _111346_index, jule::Ptr<_1a7b91214_IndexingExpr>* _111365_i) {
	{
		
		if ((_1a7d1e969_Ptr((*((*(_111331_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abc07441:;
			{
				_1a7ce5467_indexingPtr(_self_, _111331_d, _111346_index, _111365_i);
				return;;
			}
		}
		else if ((_1a7d2021c_Arr((*((*(_111331_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abc074da:;
			{
				_1a7ce5885_indexingArr(_self_, _111331_d, _111346_index, _111365_i);
				return;;
			}
		}
		else if ((_1a7d204a3_Slc((*((*(_111331_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abc07551:;
			{
				_1a7ce5ca3_indexingSlc(_self_, _111331_d, _111346_index, _111365_i);
				return;;
			}
		}
		else if ((_1a7d20edc_Map((*((*(_111331_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abc075b7:;
			{
				_1a7ce61c1_indexingMap(_self_, _111331_d, _111346_index, _111365_i);
				return;;
			}
		}
		else if ((_1a7d1e44c_Prim((*((*(_111331_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abc0762d:;
			{
				jule::Ptr<_1a7d24dae_Prim> _11284_prim = _1a7d1e44c_Prim((*((*(_111331_d))))._field_Kind);;
				{
					
					if (_1a7d28379_IsStr(_11284_prim.ptr())) {
						_case_begin_1abc0b940:;
						{
							_1a7ce65de_indexingStr(_self_, _111331_d, _111346_index, _111365_i);
							return;;
						}
					}
					_match_end_1abc0b885:;
				};
			}
		}
		else if ((_1a7d227e6_comptimeRange((*((*(_111331_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abc076a5:;
			{
				_1a7ce6a0c_comptimeRange(_self_, _111331_d, _111346_index, _111365_i);
				return;;
			}
		}
		_match_end_1abc072cb:;
	};
	_1a7cd6469_pushErr(_self_, (*((*(_111365_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support indexing", 30)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_111331_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
}



inline jule::Bool _1a7ce73d1_pushGenericsFromExprSubIdent(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8c364_SubIdentExpr>* _114150_sexpr, jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>>* _11428_generics, jule::Ptr<_1a7b89251_Expr>* _114236_expr) {
	jule::Ptr<_1a7b857e1_SubIdentTypeDecl> _11437_t = jule::new_ptr<_1a7b857e1_SubIdentTypeDecl>(_1a7b857e1_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1a7b806ba_IdentTypeDecl>>(nullptr)});;
	if ((!(_1a7d17874_pushSubIdentFromExpr(jule::Any((*(_114150_sexpr)), &__jule_any_type89), &(_11437_t))))) {
		_1a7cd6469_pushErr(_self_.ptr(), (*((*(_114236_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>> &__jule_push_dest = (*(_11428_generics)); __jule_push_dest.push(jule::new_ptr<_1a7b800b0_TypeDecl>(_1a7b800b0_TypeDecl{._field_Token=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_Kind=jule::Any(_11437_t, &__jule_any_type90)})); };
	return true;;
}



inline jule::Bool _1a7ce77cc_pushGenericsFromData(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>>* _115242_generics, jule::Ptr<_1a7b89251_Expr>* _115270_expr) {
	{
		auto &_match_expr{ (*((*(_115270_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1abc134e6:;
			{
				jule::Ptr<_1a7b8b30d_UnaryExpr> _11558_u = (*((*(_115270_expr))))._field_Kind.unsafe_cast_ptr<_1a7b8b30d_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_11558_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1abc17660:;
						{
							jule::Ptr<_1a7b86946_PtrTypeDecl> _11589_kind = jule::new_ptr<_1a7b86946_PtrTypeDecl>(_1a7b86946_PtrTypeDecl{._field_Elem=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>> _11599__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b800b0_TypeDecl>(nullptr); __jule_collection; });;
							_1a7ce77cc_pushGenericsFromData(_self_, &(_11599__generics), &((*(_11558_u))._field_Expr));
							(*_11589_kind.alloc)._field_Elem=_11599__generics[0LL];
							{ jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>> &__jule_push_dest = (*(_115242_generics)); __jule_push_dest.push(jule::new_ptr<_1a7b800b0_TypeDecl>(_1a7b800b0_TypeDecl{._field_Token=(*((*(_115270_expr))))._field_Token, ._field_Kind=jule::Any(_11589_kind, &__jule_any_type74)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1abc19343:;
						{
							jule::Ptr<_1a7b85eb7_SptrTypeDecl> _11679_kind = jule::new_ptr<_1a7b85eb7_SptrTypeDecl>(_1a7b85eb7_SptrTypeDecl{._field_Elem=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>> _11689__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b800b0_TypeDecl>(nullptr); __jule_collection; });;
							_1a7ce77cc_pushGenericsFromData(_self_, &(_11689__generics), &((*(_11558_u))._field_Expr));
							(*_11679_kind.alloc)._field_Elem=_11689__generics[0LL];
							{ jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>> &__jule_push_dest = (*(_115242_generics)); __jule_push_dest.push(jule::new_ptr<_1a7b800b0_TypeDecl>(_1a7b800b0_TypeDecl{._field_Token=(*((*(_115270_expr))))._field_Token, ._field_Kind=jule::Any(_11679_kind, &__jule_any_type75)})); };
						}
					}
					else {
						_case_begin_1abc17e9b:;
						{
							_1a7cd6469_pushErr(_self_.ptr(), (*(_11558_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1abc17286:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1abc14838:;
			{
				{ jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>> &__jule_push_dest = (*(_115242_generics)); __jule_push_dest.push((*((*(_115270_expr))))._field_Kind.cast_ptr<_1a7b800b0_TypeDecl>(&__jule_any_type92)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1abc1489e:;
			{
				jule::Ptr<_1a7b8c364_SubIdentExpr> _11828_sexpr = (*((*(_115270_expr))))._field_Kind.unsafe_cast_ptr<_1a7b8c364_SubIdentExpr>();;
				return _1a7ce73d1_pushGenericsFromExprSubIdent(_self_, &(_11828_sexpr), _115242_generics, _115270_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1abc12825:;
			{
				jule::Ptr<_1a7b8aa6b_IdentExpr> _11858_ident = (*((*(_115270_expr))))._field_Kind.unsafe_cast_ptr<_1a7b8aa6b_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>> &__jule_push_dest = (*(_115242_generics)); __jule_push_dest.push(jule::new_ptr<_1a7b800b0_TypeDecl>(_1a7b800b0_TypeDecl{._field_Token=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1a7b806ba_IdentTypeDecl>(_1a7b806ba_IdentTypeDecl{._field_Token=(*_11858_ident.alloc)._field_Token, ._field_Ident=(*_11858_ident.alloc)._field_Ident, ._field_Binded=(*(_11858_ident))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>>(nullptr)}), &__jule_any_type78)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1abc1288b:;
			{
				{
					auto expr = &((*((*((*(_115270_expr))))._field_Kind.unsafe_cast_ptr<_1a7b89d45_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abc234c3:;
					if (it != expr_end) {
						jule::Ptr<_1a7b89251_Expr> _119416_texpr = *it;
						{
							if ((!(_1a7ce77cc_pushGenericsFromData(_self_, _115242_generics, &(_119416_texpr))))) {
								return false;;
							};
						}
						_iter_next_1abc234c3:;
						++it;
						goto _iter_begin_1abc234c3;
					}
					_iter_end_1abc234c3:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1abc12902:;
			{
				jule::Ptr<_1a7b8be8a_NsSelectionExpr> _12008_ns = (*((*(_115270_expr))))._field_Kind.unsafe_cast_ptr<_1a7b8be8a_NsSelectionExpr>();;
				jule::Ptr<_1a7b806ba_IdentTypeDecl> _12018_decl = jule::new_ptr<_1a7b806ba_IdentTypeDecl>(_1a7b806ba_IdentTypeDecl{._field_Token=(*(_12008_ns))._field_Ident, ._field_Ident=(*((*_12008_ns.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>>(nullptr)});;
				{ jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>> &__jule_push_dest = (*(_115242_generics)); __jule_push_dest.push(jule::new_ptr<_1a7b800b0_TypeDecl>(_1a7b800b0_TypeDecl{._field_Token=(*(_12018_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1a7b85bba_NamespaceTypeDecl>(_1a7b85bba_NamespaceTypeDecl{._field_Idents=(*_12008_ns.alloc)._field_Ns, ._field_Kind=jule::new_ptr<_1a7b800b0_TypeDecl>(_1a7b800b0_TypeDecl{._field_Token=(*_12018_decl.alloc)._field_Token, ._field_Kind=jule::Any(_12018_decl, &__jule_any_type78)})}), &__jule_any_type94)})); };
			}
		}
		else {
			_case_begin_1abc10b0e:;
			{
				_1a7cd6469_pushErr(_self_.ptr(), (*((*(_115270_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1abc10a98:;
	};
	return true;;
}



inline void _1a7ce7b40_evalIdentDeclFromIndexing(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7cd41ae_Data>* _122247_d, jule::Ptr<_1a7b91214_IndexingExpr>* _122262_i) {
	jule::Ptr<_1a7ba8b11_StructIns> _12237_s = _1a7d209c0_Struct((*((*(_122247_d))))._field_Kind.ptr());;
	if ((_12237_s == nullptr)) {
		_1a7cd6469_pushErr(_self_.ptr(), (*((*((*(_122262_i))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_122247_d))))._field_Kind), &__jule_any_type4); __jule_collection; }));
		(*(_122247_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a7b806ba_IdentTypeDecl> _123011_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_122262_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1abc305ac:;
			{
				jule::Ptr<_1a7b8aa6b_IdentExpr> _12338_expr = (*((*((*(_122262_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1a7b8aa6b_IdentExpr>();;
				_123011_decl=jule::new_ptr<_1a7b806ba_IdentTypeDecl>(_1a7b806ba_IdentTypeDecl{._field_Token=(*_12338_expr.alloc)._field_Token, ._field_Ident=(*_12338_expr.alloc)._field_Ident, ._field_Binded=(*(_12338_expr))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>>(nullptr)});
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1abc319dc:;
			{
				jule::Ptr<_1a7b8be8a_NsSelectionExpr> _12408_expr = (*((*((*(_122262_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1a7b8be8a_NsSelectionExpr>();;
				_123011_decl=jule::new_ptr<_1a7b806ba_IdentTypeDecl>(_1a7b806ba_IdentTypeDecl{._field_Token=(*(_12408_expr))._field_Ident, ._field_Ident=(*((*_12408_expr.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>>(nullptr)});
			}
		}
		else {
			_case_begin_1abc30a30:;
			{
				_1a7cd6469_pushErr(_self_, (*((*(_122262_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				(*(_122247_d))=nullptr;
				return;;
			}
		}
		_match_end_1abc309b9:;
	};
	if ((!(_1a7ce77cc_pushGenericsFromData(_self_, &((*(_123011_decl))._field_Generics), &((*((*(_122262_i))))._field_Index))))) {
		(*(_122247_d))=nullptr;
		return;;
	};
	_12237_s=({ auto _wrap_copy = _1a7cee63b_typeChecker(_self_); _1a7d3352c_fromStruct(&_wrap_copy, &(_123011_decl), &((*(_12237_s))._field_Decl)); });
	if ((_12237_s == nullptr)) {
		(*(_122247_d))=nullptr;
		return;;
	};
	(*(*((*(_122247_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_12237_s, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data0);
}



inline __jule_tuple_bool__jule_tuple_bool _1a7ce80e6_checkGenericFn(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _126536_f, jule::Ptr<_1a7b69b05_Token>* _126552_et, jule::Any* _126569_model) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a7bbd8b2_FnIns> _12667_old = (*(_126536_f));;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7c731e7_checkGenericFn((*(_self_))._field_s, _126536_f, _126552_et);
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((__jule_func_result.__jule_result_arg0 && __jule_func_result.__jule_result_arg1)) {
		_1a7d17500_updateModelToGenericIns(_126569_model, _126536_f);
		_1abc3865e_updateRefer(_1a7cd946c_getOwnerRefers(_self_), &(_12667_old), _126536_f);
	};
	return __jule_func_result;;
}



inline void _1a7ce8459_evalFnGenericFromIndexing(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7cd41ae_Data>* _128147_d, jule::Ptr<_1a7b91214_IndexingExpr>* _128162_i) {
	jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>> _12827_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>>::alloc(0LL, 8LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b800b0_TypeDecl>(nullptr); __jule_collection; });;
	if ((!(_1a7ce77cc_pushGenericsFromData(_self_, &(_12827_generics), &((*((*(_128162_i))))._field_Index))))) {
		(*(_128147_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a7bbd8b2_FnIns> _12887_f = _1a7d20739_Fn((*((*(_128147_d))))._field_Kind.ptr());;
	jule::I64 _12897_genericsLen = 0LL;;
	if (((*(_12887_f))._field_Decl != nullptr)) {
		_12897_genericsLen=(*(*(_12887_f))._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_1a7c5b147_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _12897_genericsLen, _12827_generics.len(), (*((*((*(_128162_i))))._field_Expr))._field_Token)))) {
		(*(_128147_d))=nullptr;
		return;;
	};
	(*_12887_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>::alloc(0LL, (*(*(_12887_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7d1a3b0_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &(_12827_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc3e2be:;
		if (it != expr_end) {
			jule::Ptr<_1a7b800b0_TypeDecl> _130015_g = *it;
			{
				jule::Ptr<_1a7cd41ae_Data> _13018_k = _1a7cee97c_evalType(_self_, _130015_g);;
				if ((_13018_k == nullptr)) {
					(*(_128147_d))=nullptr;
					return;;
				};
				(*_12887_f.alloc)._field_Generics=jule::append((*_12887_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a7d1a3b0_InsGeneric>(_1a7d1a3b0_InsGeneric{._field_Kind=(*(_13018_k))._field_Kind, ._field_Constraint=jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1abc3e2be:;
			++it;
			goto _iter_begin_1abc3e2be;
		}
		_iter_end_1abc3e2be:;
	};
	if (_1a7bbed7a_IsBuiltin(_12887_f)) {
		return;;
	};
	jule::Bool _13133_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7ce80e6_checkGenericFn(_self_, &(_12887_f), &((*(*((*(_128162_i))))._field_Expr.alloc)._field_Token), &((*((*(_128147_d))))._field_Model));
		_13133_ok = __jule_assign_result.__jule_result_arg0;
	});
	if (_13133_ok) {
		(*(*((*(_128147_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_12887_f, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data1);
	} else {
		(*(_128147_d))=nullptr;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7ce879a_evalIndexing(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b91214_IndexingExpr> _132133_i) {
	jule::Ptr<_1a7d1bc96_TypeKind> _13227_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_13227_prefix;
	});;
	jule::Ptr<_1a7cd41ae_Data> _13267_d = _1a7d08c94_evalExprKind(_self_, (*((*(_132133_i))._field_Expr))._field_Kind);;
	if ((_13267_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_13267_d))._field_Decl) {
		_1a7ce7b40_evalIdentDeclFromIndexing(_self_, &(_13267_d), &(_132133_i));
		return _13267_d;;
	};
	if ((_1a7d20739_Fn((*(_13267_d))._field_Kind.ptr()) != nullptr)) {
		_1a7ce8459_evalFnGenericFromIndexing(_self_, &(_13267_d), &(_132133_i));
		return _13267_d;;
	};
	_1a7cd41ae_Data _13427_oldData = (*(_13267_d));;
	jule::Ptr<_1a7cd41ae_Data> _13447_index = _1a7d09aa8_evalExpr(_self_, (*_132133_i.alloc)._field_Index);;
	if ((_13447_index == nullptr)) {
		return nullptr;;
	};
	_1a7c2d69c_makeComptimeRange(&(_13267_d));
	(*(_13267_d))._field_Decl=false;
	_1a7ce6e2a_toIndexing(_self_, &(_13267_d), &(_13447_index), &(_132133_i));
	if ((_13267_d == nullptr)) {
		return nullptr;;
	};
	if (_1a7cd4ae9_IsConst(_13267_d.ptr())) {
		(*(_13267_d))._field_Decl=false;
		(*(_13267_d))._field_Model=jule::Any((*(_13267_d))._field_Constant, &__jule_any_type20);
	} else if ((*(_13267_d))._field_Decl) {
		(*(_13267_d))._field_Decl=false;
	} else {
		(*(_13267_d))._field_Model=jule::Any(jule::new_ptr<_1a7bb0783_IndexingExprModel>(_1a7bb0783_IndexingExprModel{._field_Token=(*_132133_i.alloc)._field_Token, ._field_Expr=jule::new_ptr<_1a7cd41ae_Data>(_13427_oldData), ._field_Index=_13447_index}), &__jule_any_type53);
	};
	return _13267_d;;
}



inline __jule_tuple_x_1a7cd41ae_Data__jule_tuple_x_1a7cd41ae_Data _1a7ce8adb_evalSlicingExprs(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b91874_SlicingExpr>* _138138_s) {
	__jule_tuple_x_1a7cd41ae_Data__jule_tuple_x_1a7cd41ae_Data __jule_func_result;
	jule::Ptr<_1a7d1bc96_TypeKind> _13827_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_13827_prefix;
	});;
	jule::Ptr<_1a7cd41ae_Data> _138611_l = nullptr;;
	jule::Ptr<_1a7cd41ae_Data> _138711_r = nullptr;;
	if (((*((*(_138138_s))))._field_Start != nullptr)) {
		_138611_l=_1a7d09aa8_evalExpr(_self_, (*((*(_138138_s))))._field_Start);
		if ((_138611_l != nullptr)) {
			_1a7ce5049_checkIntegerIndexingByData(_self_, &(_138611_l), (*((*(_138138_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_138611_l=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02a5d_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1c006a8d4_NewI64(0LL)});
		(*((*(_138611_l))._field_Constant))._field_Kind=static_cast<jule::Str>(jule::Str::lit("int", 3));
		(*_138611_l.alloc)._field_Model=jule::Any((*_138611_l.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*((*(_138138_s))))._field_To != nullptr)) {
		_138711_r=_1a7d09aa8_evalExpr(_self_, (*((*(_138138_s))))._field_To);
		if ((_138711_r != nullptr)) {
			_1a7ce5049_checkIntegerIndexingByData(_self_, &(_138711_r), (*((*(_138138_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _138611_l;
	__jule_func_result.__jule_result_arg1 = _138711_r;
	return __jule_func_result;;
}



inline void _1a7ce8d94_slicingArr(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _141727_d) {
	jule::Ptr<_1a7d1bc96_TypeKind> _14187_elemType = (*(_1a7d2021c_Arr((*((*(_141727_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_141727_d))))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7d293ad_Slc>(_1a7d293ad_Slc{._field_Elem=_14187_elemType}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data24)});
	(*((*(_141727_d))))._field_Lvalue=false;
	(*((*(_141727_d))))._field_Mutable=((*((*(_141727_d))))._field_Mutable || (!(_1a7d1d67c_Mutable(_14187_elemType.ptr()))));
}



inline void _1a7ce92b2_slicingStr(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _143227_d, jule::Ptr<_1a7cd41ae_Data>* _143238_l, jule::Ptr<_1a7cd41ae_Data>* _143249_r) {
	(*((*(_143227_d))))._field_Lvalue=false;
	(*((*(_143227_d))))._field_Mutable=true;
	if ((!(_1a7cd4ae9_IsConst((*(_143227_d)).ptr())))) {
		return;;
	};
	if ((((*(_143238_l)) == nullptr) || ((*(_143249_r)) == nullptr))) {
		(*((*(_143227_d))))._field_Constant=nullptr;
		(*((*(_143227_d))))._field_untyped=false;
		return;;
	};
	if ((_1a7cd4ae9_IsConst((*(_143238_l)).ptr()) && _1a7cd4ae9_IsConst((*(_143249_r)).ptr()))) {
		jule::I64 _14464_left = _1c006cb39_AsI64((*((*(_143238_l))))._field_Constant.ptr());;
		if ((_14464_left < 0LL)) {
			return;;
		};
		jule::Str _14514_s = _1c006c61c_ReadStr((*((*(_143227_d))))._field_Constant);;
		jule::I64 _14528_right = static_cast<jule::I64>(0LL);;
		if (((*(_143249_r)) == nullptr)) {
			_14528_right=static_cast<jule::I64>(_14514_s.len());
		} else {
			_14528_right=_1c006cb39_AsI64((*((*(_143249_r))))._field_Constant);
		};
		if ((_14464_left > _14528_right)) {
			return;;
		};
		_1c006dc28_SetStr((*((*(_143227_d))))._field_Constant, _14514_s.slice(_14464_left, _14528_right));
		(*((*(_143227_d))))._field_Decl=true;
	} else {
		(*((*(_143227_d))))._field_Constant=nullptr;
		(*((*(_143227_d))))._field_untyped=false;
	};
}



inline void _1a7ce978a_checkSlicing(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _147033_d, jule::Ptr<_1a7cd41ae_Data>* _147044_l, jule::Ptr<_1a7cd41ae_Data>* _147055_r, jule::Ptr<_1a7b91874_SlicingExpr>* _147066_s) {
	{
		
		if ((_1a7d2021c_Arr((*((*(_147033_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abc60dd4:;
			{
				_1a7ce8d94_slicingArr(_self_, _147033_d);
				return;;
			}
		}
		else if ((_1a7d204a3_Slc((*((*(_147033_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abc60e7d:;
			{
				return;;
			}
		}
		else if ((_1a7d1e44c_Prim((*((*(_147033_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abc60ee4:;
			{
				jule::Ptr<_1a7d24dae_Prim> _14784_prim = _1a7d1e44c_Prim((*((*(_147033_d))))._field_Kind);;
				{
					
					if (_1a7d28379_IsStr(_14784_prim.ptr())) {
						_case_begin_1abc637bb:;
						{
							_1a7ce92b2_slicingStr(_self_, _147033_d, _147044_l, _147055_r);
							return;;
						}
					}
					_match_end_1abc63711:;
				};
			}
		}
		_match_end_1abc60ca2:;
	};
	_1a7cd6469_pushErr(_self_, (*((*(_147066_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support slicing", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_147033_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7ce9acb_evalSlicing(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b91874_SlicingExpr> _148932_s) {
	jule::Ptr<_1a7cd41ae_Data> _14907_d = _1a7d09aa8_evalExpr(_self_, (*(_148932_s))._field_Expr);;
	if ((_14907_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a7cd41ae_Data> _14957_l;
	jule::Ptr<_1a7cd41ae_Data> _149514_r;
	({
		__jule_tuple_x_1a7cd41ae_Data__jule_tuple_x_1a7cd41ae_Data __jule_assign_result = _1a7ce8adb_evalSlicingExprs(_self_, &(_148932_s));
		_14957_l = __jule_assign_result.__jule_result_arg0;
		_149514_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14957_l == nullptr)) {
		return _14907_d;;
	};
	(*(_14907_d))._field_Decl=false;
	_1a7ce978a_checkSlicing(_self_, &(_14907_d), &(_14957_l), &(_149514_r), &(_148932_s));
	if (_1a7cd4ae9_IsConst(_14907_d.ptr())) {
		(*(_14907_d))._field_Decl=false;
		(*(_14907_d))._field_Model=jule::Any((*(_14907_d))._field_Constant, &__jule_any_type20);
	} else if ((*(_14907_d))._field_Decl) {
		(*(_14907_d))._field_Decl=false;
	} else {
		jule::Ptr<_1a7bb1a70_SlicingExprModel> _15138_model = jule::new_ptr<_1a7bb1a70_SlicingExprModel>(_1a7bb1a70_SlicingExprModel{._field_Token=(*_148932_s.alloc)._field_Token, ._field_Expr=(*(_14907_d))._field_Model, ._field_Left=(*(_14957_l))._field_Model, ._field_Right=jule::Any(nullptr)});;
		if ((_149514_r != nullptr)) {
			(*(_15138_model))._field_Right=(*_149514_r.alloc)._field_Model;
		};
		(*(_14907_d))._field_Model=jule::Any(_15138_model, &__jule_any_type95);
	};
	return _14907_d;;
}



inline void _1a7ce9ee9_castPtr(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7d1bc96_TypeKind> _152627_t, jule::Ptr<_1a7cd41ae_Data> _152645_d, jule::Ptr<_1a7b69b05_Token> _152655_errorToken) {
	(*(_152645_d))._field_Constant=nullptr;
	(*_152645_d.alloc)._field_untyped=false;
	jule::Ptr<_1a7d288da_Sptr> _15293_sptr = _1a7d1e6d3_Sptr((*_152645_d.alloc)._field_Kind.ptr());;
	if ((_15293_sptr != nullptr)) {
		if ((!(_1a7d1c4d3_Equal((*(_1a7d1e969_Ptr(_152627_t.ptr())))._field_Elem, (*_15293_sptr.alloc)._field_Elem)))) {
			_1a7cd6469_pushErr(_self_, _152655_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_152645_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str(_152627_t), &__jule_any_type4); __jule_collection; }));
		};
		return;;
	};
	if ((!(_1a7cd6e5e_isUnsafe(_self_)))) {
		_1a7cd6469_pushErr(_self_, _152655_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7d24dae_Prim> _15423_prim = _1a7d1e44c_Prim((*(_152645_d))._field_Kind);;
	if (((_1a7d1e969_Ptr((*(_152645_d))._field_Kind) == nullptr) && ((_15423_prim == nullptr) || (!(_1c00697e5_IsInt(_1a7d25233_Str(_15423_prim.ptr()))))))) {
		_1a7cd6469_pushErr(_self_, _152655_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_152645_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str(_152627_t), &__jule_any_type4); __jule_collection; }));
	};
}



inline void _1a7cea417_castStruct(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7d1bc96_TypeKind> _154830_t, jule::Ptr<_1a7cd41ae_Data> _154848_d, jule::Ptr<_1a7b69b05_Token> _154858_errorToken) {
	(*(_154848_d))._field_Constant=nullptr;
	(*_154848_d.alloc)._field_untyped=false;
	jule::Ptr<_1a7bce362_Trait> _15517_tr = _1a7d20c56_Trait((*_154848_d.alloc)._field_Kind.ptr());;
	if ((_15517_tr == nullptr)) {
		_1a7cd6469_pushErr(_self_, _154858_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_154848_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str(_154830_t.ptr()), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1a7ba8b11_StructIns> _15577_s = _1a7d209c0_Struct(_154830_t);;
	_1aa7c5928_pushReference(_self_, &(_15577_s));
	if ((!(_1a7ba7428_IsImplements((*(_15577_s))._field_Decl.ptr(), _15517_tr)))) {
		_1a7cd6469_pushErr(_self_, _154858_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_154848_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str(_154830_t), &__jule_any_type4); __jule_collection; }));
	};
}



inline void _1a7cea835_castRef(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7d1bc96_TypeKind> _156527_t, jule::Ptr<_1a7cd41ae_Data> _156545_d, jule::Ptr<_1a7b69b05_Token> _156555_errorToken) {
	(*(_156545_d))._field_Constant=nullptr;
	(*_156545_d.alloc)._field_untyped=false;
	jule::Ptr<_1a7d288da_Sptr> _15687_sptr = _1a7d1e6d3_Sptr(_156527_t.ptr());;
	jule::Ptr<_1a7d2c1a2_Ptr> _15707_ptr = _1a7d1e969_Ptr((*_156545_d.alloc)._field_Kind.ptr());;
	if (((_15707_ptr != nullptr) && _1a7d1c4d3_Equal((*(_15687_sptr))._field_Elem, (*_15707_ptr.alloc)._field_Elem))) {
		if ((!(_1a7cd6e5e_isUnsafe(_self_)))) {
			_1a7cd6469_pushErr(_self_, _156555_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1a7d209c0_Struct((*(_15687_sptr))._field_Elem) != nullptr)) {
		_1a7cea417_castStruct(_self_, (*_15687_sptr.alloc)._field_Elem, _156545_d, _156555_errorToken);
		return;;
	};
	_1a7cd6469_pushErr(_self_, _156555_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_156545_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str(_156527_t), &__jule_any_type4); __jule_collection; }));
}



inline void _1a7ceac53_castSlc(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7d1bc96_TypeKind> _158827_t, jule::Ptr<_1a7cd41ae_Data> _158845_d, jule::Ptr<_1a7b69b05_Token> _158855_errorToken) {
	jule::Ptr<_1c006a461_Const> _15893_c = (*(_158845_d))._field_Constant;;
	(*_158845_d.alloc)._field_Constant=nullptr;
	(*_158845_d.alloc)._field_untyped=false;
	if ((_1a7d1ec00_Enum((*_158845_d.alloc)._field_Kind.ptr()) != nullptr)) {
		if (((_1a7d1e44c_Prim((*((*(_1a7d1ec00_Enum((*(_158845_d))._field_Kind)))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1a7d28379_IsStr(_1a7d1e44c_Prim((*((*(_1a7d1ec00_Enum((*(_158845_d))._field_Kind.ptr())))._field_Kind))._field_Kind).ptr()))))) {
			_1a7cd6469_pushErr(_self_, _158855_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_158845_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str(_158827_t.ptr()), &__jule_any_type4); __jule_collection; }));
			return;;
		};
	} else if (((_1a7d1e44c_Prim((*_158845_d.alloc)._field_Kind.ptr()) == nullptr) || (!(_1a7d28379_IsStr(_1a7d1e44c_Prim((*(_158845_d))._field_Kind).ptr()))))) {
		_1a7cd6469_pushErr(_self_, _158855_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_158845_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str(_158827_t.ptr()), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	_158827_t=(*(_1a7d204a3_Slc(_158827_t.ptr())))._field_Elem;
	jule::Ptr<_1a7d24dae_Prim> _16043_prim = _1a7d1e44c_Prim(_158827_t);;
	if (((_16043_prim == nullptr) || ((!(_1a7d267d9_IsU8(_16043_prim.ptr()))) && (!(_1a7d262bc_IsI32(_16043_prim.ptr())))))) {
		_1a7cd6469_pushErr(_self_, _158855_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*_158845_d.alloc)._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str(_158827_t), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	if ((_15893_c != nullptr)) {
		{
			
			if (_1a7d267d9_IsU8(_16043_prim.ptr())) {
				_case_begin_1aa7da83e:;
				{
					jule::Str _16145_s = _1c006c61c_ReadStr(_15893_c);;
					jule::Ptr<_1a7bb02cc_SliceExprModel> _16159_model = jule::new_ptr<_1a7bb02cc_SliceExprModel>(_1a7bb02cc_SliceExprModel{._field_ElemKind=_158827_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _16145_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_16145_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aa7dc203:;
						if (it != expr_end) {
							jule::U8 *_161912_b = it;
							{
								jule::Ptr<_1c006a461_Const> _162010_bc = static__1c006ab9d_NewU64(static_cast<jule::U64>((*(_161912_b))));;
								(*(_162010_bc))._field_Kind=(*(_16043_prim))._field_Kind;
								(*(_16159_model))._field_Elems=jule::append((*_16159_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_162010_bc, &__jule_any_type20); __jule_collection; }));
							}
							_iter_next_1aa7dc203:;
							++it;
							goto _iter_begin_1aa7dc203;
						}
						_iter_end_1aa7dc203:;
					};
					(*_158845_d.alloc)._field_Model=jule::Any(_16159_model, &__jule_any_type80);
					(*_158845_d.alloc)._field_Decl=true;
				}
			}
			else if (_1a7d262bc_IsI32(_16043_prim.ptr())) {
				_case_begin_1aa7da8d8:;
				{
					jule::Slice<jule::I32> _16275_runes = __jule_strToRunes(_1c006c61c_ReadStr(_15893_c));;
					jule::Ptr<_1a7bb02cc_SliceExprModel> _16289_model = jule::new_ptr<_1a7bb02cc_SliceExprModel>(_1a7bb02cc_SliceExprModel{._field_ElemKind=_158827_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _16275_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_16275_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aa7e0635:;
						if (it != expr_end) {
							jule::I32 *_163212_r = it;
							{
								jule::Ptr<_1c006a461_Const> _163310_rc = static__1c006a8d4_NewI64(static_cast<jule::I64>((*(_163212_r))));;
								(*(_163310_rc))._field_Kind=(*(_16043_prim))._field_Kind;
								(*(_16289_model))._field_Elems=jule::append((*_16289_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_163310_rc, &__jule_any_type20); __jule_collection; }));
							}
							_iter_next_1aa7e0635:;
							++it;
							goto _iter_begin_1aa7e0635;
						}
						_iter_end_1aa7e0635:;
					};
					(*_158845_d.alloc)._field_Model=jule::Any(_16289_model, &__jule_any_type80);
					(*_158845_d.alloc)._field_Decl=true;
				}
			}
			_match_end_1aa7da751:;
		};
	};
}



inline void _1a7ceb0b6_castStr(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data> _164327_d, jule::Ptr<_1a7b69b05_Token> _164337_errorToken) {
	if ((_1a7d1ec00_Enum((*(_164327_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a7bd1a6d_Enum> _16458_e = _1a7d1ec00_Enum((*(_164327_d))._field_Kind);;
		if (((_1a7d1e44c_Prim((*((*(_16458_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1a7d28379_IsStr(_1a7d1e44c_Prim((*((*(_16458_e))._field_Kind))._field_Kind).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1c006a461_Const> _16513_c = (*_164327_d.alloc)._field_Constant;;
	(*_164327_d.alloc)._field_Constant=nullptr;
	(*_164327_d.alloc)._field_untyped=false;
	if ((_1a7d1e44c_Prim((*(_164327_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1a7d24dae_Prim> _16554_prim = _1a7d1e44c_Prim((*(_164327_d))._field_Kind);;
		if (((!(_1a7d267d9_IsU8(_16554_prim.ptr()))) && (!(_1a7d262bc_IsI32(_16554_prim))))) {
			_1a7cd6469_pushErr(_self_, _164337_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*(_164327_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return;;
		};
		if ((_16513_c != nullptr)) {
			{
				
				if (_1a7d267d9_IsU8(_16554_prim)) {
					_case_begin_1abda8746:;
					{
						(*_164327_d.alloc)._field_Constant=static__1c006b231_NewStr(__jule_strFromByte(static_cast<jule::U8>(_1c006cdc0_AsU64(_16513_c))));
						(*_164327_d.alloc)._field_Model=jule::Any((*_164327_d.alloc)._field_Constant, &__jule_any_type20);
						(*_164327_d.alloc)._field_Decl=true;
					}
				}
				else if (_1a7d262bc_IsI32(_16554_prim)) {
					_case_begin_1abda87e0:;
					{
						(*_164327_d.alloc)._field_Constant=static__1c006b231_NewStr(__jule_strFromRune(static_cast<jule::I32>(_1c006cb39_AsI64(_16513_c))));
						(*_164327_d.alloc)._field_Model=jule::Any((*_164327_d.alloc)._field_Constant, &__jule_any_type20);
						(*_164327_d.alloc)._field_Decl=true;
					}
				}
				_match_end_1abda8625:;
			};
		};
		return;;
	};
	jule::Ptr<_1a7d293ad_Slc> _16767_s = _1a7d204a3_Slc((*(_164327_d))._field_Kind);;
	if ((_16767_s == nullptr)) {
		_1a7cd6469_pushErr(_self_, _164337_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*(_164327_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1a7d1bc96_TypeKind> _16827_t = (*(_16767_s))._field_Elem;;
	jule::Ptr<_1a7d24dae_Prim> _16833_prim = _1a7d1e44c_Prim(_16827_t.ptr());;
	if (((_16833_prim == nullptr) || ((!(_1a7d267d9_IsU8(_16833_prim.ptr()))) && (!(_1a7d262bc_IsI32(_16833_prim.ptr())))))) {
		_1a7cd6469_pushErr(_self_, _164337_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*(_164327_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return;;
	};
}



inline void _1a7ceb4d4_castInt(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7d1bc96_TypeKind> _169027_t, jule::Ptr<_1a7cd41ae_Data> _169045_d, jule::Ptr<_1a7b69b05_Token> _169055_errorToken) {
	if (_1a7cd4ae9_IsConst(_169045_d.ptr())) {
		jule::Ptr<_1a7d24dae_Prim> _16924_prim = _1a7d1e44c_Prim(_169027_t.ptr());;
		{
			
			if (_1c006921d_IsSigInt((*(_16924_prim))._field_Kind)) {
				_case_begin_1abdb1e7a:;
				{
					_1c006d40e_SetI64((*_169045_d.alloc)._field_Constant.ptr(), _1c006cb39_AsI64((*(_169045_d))._field_Constant));
				}
			}
			else if (_1c006952b_IsUnsigInt((*(_16924_prim))._field_Kind)) {
				_case_begin_1abdb2024:;
				{
					_1c006d6b7_SetU64((*_169045_d.alloc)._field_Constant.ptr(), _1c006cdc0_AsU64((*(_169045_d))._field_Constant));
				}
			}
			_match_end_1abdb1de2:;
		};
	} else {
		(*(_169045_d))._field_Constant=nullptr;
		(*_169045_d.alloc)._field_untyped=false;
	};
	if ((_1a7d1ec00_Enum((*(_169045_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a7bd1a6d_Enum> _17054_e = _1a7d1ec00_Enum((*(_169045_d))._field_Kind);;
		if (_1c0069dbc_IsNum(_1a7d1c192_Str((*((*(_17054_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1a7d1e6d3_Sptr((*(_169045_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1a7d24dae_Prim> _17124_prim = _1a7d1e44c_Prim(_169027_t.ptr());;
		if ((!(_1a7d27d5c_IsUintptr(_17124_prim.ptr())))) {
			_1a7cd6469_pushErr(_self_, _169055_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_169045_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str(_169027_t), &__jule_any_type4); __jule_collection; }));
		};
		return;;
	};
	if ((_1a7d1e969_Ptr((*(_169045_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1a7d24dae_Prim> _17194_prim = _1a7d1e44c_Prim(_169027_t);;
		if (_1a7d27d5c_IsUintptr(_17194_prim.ptr())) {
		} else if ((!(_1a7cd6e5e_isUnsafe(_self_)))) {
			_1a7cd6469_pushErr(_self_, _169055_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1a7d24dae_Prim> _17283_prim = _1a7d1e44c_Prim((*(_169045_d))._field_Kind);;
	if (((_17283_prim != nullptr) && _1c0069dbc_IsNum(_1a7d25233_Str(_17283_prim)))) {
		return;;
	};
	_1a7cd6469_pushErr(_self_, _169055_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_169045_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str(_169027_t), &__jule_any_type4); __jule_collection; }));
}



inline void _1a7ceb902_castNum(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7d1bc96_TypeKind> _173627_t, jule::Ptr<_1a7cd41ae_Data> _173645_d, jule::Ptr<_1a7b69b05_Token> _173655_errorToken) {
	if (_1a7cd4ae9_IsConst(_173645_d.ptr())) {
		jule::Ptr<_1a7d24dae_Prim> _17384_prim = _1a7d1e44c_Prim(_173627_t.ptr());;
		{
			
			if (_1c0069b36_IsFloat((*(_17384_prim))._field_Kind)) {
				_case_begin_1abdbd4b4:;
				{
					_1c006ded1_SetF64((*_173645_d.alloc)._field_Constant.ptr(), _1c006d156_AsF64((*(_173645_d))._field_Constant));
				}
			}
			else if (_1c006921d_IsSigInt((*(_17384_prim))._field_Kind)) {
				_case_begin_1abdbd55d:;
				{
					_1c006d40e_SetI64((*_173645_d.alloc)._field_Constant.ptr(), _1c006cb39_AsI64((*(_173645_d))._field_Constant));
				}
			}
			else if (_1c006952b_IsUnsigInt((*(_17384_prim))._field_Kind)) {
				_case_begin_1abdbd5c4:;
				{
					_1c006d6b7_SetU64((*_173645_d.alloc)._field_Constant.ptr(), _1c006cdc0_AsU64((*(_173645_d))._field_Constant));
				}
			}
			_match_end_1abdbd3d7:;
		};
	} else {
		(*(_173645_d))._field_Constant=nullptr;
		(*_173645_d.alloc)._field_untyped=false;
	};
	if ((_1a7d1ec00_Enum((*(_173645_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a7bd1a6d_Enum> _17534_e = _1a7d1ec00_Enum((*(_173645_d))._field_Kind);;
		if (_1c0069dbc_IsNum(_1a7d1c192_Str((*((*(_17534_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a7d24dae_Prim> _17593_prim = _1a7d1e44c_Prim((*(_173645_d))._field_Kind);;
	if (((_17593_prim != nullptr) && _1c0069dbc_IsNum(_1a7d25233_Str(_17593_prim)))) {
		return;;
	};
	_1a7cd6469_pushErr(_self_, _173655_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_173645_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str(_173627_t.ptr()), &__jule_any_type4); __jule_collection; }));
}



inline void _1a7cebd20_castPrim(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7d1bc96_TypeKind> _176728_t, jule::Ptr<_1a7cd41ae_Data> _176746_d, jule::Ptr<_1a7b69b05_Token> _176756_errorToken) {
	jule::Ptr<_1a7d24dae_Prim> _17683_prim = _1a7d1e44c_Prim(_176728_t.ptr());;
	{
		
		if (_1a7d28610_IsAny(_17683_prim.ptr())) {
			_case_begin_1abdc6b1b:;
			{
				(*(_176746_d))._field_Constant=nullptr;
				(*_176746_d.alloc)._field_untyped=false;
			}
		}
		else if (_1a7d28379_IsStr(_17683_prim.ptr())) {
			_case_begin_1abdc67b9:;
			{
				_1a7ceb0b6_castStr(_self_, _176746_d, _176756_errorToken);
			}
		}
		else if (_1c00697e5_IsInt(_1a7d25233_Str(_17683_prim.ptr()))) {
			_case_begin_1abdc6830:;
			{
				_1a7ceb4d4_castInt(_self_, _176728_t, _176746_d, _176756_errorToken);
			}
		}
		else if (_1c0069dbc_IsNum(_1a7d25233_Str(_17683_prim.ptr()))) {
			_case_begin_1abdc6896:;
			{
				_1a7ceb902_castNum(_self_, _176728_t, _176746_d, _176756_errorToken);
			}
		}
		else {
			_case_begin_1abdc6753:;
			{
				_1a7cd6469_pushErr(_self_, _176756_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str(_176728_t), &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1abdc66cb:;
	};
}



inline void _1a7cec183_castConstant(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _178533_t, jule::Ptr<_1a7cd41ae_Data>* _178552_d) {
	if ((((*(_178552_d)) == nullptr) || (!(_1a7cd4ae9_IsConst((*(_178552_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1a7d24dae_Prim> _17893_prim = _1a7d1e44c_Prim((*(_178533_t)).ptr());;
	_1a7d17324_castConstByType(&((*(_17893_prim))._field_Kind), _178552_d);
	(*((*(_178552_d))))._field_Model=jule::Any((*((*(_178552_d))))._field_Constant, &__jule_any_type20);
}



inline void _1a7cec5a1_castTypeEnum(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _179433_t, jule::Ptr<_1a7cd41ae_Data>* _179452_d, jule::Ptr<_1a7b69b05_Token>* _179467_errorToken) {
	jule::I64 _17953_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1a7c635e4_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_179452_d))))._field_Kind), _179433_t, _179467_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17953_n);;
		_1a7cd6469_pushErr(_self_, (*(_179467_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_179452_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*(_179433_t)).ptr()), &__jule_any_type4); __jule_collection; }));
	};
	(*((*(_179452_d))))._field_Constant=nullptr;
	(*((*(_179452_d))))._field_untyped=false;
}



inline void _1a7cec9be_castTypeEnumT(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _180434_t, jule::Ptr<_1a7cd41ae_Data>* _180453_d, jule::Ptr<_1a7b69b05_Token>* _180468_errorToken) {
	jule::I64 _18053_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1a7c635e4_checkTypeCompatibility((*(_self_))._field_s, _180434_t, &((*((*(_180453_d))))._field_Kind), _180468_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _18053_n);;
		_1a7cd6469_pushErr(_self_, (*(_180468_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_180453_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*(_180434_t)).ptr()), &__jule_any_type4); __jule_collection; }));
	};
	(*((*(_180453_d))))._field_Constant=nullptr;
	(*((*(_180453_d))))._field_untyped=false;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7cece75_evalCastByTypeNData(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7d1bc96_TypeKind> _181439_t, jule::Ptr<_1a7cd41ae_Data> _181457_d, jule::Ptr<_1a7b69b05_Token> _181471_errorToken) {
	if (((_181457_d != nullptr) && (*_181457_d.alloc)._field_Decl)) {
		_1a7cd6469_pushErr(_self_, _181471_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1a7cd45cc_IsNil(_181457_d)) {
			_case_begin_1abdd4c6c:;
			{
				if ((!(_1a7d1db99_NilCompatible(_181439_t.ptr())))) {
					_1a7cd6469_pushErr(_self_, _181471_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str(_181439_t), &__jule_any_type4); __jule_collection; }));
				};
				(*_181457_d.alloc)._field_Constant=nullptr;
				(*_181457_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1a7d1e44c_Prim((*_181457_d.alloc)._field_Kind.ptr()) != nullptr) && _1a7d28610_IsAny(_1a7d1e44c_Prim((*(_181457_d))._field_Kind).ptr()))) {
			_case_begin_1abdd49e7:;
			{
				if ((_1a7d1ec00_Enum(_181439_t.ptr()) != nullptr)) {
					_1a7cd6469_pushErr(_self_, _181471_errorToken, static_cast<jule::Str>(jule::Str::lit("enum cannot casted from any type", 32)), jule::Slice<jule::Any>());
					_1a7cd67cc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("try cast to type of enum fields instead of enum", 47)), jule::Slice<jule::Any>());
				} else if ((_1a7d1ee86_TypeEnum(_181439_t.ptr()) != nullptr)) {
					_1a7cd6469_pushErr(_self_, _181471_errorToken, static_cast<jule::Str>(jule::Str::lit("enum cannot casted from any type", 32)), jule::Slice<jule::Any>());
				};
				(*_181457_d.alloc)._field_Constant=nullptr;
				(*_181457_d.alloc)._field_untyped=false;
			}
		}
		else if ((_1a7d1ee86_TypeEnum((*_181457_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abdd4a5d:;
			{
				_1a7cec5a1_castTypeEnum(_self_, &(_181439_t), &(_181457_d), &(_181471_errorToken));
			}
		}
		else if ((_1a7d1ee86_TypeEnum(_181439_t.ptr()) != nullptr)) {
			_case_begin_1abdd4ac4:;
			{
				_1a7cec9be_castTypeEnumT(_self_, &(_181439_t), &(_181457_d), &(_181471_errorToken));
			}
		}
		else if ((_1a7d1e969_Ptr(_181439_t.ptr()) != nullptr)) {
			_case_begin_1abdd4b3a:;
			{
				_1a7ce9ee9_castPtr(_self_, _181439_t, _181457_d, _181471_errorToken);
			}
		}
		else if ((_1a7d1e6d3_Sptr(_181439_t.ptr()) != nullptr)) {
			_case_begin_1abdd593d:;
			{
				_1a7cea835_castRef(_self_, _181439_t, _181457_d, _181471_errorToken);
			}
		}
		else if ((_1a7d204a3_Slc(_181439_t.ptr()) != nullptr)) {
			_case_begin_1abdd59a4:;
			{
				_1a7ceac53_castSlc(_self_, _181439_t, _181457_d, _181471_errorToken);
			}
		}
		else if ((_1a7d209c0_Struct(_181439_t.ptr()) != nullptr)) {
			_case_begin_1abdd5a1a:;
			{
				_1a7cea417_castStruct(_self_, _181439_t, _181457_d, _181471_errorToken);
			}
		}
		else if ((_1a7d1e44c_Prim(_181439_t.ptr()) != nullptr)) {
			_case_begin_1abdd5a81:;
			{
				_1a7cebd20_castPrim(_self_, _181439_t, _181457_d, _181471_errorToken);
				_1a7cec183_castConstant(_self_, &(_181439_t), &(_181457_d));
			}
		}
		else {
			_case_begin_1abdd48c6:;
			{
				_1a7cd6469_pushErr(_self_, _181471_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str(_181439_t.ptr()), &__jule_any_type4); __jule_collection; }));
				_181457_d=nullptr;
			}
		}
		_match_end_1abdd46b7:;
	};
	if ((_181457_d == nullptr)) {
		return nullptr;;
	};
	(*_181457_d.alloc)._field_Mutable=((*_181457_d.alloc)._field_Mutable || (!(_1a7d1d67c_Mutable((*_181457_d.alloc)._field_Kind.ptr()))));
	if (((!((*_181457_d.alloc)._field_Decl)) && ((_1a7d1ec00_Enum((*(_181457_d))._field_Kind) == nullptr) || (!(_1a7d1c4d3_Equal((*((*(_1a7d1ec00_Enum((*(_181457_d))._field_Kind)))._field_Kind))._field_Kind, _181439_t)))))) {
		_1a7d16103_applyCastKind(&((*(_self_))._field_s), &(_181457_d), &(_181439_t), &(_181471_errorToken), _1a7cd946c_getOwnerRefers(_self_));
		(*((*_181457_d.alloc)._field_Model.cast_ptr<_1a7bae551_CastingExprModel>(&__jule_any_type96)))._field_Token=_181471_errorToken;
	} else {
		(*_181457_d.alloc)._field_Kind=_181439_t;
	};
	(*_181457_d.alloc)._field_Decl=false;
	(*_181457_d.alloc)._field_Lvalue=false;
	(*_181457_d.alloc)._field_untyped=false;
	if (_1a7cd4ae9_IsConst(_181457_d)) {
		(*((*_181457_d.alloc)._field_Constant))._field_Kind=(*(_1a7d1e44c_Prim(_181439_t.ptr())))._field_Kind;
	};
	return _181457_d;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7ced42b_evalCastT(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _188731_t, jule::Ptr<_1a7b89251_Expr>* _188750_e, jule::Ptr<_1a7b69b05_Token>* _188765_et) {
	jule::Ptr<_1a7d1bc96_TypeKind> _18887_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_18887_prefix;
	});;
	if ((_1a7d204a3_Slc((*(_188731_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_188750_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1abde65b9:;
				{
					(*_self_.alloc)._field_prefix=(*(_188731_t));
				}
			}
			_match_end_1abde6542:;
		};
	};
	jule::Ptr<_1a7cd41ae_Data> _18977_d = _1a7d09aa8_evalExpr(_self_, (*(_188750_e)));;
	if (((_18977_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _18977_d;;
	};
	return _1a7cece75_evalCastByTypeNData(_self_, (*(_188731_t)), _18977_d, (*(_188765_et)));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7ced76c_evalCast(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8bab1_CastExpr> _190429_c) {
	jule::Ptr<_1a7d244a7_TypeSymbol> _19057_t = _1a7bc33bc_buildType((*(_190429_c))._field_Kind);;
	jule::Bool _19063_ok = _1a7c60789_checkType((*(_self_))._field_s, &(_19057_t), (*_self_.alloc)._field_lookup);;
	if ((!(_19063_ok))) {
		return nullptr;;
	};
	return _1a7ced42b_evalCastT(_self_, &((*(_19057_t))._field_Kind), &((*_190429_c.alloc)._field_Expr), &((*((*_190429_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7cedaad_evalNsSelection(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b8be8a_NsSelectionExpr> _191335_s) {
	jule::Str _19143_path = _1a7d39236_buildLinkPathByTokens(&((*(_191335_s))._field_Ns));;
	jule::Ptr<_1a7c36793_ImportInfo> _19157_imp = ((_1a7d3c448_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7d3a732_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1a7c36793_ImportInfo>>((void*)__jule_anon_1abdee65a, jule::Ptr<__jule_anon_1abdee65a_ctx>::make(__jule_anon_1abdee65a_ctx{._191335_s=_191335_s,._19143_path=_19143_path}).as<jule::Uintptr>(), __jule_anon_1abdee65a_ctx_handler));;
	if ((_19157_imp == nullptr)) {
		_1a7cd6469_pushErr(_self_, (*(_191335_s))._field_Ns[0LL], static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19143_path, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Trait _19277_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_19157_imp, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data1);
	;
	_1a7cd6bc8_disallowBuiltin(_self_);
	jule::Any _19327_def = _1a7cd91d6_getDef(_self_, &((*((*_191335_s.alloc)._field_Ident))._field_Kind), false);;
	_1a7cd69ca_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_19277_lookup;
	jule::Ptr<_1a7cd41ae_Data> _19357_d = _1a7ce3201_evalDef(_self_, &(_19327_def), (*_191335_s.alloc)._field_Ident);;
	return _19357_d;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7cee064_evalStructLitExplicit(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7ba8b11_StructIns> _193942_s, jule::Slice<jule::Ptr<_1a7b89251_Expr>> _19407_exprs, jule::Ptr<_1a7b69b05_Token> _194027_errorToken) {
	jule::Bool _19413_ok = _1a7c5b147_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_193942_s))._field_Decl))._field_Generics.len(), (*_193942_s.alloc)._field_Generics.len(), _194027_errorToken);;
	if ((!(_19413_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*(_self_))._field_field.alloc)._field_Decl))._field_Owner == (*_193942_s.alloc)._field_Decl))) {
		_1a7cd6469_pushErr(_self_, _194027_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_193942_s))._field_Decl.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
	};
	_1aa7c5928_pushReference(_self_, &(_193942_s));
	_1a7ce13ec_checkDeprecated(_self_, &((*(*(_193942_s))._field_Decl.alloc)._field_Directives), _194027_errorToken);
	_1a7cc6e3d_structLitChecker _19547_slc = _1a7cc6e3d_structLitChecker{._field_e=_self_, ._field_errorToken=_194027_errorToken, ._field_s=_193942_s, ._field_args=jule::Slice<jule::Ptr<_1a7bad82a_StructArgExprModel>>(nullptr)};;
	_1a7cc86ae_check(&_19547_slc, &(_19407_exprs));
	jule::Ptr<_1a7cd41ae_Data> _19617_d = jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_193942_s, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data0)}), ._field_Mutable=(!((*_self_.alloc)._field_immutable)), ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1a7badbc1_StructLitExprModel>(_1a7badbc1_StructLitExprModel{._field_Strct=_193942_s, ._field_Args=_19547_slc._field_args}), &__jule_any_type98), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
	if ((*(*(_193942_s))._field_Decl.alloc)._field_Binded) {
		(*((*(_19617_d))._field_Kind))._field_BindIdent=(*(*(_193942_s))._field_Decl.alloc)._field_Ident;
	};
	return _19617_d;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7cee3a5_evalStructLit(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8e29a_StructLit> _197734_lit) {
	jule::Ptr<_1a7d244a7_TypeSymbol> _19787_t = _1a7bc33bc_buildType((*(_197734_lit))._field_Kind);;
	jule::Bool _19793_ok = _1a7c60789_checkType((*(_self_))._field_s, &(_19787_t), (*_self_.alloc)._field_lookup);;
	if ((!(_19793_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1a7ba8b11_StructIns> _19847_s = _1a7d209c0_Struct((*(_19787_t))._field_Kind.ptr());;
	if ((_19847_s == nullptr)) {
		if ((_1a7d1e6d3_Sptr((*(_19787_t))._field_Kind) != nullptr)) {
			_19847_s=_1a7d209c0_Struct((*(_1a7d1e6d3_Sptr((*(_19787_t))._field_Kind)))._field_Elem.ptr());
			if ((_19847_s != nullptr)) {
				goto _julec_label_1abe11084;
			};
		};
		_1a7cd6469_pushErr(_self_, (*((*_197734_lit.alloc)._field_Kind))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1abe11084:;
	jule::Ptr<_1a7cd41ae_Data> _19977_d = _1a7cee064_evalStructLitExplicit(_self_, _19847_s, (*_197734_lit.alloc)._field_Exprs, (*(*(_197734_lit))._field_Kind.alloc)._field_Token);;
	if ((_1a7d1e6d3_Sptr((*(_19787_t))._field_Kind) != nullptr)) {
		jule::Ptr<_1a7badbc1_StructLitExprModel> _19998_model = (*(_19977_d))._field_Model.cast_ptr<_1a7badbc1_StructLitExprModel>(&__jule_any_type98);;
		_1a7d13e47_makeStructLitAlloc(&(_19977_d), &(_19998_model));
	};
	return _19977_d;;
}



inline _1a7d2e193_typeChecker _1a7cee63b_typeChecker(_1a7cd5dd6_eval* _self_) {
	return _1a7c5e535_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7cee97c_evalType(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b800b0_TypeDecl> _200928_t) {
	jule::Ptr<_1a7d244a7_TypeSymbol> _20107_tk = _1a7bc33bc_buildType(_200928_t);;
	jule::Bool _20113_ok = _1a7c60789_checkType((*(_self_))._field_s, &(_20107_tk), (*(_self_))._field_lookup);;
	if ((!(_20113_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=(*(_20107_tk))._field_Kind, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any((*_20107_tk.alloc)._field_Kind, &__jule_any_type87), ._field_Decl=true, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline void _1a7ceece0_callTypeFn(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _202232_fc, jule::Ptr<_1a7cd41ae_Data>* _202254_d) {
	if (((*((*(_202232_fc))))._field_Args.len() < 1LL)) {
		_1a7cd6469_pushErr(_self_.ptr(), (*((*(_202232_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type4); __jule_collection; }));
	} else if (((*((*(_202232_fc))))._field_Args.len() > 1LL)) {
		_1a7cd6469_pushErr(_self_.ptr(), (*((*((*(_202232_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_202254_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
	} else if ((*((*(_202232_fc))))._field_IsCo) {
		_1a7cd6469_pushErr(_self_.ptr(), (*((*(_202232_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52)), jule::Slice<jule::Any>());
		(*(_202254_d))=nullptr;
		return;;
	} else if (((*((*(_202232_fc))))._field_Exception != nullptr)) {
		_1a7cd6469_pushErr(_self_.ptr(), (*((*(_202232_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals are not supported for type-cast call", 49)), jule::Slice<jule::Any>());
		(*(_202254_d))=nullptr;
		return;;
	};
	if (((*((*(_202232_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1a7b89251_Expr> _20388_arg = (*((*(_202232_fc))))._field_Args[0LL];;
		(*(_202254_d))=_1a7ced42b_evalCastT(_self_, &((*((*(_202254_d))))._field_Kind), &(_20388_arg), &((*(_20388_arg))._field_Token));
		return;;
	};
	if (((*(_202254_d)) != nullptr)) {
		(*((*(_202254_d))))._field_Decl=false;
	};
}



inline void _1a7d00153_callBuiltinFn(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _204835_fc, jule::Ptr<_1a7cd41ae_Data>* _204857_d) {
	if ((!(_1a7b8d332_Unhandled((*(_204835_fc)).ptr())))) {
		_1a7cd6469_pushErr(_self_.ptr(), (*((*(_204835_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	(*(_204857_d))=(*(_1a7d20739_Fn((*((*(_204857_d))))._field_Kind.ptr())))._field_caller(&(_self_), _204835_fc, _204857_d);
	if (((*(_204857_d)) == nullptr)) {
		return;;
	};
	(*((*(_204857_d))))._field_Mutable=true;
}



inline void _1a7d004b6_checkFnOfConcurrentCall(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _206040_f, jule::Ptr<_1a7b69b05_Token> _206051_errorToken) {
	if (_1a7cd6e5e_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_206040_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe200d7:;
		if (it != expr_end) {
			jule::Ptr<_1a7bbc839_ParamIns> *_206410_p = it;
			{
				if (_1a7bb955b_IsSelf((*((*(_206410_p))))._field_Decl.ptr())) {
					if ((!(_1a7bb97e2_IsRef((*((*(_206410_p))))._field_Decl)))) {
						_1a7cd6469_pushErr(_self_, _206051_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97)), jule::Slice<jule::Any>());
						_1a7cd67cc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99)), jule::Slice<jule::Any>());
					};
				};
				if ((*(*((*(_206410_p))))._field_Decl.alloc)._field_Reference) {
					_1a7cd6469_pushErr(_self_, _206051_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96)), jule::Slice<jule::Any>());
					_1a7cd67cc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60)), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1abe200d7:;
			++it;
			goto _iter_begin_1abe200d7;
		}
		_iter_end_1abe200d7:;
	};
}



inline void _1a7d008d4_processExceptionalHandler(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _207946_f, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _207962_fc, jule::Ptr<_1a7cd41ae_Data>* _207984_d) {
	jule::Bool _20803_resultNeeded = ((!(_1a7bbad87_IsVoid((*((*(_207946_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1a7c1ac1c_scopeChecker> _208111_csc = nullptr;;
	jule::Ptr<_1a7c1397e_Scope> _208211_ch = nullptr;;
	jule::Ptr<_1a7baee03_FnCallExprModel> _20847_model = (*((*(_207984_d))))._field_Model.cast_ptr<_1a7baee03_FnCallExprModel>(&__jule_any_type41);;
	jule::Ptr<_1a7c1ac1c_scopeChecker> _20887_sc = (*(_self_))._field_lookup.cast_ptr<_1a7c1ac1c_scopeChecker>((jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0);;
	_208111_csc=_1a7c2d12a_newChildChecker(_20887_sc);
	if (_20803_resultNeeded) {
		(*(_208111_csc))._field_result=(*(_207946_f));
	};
	_208211_ch=_1a7c213c6_getChild(_20887_sc);
	(*((*((*(_207962_fc))))._field_Exception))._field_Parent=(*_20887_sc.alloc)._field_tree;
	(*((*_208111_csc.alloc)._field_table))._field_Vars=jule::append((*(*(_208111_csc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c7b178_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a7d142bb_buildErrorVar(&(_208211_ch), _207962_fc); __jule_collection; }));
	_1a7c217e4_checkChildSsc(_20887_sc, &((*((*(_207962_fc))))._field_Exception), &(_208211_ch), &(_208111_csc));
	(*(_20847_model))._field_Assigned=_20803_resultNeeded;
	(*_20847_model.alloc)._field_Except=_208211_ch;
	if ((_20803_resultNeeded && ((*_208111_csc.alloc)._field_result != nullptr))) {
		_1a7cd6469_pushErr(_self_, (*((*(_207962_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80)), jule::Slice<jule::Any>());
	};
}



inline void _1a7d00c47_callFn(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _210628_fc, jule::Ptr<_1a7cd41ae_Data>* _210650_d) {
	jule::Ptr<_1a7bbd8b2_FnIns> _21077_f = _1a7d20739_Fn((*((*(_210650_d))))._field_Kind.ptr());;
	if (_1a7bbed7a_IsBuiltin(_21077_f.ptr())) {
		_1a7d00153_callBuiltinFn(_self_, _210628_fc, _210650_d);
		return;;
	};
	if ((_1a7cd71e5_isGlobal(_self_) && (*((*_21077_f.alloc)._field_Decl))._field_Exceptional)) {
		_1a7cd6469_pushErr(_self_, (*((*(_210628_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals are not allowed in global scope", 44)), jule::Slice<jule::Any>());
		_1a7cd67cc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("wrap exceptional with a non-exceptional function", 48)), jule::Slice<jule::Any>());
		(*(_210650_d))=nullptr;
		return;;
	};
	if (((!(_1a7bbb11d_IsMethod((*(_21077_f))._field_Decl))) && _1a7d38312_hasDirective(&((*(*(_21077_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
		_1a7cd6469_pushErr(_self_, (*((*(_210628_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot call test functions", 30)), jule::Slice<jule::Any>());
		(*(_210650_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_210650_d))))._field_Mutable)) && _1a7bbb11d_IsMethod((*(_21077_f))._field_Decl)) && (!((*(*(_21077_f))._field_Decl.alloc)._field_Statically))) && (*((*(*(_21077_f))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((!((*_self_.alloc)._field_immutable))) {
			_1a7cd6469_pushErr(_self_, (*((*(_210628_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1a7badbc1_StructLitExprModel> _21335_lit = _1a7d1849b_isLitBased(&((*((*(_210650_d))))._field_Model));;
			if ((_21335_lit == nullptr)) {
				_1a7cd6469_pushErr(_self_, (*((*(_210628_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
			} else {
				_1a7cc6954_checkMutRiskOfStructLit(&((*_self_.alloc)._field_s), &(_21335_lit));
			};
		};
	} else if (((!(_1a7cd6e5e_isUnsafe(_self_))) && (*(*(_21077_f))._field_Decl.alloc)._field_Unsafety)) {
		_1a7cd6469_pushErr(_self_, (*((*(_210628_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	jule::Bool _21457_dynamicAnnotation = ((((*(*(_21077_f))._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_21077_f.alloc)._field_Generics.len() == 0LL)) && ((*_21077_f.alloc)._field_Params.len() > 0LL));;
	if (_21457_dynamicAnnotation) {
		(*_21077_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>::alloc((*(*(_21077_f))._field_Decl.alloc)._field_Generics.len(), (*(*(_21077_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7d1a3b0_InsGeneric>(nullptr); __jule_collection; });
	} else if (((*_21077_f.alloc)._field_Generics.len() != (*(*(_21077_f))._field_Decl.alloc)._field_Generics.len())) {
		_1a7c5b147_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), (*(*(_21077_f))._field_Decl.alloc)._field_Generics.len(), (*_21077_f.alloc)._field_Generics.len(), (*((*(_210628_fc))))._field_Token);
		(*(_210650_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a7c56c14_sema> _21547_old = (*_self_.alloc)._field_s;;
	if (((*(*(_21077_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*((*(_21077_f))._field_Decl))._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_21547_old != (*_self_.alloc)._field_s)) {
			(*(_21547_old))._field_errors=jule::append((*_21547_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*(_self_))._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_21547_old;
	});;
	_1a7cc4006_fnCallArgChecker _21677_fcac = _1a7cc4006_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_210628_fc))))._field_Args, ._field_errorToken=(*((*(_210628_fc))))._field_Token, ._field_f=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_dynamicAnnotation=_21457_dynamicAnnotation, ._field_argModels=jule::Slice<jule::Any>(nullptr), ._field_ignored=jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>(nullptr)};;
	if ((!(_21457_dynamicAnnotation))) {
		if ((!((*_21077_f.alloc)._field_reloaded))) {
			jule::Bool _21765_ok = _1a7c66509_reloadFnInsTypes((*(_self_))._field_s, _21077_f);;
			(*_21077_f.alloc)._field_reloaded=true;
			if ((!(_21765_ok))) {
				(*(_210650_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1a7bbd8b2_FnIns> _21838_existInstance = _1a7bbc482_appendInstance((*(_21077_f))._field_Decl, &(_21077_f));;
		if ((_21838_existInstance != nullptr)) {
			_21077_f=_21838_existInstance;
		};
	} else if ((!(_1a7c6486a_buildFnNonGenericTypeKinds((*(_self_))._field_s, _21077_f, &(_21677_fcac._field_ignored))))) {
		(*(_210650_d))=nullptr;
		return;;
	};
	_21677_fcac._field_f=_21077_f;
	jule::Bool _21947_ok = false;;
	if (((*(*(_21077_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_21547_old, (*_self_.alloc)._field_s);
		_21947_ok=_1a7cc65e1_check(&_21677_fcac);
		std::swap(_21547_old, (*_self_.alloc)._field_s);
	} else {
		_21947_ok=_1a7cc65e1_check(&_21677_fcac);
	};
	if (_21457_dynamicAnnotation) {
		if ((!(_21947_ok))) {
			(*(_210650_d))=nullptr;
			return;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7ce80e6_checkGenericFn(_self_, &(_21077_f), &((*((*(_210628_fc))))._field_Token), &((*((*(_210650_d))))._field_Model));
			_21947_ok = __jule_assign_result.__jule_result_arg0;
		});
		if ((!(_21947_ok))) {
			(*(_210650_d))=nullptr;
			return;;
		};
	};
	jule::Any _22157_callModel = (*((*(_210650_d))))._field_Model;;
	if (_1a7bbad87_IsVoid((*(_21077_f))._field_Decl)) {
		(*(_210650_d))=_1a7d16312_buildVoidData();
	} else {
		(*((*(_210650_d))))._field_Kind=(*_21077_f.alloc)._field_Result;
		(*((*(_210650_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1a7baee03_FnCallExprModel> _22247_model = jule::new_ptr<_1a7baee03_FnCallExprModel>(_1a7baee03_FnCallExprModel{._field_Token=(*((*(_210628_fc))))._field_Token, ._field_Func=_21077_f, ._field_IsCo=(*((*(_210628_fc))))._field_IsCo, ._field_Expr=_22157_callModel, ._field_Args=_21677_fcac._field_argModels, ._field_Except=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Assigned=false});;
	(*((*(_210650_d))))._field_Model=jule::Any(_22247_model, &__jule_any_type41);
	(*((*(_210650_d))))._field_Mutable=true;
	if ((*(*(_21077_f))._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_210628_fc))))._field_IsCo) {
			_1a7c59b18_pushErr((*(_self_))._field_s, (*((*(_210628_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls not supports exceptionals", 42)), jule::Slice<jule::Any>());
			_1a7c59e7b_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("handle exceptional in a separate function or anonymous function", 63)), jule::Slice<jule::Any>());
		};
		{
			
			if (_1a7b8d332_Unhandled((*(_210628_fc)).ptr())) {
				_case_begin_1abe4772a:;
				{
					_1a7cd6469_pushErr(_self_, (*((*(_210628_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals must be handled", 28)), jule::Slice<jule::Any>());
					_1a7cd67cc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"!\" operator after exceptional to handle it", 47)), jule::Slice<jule::Any>());
				}
			}
			else if (_1a7b8d5b8_Ignored((*(_210628_fc)).ptr())) {
				_case_begin_1abe4740b:;
				{
					goto _match_end_1abe45ddd;
				}
			}
			else {
				_case_begin_1abe45e54:;
				{
					_1a7d008d4_processExceptionalHandler(_self_, &(_21077_f), _210628_fc, _210650_d);
				}
			}
			_match_end_1abe45ddd:;
		};
	} else if ((!(_1a7b8d332_Unhandled((*(_210628_fc)).ptr())))) {
		_1a7cd6469_pushErr(_self_, (*((*(_210628_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	if ((*((*(_210628_fc))))._field_IsCo) {
		_1a7d004b6_checkFnOfConcurrentCall(_self_, &((*(_22247_model))._field_Func), (*((*(_210628_fc))))._field_Token);
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d01088_evalFnCall(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8ce7a_FnCallExpr> _225931_fc) {
	jule::Ptr<_1a7d1bc96_TypeKind> _22607_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_22607_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_225931_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1abe4c125:;
			{
				if (((*((*((*(_225931_fc))._field_Expr))._field_Token))._field_Kind == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
					return _1a7e064e0_builtinCallerError(&(_self_), &(_225931_fc));;
				};
			}
		}
		_match_end_1abe4c09d:;
	};
	jule::Ptr<_1a7cd41ae_Data> _22737_d = _1a7d08c94_evalExprKind(_self_, (*(*(_225931_fc))._field_Expr.alloc)._field_Kind);;
	if ((_22737_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_22737_d))._field_Decl) {
		_1a7ceece0_callTypeFn(_self_, &(_225931_fc), &(_22737_d));
		return _22737_d;;
	};
	if ((_1a7d20739_Fn((*(_22737_d))._field_Kind.ptr()) == nullptr)) {
		_1a7cd6469_pushErr(_self_, (*_225931_fc.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("attempting to call a non-function", 33)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a7d00c47_callFn(_self_, &(_225931_fc), &(_22737_d));
	return _22737_d;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d01484_evalEnumStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bd1a6d_Enum> _229234_enm, jule::Ptr<_1a7b69b05_Token> _229250_ident) {
	jule::Ptr<_1a7bd1001_EnumItem> _22937_item = _1a7bd2695_FindItem(_229234_enm.ptr(), (*(_229250_ident))._field_Kind);;
	if ((_22937_item == nullptr)) {
		_1a7cd6469_pushErr(_self_, _229250_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_229234_enm.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_229250_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _1a7d181d2_evalEnumStatic(&((*(_self_))._field_s), &(_229234_enm), &(_22937_item), &(_229250_ident), _1a7cd946c_getOwnerRefers(_self_));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d01880_evalTypeEnumStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bd3278_TypeEnum> _230038_enm, jule::Ptr<_1a7b69b05_Token> _230054_ident) {
	jule::Ptr<_1a7bd2ba1_TypeEnumItem> _23017_item = _1a7bd3d6c_FindItem(_230038_enm.ptr(), (*(_230054_ident))._field_Kind);;
	if ((_23017_item == nullptr)) {
		_1a7cd6469_pushErr(_self_, _230054_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_230038_enm.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_230054_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if ((_1a7d1ec00_Enum((*((*(_23017_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abe55e53:;
			{
				return _1a7cd9a66__evalEnum(_self_, _1a7d1ec00_Enum((*((*(_23017_item))._field_Kind))._field_Kind));;
			}
		}
		else if ((_1a7d1ee86_TypeEnum((*((*(_23017_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abe540c7:;
			{
				return _1a7cda2a3__evalTypeEnum(_self_, _1a7d1ee86_TypeEnum((*((*(_23017_item))._field_Kind))._field_Kind));;
			}
		}
		else if ((_1a7d209c0_Struct((*((*(_23017_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abe5413d:;
			{
				return _1a7cda9e0__evalStruct(_self_, _1a7d209c0_Struct((*((*(_23017_item))._field_Kind))._field_Kind));;
			}
		}
		else {
			_case_begin_1abe54061:;
			{
				jule::Ptr<_1a7cd41ae_Data> _23148_d = jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=(*((*(_23017_item))._field_Kind))._field_Kind, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
				(*(_23148_d))._field_Model=jule::Any((*_23148_d.alloc)._field_Kind, &__jule_any_type87);
				return _23148_d;;
			}
		}
		_match_end_1abe5422b:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d01c7b_evalStructStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7ba8b11_StructIns> _232336_s, jule::Ptr<_1a7b69b05_Token> _232351_ident) {
	jule::Ptr<_1a7cd41ae_Data> _23247_d = jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
	;
	jule::Ptr<_1a7bba8d1_Fn> _23287_method = _1a7ba9bab_FindMethod(_232336_s.ptr(), (*(_232351_ident))._field_Kind, true);;
	if ((_23287_method != nullptr)) {
		if ((!(_1a7c5a377_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_23287_method.alloc)._field_Public, (*_23287_method.alloc)._field_Token)))) {
			_1a7cd6469_pushErr(_self_, _232351_ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_232351_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
			_1a7cd67cc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a7bbd8b2_FnIns> _23358_ins = _1a7bbc174_instance(_23287_method);;
		(*(_23358_ins))._field_Owner=_232336_s;
		_1abb75876_pushReference(_self_, &(_23358_ins));
		(*_23247_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a7bb2d3a_StructStaticIdentExprModel>(_1a7bb2d3a_StructStaticIdentExprModel{._field_Structure=_232336_s, ._field_Expr=(*_23247_d.alloc)._field_Model, ._field_Method=_23358_ins}), &__jule_any_type99);
		(*_23247_d.alloc)._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_23358_ins, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data1)});
		return _23247_d;;
	};
	jule::Ptr<_1a7c7b178_Var> _23497_sttc = _1a7baa33d_FindStatic(_232336_s, (*_232351_ident.alloc)._field_Kind);;
	if ((_23497_sttc != nullptr)) {
		return _1a7ce2909_evalVar(_self_, _23497_sttc, _232351_ident);;
	};
	_1a7cd6469_pushErr(_self_, _232351_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_232336_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_232351_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d02232_evalTraitSubIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data> _235837_d, jule::Ptr<_1a7bce362_Trait> _235851_trt, jule::Ptr<_1a7b69b05_Token> _235868_ident) {
	jule::Ptr<_1a7bba8d1_Fn> _23597_f = _1a7bd0044_FindMethod(_235851_trt.ptr(), (*(_235868_ident))._field_Kind);;
	if ((_23597_f == nullptr)) {
		_1a7cd6469_pushErr(_self_, _235868_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_235851_trt.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_235868_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7bbc174_instance(_23597_f), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data1)}), ._field_Mutable=(*(_235837_d))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1a7bb2103_TraitSubIdentExprModel>(_1a7bb2103_TraitSubIdentExprModel{._field_Token=_235868_ident, ._field_Expr=(*_235837_d.alloc)._field_Model, ._field_Method=_23597_f, ._field_Trt=_235851_trt}), &__jule_any_type100), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d02793_evalStructSubIdentField(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _238044_d, jule::Ptr<_1a7ba8b11_StructIns>* _238059_s, jule::Ptr<_1a7b69b05_Token>* _238079_tok, jule::Ptr<_1a7ba8061_FieldIns>* _238097_f) {
	jule::Ptr<_1a7bb2994_StructSubIdentExprModel> _23817_model = jule::new_ptr<_1a7bb2994_StructSubIdentExprModel>(_1a7bb2994_StructSubIdentExprModel{._field_Token=(*(_238079_tok)), ._field_Expr=jule::new_ptr<_1a7cd41ae_Data>((*((*(_238044_d))))), ._field_Method=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_Field=(*(_238097_f)), ._field_Owner=(*(_238059_s))});;
	(*((*(_238044_d))))._field_Model=jule::Any(_23817_model, &__jule_any_type101);
	(*((*(_238044_d))))._field_Kind=(*((*(_238097_f))))._field_Kind;
	(*((*(_238044_d))))._field_Lvalue=true;
	if (((*((*((*(_238097_f))))._field_Decl))._field_Mutable && (!((*((*(_238044_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0)) {
				_case_begin_1abe6abd2:;
				{
					jule::Ptr<_1a7c1ac1c_scopeChecker> _23965_scope = _1a7c1e380_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1a7c1ac1c_scopeChecker>((jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0));;
					(*((*(_238044_d))))._field_Mutable=(((*(_23965_scope))._field_owner != nullptr) && ((*(*(_23965_scope))._field_owner.alloc)._field_Owner == (*(_238059_s))));
				}
			}
			_match_end_1abe6ab6b:;
		};
	};
	return (*(_238044_d));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d02dae_evalStructSubIdentMethod(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _240545_d, jule::Ptr<_1a7ba8b11_StructIns>* _240560_s, jule::Ptr<_1a7b69b05_Token>* _240580_tok, jule::Ptr<_1a7bba8d1_Fn>* _240598_m, jule::Bool _2405106_ref) {
	if ((_1a7bb97e2_IsRef((*((*(_240598_m))))._field_Params[0LL].ptr()) && (!(_2405106_ref)))) {
		_1a7cd6469_pushErr(_self_, (*(_240580_tok)), static_cast<jule::Str>(jule::Str::lit("reference method cannot use with non-reference instance", 55)), jule::Slice<jule::Any>());
	};
	_1a7ce13ec_checkDeprecated(_self_, &((*((*(_240598_m))))._field_Directives), (*(_240580_tok)));
	jule::Ptr<_1a7bbd8b2_FnIns> _24127_ins = _1a7bbc174_instance((*(_240598_m)));;
	(*(_24127_ins))._field_Owner=(*(_240560_s));
	_1abb75876_pushReference(_self_, &(_24127_ins));
	jule::Ptr<_1a7cd41ae_Data> _24157_model = jule::new_ptr<_1a7cd41ae_Data>((*((*(_240545_d)))));;
	(*((*(_240545_d))))._field_Model=jule::Any(jule::new_ptr<_1a7bb2994_StructSubIdentExprModel>(_1a7bb2994_StructSubIdentExprModel{._field_Token=(*(_240580_tok)), ._field_Expr=_24157_model, ._field_Method=_24127_ins, ._field_Field=jule::Ptr<_1a7ba8061_FieldIns>(nullptr), ._field_Owner=(*(_240560_s))}), &__jule_any_type101);
	(*((*(_240545_d))))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_24127_ins, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data1)});
	return (*(_240545_d));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d03420_evalStructSubIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data> _242638_d, jule::Ptr<_1a7ba8b11_StructIns> _242652_s, jule::Ptr<_1a7b8c364_SubIdentExpr> _242671_si, jule::Bool _242690_ref) {
	jule::Ptr<_1a7ba8061_FieldIns> _24277_f = _1a7ba9eec_FindField(_242652_s.ptr(), (*((*(_242671_si))._field_Ident))._field_Kind);;
	if ((_24277_f != nullptr)) {
		if ((!(_1a7c5a377_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_24277_f.alloc)._field_Decl))._field_Public, (*(*(_24277_f))._field_Decl.alloc)._field_Token)))) {
			_1a7cd6469_pushErr(_self_, (*_242671_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_24277_f))._field_Decl.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1a7cd67cc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		return _1a7d02793_evalStructSubIdentField(_self_, &(_242638_d), &(_242652_s), &((*_242671_si.alloc)._field_Ident), &(_24277_f));;
	};
	;
	jule::Ptr<_1a7bba8d1_Fn> _24377_m = _1a7ba9bab_FindMethod(_242652_s, (*(*(_242671_si))._field_Ident.alloc)._field_Kind, false);;
	if ((_24377_m == nullptr)) {
		_1a7cd6469_pushErr(_self_, (*_242671_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_242652_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*(*(_242671_si))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if ((!(_1a7c5a377_isAccessibleDefine((*(_self_))._field_s, (*(_24377_m))._field_Public, (*(_24377_m))._field_Token)))) {
		_1a7cd6469_pushErr(_self_, (*_242671_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_24377_m))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1a7cd67cc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	return _1a7d02dae_evalStructSubIdentMethod(_self_, &(_242638_d), &(_242652_s), &((*_242671_si.alloc)._field_Ident), &(_24377_m), _242690_ref);;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d03761_evalIntTypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _245033_ident) {
	;
	{
		auto &_match_expr{ (*(_245033_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abe7b473:;
			{
				jule::Ptr<_1c006a461_Const> _24548_c = static__1c006a8d4_NewI64(_1c0065857_MaxI(jule::Str::lit("int", 3)));;
				(*(_24548_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=true, ._field_Kind=_1a7e02a5d_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24548_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_24548_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1abe7c089:;
			{
				jule::Ptr<_1c006a461_Const> _24638_c = static__1c006a8d4_NewI64(static_cast<jule::I64>(_1c0065e62_Min(jule::Str::lit("int", 3))));;
				(*(_24638_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=true, ._field_Kind=_1a7e02a5d_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24638_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_24638_c});;
			}
		}
		else {
			_case_begin_1abe7ad46:;
			{
				_1a7cd6469_pushErr(_self_, _245033_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("int", 3), &__jule_any_type4); (*it++) = jule::Any((*(_245033_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abe7b099:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d03aa2_evalUintTypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _247734_ident) {
	;
	{
		auto &_match_expr{ (*(_247734_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abe8071e:;
			{
				jule::Ptr<_1c006a461_Const> _24818_c = static__1c006ab9d_NewU64(_1c0065b21_MaxU(jule::Str::lit("uint", 4)));;
				(*(_24818_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=true, ._field_Kind=_1a7e02695_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24818_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_24818_c});;
			}
		}
		else {
			_case_begin_1abe80125:;
			{
				_1a7cd6469_pushErr(_self_, _247734_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("uint", 4), &__jule_any_type4); (*it++) = jule::Any((*(_247734_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abe80345:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d03de3_evalI8TypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _249532_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_249532_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abe83b62:;
			{
				jule::Ptr<_1c006a461_Const> _25018_c = static__1c006a8d4_NewI64(127LL);;
				(*(_25018_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=true, ._field_Kind=_1a7e02ca0_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25018_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25018_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1abe84778:;
			{
				jule::Ptr<_1c006a461_Const> _25108_c = static__1c006a8d4_NewI64(-128LL);;
				(*(_25108_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=true, ._field_Kind=_1a7e02ca0_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25108_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25108_c});;
			}
		}
		else {
			_case_begin_1abe8337b:;
			{
				_1a7cd6469_pushErr(_self_, _249532_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i8", 2), &__jule_any_type4); (*it++) = jule::Any((*(_249532_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abe83799:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d04234_evalI16TypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _252433_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_252433_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abe883e7:;
			{
				jule::Ptr<_1c006a461_Const> _25308_c = static__1c006a8d4_NewI64(32767LL);;
				(*(_25308_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=true, ._field_Kind=_1a7e03047_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25308_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25308_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1abe8900d:;
			{
				jule::Ptr<_1c006a461_Const> _25398_c = static__1c006a8d4_NewI64(-32768LL);;
				(*(_25398_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=true, ._field_Kind=_1a7e03047_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25398_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25398_c});;
			}
		}
		else {
			_case_begin_1abe87b00:;
			{
				_1a7cd6469_pushErr(_self_, _252433_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i16", 3), &__jule_any_type4); (*it++) = jule::Any((*(_252433_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abe8802e:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d04575_evalI32TypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _255333_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_255333_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abe8cb7c:;
			{
				jule::Ptr<_1c006a461_Const> _25598_c = static__1c006a8d4_NewI64(2147483647LL);;
				(*(_25598_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=true, ._field_Kind=_1a7e03300_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25598_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25598_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1abe8d793:;
			{
				jule::Ptr<_1c006a461_Const> _25688_c = static__1c006a8d4_NewI64(-2147483648LL);;
				(*(_25688_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=true, ._field_Kind=_1a7e03300_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25688_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25688_c});;
			}
		}
		else {
			_case_begin_1abe8c385:;
			{
				_1a7cd6469_pushErr(_self_, _255333_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i32", 3), &__jule_any_type4); (*it++) = jule::Any((*(_255333_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abe8c7b4:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d048b6_evalI64TypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _258233_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_258233_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abe92412:;
			{
				jule::Ptr<_1c006a461_Const> _25888_c = static__1c006a8d4_NewI64(jule::MAX_I64);;
				(*(_25888_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=true, ._field_Kind=_1a7e035a8_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25888_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25888_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1abe93028:;
			{
				jule::Ptr<_1c006a461_Const> _25978_c = static__1c006a8d4_NewI64(jule::MIN_I64);;
				(*(_25978_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=true, ._field_Kind=_1a7e035a8_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25978_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25978_c});;
			}
		}
		else {
			_case_begin_1abe91b1a:;
			{
				_1a7cd6469_pushErr(_self_, _258233_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i64", 3), &__jule_any_type4); (*it++) = jule::Any((*(_258233_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abe92049:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d04c07_evalU8TypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _261132_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_261132_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abe96812:;
			{
				jule::Ptr<_1c006a461_Const> _26168_c = static__1c006ab9d_NewU64(255LLU);;
				(*(_26168_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=true, ._field_Kind=_1a7e03861_primU8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26168_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26168_c});;
			}
		}
		else {
			_case_begin_1abe95ed7:;
			{
				_1a7cd6469_pushErr(_self_, _261132_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u8", 2), &__jule_any_type4); (*it++) = jule::Any((*(_261132_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abe963a0:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d05048_evalU16TypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _263033_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_263033_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abe997c1:;
			{
				jule::Ptr<_1c006a461_Const> _26358_c = static__1c006ab9d_NewU64(65535LLU);;
				(*(_26358_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=true, ._field_Kind=_1a7e03b19_primU16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26358_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26358_c});;
			}
		}
		else {
			_case_begin_1abe98c54:;
			{
				_1a7cd6469_pushErr(_self_, _263033_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u16", 3), &__jule_any_type4); (*it++) = jule::Any((*(_263033_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abe9935e:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d05389_evalU32TypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _264933_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_264933_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abe9c780:;
			{
				jule::Ptr<_1c006a461_Const> _26548_c = static__1c006ab9d_NewU64(4294967295LLU);;
				(*(_26548_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=true, ._field_Kind=_1a7e03dc2_primU32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26548_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26548_c});;
			}
		}
		else {
			_case_begin_1abe9bc13:;
			{
				_1a7cd6469_pushErr(_self_, _264933_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u32", 3), &__jule_any_type4); (*it++) = jule::Any((*(_264933_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abe9c31d:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d056ca_evalU64TypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _266833_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_266833_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abea073e:;
			{
				jule::Ptr<_1c006a461_Const> _26738_c = static__1c006ab9d_NewU64(jule::MAX_U64);;
				(*(_26738_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=true, ._field_Kind=_1a7e043ab_primU64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26738_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26738_c});;
			}
		}
		else {
			_case_begin_1abe9ebc2:;
			{
				_1a7cd6469_pushErr(_self_, _266833_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u64", 3), &__jule_any_type4); (*it++) = jule::Any((*(_266833_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abea02cc:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d05a1b_evalF32TypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _268733_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_268733_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abea3dc4:;
			{
				jule::Ptr<_1c006a461_Const> _26948_c = static__1c006b4ea_NewF64(340282346638528860000000000000000000000.0);;
				(*(_26948_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=true, ._field_Kind=_1a7e045ed_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26948_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26948_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1abea49da:;
			{
				jule::Ptr<_1c006a461_Const> _27038_c = static__1c006b4ea_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_27038_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=true, ._field_Kind=_1a7e045ed_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27038_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_27038_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1abea4a51:;
			{
				jule::Ptr<_1c006a461_Const> _27128_c = static__1c006b4ea_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_27128_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=true, ._field_Kind=_1a7e045ed_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27128_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_27128_c});;
			}
		}
		else {
			_case_begin_1abea3698:;
			{
				_1a7cd6469_pushErr(_self_, _268733_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f32", 3), &__jule_any_type4); (*it++) = jule::Any((*(_268733_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abea39ea:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d05d5c_evalF64TypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7b69b05_Token> _272633_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_272633_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abea9b44:;
			{
				jule::Ptr<_1c006a461_Const> _27338_c = static__1c006b4ea_NewF64(jule::MAX_F64);;
				(*(_27338_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=true, ._field_Kind=_1a7e0480c_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27338_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_27338_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1abeaa75a:;
			{
				jule::Ptr<_1c006a461_Const> _27428_c = static__1c006b4ea_NewF64(jule::MIN_F64);;
				(*(_27428_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=true, ._field_Kind=_1a7e0480c_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27428_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_27428_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1abeaa7c1:;
			{
				jule::Ptr<_1c006a461_Const> _27518_c = static__1c006b4ea_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_27518_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=true, ._field_Kind=_1a7e0480c_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27518_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_27518_c});;
			}
		}
		else {
			_case_begin_1abea9418:;
			{
				_1a7cd6469_pushErr(_self_, _272633_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f64", 3), &__jule_any_type4); (*it++) = jule::Any((*(_272633_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abea976a:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d06258_evalPrimStatic(_1a7cd5dd6_eval* _self_, jule::Str _276530_kind, jule::Ptr<_1a7b69b05_Token> _276541_ident) {
	{
		auto &_match_expr{ _276530_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1abeae73c:;
			{
				return _1a7d03761_evalIntTypeStatic(_self_, _276541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4))) {
			_case_begin_1abeb02ed:;
			{
				return _1a7d03aa2_evalUintTypeStatic(_self_, _276541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1abeb0364:;
			{
				return _1a7d03de3_evalI8TypeStatic(_self_, _276541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1abeae3eb:;
			{
				return _1a7d04234_evalI16TypeStatic(_self_, _276541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1abeae462:;
			{
				return _1a7d04575_evalI32TypeStatic(_self_, _276541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1abeae4c8:;
			{
				return _1a7d048b6_evalI64TypeStatic(_self_, _276541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1abeae53e:;
			{
				return _1a7d04c07_evalU8TypeStatic(_self_, _276541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1abeb0452:;
			{
				return _1a7d05048_evalU16TypeStatic(_self_, _276541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1abeb04b8:;
			{
				return _1a7d05389_evalU32TypeStatic(_self_, _276541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1abeb052e:;
			{
				return _1a7d056ca_evalU64TypeStatic(_self_, _276541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1abeb0595:;
			{
				return _1a7d05a1b_evalF32TypeStatic(_self_, _276541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1abeb060b:;
			{
				return _1a7d05d5c_evalF64TypeStatic(_self_, _276541_ident);;
			}
		}
		else {
			_case_begin_1abeaa99c:;
			{
				_1a7cd6469_pushErr(_self_, _276541_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_276530_kind, &__jule_any_type4); (*it++) = jule::Any((*(_276541_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abeaaa24:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d06654_evalTypeStatic(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data> _279734_d, jule::Ptr<_1a7b8c364_SubIdentExpr> _279748_si) {
	{
		
		if ((_1a7d1e44c_Prim((*(_279734_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abeb56aa:;
			{
				return _1a7d06258_evalPrimStatic(_self_, _1a7d25233_Str(_1a7d1e44c_Prim((*(_279734_d))._field_Kind).ptr()), (*(_279748_si))._field_Ident);;
			}
		}
		else if ((_1a7d1ec00_Enum((*(_279734_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abeb6645:;
			{
				return _1a7d01484_evalEnumStatic(_self_, _1a7d1ec00_Enum((*(_279734_d))._field_Kind), (*(_279748_si))._field_Ident);;
			}
		}
		else if ((_1a7d1ee86_TypeEnum((*(_279734_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abeb66ab:;
			{
				return _1a7d01880_evalTypeEnumStatic(_self_, _1a7d1ee86_TypeEnum((*(_279734_d))._field_Kind), (*(_279748_si))._field_Ident);;
			}
		}
		else if ((_1a7d209c0_Struct((*(_279734_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abeb5347:;
			{
				return _1a7d01c7b_evalStructStatic(_self_, _1a7d209c0_Struct((*(_279734_d))._field_Kind), (*(_279748_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1abeb52d1:;
			{
				_1a7cd6469_pushErr(_self_, (*(_279748_si))._field_Ident, static_cast<jule::Str>(jule::Str::lit("type @ is not supports sub-defines", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_279734_d))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abeb5226:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1abebd65d_comptimeObjSubIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7be5aa4_comptimeTypeInfo>* _281354_ct, jule::Ptr<_1a7cd41ae_Data>* _281374_d, jule::Ptr<_1a7b8c364_SubIdentExpr>* _281385_si) {
	jule::Ptr<_1a7cd41ae_Data> _28147_cd = _1a7beb8ce_subIdent((*(_281354_ct)), &((*((*((*(_281385_si))))._field_Ident))._field_Kind));;
	if ((_28147_cd == nullptr)) {
		_1a7cd6469_pushErr(_self_, (*((*(_281385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_281374_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28147_cd;;
}

inline jule::Ptr<_1a7cd41ae_Data> _1abec2e48_comptimeObjSubIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bd6710_comptimeStructField>* _281354_ct, jule::Ptr<_1a7cd41ae_Data>* _281374_d, jule::Ptr<_1a7b8c364_SubIdentExpr>* _281385_si) {
	jule::Ptr<_1a7cd41ae_Data> _28147_cd = _1a7bd7b51_subIdent((*(_281354_ct)), &((*((*((*(_281385_si))))._field_Ident))._field_Kind));;
	if ((_28147_cd == nullptr)) {
		_1a7cd6469_pushErr(_self_, (*((*(_281385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_281374_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28147_cd;;
}

inline jule::Ptr<_1a7cd41ae_Data> _1abec76bc_comptimeObjSubIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bdcb56_comptimeEnumField>* _281354_ct, jule::Ptr<_1a7cd41ae_Data>* _281374_d, jule::Ptr<_1a7b8c364_SubIdentExpr>* _281385_si) {
	jule::Ptr<_1a7cd41ae_Data> _28147_cd = _1a7bddb8a_subIdent((*(_281354_ct)), &((*((*((*(_281385_si))))._field_Ident))._field_Kind));;
	if ((_28147_cd == nullptr)) {
		_1a7cd6469_pushErr(_self_, (*((*(_281385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_281374_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28147_cd;;
}

inline jule::Ptr<_1a7cd41ae_Data> _1abecbe85_comptimeObjSubIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7be096c_comptimeParam>* _281354_ct, jule::Ptr<_1a7cd41ae_Data>* _281374_d, jule::Ptr<_1a7b8c364_SubIdentExpr>* _281385_si) {
	jule::Ptr<_1a7cd41ae_Data> _28147_cd = _1a7be22ba_subIdent((*(_281354_ct)), &((*((*((*(_281385_si))))._field_Ident))._field_Kind));;
	if ((_28147_cd == nullptr)) {
		_1a7cd6469_pushErr(_self_, (*((*(_281385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_281374_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28147_cd;;
}

inline jule::Ptr<_1a7cd41ae_Data> _1abed197e_comptimeObjSubIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bd9933_comptimeStatic>* _281354_ct, jule::Ptr<_1a7cd41ae_Data>* _281374_d, jule::Ptr<_1a7b8c364_SubIdentExpr>* _281385_si) {
	jule::Ptr<_1a7cd41ae_Data> _28147_cd = _1a7bdad74_subIdent((*(_281354_ct)), &((*((*((*(_281385_si))))._field_Ident))._field_Kind));;
	if ((_28147_cd == nullptr)) {
		_1a7cd6469_pushErr(_self_, (*((*(_281385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_281374_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28147_cd;;
}

inline jule::Ptr<_1a7cd41ae_Data> _1abed6203_comptimeObjSubIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7bebba9_comptimeValue>* _281354_ct, jule::Ptr<_1a7cd41ae_Data>* _281374_d, jule::Ptr<_1a7b8c364_SubIdentExpr>* _281385_si) {
	jule::Ptr<_1a7cd41ae_Data> _28147_cd = _1a7bee63a_subIdent((*(_281354_ct)), &((*((*((*(_281385_si))))._field_Ident))._field_Kind));;
	if ((_28147_cd == nullptr)) {
		_1a7cd6469_pushErr(_self_, (*((*(_281385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_281374_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28147_cd;;
}

inline jule::Ptr<_1a7cd41ae_Data> _1abeda977_comptimeObjSubIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7c01384_comptimeFile>* _281354_ct, jule::Ptr<_1a7cd41ae_Data>* _281374_d, jule::Ptr<_1a7b8c364_SubIdentExpr>* _281385_si) {
	jule::Ptr<_1a7cd41ae_Data> _28147_cd = _1a7c02bd2_subIdent((*(_281354_ct)), &((*((*((*(_281385_si))))._field_Ident))._field_Kind));;
	if ((_28147_cd == nullptr)) {
		_1a7cd6469_pushErr(_self_, (*((*(_281385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_281374_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28147_cd;;
}

inline jule::Ptr<_1a7cd41ae_Data> _1abee0284_comptimeObjSubIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7c0529a_comptimeDecl>* _281354_ct, jule::Ptr<_1a7cd41ae_Data>* _281374_d, jule::Ptr<_1a7b8c364_SubIdentExpr>* _281385_si) {
	jule::Ptr<_1a7cd41ae_Data> _28147_cd = _1a7c09106_subIdent((*(_281354_ct)), &((*((*((*(_281385_si))))._field_Ident))._field_Kind));;
	if ((_28147_cd == nullptr)) {
		_1a7cd6469_pushErr(_self_, (*((*(_281385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_281374_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28147_cd;;
}



inline __jule_tuple_x_1a7cd41ae_Data__jule_tuple_bool _1a7d07006_tryComptimeObjSubIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data>* _282143_d, jule::Ptr<_1a7b8c364_SubIdentExpr> _282157_si) {
	__jule_tuple_x_1a7cd41ae_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1a7d22d13_comptimeTypeInfo((*((*(_282143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abebba68:;
			{
				jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _28248_ct = _1a7d22d13_comptimeTypeInfo((*((*(_282143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1abebd65d_comptimeObjSubIdent(_self_, &(_28248_ct), _282143_d, &(_282157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7d21a26_comptimeStructField((*((*(_282143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abebb5a1:;
			{
				jule::Ptr<_1a7bd6710_comptimeStructField> _28278_ct = _1a7d21a26_comptimeStructField((*((*(_282143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1abec2e48_comptimeObjSubIdent(_self_, &(_28278_ct), _282143_d, &(_282157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7d22043_comptimeEnumField((*((*(_282143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abebb628:;
			{
				jule::Ptr<_1a7bdcb56_comptimeEnumField> _28308_ct = _1a7d22043_comptimeEnumField((*((*(_282143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1abec76bc_comptimeObjSubIdent(_self_, &(_28308_ct), _282143_d, &(_282157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7d22560_comptimeParam((*((*(_282143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abebb6a0:;
			{
				jule::Ptr<_1a7be096c_comptimeParam> _28338_ct = _1a7d22560_comptimeParam((*((*(_282143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1abecbe85_comptimeObjSubIdent(_self_, &(_28338_ct), _282143_d, &(_282157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7d23330_comptimeStatic((*((*(_282143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abebb727:;
			{
				jule::Ptr<_1a7bd9933_comptimeStatic> _28368_ct = _1a7d23330_comptimeStatic((*((*(_282143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1abed197e_comptimeObjSubIdent(_self_, &(_28368_ct), _282143_d, &(_282157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7d235b6_comptimeValue((*((*(_282143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abebb79e:;
			{
				jule::Ptr<_1a7bebba9_comptimeValue> _28398_ct = _1a7d235b6_comptimeValue((*((*(_282143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1abed6203_comptimeObjSubIdent(_self_, &(_28398_ct), _282143_d, &(_282157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7d23d69_comptimeFile((*((*(_282143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abebbccc:;
			{
				jule::Ptr<_1a7c01384_comptimeFile> _28428_ct = _1a7d23d69_comptimeFile((*((*(_282143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1abeda977_comptimeObjSubIdent(_self_, &(_28428_ct), _282143_d, &(_282157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7d2384c_comptimeDecl((*((*(_282143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abebbd43:;
			{
				jule::Ptr<_1a7c0529a_comptimeDecl> _28458_ct = _1a7d2384c_comptimeDecl((*((*(_282143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1abee0284_comptimeObjSubIdent(_self_, &(_28458_ct), _282143_d, &(_282157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1abebb53a:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1abebb480:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d07402_evalObjSubIdent(_1a7cd5dd6_eval* _self_, jule::Ptr<_1a7cd41ae_Data> _285235_d, jule::Ptr<_1a7b8c364_SubIdentExpr> _285249_si) {
	if (_1a7b6c4dc_IsIgnoreIdent((*((*(_285249_si))._field_Ident))._field_Kind)) {
		_1a7cd6469_pushErr(_self_, (*_285249_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1a7cd41ae_Data> _28598_compData;
		jule::Bool _285918_ok;
		({
			__jule_tuple_x_1a7cd41ae_Data__jule_tuple_bool __jule_assign_result = _1a7d07006_tryComptimeObjSubIdent(_self_, &(_285235_d), _285249_si);
			_28598_compData = __jule_assign_result.__jule_result_arg0;
			_285918_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_285918_ok) {
			return _28598_compData;;
		};
	};
	jule::Ptr<_1a7d1bc96_TypeKind> _28657_kind = (*(_285235_d))._field_Kind;;
	{
		
		if ((_1a7d1e969_Ptr((*_285235_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abee55b9:;
			{
				jule::Ptr<_1a7d2c1a2_Ptr> _28684_ptr = _1a7d1e969_Ptr((*(_285235_d))._field_Kind);;
				if (_1a7d2cc1e_IsUnsafe(_28684_ptr.ptr())) {
					goto _match_end_1abee5542;
				};
				if ((!(_1a7cd6e5e_isUnsafe(_self_)))) {
					_1a7cd6469_pushErr(_self_, (*_285249_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				_28657_kind=(*(_1a7d1e969_Ptr((*(_285235_d))._field_Kind)))._field_Elem;
				_1a7d18787_makeImplicitDeref(&(_285235_d), (*_285249_si.alloc)._field_Ident);
			}
		}
		else if ((_1a7d1e6d3_Sptr((*_285235_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abee5663:;
			{
				_28657_kind=(*(_1a7d1e6d3_Sptr((*(_285235_d))._field_Kind)))._field_Elem;
				_1a7d18787_makeImplicitDeref(&(_285235_d), (*_285249_si.alloc)._field_Ident);
			}
		}
		_match_end_1abee5542:;
	};
	{
		
		if ((_1a7d20c56_Trait((*_285235_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abee5b2a:;
			{
				return _1a7d02232_evalTraitSubIdent(_self_, _285235_d, _1a7d20c56_Trait((*(_285235_d))._field_Kind), (*_285249_si.alloc)._field_Ident);;
			}
		}
		else if ((_1a7d209c0_Struct(_28657_kind.ptr()) != nullptr)) {
			_case_begin_1abee8e4c:;
			{
				jule::Ptr<_1a7ba8b11_StructIns> _28864_s = _1a7d209c0_Struct(_28657_kind);;
				if (_1a7d14cd3_isInstancedStruct(_28864_s)) {
					jule::Bool _28889_usedReferenceElem = (_1a7d1e6d3_Sptr((*_285235_d.alloc)._field_Kind.ptr()) != nullptr);;
					return _1a7d03420_evalStructSubIdent(_self_, _285235_d, _1a7d209c0_Struct(_28657_kind), _285249_si, _28889_usedReferenceElem);;
				};
			}
		}
		_match_end_1abee8dd6:;
	};
	_1a7cd6469_pushErr(_self_, (*_285249_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("object @ is not supports sub-defines", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*_285235_d.alloc)._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d07743_evalSubIdent(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8c364_SubIdentExpr> _289633_si) {
	jule::Ptr<_1a7d1bc96_TypeKind> _28977_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_28977_prefix;
	});;
	jule::Ptr<_1a7cd41ae_Data> _29007_d = _1a7d08c94_evalExprKind(_self_, (*((*(_289633_si))._field_Expr))._field_Kind);;
	if ((_29007_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_29007_d))._field_Decl) {
		return _1a7d06654_evalTypeStatic(_self_, _29007_d, _289633_si);;
	};
	return _1a7d07402_evalObjSubIdent(_self_, _29007_d, _289633_si);;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d07a84_evalTuple(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b89d45_TupleExpr> _291030_tup) {
	jule::Ptr<_1a7d29ea2_Tuple> _29117_tupT = jule::new_ptr<_1a7d29ea2_Tuple>(_1a7d29ea2_Tuple{._field_Types=jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>(nullptr)});;
	(*_29117_tupT.alloc)._field_Types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>::alloc(0LL, (*(_291030_tup))._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7d1bc96_TypeKind>(nullptr); __jule_collection; });
	jule::Ptr<_1a7bb3511_TupleExprModel> _29147_model = jule::new_ptr<_1a7bb3511_TupleExprModel>(_1a7bb3511_TupleExprModel{._field_Datas=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7cd41ae_Data>>::alloc(0LL, (*_291030_tup.alloc)._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7cd41ae_Data>(nullptr); __jule_collection; })});;
	jule::Bool _29187_ok = true;;
	{
		auto expr = &((*_291030_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac003e57:;
		if (it != expr_end) {
			jule::Ptr<_1a7b89251_Expr> _291915_expr = *it;
			{
				jule::Ptr<_1a7cd41ae_Data> _29208_d = _1a7d09aa8_evalExpr(_self_, _291915_expr);;
				if ((_29208_d == nullptr)) {
					_29187_ok=false;
					goto _iter_next_1ac003e57;
				};
				(*_29117_tupT.alloc)._field_Types=jule::append((*_29117_tupT.alloc)._field_Types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_29208_d))._field_Kind; __jule_collection; }));
				(*(_29147_model))._field_Datas=jule::append((*_29147_model.alloc)._field_Datas,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7cd41ae_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _29208_d; __jule_collection; }));
			}
			_iter_next_1ac003e57:;
			++it;
			goto _iter_begin_1ac003e57;
		}
		_iter_end_1ac003e57:;
	};
	if ((!(_29187_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_29117_tupT, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data25)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_29147_model, &__jule_any_type84), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d07e80_evalMap(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7d2aa52_Map> _293928_m, jule::Ptr<_1a7b8e751_BraceLit> _293941_lit) {
	jule::Ptr<_1a7bb14dc_MapExprModel> _29407_model = jule::new_ptr<_1a7bb14dc_MapExprModel>(_1a7bb14dc_MapExprModel{._field_Kind=_293928_m, ._field_Entries=jule::Slice<jule::Ptr<_1a7bb1113_KeyValPairExprModel>>(nullptr)});;
	{
		auto expr = &((*(_293941_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0077b8:;
		if (it != expr_end) {
			jule::Ptr<_1a7b89251_Expr> _294415_expr = *it;
			{
				{
					auto &_match_expr{ (*(_294415_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1ac007dd4:;
						{
							goto _match_end_1ac0081c0;
						}
					}
					else {
						_case_begin_1ac008236:;
						{
							_1a7cd6469_pushErr(_self_.ptr(), (*(_293941_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1ac0081c0:;
				};
				jule::Ptr<_1a7b9007b_KeyValPair> _29548_pair = (*(_294415_expr))._field_Kind.cast_ptr<_1a7b9007b_KeyValPair>(&__jule_any_type82);;
				jule::Ptr<_1a7cd41ae_Data> _29568_key = _1a7d09aa8_evalExpr(_self_, (*(_29548_pair))._field_Key);;
				if ((_29568_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1a7cd41ae_Data> _29618_val = _1a7d09aa8_evalExpr(_self_, (*_29548_pair.alloc)._field_Val);;
				if ((_29618_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_1a7c6741c_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_293928_m))._field_Key), &(_29568_key), &((*((*_29548_pair.alloc)._field_Key))._field_Token))) {
					_1a7c62b87_checkAssignType((*(_self_))._field_s, false, &((*_293928_m.alloc)._field_Key), &(_29568_key), (*(*(_29548_pair))._field_Key.alloc)._field_Token, _1a7cd946c_getOwnerRefers(_self_));
				};
				if (_1a7c6741c_checkValidityForInitExpr((*(_self_))._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_293928_m.alloc)._field_Val), &(_29618_val), &((*((*_29548_pair.alloc)._field_Val))._field_Token))) {
					_1a7c62b87_checkAssignType((*(_self_))._field_s, false, &((*_293928_m.alloc)._field_Val), &(_29618_val), (*(*(_29548_pair))._field_Val.alloc)._field_Token, _1a7cd946c_getOwnerRefers(_self_));
				};
				(*(_29407_model))._field_Entries=jule::append((*_29407_model.alloc)._field_Entries,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7bb1113_KeyValPairExprModel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a7bb1113_KeyValPairExprModel>(_1a7bb1113_KeyValPairExprModel{._field_Key=(*(_29568_key))._field_Model, ._field_Val=(*(_29618_val))._field_Model}); __jule_collection; }));
			}
			_iter_next_1ac0077b8:;
			++it;
			goto _iter_begin_1ac0077b8;
		}
		_iter_end_1ac0077b8:;
	};
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_293928_m, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data26)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_29407_model, &__jule_any_type102), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d082c1_evalBraceLit(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8e751_BraceLit> _298733_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1ac019aa5:;
			{
				_1a7cd6469_pushErr(_self_, (*(_298733_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a7d20edc_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ac019b1b:;
			{
				return _1a7d07e80_evalMap(_self_, _1a7d20edc_Map((*(_self_))._field_prefix), _298733_lit);;
			}
		}
		else if ((_1a7d209c0_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ac0174cb:;
			{
				return _1a7cee064_evalStructLitExplicit(_self_, _1a7d209c0_Struct((*(_self_))._field_prefix), (*(_298733_lit))._field_Exprs, (*_298733_lit.alloc)._field_Token);;
			}
		}
		else {
			_case_begin_1ac017465:;
			{
				_1a7cd6469_pushErr(_self_.ptr(), (*(_298733_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac0186b9:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d08612_evalAnonFunc(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b96acc_FnDecl> _300233_decl) {
	_1a7d2e193_typeChecker _30037_tc = _1a7d2e193_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1a7d2d1a3_referencer>(nullptr), ._field_refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a7d1aea4_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr), ._field_inscatch=false};;
	jule::Ptr<_1a7bbd8b2_FnIns> _30087_ins = _1a7d362aa_buildFunc(&_30037_tc, _300233_decl);;
	if ((_30087_ins == nullptr)) {
		return nullptr;;
	};
	(*(_30087_ins))._field_AsAnon=true;
	jule::Slice<jule::Ptr<_1a7c7b178_Var>> _30137_captured = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c7b178_Var>>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7c7b178_Var>(nullptr); __jule_collection; });;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0)) {
			_case_begin_1ac020539:;
			{
				jule::Ptr<_1a7c1ac1c_scopeChecker> _30168_sc = (*_self_.alloc)._field_lookup.cast_ptr<_1a7c1ac1c_scopeChecker>((jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0);;
				jule::Ptr<_1a7c1ac1c_scopeChecker> _30178_scc = _1a7c2d12a_newChildChecker(_30168_sc);;
				(*(_30178_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a7c19c2c_scopeLabel>>>(nullptr);
				(*_30178_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a7c16b3b_GotoSt>>>(nullptr);
				(*_30178_scc.alloc)._field_owner=_30087_ins;
				(*_30178_scc.alloc)._field_childIndex=0LL;
				(*_30178_scc.alloc)._field_it=0LLU;
				(*_30178_scc.alloc)._field_cse=0LLU;
				(*_30178_scc.alloc)._field_captured=((jule::Ptr<jule::Slice<jule::Ptr<_1a7c7b178_Var>>>)((&(_30137_captured))));
				_1a7c758e2_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_30087_ins), &(_30178_scc));
			}
		}
		else {
			_case_begin_1ac02113e:;
			{
				_1a7c7600d_checkFnIns((*_self_.alloc)._field_s, &(_30087_ins));
			}
		}
		_match_end_1ac0210c8:;
	};
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_30087_ins, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1a7bb0c39_AnonFnExprModel>(_1a7bb0c39_AnonFnExprModel{._field_Captured=_30137_captured, ._field_Func=_30087_ins, ._field_Global=_1a7cd71e5_isGlobal(_self_)}), &__jule_any_type103), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d08953_evalBinary(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b8c81a_BinaryExpr> _304031_op) {
	_1a7d0bec8_binaryEval _30417_bs = static__1a7d0c5b1_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1a7d24dae_Prim> _30444_prim = _1a7d1e44c_Prim((*(_self_))._field_prefix);;
		if (((_30444_prim == nullptr) || (!(_1c0069dbc_IsNum(_1a7d25233_Str(_30444_prim.ptr())))))) {
			jule::Ptr<_1a7d1bc96_TypeKind> _30469_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_30469_prefix;
			});;
			return _1a7d13122_eval(&_30417_bs, &(_304031_op));;
		};
	};
	return _1a7d13122_eval(&_30417_bs, &(_304031_op));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d08c94_evalExprKind(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Any _305533_kind) {
	{
		auto &_match_expr{ _305533_kind };
		
		if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1ac02c348:;
			{
				jule::Ptr<_1a7b8951a_RangeExpr> _30588_e = _305533_kind.unsafe_cast_ptr<_1a7b8951a_RangeExpr>();;
				return _1a7d08c94_evalExprKind(_self_, (*((*(_30588_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1ac02c678:;
			{
				return _1a7cd8999_evalLit(_self_.ptr(), _305533_kind.cast_ptr<_1a7b8a1db_LitExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1ac02c6de:;
			{
				return _1a7ce3542_evalIdent(_self_.ptr(), _305533_kind.cast_ptr<_1a7b8aa6b_IdentExpr>(&__jule_any_type52));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1ac02c755:;
			{
				return _1a7ce3883_evalUnary(_self_, _305533_kind.cast_ptr<_1a7b8b30d_UnaryExpr>(&__jule_any_type91));;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ac02c7bb:;
			{
				return _1a7ce3bc4_evalVariadic(_self_, _305533_kind.cast_ptr<_1a7b8b6d7_VariadicExpr>(&__jule_any_type79));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1ac02c832:;
			{
				return _1a7ce4015_evalUnsafe(_self_, _305533_kind.cast_ptr<_1a7b8a5b5_UnsafeExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1ac02c898:;
			{
				return _1a7ce4b4d_evalSliceExpr(_self_, _305533_kind.cast_ptr<_1a7b907a7_SliceExpr>(&__jule_any_type97));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1ac02cc94:;
			{
				return _1a7ce879a_evalIndexing(_self_, _305533_kind.cast_ptr<_1a7b91214_IndexingExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1ac02cd0a:;
			{
				return _1a7ce9acb_evalSlicing(_self_, _305533_kind.cast_ptr<_1a7b91874_SlicingExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1ac02cd71:;
			{
				return _1a7ced76c_evalCast(_self_, _305533_kind.cast_ptr<_1a7b8bab1_CastExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ac02cdd7:;
			{
				return _1a7cedaad_evalNsSelection(_self_.ptr(), _305533_kind.cast_ptr<_1a7b8be8a_NsSelectionExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ac02ce5e:;
			{
				return _1a7cee3a5_evalStructLit(_self_, _305533_kind.cast_ptr<_1a7b8e29a_StructLit>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ac02ced6:;
			{
				return _1a7cee97c_evalType(_self_.ptr(), _305533_kind.cast_ptr<_1a7b800b0_TypeDecl>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ac02d05d:;
			{
				return _1a7d01088_evalFnCall(_self_, _305533_kind.cast_ptr<_1a7b8ce7a_FnCallExpr>(&__jule_any_type85));;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1ac02d0d5:;
			{
				return _1a7d07743_evalSubIdent(_self_, _305533_kind.cast_ptr<_1a7b8c364_SubIdentExpr>(&__jule_any_type89));;
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1ac02d15c:;
			{
				return _1a7d07a84_evalTuple(_self_, _305533_kind.cast_ptr<_1a7b89d45_TupleExpr>(&__jule_any_type83));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ac02d1d4:;
			{
				return _1a7d082c1_evalBraceLit(_self_, _305533_kind.cast_ptr<_1a7b8e751_BraceLit>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ac02d25b:;
			{
				return _1a7d08612_evalAnonFunc(_self_, _305533_kind.cast_ptr<_1a7b96acc_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ac02d2d3:;
			{
				return _1a7d08953_evalBinary(_self_, _305533_kind.cast_ptr<_1a7b8c81a_BinaryExpr>(&__jule_any_type112));;
			}
		}
		else {
			_case_begin_1ac02c612:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac02c59b:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d090d5_eval1(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b89251_Expr> _310326_expr) {
	jule::Ptr<_1a7cd41ae_Data> _31047_d = _1a7d08c94_evalExprKind(_self_, (*(_310326_expr))._field_Kind);;
	if (((_31047_d == nullptr) || ((*(_31047_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1a7d20739_Fn((*(_31047_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac0535a0:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _31128_f = _1a7d20739_Fn((*(_31047_d))._field_Kind.ptr());;
				if (_1a7bbed7a_IsBuiltin(_31128_f.ptr())) {
					_1a7c59b18_pushErr((*_self_.alloc)._field_s.ptr(), (*_310326_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("built-in functions should be invoked", 36)), jule::Slice<jule::Any>());
					goto _match_end_1ac051ca7;
				};
				jule::I64 _31174_required = (*((*_31128_f.alloc)._field_Decl))._field_Generics.len();;
				jule::I64 _31184_given = (*_31128_f.alloc)._field_Generics.len();;
				if ((!(_1a7c5b147_checkGenericQuantity((*(_self_))._field_s, _31174_required, _31184_given, (*_310326_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
				if (((!((*(*(_31128_f))._field_Decl.alloc)._field_Statically)) && _1a7bbb11d_IsMethod((*(_31128_f))._field_Decl))) {
					_1a7c59b18_pushErr((*(_self_))._field_s, (*_310326_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods should be invoked", 25)), jule::Slice<jule::Any>());
				} else if ((_1a7d1351d_findDirective(&((*(*(_31128_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6))) != nullptr)) {
					_1a7c59b18_pushErr((*(_self_))._field_s, (*_310326_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ is exported for backend so you cannot use as anonymous function", 72)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_31128_f))._field_Decl.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				} else {
					(*_31128_f.alloc)._field_AsAnon=true;
				};
			}
		}
		else if ((*(_31047_d))._field_Decl) {
			_case_begin_1ac053616:;
			{
				jule::Ptr<_1a7ba8b11_StructIns> _31318_s = _1a7d209c0_Struct((*(_31047_d))._field_Kind.ptr());;
				if ((_31318_s == nullptr)) {
					goto _match_end_1ac051ca7;
				};
				jule::I64 _31354_required = (*((*(_31318_s))._field_Decl))._field_Generics.len();;
				jule::I64 _31364_given = (*(_31318_s))._field_Generics.len();;
				if ((!(_1a7c5b147_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _31354_required, _31364_given, (*_310326_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
			}
		}
		_match_end_1ac051ca7:;
	};
	return _31047_d;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d09426_eval(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b89251_Expr> _314825_expr) {
	jule::Ptr<_1a7cd41ae_Data> _31497_d = _1a7d090d5_eval1(_self_, _314825_expr);;
	if ((_31497_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _1a7d21509_comptime((*(_31497_d))._field_Kind.ptr()))) {
		_1a7c59b18_pushErr((*_self_.alloc)._field_s.ptr(), (*(_314825_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("compile-time evaluations cannot used as expression", 50)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _31497_d;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d09767_evalExpr1(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b89251_Expr> _316330_expr) {
	jule::Ptr<_1a7cd41ae_Data> _31647_d = _1a7d090d5_eval1(_self_, _316330_expr);;
	{
		
		if ((_31647_d == nullptr)) {
			_case_begin_1ac061855:;
			{
				return nullptr;;
			}
		}
		else if ((*(_31647_d))._field_Decl) {
			_case_begin_1ac0618ee:;
			{
				_1a7cd6469_pushErr(_self_, (*(_316330_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1ac0617cd:;
			{
				return _31647_d;;
			}
		}
		_match_end_1ac061756:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d09aa8_evalExpr(jule::Ptr<_1a7cd5dd6_eval> _self_, jule::Ptr<_1a7b89251_Expr> _317929_expr) {
	jule::Ptr<_1a7cd41ae_Data> _31807_d = _1a7d09426_eval(_self_, _317929_expr);;
	{
		
		if ((_31807_d == nullptr)) {
			_case_begin_1ac0638bd:;
			{
				return nullptr;;
			}
		}
		else if ((*(_31807_d))._field_Decl) {
			_case_begin_1ac063967:;
			{
				_1a7cd6469_pushErr(_self_, (*(_317929_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1ac063846:;
			{
				return _31807_d;;
			}
		}
		_match_end_1ac0637be:;
	};
}








inline jule::Bool _1a7d0a03c_unaryEval_eq(_1a7d0a03c_unaryEval *_self_, _1a7d0a03c_unaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_u == _self_->_field_u);
}

inline _1a7d0a03c_unaryEval static__1a7d0a4b0_new(jule::Ptr<_1a7cd5dd6_eval> _320020_e) {
	return _1a7d0a03c_unaryEval{._field_e=_320020_e, ._field_d=jule::Ptr<_1a7cd41ae_Data>(nullptr), ._field_u=jule::Ptr<_1a7b8b30d_UnaryExpr>(nullptr)};;
}



inline void _1a7d0a6ad_minus(_1a7d0a03c_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1ac06577c:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a7d1e44c_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac065b67:;
			{
				if ((!(_1c0069dbc_IsNum(_1a7d1c192_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a7d209c0_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac06542a:;
			{
				if (((*(_1a7d209c0_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ac0653b4:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ac0652e8:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a7cd4ae9_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1c006ee9e_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ac06a045:;
				{
					_1c006ded1_SetF64((*((*(_self_))._field_d))._field_Constant, (-(_1c006c8a3_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1c006e465_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ac06a133:;
				{
					_1c006d40e_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1c006bd69_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1c006e6eb_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ac069be3:;
				{
					_1c006d40e_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1c006cb39_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1ac069b6b:;
				{
					__jule_panic_s(jule::Str::lit("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3238:5"));;
				}
			}
			_match_end_1ac069a8e:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a7bad2ec_UnaryExprModel>(_1a7bad2ec_UnaryExprModel{._field_Expr=jule::new_ptr<_1a7cd41ae_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _1a7d0a8ab_plus(_1a7d0a03c_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1ac0706cc:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a7d1e44c_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac070ab7:;
			{
				if ((!(_1c0069dbc_IsNum(_1a7d1c192_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a7d209c0_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac07037a:;
			{
				if (((*(_1a7d209c0_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ac070314:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ac070204:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a7cd4ae9_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1c006ee9e_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ac074e95:;
				{
					_1c006ded1_SetF64((*((*(_self_))._field_d))._field_Constant, (+(_1c006c8a3_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1c006e465_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ac075083:;
				{
					_1c006d40e_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1c006bd69_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1c006e6eb_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ac074b43:;
				{
					_1c006d40e_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1c006cb39_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1ac074abb:;
				{
					__jule_panic_s(jule::Str::lit("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3283:5"));;
				}
			}
			_match_end_1ac0749de:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a7bad2ec_UnaryExprModel>(_1a7bad2ec_UnaryExprModel{._field_Expr=jule::new_ptr<_1a7cd41ae_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _1a7d0aaa9_caret(_1a7d0a03c_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1ac07a60a:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a7d1e44c_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac07a9e5:;
			{
				if ((!(_1c00697e5_IsInt(_1a7d1c192_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a7d209c0_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac07a2a8:;
			{
				if (((*(_1a7d209c0_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ac07a242:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ac07a132:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a7cd4ae9_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1c006e465_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ac07edb2:;
				{
					_1c006d40e_SetI64((*((*(_self_))._field_d))._field_Constant, (~(_1c006bd69_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1c006e6eb_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ac07eea0:;
				{
					_1c006d6b7_SetU64((*((*(_self_))._field_d))._field_Constant, (~(_1c006c100_ReadU64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1ac07e9e9:;
				{
					__jule_panic_s(jule::Str::lit("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3326:5"));;
				}
			}
			_match_end_1ac07e91c:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a7bad2ec_UnaryExprModel>(_1a7bad2ec_UnaryExprModel{._field_Expr=jule::new_ptr<_1a7cd41ae_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _1a7d0aca7_excl(_1a7d0a03c_unaryEval* _self_) {
	jule::Ptr<_1a7d24dae_Prim> _33403_t = _1a7d1e44c_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_33403_t == nullptr) || (!(_1a7d280e3_IsBool(_33403_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a7cd4ae9_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1c006e982_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ac086193:;
				{
					_1c006d970_SetBool((*((*(_self_))._field_d))._field_Constant, (!(_1c006c386_ReadBool((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1ac085cca:;
				{
					__jule_panic_s(jule::Str::lit("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3354:5"));;
				}
			}
			_match_end_1ac085bed:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a7bad2ec_UnaryExprModel>(_1a7bad2ec_UnaryExprModel{._field_Expr=jule::new_ptr<_1a7cd41ae_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _1a7d0aea5_star(_1a7d0a03c_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1a7bad2ec_UnaryExprModel>(_1a7bad2ec_UnaryExprModel{._field_Expr=jule::new_ptr<_1a7cd41ae_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
	{
		
		if ((_1a7d1e969_Ptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac0899e3:;
			{
				if ((!(_1a7cd6e5e_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1a7cd6469_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a7d2c1a2_Ptr> _33798_t = _1a7d1e969_Ptr((*((*(_self_))._field_d))._field_Kind);;
				if (_1a7d2cc1e_IsUnsafe(_33798_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(*(_self_))._field_d.alloc)._field_Kind=(*_33798_t.alloc)._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_1a7d1e6d3_Sptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac089a6a:;
			{
				(*(*(_self_))._field_d.alloc)._field_Kind=(*(_1a7d1e6d3_Sptr((*((*(_self_))._field_d))._field_Kind)))._field_Elem;
			}
		}
		else {
			_case_begin_1ac08963b:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ac088629:;
	};
	(*(*(_self_))._field_d.alloc)._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _1a7d0b1a3_amper(_1a7d0a03c_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac09328d:;
			{
				jule::Ptr<_1a7badbc1_StructLitExprModel> _34018_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_1a7badbc1_StructLitExprModel>();;
				_1a7d13e47_makeStructLitAlloc(&((*(_self_))._field_d), &(_34018_lit));
			}
		}
		else {
			_case_begin_1ac0906ca:;
			{
				{
					
					if (_1a7d385cb_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1ac0910c1:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7d2c1a2_Ptr>(_1a7d2c1a2_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Kind}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data28)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a7bad2ec_UnaryExprModel>(_1a7bad2ec_UnaryExprModel{._field_Expr=jule::new_ptr<_1a7cd41ae_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
						}
					}
					else {
						_case_begin_1ac0902bd:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1ac090b70:;
				};
			}
		}
		_match_end_1ac090664:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _1a7d0b3a1_typeDecl(_1a7d0a03c_unaryEval* _self_) {
	_1a7d2e193_typeChecker _34267_tc = _1a7d2e193_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1a7d2d1a3_referencer>(nullptr), ._field_refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_errorToken=(*((*(_self_))._field_u))._field_Op, ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a7d1aea4_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac096cca:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7d349c3_buildPtrFromType(&_34267_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data28)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type87);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ac096989:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7d34341_buildSptrFromType(&_34267_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data23)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type87);
			}
		}
		else {
			_case_begin_1ac0963c3:;
			{
				_1a7cd6469_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ac096912:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1a7d0b59e_evalData(_1a7d0a03c_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ac09c5d8:;
			{
				jule::Ptr<_1a7d1bc96_TypeKind> _34518_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_1a7d09426_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_34518_prefix;
			}
		}
		else {
			_case_begin_1ac096a00:;
			{
				(*(_self_))._field_d=_1a7d09426_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1ac09c1ba:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d0b8e0_eval(_1a7d0a03c_unaryEval* _self_, jule::Ptr<_1a7b8b30d_UnaryExpr> _346024_u) {
	(*(_self_))._field_u=_346024_u;
	_1a7d0b59e_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1a7d0b3a1_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1a7d1bc96_TypeKind> _34713_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ac0a1ca2:;
			{
				_1a7d0a6ad_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1ac0a1d18:;
			{
				_1a7d0a8ab_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ac0a1d7e:;
			{
				_1a7d0aaa9_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1ac0a1de5:;
			{
				_1a7d0aca7_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac0a1e5b:;
			{
				_1a7d0aea5_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ac0a1ec2:;
			{
				_1a7d0b1a3_amper(_self_);
			}
		}
		else {
			_case_begin_1ac0a1763:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1ac0a1c2a:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1ac0a24cd:;
			{
				_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str(_34713_kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_1a7cd4ae9_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1ac0a0432:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type20);
			}
		}
		_match_end_1ac0a3eb3:;
	};
	return (*(_self_))._field_d;;
}








inline jule::Bool _1a7d0bec8_binaryEval_eq(_1a7d0bec8_binaryEval *_self_, _1a7d0bec8_binaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_l == _self_->_field_l) &&
		(_self_->_field_r == _self_->_field_r) &&
		(_self_->_field_op == _self_->_field_op);
}

inline _1a7d0bec8_binaryEval static__1a7d0c5b1_newPlain(jule::Ptr<_1a7cd5dd6_eval> _350825_e) {
	return _1a7d0bec8_binaryEval{._field_e=_350825_e, ._field_l=jule::Ptr<_1a7cd41ae_Data>(nullptr), ._field_r=jule::Ptr<_1a7cd41ae_Data>(nullptr), ._field_op=jule::Ptr<_1a7b69b05_Token>(nullptr)};;
}



inline _1a7d0bec8_binaryEval static__1a7d0c935_new(jule::Ptr<_1a7cd5dd6_eval> _351420_e, jule::Ptr<_1a7b69b05_Token> _351434_op) {
	return _1a7d0bec8_binaryEval{._field_e=_351420_e, ._field_l=jule::Ptr<_1a7cd41ae_Data>(nullptr), ._field_r=jule::Ptr<_1a7cd41ae_Data>(nullptr), ._field_op=_351434_op};;
}



inline jule::Bool _1a7d0cbbb_checkTypeCompatibility(_1a7d0bec8_binaryEval* _self_) {
	return _1a7c63eb8_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1a7d0ce52_checkStructCommonOperatorCompatibility(_1a7d0bec8_binaryEval* _self_) {
	jule::Ptr<_1a7bbd8b2_FnIns> _352811_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1ac0a9936:;
			{
				_352811_overload=(*(_1a7d209c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ac0a95d4:;
			{
				_352811_overload=(*(_1a7d209c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1ac0a964a:;
			{
				_352811_overload=(*(_1a7d209c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ac0a96b1:;
			{
				_352811_overload=(*(_1a7d209c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1ac0a9727:;
			{
				_352811_overload=(*(_1a7d209c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac0a978d:;
			{
				_352811_overload=(*(_1a7d209c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ac0a9804:;
			{
				_352811_overload=(*(_1a7d209c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ac0ab042:;
			{
				_352811_overload=(*(_1a7d209c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1ac0ab0a8:;
			{
				_352811_overload=(*(_1a7d209c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ac0ab11e:;
			{
				_352811_overload=(*(_1a7d209c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1ac0a9172:;
			{
				_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1ac0a955c:;
	};
	if ((_352811_overload == nullptr)) {
		_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1a7bbc839_ParamIns> _35607_p = (*(_352811_overload))._field_Params[1LL];;
	return _1a7c62b87_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*((*(_35607_p))._field_Decl))._field_Reference, &((*_35607_p.alloc)._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op, _1a7cd946c_getOwnerRefers((*(_self_))._field_e));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d0d1d8_evalComptimeTypeInfo(_1a7d0bec8_binaryEval* _self_) {
	jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _35657_r = _1a7d22d13_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_35657_r == nullptr)) {
		_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _35707_l = _1a7d22d13_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1ac0ba3b4:;
			{
				jule::Ptr<_1c006a461_Const> _35738_constant = static__1c006ae67_NewBool(_1a7d1c4d3_Equal((*(_35707_l))._field_base, (*(_35657_r))._field_base));;
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35738_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_35738_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac0bb85a:;
			{
				jule::Ptr<_1c006a461_Const> _35808_constant = static__1c006ae67_NewBool((!(_1a7d1c4d3_Equal((*(_35707_l))._field_base, (*(_35657_r))._field_base))));;
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35808_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_35808_constant});;
			}
		}
		else {
			_case_begin_1ac0b81c5:;
			{
				_1a7cd6469_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ac0b9eda:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d0d46e_evalNil(_1a7d0bec8_binaryEval* _self_) {
	if ((!(_1a7d1db99_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac0c1541:;
			{
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ac0be82a:;
			{
				_1a7cd6469_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ac0c1167:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d0d705_evalEnum(_1a7d0bec8_binaryEval* _self_) {
	jule::Ptr<_1a7bd1a6d_Enum> _36117_enm = _1a7d1ec00_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac0c3972:;
			{
				jule::Ptr<_1a7d1bc96_TypeKind> _36158_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1a7d1ec00_Enum((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
					_36158_rkind=(*((*(_1a7d1ec00_Enum((*((*(_self_))._field_r))._field_Kind)))._field_Kind))._field_Kind;
				};
				if ((!(_1a7c635e4_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*(*(_36117_enm))._field_Kind.alloc)._field_Kind), &(_36158_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
			}
		}
		_match_end_1ac0c38ea:;
	};
	if (((_1a7d1ec00_Enum((*((*(_self_))._field_r))._field_Kind) == nullptr) || (_36117_enm != _1a7d1ec00_Enum((*((*(_self_))._field_r))._field_Kind)))) {
		_1a7cd6469_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_36117_enm))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ac0c95c1:;
			{
				if ((!(_1c0069dbc_IsNum(_1a7d1c192_Str((*(*(_36117_enm))._field_Kind.alloc)._field_Kind.ptr()))))) {
					_1a7cd6469_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*_36117_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ac0ca715:;
			{
				jule::Ptr<_1a7bd1001_EnumItem> _36454_first = (*_36117_enm.alloc)._field_Items[0LL];;
				{
					
					if (_1c006e465_IsI64((*((*((*(_36454_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1ac0ce230:;
						{
							if ((_1c006bd69_ReadI64((*((*((*(_36454_first))._field_Value))._field_Data))._field_Constant) == 0LL)) {
								goto _julec_label_1ac0d3b19;
							};
							goto _julec_label_1ac0d261d;
						}
					}
					else if (_1c006e6eb_IsU64((*((*((*(_36454_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1ac0ce31d:;
						{
							if ((_1c006c100_ReadU64((*((*((*(_36454_first))._field_Value))._field_Data))._field_Constant) == 0LLU)) {
								goto _julec_label_1ac0d3b19;
							};
							goto _julec_label_1ac0d261d;
						}
					}
					else {
						_case_begin_1ac0cdd67:;
						{
							__jule_panic_s(jule::Str::lit("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3658:5"));;
						}
					}
					_match_end_1ac0cdce0:;
				};
				_julec_label_1ac0d261d:;
				_1a7cd6469_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("the @ enum type is not supports @ operator", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_36117_enm.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); __jule_collection; }));
				_1a7cd67cc_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86)), jule::Slice<jule::Any>());
				_julec_label_1ac0d3b19:;
				goto _case_begin_1ac0ca77b;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ac0ca77b:;
			{
				if (((_1a7d1e44c_Prim((*(*(_36117_enm))._field_Kind.alloc)._field_Kind.ptr()) == nullptr) || (!(_1c00697e5_IsInt(_1a7d25233_Str(_1a7d1e44c_Prim((*((*(_36117_enm))._field_Kind))._field_Kind).ptr())))))) {
					_1a7cd6469_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*_36117_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ac0c39d8:;
			{
				_1a7cd6469_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*_36117_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ac0c9219:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d0d98b_evalTypeEnum(_1a7d0bec8_binaryEval* _self_) {
	jule::Ptr<_1a7bd3278_TypeEnum> _36787_enm = _1a7d1ee86_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1a7d0cbbb_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac0d78cb:;
			{
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ac0d6c0a:;
			{
				_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a7bd35ec_Str(_36787_enm.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ac0d7469:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d0dc22_evalSptr(_1a7d0bec8_binaryEval* _self_) {
	if ((!(_1a7d0cbbb_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac0d9dea:;
			{
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ac0d8d1c:;
			{
				_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ac0d9a21:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d0dea8_evalPtr(_1a7d0bec8_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ac0dc2c6:;
			{
				if ((!(_1a7d0cbbb_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ac0dd739:;
			{
				if ((_1a7d1e969_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1a7d2cc1e_IsUnsafe(_1a7d1e969_Ptr((*((*(_self_))._field_l))._field_Kind).ptr())) {
					_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
				};
				if ((!(_1a7d150d0_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1a7cd6469_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ac0db8be:;
			{
				_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ac0db7e2:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d0e23e_evalArr(_1a7d0bec8_binaryEval* _self_) {
	if ((!(_1a7d0cbbb_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac0e54ee:;
			{
				if (((*((*((*((*(_self_))._field_e))._field_s))._field_meta))._field_runtime != nullptr)) {
					jule::Ptr<_1a7bbd8b2_FnIns> _37559_f = _1a7bbbddd_instanceForce(_1a78253d7_runtimeFindFn(&((*(*((*((*(_self_))._field_e))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8))));;
					(*(_37559_f))._field_Generics=jule::append((*_37559_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a7d1a3b0_InsGeneric>(_1a7d1a3b0_InsGeneric{._field_Kind=(*(_1a7d2021c_Arr((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>(nullptr)}); __jule_collection; }));
					jule::Bool _37575_ok;
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7c731e7_checkGenericFn((*((*(_self_))._field_e))._field_s, &(_37559_f), &((*(_self_))._field_op));
						_37575_ok = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(_37575_ok))) {
						__jule_panic_s(jule::Str::lit("arrayCmp evaluation failed, this is an implementation mistake", 61) + jule::Str("\nlocation: std/jule/sema/eval.jule:3759:6"));;
					};
					_1abb75876_pushReference((*(_self_))._field_e, &(_37559_f));
				};
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ac0e0186:;
			{
				_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ac0e5125:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d0e4c5_evalStruct(_1a7d0bec8_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1ac0e6dc4:;
			{
				if (((*(_1a7d209c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ac0e6e5c:;
			{
				if (((*(_1a7d209c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1ac0eb5e3:;
			{
				if (((*(_1a7d209c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ac0eb659:;
			{
				if (((*(_1a7d209c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac0eb6c0:;
			{
				if ((!(_1a7d0cbbb_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
			}
		}
		_match_end_1ac0e6ce7:;
	};
	if ((!(_1a7d0ce52_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d0e75b_evalTrait(_1a7d0bec8_binaryEval* _self_) {
	if ((!(_1a7d0cbbb_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac107d5d:;
			{
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ac107214:;
			{
				_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ac107984:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d0e9e2_evalAny(_1a7d0bec8_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac10a239:;
			{
				_1a7d39d5d_applyImplicitCast(&((*((*(_self_))._field_e))._field_s), &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op), _1a7cd946c_getOwnerRefers((*(_self_))._field_e));
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ac109832:;
			{
				_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("any", 3)), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ac109755:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d0ec78_evalBool(_1a7d0bec8_binaryEval* _self_) {
	if ((!(_1a7d0cbbb_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1a7617a15:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a7614b00:;
			{
				_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a7614a89:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d1000e_evalStr(_1a7d0bec8_binaryEval* _self_) {
	jule::Str _38717_rk = _1a7d1c192_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_38717_rk != static_cast<jule::Str>(jule::Str::lit("str", 3)))) {
		_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_38717_rk, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1a761abc2:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1a761aad4:;
			{
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1a7619693:;
			{
				_1a7cd6469_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a761a72c:;
	};
}



inline void _1a7d1020c_setTypeToGreater(_1a7d0bec8_binaryEval* _self_) {
	jule::Ptr<_1a7d24dae_Prim> _38963_lp = _1a7d1e44c_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1a7d24dae_Prim> _38973_rp = _1a7d1e44c_Prim((*((*(_self_))._field_r))._field_Kind);;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_38973_rp))._field_Kind;
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Kind=(*(*(_self_))._field_l.alloc)._field_Kind;
		(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38963_lp))._field_Kind;
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	} else if (((*(*(_self_))._field_l.alloc)._field_untyped && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Kind=(*(*(_self_))._field_l.alloc)._field_Kind;
		(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38963_lp))._field_Kind;
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	};
}



inline void _1a7d104b5_checkModData(_1a7d0bec8_binaryEval* _self_, jule::Ptr<_1a7cd41ae_Data>* _391333_d) {
	if ((!(_1a7cd4ae9_IsConst((*(_391333_d)).ptr())))) {
		if (((_1a7d1e44c_Prim((*((*(_391333_d))))._field_Kind.ptr()) == nullptr) || (!(_1c00697e5_IsInt((*(_1a7d1e44c_Prim((*((*(_391333_d))))._field_Kind)))._field_Kind))))) {
			_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1a7cb9c22_sigAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), _391333_d)) {
			_case_begin_1a762723e:;
			{
				_1c006d40e_SetI64((*((*(_391333_d))))._field_Constant.ptr(), _1c006cb39_AsI64((*((*(_391333_d))))._field_Constant));
			}
		}
		else if (_1a7cba0da_unsigAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), _391333_d)) {
			_case_begin_1a7626e20:;
			{
				_1c006d6b7_SetU64((*((*(_391333_d))))._field_Constant.ptr(), _1c006cdc0_AsU64((*((*(_391333_d))))._field_Constant));
			}
		}
		else {
			_case_begin_1a7626da9:;
			{
				_1a7cd6469_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a7626d43:;
	};
}



inline void _1a7d106b3_mod(_1a7d0bec8_binaryEval* _self_) {
	_1a7d104b5_checkModData(_self_, &((*(_self_))._field_l));
	_1a7d104b5_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1a7d10aae_numbersAreCompatibile(_1a7d0bec8_binaryEval* _self_, jule::Str* _393534_lk, jule::Str* _393544_rk) {
	if ((!(_1c0069dbc_IsNum((*(_393544_rk)))))) {
		return false;;
	};
	if ((_1a7cd4ae9_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if (((*(_393534_lk)) == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
		if ((_1a7cd4ae9_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1a7cb989d_floatAssignable(_393534_lk, &((*(_self_))._field_r));;
		};
		return ((*(_393544_rk)) == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
	};
	if (((*(_393534_lk)) == static_cast<jule::Str>(jule::Str::lit("f64", 3)))) {
		if ((_1a7cd4ae9_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1a7cb989d_floatAssignable(_393534_lk, &((*(_self_))._field_r));;
		};
		return ((*(_393544_rk)) == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
	};
	if ((_1a7cd4ae9_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return _1a7cba45e_intAssignable((*(_393534_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_393534_lk)) == (*(_393544_rk)));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d10d45_shift(_1a7d0bec8_binaryEval* _self_) {
	jule::Ptr<_1a7d24dae_Prim> _39633_lk = _1a7d1e44c_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((_39633_lk == nullptr)) {
		_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7d24dae_Prim> _39683_rk = _1a7d1e44c_Prim((*((*(_self_))._field_r))._field_Kind);;
	if ((_39683_rk == nullptr)) {
		_1a7cd6469_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1c0069dbc_IsNum((*(_39633_lk))._field_Kind))) || (!(_1c0069dbc_IsNum((*(_39683_rk))._field_Kind))))) {
		_1a7c63a12_pushCompatiblityError((*(*(_self_))._field_e.alloc)._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	if ((!(_1c00697e5_IsInt((*(_39633_lk))._field_Kind)))) {
		if (((!(_1a7cd4ae9_IsConst((*(_self_))._field_l))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1a7cd6469_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_39633_lk))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*(_39683_rk))._field_Kind, &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		} else if (_1a7cba45e_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_l))) {
			_1c006d40e_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1c006cb39_AsI64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Kind=_1a7e035a8_primI64;
		} else if (_1a7cba45e_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_l))) {
			_1c006d6b7_SetU64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1c006cdc0_AsU64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Kind=_1a7e043ab_primU64;
		};
	};
	if ((!(_1c00697e5_IsInt((*(_39683_rk))._field_Kind)))) {
		if (((!(_1a7cd4ae9_IsConst((*(_self_))._field_r.ptr()))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1a7cd6469_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_39633_lk))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*(_39683_rk))._field_Kind, &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		} else if (_1a7cba45e_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_r))) {
			_1c006d40e_SetI64((*((*(_self_))._field_r))._field_Constant.ptr(), _1c006cb39_AsI64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Kind=_1a7e035a8_primI64;
		} else if (_1a7cba45e_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_r))) {
			_1c006d6b7_SetU64((*((*(_self_))._field_r))._field_Constant.ptr(), _1c006cdc0_AsU64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Kind=_1a7e043ab_primU64;
		};
	};
	if ((!(_1a7d14909_isOkForShifting(&((*(_self_))._field_r))))) {
		_1a7cd6469_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("bit shifting value is must be unsigned", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d110cb_evalFloat(_1a7d0bec8_binaryEval* _self_) {
	jule::Str _40183_lk = (*(_1a7d1e44c_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _40193_rk = (*(_1a7d1e44c_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	if ((!(_1a7d10aae_numbersAreCompatibile(_self_, &(_40183_lk), &(_40193_rk))))) {
		_1a7c63a12_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1a6b00806:;
			{
				_1a7d1020c_setTypeToGreater(_self_);
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
			}
		}
		_match_end_1a6b0077e:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1a6b022ec:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4043:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a6b03199:;
			{
				_1a7d1020c_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1a6b03210:;
			{
				_1a7d1020c_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1a6b0176e:;
			{
				if ((!(_1c00697e5_IsInt(_40193_rk)))) {
					_1a7cd6469_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_40183_lk, &__jule_any_type4); (*it++) = jule::Any(_40193_rk, &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				_1a7d106b3_mod(_self_);
				_1a7d1020c_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1a6b008e4:;
			{
				_1a7cd6469_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for floating-point type(s)", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a6b01708:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d11362_evalInt(_1a7d0bec8_binaryEval* _self_) {
	jule::Str _40673_lk = (*(_1a7d1e44c_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _40683_rk = (*(_1a7d1e44c_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	if ((!(_1a7d10aae_numbersAreCompatibile(_self_, &(_40673_lk), &(_40683_rk))))) {
		_1a7c63a12_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1a6b0916c:;
			{
				return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02134_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
			}
		}
		_match_end_1a6b090e5:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1a6b0a954:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4092:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1a6b0b801:;
			{
				_1a7d1020c_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1a6b0b867:;
			{
				_1a7d1020c_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1a6b0a06e:;
			{
				_1a7d106b3_mod(_self_);
				_1a7d1020c_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a6b0925a:;
			{
				_1a7cd6469_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for integer type(s)", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a6b0a547:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d115e8_evalPrim(_1a7d0bec8_binaryEval* _self_) {
	jule::Ptr<_1a7d24dae_Prim> _41153_prim = _1a7d1e44c_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1a7d280e3_IsBool(_41153_prim.ptr())) {
			_case_begin_1a6b0eb23:;
			{
				return _1a7d0ec78_evalBool(_self_);;
			}
		}
		else if (_1a7d28379_IsStr(_41153_prim.ptr())) {
			_case_begin_1a6b0ebbc:;
			{
				return _1a7d1000e_evalStr(_self_);;
			}
		}
		_match_end_1a6b0ea8a:;
	};
	if ((_1a7d1e44c_Prim((*((*(_self_))._field_r))._field_Kind) == nullptr)) {
		_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d25233_Str(_41153_prim.ptr()), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if (_1c0069b36_IsFloat((*_41153_prim.alloc)._field_Kind)) {
			_case_begin_1a6b12a5a:;
			{
				return _1a7d110cb_evalFloat(_self_);;
			}
		}
		else if (_1c00697e5_IsInt((*_41153_prim.alloc)._field_Kind)) {
			_case_begin_1a6b12ae3:;
			{
				return _1a7d11362_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1a6b129e4:;
			{
				return nullptr;;
			}
		}
		_match_end_1a6b10d11:;
	};
}



inline jule::Bool _1a7d1187e_checkSpecialCases(_1a7d0bec8_binaryEval* _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _41403_comparing = (((*((*(_self_))._field_op))._field_Id == static_cast<jule::U64>(50LLU)) || ((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U64>(51LLU)));;
	if ((!(_41403_comparing))) {
		return __jule_func_result;;
	};
	if (((!(_1a7d1d3e6_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1a7d1cdc9_IsNil((*((*(_self_))._field_r))._field_Kind))))) {
		_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
		__jule_func_result=false;
	} else if (((!(_1a7d1d3e6_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1a7d1cdc9_IsNil((*((*(_self_))._field_l))._field_Kind))))) {
		_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		__jule_func_result=false;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d11b15_evalOp(_1a7d0bec8_binaryEval* _self_) {
	jule::Bool _41553_ok = _1a7d1187e_checkSpecialCases(_self_);;
	if ((!(_41553_ok))) {
		return nullptr;;
	};
	if ((_1a7d209c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
		return _1a7d0e4c5_evalStruct(_self_);;
	};
	if ((((*((*(_self_))._field_op))._field_Id == static_cast<jule::U64>(56LLU)) || ((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U64>(57LLU)))) {
		return _1a7d10d45_shift(_self_);;
	};
	{
		
		if (_1a7d1d160_Void((*((*(_self_))._field_l))._field_Kind)) {
			_case_begin_1a6b1bbeb:;
			{
				_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("void", 4), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if ((_1a7d22d13_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1a6b1bda5:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a6b1bc62;
			}
		}
		else if ((_1a7d22d13_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1a6b1bc62:;
			{
				return _1a7d0d1d8_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1a7d1e44c_Prim((*((*(_self_))._field_r))._field_Kind) != nullptr) && _1a7d28610_IsAny(_1a7d1e44c_Prim((*((*(_self_))._field_r))._field_Kind).ptr()))) {
			_case_begin_1a6b1bcc8:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a6b1d34b;
			}
		}
		else if (_1a7d1cdc9_IsNil((*((*(_self_))._field_r))._field_Kind)) {
			_case_begin_1a6b1d34b:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a6b1d3b2;
			}
		}
		else if (_1a7d1cdc9_IsNil((*((*(_self_))._field_l))._field_Kind)) {
			_case_begin_1a6b1d3b2:;
			{
				return _1a7d0d46e_evalNil(_self_);;
			}
		}
		else if (((_1a7d1e44c_Prim((*((*(_self_))._field_l))._field_Kind) != nullptr) && _1a7d28610_IsAny(_1a7d1e44c_Prim((*((*(_self_))._field_l))._field_Kind).ptr()))) {
			_case_begin_1a6b1d4b1:;
			{
				return _1a7d0e9e2_evalAny(_self_);;
			}
		}
		else if ((_1a7d1ee86_TypeEnum((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1a6b1d527:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a6b1d58d;
			}
		}
		else if ((_1a7d1ee86_TypeEnum((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1a6b1d58d:;
			{
				return _1a7d0d98b_evalTypeEnum(_self_);;
			}
		}
		else if ((_1a7d1ec00_Enum((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1a6b1d604:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a6b1d66a;
			}
		}
		else if ((_1a7d1ec00_Enum((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1a6b1d66a:;
			{
				return _1a7d0d705_evalEnum(_self_);;
			}
		}
		else if ((_1a7d1e6d3_Sptr((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1a6b1d6d1:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a6b1d747;
			}
		}
		else if ((_1a7d1e6d3_Sptr((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1a6b1d747:;
			{
				return _1a7d0dc22_evalSptr(_self_);;
			}
		}
		else if ((_1a7d1e969_Ptr((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1a6b1d7ad:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a6b1d824;
			}
		}
		else if ((_1a7d1e969_Ptr((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1a6b1d824:;
			{
				return _1a7d0dea8_evalPtr(_self_);;
			}
		}
		else if ((_1a7d2021c_Arr((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1a6b1d88a:;
			{
				return _1a7d0e23e_evalArr(_self_);;
			}
		}
		else if ((_1a7d20c56_Trait((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1a6b1d956:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a6b1d9bc;
			}
		}
		else if ((_1a7d20c56_Trait((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1a6b1d9bc:;
			{
				return _1a7d0e75b_evalTrait(_self_);;
			}
		}
		else if ((_1a7d1e44c_Prim((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1a6b1da33:;
			{
				return _1a7d115e8_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1a6b1ba20:;
			{
				_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a6b1b0b3:;
	};
}



inline void _1a7d11dbd_evalConst(_1a7d0bec8_binaryEval* _self_, jule::Ptr<_1a7cd41ae_Data>* _422530_d) {
	{
		
		if (((*(_422530_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1a6b306b0:;
			{
				return;;
			}
		}
		else if ((!(_1a7cd4ae9_IsConst((*(_self_))._field_l.ptr()))) || (!(_1a7cd4ae9_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1a6b30c65:;
			{
				(*((*(_422530_d))))._field_Constant=nullptr;
				(*((*(_422530_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1a6b305a0:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1a6b30d42:;
			{
				(*((*(_422530_d))))._field_Constant=static__1c006ae67_NewBool(_1c0071049_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a6b33295:;
			{
				(*((*(_422530_d))))._field_Constant=static__1c006ae67_NewBool((!(_1c0071049_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1a6b3330b:;
			{
				(*((*(_422530_d))))._field_Constant=static__1c006ae67_NewBool(_1c0070c08_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1a6b33372:;
			{
				(*((*(_422530_d))))._field_Constant=static__1c006ae67_NewBool(_1c00708b7_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1a6b333d8:;
			{
				(*((*(_422530_d))))._field_Constant=static__1c006ae67_NewBool(_1c0071a1c_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1a6b33460:;
			{
				(*((*(_422530_d))))._field_Constant=static__1c006ae67_NewBool(_1c007138a_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1a6b334d7:;
			{
				(*((*(_422530_d))))._field_Constant=static__1c006ae67_NewBool(_1c0071d5d_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1a6b3355e:;
			{
				(*((*(_422530_d))))._field_Constant=static__1c006ae67_NewBool(_1c00716cb_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1a6b335d6:;
			{
				_1c007219e_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1a6b3365d:;
			{
				_1c00724e0_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a6b336d5:;
			{
				_1c0072831_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1a6b3375c:;
			{
				jule::Bool _42654_ok = _1c0072b72_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_42654_ok)) && (_1c006d156_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_422530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_1a7d24dae_Prim> _42708_prim = _1a7d1e44c_Prim((*((*(_422530_d))))._field_Kind.ptr());;
				{
					
					if (_1c006921d_IsSigInt((*(_42708_prim))._field_Kind)) {
						_case_begin_1a6b4499e:;
						{
							_1c006d40e_SetI64((*((*(_422530_d))))._field_Constant, _1c006cb39_AsI64((*((*(_422530_d))))._field_Constant));
						}
					}
					else if (_1c006952b_IsUnsigInt((*(_42708_prim))._field_Kind)) {
						_case_begin_1a6b44a48:;
						{
							_1c006d6b7_SetU64((*((*(_422530_d))))._field_Constant, _1c006cdc0_AsU64((*((*(_422530_d))))._field_Constant));
						}
					}
					_match_end_1a6b44927:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1a6b337d4:;
			{
				jule::Bool _42784_ok = _1c0072eb3_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_42784_ok)) && (_1c006d156_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_422530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1a6b3385b:;
			{
				_1c0073645_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a6b338d3:;
			{
				_1c0073304_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1a6b3395a:;
			{
				_1c0073986_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1a6b339d2:;
			{
				_1c0073cc7_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1a6b33a59:;
			{
				_1c0074118_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_1a6b32580:;
	};
	(*((*(_422530_d))))._field_Model=jule::Any((*((*(_422530_d))))._field_Constant, &__jule_any_type20);
	_1a7d16d07_applyCastModelByEnum(&((*((*(_self_))._field_e))._field_s), _422530_d, _1a7d1ec00_Enum((*((*(_422530_d))))._field_Kind.ptr()), &((*(_self_))._field_op), _1a7cd946c_getOwnerRefers((*(_self_))._field_e));
}



inline void _1a7d12176_checkData(_1a7d0bec8_binaryEval* _self_, jule::Ptr<_1a7cd41ae_Data>* _430330_d) {
	jule::Ptr<_1a7bbd8b2_FnIns> _43043_f = _1a7d20739_Fn((*((*(_430330_d))))._field_Kind.ptr());;
	if ((((_43043_f != nullptr) && ((*_43043_f.alloc)._field_Decl != nullptr)) && _1a7bbb11d_IsMethod((*(_43043_f))._field_Decl))) {
		_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("invalid expression used for binary operation", 44)), jule::Slice<jule::Any>());
	};
}



inline void _1a7d12374_checkDatas(_1a7d0bec8_binaryEval* _self_) {
	_1a7d12176_checkData(_self_, &((*(_self_))._field_l));
	_1a7d12176_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1a7d1262c_setModel(_1a7d0bec8_binaryEval* _self_, jule::Ptr<_1a7cd41ae_Data>* _431529_d) {
	if (_1a7cd4ae9_IsConst((*(_431529_d)).ptr())) {
		if (((_1a7cd4ae9_IsConst((*(_self_))._field_l.ptr()) && _1a7cd4ae9_IsConst((*(_self_))._field_r.ptr())) || (((*(*(_self_))._field_l.alloc)._field_Model == nullptr) && ((*(*(_self_))._field_r.alloc)._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1a7cd41ae_Data> _43267_l;
	jule::Ptr<_1a7cd41ae_Data> _432614_r;
	({
		jule::Ptr<_1a7cd41ae_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1a7cd41ae_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_43267_l = ___jule_assign_arg;
		_432614_r = _1___jule_assign_arg;
	});
	if ((!(_1a7cd4e3a_GoodOperand(_43267_l, &(_432614_r))))) {
		std::swap(_43267_l, _432614_r);
	};
	(*((*(_431529_d))))._field_Model=jule::Any(jule::new_ptr<_1a7bace23_BinaryExprModel>(_1a7bace23_BinaryExprModel{._field_Left=jule::new_ptr<_1a7bac928_OperandExprModel>(_1a7bac928_OperandExprModel{._field_Kind=(*_43267_l.alloc)._field_Kind, ._field_Model=(*_43267_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1a7bac928_OperandExprModel>(_1a7bac928_OperandExprModel{._field_Kind=(*_432614_r.alloc)._field_Kind, ._field_Model=(*_432614_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type114);
}



inline void _1a7d128d5_postEval(_1a7d0bec8_binaryEval* _self_, jule::Ptr<_1a7cd41ae_Data>* _434429_d) {
	(*((*(_434429_d))))._field_Lvalue=false;
	_1a7d1262c_setModel(_self_, _434429_d);
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d12cd1_solveExplicit(_1a7d0bec8_binaryEval* _self_, jule::Ptr<_1a7cd41ae_Data>* _434934_l, jule::Ptr<_1a7cd41ae_Data>* _434949_r) {
	({
		jule::Ptr<_1a7cd41ae_Data> ___jule_assign_arg = (*(_434934_l));
		jule::Ptr<_1a7cd41ae_Data> _1___jule_assign_arg = (*(_434949_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1a7d12374_checkDatas(_self_);
	jule::Ptr<_1a7cd41ae_Data> _43547_d = _1a7d11b15_evalOp(_self_);;
	({
		jule::Ptr<_1a7cd41ae_Data> ___jule_assign_arg = (*(_434934_l));
		jule::Ptr<_1a7cd41ae_Data> _1___jule_assign_arg = (*(_434949_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1a7d11dbd_evalConst(_self_, &(_43547_d));
	if ((_43547_d != nullptr)) {
		(*_43547_d.alloc)._field_Mutable=true;
		_1a7d128d5_postEval(_self_, &(_43547_d));
	};
	return _43547_d;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d13122_eval(_1a7d0bec8_binaryEval* _self_, jule::Ptr<_1a7b8c81a_BinaryExpr>* _436925_op) {
	if (((*((*((*(_436925_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1a7cd6469_pushErr((*(_self_))._field_e.ptr(), (*((*(_436925_op))))._field_Op, static_cast<jule::Str>(jule::Str::lit("assignments not available for expressions", 41)), jule::Slice<jule::Any>());
		_1a7cd67cc_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7cd41ae_Data> _43767_l = _1a7d09767_evalExpr1((*(_self_))._field_e, (*((*(_436925_op))))._field_Left);;
	if (((_43767_l == nullptr) || ((*(_43767_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1a7d1bc96_TypeKind> _43817_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_43767_l))._field_Kind;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_43817_prefix;
	});;
	jule::Ptr<_1a7cd41ae_Data> _43847_r = _1a7d09767_evalExpr1((*(_self_))._field_e, (*((*(_436925_op))))._field_Right);;
	if (((_43847_r == nullptr) || ((*(_43847_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_436925_op))))._field_Op;
	jule::Ptr<_1a7cd41ae_Data> _43917_d = _1a7d12cd1_solveExplicit(_self_, &(_43767_l), &(_43847_r));;
	if ((((_43917_d != nullptr) && (*(_43767_l))._field_IsRune) && (*(_43847_r))._field_IsRune)) {
		(*_43917_d.alloc)._field_IsRune=true;
	};
	return _43917_d;;
}
















inline jule::Bool _1a7d1bc96_TypeKind_eq(_1a7d1bc96_TypeKind *_self_, _1a7d1bc96_TypeKind _other_) {
	return 
		(_self_->_field_BindIdent == _other_._field_BindIdent) &&
		(_self_->_field_Generic == _self_->_field_Generic) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1a7d1c192_Str(_1a7d1bc96_TypeKind* _self_) {
	if (_1a7d1cdc9_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_1daed18b7_StrBuilder _747_kind = static__1daed1bb4_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_1daeda6b2_WriteStr(&_747_kind, jule::Str::lit("...", 3));
	};
	if (_1a7d1cb43_Binded(_self_)) {
		_1daeda6b2_WriteStr(&_747_kind, jule::Str::lit("cpp.", 4));
		_1daeda6b2_WriteStr(&_747_kind, (*(_self_))._field_BindIdent);
	} else {
		_1daeda6b2_WriteStr(&_747_kind, ((_1a7d1b7e0_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_1a7d1b34a_Str((*(_self_))._field_Kind.data));
	};
	return _1daedaea9_Str(&_747_kind);;
}



inline jule::Bool _1a7d1c4d3_Equal(jule::Ptr<_1a7d1bc96_TypeKind> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _9018_other) {
	if (_1a7d1cdc9_IsNil(_self_.ptr())) {
		return _1a7d1cdc9_IsNil(_9018_other.ptr());;
	};
	if (_1a7d1cb43_Binded(_self_)) {
		return (_1a7d1cb43_Binded(_9018_other) && ((*_self_.alloc)._field_BindIdent == (*_9018_other.alloc)._field_BindIdent));;
	};
	return ((_1a7d1b7e0_KindMptrData*)(*_self_.alloc)._field_Kind.safe_type())->_1a7d1b68b_Equal((*_self_.alloc)._field_Kind.data, _9018_other);;
}



inline jule::Bool _1a7d1cb43_Binded(_1a7d1bc96_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1a7d1cdc9_IsNil(_1a7d1bc96_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1a7d1d160_Void(_1a7d1bc96_TypeKind* _self_) {
	jule::Ptr<_1a7d24dae_Prim> _1103_prim = _1a7d1e44c_Prim(_self_);;
	return ((_1103_prim != nullptr) && (*(_1103_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _1a7d1d3e6_Comparable(_1a7d1bc96_TypeKind* _self_) {
	{
		_1a7d1bc96_TypeKind* _1178__self = _self_;;
		if ((_1a7d209c0_Struct(_1178__self) != nullptr)) {
			return (*(_1a7d209c0_Struct(_1178__self)))._field_Comparable;;
		};
		if ((_1a7d2021c_Arr(_1178__self) != nullptr)) {
			return _1a7d1d3e6_Comparable((*(_1a7d2021c_Arr(_1178__self)))._field_Elem.ptr());;
		};
		return (((_1a7d20edc_Map(_1178__self) == nullptr) && (_1a7d204a3_Slc(_1178__self) == nullptr)) && (_1a7d20739_Fn(_1178__self) == nullptr));;
	};
}



inline jule::Bool _1a7d1d67c_Mutable(_1a7d1bc96_TypeKind* _self_) {
	{
		_1a7d1bc96_TypeKind* _1318__self = _self_;;
		if ((_1a7d209c0_Struct(_1318__self) != nullptr)) {
			return (*(_1a7d209c0_Struct(_1318__self)))._field_Mutable;;
		};
		if ((_1a7d20c56_Trait(_1318__self) != nullptr)) {
			return true;;
		};
		if ((_1a7d1e44c_Prim(_1318__self) != nullptr)) {
			jule::Ptr<_1a7d24dae_Prim> _1395_p = _1a7d1e44c_Prim(_1318__self);;
			return _1a7d28610_IsAny(_1395_p.ptr());;
		};
		if ((_1a7d2021c_Arr(_1318__self) != nullptr)) {
			return _1a7d1d67c_Mutable((*(_1a7d2021c_Arr(_1318__self)))._field_Elem.ptr());;
		};
		return (((_1a7d204a3_Slc(_1318__self) != nullptr) || (_1a7d1e969_Ptr(_1318__self) != nullptr)) || (_1a7d1e6d3_Sptr(_1318__self) != nullptr));;
	};
}



inline jule::Bool _1a7d1d913_Ordered(_1a7d1bc96_TypeKind* _self_) {
	{
		_1a7d1bc96_TypeKind* _1548__self = _self_;;
		jule::Ptr<_1a7d24dae_Prim> _1554_prim = _1a7d1e44c_Prim(_1548__self);;
		if ((_1554_prim != nullptr)) {
			return (_1c0069dbc_IsNum((*_1554_prim.alloc)._field_Kind) || _1a7d28379_IsStr(_1554_prim));;
		};
		if ((_1a7d1e969_Ptr(_1548__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1a7ba8b11_StructIns> _1624_s = _1a7d209c0_Struct(_1548__self);;
		if ((_1624_s != nullptr)) {
			return (((((*_1624_s.alloc)._field_Operators._field_Gt != nullptr) && ((*_1624_s.alloc)._field_Operators._field_GtEq != nullptr)) && ((*_1624_s.alloc)._field_Operators._field_Lt != nullptr)) && ((*_1624_s.alloc)._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1a7bd1a6d_Enum> _1694_enm = _1a7d1ec00_Enum(_1548__self);;
		if ((_1694_enm != nullptr)) {
			return _1c0069dbc_IsNum(_1a7d1c192_Str((*((*_1694_enm.alloc)._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1a7d1db99_NilCompatible(_1a7d1bc96_TypeKind* _self_) {
	{
		_1a7d1bc96_TypeKind* _1808__self = _self_;;
		jule::Ptr<_1a7d24dae_Prim> _1824_prim = _1a7d1e44c_Prim(_1808__self);;
		if (((_1824_prim != nullptr) && _1a7d28610_IsAny(_1824_prim))) {
			return true;;
		};
		return (((((((_1a7d1cdc9_IsNil(_1808__self) || (_1a7d20739_Fn(_1808__self) != nullptr)) || (_1a7d1e6d3_Sptr(_1808__self) != nullptr)) || (_1a7d1e969_Ptr(_1808__self) != nullptr)) || (_1a7d20c56_Trait(_1808__self) != nullptr)) || (_1a7d204a3_Slc(_1808__self) != nullptr)) || (_1a7d20edc_Map(_1808__self) != nullptr)) || (_1a7d1ee86_TypeEnum(_1808__self) != nullptr));;
	};
}



inline jule::Bool _1a7d1de30_GC(_1a7d1bc96_TypeKind* _self_) {
	{
		_1a7d1bc96_TypeKind* _2018__self = _self_;;
		jule::Ptr<_1a7d24dae_Prim> _2024_prim = _1a7d1e44c_Prim(_2018__self);;
		if ((_2024_prim != nullptr)) {
			return (_1a7d28610_IsAny(_2024_prim) || _1a7d28379_IsStr(_2024_prim));;
		};
		return ((((_1a7d1e6d3_Sptr(_2018__self) != nullptr) || (_1a7d204a3_Slc(_2018__self) != nullptr)) || (_1a7d20c56_Trait(_2018__self) != nullptr)) || (_1a7d1ee86_TypeEnum(_2018__self) != nullptr));;
	};
}



inline jule::Bool _1a7d1e1b6_Variadicable(_1a7d1bc96_TypeKind* _self_) {
	{
		_1a7d1bc96_TypeKind* _2148__self = _self_;;
		return (_1a7d204a3_Slc(_2148__self) != nullptr);;
	};
}



inline jule::Ptr<_1a7d24dae_Prim> _1a7d1e44c_Prim(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22)) {
			_case_begin_1ac19cbe4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7d24dae_Prim>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22);;
			}
		}
		else {
			_case_begin_1ac1b21c0:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1b2159:;
	};
}



inline jule::Ptr<_1a7d288da_Sptr> _1a7d1e6d3_Sptr(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data23)) {
			_case_begin_1ac1b2d5d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7d288da_Sptr>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data23);;
			}
		}
		else {
			_case_begin_1ac1b30b1:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1b304a:;
	};
}



inline jule::Ptr<_1a7d2c1a2_Ptr> _1a7d1e969_Ptr(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data28)) {
			_case_begin_1ac1b3cd7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7d2c1a2_Ptr>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data28);;
			}
		}
		else {
			_case_begin_1ac1b3b2d:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1b3ab7:;
	};
}



inline jule::Ptr<_1a7bd1a6d_Enum> _1a7d1ec00_Enum(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data3)) {
			_case_begin_1ac1b4a63:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7bd1a6d_Enum>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data3);;
			}
		}
		else {
			_case_begin_1ac1b48a9:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1b4843:;
	};
}



inline jule::Ptr<_1a7bd3278_TypeEnum> _1a7d1ee86_TypeEnum(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data4)) {
			_case_begin_1ac1b57de:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7bd3278_TypeEnum>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data4);;
			}
		}
		else {
			_case_begin_1ac1b5635:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1b55be:;
	};
}



inline jule::Ptr<_1a7d2b6ce_Arr> _1a7d2021c_Arr(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data27)) {
			_case_begin_1ac1b656a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7d2b6ce_Arr>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data27);;
			}
		}
		else {
			_case_begin_1ac1b63b1:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1b634a:;
	};
}



inline jule::Ptr<_1a7d293ad_Slc> _1a7d204a3_Slc(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data24)) {
			_case_begin_1ac1b72e6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7d293ad_Slc>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data24);;
			}
		}
		else {
			_case_begin_1ac1b713c:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1b70c6:;
	};
}



inline jule::Ptr<_1a7bbd8b2_FnIns> _1a7d20739_Fn(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data1)) {
			_case_begin_1ac1b8072:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7bbd8b2_FnIns>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data1);;
			}
		}
		else {
			_case_begin_1ac1b7db8:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1b7d52:;
	};
}



inline jule::Ptr<_1a7ba8b11_StructIns> _1a7d209c0_Struct(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data0)) {
			_case_begin_1ac1b8ced:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7ba8b11_StructIns>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_1ac1b8b44:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1b8acd:;
	};
}



inline jule::Ptr<_1a7bce362_Trait> _1a7d20c56_Trait(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data2)) {
			_case_begin_1ac1b9a79:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7bce362_Trait>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data2);;
			}
		}
		else {
			_case_begin_1ac1b98c0:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1b9859:;
	};
}



inline jule::Ptr<_1a7d2aa52_Map> _1a7d20edc_Map(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data26)) {
			_case_begin_1ac1ba805:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7d2aa52_Map>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data26);;
			}
		}
		else {
			_case_begin_1ac1ba64b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1ba5d5:;
	};
}



inline jule::Ptr<_1a7d29ea2_Tuple> _1a7d21273_Tup(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data25)) {
			_case_begin_1ac1bb581:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7d29ea2_Tuple>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data25);;
			}
		}
		else {
			_case_begin_1ac1bb3c7:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1bb361:;
	};
}



inline jule::Bool _1a7d21509_comptime(_1a7d1bc96_TypeKind* _self_) {
	return (((((((((((((((_1a7d22a7c_comptimeTypeInfos(_self_) != nullptr) || (_1a7d22d13_comptimeTypeInfo(_self_) != nullptr)) || (_1a7d21790_comptimeStructFields(_self_) != nullptr)) || (_1a7d21a26_comptimeStructField(_self_) != nullptr)) || (_1a7d21cac_comptimeEnumFields(_self_) != nullptr)) || (_1a7d22043_comptimeEnumField(_self_) != nullptr)) || (_1a7d23099_comptimeStatics(_self_) != nullptr)) || (_1a7d23330_comptimeStatic(_self_) != nullptr)) || (_1a7d222c9_comptimeParams(_self_) != nullptr)) || (_1a7d22560_comptimeParam(_self_) != nullptr)) || (_1a7d235b6_comptimeValue(_self_) != nullptr)) || (_1a7d24100_comptimeFiles(_self_) != nullptr)) || (_1a7d23d69_comptimeFile(_self_) != nullptr)) || (_1a7d2384c_comptimeDecl(_self_) != nullptr)) || (_1a7d23ad3_comptimeDecls(_self_) != nullptr));;
}



inline jule::Ptr<_1a7bd7ea3_comptimeStructFields> _1a7d21790_comptimeStructFields(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data7)) {
			_case_begin_1ac1bc0dc:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7bd7ea3_comptimeStructFields>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data7);;
			}
		}
		else {
			_case_begin_1ac1c14ed:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1c1487:;
	};
}



inline jule::Ptr<_1a7bd6710_comptimeStructField> _1a7d21a26_comptimeStructField(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data6)) {
			_case_begin_1ac1c1d6c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7bd6710_comptimeStructField>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data6);;
			}
		}
		else {
			_case_begin_1ac1c1bb3:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1c1b4c:;
	};
}



inline jule::Ptr<_1a7bdde65_comptimeEnumFields> _1a7d21cac_comptimeEnumFields(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data11)) {
			_case_begin_1ac1c2ae8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7bdde65_comptimeEnumFields>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data11);;
			}
		}
		else {
			_case_begin_1ac1c293e:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1c28c8:;
	};
}



inline jule::Ptr<_1a7bdcb56_comptimeEnumField> _1a7d22043_comptimeEnumField(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data10)) {
			_case_begin_1ac1c3874:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7bdcb56_comptimeEnumField>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data10);;
			}
		}
		else {
			_case_begin_1ac1c36ba:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1c3654:;
	};
}



inline jule::Ptr<_1a7be27c6_comptimeParams> _1a7d222c9_comptimeParams(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data13)) {
			_case_begin_1ac1c4600:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7be27c6_comptimeParams>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data13);;
			}
		}
		else {
			_case_begin_1ac1c4446:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1c43d0:;
	};
}



inline jule::Ptr<_1a7be096c_comptimeParam> _1a7d22560_comptimeParam(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data12)) {
			_case_begin_1ac1c537b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7be096c_comptimeParam>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data12);;
			}
		}
		else {
			_case_begin_1ac1c51c2:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1c515b:;
	};
}



inline jule::Ptr<_1a7bd5ba4_comptimeRange> _1a7d227e6_comptimeRange(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data5)) {
			_case_begin_1ac1c6107:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7bd5ba4_comptimeRange>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data5);;
			}
		}
		else {
			_case_begin_1ac1c5e4d:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1c5dd7:;
	};
}



inline jule::Ptr<_1a7be4135_comptimeTypeInfos> _1a7d22a7c_comptimeTypeInfos(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data14)) {
			_case_begin_1ac1c6d83:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7be4135_comptimeTypeInfos>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data14);;
			}
		}
		else {
			_case_begin_1ac1c6bc9:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1c6b63:;
	};
}



inline jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _1a7d22d13_comptimeTypeInfo(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data15)) {
			_case_begin_1ac1c7b0e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7be5aa4_comptimeTypeInfo>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data15);;
			}
		}
		else {
			_case_begin_1ac1c7955:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1c78de:;
	};
}



inline jule::Ptr<_1a7bdb1d7_comptimeStatics> _1a7d23099_comptimeStatics(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data9)) {
			_case_begin_1ac1c888a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7bdb1d7_comptimeStatics>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data9);;
			}
		}
		else {
			_case_begin_1ac1c86d1:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1c866a:;
	};
}



inline jule::Ptr<_1a7bd9933_comptimeStatic> _1a7d23330_comptimeStatic(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data8)) {
			_case_begin_1ac1c9616:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7bd9933_comptimeStatic>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data8);;
			}
		}
		else {
			_case_begin_1ac1c945c:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1c93e6:;
	};
}



inline jule::Ptr<_1a7bebba9_comptimeValue> _1a7d235b6_comptimeValue(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data16)) {
			_case_begin_1ac1ca392:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7bebba9_comptimeValue>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data16);;
			}
		}
		else {
			_case_begin_1ac1ca1d8:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1ca172:;
	};
}



inline jule::Ptr<_1a7c0529a_comptimeDecl> _1a7d2384c_comptimeDecl(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data20)) {
			_case_begin_1ac1cb11d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7c0529a_comptimeDecl>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data20);;
			}
		}
		else {
			_case_begin_1ac1cae64:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1caded:;
	};
}



inline jule::Ptr<_1a7c02eac_comptimeDecls> _1a7d23ad3_comptimeDecls(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data19)) {
			_case_begin_1ac1cbd99:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7c02eac_comptimeDecls>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data19);;
			}
		}
		else {
			_case_begin_1ac1cbbe0:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1cbb79:;
	};
}



inline jule::Ptr<_1a7c01384_comptimeFile> _1a7d23d69_comptimeFile(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data18)) {
			_case_begin_1ac1ccb25:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7c01384_comptimeFile>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data18);;
			}
		}
		else {
			_case_begin_1ac1cc96b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1cc905:;
	};
}



inline jule::Ptr<_1a7bee915_comptimeFiles> _1a7d24100_comptimeFiles(_1a7d1bc96_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data17)) {
			_case_begin_1ac1cd8a1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7bee915_comptimeFiles>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data17);;
			}
		}
		else {
			_case_begin_1ac1cd6e7:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1cd681:;
	};
}








inline jule::Bool _1a7d244a7_TypeSymbol_eq(_1a7d244a7_TypeSymbol *_self_, _1a7d244a7_TypeSymbol _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Bool _1a7d2485e_checked(_1a7d244a7_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}








inline jule::Bool _1a7d24dae_Prim_eq(_1a7d24dae_Prim *_self_, _1a7d24dae_Prim _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind);
}

inline jule::Str _1a7d25233_Str(_1a7d24dae_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1a7d25574_Equal(jule::Ptr<_1a7d24dae_Prim> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _53218_other) {
	jule::Ptr<_1a7d24dae_Prim> _5333_prim = _1a7d1e44c_Prim(_53218_other.ptr());;
	if ((_5333_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5333_prim))._field_Kind);;
}



inline jule::Bool _1a7d25a19_IsConstraint(_1a7d24dae_Prim* _self_) {
	return ((((!(_1a7d28379_IsStr(_self_))) && (!(_1a7d28610_IsAny(_self_)))) && (!(_1a7d280e3_IsBool(_self_)))) && (!(_1c0069dbc_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1a7d25ca0_IsI8(_1a7d24dae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i8", 2)));;
}



inline jule::Bool _1a7d26036_IsI16(_1a7d24dae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i16", 3)));;
}



inline jule::Bool _1a7d262bc_IsI32(_1a7d24dae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i32", 3)));;
}



inline jule::Bool _1a7d26553_IsI64(_1a7d24dae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i64", 3)));;
}



inline jule::Bool _1a7d267d9_IsU8(_1a7d24dae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u8", 2)));;
}



inline jule::Bool _1a7d26a70_IsU16(_1a7d24dae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u16", 3)));;
}



inline jule::Bool _1a7d26d06_IsU32(_1a7d24dae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u32", 3)));;
}



inline jule::Bool _1a7d2708c_IsU64(_1a7d24dae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u64", 3)));;
}



inline jule::Bool _1a7d27323_IsF32(_1a7d24dae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
}



inline jule::Bool _1a7d275a9_IsF64(_1a7d24dae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
}



inline jule::Bool _1a7d27840_IsInt(_1a7d24dae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("int", 3)));;
}



inline jule::Bool _1a7d27ac6_IsUint(_1a7d24dae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uint", 4)));;
}



inline jule::Bool _1a7d27d5c_IsUintptr(_1a7d24dae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uintptr", 7)));;
}



inline jule::Bool _1a7d280e3_IsBool(_1a7d24dae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("bool", 4)));;
}



inline jule::Bool _1a7d28379_IsStr(_1a7d24dae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("str", 3)));;
}



inline jule::Bool _1a7d28610_IsAny(_1a7d24dae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("any", 3)));;
}








inline jule::Bool _1a7d288da_Sptr_eq(_1a7d288da_Sptr *_self_, _1a7d288da_Sptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1a7d28c92_Str(_1a7d288da_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1a7d1c192_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a7d290d3_Equal(jule::Ptr<_1a7d288da_Sptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _60918_other) {
	jule::Ptr<_1a7d288da_Sptr> _6103_sptr = _1a7d1e6d3_Sptr(_60918_other.ptr());;
	if ((_6103_sptr == nullptr)) {
		return false;;
	};
	return _1a7d1c4d3_Equal((*(_self_))._field_Elem, (*(_6103_sptr))._field_Elem);;
}








inline jule::Bool _1a7d293ad_Slc_eq(_1a7d293ad_Slc *_self_, _1a7d293ad_Slc _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1a7d29875_Str(_1a7d293ad_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1a7d1c192_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a7d29bb6_Equal(jule::Ptr<_1a7d293ad_Slc> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _62818_other) {
	jule::Ptr<_1a7d293ad_Slc> _6293_slc = _1a7d204a3_Slc(_62818_other.ptr());;
	if ((_6293_slc == nullptr)) {
		return false;;
	};
	return _1a7d1c4d3_Equal((*(_self_))._field_Elem, (*(_6293_slc))._field_Elem);;
}







inline jule::Str _1a7d2a359_Str(_1a7d29ea2_Tuple* _self_) {
	_1daed18b7_StrBuilder _6457_s = static__1daed1bb4_New(16LL);;
	_1daeda96a_WriteByte(&_6457_s, '(');
	_1daeda6b2_WriteStr(&_6457_s, _1a7d1c192_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ac1dec03:;
		if (it != expr_end) {
			jule::Ptr<_1a7d1bc96_TypeKind> *_64810_t = it;
			{
				_1daeda96a_WriteByte(&_6457_s, ',');
				_1daeda6b2_WriteStr(&_6457_s, _1a7d1c192_Str((*(_64810_t)).ptr()));
			}
			_iter_next_1ac1dec03:;
			++it;
			goto _iter_begin_1ac1dec03;
		}
		_iter_end_1ac1dec03:;
	};
	_1daeda96a_WriteByte(&_6457_s, ')');
	return _1daedaea9_Str(&_6457_s);;
}



inline jule::Bool _1a7d2a69a_Equal(jule::Ptr<_1a7d29ea2_Tuple> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _65718_other) {
	jule::Ptr<_1a7d29ea2_Tuple> _6583_tup = _1a7d21273_Tup(_65718_other.ptr());;
	if ((_6583_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6583_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _6657_i = 0LL;;
	for (; (_6657_i < (*_self_.alloc)._field_Types.len()); (_6657_i)++) {
		{
			if ((!(_1a7d1c4d3_Equal((*(_self_))._field_Types[_6657_i], (*(_6583_tup))._field_Types[_6657_i])))) {
				return false;;
			};
		}
	_iter_next_1ac1e2ba1:;
	}
	_iter_end_1ac1e2ba1:;;
	return true;;
}








inline jule::Bool _1a7d2aa52_Map_eq(_1a7d2aa52_Map *_self_, _1a7d2aa52_Map _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}

inline jule::Str _1a7d2ae09_Str(_1a7d2aa52_Map* _self_) {
	_1daed18b7_StrBuilder _6857_s = static__1daed1bb4_New(16LL);;
	_1daeda6b2_WriteStr(&_6857_s, jule::Str::lit("map[", 4));
	_1daeda6b2_WriteStr(&_6857_s, _1a7d1c192_Str((*(_self_))._field_Key.ptr()));
	_1daeda96a_WriteByte(&_6857_s, ']');
	_1daeda6b2_WriteStr(&_6857_s, _1a7d1c192_Str((*(_self_))._field_Val.ptr()));
	return _1daedaea9_Str(&_6857_s);;
}



inline jule::Bool _1a7d2b24a_Equal(jule::Ptr<_1a7d2aa52_Map> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _69418_other) {
	jule::Ptr<_1a7d2aa52_Map> _6953_m = _1a7d20edc_Map(_69418_other.ptr());;
	if ((_6953_m == nullptr)) {
		return false;;
	};
	return (_1a7d1c4d3_Equal((*(_self_))._field_Key, (*(_6953_m))._field_Key) && _1a7d1c4d3_Equal((*_self_.alloc)._field_Val, (*(_6953_m))._field_Val));;
}








inline jule::Bool _1a7d2b6ce_Arr_eq(_1a7d2b6ce_Arr *_self_, _1a7d2b6ce_Arr _other_) {
	return 
		(_self_->_field_Auto == _other_._field_Auto) &&
		(_self_->_field_N == _self_->_field_N) &&
		(_self_->_field_Elem == _self_->_field_Elem);
}

inline jule::Str _1a7d2ba86_Str(_1a7d2b6ce_Arr* _self_) {
	_1daed18b7_StrBuilder _7137_s = static__1daed1bb4_New(16LL);;
	_1daeda96a_WriteByte(&_7137_s, '[');
	_1daeda6b2_WriteStr(&_7137_s, _1c005c398_Itoa((*(_self_))._field_N));
	_1daeda96a_WriteByte(&_7137_s, ']');
	_1daeda6b2_WriteStr(&_7137_s, _1a7d1c192_Str((*(_self_))._field_Elem.ptr()));
	return _1daedaea9_Str(&_7137_s);;
}



inline jule::Bool _1a7d2bdc7_Equal(jule::Ptr<_1a7d2b6ce_Arr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _72218_other) {
	jule::Ptr<_1a7d2b6ce_Arr> _7233_arr = _1a7d2021c_Arr(_72218_other.ptr());;
	if ((_7233_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_7233_arr))._field_N) && _1a7d1c4d3_Equal((*_self_.alloc)._field_Elem, (*(_7233_arr))._field_Elem));;
}








inline jule::Bool _1a7d2c1a2_Ptr_eq(_1a7d2c1a2_Ptr *_self_, _1a7d2c1a2_Ptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1a7d2c559_Str(_1a7d2c1a2_Ptr* _self_) {
	if (_1a7d2cc1e_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1a7d1c192_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a7d2c89a_Equal(jule::Ptr<_1a7d2c1a2_Ptr> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _74618_other) {
	jule::Ptr<_1a7d2c1a2_Ptr> _7473_ptr = _1a7d1e969_Ptr(_74618_other.ptr());;
	{
		
		if ((_7473_ptr == nullptr)) {
			_case_begin_1ac1edc9a:;
			{
				return false;;
			}
		}
		else if (_1a7d2cc1e_IsUnsafe(_self_.ptr())) {
			_case_begin_1ac1ed64b:;
			{
				return _1a7d2cc1e_IsUnsafe(_7473_ptr.ptr());;
			}
		}
		else if (_1a7d2cc1e_IsUnsafe(_7473_ptr.ptr())) {
			_case_begin_1ac1ed6b2:;
			{
				return _1a7d2cc1e_IsUnsafe(_self_.ptr());;
			}
		}
		else {
			_case_begin_1ac1ed1c8:;
			{
				return _1a7d1c4d3_Equal((*(_self_))._field_Elem, (*(_7473_ptr))._field_Elem);;
			}
		}
		_match_end_1ac1ed151:;
	};
}



inline jule::Bool _1a7d2cc1e_IsUnsafe(_1a7d2c1a2_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1a7d2d1a3_referencer_eq(_1a7d2d1a3_referencer *_self_, _1a7d2d1a3_referencer _other_) {
	return 
		(_self_->_field_ident == _other_._field_ident) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_refs == _self_->_field_refs);
}





inline void _1a7d2e924_pushErr(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b69b05_Token> _83823_token, jule::Str _83838_fmt, jule::Slice<jule::Any> _83851_args) {
	_1a7c59b18_pushErr((*(_self_))._field_s.ptr(), _83823_token, _83838_fmt, _83851_args);
}



inline void _1a7d2eb22_allowBuiltin(_1a7d2e193_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1a7d2ed20_disallowBuiltin(_1a7d2e193_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1ac2036a6_pushReference(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7ba8b11_StructIns>* _85037_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1aa7c808a_Exist((*(_self_))._field_refers.ptr(), (*(_85037_t)))) {
		return;;
	};
	_1a7bc2861_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_85037_t)), &__jule_any_type9));
}

inline void _1ac20617b_pushReference(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7bce362_Trait>* _85037_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1ac207d81_Exist((*(_self_))._field_refers.ptr(), (*(_85037_t)))) {
		return;;
	};
	_1a7bc2861_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_85037_t)), &__jule_any_type10));
}



inline void _1a7d30381_pushReferenceByKind(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _86040_k) {
	{
		
		if ((_1a7d209c0_Struct((*(_86040_k)).ptr()) != nullptr)) {
			_case_begin_1ac2022ba:;
			{
				jule::Ptr<_1a7ba8b11_StructIns> _8638_t = _1a7d209c0_Struct((*(_86040_k)).ptr());;
				_1ac2036a6_pushReference(_self_, &(_8638_t));
			}
		}
		else if ((_1a7d20c56_Trait((*(_86040_k)).ptr()) != nullptr)) {
			_case_begin_1ac202364:;
			{
				jule::Ptr<_1a7bce362_Trait> _8668_t = _1a7d20c56_Trait((*(_86040_k)).ptr());;
				_1ac20617b_pushReference(_self_, &(_8668_t));
			}
		}
		_match_end_1ac202199:;
	};
}



inline void _1a7d3079e_pushCycleError(_1a7d2e193_typeChecker* _self_, jule::Any _87126_def1, jule::Any _87137_def2, _1daed18b7_StrBuilder* _87153_message) {
	;
	jule::Fn<jule::Str,jule::Any*> _8733_getIdent = jule::__new_closure<jule::Str,jule::Any*>((void*)__jule_anon1ac20a24b, nullptr, nullptr);;
	jule::Str _8833_m = _1daedaea9_Str(_87153_message);;
	jule::Str _8843_def1Ident = _8733_getIdent(&(_87126_def1));;
	jule::Str _8853_def2Ident = _8733_getIdent(&(_87137_def2));;
	jule::Str _8863_refersTo = _1d9145027_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8843_def1Ident, &__jule_any_type4); (*it++) = jule::Any(_8853_def2Ident, &__jule_any_type4); __jule_collection; }));;
	_1daeda6b2_WriteStr(_87153_message, _1daebc5c8_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1daeda6b2_WriteStr(_87153_message, _8863_refersTo);
	_1daeda96a_WriteByte(_87153_message, '\n');
	_1daeda6b2_WriteStr(_87153_message, _8833_m);
}



inline jule::Bool _1a7d30b9a_checkCrossCycle(_1a7d2e193_typeChecker* _self_, jule::Any _89327_decl, _1daed18b7_StrBuilder* _89343_message) {
	{
		auto &_match_expr{ _89327_decl };
		
		if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ac20e838:;
			{
				jule::Ptr<_1a7d1aea4_TypeAlias> _8964_ta = _89327_decl.unsafe_cast_ptr<_1a7d1aea4_TypeAlias>();;
				{
					auto expr = &((*(_8964_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac210806:;
					if (it != expr_end) {
						jule::Any *_89711_d = it;
						{
							{
								
								if (((*(_89711_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1ac21110e:;
									{
										_1a7d3079e_pushCycleError(_self_, jule::Any(_8964_ta, &__jule_any_type27), (*(_89711_d)), _89343_message);
										return false;;
									}
								}
								else if ((!(_1a7d30b9a_checkCrossCycle(_self_, (*(_89711_d)), _89343_message)))) {
									_case_begin_1ac211197:;
									{
										_1a7d3079e_pushCycleError(_self_, jule::Any(_8964_ta, &__jule_any_type27), (*(_89711_d)), _89343_message);
										return false;;
									}
								}
								_match_end_1ac210eee:;
							};
						}
						_iter_next_1ac210806:;
						++it;
						goto _iter_begin_1ac210806;
					}
					_iter_end_1ac210806:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ac20e690:;
			{
				jule::Ptr<_1a7ba5ca6_Struct> _9084_s = _89327_decl.unsafe_cast_ptr<_1a7ba5ca6_Struct>();;
				{
					auto expr = &((*(_9084_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac212b8d:;
					if (it != expr_end) {
						jule::Ptr<_1a7ba5ca6_Struct> *_90911_d = it;
						{
							{
								
								if ((jule::Any((*(_90911_d)), &__jule_any_type23) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1ac2134a7:;
									{
										_1a7d3079e_pushCycleError(_self_, jule::Any(_9084_s, &__jule_any_type23), jule::Any((*(_90911_d)), &__jule_any_type23), _89343_message);
										return false;;
									}
								}
								else if ((!(_1a7d30b9a_checkCrossCycle(_self_, jule::Any((*(_90911_d)), &__jule_any_type23), _89343_message)))) {
									_case_begin_1ac213540:;
									{
										_1a7d3079e_pushCycleError(_self_, jule::Any(_9084_s, &__jule_any_type23), jule::Any((*(_90911_d)), &__jule_any_type23), _89343_message);
										return false;;
									}
								}
								_match_end_1ac213397:;
							};
						}
						_iter_next_1ac212b8d:;
						++it;
						goto _iter_begin_1ac212b8d;
					}
					_iter_end_1ac212b8d:;
				};
			}
		}
		_match_end_1ac20e7c2:;
	};
	return true;;
}



inline jule::Bool _1a7d31096_checkIllegalCycles(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b806ba_IdentTypeDecl>* _92735_ident, jule::Any _92762_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _92762_decl };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ac21591b:;
			{
				if ((*(_92762_decl.unsafe_cast_ptr<_1a7ba5ca6_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ac21582d:;
			{
				if ((*(_92762_decl.unsafe_cast_ptr<_1a7d1aea4_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1ac21571d:;
	};
	if ((_92762_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1a7d2e924_pushErr(_self_, (*((*(_92735_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1daed18b7_StrBuilder _9507_message = static__1daed1bb4_New(32LL);;
	if ((!(_1a7d30b9a_checkCrossCycle(_self_, _92762_decl, &(_9507_message))))) {
		jule::Str _9538_errMsg = _1daedaea9_Str(&_9507_message);;
		_1daedb1a7_Clear(&_9507_message);
		_1a7d3079e_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _92762_decl, &(_9507_message));
		_9538_errMsg+=_1daedaea9_Str(&_9507_message);
		_1a7d2e924_pushErr(_self_, (*((*(_92735_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9538_errMsg, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ac21a888:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_92762_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ac218dc5:;
			{
				{
					auto &_match_expr{ _92762_decl };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1ac21b14c:;
						{
							jule::Ptr<_1a7ba5ca6_Struct> _9699_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1a7ba5ca6_Struct>();;
							(*(_9699_s))._field_Depends=jule::append((*_9699_s.alloc)._field_Depends,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _92762_decl.cast_ptr<_1a7ba5ca6_Struct>(&__jule_any_type23); __jule_collection; }));
						}
					}
					_match_end_1ac21aea4:;
				};
			}
		}
		_match_end_1ac21a800:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait _1a7d31492_fromTypeAlias(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b806ba_IdentTypeDecl>* _97730_decl, jule::Ptr<_1a7d1aea4_TypeAlias>* _97757_ta) {
	if ((!(_1a7c5a377_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_97757_ta))))._field_Public, (*((*(_97757_ta))))._field_Token)))) {
		_1a7d2e924_pushErr(_self_, (*((*(_97730_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_97730_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_97757_ta))))._field_Used=true;
	if (((*((*(_97730_decl))))._field_Generics.len() > 0LL)) {
		_1a7d2e924_pushErr(_self_, (*((*(_97730_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_97730_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac2217c3:;
			if (it != expr_end) {
				jule::Ptr<_1a7d1aea4_TypeAlias> _99411_bg = *it;
				{
					if (((_99411_bg == (*(_97757_ta))) || (((*((*((*(_97757_ta))))._field_Kind))._field_Kind != nullptr) && _1a7d1c4d3_Equal((*((*((*(_97757_ta))))._field_Kind))._field_Kind, (*(*(_99411_bg))._field_Kind.alloc)._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1ac2217c3;
					};
				}
				_iter_next_1ac2217c3:;
				++it;
				goto _iter_begin_1ac2217c3;
			}
			_iter_end_1ac2217c3:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac223ad3:;
			if (it != expr_end) {
				jule::Ptr<_1a7d1aea4_TypeAlias> _100511_bg = *it;
				{
					if ((_100511_bg == (*(_97757_ta)))) {
						_1a7d2e924_pushErr(_self_, (*((*(_97730_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_97730_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_97757_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac2244da:;
						if (it != expr_end) {
							jule::Ptr<_1a7d1aea4_TypeAlias> _101012_dg = *it;
							{
								if ((_100511_bg == _101012_dg)) {
									_1a7d2e924_pushErr(_self_, (*((*(_97730_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_97730_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
									return nullptr;;
								};
							}
							_iter_next_1ac2244da:;
							++it;
							goto _iter_begin_1ac2244da;
						}
						_iter_end_1ac2244da:;
					};
				}
				_iter_next_1ac223ad3:;
				++it;
				goto _iter_begin_1ac223ad3;
			}
			_iter_end_1ac223ad3:;
		};
	};
	if (((*(*((*(_97757_ta))))._field_Kind.alloc)._field_Kind == nullptr)) {
		jule::Bool _10214_ok = _1a7c67818_checkTypeAliasDeclKind((*(_self_))._field_s, _97757_ta, (*(_self_))._field_lookup);;
		if ((!(_10214_ok))) {
			return nullptr;;
		};
	};
	{
		auto &_match_expr{ (*((*((*((*(_97757_ta))))._field_Kind))._field_Kind))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data0)) {
			_case_begin_1ac227c19:;
			{
				jule::Bool _10294_ok = _1a7d31096_checkIllegalCycles(_self_, _97730_decl, jule::Any((*((*(*((*((*(_97757_ta))))._field_Kind))._field_Kind.alloc)._field_Kind.cast_ptr<_1a7ba8b11_StructIns>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data0)))._field_Decl, &__jule_any_type23));;
				if ((!(_10294_ok))) {
					return nullptr;;
				};
			}
		}
		_match_end_1ac227b92:;
	};
	if (((*((*(_97757_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_97757_ta)); __jule_collection; }));
	};
	jule::Ptr<_1a7d1bc96_TypeKind> _10417_tk = jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=(*((*(_97757_ta))))._field_Generic, ._field_Variadic=false, ._field_Kind=(*(*((*((*(_97757_ta))))._field_Kind))._field_Kind.alloc)._field_Kind});;
	_1a7d30381_pushReferenceByKind(_self_, &(_10417_tk));
	if ((*((*(_97757_ta))))._field_Binded) {
		(*(_10417_tk))._field_BindIdent=(*((*(_97757_ta))))._field_Ident;
	} else {
		(*(_10417_tk))._field_BindIdent=(*(*((*((*(_97757_ta))))._field_Kind))._field_Kind.alloc)._field_BindIdent;
	};
	return jule::Trait(_10417_tk, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data21);;
}



inline jule::Ptr<_1a7bd1a6d_Enum> _1a7d3188d_fromEnum(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b806ba_IdentTypeDecl>* _105425_decl, jule::Ptr<_1a7bd1a6d_Enum>* _105452_e) {
	if ((!(_1a7c5a377_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_105452_e))))._field_Public, (*((*(_105452_e))))._field_Token)))) {
		_1a7d2e924_pushErr(_self_, (*((*(_105425_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_105425_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_105425_decl))))._field_Generics.len() > 0LL)) {
		_1a7d2e924_pushErr(_self_, (*((*(_105425_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_105425_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return (*(_105452_e));;
}



inline jule::Ptr<_1a7bd3278_TypeEnum> _1a7d31c89_fromTypeEnum(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b806ba_IdentTypeDecl>* _106629_decl, jule::Ptr<_1a7bd3278_TypeEnum>* _106656_e) {
	if ((!(_1a7c5a377_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_106656_e))))._field_Public, (*((*(_106656_e))))._field_Token)))) {
		_1a7d2e924_pushErr(_self_, (*((*(_106629_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106629_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_106629_decl))))._field_Generics.len() > 0LL)) {
		_1a7d2e924_pushErr(_self_, (*((*(_106629_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106629_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return (*(_106656_e));;
}



inline jule::Ptr<_1a7bce362_Trait> _1a7d32185_fromTrait(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b806ba_IdentTypeDecl>* _107826_decl, jule::Ptr<_1a7bce362_Trait>* _107853_t) {
	if ((!(_1a7c5a377_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_107853_t))))._field_Public, (*((*(_107853_t))))._field_Token)))) {
		_1a7d2e924_pushErr(_self_, (*((*(_107826_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_107826_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_107826_decl))))._field_Generics.len() > 0LL)) {
		_1a7d2e924_pushErr(_self_, (*((*(_107826_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_107826_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_1ac20617b_pushReference(_self_, _107853_t);
	return (*(_107853_t));;
}



inline jule::Bool _1a7d32581_checkStructIns(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7ba8b11_StructIns>* _109135_ins, jule::Ptr<_1a7b69b05_Token>* _109157_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_109135_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_109135_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (jule::Any((*((*(_109135_ins))))._field_Decl, &__jule_any_type23) == (*(*(_self_))._field_referencer.alloc)._field_owner))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1a7c74308_precheckStructIns((*(_self_))._field_s, _109135_ins, (*(_109157_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_109135_ins))))._field_Generics.len() > 0LL)) {
		_1a7c74d20_checkStructInsOperators((*(_self_))._field_s, (*(_109135_ins)));
		_1a7c745b1_checkStructIns((*(_self_))._field_s, _109135_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a7d32839_appendUsedStructReference(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7ba5ca6_Struct>* _111246_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ac23a798:;
			{
				jule::Ptr<_1a7ba5ca6_Struct> _11188_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1a7ba5ca6_Struct>();;
				if ((!(_1a7ba7769_IsUses(_11188_refS.ptr(), (*(_111246_s)))))) {
					(*_11188_refS.alloc)._field_Uses=jule::append((*_11188_refS.alloc)._field_Uses,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_111246_s)); __jule_collection; }));
				};
			}
		}
		_match_end_1ac23a732:;
	};
}



inline jule::Ptr<_1a7ba8b11_StructIns> _1a7d32c35_buildStructInstance(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b806ba_IdentTypeDecl>* _112540_decl, jule::Ptr<_1a7ba5ca6_Struct>* _112567_s) {
	jule::Ptr<_1a7d2d1a3_referencer> _11277_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>> _11297_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0)) {
				_case_begin_1ac23d7ce:;
				{
					jule::Ptr<_1a7c1ac1c_scopeChecker> _11369_sc = (*(_self_))._field_lookup.cast_ptr<_1a7c1ac1c_scopeChecker>((jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0);;
					jule::Ptr<_1a7c1ac1c_scopeChecker> _11379_hard = _1a7c1e380_getHardRoot(_11369_sc);;
					if ((((*((*(_11379_hard))._field_owner))._field_Owner == nullptr) || ((*((*(*(_11379_hard))._field_owner.alloc)._field_Owner))._field_Decl != (*(_112567_s))))) {
						goto _match_end_1ac23d768;
					};
					jule::I64 _11415_n = ((*(*(_11379_hard))._field_owner.alloc)._field_Generics.len() + (*((*(*(_11379_hard))._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_11379_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _11415_n);
				}
			}
			_match_end_1ac23d768:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait _11517_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1a7ba8b11_StructIns> _11557_ins = _1a7ba624b_instance((*(_112567_s)));;
	(*(_11557_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>::alloc(0LL, (*((*(_112540_decl))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7d1a3b0_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_112540_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac243b03:;
		if (it != expr_end) {
			jule::Ptr<_1a7b800b0_TypeDecl> _115715_g = *it;
			{
				jule::Ptr<_1a7d1bc96_TypeKind> _11588_kind = _1a7d3693c_build(_self_, &((*(_115715_g))._field_Kind));;
				if ((_11588_kind == nullptr)) {
					return nullptr;;
				};
				(*_11557_ins.alloc)._field_Generics=jule::append((*_11557_ins.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a7d1a3b0_InsGeneric>(_1a7d1a3b0_InsGeneric{._field_Kind=_11588_kind, ._field_Constraint=jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1ac243b03:;
			++it;
			goto _iter_begin_1ac243b03;
		}
		_iter_end_1ac243b03:;
	};
	(*(_self_))._field_lookup=_11517_lookup;
	(*(_self_))._field_bannedGenerics=_11297_bannedGenerics;
	(*(_self_))._field_referencer=_11277_referencer;
	return _11557_ins;;
}



inline jule::Ptr<_1a7ba8b11_StructIns> _1a7d33131_fromStructIns(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7ba8b11_StructIns>* _117334_ins, jule::Ptr<_1a7b69b05_Token> _117355_token) {
	jule::Ptr<_1a7ba8b11_StructIns> _11747_existInstance = _1a7ba6559_appendInstance((*((*(_117334_ins))))._field_Decl.ptr(), _117334_ins);;
	if ((_11747_existInstance != nullptr)) {
		if ((!(_1a7c65618_checkConstraintsStruct((*(_self_))._field_s, _117334_ins, &(_117355_token), _11747_existInstance)))) {
			return nullptr;;
		};
		_1ac2036a6_pushReference(_self_, &(_11747_existInstance));
		return _11747_existInstance;;
	};
	if ((!(_1a7d32581_checkStructIns(_self_, _117334_ins, &(_117355_token))))) {
		return nullptr;;
	};
	_1ac2036a6_pushReference(_self_, _117334_ins);
	return (*(_117334_ins));;
}



inline jule::Ptr<_1a7ba8b11_StructIns> _1a7d3352c_fromStruct(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b806ba_IdentTypeDecl>* _119131_decl, jule::Ptr<_1a7ba5ca6_Struct>* _119158_s) {
	if ((!(_1a7c5a377_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_119158_s))))._field_Public, (*((*(_119158_s))))._field_Token)))) {
		_1a7d2e924_pushErr(_self_, (*((*(_119131_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_119131_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_119131_decl))))._field_Generics.len() > 0LL)) {
			_1a7d2e924_pushErr(_self_, (*((*(_119131_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("generics are not allowed in this scope", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1a7ba8b11_StructIns>(_1a7ba8b11_StructIns{._field_Checked=false, ._field_Decl=(*(_119158_s)), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Fields=jule::Slice<jule::Ptr<_1a7ba8061_FieldIns>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1a7c7b178_Var>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1a7bba8d1_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Operators=_1a7ba4d93_Operators{._field_Eq=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_Add=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_Div=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr)}});;
	};
	jule::Bool _12097_ok = _1a7d31096_checkIllegalCycles(_self_, _119131_decl, jule::Any((*(_119158_s)), &__jule_any_type23));;
	if ((!(_12097_ok))) {
		return nullptr;;
	};
	_1a7d32839_appendUsedStructReference(_self_, _119158_s);
	jule::Ptr<_1a7ba8b11_StructIns> _12157_ins = _1a7d32c35_buildStructInstance(_self_, _119131_decl, _119158_s);;
	if ((_12157_ins == nullptr)) {
		return nullptr;;
	};
	_12097_ok=_1a7c5b147_checkGenericQuantity((*(_self_))._field_s, (*((*(_12157_ins))._field_Decl))._field_Generics.len(), (*(_12157_ins))._field_Generics.len(), (*((*(_119131_decl))))._field_Token);
	if ((!(_12097_ok))) {
		return nullptr;;
	};
	return _1a7d33131_fromStructIns(_self_, &(_12157_ins), (*((*(_119131_decl))))._field_Token);;
}



inline jule::Trait _1a7d3386d_getDef(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b806ba_IdentTypeDecl>* _123527_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac24e1d5:;
		if (it != expr_end) {
			jule::Ptr<_1a7b92127_GenericDecl> _123610_g = *it;
			{
				if (((*(_123610_g))._field_Ident == (*((*(_123527_decl))))._field_Ident)) {
					return jule::Trait(_1a7d39610_buildPrimType((*_123610_g.alloc)._field_Ident), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22);;
				};
			}
			_iter_next_1ac24e1d5:;
			++it;
			goto _iter_begin_1ac24e1d5;
		}
		_iter_end_1ac24e1d5:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac24e548:;
		if (it != expr_end) {
			jule::Ptr<_1a7d1aea4_TypeAlias> _124215_g = *it;
			{
				if (((*(_124215_g))._field_Ident == (*((*(_123527_decl))))._field_Ident)) {
					if (((*((*(_123527_decl))))._field_Generics.len() > 0LL)) {
						_1a7d2e924_pushErr(_self_, (*((*(_123527_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_123527_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
						return nullptr;;
					};
					jule::Ptr<_1a7ba8b11_StructIns> _12489_st = _1a7d209c0_Struct((*((*_124215_g.alloc)._field_Kind))._field_Kind.ptr());;
					if ((_12489_st != nullptr)) {
						jule::Bool _12506_ok = _1a7d31096_checkIllegalCycles(_self_, _123527_decl, jule::Any((*_12489_st.alloc)._field_Decl, &__jule_any_type23));;
						if ((!(_12506_ok))) {
							return nullptr;;
						};
					};
					return (*(*((*(_124215_g))._field_Kind))._field_Kind.alloc)._field_Kind;;
				};
			}
			_iter_next_1ac24e548:;
			++it;
			goto _iter_begin_1ac24e548;
		}
		_iter_end_1ac24e548:;
	};
	if ((!((*((*(_123527_decl))))._field_Binded))) {
		jule::Ptr<_1a7bd1a6d_Enum> _12608_e = ((_1a7d3c448_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7d3bea3_FindEnum((*(_self_))._field_lookup.data, (*((*(_123527_decl))))._field_Ident);;
		if ((_12608_e != nullptr)) {
			return jule::Trait(_1a7d3188d_fromEnum(_self_, _123527_decl, &(_12608_e)), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data3);;
		};
		jule::Ptr<_1a7bd3278_TypeEnum> _12658_te = ((_1a7d3c448_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7d3c2e4_FindTypeEnum((*(_self_))._field_lookup.data, (*((*(_123527_decl))))._field_Ident);;
		if ((_12658_te != nullptr)) {
			return jule::Trait(_1a7d31c89_fromTypeEnum(_self_, _123527_decl, &(_12658_te)), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data4);;
		};
		jule::Ptr<_1a7bce362_Trait> _12708_t = ((_1a7d3c448_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7d3bb62_FindTrait((*(_self_))._field_lookup.data, (*((*(_123527_decl))))._field_Ident);;
		if ((_12708_t != nullptr)) {
			return jule::Trait(_1a7d32185_fromTrait(_self_, _123527_decl, &(_12708_t)), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1a7d2e924_pushErr(_self_, (*((*(_123527_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded definitions are not allowed in this scope", 48)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7ba5ca6_Struct> _12797_s = ((_1a7d3c448_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7d3b425_FindStruct((*(_self_))._field_lookup.data, (*((*(_123527_decl))))._field_Ident, (*((*(_123527_decl))))._field_Binded);;
	if ((_12797_s != nullptr)) {
		return jule::Trait(_1a7d3352c_fromStruct(_self_, _123527_decl, &(_12797_s)), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data0);;
	};
	jule::Ptr<_1a7d1aea4_TypeAlias> _12847_ta = ((_1a7d3c448_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7d3b029_FindTypeAlias((*(_self_))._field_lookup.data, (*((*(_123527_decl))))._field_Ident, (*((*(_123527_decl))))._field_Binded);;
	if (((_12847_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_12847_ta=_1a7e04db2_findBuiltinTypeAlias((*((*(_123527_decl))))._field_Ident);
	};
	if ((_12847_ta != nullptr)) {
		return _1a7d31492_fromTypeAlias(_self_, _123527_decl, &(_12847_ta));;
	};
	_1a7d2e924_pushErr(_self_, (*((*(_123527_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_123527_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Trait _1a7d33bae_buildIdent(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b806ba_IdentTypeDecl> _129630_decl) {
	return _1a7d3386d_getDef(_self_, &(_129630_decl));;
}



inline jule::Trait _1a7d34000_buildSubIdent(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b857e1_SubIdentTypeDecl> _130033_decl) {
	jule::Trait _13017_ident = _1a7d33bae_buildIdent(_self_, (*(_130033_decl))._field_Idents[0LL]);;
	if ((_13017_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _13017_ident };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data4)) {
			_case_begin_1ac25c600:;
			{
				goto _match_end_1ac25cb61;
			}
		}
		else {
			_case_begin_1ac25c6cc:;
			{
				_1a7d2e924_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac25cb61:;
	};
	jule::Ptr<_1a7bd3278_TypeEnum> _13127_t = _13017_ident.cast_ptr<_1a7bd3278_TypeEnum>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data4);;
	jule::Slice<jule::Ptr<_1a7b806ba_IdentTypeDecl>> _13137_idents = (*_130033_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_13137_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac25c754:;
		if (it != expr_end) {
			jule::I64 _13147_i = it - expr->begin();
			jule::Ptr<_1a7b806ba_IdentTypeDecl> _131410_id = *it;
			{
				jule::Ptr<_1a7bd2ba1_TypeEnumItem> _13158_item = _1a7bd3d6c_FindItem(_13127_t.ptr(), (*(_131410_id))._field_Ident);;
				if ((_13158_item == nullptr)) {
					_1a7d2e924_pushErr(_self_, (*_131410_id.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_13127_t.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_131410_id.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				if (((_13137_idents.len() - _13147_i) == 1LL)) {
					_1a7d30381_pushReferenceByKind(_self_, &((*((*(_13158_item))._field_Kind))._field_Kind));
					return jule::Trait((*(*(_13158_item))._field_Kind.alloc)._field_Kind, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data21);;
				};
				_13127_t=_1a7d1ee86_TypeEnum((*(*(_13158_item))._field_Kind.alloc)._field_Kind.ptr());
				if ((_13127_t == nullptr)) {
					_1a7d2e924_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1ac25c754:;
			++it;
			_13147_i++;
			goto _iter_begin_1ac25c754;
		}
		_iter_end_1ac25c754:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7d288da_Sptr> _1a7d34341_buildSptrFromType(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _133438_elem) {
	{
		
		if (((*(_133438_elem)) == nullptr)) {
			_case_begin_1ac263d87:;
			{
				return nullptr;;
			}
		}
		else if ((_1a7d209c0_Struct((*(_133438_elem)).ptr()) != nullptr)) {
			_case_begin_1ac263e0e:;
			{
				jule::Ptr<_1a7ba8b11_StructIns> _13404_s = _1a7d209c0_Struct((*(_133438_elem)).ptr());;
				if ((((*(_13404_s))._field_Decl != nullptr) && (*(*(_13404_s))._field_Decl.alloc)._field_Binded)) {
					_1a7d2e924_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("binded structures cannot supports reference counting", 52)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1a7d2021c_Arr((*(_133438_elem)).ptr()) != nullptr) && (*(_1a7d2021c_Arr((*(_133438_elem)).ptr())))._field_Auto)) {
			_case_begin_1ac263e75:;
			{
				_1a7d2e924_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac26345d:;
	};
	return jule::new_ptr<_1a7d288da_Sptr>(_1a7d288da_Sptr{._field_Elem=(*(_133438_elem))});;
}



inline jule::Ptr<_1a7d288da_Sptr> _1a7d34682_buildSptr(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b85eb7_SptrTypeDecl> _135429_decl) {
	jule::Bool _13553_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13553_cycleRisk;
	});;
	jule::Ptr<_1a7d1bc96_TypeKind> _13597_elem = _1a7d36c7d_checkDecl(_self_, &((*(_135429_decl))._field_Elem));;
	return _1a7d34341_buildSptrFromType(_self_, &(_13597_elem));;
}



inline jule::Ptr<_1a7d2c1a2_Ptr> _1a7d349c3_buildPtrFromType(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _136337_elem) {
	{
		
		if (((*(_136337_elem)) == nullptr)) {
			_case_begin_1ac269222:;
			{
				return nullptr;;
			}
		}
		else if (((_1a7d2021c_Arr((*(_136337_elem)).ptr()) != nullptr) && (*(_1a7d2021c_Arr((*(_136337_elem)).ptr())))._field_Auto)) {
			_case_begin_1ac2692bb:;
			{
				_1a7d2e924_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return jule::new_ptr<_1a7d2c1a2_Ptr>(_1a7d2c1a2_Ptr{._field_Elem=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr)});;
			}
		}
		_match_end_1ac269101:;
	};
	return jule::new_ptr<_1a7d2c1a2_Ptr>(_1a7d2c1a2_Ptr{._field_Elem=(*(_136337_elem))});;
}



inline jule::Ptr<_1a7d2c1a2_Ptr> _1a7d34d14_buildPtr(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b86946_PtrTypeDecl> _137828_decl) {
	jule::Bool _13793_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13793_cycleRisk;
	});;
	jule::Ptr<_1a7d1bc96_TypeKind> _138311_elem = nullptr;;
	if ((!(_1a7b86cdc_IsUnsafe(_137828_decl.ptr())))) {
		_138311_elem=_1a7d36c7d_checkDecl(_self_, &((*_137828_decl.alloc)._field_Elem));
		return _1a7d349c3_buildPtrFromType(_self_, &(_138311_elem));;
	};
	return jule::new_ptr<_1a7d2c1a2_Ptr>(_1a7d2c1a2_Ptr{._field_Elem=_138311_elem});;
}



inline jule::Ptr<_1a7d293ad_Slc> _1a7d35155_buildSlc(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b8634c_SlcTypeDecl> _139528_decl) {
	jule::Bool _13963_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13963_cycleRisk;
	});;
	jule::Ptr<_1a7d1bc96_TypeKind> _14007_elem = _1a7d36c7d_checkDecl(_self_, &((*(_139528_decl))._field_Elem));;
	{
		
		if ((_14007_elem == nullptr)) {
			_case_begin_1ac26e502:;
			{
				return nullptr;;
			}
		}
		else if (((_1a7d2021c_Arr(_14007_elem.ptr()) != nullptr) && (*(_1a7d2021c_Arr(_14007_elem)))._field_Auto)) {
			_case_begin_1ac26e568:;
			{
				_1a7d2e924_pushErr(_self_, (*((*_139528_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac26e48b:;
	};
	return jule::new_ptr<_1a7d293ad_Slc>(_1a7d293ad_Slc{._field_Elem=_14007_elem});;
}



inline jule::Ptr<_1a7d2b6ce_Arr> _1a7d35496_buildArr(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b871d8_ArrTypeDecl> _141628_decl) {
	jule::I64 _14177_n = 0LL;;
	if ((!(_1a7b8757e_AutoSized(_141628_decl.ptr())))) {
		jule::Ptr<_1a7cd41ae_Data> _14208_size = _1a7d09aa8_evalExpr(_1a7c6256b_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_141628_decl.alloc)._field_Size);;
		if ((_14208_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1a7cd4ae9_IsConst(_14208_size.ptr())))) {
			_1a7d2e924_pushErr(_self_, (*((*_141628_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1a7d1e44c_Prim((*(_14208_size))._field_Kind.ptr()) == nullptr) || (!(_1c00697e5_IsInt((*(_1a7d1e44c_Prim((*(_14208_size))._field_Kind)))._field_Kind))))) {
			_1a7d2e924_pushErr(_self_, (*((*_141628_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be integer", 26)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_14177_n=static_cast<jule::I64>(_1c006cb39_AsI64((*(_14208_size))._field_Constant.ptr()));
		if ((_14177_n < 0LL)) {
			_1a7d2e924_pushErr(_self_, (*((*_141628_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be positive integer", 35)), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _14385_max = _1c0065857_MaxI(static_cast<jule::Str>(jule::Str::lit("int", 3)));;
			if (((_1c005d72e_BitSize != 64LL) && (static_cast<jule::I64>(_14177_n) > _14385_max))) {
				_1a7d2e924_pushErr(_self_, (*((*_141628_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array with size @ overflows limit (@) of the system", 51)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d17b3d_constoa(&((*(_14208_size))._field_Constant)), &__jule_any_type4); (*it++) = jule::Any(_1c005c0ce_FmtInt(_14385_max, 10LL), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1a7d1bc96_TypeKind> _14477_elem = _1a7d36c7d_checkDecl(_self_, &((*_141628_decl.alloc)._field_Elem));;
	{
		
		if ((_14477_elem == nullptr)) {
			_case_begin_1ac2798b4:;
			{
				return nullptr;;
			}
		}
		else if (((_1a7d2021c_Arr(_14477_elem.ptr()) != nullptr) && (*(_1a7d2021c_Arr(_14477_elem)))._field_Auto)) {
			_case_begin_1ac27995d:;
			{
				_1a7d2e924_pushErr(_self_, (*((*_141628_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac27983c:;
	};
	return jule::new_ptr<_1a7d2b6ce_Arr>(_1a7d2b6ce_Arr{._field_Auto=_1a7b8757e_AutoSized(_141628_decl), ._field_N=_14177_n, ._field_Elem=_14477_elem});;
}



inline jule::Ptr<_1a7d2aa52_Map> _1a7d357d7_buildMap(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b87936_MapTypeDecl> _146528_decl) {
	jule::Bool _14663_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14663_cycleRisk;
	});;
	jule::Ptr<_1a7d1bc96_TypeKind> _14707_key = _1a7d36c7d_checkDecl(_self_, &((*(_146528_decl))._field_Key));;
	if ((_14707_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a7d1bc96_TypeKind> _14757_val = _1a7d36c7d_checkDecl(_self_, &((*_146528_decl.alloc)._field_Val));;
	if ((_14757_val == nullptr)) {
		return nullptr;;
	};
	if ((_1a7d1ec00_Enum(_14757_val.ptr()) != nullptr)) {
		_1a7d2e924_pushErr(_self_, (*((*_146528_decl.alloc)._field_Val))._field_Token, static_cast<jule::Str>(jule::Str::lit("maps do not support enums as map key type", 41)), jule::Slice<jule::Any>());
	};
	if (((*((*((*(_self_))._field_s))._field_meta))._field_runtime != nullptr)) {
		jule::Ptr<_1a7ba5ca6_Struct> _14848_s = _1a7825937_runtimeFindStruct(&((*(*((*(_self_))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
		_1a7d32839_appendUsedStructReference(_self_, &(_14848_s));
		jule::Ptr<_1a7ba8b11_StructIns> _14868_ins = _1a7ba624b_instance(_14848_s);;
		(*(_14868_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a7d1a3b0_InsGeneric>(_1a7d1a3b0_InsGeneric{._field_Kind=_14707_key, ._field_Constraint=jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>(nullptr)}); (*it++) = jule::new_ptr<_1a7d1a3b0_InsGeneric>(_1a7d1a3b0_InsGeneric{._field_Kind=_14757_val, ._field_Constraint=jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>(nullptr)}); __jule_collection; });
		_1a7d33131_fromStructIns(_self_, &(_14868_ins), (*((*_146528_decl.alloc)._field_Key))._field_Token);
	};
	return jule::new_ptr<_1a7d2aa52_Map>(_1a7d2aa52_Map{._field_Key=_14707_key, ._field_Val=_14757_val});;
}



inline jule::Ptr<_1a7d29ea2_Tuple> _1a7d35b28_buildTuple(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b86649_TupleTypeDecl> _149730_decl) {
	jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>> _14987_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>::alloc(0LL, (*(_149730_decl))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7d1bc96_TypeKind>(nullptr); __jule_collection; });;
	{
		auto expr = &((*_149730_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac283b65:;
		if (it != expr_end) {
			jule::Ptr<_1a7b800b0_TypeDecl> _149915_t = *it;
			{
				jule::Ptr<_1a7d1bc96_TypeKind> _15008_kind = _1a7d36c7d_checkDecl(_self_, &(_149915_t));;
				if ((_15008_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>> &__jule_push_dest = _14987_types; __jule_push_dest.push(_15008_kind); };
			}
			_iter_next_1ac283b65:;
			++it;
			goto _iter_begin_1ac283b65;
		}
		_iter_end_1ac283b65:;
	};
	return jule::new_ptr<_1a7d29ea2_Tuple>(_1a7d29ea2_Tuple{._field_Types=_14987_types});;
}



inline jule::Bool _1a7d35e69_checkFuncTypes(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _151035_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_151035_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2856a0:;
		if (it != expr_end) {
			jule::Ptr<_1a7bbc839_ParamIns> _151115_p = *it;
			{
				(*(_151115_p))._field_Kind=_1a7d3693c_build(_self_, &((*((*((*((*_151115_p.alloc)._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*_151115_p.alloc)._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1a7c661b8_checkFnParamKind((*(_self_))._field_s, &(_151115_p));
			}
			_iter_next_1ac2856a0:;
			++it;
			goto _iter_begin_1ac2856a0;
		}
		_iter_end_1ac2856a0:;
	};
	if ((!(_1a7bbad87_IsVoid((*((*(_151035_f))))._field_Decl.ptr())))) {
		(*((*(_151035_f))))._field_Result=_1a7d3693c_build(_self_, &((*(*((*((*((*((*(_151035_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl.alloc)._field_Kind));
		__jule_func_result = ((*((*(_151035_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a7bbd8b2_FnIns> _1a7d362aa_buildFunc(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b96acc_FnDecl> _152829_decl) {
	jule::Bool _15293_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_15293_cycleRisk;
	});;
	if (((*(_152829_decl))._field_Generics.len() > 0LL)) {
		_1a7d2e924_pushErr(_self_, (*_152829_decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7bba8d1_Fn> _15387_f = _1a7bc4ed4_buildFunc(_152829_decl);;
	jule::I64 _15403_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1a7c704ad_checkAnonFuncDecl((*(_self_))._field_s, &(_15387_f));
	if ((_15403_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1a7bbd8b2_FnIns> _15467_ins = _1a7bbbddd_instanceForce(_15387_f);;
	(*(_15467_ins))._field_Anon=true;
	(*_15467_ins.alloc)._field_AsAnon=true;
	jule::Bool _15503_ok = _1a7d35e69_checkFuncTypes(_self_, &(_15467_ins));;
	if ((!(_15503_ok))) {
		return nullptr;;
	};
	return _15467_ins;;
}



inline jule::Trait _1a7d365eb_buildByNamespace(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b85bba_NamespaceTypeDecl> _155836_decl) {
	jule::Str _15593_path = _1a7d39236_buildLinkPathByTokens(&((*(_155836_decl))._field_Idents));;
	jule::Ptr<_1a7c36793_ImportInfo> _15607_imp = ((_1a7d3c448_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7d3a732_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1a7c36793_ImportInfo>>((void*)__jule_anon_1ac290017, jule::Ptr<__jule_anon_1ac290017_ctx>::make(__jule_anon_1ac290017_ctx{._155836_decl=_155836_decl,._15593_path=_15593_path}).as<jule::Uintptr>(), __jule_anon_1ac290017_ctx_handler));;
	jule::Str _15673_selfIdent = jule::Str::lit("self", 4);;
	if (((_15607_imp == nullptr) || (!(_1a7c38d17_isLookupable(_15607_imp.ptr(), &(_15673_selfIdent)))))) {
		_1a7d2e924_pushErr(_self_, (*(_155836_decl))._field_Idents[0LL], static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_15593_path, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_1a7d2ed20_disallowBuiltin(_self_);
	jule::Trait _15747_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_15607_imp, (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data1);
	jule::Ptr<_1a7d1bc96_TypeKind> _15767_kind = _1a7d36c7d_checkDecl(_self_, &((*_155836_decl.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_15747_lookup;
	_1a7d2eb22_allowBuiltin(_self_);
	return jule::Trait(_15767_kind, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data21);;
}



inline jule::Ptr<_1a7d1bc96_TypeKind> _1a7d3693c_build(_1a7d2e193_typeChecker* _self_, jule::Any* _158226_declKind) {
	jule::Trait _158311_kind = nullptr;;
	{
		auto &_match_expr{ (*(_158226_declKind)) };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1ac295083:;
			{
				jule::Trait _15868_t = _1a7d33bae_buildIdent(_self_, (*(_158226_declKind)).cast_ptr<_1a7b806ba_IdentTypeDecl>(&__jule_any_type78));;
				if ((_15868_t != nullptr)) {
					_158311_kind=_15868_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1ac2951d7:;
			{
				jule::Trait _15918_t = _1a7d34000_buildSubIdent(_self_, (*(_158226_declKind)).cast_ptr<_1a7b857e1_SubIdentTypeDecl>(&__jule_any_type90));;
				if ((_15918_t != nullptr)) {
					_158311_kind=_15918_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1ac29524d:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a7d288da_Sptr> _15978_t = _1a7d34682_buildSptr(_self_, (*(_158226_declKind)).cast_ptr<_1a7b85eb7_SptrTypeDecl>(&__jule_any_type75));;
				if ((_15978_t != nullptr)) {
					_158311_kind=jule::Trait(_15978_t, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ac2952b4:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a7d2c1a2_Ptr> _16038_t = _1a7d34d14_buildPtr(_self_, (*(_158226_declKind)).cast_ptr<_1a7b86946_PtrTypeDecl>(&__jule_any_type74));;
				if ((_16038_t != nullptr)) {
					_158311_kind=jule::Trait(_16038_t, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data28);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1ac29532a:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a7d293ad_Slc> _16098_t = _1a7d35155_buildSlc(_self_, (*(_158226_declKind)).cast_ptr<_1a7b8634c_SlcTypeDecl>(&__jule_any_type73));;
				if ((_16098_t != nullptr)) {
					_158311_kind=jule::Trait(_16098_t, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1ac295391:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a7d2b6ce_Arr> _16158_t = _1a7d35496_buildArr(_self_, (*(_158226_declKind)).cast_ptr<_1a7b871d8_ArrTypeDecl>(&__jule_any_type72));;
				if ((_16158_t != nullptr)) {
					_158311_kind=jule::Trait(_16158_t, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data27);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1ac295407:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a7d2aa52_Map> _16218_t = _1a7d357d7_buildMap(_self_, (*(_158226_declKind)).cast_ptr<_1a7b87936_MapTypeDecl>(&__jule_any_type76));;
				if ((_16218_t != nullptr)) {
					_158311_kind=jule::Trait(_16218_t, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1ac295d75:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a7d29ea2_Tuple> _16278_t = _1a7d35b28_buildTuple(_self_, (*(_158226_declKind)).cast_ptr<_1a7b86649_TupleTypeDecl>(&__jule_any_type77));;
				if ((_16278_t != nullptr)) {
					_158311_kind=jule::Trait(_16278_t, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ac295ddb:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a7bbd8b2_FnIns> _16338_t = _1a7d362aa_buildFunc(_self_, (*(_158226_declKind)).cast_ptr<_1a7b96acc_FnDecl>(&__jule_any_type14));;
				if ((_16338_t != nullptr)) {
					_158311_kind=jule::Trait(_16338_t, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1ac295e52:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait _16398_t = _1a7d365eb_buildByNamespace(_self_, (*(_158226_declKind)).cast_ptr<_1a7b85bba_NamespaceTypeDecl>(&__jule_any_type94));;
				if ((_16398_t != nullptr)) {
					_158311_kind=_16398_t;
				};
			}
		}
		else {
			_case_begin_1ac295171:;
			{
				_1a7d2e924_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac29510a:;
	};
	if ((_158311_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _158311_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data21)) {
			_case_begin_1ac2a4526:;
			{
				return _158311_kind.cast_ptr<_1a7d1bc96_TypeKind>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data21);;
			}
		}
		else {
			_case_begin_1ac2a0ce7:;
			{
				jule::Ptr<_1a7d1bc96_TypeKind> _16548_tk = jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=_158311_kind});;
				{
					auto &_match_expr{ _158311_kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22)) {
						_case_begin_1ac2a28cb:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_16548_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data0)) {
						_case_begin_1ac2a2755:;
						{
							jule::Ptr<_1a7ba8b11_StructIns> _16615_s = _158311_kind.cast_ptr<_1a7ba8b11_StructIns>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data0);;
							if ((((*(_16615_s))._field_Decl != nullptr) && (*(*(_16615_s))._field_Decl.alloc)._field_Binded)) {
								(*(_16548_tk))._field_BindIdent=(*(*(_16615_s))._field_Decl.alloc)._field_Ident;
							};
						}
					}
					_match_end_1ac2a2865:;
				};
				return _16548_tk;;
			}
		}
		_match_end_1ac2a1b1c:;
	};
}



inline jule::Ptr<_1a7d1bc96_TypeKind> _1a7d36c7d_checkDecl(_1a7d2e193_typeChecker* _self_, jule::Ptr<_1a7b800b0_TypeDecl>* _167030_decl) {
	jule::Ptr<_1a7b69b05_Token> _16727_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_167030_decl))))._field_Token;
	jule::Ptr<_1a7d1bc96_TypeKind> _16757_kind = _1a7d3693c_build(_self_, &((*((*(_167030_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_16727_errorToken;
	return _16757_kind;;
}








inline jule::Bool _1a7d37256_identTypeLookup_eq(_1a7d37256_identTypeLookup *_self_, _1a7d37256_identTypeLookup _other_) { return true; }

inline jule::Bool static__1a7d376c9_prim(jule::Str* _169718_ident, jule::Ptr<_1a7d24dae_Prim> _169730_t) {
	return ((*(_169730_t))._field_Kind == (*(_169718_ident)));;
}



inline jule::Bool static__1a7d37a4d_exist(jule::Str* _170119_ident, jule::Ptr<_1a7d1bc96_TypeKind>* _170136_k) {
	{
		
		if ((_1a7d1e44c_Prim((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1ac2a9372:;
			{
				return static__1a7d376c9_prim(_170119_ident, _1a7d1e44c_Prim((*(_170136_k)).ptr()));;
			}
		}
		else if ((_1a7d1e6d3_Sptr((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1ac2a93e9:;
			{
				jule::Ptr<_1a7d288da_Sptr> _17068_sptr = _1a7d1e6d3_Sptr((*(_170136_k)).ptr());;
				return static__1a7d37a4d_exist(_170119_ident, &((*(_17068_sptr))._field_Elem));;
			}
		}
		else if ((_1a7d1e969_Ptr((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1ac2a9471:;
			{
				jule::Ptr<_1a7d2c1a2_Ptr> _17098_ptr = _1a7d1e969_Ptr((*(_170136_k)).ptr());;
				return static__1a7d37a4d_exist(_170119_ident, &((*(_17098_ptr))._field_Elem));;
			}
		}
		else if ((_1a7d204a3_Slc((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1ac2a94e8:;
			{
				jule::Ptr<_1a7d293ad_Slc> _17128_slc = _1a7d204a3_Slc((*(_170136_k)).ptr());;
				return static__1a7d37a4d_exist(_170119_ident, &((*(_17128_slc))._field_Elem));;
			}
		}
		else if ((_1a7d2021c_Arr((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1ac2a96c4:;
			{
				jule::Ptr<_1a7d2b6ce_Arr> _17158_arr = _1a7d2021c_Arr((*(_170136_k)).ptr());;
				return static__1a7d37a4d_exist(_170119_ident, &((*(_17158_arr))._field_Elem));;
			}
		}
		else if ((_1a7d20edc_Map((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1ac2a973a:;
			{
				jule::Ptr<_1a7d2aa52_Map> _17188_m = _1a7d20edc_Map((*(_170136_k)).ptr());;
				return (static__1a7d37a4d_exist(_170119_ident, &((*(_17188_m))._field_Key)) || static__1a7d37a4d_exist(_170119_ident, &((*_17188_m.alloc)._field_Val)));;
			}
		}
		else if ((_1a7d209c0_Struct((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1ac2a97a1:;
			{
				jule::Ptr<_1a7ba8b11_StructIns> _17228_s = _1a7d209c0_Struct((*(_170136_k)).ptr());;
				{
					auto expr = &((*(_17228_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac2b18eb:;
					if (it != expr_end) {
						jule::Ptr<_1a7d1a3b0_InsGeneric> _172316_g = *it;
						{
							if (static__1a7d37a4d_exist(_170119_ident, &((*(_172316_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1ac2b18eb:;
						++it;
						goto _iter_begin_1ac2b18eb;
					}
					_iter_end_1ac2b18eb:;
				};
				return false;;
			}
		}
		else if ((_1a7d20739_Fn((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1ac2a9817:;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _17308_f = _1a7d20739_Fn((*(_170136_k)).ptr());;
				{
					auto expr = &((*(_17308_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac2b3557:;
					if (it != expr_end) {
						jule::Ptr<_1a7bbc839_ParamIns> _173116_p = *it;
						{
							if (_1a7bb955b_IsSelf((*(_173116_p))._field_Decl.ptr())) {
								goto _iter_next_1ac2b3557;
							};
							if (static__1a7d37a4d_exist(_170119_ident, &((*_173116_p.alloc)._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1ac2b3557:;
						++it;
						goto _iter_begin_1ac2b3557;
					}
					_iter_end_1ac2b3557:;
				};
				if (((*_17308_f.alloc)._field_Result != nullptr)) {
					return static__1a7d37a4d_exist(_170119_ident, &((*_17308_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1a7d21273_Tup((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1ac2a988e:;
			{
				jule::Ptr<_1a7d29ea2_Tuple> _17448_tup = _1a7d21273_Tup((*(_170136_k)).ptr());;
				{
					auto expr = &((*(_17448_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac2b5dc8:;
					if (it != expr_end) {
						jule::Ptr<_1a7d1bc96_TypeKind> _174516_t = *it;
						{
							if (static__1a7d37a4d_exist(_170119_ident, &(_174516_t))) {
								return true;;
							};
						}
						_iter_next_1ac2b5dc8:;
						++it;
						goto _iter_begin_1ac2b5dc8;
					}
					_iter_end_1ac2b5dc8:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1ac2a9251:;
			{
				return false;;
			}
		}
		_match_end_1ac2a9141:;
	};
}















inline void _1a87e0d52_stop(_1a87e069d_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1a87e10d8_stopped(_1a87e069d_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1a87e136e_finished(_1a87e069d_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1a87e1605_isLastSt(_1a87e069d_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1a87e1968_pushErr(_1a87e069d_scopeParser* _self_, jule::Ptr<_1a7b69b05_Token> _18823_token, jule::Str _18838_fmt) {
	_1a880e711_pushErr((*(_self_))._field_p.ptr(), _18823_token, _18838_fmt, jule::Slice<jule::Any>());
}



inline void _1a87e1ccb_pushSuggestion(_1a87e069d_scopeParser* _self_, jule::Str _19330_fmt, jule::Slice<jule::Any> _19343_args) {
	_1a880ea74_pushSuggestion((*(_self_))._field_p.ptr(), _19330_fmt, _19343_args);
}



inline void _1a87e2084_insertAsNext(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _19733_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1a87ded0c_stmt>(_1a87ded0c_stmt{._field_tokens=(*(_19733_tokens)), ._field_terminated=false});
}



inline jule::Ptr<_1a87ded0c_stmt> _1a87e231a_next(_1a87e069d_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1a7b94e3d_ScopeTree> _1a87e2716_buildScope(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _20731_tokens, jule::Ptr<_1a7b69b05_Token> _20753_end) {
	jule::Ptr<_1a7b94e3d_ScopeTree> _2087_s = _1a87ddab9_newScope();;
	(*(_2087_s))._field_Parent=(*(_self_))._field_s;
	(*_2087_s.alloc)._field_End=_20753_end;
	_1a87e069d_scopeParser _2117_ssp = _1a87e069d_scopeParser{._field_p=(*(_self_))._field_p, ._field_s=jule::Ptr<_1a7b94e3d_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1a87ded0c_stmt>>(nullptr), ._field_pos=0};;
	_1a87ec589_build(&_2117_ssp, _20731_tokens, &(_2087_s));
	return _2087_s;;
}



inline jule::Ptr<_1a7b97c87_VarDecl> _1a87e2a57_buildVarSt(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _21831_tokens) {
	jule::Ptr<_1a7b97c87_VarDecl> _2197_v = _1a88124d3_buildVar((*(_self_))._field_p, (*(_21831_tokens)));;
	if ((_2197_v != nullptr)) {
		(*_2197_v.alloc)._field_Scope=(*(_self_))._field_s;
	};
	return _2197_v;;
}



inline jule::Ptr<_1a7b98161_RetSt> _1a87e2d98_buildRetSt(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _22630_tokens) {
	jule::Ptr<_1a7b98161_RetSt> _2277_st = jule::new_ptr<_1a7b98161_RetSt>(_1a7b98161_RetSt{._field_Token=_22630_tokens[0LL], ._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr)});;
	if ((_22630_tokens.len() > 1LL)) {
		(_22630_tokens).mut_slice(1LL);;
		(*(_2277_st))._field_Expr=_1a880edb5_buildExpr((*(_self_))._field_p, &(_22630_tokens));
	};
	return _2277_st;;
}



inline jule::Ptr<_1a7b988d1_Iter> _1a87e31d9_buildWhileNextIter(_1a87e069d_scopeParser* _self_, jule::Ptr<_1a87ded0c_stmt>* _23739_s) {
	jule::Ptr<_1a7b988d1_Iter> _2387_it = jule::new_ptr<_1a7b988d1_Iter>(_1a7b988d1_Iter{._field_Comptime=false, ._field_Token=(*((*(_23739_s))))._field_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1a7b94e3d_ScopeTree>(nullptr)});;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _2417_tokens = (*((*(_23739_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1a7b9920b_WhileKind> _2427_kind = jule::new_ptr<_1a7b9920b_WhileKind>(_1a7b9920b_WhileKind{._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1a7b69b05_Token>(nullptr)});;
	if ((_2417_tokens.len() > 0LL)) {
		(*_2427_kind.alloc)._field_Expr=_1a880edb5_buildExpr((*(_self_))._field_p, &(_2417_tokens));
	};
	if (_1a87e1605_isLastSt(_self_)) {
		_1a87e1968_pushErr(_self_, (*(_2387_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	_2417_tokens=(*(_1a87e231a_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _2547_stTokens = _1a8808de2_getBlockExpr(&(_2417_tokens));;
	if ((_2547_stTokens.len() > 0LL)) {
		jule::Ptr<_1a87ded0c_stmt> _2568_stmt = jule::new_ptr<_1a87ded0c_stmt>(_1a87ded0c_stmt{._field_tokens=_2547_stTokens, ._field_terminated=(*((*(_23739_s))))._field_terminated});;
		(*_2427_kind.alloc)._field_NextToken=_2547_stTokens[0LL];
		(*_2427_kind.alloc)._field_Next=_1a87ec226_buildSt(_self_, &(_2568_stmt));
	};
	jule::I64 _2647_i = _2547_stTokens.len();;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _2657_blockTokens = _1a880c3ce_range(&(_2647_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_2417_tokens));;
	if ((_2657_blockTokens == nullptr)) {
		_1a87e0d52_stop(_self_);
		_1a87e1968_pushErr(_self_, (*_2387_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1a87e1ccb_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_2647_i < _2417_tokens.len())) {
		_1a87e1968_pushErr(_self_, _2417_tokens[_2647_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_2387_it.alloc)._field_Scope=_1a87e2716_buildScope(_self_, &(_2657_blockTokens), _2417_tokens[(_2647_i - 1LL)]);
	(*_2387_it.alloc)._field_Kind=jule::Any(_2427_kind, &__jule_any_type44);
	return _2387_it;;
}



inline jule::Ptr<_1a7b9920b_WhileKind> _1a87e352a_buildWhileIterKind(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _28239_tokens) {
	return jule::new_ptr<_1a7b9920b_WhileKind>(_1a7b9920b_WhileKind{._field_Expr=_1a880edb5_buildExpr((*(_self_))._field_p, _28239_tokens), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1a7b69b05_Token>(nullptr)});;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _1a87e386b_getRangeKindKeysTokens(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _28843_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _2897_vars;
	jule::Slice<_1d9144ab5_Log> _28913_errs;
	({
		__jule_tuple_ssx_1a7b69b05_Token__jule_tuple_s_1d9144ab5_Log __jule_assign_result = _1a880cb4e_parts(_28843_toks, static_cast<jule::U64>(5LLU), true);
		_2897_vars = __jule_assign_result.__jule_result_arg0;
		_28913_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_28913_errs);
	return _2897_vars;;
}



inline jule::Ptr<_1a7b97c87_VarDecl> _1a87e3bac_buildRangeKindKey(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _29438_tokens) {
	if (((*(_29438_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1a7b97c87_VarDecl> _2987_key = jule::new_ptr<_1a7b97c87_VarDecl>(_1a7b97c87_VarDecl{._field_Scope=jule::Ptr<_1a7b94e3d_ScopeTree>(nullptr), ._field_Token=(*(_29438_tokens))[0LL], ._field_Setter=(*(_29438_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr)});;
	if (((*((*(_2987_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_2987_key.alloc)._field_Mutable=true;
		if (((*(_29438_tokens)).len() == 1LL)) {
			_1a87e1968_pushErr(_self_, (*_2987_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(*_2987_key.alloc)._field_Token=(*(_29438_tokens))[1LL];
	} else if (((*(_29438_tokens)).len() > 1LL)) {
		_1a87e1968_pushErr(_self_, (*(_29438_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	if (((*((*(_2987_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a87e1968_pushErr(_self_, (*_2987_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1a87e1ccb_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_2987_key.alloc)._field_Ident=(*(*(_2987_key))._field_Token.alloc)._field_Kind;
	return _2987_key;;
}



inline jule::Slice<jule::Ptr<_1a7b97c87_VarDecl>> _1a87e3eed_buildRangeKindKeys(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>>* _32039_parts) {
	jule::Slice<jule::Ptr<_1a7b97c87_VarDecl>> _32111_keys = nullptr;;
	{
		auto expr = _32039_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac44bee8:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a7b69b05_Token>> _32215_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1a7b97c87_VarDecl>> &__jule_push_dest = _32111_keys; __jule_push_dest.push(_1a87e3bac_buildRangeKindKey(_self_, &(_32215_tokens))); };
			}
			_iter_next_1ac44bee8:;
			++it;
			goto _iter_begin_1ac44bee8;
		}
		_iter_end_1ac44bee8:;
	};
	return _32111_keys;;
}



inline void _1a87e4361_setupRangeKindKeysPlain(_1a87e069d_scopeParser* _self_, jule::Ptr<_1a7b99b13_RangeKind>* _32844_rng, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _32866_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _3297_keyTokens = _1a87e386b_getRangeKindKeysTokens(_self_, _32866_tokens);;
	if ((_3297_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_3297_keyTokens.len() > 2LL)) {
		_1a87e1968_pushErr(_self_, (*((*(_32844_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range variables can be maximum two", 34)));
	};
	jule::Slice<jule::Ptr<_1a7b97c87_VarDecl>> _3367_keys = _1a87e3eed_buildRangeKindKeys(_self_, &(_3297_keyTokens));;
	(*((*(_32844_rng))))._field_KeyA=_3367_keys[0LL];
	if ((_3367_keys.len() > 1LL)) {
		(*((*(_32844_rng))))._field_KeyB=_3367_keys[1LL];
	};
}



inline void _1a87e46c4_setupRangeKindKeysExplicit(_1a87e069d_scopeParser* _self_, jule::Ptr<_1a7b99b13_RangeKind>* _34347_rng, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _34369_tokens) {
	jule::I64 _3447_i = 0LL;;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _3457_rang = _1a880c3ce_range(&(_3447_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _34369_tokens);;
	if ((_3447_i < (*(_34369_tokens)).len())) {
		_1a87e1968_pushErr(_self_, (*((*(_34347_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	_1a87e4361_setupRangeKindKeysPlain(_self_, _34347_rng, &(_3457_rang));
}



inline void _1a87e4a37_setupRangeKindKeys(_1a87e069d_scopeParser* _self_, jule::Ptr<_1a7b99b13_RangeKind>* _35239_rng, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _35261_tokens) {
	if (((*((*(_35261_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_1a87e46c4_setupRangeKindKeysExplicit(_self_, _35239_rng, _35261_tokens);
		return;;
	};
	_1a87e4361_setupRangeKindKeysPlain(_self_, _35239_rng, _35261_tokens);
}



inline jule::Ptr<_1a7b99b13_RangeKind> _1a87e4edd_buildRangeIterKind(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _36039_var_tokens, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _3618_exprTokens, jule::Ptr<_1a7b69b05_Token>* _36135_inToken) {
	jule::Ptr<_1a7b99b13_RangeKind> _3627_rng = jule::new_ptr<_1a7b99b13_RangeKind>(_1a7b99b13_RangeKind{._field_InToken=(*(_36135_inToken)), ._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_KeyA=jule::Ptr<_1a7b97c87_VarDecl>(nullptr), ._field_KeyB=jule::Ptr<_1a7b97c87_VarDecl>(nullptr)});;
	if (((*(_3618_exprTokens)).len() == 0LL)) {
		_1a87e1968_pushErr(_self_, (*(_3627_rng))._field_InToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return _3627_rng;;
	};
	(*_3627_rng.alloc)._field_Expr=_1a880edb5_buildExpr((*(_self_))._field_p, _3618_exprTokens);
	if (((*(_36039_var_tokens)).len() > 0LL)) {
		_1a87e4a37_setupRangeKindKeys(_self_, &(_3627_rng), _36039_var_tokens);
	};
	return _3627_rng;;
}



inline jule::Any _1a87e53d9_buildCommonIterKind(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _37640_tokens, jule::Ptr<_1a7b69b05_Token>* _37659_err_tok) {
	jule::I64 _3777_braceN = 0LL;;
	{
		auto expr = _37640_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac457ce5:;
		if (it != expr_end) {
			jule::I64 _3788_i = it - expr->begin();
			jule::Ptr<_1a7b69b05_Token> _37815_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37815_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac4586b9:;
						{
							(_3777_braceN)++;
							goto _iter_next_1ac457ce5;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac458aa4:;
						{
							(_3777_braceN)--;
						}
					}
					_match_end_1ac4589a5:;
				};
				if ((_3777_braceN != 0LL)) {
					goto _iter_next_1ac457ce5;
				};
				{
					auto &_match_expr{ (*(_37815_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1ac459b71:;
						{
							jule::Slice<jule::Ptr<_1a7b69b05_Token>> _3959_declTokens = (*(_37640_tokens)).slice(0LL, _3788_i);;
							jule::Slice<jule::Ptr<_1a7b69b05_Token>> _3969_exprTokens = (*(_37640_tokens)).slice((_3788_i + 1LL));;
							return jule::Any(_1a87e4edd_buildRangeIterKind(_self_, &(_3959_declTokens), &(_3969_exprTokens), &(_37815_tok)), &__jule_any_type46);;
						}
					}
					_match_end_1ac45a2d1:;
				};
			}
			_iter_next_1ac457ce5:;
			++it;
			_3788_i++;
			goto _iter_begin_1ac457ce5;
		}
		_iter_end_1ac457ce5:;
	};
	return jule::Any(_1a87e352a_buildWhileIterKind(_self_, _37640_tokens), &__jule_any_type44);;
}



inline jule::Ptr<_1a7b988d1_Iter> _1a87e572a_buildCommonIter(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _40335_tokens) {
	jule::Ptr<_1a7b988d1_Iter> _4047_it = jule::new_ptr<_1a7b988d1_Iter>(_1a7b988d1_Iter{._field_Comptime=false, ._field_Token=_40335_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1a7b94e3d_ScopeTree>(nullptr)});;
	(_40335_tokens).mut_slice(1LL);;
	if ((_40335_tokens.len() == 0LL)) {
		_1a87e0d52_stop(_self_);
		_1a87e1968_pushErr(_self_, (*(_4047_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1a87e1ccb_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _4147_exprTokens = _1a8808de2_getBlockExpr(&(_40335_tokens));;
	if ((_4147_exprTokens.len() > 0LL)) {
		(*_4047_it.alloc)._field_Kind=_1a87e53d9_buildCommonIterKind(_self_, &(_4147_exprTokens), &((*_4047_it.alloc)._field_Token));
	};
	jule::I64 _4187_i = _4147_exprTokens.len();;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _4197_scopeTokens = _1a880c3ce_range(&(_4187_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40335_tokens));;
	if ((_4197_scopeTokens == nullptr)) {
		_1a87e0d52_stop(_self_);
		_1a87e1968_pushErr(_self_, (*_4047_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1a87e1ccb_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_4187_i < _40335_tokens.len())) {
		_1a87e1968_pushErr(_self_, _40335_tokens[_4187_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_4047_it.alloc)._field_Scope=_1a87e2716_buildScope(_self_, &(_4197_scopeTokens), _40335_tokens[(_4187_i - 1LL)]);
	return _4047_it;;
}



inline jule::Ptr<_1a7b988d1_Iter> _1a87e5a6b_buildIterSt(_1a87e069d_scopeParser* _self_, jule::Ptr<_1a87ded0c_stmt>* _43332_st) {
	if ((*((*(_43332_st))))._field_terminated) {
		return _1a87e31d9_buildWhileNextIter(_self_, _43332_st);;
	};
	return _1a87e572a_buildCommonIter(_self_, (*((*(_43332_st))))._field_tokens);;
}



inline jule::Ptr<_1a7b99edc_BreakSt> _1a87e5dac_buildBreakSt(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _44033_tokens) {
	jule::Ptr<_1a7b99edc_BreakSt> _4417_brk = jule::new_ptr<_1a7b99edc_BreakSt>(_1a7b99edc_BreakSt{._field_Token=(*(_44033_tokens))[0LL], ._field_Label=jule::Ptr<_1a7b69b05_Token>(nullptr)});;
	if (((*(_44033_tokens)).len() > 1LL)) {
		if (((*((*(_44033_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1a87e1968_pushErr(_self_, (*(_44033_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1a87e1ccb_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4417_brk))._field_Label=(*(_44033_tokens))[1LL];
			if (((*(_44033_tokens)).len() > 2LL)) {
				_1a87e1968_pushErr(_self_, (*(_44033_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4417_brk;;
}



inline jule::Ptr<_1a7b9a3b6_ContSt> _1a87e61ed_buildContSt(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _45832_tokens) {
	jule::Ptr<_1a7b9a3b6_ContSt> _4597_cont = jule::new_ptr<_1a7b9a3b6_ContSt>(_1a7b9a3b6_ContSt{._field_Token=(*(_45832_tokens))[0LL], ._field_Label=jule::Ptr<_1a7b69b05_Token>(nullptr)});;
	if (((*(_45832_tokens)).len() > 1LL)) {
		if (((*((*(_45832_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1a87e1968_pushErr(_self_, (*(_45832_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1a87e1ccb_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4597_cont))._field_Label=(*(_45832_tokens))[1LL];
			if (((*(_45832_tokens)).len() > 2LL)) {
				_1a87e1968_pushErr(_self_, (*(_45832_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4597_cont;;
}



inline jule::Ptr<_1a7b9a86c_If> _1a87e653e_buildIf(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _47628_tokens) {
	jule::Ptr<_1a7b9a86c_If> _4777_model = jule::new_ptr<_1a7b9a86c_If>(_1a7b9a86c_If{._field_Token=(*(_47628_tokens))[0LL], ._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Scope=jule::Ptr<_1a7b94e3d_ScopeTree>(nullptr)});;
	((*(_47628_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _4817_exprTokens = _1a8808de2_getBlockExpr(_47628_tokens);;
	jule::I64 _4827_i = 0LL;;
	if ((_4817_exprTokens.len() == 0LL)) {
		_1a87e1968_pushErr(_self_, (*(_4777_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	} else {
		_4827_i=_4817_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _4887_scopeTokens = _1a880c3ce_range(&(_4827_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47628_tokens);;
	if ((_4887_scopeTokens == nullptr)) {
		_1a87e0d52_stop(_self_);
		_1a87e1968_pushErr(_self_, (*(_4777_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1a87e1ccb_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7b69b05_Token> _4957_end = (*(_47628_tokens))[(_4827_i - 1LL)];;
	if ((_4827_i < (*(_47628_tokens)).len())) {
		if (((*((*(_47628_tokens))[_4827_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_47628_tokens))).mut_slice(_4827_i);;
		} else {
			_1a87e1968_pushErr(_self_, (*(_47628_tokens))[_4827_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			(*(_47628_tokens))=nullptr;
		};
	};
	(*_4777_model.alloc)._field_Expr=_1a880edb5_buildExpr((*(_self_))._field_p, &(_4817_exprTokens));
	(*_4777_model.alloc)._field_Scope=_1a87e2716_buildScope(_self_, &(_4887_scopeTokens), _4957_end);
	return _4777_model;;
}



inline jule::Ptr<_1a7b9ac46_Else> _1a87e6880_buildElse(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _50930_tokens) {
	jule::Ptr<_1a7b9ac46_Else> _5107_els = jule::new_ptr<_1a7b9ac46_Else>(_1a7b9ac46_Else{._field_Token=(*(_50930_tokens))[0LL], ._field_Scope=jule::Ptr<_1a7b94e3d_ScopeTree>(nullptr)});;
	((*(_50930_tokens))).mut_slice(1LL);;
	jule::I64 _5147_i = 0LL;;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _5157_scopeTokens = _1a880c3ce_range(&(_5147_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _50930_tokens);;
	if ((_5157_scopeTokens == nullptr)) {
		if ((_5147_i < (*(_50930_tokens)).len())) {
			_1a87e1968_pushErr(_self_, (*(_5107_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("else's cannot have any expression", 33)));
		} else {
			_1a87e0d52_stop(_self_);
			_1a87e1968_pushErr(_self_, (*(_5107_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
			_1a87e1ccb_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_5147_i < (*(_50930_tokens)).len())) {
		_1a87e1968_pushErr(_self_, (*(_50930_tokens))[_5147_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_5107_els))._field_Scope=_1a87e2716_buildScope(_self_, &(_5157_scopeTokens), (*(_50930_tokens))[(_5147_i - 1LL)]);
	return _5107_els;;
}



inline jule::Ptr<_1a7b9b1ec_Conditional> _1a87e6bc1_buildIfElseChain(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _53336_tokens) {
	jule::Ptr<_1a7b9b1ec_Conditional> _5347_chain = jule::new_ptr<_1a7b9b1ec_Conditional>(_1a7b9b1ec_Conditional{._field_Head=_1a87e653e_buildIf(_self_, &(_53336_tokens)), ._field_Tail=jule::Slice<jule::Ptr<_1a7b9a86c_If>>(nullptr), ._field_Default=jule::Ptr<_1a7b9ac46_Else>(nullptr)});;
	if (((*(_5347_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53336_tokens.len() != 0LL)) {
		{
			if (((*(_53336_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1ac476a17;
			};
			if (((_53336_tokens.len() > 1LL) && ((*(_53336_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_53336_tokens).mut_slice(1LL);;
				jule::Ptr<_1a7b9a86c_If> _5469_elif = _1a87e653e_buildIf(_self_, &(_53336_tokens));;
				(*_5347_chain.alloc)._field_Tail=jule::append((*_5347_chain.alloc)._field_Tail,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b9a86c_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5469_elif; __jule_collection; }));
				goto _iter_next_1ac476a17;
			};
			(*_5347_chain.alloc)._field_Default=_1a87e6880_buildElse(_self_, &(_53336_tokens));
			goto _iter_end_1ac476a17;
		}
	_iter_next_1ac476a17:;
	}
	_iter_end_1ac476a17:;;
	return _5347_chain;;
}



inline jule::Ptr<_1a7b89251_Expr> _1a87e7012_buildCoCallSt(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _55633_tokens) {
	jule::Ptr<_1a7b69b05_Token> _5573_token = _55633_tokens[0LL];;
	(_55633_tokens).mut_slice(1LL);;
	jule::Ptr<_1a7b89251_Expr> _5597_e = _1a880edb5_buildExpr((*(_self_))._field_p, &(_55633_tokens));;
	if ((_5597_e == nullptr)) {
		return _5597_e;;
	};
	{
		auto &_match_expr{ (*(_5597_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ac47ab09:;
			{
				(*((*(_5597_e))._field_Kind.unsafe_cast_ptr<_1a7b8ce7a_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1ac47b1d1:;
			{
				_1a87e1968_pushErr(_self_, _5573_token, static_cast<jule::Str>(jule::Str::lit("statement must have function call expression", 44)));
			}
		}
		_match_end_1ac47b16a:;
	};
	return _5597_e;;
}



inline jule::Ptr<_1a7b928ca_GotoSt> _1a87e7353_buildGotoSt(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _57232_tokens) {
	jule::Ptr<_1a7b928ca_GotoSt> _5737_gt = jule::new_ptr<_1a7b928ca_GotoSt>(_1a7b928ca_GotoSt{._field_Token=(*(_57232_tokens))[0LL], ._field_Label=jule::Ptr<_1a7b69b05_Token>(nullptr)});;
	if (((*(_57232_tokens)).len() == 1LL)) {
		_1a87e1968_pushErr(_self_, (*(_5737_gt))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing label identifier for goto statement", 43)));
		return nullptr;;
	} else if (((*(_57232_tokens)).len() > 2LL)) {
		_1a87e1968_pushErr(_self_, (*(_57232_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1a7b69b05_Token> _5827_identToken = (*(_57232_tokens))[1LL];;
	if (((*(_5827_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a87e1968_pushErr(_self_, _5827_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1a87e1ccb_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return _5737_gt;;
	};
	(*(_5737_gt))._field_Label=_5827_identToken;
	return _5737_gt;;
}



inline jule::Ptr<_1a7b92bc7_FallSt> _1a87e7694_buildFallSt(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _59232_tokens) {
	jule::Ptr<_1a7b92bc7_FallSt> _5937_fll = jule::new_ptr<_1a7b92bc7_FallSt>(_1a7b92bc7_FallSt{._field_Token=(*(_59232_tokens))[0LL]});;
	if (((*(_59232_tokens)).len() > 1LL)) {
		_1a87e1968_pushErr(_self_, (*(_59232_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return _5937_fll;;
}



inline jule::Ptr<_1a7b9b939_TypeAliasDecl> _1a87e79d5_buildTypeAliasSt(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _60237_tokens) {
	jule::Ptr<_1a7b9b939_TypeAliasDecl> _6037_tad = _1a8811658_buildTypeAliasDecl((*(_self_))._field_p, _60237_tokens);;
	(*(_6037_tad))._field_Scope=(*(_self_))._field_s;
	return _6037_tad;;
}



inline void _1a87e7ead_pushCaseExpr(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _60832_tokens, jule::Ptr<_1a7b69b05_Token> _60854_token, jule::Bool _6093_typeMatch, jule::Slice<jule::Ptr<_1a7b89251_Expr>>* _60925_exprs) {
	if ((_60832_tokens.len() == 0LL)) {
		return;;
	};
	if (_6093_typeMatch) {
		jule::I64 _6148_i = 0LL;;
		jule::Ptr<_1a7b800b0_TypeDecl> _6158_t;
		jule::Bool _61511_ok;
		({
			__jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8811317_buildType((*(_self_))._field_p, &(_60832_tokens), (&(_6148_i)), true);
			_6158_t = __jule_assign_result.__jule_result_arg0;
			_61511_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61511_ok) {
			{ jule::Slice<jule::Ptr<_1a7b89251_Expr>> &__jule_push_dest = (*(_60925_exprs)); __jule_push_dest.push(jule::new_ptr<_1a7b89251_Expr>(_1a7b89251_Expr{._field_Token=_60832_tokens[0LL], ._field_End=_60832_tokens[(_60832_tokens.len() - 1LL)], ._field_Kind=jule::Any(_6158_t, &__jule_any_type92)})); };
			if ((_6148_i < _60832_tokens.len())) {
				_1a87e1968_pushErr(_self_, _60832_tokens[_6148_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1a7b89251_Expr>> &__jule_push_dest = (*(_60925_exprs)); __jule_push_dest.push(_1a880edb5_buildExpr((*(_self_))._field_p, &(_60832_tokens))); };
}



inline __jule_tuple_sx_1a7b89251_Expr__jule_tuple_bool _1a87e8464_buildCaseExprs(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _63135_tokens, jule::Ptr<_1a7b69b05_Token>* _63158_colon, jule::Bool _63173_typeMatch) {
	__jule_tuple_sx_1a7b89251_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1a7b89251_Expr>> _6327_exprs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b89251_Expr>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b89251_Expr>(nullptr); __jule_collection; });;
	jule::I64 _6337_braceN = 0LL;;
	jule::I64 _6347_j = 0LL;;
	{
		auto expr = _63135_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac487a8e:;
		if (it != expr_end) {
			jule::I64 _6358_i = it - expr->begin();
			jule::Ptr<_1a7b69b05_Token> _63515_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63515_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1ac4892ee:;
						{
							(_6337_braceN)++;
							goto _iter_next_1ac487a8e;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1ac4896d9:;
						{
							(_6337_braceN)--;
							goto _iter_next_1ac487a8e;
						}
					}
					_match_end_1ac4895da:;
				};
				if ((_6337_braceN != 0LL)) {
					goto _iter_next_1ac487a8e;
				};
				{
					
					if (((*(_63515_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1ac48ada0:;
						{
							jule::Slice<jule::Ptr<_1a7b69b05_Token>> _6545_exprTokens = (*(_63135_tokens)).slice(_6347_j, _6358_i);;
							if ((_6545_exprTokens.len() == 0LL)) {
								_1a87e1968_pushErr(_self_, _63515_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
							} else {
								_1a87e7ead_pushCaseExpr(_self_, (*(_63135_tokens)).slice(_6347_j, _6358_i), _63515_tok, _63173_typeMatch, &(_6327_exprs));
							};
							_6347_j=(_6358_i + 1LL);
						}
					}
					else if (((*(_63515_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1ac48ae16:;
						{
							(*(_63158_colon))=_63515_tok;
							_1a87e7ead_pushCaseExpr(_self_, (*(_63135_tokens)).slice(_6347_j, _6358_i), _63515_tok, _63173_typeMatch, &(_6327_exprs));
							((*(_63135_tokens))).mut_slice((_6358_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _6327_exprs;
							__jule_func_result.__jule_result_arg1 = (((_6358_i - _6347_j) == 0LL) || (_6327_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1ac48a8a5:;
				};
			}
			_iter_next_1ac487a8e:;
			++it;
			_6358_i++;
			goto _iter_begin_1ac487a8e;
		}
		_iter_end_1ac487a8e:;
	};
	_1a87e1968_pushErr(_self_, (*(_63135_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	(*(_63135_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1a7b94e3d_ScopeTree> _1a87e87a5_buildCaseScope(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _67335_tokens) {
	jule::I64 _6747_n = 0LL;;
	for (;;) {
		{
			jule::I64 _6768_i = 0LL;;
			jule::Slice<jule::Ptr<_1a7b69b05_Token>> _6778_next;
			({
				__jule_tuple_sx_1a7b69b05_Token__jule_tuple_bool __jule_assign_result = _1a87de9cc_skipSt(&(_6768_i), (*(_67335_tokens)).slice(_6747_n));
				_6778_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_6778_next.len() == 0LL)) {
				goto _iter_end_1ac48eb95;
			};
			jule::Ptr<_1a7b69b05_Token> _6814_tok = _6778_next[0LL];;
			if (((*(_6814_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_6747_n+=_6768_i;
				goto _iter_next_1ac48eb95;
			};
			jule::Slice<jule::Ptr<_1a7b69b05_Token>> _6868_scopeTokens = (*(_67335_tokens)).slice(0LL, _6747_n);;
			jule::Ptr<_1a7b94e3d_ScopeTree> _6878_scope = _1a87e2716_buildScope(_self_, &(_6868_scopeTokens), (*(_67335_tokens))[_6747_n]);;
			((*(_67335_tokens))).mut_slice(_6747_n);;
			return _6878_scope;;
		}
	_iter_next_1ac48eb95:;
	}
	_iter_end_1ac48eb95:;;
	jule::Ptr<_1a7b69b05_Token> _69111_end;;
	if (((*(_67335_tokens)).len() > 0LL)) {
		_69111_end=(*(_67335_tokens))[((*(_67335_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1a7b94e3d_ScopeTree> _6957_scope = _1a87e2716_buildScope(_self_, _67335_tokens, _69111_end);;
	(*(_67335_tokens))=nullptr;
	return _6957_scope;;
}



inline __jule_tuple_x_1a7b9bde0_Case__jule_tuple_bool _1a87e8ba1_buildCase(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _70030_tokens, jule::Bool _70048_typeMatch) {
	__jule_tuple_x_1a7b9bde0_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a7b9bde0_Case> _7017_c = jule::new_ptr<_1a7b9bde0_Case>(_1a7b9bde0_Case{._field_Token=(*(_70030_tokens))[0LL], ._field_Scope=jule::Ptr<_1a7b94e3d_ScopeTree>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1a7b89251_Expr>>(nullptr)});;
	((*(_70030_tokens))).mut_slice(1LL);;
	jule::Ptr<_1a7b69b05_Token> _70511_colon = nullptr;;
	if (((*(_70030_tokens)).len() == 0LL)) {
		_1a87e1968_pushErr(_self_, (*(_7017_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Bool _71012_ok;
	({
		__jule_tuple_sx_1a7b89251_Expr__jule_tuple_bool __jule_assign_result = _1a87e8464_buildCaseExprs(_self_, _70030_tokens, &(_70511_colon), _70048_typeMatch);
		(*_7017_c.alloc)._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_71012_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*_7017_c.alloc)._field_Scope=_1a87e87a5_buildCaseScope(_self_, _70030_tokens);
	if (((*((*_7017_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*(_7017_c))._field_Scope.alloc)._field_End=_70511_colon;
	};
	jule::Bool _7153_isDefault = (_71012_ok && ((*_7017_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _7017_c;
	__jule_func_result.__jule_result_arg1 = _7153_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1a7b9bde0_Case__jule_tuple_x_1a7b9ac46_Else _1a87e909c_buildCases(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _71930_tokens, jule::Bool _71948_typeMatch) {
	__jule_tuple_sx_1a7b9bde0_Case__jule_tuple_x_1a7b9ac46_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1a7b9bde0_Case>> _72011_cases = nullptr;;
	jule::Ptr<_1a7b9ac46_Else> _72111_def = nullptr;;
	jule::Bool _7227_defNotLast = false;;
	while ((_71930_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1a7b69b05_Token> _7248_tok = _71930_tokens[0LL];;
			if (((*(_7248_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_1a87e1968_pushErr(_self_, _7248_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				goto _iter_end_1ac4990ab;
			};
			jule::Ptr<_1a7b9bde0_Case> _7298_c;
			jule::Bool _72911_isDefault;
			({
				__jule_tuple_x_1a7b9bde0_Case__jule_tuple_bool __jule_assign_result = _1a87e8ba1_buildCase(_self_, &(_71930_tokens), _71948_typeMatch);
				_7298_c = __jule_assign_result.__jule_result_arg0;
				_72911_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72911_isDefault) {
				(*(_7298_c))._field_Token=_7248_tok;
				if ((_72111_def == nullptr)) {
					_72111_def=jule::new_ptr<_1a7b9ac46_Else>(_1a7b9ac46_Else{._field_Token=(*_7298_c.alloc)._field_Token, ._field_Scope=(*_7298_c.alloc)._field_Scope});
				} else {
					_1a87e1968_pushErr(_self_, _7248_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
			} else {
				_7227_defNotLast=(_7227_defNotLast || (_72111_def != nullptr));
				{ jule::Slice<jule::Ptr<_1a7b9bde0_Case>> &__jule_push_dest = _72011_cases; __jule_push_dest.push(_7298_c); };
			};
		}
	_iter_next_1ac4990ab:;
	}
	_iter_end_1ac4990ab:;;
	if (_7227_defNotLast) {
		_1a87e1968_pushErr(_self_, (*(_72111_def))._field_Token, static_cast<jule::Str>(jule::Str::lit("default case should be last case", 32)));
	};
	__jule_func_result.__jule_result_arg0 = _72011_cases;
	__jule_func_result.__jule_result_arg1 = _72111_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1a7b9c709_MatchCase> _1a87e93dd_buildMatchCase(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _75334_tokens) {
	jule::Ptr<_1a7b9c709_MatchCase> _7547_m = jule::new_ptr<_1a7b9c709_MatchCase>(_1a7b9c709_MatchCase{._field_Comptime=false, ._field_Token=_75334_tokens[0LL], ._field_End=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_TypeMatch=false, ._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Cases=jule::Slice<jule::Ptr<_1a7b9bde0_Case>>(nullptr), ._field_Default=jule::Ptr<_1a7b9ac46_Else>(nullptr)});;
	(_75334_tokens).mut_slice(1LL);;
	if (((_75334_tokens.len() > 0LL) && ((*(_75334_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_7547_m))._field_TypeMatch=true;
		(_75334_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _7647_exprTokens = _1a8808de2_getBlockExpr(&(_75334_tokens));;
	if ((_7647_exprTokens.len() > 0LL)) {
		(*_7547_m.alloc)._field_Expr=_1a880edb5_buildExpr((*(_self_))._field_p, &(_7647_exprTokens));
	} else if ((*_7547_m.alloc)._field_TypeMatch) {
		_1a87e1968_pushErr(_self_, (*_7547_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	};
	jule::I64 _7717_i = _7647_exprTokens.len();;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _7727_blockToks = _1a880c3ce_range(&(_7717_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_75334_tokens));;
	if ((_7727_blockToks == nullptr)) {
		_1a87e0d52_stop(_self_);
		_1a87e1968_pushErr(_self_, (*_7547_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1a87e1ccb_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_7717_i < _75334_tokens.len())) {
		_1a87e1968_pushErr(_self_, _75334_tokens[_7717_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_7547_m.alloc)._field_End=_75334_tokens[(_7717_i - 1LL)];
	({
		__jule_tuple_sx_1a7b9bde0_Case__jule_tuple_x_1a7b9ac46_Else __jule_assign_result = _1a87e909c_buildCases(_self_, _7727_blockToks, (*_7547_m.alloc)._field_TypeMatch);
		(*_7547_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_7547_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _7547_m;;
}



inline jule::Ptr<_1a7b94e3d_ScopeTree> _1a87e972e_buildScopeSt(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _78632_tokens) {
	jule::Bool _7877_isUnsafe = false;;
	jule::Bool _7887_isDeferred = false;;
	jule::Ptr<_1a7b69b05_Token> _7897_token = _78632_tokens[0LL];;
	if (((*(_7897_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_7877_isUnsafe=true;
		(_78632_tokens).mut_slice(1LL);;
		if ((_78632_tokens.len() == 0LL)) {
			_1a87e1968_pushErr(_self_, _7897_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
		_7897_token=_78632_tokens[0LL];
		if (((*_7897_token.alloc)._field_Id == static_cast<jule::U64>(33LLU))) {
			_7887_isDeferred=true;
			(_78632_tokens).mut_slice(1LL);;
			if ((_78632_tokens.len() == 0LL)) {
				_1a87e1968_pushErr(_self_, _7897_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				return nullptr;;
			};
		};
	} else if (((*(_7897_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_7887_isDeferred=true;
		(_78632_tokens).mut_slice(1LL);;
		if ((_78632_tokens.len() == 0LL)) {
			_1a87e1968_pushErr(_self_, _7897_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
	};
	jule::I64 _8157_i = 0LL;;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _8167_scopeTokens = _1a880c3ce_range(&(_8157_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_78632_tokens));;
	if ((_8167_scopeTokens == nullptr)) {
		_1a87e1968_pushErr(_self_, _7897_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	} else if ((_8157_i < _78632_tokens.len())) {
		_1a87e1968_pushErr(_self_, _78632_tokens[_8157_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1a7b94e3d_ScopeTree> _8237_scope = _1a87e2716_buildScope(_self_, &(_8167_scopeTokens), _78632_tokens[(_8157_i - 1LL)]);;
	(*(_8237_scope))._field_Unsafety=_7877_isUnsafe;
	(*_8237_scope.alloc)._field_Deferred=_7887_isDeferred;
	return _8237_scope;;
}



inline jule::Ptr<_1a7b92501_LabelSt> _1a87e9a70_buildLabelSt(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _82933_tokens) {
	jule::Ptr<_1a7b92501_LabelSt> _8307_lbl = jule::new_ptr<_1a7b92501_LabelSt>(_1a7b92501_LabelSt{._field_Token=(*(_82933_tokens))[0LL], ._field_Ident=(*((*(_82933_tokens))[0LL]))._field_Kind});;
	if (((*(_82933_tokens)).len() > 2LL)) {
		((*(_82933_tokens))).mut_slice(2LL);;
		_1a87e2084_insertAsNext(_self_, _82933_tokens);
	};
	return _8307_lbl;;
}



inline __jule_tuple__1a7b9457a_StmtData__jule_tuple_bool _1a87e9db1_buildIdSt(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _84430_tokens) {
	__jule_tuple__1a7b9457a_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84430_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1a7b69b05_Token> _8497_token = (*(_84430_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_8497_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1ac4b0b72:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1a87e9a70_buildLabelSt(_self_, _84430_tokens), &__jule_any_type64);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ac4b13d1:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a880a82d_assignInfo> _1a87ea202_buildAssignInfo(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _85836_tokens) {
	jule::Ptr<_1a880a82d_assignInfo> _8597_info = jule::new_ptr<_1a880a82d_assignInfo>(_1a880a82d_assignInfo{._field_l=jule::Slice<jule::Ptr<_1a7b69b05_Token>>(nullptr), ._field_r=jule::Slice<jule::Ptr<_1a7b69b05_Token>>(nullptr), ._field_setter=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_ok=true});;
	jule::I64 _8627_braceN = 0LL;;
	{
		auto expr = _85836_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4b2ba7:;
		if (it != expr_end) {
			jule::I64 _8638_i = it - expr->begin();
			jule::Ptr<_1a7b69b05_Token> _86315_token = *it;
			{
				{
					auto &_match_expr{ (*(_86315_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac4b35e2:;
						{
							(_8627_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac4b3977:;
						{
							(_8627_braceN)--;
						}
					}
					_match_end_1ac4b3878:;
				};
				{
					
					if ((_8627_braceN > 0LL)) {
						_case_begin_1ac4b4acc:;
						{
							goto _iter_next_1ac4b2ba7;
						}
					}
					else if (((!(_1a7b6e951_IsAssignOp((*(_86315_token))._field_Id))) && ((*_86315_token.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1ac4b4b43:;
						{
							goto _iter_next_1ac4b2ba7;
						}
					}
					_match_end_1ac4b4a33:;
				};
				(*(_8597_info))._field_l=(*(_85836_tokens)).slice(0LL, _8638_i);
				if (((*_8597_info.alloc)._field_l.len() == 0LL)) {
					(*_8597_info.alloc)._field_ok=false;
				};
				(*_8597_info.alloc)._field_setter=_86315_token;
				if (((_8638_i + 1LL) >= (*(_85836_tokens)).len())) {
					(*_8597_info.alloc)._field_r=nullptr;
					(*_8597_info.alloc)._field_ok=_1a7b6e687_IsPostfixOp((*((*_8597_info.alloc)._field_setter))._field_Id);
					goto _iter_end_1ac4b2ba7;
				};
				(*_8597_info.alloc)._field_r=(*(_85836_tokens)).slice((_8638_i + 1LL));
				if (_1a7b6e687_IsPostfixOp((*(*(_8597_info))._field_setter.alloc)._field_Id)) {
					if (((*_8597_info.alloc)._field_r.len() > 0LL)) {
						_1a87e1968_pushErr(_self_, (*(_8597_info))._field_r[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						(*_8597_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_1ac4b2ba7;
			}
			_iter_next_1ac4b2ba7:;
			++it;
			_8638_i++;
			goto _iter_begin_1ac4b2ba7;
		}
		_iter_end_1ac4b2ba7:;
	};
	return _8597_info;;
}



inline jule::Ptr<_1a7b93337_AssignLeft> _1a87ea543_buildAssignL(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _90333_tokens) {
	jule::Ptr<_1a7b93337_AssignLeft> _9047_l = jule::new_ptr<_1a7b93337_AssignLeft>(_1a7b93337_AssignLeft{._field_Token=(*(_90333_tokens))[0LL], ._field_Mutable=false, ._field_Reference=false, ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr)});;
	if (((*((*(_90333_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_9047_l))._field_Ident=(*((*_9047_l.alloc)._field_Token))._field_Kind;
	};
	(*_9047_l.alloc)._field_Expr=_1a880edb5_buildExpr((*(_self_))._field_p, _90333_tokens);
	return _9047_l;;
}



inline jule::Slice<jule::Ptr<_1a7b93337_AssignLeft>> _1a87ea884_buildAssignLs(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>>* _91434_parts) {
	jule::Slice<jule::Ptr<_1a7b93337_AssignLeft>> _91511_lefts = nullptr;;
	{
		auto expr = _91434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4bbee1:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a7b69b05_Token>> _91615_part = *it;
			{
				jule::Ptr<_1a7b93337_AssignLeft> _9178_l = _1a87ea543_buildAssignL(_self_, &(_91615_part));;
				{ jule::Slice<jule::Ptr<_1a7b93337_AssignLeft>> &__jule_push_dest = _91511_lefts; __jule_push_dest.push(_9178_l); };
			}
			_iter_next_1ac4bbee1:;
			++it;
			goto _iter_begin_1ac4bbee1;
		}
		_iter_end_1ac4bbee1:;
	};
	return _91511_lefts;;
}



inline __jule_tuple__1a7b9457a_StmtData__jule_tuple_bool _1a87eabc5_buildPlainAssign(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _92337_tokens) {
	__jule_tuple__1a7b9457a_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a880a82d_assignInfo> _9247_info = _1a87ea202_buildAssignInfo(_self_, _92337_tokens);;
	if ((!((*(_9247_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7b938ba_AssignSt> _9297_assign = jule::new_ptr<_1a7b938ba_AssignSt>(_1a7b938ba_AssignSt{._field_Declarative=false, ._field_Setter=(*_9247_info.alloc)._field_setter, ._field_Left=jule::Slice<jule::Ptr<_1a7b93337_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1a7b89251_Expr>(nullptr)});;
	if (((*((*_9247_info.alloc)._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_9297_assign))._field_Declarative=true;
		(*_9297_assign.alloc)._field_Right=_1a880edb5_buildExpr((*(_self_))._field_p, &((*_9247_info.alloc)._field_r));
		jule::Bool _9374_ok = _1a87eb0c1_buildDeclAssign1(_self_, &((*_9247_info.alloc)._field_l), &(_9297_assign));;
		if ((!(_9374_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*_9297_assign.alloc)._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_9297_assign, &__jule_any_type66);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1a7b93337_AssignLeft> _9468_left = (*(_9297_assign))._field_Left[0LL];;
		jule::Ptr<_1a7b97c87_VarDecl> _9478_decl = jule::new_ptr<_1a7b97c87_VarDecl>(_1a7b97c87_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_9468_left))._field_Token, ._field_Setter=(*_9297_assign.alloc)._field_Setter, ._field_Ident=(*_9468_left.alloc)._field_Ident, ._field_Binded=false, ._field_Public=false, ._field_Mutable=(*_9468_left.alloc)._field_Mutable, ._field_Constant=false, ._field_Statically=false, ._field_Reference=(*_9468_left.alloc)._field_Reference, ._field_Directives=jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Expr=(*_9297_assign.alloc)._field_Right});;
		__jule_func_result.__jule_result_arg0 = jule::Any(_9478_decl, &__jule_any_type16);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _9597_parts;
	jule::Slice<_1d9144ab5_Log> _95914_errs;
	({
		__jule_tuple_ssx_1a7b69b05_Token__jule_tuple_s_1d9144ab5_Log __jule_assign_result = _1a880cb4e_parts(&((*_9247_info.alloc)._field_l), static_cast<jule::U64>(5LLU), true);
		_9597_parts = __jule_assign_result.__jule_result_arg0;
		_95914_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95914_errs.len() > 0LL)) {
		(*(*(_self_))._field_p.alloc)._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_95914_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*_9297_assign.alloc)._field_Left=_1a87ea884_buildAssignLs(_self_, &(_9597_parts));
	if (((*_9247_info.alloc)._field_r != nullptr)) {
		(*_9297_assign.alloc)._field_Right=_1a880edb5_buildExpr((*(_self_))._field_p, &((*_9247_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_9297_assign, &__jule_any_type66);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1a87eb0c1_buildDeclAssign1(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _97337_lefts, jule::Ptr<_1a7b938ba_AssignSt>* _97359_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _9757_parts;
	jule::Slice<_1d9144ab5_Log> _97514_errs;
	({
		__jule_tuple_ssx_1a7b69b05_Token__jule_tuple_s_1d9144ab5_Log __jule_assign_result = _1a880cb4e_parts(_97337_lefts, static_cast<jule::U64>(5LLU), true);
		_9757_parts = __jule_assign_result.__jule_result_arg0;
		_97514_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97514_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_97514_errs);
		return false;;
	};
	{
		auto expr = &(_9757_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4c86a1:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a7b69b05_Token>> _98115_part = *it;
			{
				jule::Bool _9828_isMut = false;;
				jule::Bool _9838_isRef = false;;
				jule::Ptr<_1a7b69b05_Token> _9854_token = _98115_part[0LL];;
				if (((*(_9854_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_9828_isMut=true;
					(_98115_part).mut_slice(1LL);;
					if ((_98115_part.len() == 0LL)) {
						_1a87e1968_pushErr(_self_, _9854_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if (((*(_98115_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_9838_isRef=true;
					(_98115_part).mut_slice(1LL);;
					if ((_98115_part.len() == 0LL)) {
						_1a87e1968_pushErr(_self_, _9854_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if ((((*(_98115_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_98115_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1a87e1968_pushErr(_self_, _9854_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
					return false;;
				};
				jule::Ptr<_1a7b93337_AssignLeft> _10098_l = _1a87ea543_buildAssignL(_self_, &(_98115_part));;
				(*(_10098_l))._field_Mutable=_9828_isMut;
				(*_10098_l.alloc)._field_Reference=_9838_isRef;
				{ jule::Slice<jule::Ptr<_1a7b93337_AssignLeft>> &__jule_push_dest = (*((*(_97359_assign))))._field_Left; __jule_push_dest.push(_10098_l); };
			}
			_iter_next_1ac4c86a1:;
			++it;
			goto _iter_begin_1ac4c86a1;
		}
		_iter_end_1ac4c86a1:;
	};
	return true;;
}



inline __jule_tuple_x_1a7b938ba_AssignSt__jule_tuple_bool _1a87eb412_buildDeclAssign(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _101835_tokens) {
	__jule_tuple_x_1a7b938ba_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_101835_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_101835_tokens).mut_slice(1LL);;
	jule::Ptr<_1a7b69b05_Token> _10247_token = _101835_tokens[0LL];;
	if (((*(_10247_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7b938ba_AssignSt> _10297_assign = jule::new_ptr<_1a7b938ba_AssignSt>(_1a7b938ba_AssignSt{._field_Declarative=true, ._field_Setter=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1a7b93337_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1a7b89251_Expr>(nullptr)});;
	jule::I64 _10337_i = 0LL;;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _10347_rang = _1a880c3ce_range(&(_10337_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_101835_tokens));;
	if ((_10347_rang == nullptr)) {
		_1a87e1968_pushErr(_self_, _10247_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_10337_i + 1LL) < _101835_tokens.len())) {
		(*(_10297_assign))._field_Setter=_101835_tokens[_10337_i];
		if (((*((*_10297_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1a87e1968_pushErr(_self_, (*_10297_assign.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(_10337_i)++;
		jule::Slice<jule::Ptr<_1a7b69b05_Token>> _10448_exprTokens = _101835_tokens.slice(_10337_i);;
		(*_10297_assign.alloc)._field_Right=_1a880edb5_buildExpr((*(_self_))._field_p, &(_10448_exprTokens));
	};
	jule::Bool _10483_ok = _1a87eb0c1_buildDeclAssign1(_self_, &(_10347_rang), &(_10297_assign));;
	__jule_func_result.__jule_result_arg0 = _10297_assign;
	__jule_func_result.__jule_result_arg1 = _10483_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1a7b9457a_StmtData__jule_tuple_bool _1a87eb753_buildAssignSt(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _105234_tokens) {
	__jule_tuple__1a7b9457a_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1a880abd5_checkAssignTokens(_105234_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_105234_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1ac4d8e0e:;
			{
				({
					__jule_tuple_x_1a7b938ba_AssignSt__jule_tuple_bool __jule_assign_result = _1a87eb412_buildDeclAssign(_self_, (*(_105234_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type66);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1ac4d8084:;
			{
				({
					__jule_tuple__1a7b9457a_StmtData__jule_tuple_bool __jule_assign_result = _1a87eabc5_buildPlainAssign(_self_, _105234_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1ac4d84e6:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a7b89b25_UseExpr> _1a87eba94_buildUseExpr(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _106533_tokens) {
	if (((*(_106533_tokens)).len() == 1LL)) {
		_1a87e1968_pushErr(_self_, (*(_106533_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return nullptr;;
	};
	jule::Ptr<_1a7b89b25_UseExpr> _10707_ue = jule::new_ptr<_1a7b89b25_UseExpr>(_1a7b89b25_UseExpr{._field_Token=(*(_106533_tokens))[0LL], ._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr)});;
	((*(_106533_tokens))).mut_slice(1LL);;
	(*(_10707_ue))._field_Expr=_1a880edb5_buildExpr((*(_self_))._field_p, _106533_tokens);
	return _10707_ue;;
}



inline jule::Any _1a87ebdd5_buildConstSt(_1a87e069d_scopeParser* _self_, jule::Ptr<_1a87ded0c_stmt>* _107833_st) {
	if (((*((*(_107833_st))))._field_tokens.len() == 1LL)) {
		_1a87e1968_pushErr(_self_, (*((*(_107833_st))))._field_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_107833_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1ac4dd52e:;
			{
				((*((*(_107833_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1a7b988d1_Iter> _10868_iter = _1a87e5a6b_buildIterSt(_self_, _107833_st);;
				if ((_10868_iter != nullptr)) {
					(*_10868_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_10868_iter, &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1ac4dd320:;
			{
				((*((*(_107833_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1a7b9c709_MatchCase> _10938_mt = _1a87e93dd_buildMatchCase(_self_, (*((*(_107833_st))))._field_tokens);;
				if ((_10938_mt != nullptr)) {
					(*_10938_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_10938_mt, &__jule_any_type67);;
			}
		}
		else {
			_case_begin_1ac4dc62c:;
			{
				return jule::Any(_1a87e2a57_buildVarSt(_self_, &((*((*(_107833_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		_match_end_1ac4dcd69:;
	};
}



inline jule::Any _1a87ec226_buildSt(_1a87e069d_scopeParser* _self_, jule::Ptr<_1a87ded0c_stmt>* _110328_st) {
	jule::Ptr<_1a7b69b05_Token> _11047_token = (*((*(_110328_st))))._field_tokens[0LL];;
	if (((*(_11047_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _11068_s;
		jule::Bool _110611_ok;
		({
			__jule_tuple__1a7b9457a_StmtData__jule_tuple_bool __jule_assign_result = _1a87e9db1_buildIdSt(_self_, &((*((*(_110328_st))))._field_tokens));
			_11068_s = __jule_assign_result.__jule_result_arg0;
			_110611_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_110611_ok) {
			return _11068_s;;
		};
	};
	jule::Any _11127_s;
	jule::Bool _111210_ok;
	({
		__jule_tuple__1a7b9457a_StmtData__jule_tuple_bool __jule_assign_result = _1a87eb753_buildAssignSt(_self_, &((*((*(_110328_st))))._field_tokens));
		_11127_s = __jule_assign_result.__jule_result_arg0;
		_111210_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_111210_ok) {
		return _11127_s;;
	};
	{
		auto &_match_expr{ (*(_11047_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1ac4e4458:;
			{
				return jule::Any(_1a87eba94_buildUseExpr(_self_, &((*((*(_110328_st))))._field_tokens)), &__jule_any_type71);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1ac4e42d2:;
			{
				return _1a87ebdd5_buildConstSt(_self_, _110328_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1ac4e46bc:;
			{
				return jule::Any(_1a87e2a57_buildVarSt(_self_, &((*((*(_110328_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1ac4e4733:;
			{
				return jule::Any(_1a87e2d98_buildRetSt(_self_, (*((*(_110328_st))))._field_tokens), &__jule_any_type70);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1ac4e4799:;
			{
				return jule::Any(_1a87e5a6b_buildIterSt(_self_, _110328_st), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1ac4e4810:;
			{
				return jule::Any(_1a87e5dac_buildBreakSt(_self_, &((*((*(_110328_st))))._field_tokens)), &__jule_any_type69);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1ac4e4876:;
			{
				return jule::Any(_1a87e61ed_buildContSt(_self_, &((*((*(_110328_st))))._field_tokens)), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1ac4e48ed:;
			{
				return jule::Any(_1a87e6bc1_buildIfElseChain(_self_, (*((*(_110328_st))))._field_tokens), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1ac4e4975:;
			{
				return jule::Any(_1a87e7012_buildCoCallSt(_self_, (*((*(_110328_st))))._field_tokens), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1ac4e49ec:;
			{
				return jule::Any(_1a87e7353_buildGotoSt(_self_, &((*((*(_110328_st))))._field_tokens)), &__jule_any_type65);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1ac4e4a74:;
			{
				return jule::Any(_1a87e7694_buildFallSt(_self_, &((*((*(_110328_st))))._field_tokens)), &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ac4e4aeb:;
			{
				return jule::Any(_1a87e79d5_buildTypeAliasSt(_self_, &((*((*(_110328_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1ac4e4b73:;
			{
				return jule::Any(_1a87e93dd_buildMatchCase(_self_, (*((*(_110328_st))))._field_tokens), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ac4e4bea:;
			{
				if (((*((*(_110328_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1ac4e4117;
				};
				if ((((*((*((*(_110328_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(33LLU)) || ((*((*((*(_110328_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(72LLU)))) {
					return jule::Any(_1a87e972e_buildScopeSt(_self_, (*((*(_110328_st))))._field_tokens), &__jule_any_type59);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1ac4e4c72:;
			{
				return jule::Any(_1a87e972e_buildScopeSt(_self_, (*((*(_110328_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1ac4e4ce9:;
			{
				return jule::Any(_1a87e972e_buildScopeSt(_self_, (*((*(_110328_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		_match_end_1ac4e4117:;
	};
	jule::Ptr<_1a7b89251_Expr> _11597_expr = _1a880edb5_buildExpr((*(_self_))._field_p, &((*((*(_110328_st))))._field_tokens));;
	if ((_11597_expr != nullptr)) {
		return jule::Any(_11597_expr, &__jule_any_type60);;
	};
	_1a87e1968_pushErr(_self_, _11047_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline void _1a87ec589_build(_1a87e069d_scopeParser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _116726_tokens, jule::Ptr<_1a7b94e3d_ScopeTree>* _116749_s) {
	if (((*(_116749_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1a87e01b4_splitStmts(_116726_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_116749_s));
	while (((!(_1a87e1605_isLastSt(_self_))) && (!(_1a87e136e_finished(_self_))))) {
		{
			jule::Ptr<_1a87ded0c_stmt> _11758_st = _1a87e231a_next(_self_);;
			jule::Any _11768_data = _1a87ec226_buildSt(_self_, &(_11758_st));;
			if ((_11768_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<_1a7b947cd_Stmt>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a7b947cd_Stmt{._field_Token=(*(_11758_st))._field_tokens[0LL], ._field_Data=_11768_data}; __jule_collection; }));
			};
			if (_1a87e10d8_stopped(_self_)) {
				goto _iter_end_1ac502048;
			};
		}
	_iter_next_1ac502048:;
	}
	_iter_end_1ac502048:;;
}








inline jule::Bool _1a87ed117_exprBuilder_eq(_1a87ed117_exprBuilder *_self_, _1a87ed117_exprBuilder _other_) {
	return 
		(_self_->_field_p == _other_._field_p);
}

inline void _1a87ed8dc_pushErr(_1a87ed117_exprBuilder* _self_, jule::Ptr<_1a7b69b05_Token> _4523_token, jule::Str _4538_fmt, jule::Slice<jule::Any> _4551_args) {
	_1a880e711_pushErr((*(_self_))._field_p.ptr(), _4523_token, _4538_fmt, _4551_args);
}



inline void _1a87edc50_pushSuggestion(_1a87ed117_exprBuilder* _self_, jule::Str _5030_fmt, jule::Slice<jule::Any> _5043_args) {
	_1a880ea74_pushSuggestion((*(_self_))._field_p.ptr(), _5030_fmt, _5043_args);
}



inline jule::Ptr<_1a7b89d45_TupleExpr> _1a87ee091_buildTuple(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>>* _5431_parts) {
	jule::Ptr<_1a7b89d45_TupleExpr> _557_tuple = jule::new_ptr<_1a7b89d45_TupleExpr>(_1a7b89d45_TupleExpr{._field_Expr=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b89251_Expr>>::alloc(0LL, (*(_5431_parts)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b89251_Expr>(nullptr); __jule_collection; })});;
	{
		auto expr = _5431_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac52616b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a7b69b05_Token>> _5815_part = *it;
			{
				(*(_557_tuple))._field_Expr=jule::append((*_557_tuple.alloc)._field_Expr,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b89251_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a8808485_buildFromTokens(_self_, _5815_part); __jule_collection; }));
			}
			_iter_next_1ac52616b:;
			++it;
			goto _iter_begin_1ac52616b;
		}
		_iter_end_1ac52616b:;
	};
	return _557_tuple;;
}



inline jule::Ptr<_1a7b8a1db_LitExpr> _1a87ee3d2_buildLit(_1a87ed117_exprBuilder* _self_, jule::Ptr<_1a7b69b05_Token> _6424_token) {
	return jule::new_ptr<_1a7b8a1db_LitExpr>(_1a7b8a1db_LitExpr{._field_Token=_6424_token, ._field_Value=(*(_6424_token))._field_Kind});;
}



inline jule::Any _1a87eea64_buildSingle(_1a87ed117_exprBuilder* _self_, jule::Ptr<_1a7b69b05_Token> _7531_token) {
	{
		auto &_match_expr{ (*(_7531_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1ac528d61:;
			{
				return jule::Any(_1a87ee3d2_buildLit(_self_, _7531_token), &__jule_any_type105);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1ac528dd8:;
			{
				return jule::Any(jule::new_ptr<_1a7b8b6d7_VariadicExpr>(_1a7b8b6d7_VariadicExpr{._field_Token=_7531_token, ._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr)}), &__jule_any_type79);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1ac528e4e:;
			{
				return jule::Any(_1a880983d_buildIdentExpr(&(_7531_token)), &__jule_any_type52);;
			}
		}
		_match_end_1ac528c95:;
	};
	_1a87ed8dc_pushErr(_self_, _7531_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1a7b8aa6b_IdentExpr> _1a87eeda5_buildBindIdent(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _9235_tokens) {
	if (((*((*(_9235_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9235_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_1a87ed8dc_pushErr(_self_, (*(_9235_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a87edc50_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use dot (.) to access binded defines", 36)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7b69b05_Token> _1007_token = (*(_9235_tokens))[2LL];;
	if (((*(_1007_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a87ed8dc_pushErr(_self_, (*(_9235_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a87edc50_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7b8aa6b_IdentExpr> _1067_expr = _1a880983d_buildIdentExpr(&(_1007_token));;
	(*(_1067_expr))._field_Binded=true;
	return _1067_expr;;
}



inline jule::Ptr<_1a7b8b30d_UnaryExpr> _1a88001e6_buildUnary(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _11130_tokens) {
	jule::Ptr<_1a7b69b05_Token> _1127_op = _11130_tokens[0LL];;
	if ((_11130_tokens.len() == 1LL)) {
		_1a87ed8dc_pushErr(_self_, _1127_op, static_cast<jule::Str>(jule::Str::lit("missing expression for unary operator", 37)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1a7b6a342_IsUnaryOp((*(_1127_op))._field_Id)))) {
		_1a87ed8dc_pushErr(_self_, _1127_op, static_cast<jule::Str>(jule::Str::lit("invalid unary operator: @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_1127_op.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	(_11130_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1a7b8b30d_UnaryExpr>(_1a7b8b30d_UnaryExpr{._field_Op=_1127_op, ._field_Expr=_1a8808485_buildFromTokens(_self_, _11130_tokens)});;
}



inline jule::Ptr<_1a7b8c364_SubIdentExpr> _1a8800537_buildObjSubIdent(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _13236_tokens) {
	jule::I64 _1337_i = (_13236_tokens.len() - 1LL);;
	jule::Ptr<_1a7b69b05_Token> _1347_identToken = _13236_tokens[_1337_i];;
	(_1337_i)--;
	(_13236_tokens).mut_slice(0LL, _1337_i);;
	if ((_13236_tokens.len() == 0LL)) {
		_1a87ed8dc_pushErr(_self_, _1347_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a7b8c364_SubIdentExpr>(_1a7b8c364_SubIdentExpr{._field_Expr=_1a8808485_buildFromTokens(_self_, _13236_tokens), ._field_Ident=_1347_identToken});;
}



inline jule::Ptr<_1a7b8be8a_NsSelectionExpr> _1a8800878_buildNsSubIdent(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _14736_tokens) {
	jule::Ptr<_1a7b8be8a_NsSelectionExpr> _1487_ns = jule::new_ptr<_1a7b8be8a_NsSelectionExpr>(_1a7b8be8a_NsSelectionExpr{._field_Ns=jule::Slice<jule::Ptr<_1a7b69b05_Token>>(nullptr), ._field_Ident=jule::Ptr<_1a7b69b05_Token>(nullptr)});;
	if ((((*(_14736_tokens)).len() == 3LL) && ((*((*(_14736_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*_1487_ns.alloc)._field_Ns=(*(_14736_tokens)).slice(0LL, 1LL);
		(*_1487_ns.alloc)._field_Ident=(*(_14736_tokens))[2LL];
	} else {
		{
			auto expr = _14736_tokens;
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac535e4a:;
			if (it != expr_end) {
				jule::I64 _1549_i = it - expr->begin();
				jule::Ptr<_1a7b69b05_Token> _15416_token = *it;
				{
					if (((_1549_i & 1LL) == 0LL)) {
						if (((*(_15416_token))._field_Id != static_cast<jule::U64>(1LLU))) {
							_1a87ed8dc_pushErr(_self_, _15416_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							_1a87edc50_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
						};
						(*_1487_ns.alloc)._field_Ns=jule::append((*_1487_ns.alloc)._field_Ns,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b69b05_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15416_token; __jule_collection; }));
					} else if (((*(_15416_token))._field_Id != static_cast<jule::U64>(19LLU))) {
						_1a87ed8dc_pushErr(_self_, _15416_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						_1a87edc50_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1ac535e4a:;
				++it;
				_1549_i++;
				goto _iter_begin_1ac535e4a;
			}
			_iter_end_1ac535e4a:;
		};
		(*_1487_ns.alloc)._field_Ident=(*_1487_ns.alloc)._field_Ns[((*_1487_ns.alloc)._field_Ns.len() - 1LL)];
		((*(_1487_ns))._field_Ns).mut_slice(0LL, ((*(_1487_ns))._field_Ns.len() - 1LL));;
	};
	return _1487_ns;;
}



inline jule::Ptr<_1a7b800b0_TypeDecl> _1a8800bb9_buildType(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _17230_tokens) {
	jule::I64 _1737_i = 0LL;;
	jule::Ptr<_1a7b800b0_TypeDecl> _1747_t;
	jule::Bool _17410_ok;
	({
		__jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8811317_buildType((*(_self_))._field_p, _17230_tokens, (&(_1737_i)), false);
		_1747_t = __jule_assign_result.__jule_result_arg0;
		_17410_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17410_ok))) {
		_1a87ed8dc_pushErr(_self_, (*(_17230_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_1737_i < (*(_17230_tokens)).len())) {
		_1a87ed8dc_pushErr(_self_, (*(_17230_tokens))[_1737_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	return _1747_t;;
}



inline jule::Any _1a880100a_buildSubIdent(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _18634_tokens) {
	jule::I64 _1873_i = ((*(_18634_tokens)).len() - 2LL);;
	jule::Ptr<_1a7b69b05_Token> _1883_token = (*(_18634_tokens))[_1873_i];;
	{
		auto &_match_expr{ (*(_1883_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1ac53e54c:;
			{
				return jule::Any(_1a8800537_buildObjSubIdent(_self_, (*(_18634_tokens))), &__jule_any_type89);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1ac53eb79:;
			{
				return jule::Any(_1a8800878_buildNsSubIdent(_self_, _18634_tokens), &__jule_any_type93);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1ac53ebe0:;
			{
				return jule::Any(_1a8800bb9_buildType(_self_, _18634_tokens), &__jule_any_type92);;
			}
		}
		_match_end_1ac53ea58:;
	};
	if (_1a8809ed1_isAnonFnHead(_18634_tokens)) {
		return jule::Any(_1a8800bb9_buildType(_self_, _18634_tokens), &__jule_any_type92);;
	};
	_1a87ed8dc_pushErr(_self_, _1883_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1a7b8b6d7_VariadicExpr> _1a880134b_buildVariadic(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _20833_tokens) {
	jule::Ptr<_1a7b69b05_Token> _2097_token = _20833_tokens[(_20833_tokens.len() - 1LL)];;
	(_20833_tokens).mut_slice(0LL, (_20833_tokens.len() - 1LL));;
	return jule::new_ptr<_1a7b8b6d7_VariadicExpr>(_1a7b8b6d7_VariadicExpr{._field_Token=_2097_token, ._field_Expr=_1a8808485_buildFromTokens(_self_, _20833_tokens)});;
}



inline jule::Ptr<_1a7b8951a_RangeExpr> _1a880168c_buildBetweenParentheses(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _21743_tokens) {
	if ((_21743_tokens.len() == 2LL)) {
		_1a87ed8dc_pushErr(_self_, _21743_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		_1a87edc50_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_21743_tokens).mut_slice(1LL, (_21743_tokens.len() - 1LL));;
	return jule::new_ptr<_1a7b8951a_RangeExpr>(_1a7b8951a_RangeExpr{._field_Expr=_1a8808485_buildFromTokens(_self_, _21743_tokens)});;
}



inline jule::Ptr<_1a7b8bab1_CastExpr> _1a88019cd_tryBuildCast(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _22933_tokens) {
	jule::I64 _2307_rangeN = 0LL;;
	{
		auto expr = _22933_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac545773:;
		if (it != expr_end) {
			jule::I64 _2317_i = it - expr->begin();
			jule::Ptr<_1a7b69b05_Token> _23110_token = *it;
			{
				{
					auto &_match_expr{ (*(_23110_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac546114:;
						{
							(_2307_rangeN)++;
							goto _iter_next_1ac545773;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac5464ee:;
						{
							(_2307_rangeN)--;
						}
					}
					_match_end_1ac546400:;
				};
				if ((_2307_rangeN > 0LL)) {
					goto _iter_next_1ac545773;
				} else if (((_2317_i + 1LL) == (*(_22933_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1a7b69b05_Token>> _2508_typeTokens = (*(_22933_tokens)).slice(0LL, (_2317_i + 1LL));;
				jule::Slice<jule::Ptr<_1a7b69b05_Token>> _2518_exprTokens = (*(_22933_tokens)).slice((_2317_i + 1LL));;
				if ((_2518_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1a7b69b05_Token> _2584_tok = _2518_exprTokens[0LL];;
				if (((*(_2584_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1a7b8bab1_CastExpr> _2638_cast = jule::new_ptr<_1a7b8bab1_CastExpr>(_1a7b8bab1_CastExpr{._field_Kind=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr)});;
				if ((_2518_exprTokens.len() == 2LL)) {
					_1a87ed8dc_pushErr(_self_, _2518_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
					_1a87edc50_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an expression for casting", 30)), jule::Slice<jule::Any>());
				};
				if ((_2508_typeTokens.len() == 2LL)) {
					_1a87ed8dc_pushErr(_self_, _2508_typeTokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					_1a87edc50_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("type declaration expected for casting", 37)), jule::Slice<jule::Any>());
				} else {
					(_2508_typeTokens).mut_slice(1LL, (_2508_typeTokens.len() - 1LL));;
					jule::I64 _2779_typeIndex = 0LL;;
					jule::Ptr<_1a7b800b0_TypeDecl> _2789_t;
					jule::Bool _27812_ok;
					({
						__jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8811317_buildType((*(_self_))._field_p, &(_2508_typeTokens), (&(_2779_typeIndex)), true);
						_2789_t = __jule_assign_result.__jule_result_arg0;
						_27812_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_27812_ok && (_2779_typeIndex < _2508_typeTokens.len()))) {
						_1a87ed8dc_pushErr(_self_, _2508_typeTokens[_2779_typeIndex], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					} else if ((!(_27812_ok))) {
						return _2638_cast;;
					};
					(*(_2638_cast))._field_Kind=_2789_t;
					if ((_2518_exprTokens.len() > 2LL)) {
						jule::I64 _28810_j = 0LL;;
						_1a880c3ce_range(&(_28810_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_2518_exprTokens));
						if ((_28810_j < _2518_exprTokens.len())) {
							return nullptr;;
						};
						(_2518_exprTokens).mut_slice(0LL, _28810_j);;
						(*_2638_cast.alloc)._field_Expr=_1a8808485_buildFromTokens(_self_, _2518_exprTokens);
					};
				};
				return _2638_cast;;
			}
			_iter_next_1ac545773:;
			++it;
			_2317_i++;
			goto _iter_begin_1ac545773;
		}
		_iter_end_1ac545773:;
	};
	return nullptr;;
}



inline void _1a8801deb_pushArg(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b89251_Expr>>* _30328_args, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _30347_tokens, jule::Ptr<_1a7b69b05_Token> _30365_err_token) {
	if ((_30347_tokens.len() == 0LL)) {
		_1a87ed8dc_pushErr(_self_, _30365_err_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a87edc50_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1a7b89251_Expr>> &__jule_push_dest = (*(_30328_args)); __jule_push_dest.push(_1a8808485_buildFromTokens(_self_, _30347_tokens)); };
}



inline jule::Slice<jule::Ptr<_1a7b89251_Expr>> _1a880223c_buildArgs(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _31229_tokens) {
	if ((_31229_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a7b89251_Expr>> _31811_args = nullptr;;
	jule::I64 _3197_last = 0LL;;
	jule::I64 _3207_rangeN = 0LL;;
	(_31229_tokens).mut_slice(1LL, (_31229_tokens.len() - 1LL));;
	{
		auto expr = &(_31229_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac554188:;
		if (it != expr_end) {
			jule::I64 _3227_i = it - expr->begin();
			jule::Ptr<_1a7b69b05_Token> _32210_token = *it;
			{
				{
					auto &_match_expr{ (*(_32210_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac554d6a:;
						{
							(_3207_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac555255:;
						{
							(_3207_rangeN)--;
						}
					}
					_match_end_1ac555156:;
				};
				if (((_3207_rangeN > 0LL) || ((*(_32210_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1ac554188;
				};
				_1a8801deb_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last, _3227_i), _32210_token);
				_3197_last=(_3227_i + 1LL);
			}
			_iter_next_1ac554188:;
			++it;
			_3227_i++;
			goto _iter_begin_1ac554188;
		}
		_iter_end_1ac554188:;
	};
	if ((_3197_last < _31229_tokens.len())) {
		if ((_3197_last == 0LL)) {
			if ((_31229_tokens.len() > 0LL)) {
				_1a8801deb_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last), _31229_tokens[_3197_last]);
			};
		} else {
			_1a8801deb_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last), _31229_tokens[(_3197_last - 1LL)]);
		};
	};
	return _31811_args;;
}



inline jule::Ptr<_1a7b8ce7a_FnCallExpr> _1a8802a34_buildFnCall(_1a87ed117_exprBuilder* _self_, jule::Ptr<_1a7b69b05_Token>* _37832_token, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _37852_expr, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _37873_args) {
	return jule::new_ptr<_1a7b8ce7a_FnCallExpr>(_1a7b8ce7a_FnCallExpr{._field_Token=(*(_37832_token)), ._field_Expr=_1a8808485_buildFromTokens(_self_, (*(_37852_expr))), ._field_Args=_1a880223c_buildArgs(_self_, (*(_37873_args))), ._field_Exception=jule::Ptr<_1a7b94e3d_ScopeTree>(nullptr), ._field_IsCo=false});;
}



inline jule::Any _1a8802d75_buildParenthesesRange(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _38642_tokens) {
	jule::Ptr<_1a7b69b05_Token> _3877_token = (*(_38642_tokens))[0LL];;
	if (((*(_3877_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1a7b8bab1_CastExpr> _3898_expr = _1a88019cd_tryBuildCast(_self_, _38642_tokens);;
		if ((_3898_expr != nullptr)) {
			return jule::Any(_3898_expr, &__jule_any_type109);;
		};
	};
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _3947_exprTokens;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _39423_argsTokens;
	({
		__jule_tuple_sx_1a7b69b05_Token__jule_tuple_sx_1a7b69b05_Token __jule_assign_result = _1a880c698_rangeLast(_38642_tokens);
		_3947_exprTokens = __jule_assign_result.__jule_result_arg0;
		_39423_argsTokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3947_exprTokens.len() == 0LL)) {
		return jule::Any(_1a880168c_buildBetweenParentheses(_self_, _39423_argsTokens), &__jule_any_type104);;
	};
	if (_1a8809ed1_isAnonFnHead(&(_3947_exprTokens))) {
		return jule::Any(_1a8800bb9_buildType(_self_, _38642_tokens), &__jule_any_type92);;
	};
	return jule::Any(_1a8802a34_buildFnCall(_self_, &(_3877_token), &(_3947_exprTokens), &(_39423_argsTokens)), &__jule_any_type85);;
}



inline jule::Ptr<_1a7b8a5b5_UnsafeExpr> _1a88031b6_buildUnsafeExpr(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _40835_tokens) {
	jule::Ptr<_1a7b69b05_Token> _4097_token = _40835_tokens[0LL];;
	(_40835_tokens).mut_slice(1LL);;
	jule::I64 _4117_i = 0LL;;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _4127_rangeTokens = _1a880c3ce_range(&(_4117_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40835_tokens));;
	if ((_4127_rangeTokens.len() == 0LL)) {
		_1a87ed8dc_pushErr(_self_, _40835_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a7b8a5b5_UnsafeExpr>(_1a7b8a5b5_UnsafeExpr{._field_Token=_4097_token, ._field_Expr=_1a8808485_buildFromTokens(_self_, _4127_rangeTokens)});;
}



inline jule::Ptr<_1a7b96acc_FnDecl> _1a8803507_buildAnonFn(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _42332_tokens) {
	jule::Ptr<_1a7b96acc_FnDecl> _4247_f = _1a881589e_buildFn((*(_self_))._field_p, _42332_tokens, false, false);;
	if ((!(_1a7b96e73_IsAnon(_4247_f.ptr())))) {
		_1a87ed8dc_pushErr(_self_, (*_4247_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a87edc50_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("anonymous function expected, remove identifier of function", 58)), jule::Slice<jule::Any>());
	};
	return _4247_f;;
}



inline jule::Any _1a8803848_buildUnsafe(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _43232_tokens) {
	{
		auto &_match_expr{ (*((*(_43232_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1ac567ca1:;
			{
				return jule::Any(_1a8803507_buildAnonFn(_self_, _43232_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1ac567146:;
			{
				return jule::Any(_1a88031b6_buildUnsafeExpr(_self_, (*(_43232_tokens))), &__jule_any_type106);;
			}
		}
		_match_end_1ac567586:;
	};
}



inline void _1a8803c66_pushRangeLitPart(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _44236_part, jule::Ptr<_1a7b69b05_Token> _4433_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>>* _44328_parts) {
	if ((_44236_part.len() == 0LL)) {
		_1a87ed8dc_pushErr(_self_, _4433_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a87edc50_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> &__jule_push_dest = (*(_44328_parts)); __jule_push_dest.push(_44236_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _1a88040a7_getBraceRangeLitExprParts(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _45345_tokens) {
	if ((_45345_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _45911_parts = nullptr;;
	jule::I64 _4617_last = 0LL;;
	jule::I64 _4627_rangeN = 0LL;;
	(_45345_tokens).mut_slice(1LL, (_45345_tokens.len() - 1LL));;
	{
		auto expr = &(_45345_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac56b535:;
		if (it != expr_end) {
			jule::I64 _4647_i = it - expr->begin();
			jule::Ptr<_1a7b69b05_Token> _46410_token = *it;
			{
				{
					auto &_match_expr{ (*(_46410_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac56c217:;
						{
							(_4627_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac56c602:;
						{
							(_4627_rangeN)--;
						}
					}
					_match_end_1ac56c503:;
				};
				if (((_4627_rangeN > 0LL) || ((*(_46410_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1ac56b535;
				};
				_1a8803c66_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last, _4647_i), _46410_token, &(_45911_parts));
				_4617_last=(_4647_i + 1LL);
			}
			_iter_next_1ac56b535:;
			++it;
			_4647_i++;
			goto _iter_begin_1ac56b535;
		}
		_iter_end_1ac56b535:;
	};
	if ((_4617_last < _45345_tokens.len())) {
		if ((_4617_last == 0LL)) {
			if ((_45345_tokens.len() > 0LL)) {
				_1a8803c66_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last), _45345_tokens[_4617_last], &(_45911_parts));
			};
		} else {
			_1a8803c66_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last), _45345_tokens[(_4617_last - 1LL)], &(_45911_parts));
		};
	};
	return _45911_parts;;
}



inline jule::Ptr<_1a7b8d970_FieldExprPair> _1a88043e8_buildFieldExprPair(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _49538_tokens) {
	if (((_49538_tokens.len() - 2LL) == 0LL)) {
		_1a87ed8dc_pushErr(_self_, _49538_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7b8d970_FieldExprPair> _5007_pair = jule::new_ptr<_1a7b8d970_FieldExprPair>(_1a7b8d970_FieldExprPair{._field_Field=_49538_tokens[0LL], ._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr)});;
	(_49538_tokens).mut_slice(2LL);;
	(*(_5007_pair))._field_Expr=_1a8808485_buildFromTokens(_self_, _49538_tokens);
	return _5007_pair;;
}



inline jule::Ptr<_1a7b89251_Expr> _1a8804739_buildStructLitExpr(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _50839_tokens) {
	jule::Ptr<_1a7b69b05_Token> _5097_token = (*(_50839_tokens))[0LL];;
	if ((((*(_5097_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_50839_tokens)).len() > 1LL))) {
		_5097_token=(*(_50839_tokens))[1LL];
		if (((*_5097_token.alloc)._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1a7b89251_Expr>(_1a7b89251_Expr{._field_Token=_5097_token, ._field_End=(*(_50839_tokens))[((*(_50839_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1a88043e8_buildFieldExprPair(_self_, (*(_50839_tokens))), &__jule_any_type81)});;
		};
	};
	return _1a8808485_buildFromTokens(_self_, (*(_50839_tokens)));;
}



inline jule::Slice<jule::Ptr<_1a7b89251_Expr>> _1a8804a7a_buildStructLitExprs(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _52340_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _5247_parts = _1a88040a7_getBraceRangeLitExprParts(_self_, (*(_52340_tokens)));;
	if ((_5247_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a7b89251_Expr>> _5297_pairs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b89251_Expr>>::alloc(0LL, _5247_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b89251_Expr>(nullptr); __jule_collection; });;
	{
		auto expr = &(_5247_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac575e13:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a7b69b05_Token>> _53015_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1a7b89251_Expr>> &__jule_push_dest = _5297_pairs; __jule_push_dest.push(_1a8804739_buildStructLitExpr(_self_, &(_53015_part))); };
			}
			_iter_next_1ac575e13:;
			++it;
			goto _iter_begin_1ac575e13;
		}
		_iter_end_1ac575e13:;
	};
	return _5297_pairs;;
}



inline jule::Ptr<_1a7b8e29a_StructLit> _1a8804dbb_buildTypedStructLiteral(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _53643_tokens) {
	jule::I64 _5377_i = 0LL;;
	jule::Ptr<_1a7b800b0_TypeDecl> _5387_t;
	jule::Bool _53810_ok;
	({
		__jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8811317_buildType((*(_self_))._field_p, &(_53643_tokens), (&(_5377_i)), true);
		_5387_t = __jule_assign_result.__jule_result_arg0;
		_53810_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_53810_ok))) {
		return nullptr;;
	} else if ((_5377_i >= _53643_tokens.len())) {
		_1a87ed8dc_pushErr(_self_, _53643_tokens[_5377_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_53643_tokens).mut_slice(_5377_i);;
	jule::Ptr<_1a7b69b05_Token> _5473_token = _53643_tokens[0LL];;
	if (((*(_5473_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_1a87ed8dc_pushErr(_self_, _5473_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a7b8e29a_StructLit>(_1a7b8e29a_StructLit{._field_End=_53643_tokens[(_53643_tokens.len() - 1LL)], ._field_Kind=_5387_t, ._field_Exprs=_1a8804a7a_buildStructLitExprs(_self_, &(_53643_tokens))});;
}



inline jule::Ptr<_1a7b89251_Expr> _1a880520c_buildBraceLitPart(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _56038_tokens) {
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _5617_l;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _56114_r;
	({
		__jule_tuple_sx_1a7b69b05_Token__jule_tuple_sx_1a7b69b05_Token __jule_assign_result = _1a88092aa_splitDelim(_56038_tokens, static_cast<jule::U64>(8LLU));
		_5617_l = __jule_assign_result.__jule_result_arg0;
		_56114_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_5617_l != nullptr)) {
		return jule::new_ptr<_1a7b89251_Expr>(_1a7b89251_Expr{._field_Token=(*(_56038_tokens))[0LL], ._field_End=(*(_56038_tokens))[((*(_56038_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1a7b9007b_KeyValPair>(_1a7b9007b_KeyValPair{._field_Key=_1a8808485_buildFromTokens(_self_, _5617_l), ._field_Val=_1a8808485_buildFromTokens(_self_, _56114_r), ._field_Colon=(*(_56038_tokens))[_5617_l.len()]}), &__jule_any_type82)});;
	};
	return _1a8808485_buildFromTokens(_self_, (*(_56038_tokens)));;
}



inline jule::Ptr<_1a7b8e751_BraceLit> _1a880554d_buildBraceLit(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _57734_tokens) {
	jule::Ptr<_1a7b8e751_BraceLit> _5787_lit = jule::new_ptr<_1a7b8e751_BraceLit>(_1a7b8e751_BraceLit{._field_Token=(*(_57734_tokens))[0LL], ._field_End=(*(_57734_tokens))[((*(_57734_tokens)).len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1a7b89251_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _5837_parts = _1a88040a7_getBraceRangeLitExprParts(_self_, (*(_57734_tokens)));;
	if ((_5837_parts == nullptr)) {
		return _5787_lit;;
	};
	(*(_5787_lit))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b89251_Expr>>::alloc(0LL, _5837_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b89251_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_5837_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac580b32:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a7b69b05_Token>> _58915_part = *it;
			{
				(*_5787_lit.alloc)._field_Exprs=jule::append((*_5787_lit.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b89251_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a880520c_buildBraceLitPart(_self_, &(_58915_part)); __jule_collection; }));
			}
			_iter_next_1ac580b32:;
			++it;
			goto _iter_begin_1ac580b32;
		}
		_iter_end_1ac580b32:;
	};
	return _5787_lit;;
}



inline jule::Any _1a880588e_buildBraceRange(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _59636_tokens) {
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _5977_exprTokens;
	jule::I64 _59719_rangeN;
	({
		__jule_tuple_sx_1a7b69b05_Token__jule_tuple_int __jule_assign_result = _1a8809b07_getRangeExprTokens(_59636_tokens);
		_5977_exprTokens = __jule_assign_result.__jule_result_arg0;
		_59719_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_5977_exprTokens.len() == 0LL)) {
			_case_begin_1ac58257e:;
			{
				return jule::Any(_1a880554d_buildBraceLit(_self_, _59636_tokens), &__jule_any_type111);;
			}
		}
		else if ((_59719_rangeN > 0LL)) {
			_case_begin_1ac582617:;
			{
				_1a87ed8dc_pushErr(_self_, (*(_59636_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac582518:;
	};
	jule::Ptr<_1a7b69b05_Token> _6083_elseToken = _5977_exprTokens[(_5977_exprTokens.len() - 1LL)];;
	if (((*(_5977_exprTokens[(_5977_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_5977_exprTokens).mut_slice(0LL, (_5977_exprTokens.len() - 1LL));;
		jule::Any _6118_d = _1a8807d03_build(_self_, &(_5977_exprTokens));;
		if ((_6118_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _6118_d };
			
			if (_match_expr.type == &__jule_any_type85) {
				_case_begin_1ac585461:;
				{
					((*(_59636_tokens))).mut_slice((_5977_exprTokens.len() + 1LL));;
					jule::I64 _6189_i = 0LL;;
					jule::Slice<jule::Ptr<_1a7b69b05_Token>> _6199_rangeTokens = _1a880c3ce_range(&(_6189_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _59636_tokens);;
					jule::Ptr<_1a7b8ce7a_FnCallExpr> _6209_model = _6118_d.unsafe_cast_ptr<_1a7b8ce7a_FnCallExpr>();;
					if (_1a7b8d5b8_Ignored(_6209_model.ptr())) {
						_1a87ed8dc_pushErr(_self_, _6083_elseToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						_1a87edc50_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72)), jule::Slice<jule::Any>());
					};
					(*_6209_model.alloc)._field_Exception=_1a88108aa_buildScope((*(_self_))._field_p, &(_6199_rangeTokens), (*(_59636_tokens))[(_6189_i - 1LL)]);
					return _6118_d;;
				}
			}
			else {
				_case_begin_1ac5850ba:;
				{
					_1a87ed8dc_pushErr(_self_, _5977_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1ac58550a:;
		};
	};
	{
		auto &_match_expr{ (*(_5977_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ac589cb2:;
			{
				return _1a8803848_buildUnsafe(_self_, _59636_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1ac5903c2:;
			{
				return jule::Any(_1a8803507_buildAnonFn(_self_, _59636_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ac590438:;
			{
				return jule::Any(_1a8804dbb_buildTypedStructLiteral(_self_, (*(_59636_tokens))), &__jule_any_type110);;
			}
		}
		else {
			_case_begin_1ac587dc0:;
			{
				_1a87ed8dc_pushErr(_self_, _5977_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac5898a5:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _1a8805bd0_getEnumerableParts(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _64838_tokens) {
	(_64838_tokens).mut_slice(1LL, (_64838_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _6507_parts;
	jule::Slice<_1d9144ab5_Log> _65014_errors;
	({
		__jule_tuple_ssx_1a7b69b05_Token__jule_tuple_s_1d9144ab5_Log __jule_assign_result = _1a880cb4e_parts(&(_64838_tokens), static_cast<jule::U64>(5LLU), true);
		_6507_parts = __jule_assign_result.__jule_result_arg0;
		_65014_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_65014_errors);
	return _6507_parts;;
}



inline jule::Ptr<_1a7b907a7_SliceExpr> _1a8806021_buildSlice(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _65530_tokens) {
	jule::Ptr<_1a7b907a7_SliceExpr> _6567_slc = jule::new_ptr<_1a7b907a7_SliceExpr>(_1a7b907a7_SliceExpr{._field_Token=_65530_tokens[0LL], ._field_End=_65530_tokens[(_65530_tokens.len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1a7b89251_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _6617_parts = _1a8805bd0_getEnumerableParts(_self_, _65530_tokens);;
	if ((_6617_parts.len() == 0LL)) {
		return _6567_slc;;
	};
	(*(_6567_slc))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b89251_Expr>>::alloc(0LL, _6617_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b89251_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_6617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5952b7:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a7b69b05_Token>> _66715_p = *it;
			{
				if ((_66715_p.len() == 0LL)) {
					goto _iter_next_1ac5952b7;
				};
				(*_6567_slc.alloc)._field_Exprs=jule::append((*_6567_slc.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b89251_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a8808485_buildFromTokens(_self_, _66715_p); __jule_collection; }));
			}
			_iter_next_1ac5952b7:;
			++it;
			goto _iter_begin_1ac5952b7;
		}
		_iter_end_1ac5952b7:;
	};
	return _6567_slc;;
}



inline jule::Ptr<_1a7b91214_IndexingExpr> _1a88064c7_buildIndexing(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _67733_exprTokens, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _6787_tokens, jule::Ptr<_1a7b69b05_Token> _67829_errorToken) {
	jule::Ptr<_1a7b69b05_Token> _6797_end = _6787_tokens[(_6787_tokens.len() - 1LL)];;
	(_6787_tokens).mut_slice(1LL, (_6787_tokens.len() - 1LL));;
	if ((_6787_tokens.len() == 0LL)) {
		_1a87ed8dc_pushErr(_self_, _67829_errorToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7b89251_Expr> _6857_expr = _1a8808485_buildFromTokens(_self_, _67733_exprTokens);;
	if ((_6857_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a7b89251_Expr> _6897_index = _1a8808485_buildFromTokens(_self_, _6787_tokens);;
	if ((_6897_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a7b91214_IndexingExpr>(_1a7b91214_IndexingExpr{._field_Token=_67829_errorToken, ._field_End=_6797_end, ._field_Expr=_6857_expr, ._field_Index=_6897_index});;
}



inline jule::Ptr<_1a7b91874_SlicingExpr> _1a8806ae3_buildSlicing(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _70133_exprTokens, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _70160_start, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _7028_to, jule::Ptr<_1a7b69b05_Token>* _70227_errorToken, jule::Ptr<_1a7b69b05_Token> _70251_end) {
	jule::Ptr<_1a7b91874_SlicingExpr> _7037_slc = jule::new_ptr<_1a7b91874_SlicingExpr>(_1a7b91874_SlicingExpr{._field_Token=(*(_70227_errorToken)), ._field_End=_70251_end, ._field_Expr=_1a8808485_buildFromTokens(_self_, (*(_70133_exprTokens))), ._field_Start=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_To=jule::Ptr<_1a7b89251_Expr>(nullptr)});;
	if (((*(_70160_start)).len() > 0LL)) {
		(*(_7037_slc))._field_Start=_1a8808485_buildFromTokens(_self_, (*(_70160_start)));
	};
	if (((*(_7028_to)).len() > 0LL)) {
		(*_7037_slc.alloc)._field_To=_1a8808485_buildFromTokens(_self_, (*(_7028_to)));
	};
	return _7037_slc;;
}



inline jule::Any _1a8806e34_buildBracketRange(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _71737_tokens) {
	jule::Ptr<_1a7b69b05_Token> _7187_errorToken = _71737_tokens[0LL];;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _7197_exprTokens;
	jule::I64 _71919_rangeN;
	({
		__jule_tuple_sx_1a7b69b05_Token__jule_tuple_int __jule_assign_result = _1a8809b07_getRangeExprTokens(&(_71737_tokens));
		_7197_exprTokens = __jule_assign_result.__jule_result_arg0;
		_71919_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_7197_exprTokens.len() == 0LL)) {
		return jule::Any(_1a8806021_buildSlice(_self_, _71737_tokens), &__jule_any_type97);;
	} else if ((_71919_rangeN > 0LL)) {
		_1a87ed8dc_pushErr(_self_, _7187_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_71737_tokens).mut_slice(_7197_exprTokens.len());;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _7347_splitTokens = _71737_tokens.slice(1LL, (_71737_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _7357_start;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _73518_to;
	({
		__jule_tuple_sx_1a7b69b05_Token__jule_tuple_sx_1a7b69b05_Token __jule_assign_result = _1a88092aa_splitDelim(&(_7347_splitTokens), static_cast<jule::U64>(8LLU));
		_7357_start = __jule_assign_result.__jule_result_arg0;
		_73518_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_7357_start != nullptr) || (_73518_to != nullptr))) {
		return jule::Any(_1a8806ae3_buildSlicing(_self_, &(_7197_exprTokens), &(_7357_start), &(_73518_to), &(_7187_errorToken), _71737_tokens[(_71737_tokens.len() - 1LL)]), &__jule_any_type108);;
	};
	return jule::Any(_1a88064c7_buildIndexing(_self_, _7197_exprTokens, _71737_tokens, _7187_errorToken), &__jule_any_type107);;
}



inline jule::Any _1a8807275_buildExclRight(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _74235_tokens) {
	jule::Ptr<_1a7b69b05_Token> _7433_token = (*(_74235_tokens))[((*(_74235_tokens)).len() - 1LL)];;
	((*(_74235_tokens))).mut_slice(0LL, ((*(_74235_tokens)).len() - 1LL));;
	jule::Any _7457_d = _1a8807d03_build(_self_, _74235_tokens);;
	if ((_7457_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _7457_d };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ac5a2d96:;
			{
				(*(_7457_d.unsafe_cast_ptr<_1a7b8ce7a_FnCallExpr>()))._field_Exception=jule::new_ptr<_1a7b94e3d_ScopeTree>(_1a7b94e3d_ScopeTree{._field_Parent=jule::Ptr<_1a7b94e3d_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=true, ._field_Stmts=jule::Slice<_1a7b947cd_Stmt>(nullptr), ._field_End=jule::Ptr<_1a7b69b05_Token>(nullptr)});
				return _7457_d;;
			}
		}
		_match_end_1ac5a3281:;
	};
	_1a87ed8dc_pushErr(_self_, _7433_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1a88075b6_buildData(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _76030_tokens) {
	{
		auto _match_expr{ (*(_76030_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1ac5a499c:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1ac5a4a13:;
			{
				return _1a87eea64_buildSingle(_self_, (*(_76030_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1ac5a4a79:;
			{
				if (((*((*(_76030_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1a87eeda5_buildBindIdent(_self_, _76030_tokens), &__jule_any_type52);;
				};
			}
		}
		_match_end_1ac5a486a:;
	};
	jule::Ptr<_1a7b69b05_Token> _7727_token = (*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];;
	if (((*(_7727_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1a880134b_buildVariadic(_self_, (*(_76030_tokens))), &__jule_any_type79);;
	};
	_7727_token=(*(_76030_tokens))[0LL];
	if (_1a7b6a342_IsUnaryOp((*_7727_token.alloc)._field_Id)) {
		if (((*(_76030_tokens)).len() > 1LL)) {
			_7727_token=(*(_76030_tokens))[1LL];
			if (((*_7727_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1a8800bb9_buildType(_self_, _76030_tokens), &__jule_any_type92);;
			};
		};
		return jule::Any(_1a88001e6_buildUnary(_self_, (*(_76030_tokens))), &__jule_any_type91);;
	};
	if (((*(_76030_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_7727_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1ac5a9342:;
				{
					if (((*(_76030_tokens)).len() > 3LL)) {
						jule::Ptr<_1a7b69b05_Token> _7986_t = (*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];;
						if (((*(_7986_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1ac5a961c;
						};
					};
					jule::Ptr<_1a7b69b05_Token> _8045_next = (*(_76030_tokens))[1LL];;
					if (((*(_8045_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1ac5a961c;
					};
					return jule::Any(_1a8800bb9_buildType(_self_, _76030_tokens), &__jule_any_type92);;
				}
			}
			_match_end_1ac5a961c:;
		};
	};
	_7727_token=(*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_7727_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1ac5ac81d:;
			{
				return _1a880100a_buildSubIdent(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1ac5ac884:;
			{
				return _1a8807275_buildExclRight(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1ac5ac8ea:;
			{
				return _1a8802d75_buildParenthesesRange(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1ac5ac961:;
			{
				return _1a880588e_buildBraceRange(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1ac5ac9c7:;
			{
				return _1a8806e34_buildBracketRange(_self_, (*(_76030_tokens)));;
			}
		}
		_match_end_1ac5ac7a7:;
	};
	_1a87ed8dc_pushErr(_self_, _7727_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1a88079b2_buildBinary(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _82932_tokens, jule::I64 _82950_i) {
	jule::Ptr<_1a7b69b05_Token> _8307_op = (*(_82932_tokens))[_82950_i];;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _8317_leftTokens = (*(_82932_tokens)).slice(0LL, _82950_i);;
	if ((_1a880881a_isTypeOp(&((*(_8307_op))._field_Id)) && _1a8808b28_isTypeRange(&(_8317_leftTokens)))) {
		return jule::Any(_1a8800bb9_buildType(_self_, _82932_tokens), &__jule_any_type92);;
	};
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _8367_rightTokens = (*(_82932_tokens)).slice((_82950_i + 1LL));;
	if ((_8317_leftTokens.len() == 0LL)) {
		_1a87ed8dc_pushErr(_self_, (*(_82932_tokens))[_82950_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a87edc50_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("left operand expected for binary operator", 41)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_8367_rightTokens.len() == 0LL)) {
		_1a87ed8dc_pushErr(_self_, (*(_82932_tokens))[_82950_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a87edc50_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("right operand expected for binary operator", 42)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1a7b8c81a_BinaryExpr>(_1a7b8c81a_BinaryExpr{._field_Left=_1a8808485_buildFromTokens(_self_, _8317_leftTokens), ._field_Right=_1a8808485_buildFromTokens(_self_, _8367_rightTokens), ._field_Op=_8307_op}), &__jule_any_type112);;
}



inline jule::Any _1a8807d03_build(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _85426_tokens) {
	if (((*((*(_85426_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1a8800bb9_buildType(_self_, _85426_tokens), &__jule_any_type92);;
	};
	jule::I64 _8583_i = _1a8809574_findLowestPrecOp(_85426_tokens);;
	if ((_8583_i == -1LL)) {
		return _1a88075b6_buildData(_self_, _85426_tokens);;
	};
	return _1a88079b2_buildBinary(_self_, _85426_tokens, _8583_i);;
}



inline jule::Any _1a8808144_buildKind(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _86530_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _8667_parts;
	jule::Slice<_1d9144ab5_Log> _86614_errors;
	({
		__jule_tuple_ssx_1a7b69b05_Token__jule_tuple_s_1d9144ab5_Log __jule_assign_result = _1a880cb4e_parts(_86530_tokens, static_cast<jule::U64>(5LLU), true);
		_8667_parts = __jule_assign_result.__jule_result_arg0;
		_86614_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86614_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_86614_errors);
		return nullptr;;
	} else if ((_8667_parts.len() > 1LL)) {
		return jule::Any(_1a87ee091_buildTuple(_self_, &(_8667_parts)), &__jule_any_type83);;
	};
	return _1a8807d03_build(_self_, _86530_tokens);;
}



inline jule::Ptr<_1a7b89251_Expr> _1a8808485_buildFromTokens(_1a87ed117_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _87635_tokens) {
	if ((_87635_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _8807_kind = _1a8808144_buildKind(_self_, &(_87635_tokens));;
	if ((_8807_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a7b89251_Expr>(_1a7b89251_Expr{._field_Token=_87635_tokens[0LL], ._field_End=_87635_tokens[(_87635_tokens.len() - 1LL)], ._field_Kind=_8807_kind});;
}











inline void _1a880e05c_stop(_1a880dc2c_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1a880e2e3_stopped(_1a880dc2c_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1a880e711_pushErr(_1a880dc2c_parser* _self_, jule::Ptr<_1a7b69b05_Token> _20823_token, jule::Str _20838_fmt, jule::Slice<jule::Any> _20851_args) {
	{ jule::Slice<_1d9144ab5_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a880d314_compilerErr(&(_20823_token), &(_20838_fmt), _20851_args)); };
}



inline void _1a880ea74_pushSuggestion(_1a880dc2c_parser* _self_, jule::Str _21330_fmt, jule::Slice<jule::Any> _21343_args) {
	{
		_1a880d6aa_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _21330_fmt, _21343_args);
	};
}



inline jule::Ptr<_1a7b89251_Expr> _1a880edb5_buildExpr(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _21731_tokens) {
	return _1a8808485_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_21731_tokens)));;
}



inline jule::Ptr<_1a7b7e4cc_Directive> _1a8810206_buildDirective(_1a880dc2c_parser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _22134_tokens) {
	if ((_22134_tokens.len() == 1LL)) {
		_1a880e711_pushErr(_self_, _22134_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_22134_tokens[1LL]))._field_Column != ((*(_22134_tokens[0LL]))._field_Column + 1LL))) {
		_1a880e711_pushErr(_self_, _22134_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a7b7e4cc_Directive>(_1a7b7e4cc_Directive{._field_Tag=_22134_tokens[1LL], ._field_Args=_22134_tokens.slice(2LL)});;
}



inline void _1a88104ae_pushDirective(_1a880dc2c_parser* _self_, jule::Ptr<_1a7b7e4cc_Directive> _23633_d) {
	if ((_23633_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5d9e88:;
		if (it != expr_end) {
			jule::Ptr<_1a7b7e4cc_Directive> _24110_pd = *it;
			{
				if (((*((*(_23633_d))._field_Tag))._field_Kind == (*(*(_24110_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_1ac5d9e88:;
			++it;
			goto _iter_begin_1ac5d9e88;
		}
		_iter_end_1ac5d9e88:;
	};
	{ jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_23633_d); };
}



inline jule::Ptr<_1a7b94e3d_ScopeTree> _1a88108aa_buildScope(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _24932_tokens, jule::Ptr<_1a7b69b05_Token> _24954_end) {
	jule::Ptr<_1a7b94e3d_ScopeTree> _2507_s = _1a87ddab9_newScope();;
	(*(_2507_s))._field_End=_24954_end;
	_1a87e069d_scopeParser _2527_sp = _1a87e069d_scopeParser{._field_p=_self_, ._field_s=jule::Ptr<_1a7b94e3d_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1a87ded0c_stmt>>(nullptr), ._field_pos=0};;
	_1a87ec589_build(&_2527_sp, _24932_tokens, &(_2507_s));
	return _2507_s;;
}



inline __jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool _1a8810d61__buildType(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _25939_tokens, jule::I64* _2607_i, jule::Bool _26016_err) {
	__jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1a8820d4e_typeBuilder _2617_tb = _1a8820d4e_typeBuilder{._field_p=_self_, ._field_tokens=(*(_25939_tokens)), ._field_i=_2607_i, ._field_err=_26016_err};;
	__jule_func_result = std::move(_1a8823d63_build(&_2617_tb));
return __jule_func_result;;
}



inline __jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool _1a8811317_buildType(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _27138_tokens, jule::I64* _2727_i, jule::Bool _27216_err) {
	__jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a7b69b05_Token> _2733_token = (*(_27138_tokens))[(*(_2727_i))];;
	jule::Ptr<_1a7b800b0_TypeDecl> _2747_t;
	jule::Bool _27410_ok;
	({
		__jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8810d61__buildType(_self_, _27138_tokens, _2727_i, _27216_err);
		_2747_t = __jule_assign_result.__jule_result_arg0;
		_27410_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_27216_err && (!(_27410_ok)))) {
		_1a880e711_pushErr(_self_, _2733_token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _2747_t;
	__jule_func_result.__jule_result_arg1 = _27410_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1a7b9b939_TypeAliasDecl> _1a8811658_buildTypeAliasDecl(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _28140_tokens) {
	jule::I64 _2827_i = 1LL;;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1a880e711_pushErr(_self_.ptr(), (*(_28140_tokens))[(_2827_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7b9b939_TypeAliasDecl> _2877_tad = jule::new_ptr<_1a7b9b939_TypeAliasDecl>(_1a7b9b939_TypeAliasDecl{._field_Scope=jule::Ptr<_1a7b94e3d_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Token=(*(_28140_tokens))[1LL], ._field_Ident=(*((*(_28140_tokens))[1LL]))._field_Kind, ._field_Kind=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr)});;
	jule::Ptr<_1a7b69b05_Token> _2917_token = (*(_28140_tokens))[_2827_i];;
	if (((*(_2917_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a880e711_pushErr(_self_, _2917_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_2827_i)++;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1a880e711_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	_2917_token=(*(_28140_tokens))[_2827_i];
	if (((*_2917_token.alloc)._field_Id != static_cast<jule::U64>(8LLU))) {
		_1a880e711_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\"", 18)), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	(_2827_i)++;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1a880e711_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	jule::Ptr<_1a7b800b0_TypeDecl> _3127_t;
	jule::Bool _31210_ok;
	({
		__jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8811317_buildType(_self_, _28140_tokens, (&(_2827_i)), true);
		_3127_t = __jule_assign_result.__jule_result_arg0;
		_31210_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_2877_tad))._field_Kind=_3127_t;
	if ((_31210_ok && (_2827_i < (*(_28140_tokens)).len()))) {
		_1a880e711_pushErr(_self_, (*(_28140_tokens))[_2827_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_2877_tad.alloc)._field_Public=_1a7c53c00_IsPub((*_2877_tad.alloc)._field_Ident);
	return _2877_tad;;
}



inline void _1a88119bb_buildVarTypeAndExpr(jule::Ptr<_1a880dc2c_parser> _self_, jule::Ptr<_1a7b97c87_VarDecl>* _32141_v, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _32159_tokens) {
	jule::I64 _3227_i = 0LL;;
	jule::Ptr<_1a7b69b05_Token> _3237_tok = (*(_32159_tokens))[_3227_i];;
	if (((*(_3237_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_3227_i)++;
		if (((_3227_i >= (*(_32159_tokens)).len()) || ((*((*(_32159_tokens))[_3227_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1a880e711_pushErr(_self_.ptr(), _3237_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1a7b800b0_TypeDecl> _3308_t;
		jule::Bool _33011_ok;
		({
			__jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8811317_buildType(_self_, _32159_tokens, (&(_3227_i)), true);
			_3308_t = __jule_assign_result.__jule_result_arg0;
			_33011_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_33011_ok) {
			(*((*(_32141_v))))._field_Kind=_3308_t;
			if ((_3227_i >= (*(_32159_tokens)).len())) {
				return;;
			};
			_3237_tok=(*(_32159_tokens))[_3227_i];
		};
	};
	if (((*_3237_tok.alloc)._field_Id != static_cast<jule::U64>(71LLU))) {
		_1a880e711_pushErr(_self_, _3237_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32141_v))))._field_Setter=_3237_tok;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _3467_exprTokens = (*(_32159_tokens)).slice((_3227_i + 1LL));;
	if ((_3467_exprTokens.len() == 0LL)) {
		_1a880e711_pushErr(_self_, _3237_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32141_v))))._field_Expr=_1a880edb5_buildExpr(_self_, &(_3467_exprTokens));
}



inline void _1a8811d2e_buildVarCommon(jule::Ptr<_1a880dc2c_parser> _self_, jule::Ptr<_1a7b97c87_VarDecl>* _35436_v, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _35453_tokens) {
	(*((*(_35436_v))))._field_Token=_35453_tokens[0LL];
	if (((*((*((*(_35436_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a880e711_pushErr(_self_.ptr(), (*((*(_35436_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_35436_v))))._field_Ident=(*(*((*(_35436_v))))._field_Token.alloc)._field_Kind;
	(*((*(_35436_v))))._field_Public=_1a7c53c00_IsPub((*((*(_35436_v))))._field_Ident);
	(*((*(_35436_v))))._field_Kind=nullptr;
	if ((_35453_tokens.len() > 1LL)) {
		(_35453_tokens).mut_slice(1LL);;
		_1a88119bb_buildVarTypeAndExpr(_self_, _35436_v, &(_35453_tokens));
	};
}



inline void _1a8812192_buildVarBegin(_1a880dc2c_parser* _self_, jule::Ptr<_1a7b97c87_VarDecl>* _37034_v, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _37052_tokens) {
	jule::Ptr<_1a7b69b05_Token> _3713_tok = (*(_37052_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_3713_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1ac606889:;
			{
				(*((*(_37034_v))))._field_Statically=true;
				goto _case_begin_1ac606548;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1ac606548:;
			{
				if (((*(_37052_tokens)).len() == 1LL)) {
					(*(_37052_tokens))=nullptr;
					_1a880e711_pushErr(_self_, _3713_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				((*(_37052_tokens))).mut_slice(1LL);;
				if (((*((*(_37052_tokens))[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_37034_v))))._field_Mutable=true;
					((*(_37052_tokens))).mut_slice(1LL);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1ac6065ae:;
			{
				(*((*(_37034_v))))._field_Constant=true;
				((*(_37052_tokens))).mut_slice(1LL);;
			}
		}
		else {
			_case_begin_1ac60623a:;
			{
				(*(_37052_tokens))=nullptr;
				_1a880e711_pushErr(_self_, _3713_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac6064d2:;
	};
}



inline jule::Ptr<_1a7b97c87_VarDecl> _1a88124d3_buildVar(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _39829_tokens) {
	jule::Ptr<_1a7b97c87_VarDecl> _3997_v = jule::new_ptr<_1a7b97c87_VarDecl>(_1a7b97c87_VarDecl{._field_Scope=jule::Ptr<_1a7b94e3d_ScopeTree>(nullptr), ._field_Token=_39829_tokens[0LL], ._field_Setter=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr)});;
	_1a8812192_buildVarBegin(_self_.ptr(), &(_3997_v), &(_39829_tokens));
	if ((_39829_tokens.len() == 0LL)) {
		return nullptr;;
	};
	if (((*(_39829_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_3997_v))._field_Reference=true;
		if ((_39829_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_39829_tokens).mut_slice(1LL);;
	};
	_1a8811d2e_buildVarCommon(_self_, &(_3997_v), _39829_tokens);
	return _3997_v;;
}



inline jule::Ptr<_1a7b92127_GenericDecl> _1a8812824_buildGeneric(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _41734_tokens) {
	jule::Ptr<_1a7b92127_GenericDecl> _4187_g = jule::new_ptr<_1a7b92127_GenericDecl>(_1a7b92127_GenericDecl{._field_Token=(*(_41734_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Constraint=jule::Ptr<_1a7b91b71_Constraint>(nullptr)});;
	if (((*((*(_4187_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a880e711_pushErr(_self_.ptr(), (*_4187_g.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_4187_g.alloc)._field_Ident=(*(*(_4187_g))._field_Token.alloc)._field_Kind;
	if (((*(_41734_tokens)).len() > 1LL)) {
		if (((*((*(_41734_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_1a880e711_pushErr(_self_, (*(_41734_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_41734_tokens)).len() == 2LL)) {
			_1a880e711_pushErr(_self_, (*(_41734_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1a7b69b05_Token>> _4358_constraintTokens = (*(_41734_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _4368_parts;
		jule::Slice<_1d9144ab5_Log> _43615_errors;
		({
			__jule_tuple_ssx_1a7b69b05_Token__jule_tuple_s_1d9144ab5_Log __jule_assign_result = _1a880cb4e_parts(&(_4358_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_4368_parts = __jule_assign_result.__jule_result_arg0;
			_43615_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_43615_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_43615_errors);
			return nullptr;;
		};
		(*_4187_g.alloc)._field_Constraint=jule::new_ptr<_1a7b91b71_Constraint>(_1a7b91b71_Constraint{._field_Mask=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>>::alloc(0LL, _4368_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b800b0_TypeDecl>(nullptr); __jule_collection; })});
		{
			auto expr = &(_4368_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac614787:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1a7b69b05_Token>> _44216_part = *it;
				{
					jule::I64 _4439_i = 0LL;;
					jule::Ptr<_1a7b800b0_TypeDecl> _4449_kind;
					({
						__jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8811317_buildType(_self_, &(_44216_part), (&(_4439_i)), true);
						_4449_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_4187_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*(_4187_g))._field_Constraint.alloc)._field_Mask,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _4449_kind; __jule_collection; }));
					if ((_4439_i < _44216_part.len())) {
						_1a880e711_pushErr(_self_, _44216_part[_4439_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1ac614787:;
				++it;
				goto _iter_begin_1ac614787;
			}
			_iter_end_1ac614787:;
		};
	};
	return _4187_g;;
}



inline jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>> _1a8812c20_buildGenerics(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _45435_tokens, jule::Ptr<_1a7b69b05_Token>* _45454_errorToken) {
	if (((*(_45435_tokens)).len() == 0LL)) {
		_1a880e711_pushErr(_self_.ptr(), (*(_45454_errorToken)), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _4607_parts;
	jule::Slice<_1d9144ab5_Log> _46014_errors;
	({
		__jule_tuple_ssx_1a7b69b05_Token__jule_tuple_s_1d9144ab5_Log __jule_assign_result = _1a880cb4e_parts(_45435_tokens, static_cast<jule::U64>(5LLU), true);
		_4607_parts = __jule_assign_result.__jule_result_arg0;
		_46014_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_46014_errors.len() > 0LL)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_46014_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>> _4667_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>>::alloc(0LL, _4607_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b92127_GenericDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_4607_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac619d0e:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a7b69b05_Token>> _46715_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>> &__jule_push_dest = _4667_generics; __jule_push_dest.push(_1a8812824_buildGeneric(_self_, &(_46715_part))); };
			}
			_iter_next_1ac619d0e:;
			++it;
			goto _iter_begin_1ac619d0e;
		}
		_iter_end_1ac619d0e:;
	};
	return _4667_generics;;
}



inline jule::Ptr<_1a7b9567a_ParamDecl> _1a8813061_buildSelfParam(_1a880dc2c_parser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _47434_tokens) {
	if ((_47434_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1a7b9567a_ParamDecl> _4797_param = jule::new_ptr<_1a7b9567a_ParamDecl>(_1a7b9567a_ParamDecl{._field_Token=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_4797_param.alloc)._field_Mutable=true;
		if ((_47434_tokens.len() == 1LL)) {
			_1a880e711_pushErr(_self_, _47434_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47434_tokens).mut_slice(1LL);;
	};
	_1daed18b7_StrBuilder _4917_ident = static__1daed1bb4_New(5LL);;
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		_1daeda6b2_WriteStr(&_4917_ident, static_cast<jule::Str>(jule::Str::lit("&", 1)));
		if ((_47434_tokens.len() == 1LL)) {
			_1a880e711_pushErr(_self_, _47434_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47434_tokens).mut_slice(1LL);;
	};
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U64>(24LLU))) {
		_1daeda6b2_WriteStr(&_4917_ident, jule::Str::lit("self", 4));
		(*_4797_param.alloc)._field_Token=_47434_tokens[0LL];
		if ((_47434_tokens.len() != 1LL)) {
			_1a880e711_pushErr(_self_, _47434_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	};
	(*_4797_param.alloc)._field_Ident=_1daedaea9_Str(&_4917_ident);
	return _4797_param;;
}



inline void _1a881347e_paramTypeBegin(_1a880dc2c_parser* _self_, jule::Ptr<_1a7b9567a_ParamDecl>* _51435_param, jule::I64* _51459_i, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _51468_tokens) {
	for (; ((*(_51459_i)) < (*(_51468_tokens)).len()); ((*(_51459_i)))++) {
		{
			jule::Ptr<_1a7b69b05_Token> _5164_token = (*(_51468_tokens))[(*(_51459_i))];;
			if (((*(_5164_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_51435_param))))._field_Variadic) {
				_1a880e711_pushErr(_self_, _5164_token, static_cast<jule::Str>(jule::Str::lit("define is already variadic", 26)), jule::Slice<jule::Any>());
				goto _iter_next_1ac6227a6;
			};
			(*((*(_51435_param))))._field_Variadic=true;
		}
	_iter_next_1ac6227a6:;
	}
	_iter_end_1ac6227a6:;;
}



inline void _1a88137e2_buildParamType(jule::Ptr<_1a880dc2c_parser> _self_, jule::Ptr<_1a7b9567a_ParamDecl>* _52936_param, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _52960_tokens) {
	jule::I64 _5307_i = 0LL;;
	_1a881347e_paramTypeBegin(_self_.ptr(), _52936_param, &(_5307_i), _52960_tokens);
	if ((_5307_i >= (*(_52960_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8811317_buildType(_self_, _52960_tokens, (&(_5307_i)), true);
		(*((*(_52936_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_5307_i < (*(_52960_tokens)).len())) {
		_1a880e711_pushErr(_self_, (*(_52960_tokens))[_5307_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1a8813b55_buildParamBody(jule::Ptr<_1a880dc2c_parser> _self_, jule::Ptr<_1a7b9567a_ParamDecl>* _54236_param, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _54259_tokens) {
	jule::Ptr<_1a7b69b05_Token> _5437_tok = _54259_tokens[0LL];;
	if ((_54259_tokens.len() == 1LL)) {
		(*((*(_54236_param))))._field_Ident=(*(_5437_tok))._field_Kind;
		return;;
	} else if ((_54259_tokens.len() < 3LL)) {
		_1a880e711_pushErr(_self_.ptr(), _5437_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_54259_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_54236_param))))._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1a88137e2_buildParamType(_self_, _54236_param, &(_54259_tokens));
		return;;
	};
	(*((*(_54236_param))))._field_Ident=(*(_5437_tok))._field_Kind;
	(_54259_tokens).mut_slice(2LL);;
	_1a88137e2_buildParamType(_self_, _54236_param, &(_54259_tokens));
}



inline jule::Ptr<_1a7b9567a_ParamDecl> _1a8813e96_buildParam(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _56231_tokens) {
	jule::Ptr<_1a7b9567a_ParamDecl> _5637_param = jule::new_ptr<_1a7b9567a_ParamDecl>(_1a7b9567a_ParamDecl{._field_Token=_56231_tokens[0LL], ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*((*(_5637_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_5637_param.alloc)._field_Mutable=true;
		if ((_56231_tokens.len() == 1LL)) {
			_1a880e711_pushErr(_self_.ptr(), _56231_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_56231_tokens).mut_slice(1LL);;
		(*_5637_param.alloc)._field_Token=_56231_tokens[0LL];
	};
	if ((_56231_tokens.len() >= 3LL)) {
		if (((*(*(_5637_param))._field_Token.alloc)._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_56231_tokens.len() == 1LL)) {
				_1a880e711_pushErr(_self_, _56231_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_56231_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_56231_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*_5637_param.alloc)._field_Reference=true;
				(_56231_tokens).mut_slice(1LL);;
				(*_5637_param.alloc)._field_Token=_56231_tokens[0LL];
			};
		};
	};
	if (((*(*(_5637_param))._field_Token.alloc)._field_Id != static_cast<jule::U64>(1LLU))) {
		(*_5637_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1a88137e2_buildParamType(_self_, &(_5637_param), &(_56231_tokens));
	} else {
		_1a8813b55_buildParamBody(_self_, &(_5637_param), _56231_tokens);
	};
	return _5637_param;;
}



inline void _1a881424e_checkParams(_1a880dc2c_parser* _self_, jule::Slice<jule::Ptr<_1a7b9567a_ParamDecl>>* _60532_params) {
	{
		auto expr = _60532_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac633168:;
		if (it != expr_end) {
			jule::Ptr<_1a7b9567a_ParamDecl> _60615_param = *it;
			{
				if ((_1a7b95a32_IsSelf(_60615_param.ptr()) || ((*_60615_param.alloc)._field_Kind != nullptr))) {
					goto _iter_next_1ac633168;
				};
				if (((*_60615_param.alloc)._field_Token == nullptr)) {
					_1a880e711_pushErr(_self_, (*_60615_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
				} else {
					(*_60615_param.alloc)._field_Kind=jule::new_ptr<_1a7b800b0_TypeDecl>(_1a7b800b0_TypeDecl{._field_Token=(*_60615_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1a7b806ba_IdentTypeDecl>(_1a7b806ba_IdentTypeDecl{._field_Token=(*_60615_param.alloc)._field_Token, ._field_Ident=(*((*_60615_param.alloc)._field_Token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>>(nullptr)}), &__jule_any_type78)});
					(*_60615_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
				};
			}
			_iter_next_1ac633168:;
			++it;
			goto _iter_begin_1ac633168;
		}
		_iter_end_1ac633168:;
	};
}



inline jule::Slice<jule::Ptr<_1a7b9567a_ParamDecl>> _1a881464a_buildParams(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _62533_tokens, jule::Bool _62551_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _6267_parts;
	jule::Slice<_1d9144ab5_Log> _62614_errs;
	({
		__jule_tuple_ssx_1a7b69b05_Token__jule_tuple_s_1d9144ab5_Log __jule_assign_result = _1a880cb4e_parts(_62533_tokens, static_cast<jule::U64>(5LLU), true);
		_6267_parts = __jule_assign_result.__jule_result_arg0;
		_62614_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_62614_errs);
	if ((_6267_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a7b9567a_ParamDecl>> _63211_params = nullptr;;
	if ((_62551_method && (_6267_parts.len() > 0LL))) {
		jule::Ptr<_1a7b9567a_ParamDecl> _6348_param = _1a8813061_buildSelfParam(_self_, _6267_parts[0LL]);;
		if (((_6348_param != nullptr) && _1a7b95a32_IsSelf(_6348_param))) {
			{ jule::Slice<jule::Ptr<_1a7b9567a_ParamDecl>> &__jule_push_dest = _63211_params; __jule_push_dest.push(_6348_param); };
			(_6267_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_6267_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac639c63:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a7b69b05_Token>> _64115_part = *it;
			{
				if ((_64115_part.len() == 0LL)) {
					goto _iter_next_1ac639c63;
				};
				jule::Ptr<_1a7b9567a_ParamDecl> _6458_param = _1a8813e96_buildParam(_self_, _64115_part);;
				if ((_6458_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1a7b9567a_ParamDecl>> &__jule_push_dest = _63211_params; __jule_push_dest.push(_6458_param); };
				};
			}
			_iter_next_1ac639c63:;
			++it;
			goto _iter_begin_1ac639c63;
		}
		_iter_end_1ac639c63:;
	};
	_1a881424e_checkParams(_self_, &(_63211_params));
	return _63211_params;;
}



inline __jule_tuple_x_1a7b87d10_RetTypeDecl__jule_tuple_bool _1a8814a46_buildMultiRetType(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _65539_tokens, jule::I64* _65562_i) {
	__jule_tuple_x_1a7b87d10_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1a7b87d10_RetTypeDecl>(_1a7b87d10_RetTypeDecl{._field_Kind=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1a7b69b05_Token>>(nullptr)});
	((*(_65562_i)))++;
	if (((*(_65562_i)) >= (*(_65539_tokens)).len())) {
		((*(_65562_i)))--;
		({
			__jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8811317_buildType(_self_, _65539_tokens, (&((*(_65562_i)))), false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_65562_i)))--;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _6657_rangeTokens = _1a880c3ce_range(_65562_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _65539_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _6677_parts;
	jule::Slice<_1d9144ab5_Log> _66714_errs;
	({
		__jule_tuple_ssx_1a7b69b05_Token__jule_tuple_s_1d9144ab5_Log __jule_assign_result = _1a880cb4e_parts(&(_6657_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_6677_parts = __jule_assign_result.__jule_result_arg0;
		_66714_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_66714_errs);
	if ((_6677_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>> _6737_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>>::alloc(0LL, _6677_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b800b0_TypeDecl>(nullptr); __jule_collection; });;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b69b05_Token>>::alloc(0LL, _6677_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b69b05_Token>(nullptr); __jule_collection; });
	{
		auto expr = &(_6677_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac640d46:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a7b69b05_Token>> _67515_part = *it;
			{
				if ((_67515_part.len() == 0LL)) {
					goto _iter_next_1ac640d46;
				};
				jule::Ptr<_1a7b69b05_Token> _6798_token = _67515_part[0LL];;
				jule::I64 _6808_offset = 0LL;;
				if ((_67515_part.len() > 1LL)) {
					_6798_token=_67515_part[1LL];
					if (((*(_6798_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_6808_offset=2LL;
						if ((_67515_part.len() < 3LL)) {
							_1a880e711_pushErr(_self_, _6798_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							goto _iter_next_1ac640d46;
						};
					};
				};
				_6798_token=_67515_part[0LL];
				if ((_6808_offset != 2LL)) {
					jule::Ptr<_1a7b69b05_Token> _6969_newToken = jule::new_ptr<_1a7b69b05_Token>((*_6798_token.alloc));;
					(*_6969_newToken.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b69b05_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6969_newToken; __jule_collection; }));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b69b05_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6798_token; __jule_collection; }));
				};
				jule::Ptr<_1a7b800b0_TypeDecl> _7038_tk;
				({
					__jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8811317_buildType(_self_, &(_67515_part), (&(_6808_offset)), true);
					_7038_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_6808_offset < _67515_part.len())) {
					_1a880e711_pushErr(_self_, _67515_part[_6808_offset], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>> &__jule_push_dest = _6737_types; __jule_push_dest.push(_7038_tk); };
			}
			_iter_next_1ac640d46:;
			++it;
			goto _iter_begin_1ac640d46;
		}
		_iter_end_1ac640d46:;
	};
	if ((_6737_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_1a7b800b0_TypeDecl>(_1a7b800b0_TypeDecl{._field_Token=(*(_65539_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1a7b86649_TupleTypeDecl>(_1a7b86649_TupleTypeDecl{._field_Types=_6737_types}), &__jule_any_type77)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_6737_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a7b87d10_RetTypeDecl__jule_tuple_bool _1a8814e42_buildRetType(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _72634_tokens, jule::I64* _72657_i) {
	__jule_tuple_x_1a7b87d10_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1a7b87d10_RetTypeDecl>(_1a7b87d10_RetTypeDecl{._field_Kind=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1a7b69b05_Token>>(nullptr)});
	if (((*(_72657_i)) >= (*(_72634_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1a7b69b05_Token> _7327_token = (*(_72634_tokens))[(*(_72657_i))];;
	{
		auto &_match_expr{ (*(_7327_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1ac649e0a:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1ac649e82:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1ac649ee8:;
			{
				if ((((*(_72657_i)) + 1LL) >= (*(_72634_tokens)).len())) {
					_1a880e711_pushErr(_self_.ptr(), _7327_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_72657_i)))++;
				_7327_token=(*(_72634_tokens))[(*(_72657_i))];
				{
					auto &_match_expr{ (*(_7327_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac64ada6:;
						{
							({
								__jule_tuple_x_1a7b87d10_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a8814a46_buildMultiRetType(_self_, _72634_tokens, _72657_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1ac64c01c:;
						{
							_1a880e711_pushErr(_self_, _7327_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1ac64be73:;
				};
				({
					__jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8811317_buildType(_self_, _72634_tokens, (&((*(_72657_i)))), true);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1ac649d94:;
	};
	((*(_72657_i)))++;
	_1a880e711_pushErr(_self_.ptr(), _7327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1a7b96acc_FnDecl> _1a88153e8_buildFnPrototype(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _76538_tokens, jule::I64* _76561_i, jule::Bool _76569_method) {
	jule::Ptr<_1a7b96acc_FnDecl> _7667_f = jule::new_ptr<_1a7b96acc_FnDecl>(_1a7b96acc_FnDecl{._field_Token=(*(_76538_tokens))[(*(_76561_i))], ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1a7b94e3d_ScopeTree>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>>(nullptr), ._field_Result=jule::Ptr<_1a7b87d10_RetTypeDecl>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7b9567a_ParamDecl>>(nullptr)});;
	if (((*((*(_7667_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*_7667_f.alloc)._field_Statically=true;
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1a880e711_pushErr(_self_.ptr(), (*_7667_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Token=(*(_76538_tokens))[(*(_76561_i))];
	};
	if (((*(*(_7667_f))._field_Token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		(*_7667_f.alloc)._field_Unsafety=true;
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1a880e711_pushErr(_self_, (*_7667_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Token=(*(_76538_tokens))[(*(_76561_i))];
	};
	((*(_76561_i)))++;
	if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
		_1a880e711_pushErr(_self_, (*_7667_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7b69b05_Token> _7993_tok = (*(_76538_tokens))[(*(_76561_i))];;
	if (((*(_7993_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1a880e711_pushErr(_self_, (*_7667_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Ident=(*_7993_tok.alloc)._field_Kind;
	} else {
		(*_7667_f.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
	};
	jule::Ptr<_1a7b69b05_Token> _8113_errorToken = (*(_76538_tokens))[(*(_76561_i))];;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _8127_genericsTokens = _1a880c3ce_range(_76561_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _76538_tokens);;
	if ((_8127_genericsTokens != nullptr)) {
		(*_7667_f.alloc)._field_Generics=_1a8812c20_buildGenerics(_self_, &(_8127_genericsTokens), &(_8113_errorToken));
	};
	if (((*((*(_76538_tokens))[(*(_76561_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_1a880e711_pushErr(_self_, (*(_76538_tokens))[(*(_76561_i))], static_cast<jule::Str>(jule::Str::lit("missing function parentheses", 28)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _8227_paramsToks = _1a880c3ce_range(_76561_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _76538_tokens);;
	if ((_8227_paramsToks.len() > 0LL)) {
		(*_7667_f.alloc)._field_Params=_1a881464a_buildParams(_self_, &(_8227_paramsToks), _76569_method);
	};
	if (((*(_76561_i)) < (*(_76538_tokens)).len())) {
		jule::Ptr<_1a7b69b05_Token> _8284_token = (*(_76538_tokens))[(*(_76561_i))];;
		if (((*(_8284_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*_7667_f.alloc)._field_Exceptional=true;
			((*(_76561_i)))++;
		};
	};
	(*_7667_f.alloc)._field_Public=_1a7c53c00_IsPub((*_7667_f.alloc)._field_Ident);
	({
		__jule_tuple_x_1a7b87d10_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a8814e42_buildRetType(_self_, _76538_tokens, _76561_i);
		(*_7667_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _7667_f;;
}



inline jule::Ptr<_1a7b96acc_FnDecl> _1a881589e_buildFn(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _84229_tokens, jule::Bool _84247_method, jule::Bool _84261_prototype) {
	jule::I64 _8437_i = 0LL;;
	jule::Ptr<_1a7b96acc_FnDecl> _8447_f = _1a88153e8_buildFnPrototype(_self_, _84229_tokens, &(_8437_i), _84247_method);;
	if (_84261_prototype) {
		if ((_8437_i < (*(_84229_tokens)).len())) {
			_1a880e711_pushErr(_self_, (*(_84229_tokens))[(_8437_i + 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		return _8447_f;;
	} else if ((_8447_f == nullptr)) {
		return _8447_f;;
	};
	if ((_8437_i >= (*(_84229_tokens)).len())) {
		_1a880e05c_stop(_self_);
		_1a880e711_pushErr(_self_, (*(_8447_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _8607_blockTokens = _1a880c3ce_range(&(_8437_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _84229_tokens);;
	if ((_8607_blockTokens != nullptr)) {
		(*_8447_f.alloc)._field_Scope=_1a88108aa_buildScope(_self_, &(_8607_blockTokens), (*(_84229_tokens))[(_8437_i - 1LL)]);
		(*((*_8447_f.alloc)._field_Scope))._field_Unsafety=(*_8447_f.alloc)._field_Unsafety;
		if ((_8437_i < (*(_84229_tokens)).len())) {
			_1a880e711_pushErr(_self_, (*(_84229_tokens))[_8437_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	} else {
		_1a880e05c_stop(_self_);
		_1a880e711_pushErr(_self_, (*_8447_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _8447_f;;
}



inline jule::Slice<jule::Ptr<_1a7b69b05_Token>> _1a8815be0_getUseDeclSelectors(_1a880dc2c_parser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _87639_tokens) {
	jule::I64 _8777_i = 0LL;;
	_87639_tokens=_1a880c3ce_range(&(_8777_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_87639_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _8797_parts;
	jule::Slice<_1d9144ab5_Log> _87914_errs;
	({
		__jule_tuple_ssx_1a7b69b05_Token__jule_tuple_s_1d9144ab5_Log __jule_assign_result = _1a880cb4e_parts(&(_87639_tokens), static_cast<jule::U64>(5LLU), true);
		_8797_parts = __jule_assign_result.__jule_result_arg0;
		_87914_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_87914_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_87914_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _8857_selectors = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b69b05_Token>>::alloc(0LL, _8797_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b69b05_Token>(nullptr); __jule_collection; });;
	{
		auto expr = &(_8797_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac666b08:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a7b69b05_Token>> _88615_part = *it;
			{
				if ((_88615_part.len() > 1LL)) {
					_1a880e711_pushErr(_self_, _88615_part[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a7b69b05_Token> _8908_tok = _88615_part[0LL];;
				if ((((*(_8908_tok))._field_Id != static_cast<jule::U64>(1LLU)) && ((*_8908_tok.alloc)._field_Id != static_cast<jule::U64>(24LLU)))) {
					_1a880e711_pushErr(_self_, _8908_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
					goto _iter_next_1ac666b08;
				};
				{ jule::Slice<jule::Ptr<_1a7b69b05_Token>> &__jule_push_dest = _8857_selectors; __jule_push_dest.push(_8908_tok); };
			}
			_iter_next_1ac666b08:;
			++it;
			goto _iter_begin_1ac666b08;
		}
		_iter_end_1ac666b08:;
	};
	return _8857_selectors;;
}



inline void _1a8816053_buildBindUseDecl(_1a880dc2c_parser* _self_, jule::Ptr<_1a7b9d023_UseDecl>* _90137_decl, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _90154_tokens) {
	if (((*(_90154_tokens)).len() > 1LL)) {
		_1a880e711_pushErr(_self_, (*(_90154_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a7b69b05_Token> _9053_token = (*(_90154_tokens))[0LL];;
	if ((((*(_9053_token))._field_Id != static_cast<jule::U64>(4LLU)) || (((*_9053_token.alloc)._field_Kind[0LL] != '`') && ((*_9053_token.alloc)._field_Kind[0LL] != '\"')))) {
		_1a880e711_pushErr(_self_, _9053_token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_90137_decl))))._field_Binded=true;
	(*((*(_90137_decl))))._field_LinkPath=(*_9053_token.alloc)._field_Kind.slice(1LL, ((*_9053_token.alloc)._field_Kind.len() - 1LL));
}



inline jule::Str _1a8816394_useDeclTokstoa(_1a880dc2c_parser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _91431_tokens) {
	jule::I64 _9157_n = 0LL;;
	{
		auto expr = _91431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac66e55b:;
		if (it != expr_end) {
			jule::Ptr<_1a7b69b05_Token> *_91610_token = it;
			{
				if ((((*((*(_91610_token))))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(*(_91610_token)).alloc)._field_Id != static_cast<jule::U64>(19LLU)))) {
					_1a880e711_pushErr(_self_, (*(_91610_token)), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				_9157_n+=(*(*(_91610_token)).alloc)._field_Kind.len();
			}
			_iter_next_1ac66e55b:;
			++it;
			goto _iter_begin_1ac66e55b;
		}
		_iter_end_1ac66e55b:;
	};
	_1daed18b7_StrBuilder _9227_s = static__1daed1bb4_New(_9157_n);;
	{
		auto expr = _91431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac66e292:;
		if (it != expr_end) {
			jule::Ptr<_1a7b69b05_Token> *_92310_token = it;
			{
				_1daeda6b2_WriteStr(&_9227_s, (*((*(_92310_token))))._field_Kind);
			}
			_iter_next_1ac66e292:;
			++it;
			goto _iter_begin_1ac66e292;
		}
		_iter_end_1ac66e292:;
	};
	return _1daedaea9_Str(&_9227_s);;
}



inline void _1a8816707_buildStdUseDecl(_1a880dc2c_parser* _self_, jule::Ptr<_1a7b9d023_UseDecl>* _92936_decl, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _92956_tokens) {
	(*((*(_92936_decl))))._field_Std=true;
	jule::Ptr<_1a7b69b05_Token> _9327_token = _92956_tokens[0LL];;
	if ((_92956_tokens.len() < 3LL)) {
		_1a880e711_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(_92956_tokens).mut_slice(2LL);;
	_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_9327_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1ac6740ee:;
			{
				_1a880e711_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1ac674176:;
			{
				jule::Slice<jule::Ptr<_1a7b69b05_Token>> _94512_selectors = nullptr;;
				({
					__jule_tuple_sx_1a7b69b05_Token__jule_tuple_sx_1a7b69b05_Token __jule_assign_result = _1a880c698_rangeLast(&(_92956_tokens));
					_92956_tokens = __jule_assign_result.__jule_result_arg0;
					_94512_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_92936_decl))))._field_Selected=_1a8815be0_getUseDeclSelectors(_self_, _94512_selectors);
				if ((_92956_tokens.len() == 0LL)) {
					_1a880e711_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
				if (((*(_9327_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a880e711_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1a880e711_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac6741dc:;
			{
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1a880e711_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
				if (((*(_9327_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a880e711_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1a880e711_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_92936_decl))))._field_Full=true;
			}
		}
		_match_end_1ac674088:;
	};
	if (((_92956_tokens.len() == 1LL) && ((*(_92956_tokens[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*((*(_92936_decl))))._field_LinkPath=jule::Str::lit("std::unsafe", 11);
	} else {
		(*((*(_92936_decl))))._field_LinkPath=(jule::Str::lit("std::", 5) + _1a8816394_useDeclTokstoa(_self_, &(_92956_tokens)));
	};
}



inline void _1a8816a6a_buildIdentUseDecl(_1a880dc2c_parser* _self_, jule::Ptr<_1a7b9d023_UseDecl>* _98738_decl, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _98758_tokens) {
	(*((*(_98738_decl))))._field_Std=false;
	jule::Ptr<_1a7b69b05_Token> _9907_token = _98758_tokens[(_98758_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_9907_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1ac67d3d3:;
			{
				_1a880e711_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1ac67e2d5:;
			{
				jule::Slice<jule::Ptr<_1a7b69b05_Token>> _99612_selectors = nullptr;;
				({
					__jule_tuple_sx_1a7b69b05_Token__jule_tuple_sx_1a7b69b05_Token __jule_assign_result = _1a880c698_rangeLast(&(_98758_tokens));
					_98758_tokens = __jule_assign_result.__jule_result_arg0;
					_99612_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_98738_decl))))._field_Selected=_1a8815be0_getUseDeclSelectors(_self_, _99612_selectors);
				if ((_98758_tokens.len() == 0LL)) {
					_1a880e711_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				_9907_token=_98758_tokens[(_98758_tokens.len() - 1LL)];
				if (((*(_9907_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a880e711_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1a880e711_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac67e34b:;
			{
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1a880e711_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				_9907_token=_98758_tokens[(_98758_tokens.len() - 1LL)];
				if (((*(_9907_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a880e711_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1a880e711_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_98738_decl))))._field_Full=true;
			}
		}
		_match_end_1ac67e1a3:;
	};
	(*((*(_98738_decl))))._field_LinkPath=_1a8816394_useDeclTokstoa(_self_, &(_98758_tokens));
}



inline void _1a8816dcd_parseUseDecl(_1a880dc2c_parser* _self_, jule::Ptr<_1a7b9d023_UseDecl>* _103533_decl, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _103553_tokens) {
	if ((*((*(_103533_decl))))._field_Binded) {
		_1a8816053_buildBindUseDecl(_self_, _103533_decl, &(_103553_tokens));
		return;;
	};
	jule::Ptr<_1a7b69b05_Token> _10417_token = _103553_tokens[0LL];;
	if (((*(_10417_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a880e711_pushErr(_self_, _10417_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return;;
	};
	if (((_103553_tokens.len() > 2LL) && ((*(_103553_tokens[1LL]))._field_Id == static_cast<jule::U64>(9LLU)))) {
		(*((*(_103533_decl))))._field_Alias=(*_10417_token.alloc)._field_Kind;
		if (((*(_103553_tokens[2LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1a880e711_pushErr(_self_, _10417_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
			return;;
		};
		(_103553_tokens).mut_slice(2LL);;
		_10417_token=_103553_tokens[0LL];
	};
	;
	{
		
		if ((*(_10417_token))._field_Kind.equal("std", 3)) {
			_case_begin_1ac68c557:;
			{
				_1a8816707_buildStdUseDecl(_self_, _103533_decl, _103553_tokens);
			}
		}
		else {
			_case_begin_1ac68bd2b:;
			{
				_1a8816a6a_buildIdentUseDecl(_self_, _103533_decl, _103553_tokens);
			}
		}
		_match_end_1ac68bcb5:;
	};
}



inline jule::Ptr<_1a7b9d023_UseDecl> _1a88172c9_buildUseDecl(_1a880dc2c_parser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _106932_tokens, jule::Bool _106950_binded) {
	jule::Ptr<_1a7b9d023_UseDecl> _10707_decl = jule::new_ptr<_1a7b9d023_UseDecl>(_1a7b9d023_UseDecl{._field_Token=_106932_tokens[0LL], ._field_LinkPath=jule::Str(), ._field_Alias=jule::Str(), ._field_Full=false, ._field_Selected=jule::Slice<jule::Ptr<_1a7b69b05_Token>>(nullptr), ._field_Binded=_106950_binded, ._field_Std=false});;
	if ((_106932_tokens.len() < 2LL)) {
		_1a880e711_pushErr(_self_, (*(_10707_decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing path of use statement", 29)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_106932_tokens).mut_slice(1LL);;
	_1a8816dcd_parseUseDecl(_self_, &(_10707_decl), _106932_tokens);
	return _10707_decl;;
}



inline jule::Ptr<_1a7b800b0_TypeDecl> _1a88176c5_buildTypeEnumItemKind(jule::Ptr<_1a880dc2c_parser> _self_, jule::I64* _108343_i, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _108356_tokens) {
	jule::I64 _10847_braceN = 0LL;;
	jule::I64 _10853_exprStart = (*(_108343_i));;
	for (; ((*(_108343_i)) < (*(_108356_tokens)).len()); ((*(_108343_i)))++) {
		{
			jule::Ptr<_1a7b69b05_Token> _10874_t = (*(_108356_tokens))[(*(_108343_i))];;
			{
				auto &_match_expr{ (*(_10874_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ac69136e:;
					{
						(_10847_braceN)++;
						goto _iter_next_1ac690802;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ac69169e:;
					{
						(_10847_braceN)--;
					}
				}
				_match_end_1ac6913e6:;
			};
			if ((_10847_braceN > 0LL)) {
				goto _iter_next_1ac690802;
			};
			if ((((*(_10874_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_108343_i)) + 1LL) >= (*(_108356_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1a7b69b05_Token>> _110313_kindTokens = nullptr;;
				if (((*_10874_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_110313_kindTokens=(*(_108356_tokens)).slice(_10853_exprStart, (*(_108343_i)));
				} else {
					_110313_kindTokens=(*(_108356_tokens)).slice(_10853_exprStart);
				};
				jule::I64 _11099_j = 0LL;;
				jule::Ptr<_1a7b800b0_TypeDecl> _11109_kind;
				({
					__jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8811317_buildType(_self_, &(_110313_kindTokens), (&(_11099_j)), true);
					_11109_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_11099_j < _110313_kindTokens.len())) {
					_1a880e711_pushErr(_self_, _110313_kindTokens[_11099_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				return _11109_kind;;
			};
		}
	_iter_next_1ac690802:;
	}
	_iter_end_1ac690802:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1a7b9e8b5_TypeEnumItemDecl>> _1a8817a16_buildTypeEnumItems(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _112040_tokens) {
	jule::Slice<jule::Ptr<_1a7b9e8b5_TypeEnumItemDecl>> _11217_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b9e8b5_TypeEnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b9e8b5_TypeEnumItemDecl>(nullptr); __jule_collection; });;
	jule::I64 _11227_i = 0LL;;
	for (; (_11227_i < (*(_112040_tokens)).len()); (_11227_i)++) {
		{
			jule::Ptr<_1a7b69b05_Token> _11248_t = (*(_112040_tokens))[_11227_i];;
			jule::Ptr<_1a7b9e8b5_TypeEnumItemDecl> _11258_item = jule::new_ptr<_1a7b9e8b5_TypeEnumItemDecl>(_1a7b9e8b5_TypeEnumItemDecl{._field_Token=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr)});;
			(*_11258_item.alloc)._field_Token=_11248_t;
			if ((((*((*_11258_item.alloc)._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_112040_tokens)).len() - _11227_i) > 2LL))) {
				_11248_t=(*(_112040_tokens))[(_11227_i + 1LL)];
				if (((*(_11248_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*_11258_item.alloc)._field_Ident=(*(*(_11258_item))._field_Token.alloc)._field_Kind;
					_11227_i+=2LL;
					if (((_11227_i >= (*(_112040_tokens)).len()) || ((*((*(_112040_tokens))[_11227_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1a880e711_pushErr(_self_.ptr(), _11248_t, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
						goto _iter_next_1ac69664e;
					};
				};
			};
			(*_11258_item.alloc)._field_Kind=_1a88176c5_buildTypeEnumItemKind(_self_, &(_11227_i), _112040_tokens);
			{ jule::Slice<jule::Ptr<_1a7b9e8b5_TypeEnumItemDecl>> &__jule_push_dest = _11217_items; __jule_push_dest.push(_11258_item); };
		}
	_iter_next_1ac69664e:;
	}
	_iter_end_1ac69664e:;;
	return _11217_items;;
}



inline jule::Ptr<_1a7ba0025_TypeEnumDecl> _1a8817d57_buildTypeEnumDecl(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _114439_tokens) {
	jule::I64 _11457_i = 1LL;;
	jule::Ptr<_1a7ba0025_TypeEnumDecl> _11467_e = jule::new_ptr<_1a7ba0025_TypeEnumDecl>(_1a7ba0025_TypeEnumDecl{._field_Token=(*(_114439_tokens))[_11457_i], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Items=jule::Slice<jule::Ptr<_1a7b9e8b5_TypeEnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1a7b69b05_Token>(nullptr)});;
	if (((*((*(_11467_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a880e711_pushErr(_self_.ptr(), (*_11467_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_11467_e.alloc)._field_Ident=(*(*(_11467_e))._field_Token.alloc)._field_Kind;
	_11457_i+=3LL;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _11567_itemTokens = _1a880c3ce_range(&(_11457_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _114439_tokens);;
	if ((_11567_itemTokens == nullptr)) {
		_1a880e05c_stop(_self_);
		_1a880e711_pushErr(_self_, (*_11467_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11467_e;;
	} else if ((_11457_i < (*(_114439_tokens)).len())) {
		_1a880e711_pushErr(_self_, (*(_114439_tokens))[_11457_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_11467_e.alloc)._field_Public=_1a7c53c00_IsPub((*_11467_e.alloc)._field_Ident);
	(*_11467_e.alloc)._field_End=(*(_114439_tokens))[(_11457_i - 1LL)];
	(*_11467_e.alloc)._field_Items=_1a8817a16_buildTypeEnumItems(_self_, &(_11567_itemTokens));
	return _11467_e;;
}



inline jule::Ptr<_1a7b89251_Expr> _1a8818253_buildEnumItemExpr(jule::Ptr<_1a880dc2c_parser> _self_, jule::I64* _117139_i, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _117152_tokens) {
	jule::I64 _11727_braceN = 0LL;;
	jule::I64 _11733_exprStart = (*(_117139_i));;
	for (; ((*(_117139_i)) < (*(_117152_tokens)).len()); ((*(_117139_i)))++) {
		{
			jule::Ptr<_1a7b69b05_Token> _11754_t = (*(_117152_tokens))[(*(_117139_i))];;
			{
				auto &_match_expr{ (*(_11754_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ac6a4a25:;
					{
						(_11727_braceN)++;
						goto _iter_next_1ac6a3ea8;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ac6a4d55:;
					{
						(_11727_braceN)--;
					}
				}
				_match_end_1ac6a4a9c:;
			};
			if ((_11727_braceN > 0LL)) {
				goto _iter_next_1ac6a3ea8;
			};
			if ((((*(_11754_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_117139_i)) + 1LL) >= (*(_117152_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1a7b69b05_Token>> _119113_exprTokens = nullptr;;
				if (((*_11754_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_119113_exprTokens=(*(_117152_tokens)).slice(_11733_exprStart, (*(_117139_i)));
				} else {
					_119113_exprTokens=(*(_117152_tokens)).slice(_11733_exprStart);
				};
				return _1a880edb5_buildExpr(_self_, &(_119113_exprTokens));;
			};
		}
	_iter_next_1ac6a3ea8:;
	}
	_iter_end_1ac6a3ea8:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1a7b9d4c9_EnumItemDecl>> _1a8818594_buildEnumItems(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _120336_tokens) {
	jule::Slice<jule::Ptr<_1a7b9d4c9_EnumItemDecl>> _12047_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b9d4c9_EnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b9d4c9_EnumItemDecl>(nullptr); __jule_collection; });;
	jule::I64 _12057_i = 0LL;;
	for (; (_12057_i < (*(_120336_tokens)).len()); (_12057_i)++) {
		{
			jule::Ptr<_1a7b69b05_Token> _12078_t = (*(_120336_tokens))[_12057_i];;
			jule::Ptr<_1a7b9d4c9_EnumItemDecl> _12088_item = jule::new_ptr<_1a7b9d4c9_EnumItemDecl>(_1a7b9d4c9_EnumItemDecl{._field_Token=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr)});;
			(*_12088_item.alloc)._field_Token=_12078_t;
			if (((*((*_12088_item.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_1a880e711_pushErr(_self_.ptr(), (*_12088_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
			};
			(*_12088_item.alloc)._field_Ident=(*(*(_12088_item))._field_Token.alloc)._field_Kind;
			if ((((_12057_i + 1LL) >= (*(_120336_tokens)).len()) || ((*((*(_120336_tokens))[(_12057_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_12057_i + 1LL) < (*(_120336_tokens)).len())) {
					(_12057_i)++;
				};
				{ jule::Slice<jule::Ptr<_1a7b9d4c9_EnumItemDecl>> &__jule_push_dest = _12047_items; __jule_push_dest.push(_12088_item); };
				goto _iter_next_1ac6a88d6;
			};
			(_12057_i)++;
			_12078_t=(*(_120336_tokens))[_12057_i];
			(_12057_i)++;
			if (((*(_12078_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_1a880e711_pushErr(_self_, _12078_t, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\" for assignment", 33)), jule::Slice<jule::Any>());
				goto _iter_next_1ac6a88d6;
			};
			if (((_12057_i >= (*(_120336_tokens)).len()) || ((*((*(_120336_tokens))[_12057_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1a880e711_pushErr(_self_, _12078_t, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
				goto _iter_next_1ac6a88d6;
			};
			(*_12088_item.alloc)._field_Expr=_1a8818253_buildEnumItemExpr(_self_, &(_12057_i), _120336_tokens);
			{ jule::Slice<jule::Ptr<_1a7b9d4c9_EnumItemDecl>> &__jule_push_dest = _12047_items; __jule_push_dest.push(_12088_item); };
		}
	_iter_next_1ac6a88d6:;
	}
	_iter_end_1ac6a88d6:;;
	return _12047_items;;
}



inline jule::Ptr<_1a7b9e08a_EnumDecl> _1a88188d5_buildEnumDecl(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _124035_tokens) {
	if (((*(_124035_tokens)).len() < 3LL)) {
		_1a880e711_pushErr(_self_.ptr(), (*(_124035_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7b9e08a_EnumDecl> _12457_e = jule::new_ptr<_1a7b9e08a_EnumDecl>(_1a7b9e08a_EnumDecl{._field_Token=(*(_124035_tokens))[1LL], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Items=jule::Slice<jule::Ptr<_1a7b9d4c9_EnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1a7b69b05_Token>(nullptr)});;
	if (((*((*(_12457_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a880e711_pushErr(_self_, (*_12457_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_12457_e.alloc)._field_Ident=(*(*(_12457_e))._field_Token.alloc)._field_Kind;
	jule::I64 _12537_i = 2LL;;
	if (((*((*(_124035_tokens))[_12537_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_12537_i)++;
		if ((_12537_i >= (*(_124035_tokens)).len())) {
			_1a880e711_pushErr(_self_, (*(_124035_tokens))[(_12537_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return _12457_e;;
		};
		({
			__jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8811317_buildType(_self_, _124035_tokens, (&(_12537_i)), true);
			(*_12457_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_12537_i >= (*(_124035_tokens)).len())) {
			_1a880e05c_stop(_self_);
			_1a880e711_pushErr(_self_, (*_12457_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
			_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
			return _12457_e;;
		};
	} else {
		(*_12457_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _12707_itemTokens = _1a880c3ce_range(&(_12537_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _124035_tokens);;
	if ((_12707_itemTokens == nullptr)) {
		_1a880e05c_stop(_self_);
		_1a880e711_pushErr(_self_, (*_12457_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _12457_e;;
	} else if ((_12537_i < (*(_124035_tokens)).len())) {
		_1a880e711_pushErr(_self_, (*(_124035_tokens))[_12537_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_12457_e.alloc)._field_Public=_1a7c53c00_IsPub((*_12457_e.alloc)._field_Ident);
	(*_12457_e.alloc)._field_End=(*(_124035_tokens))[(_12537_i - 1LL)];
	(*_12457_e.alloc)._field_Items=_1a8818594_buildEnumItems(_self_, &(_12707_itemTokens));
	return _12457_e;;
}



inline jule::Any _1a8818c26_buildNodeEnumDecl(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _128539_tokens) {
	if ((((*(_128539_tokens)).len() > 3LL) && ((*((*(_128539_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_128539_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1a8817d57_buildTypeEnumDecl(_self_, _128539_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1a88188d5_buildEnumDecl(_self_, _128539_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1a7ba02de_FieldDecl> _1a8819067_buildField(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _129431_tokens) {
	jule::Ptr<_1a7ba02de_FieldDecl> _12957_f = jule::new_ptr<_1a7ba02de_FieldDecl>(_1a7ba02de_FieldDecl{._field_Token=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_Public=false, ._field_Mutable=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Default=jule::Ptr<_1a7b89251_Expr>(nullptr)});;
	(*_12957_f.alloc)._field_Mutable=((*(_129431_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*_12957_f.alloc)._field_Mutable) {
		if ((_129431_tokens.len() == 1LL)) {
			_1a880e711_pushErr(_self_.ptr(), _129431_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129431_tokens).mut_slice(1LL);;
	};
	(*_12957_f.alloc)._field_Token=_129431_tokens[0LL];
	if (((*((*_12957_f.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a880e711_pushErr(_self_, (*_12957_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_12957_f.alloc)._field_Ident=(*(*(_12957_f))._field_Token.alloc)._field_Kind;
	if ((_129431_tokens.len() == 1LL)) {
		_1a880e711_pushErr(_self_, _129431_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_129431_tokens.len() < 3LL) || ((*(_129431_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1a880e711_pushErr(_self_, _129431_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_129431_tokens).mut_slice(2LL);;
	jule::I64 _13237_i = 0LL;;
	({
		__jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8811317_buildType(_self_, &(_129431_tokens), (&(_13237_i)), true);
		(*_12957_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_13237_i < _129431_tokens.len())) {
		jule::Ptr<_1a7b69b05_Token> _13264_token = _129431_tokens[_13237_i];;
		if (((*(_13264_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1a880e711_pushErr(_self_, _129431_tokens[_13237_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13237_i)++;
		if ((_13237_i >= _129431_tokens.len())) {
			_1a880e711_pushErr(_self_, _13264_token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129431_tokens).mut_slice(_13237_i);;
		(*_12957_f.alloc)._field_Default=_1a880edb5_buildExpr(_self_, &(_129431_tokens));
	};
	(*_12957_f.alloc)._field_Public=_1a7c53c00_IsPub((*_12957_f.alloc)._field_Ident);
	return _12957_f;;
}



inline jule::Slice<jule::Ptr<_1a7ba02de_FieldDecl>> _1a88193a8_buildStructDeclFields(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _134342_tokens) {
	jule::Slice<jule::Ptr<_1a7ba02de_FieldDecl>> _134411_fields = nullptr;;
	jule::Slice<jule::Ptr<_1a87ded0c_stmt>> _13457_stmts = _1a87e01b4_splitStmts(&(_134342_tokens));;
	{
		auto expr = &(_13457_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6ca7d7:;
		if (it != expr_end) {
			jule::Ptr<_1a87ded0c_stmt> _134615_stmt = *it;
			{
				_134342_tokens=(*(_134615_stmt))._field_tokens;
				jule::Ptr<_1a7ba02de_FieldDecl> _13488_f = _1a8819067_buildField(_self_, _134342_tokens);;
				{ jule::Slice<jule::Ptr<_1a7ba02de_FieldDecl>> &__jule_push_dest = _134411_fields; __jule_push_dest.push(_13488_f); };
			}
			_iter_next_1ac6ca7d7:;
			++it;
			goto _iter_begin_1ac6ca7d7;
		}
		_iter_end_1ac6ca7d7:;
	};
	return _134411_fields;;
}



inline jule::Ptr<_1a7ba0bd5_StructDecl> _1a88196e9_buildStructDecl(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _135437_tokens) {
	if (((*(_135437_tokens)).len() < 3LL)) {
		_1a880e711_pushErr(_self_.ptr(), (*(_135437_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _13607_i = 1LL;;
	jule::Ptr<_1a7ba0bd5_StructDecl> _13617_s = jule::new_ptr<_1a7ba0bd5_StructDecl>(_1a7ba0bd5_StructDecl{._field_Token=(*(_135437_tokens))[_13607_i], ._field_End=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Fields=jule::Slice<jule::Ptr<_1a7ba02de_FieldDecl>>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Directives=jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>>(nullptr)});;
	if (((*((*(_13617_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a880e711_pushErr(_self_, (*_13617_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_13607_i)++;
	if ((_13607_i >= (*(_135437_tokens)).len())) {
		_1a880e711_pushErr(_self_, (*(_135437_tokens))[_13607_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	(*_13617_s.alloc)._field_Ident=(*(*(_13617_s))._field_Token.alloc)._field_Kind;
	jule::Ptr<_1a7b69b05_Token> _13753_errorToken = (*(_135437_tokens))[_13607_i];;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _13767_genericsTokens = _1a880c3ce_range(&(_13607_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _135437_tokens);;
	if ((_13767_genericsTokens != nullptr)) {
		(*_13617_s.alloc)._field_Generics=_1a8812c20_buildGenerics(_self_, &(_13767_genericsTokens), &(_13753_errorToken));
	};
	if ((_13607_i >= (*(_135437_tokens)).len())) {
		_1a880e711_pushErr(_self_, (*(_135437_tokens))[(_13607_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _13867_bodyTokens = _1a880c3ce_range(&(_13607_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _135437_tokens);;
	if ((_13867_bodyTokens == nullptr)) {
		_1a880e05c_stop(_self_);
		_1a880e711_pushErr(_self_, (*_13617_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	if ((_13607_i < (*(_135437_tokens)).len())) {
		_1a880e711_pushErr(_self_, (*(_135437_tokens))[_13607_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_13617_s.alloc)._field_Public=_1a7c53c00_IsPub((*_13617_s.alloc)._field_Ident);
	(*_13617_s.alloc)._field_Fields=_1a88193a8_buildStructDeclFields(_self_, _13867_bodyTokens);
	(*_13617_s.alloc)._field_End=(*(_135437_tokens))[(_13607_i - 1LL)];
	return _13617_s;;
}



inline void _1a88199a2_checkMethodReceiver(_1a880dc2c_parser* _self_, jule::Ptr<_1a7b96acc_FnDecl>* _140236_f) {
	if ((*((*(_140236_f))))._field_Statically) {
		if ((((*((*(_140236_f))))._field_Params.len() > 0LL) && _1a7b95a32_IsSelf((*((*(_140236_f))))._field_Params[0LL].ptr()))) {
			_1a880e711_pushErr(_self_, (*((*(_140236_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static functions cannot have receiver parameter", 47)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_140236_f))))._field_Params.len() == 0LL)) {
		_1a880e711_pushErr(_self_, (*((*(_140236_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7b9567a_ParamDecl> _14143_param = (*((*(_140236_f))))._field_Params[0LL];;
	if ((!(_1a7b95a32_IsSelf(_14143_param.ptr())))) {
		_1a880e711_pushErr(_self_, (*((*(_140236_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a8819d15_buildTraitBody(jule::Ptr<_1a880dc2c_parser> _self_, jule::Ptr<_1a7ba1422_TraitDecl>* _142136_t, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _142155_tokens) {
	jule::Slice<jule::Ptr<_1a87ded0c_stmt>> _14227_stmts = _1a87e01b4_splitStmts(&(_142155_tokens));;
	{
		auto expr = &(_14227_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6dc145:;
		if (it != expr_end) {
			jule::Ptr<_1a87ded0c_stmt> _142315_stmt = *it;
			{
				_142155_tokens=(*(_142315_stmt))._field_tokens;
				if ((_142155_tokens.len() == 0LL)) {
					goto _iter_next_1ac6dc145;
				};
				{
					auto &_match_expr{ (*(_142155_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1ac6e0cb4:;
						{
							jule::Ptr<_1a7b96acc_FnDecl> _14309_f = _1a881589e_buildFn(_self_, &(_142155_tokens), true, true);;
							if ((_14309_f == nullptr)) {
								goto _match_end_1ac6dd410;
							};
							_1a88199a2_checkMethodReceiver(_self_, &(_14309_f));
							if (((*(_14309_f))._field_Generics.len() > 0LL)) {
								_1a880e711_pushErr(_self_, (*(_14309_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait methods cannot have generics", 34)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1a7b96acc_FnDecl>> &__jule_push_dest = (*((*(_142136_t))))._field_Methods; __jule_push_dest.push(_14309_f); };
						}
					}
					else {
						_case_begin_1ac6dcc06:;
						{
							jule::I64 _14409_i = 0LL;;
							jule::Ptr<_1a7b800b0_TypeDecl> _14419_ti;
							jule::Bool _144113_ok;
							({
								__jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8811317_buildType(_self_, &(_142155_tokens), (&(_14409_i)), true);
								_14419_ti = __jule_assign_result.__jule_result_arg0;
								_144113_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_144113_ok))) {
								goto _match_end_1ac6dd410;
							};
							if ((_14409_i < _142155_tokens.len())) {
								_1a880e711_pushErr(_self_, _142155_tokens[_14409_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>> &__jule_push_dest = (*((*(_142136_t))))._field_Inherits; __jule_push_dest.push(_14419_ti); };
						}
					}
					_match_end_1ac6dd410:;
				};
			}
			_iter_next_1ac6dc145:;
			++it;
			goto _iter_begin_1ac6dc145;
		}
		_iter_end_1ac6dc145:;
	};
}



inline jule::Ptr<_1a7ba1422_TraitDecl> _1a881a156_buildTraitDecl(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _145336_tokens) {
	if (((*(_145336_tokens)).len() < 3LL)) {
		_1a880e711_pushErr(_self_.ptr(), (*(_145336_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7ba1422_TraitDecl> _14587_t = jule::new_ptr<_1a7ba1422_TraitDecl>(_1a7ba1422_TraitDecl{._field_Token=(*(_145336_tokens))[1LL], ._field_End=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Public=false, ._field_Inherits=jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1a7b96acc_FnDecl>>(nullptr)});;
	if (((*((*(_14587_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a880e711_pushErr(_self_, (*_14587_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_14587_t.alloc)._field_Ident=(*(*(_14587_t))._field_Token.alloc)._field_Kind;
	jule::I64 _14667_i = 2LL;;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _14677_bodyTokens = _1a880c3ce_range(&(_14667_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _145336_tokens);;
	if ((_14677_bodyTokens == nullptr)) {
		_1a880e05c_stop(_self_);
		_1a880e711_pushErr(_self_, (*_14587_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_14667_i < (*(_145336_tokens)).len())) {
		_1a880e711_pushErr(_self_, (*(_145336_tokens))[_14667_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_14587_t.alloc)._field_Public=_1a7c53c00_IsPub((*_14587_t.alloc)._field_Ident);
	_1a8819d15_buildTraitBody(_self_, &(_14587_t), _14677_bodyTokens);
	(*_14587_t.alloc)._field_End=(*(_145336_tokens))[(_14667_i - 1LL)];
	return _14587_t;;
}



inline jule::Ptr<_1a7b96acc_FnDecl> _1a881a497_buildBindFn(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _148332_tokens) {
	(_148332_tokens).mut_slice(1LL);;
	jule::Ptr<_1a7b96acc_FnDecl> _14857_f = _1a881589e_buildFn(_self_, &(_148332_tokens), false, true);;
	if ((_14857_f != nullptr)) {
		(*_14857_f.alloc)._field_Public=false;
		(*_14857_f.alloc)._field_Binded=true;
	};
	return _14857_f;;
}



inline jule::Ptr<_1a7b97c87_VarDecl> _1a881a7d8_buildBindVar(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _149333_tokens) {
	(_149333_tokens).mut_slice(1LL);;
	jule::Ptr<_1a7b97c87_VarDecl> _14957_v = _1a88124d3_buildVar(_self_, _149333_tokens);;
	if ((_14957_v != nullptr)) {
		(*_14957_v.alloc)._field_Public=false;
		(*_14957_v.alloc)._field_Binded=true;
		if (((*_14957_v.alloc)._field_Expr != nullptr)) {
			_1a880e711_pushErr(_self_, (*_14957_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot have expression", 39)), jule::Slice<jule::Any>());
		};
	};
	return _14957_v;;
}



inline jule::Ptr<_1a7ba0bd5_StructDecl> _1a881ab29_buildBindStruct(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _150636_tokens) {
	(_150636_tokens).mut_slice(1LL);;
	jule::Ptr<_1a7ba0bd5_StructDecl> _15087_s = _1a88196e9_buildStructDecl(_self_, &(_150636_tokens));;
	if ((_15087_s != nullptr)) {
		(*_15087_s.alloc)._field_Public=false;
		{
			auto expr = &((*_15087_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac70568b:;
			if (it != expr_end) {
				jule::Ptr<_1a7ba02de_FieldDecl> _151116_f = *it;
				{
					(*(_151116_f))._field_Public=true;
				}
				_iter_next_1ac70568b:;
				++it;
				goto _iter_begin_1ac70568b;
			}
			_iter_end_1ac70568b:;
		};
		(*_15087_s.alloc)._field_Binded=true;
	};
	return _15087_s;;
}



inline jule::Ptr<_1a7b9b939_TypeAliasDecl> _1a881ae6a_buildBindTypeAlias(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _152039_tokens) {
	(_152039_tokens).mut_slice(1LL);;
	jule::Ptr<_1a7b9b939_TypeAliasDecl> _15227_t = _1a8811658_buildTypeAliasDecl(_self_, &(_152039_tokens));;
	if ((_15227_t != nullptr)) {
		(*_15227_t.alloc)._field_Public=false;
		(*_15227_t.alloc)._field_Binded=true;
	};
	return _15227_t;;
}



inline jule::Ptr<_1a7b9d023_UseDecl> _1a881b2ab_buildBindUse(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _153033_tokens) {
	if ((_153033_tokens.len() == 1LL)) {
		_1a880e711_pushErr(_self_.ptr(), _153033_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_153033_tokens).mut_slice(1LL);;
	;
	return _1a88172c9_buildUseDecl(_self_, _153033_tokens, true);;
}



inline jule::Any _1a881b5ec_buildBind(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _154131_tokens) {
	jule::Ptr<_1a7b69b05_Token> _15427_token = (*(_154131_tokens))[0LL];;
	if (((*(_154131_tokens)).len() == 1LL)) {
		_1a880e711_pushErr(_self_.ptr(), _15427_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_15427_token=(*(_154131_tokens))[1LL];
	{
		auto &_match_expr{ (*(_15427_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ac70b75d:;
			{
				return jule::Any(_1a881a497_buildBindFn(_self_, (*(_154131_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1ac70b3a6:;
			{
				return jule::Any(_1a881a7d8_buildBindVar(_self_, (*(_154131_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1ac70b41c:;
			{
				return jule::Any(_1a881ab29_buildBindStruct(_self_, (*(_154131_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ac70b483:;
			{
				return jule::Any(_1a881ae6a_buildBindTypeAlias(_self_, (*(_154131_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1ac70a63b:;
			{
				_1a880e711_pushErr(_self_, _15427_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac70b340:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7b96acc_FnDecl> _1a881b93d_getMethod(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _156531_tokens) {
	jule::I64 _15667_i = 0LL;;
	jule::Ptr<_1a7b69b05_Token> _15677_token = (*(_156531_tokens))[_15667_i];;
	if (((*(_15677_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_15667_i + 1LL) >= (*(_156531_tokens)).len())) {
			_1a880e711_pushErr(_self_.ptr(), _15677_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_15667_i)++;
		_15677_token=(*(_156531_tokens))[_15667_i];
	};
	if (((*_15677_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_15667_i + 1LL) >= (*(_156531_tokens)).len())) {
			_1a880e711_pushErr(_self_, _15677_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_15667_i)++;
		_15677_token=(*(_156531_tokens))[_15667_i];
	};
	if (((*_15677_token.alloc)._field_Id != static_cast<jule::U64>(29LLU))) {
		_1a880e711_pushErr(_self_, _15677_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a881589e_buildFn(_self_, _156531_tokens, true, false);;
}



inline void _1a881bca1_parseImplBody(jule::Ptr<_1a880dc2c_parser> _self_, jule::Ptr<_1a7ba1a82_Impl>* _159435_ipl, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _159452_tokens) {
	jule::Slice<jule::Ptr<_1a87ded0c_stmt>> _15957_stmts = _1a87e01b4_splitStmts(_159452_tokens);;
	{
		auto expr = &(_15957_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7146ab:;
		if (it != expr_end) {
			jule::Ptr<_1a87ded0c_stmt> _159615_stmt = *it;
			{
				(*(_159452_tokens))=(*(_159615_stmt))._field_tokens;
				jule::Ptr<_1a7b69b05_Token> _15988_token = (*(_159452_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_15988_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1ac7156ac:;
						{
							_1a88104ae_pushDirective(_self_.ptr(), _1a8810206_buildDirective(_self_, (*(_159452_tokens))));
							goto _iter_next_1ac7146ab;
						}
					}
					_match_end_1ac7158ee:;
				};
				{
					auto &_match_expr{ (*(_15988_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1ac716b75:;
						{
							jule::Ptr<_1a7b97c87_VarDecl> _16079_v = _1a88124d3_buildVar(_self_, (*(_159452_tokens)));;
							if ((_16079_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1a7b97c87_VarDecl>> &__jule_push_dest = (*((*(_159435_ipl))))._field_Statics; __jule_push_dest.push(_16079_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1ac7168ab:;
						{
							jule::Ptr<_1a7b96acc_FnDecl> _16149_f = _1a881b93d_getMethod(_self_, _159452_tokens);;
							if ((_16149_f != nullptr)) {
								_1a88199a2_checkMethodReceiver(_self_, &(_16149_f));
								_1a881c6db_applyFnMeta(_self_, &(_16149_f));
								{ jule::Slice<jule::Ptr<_1a7b96acc_FnDecl>> &__jule_push_dest = (*((*(_159435_ipl))))._field_Methods; __jule_push_dest.push(_16149_f); };
							};
						}
					}
					else {
						_case_begin_1ac715a53:;
						{
							_1a880e711_pushErr(_self_, _15988_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							goto _iter_next_1ac7146ab;
						}
					}
					_match_end_1ac71604d:;
				};
			}
			_iter_next_1ac7146ab:;
			++it;
			goto _iter_begin_1ac7146ab;
		}
		_iter_end_1ac7146ab:;
	};
}



inline jule::Ptr<_1a7ba1a82_Impl> _1a881c0e2_buildImpl(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _162730_tokens) {
	jule::Ptr<_1a7b69b05_Token> _16287_token = _162730_tokens[0LL];;
	if ((_162730_tokens.len() < 2LL)) {
		_1a880e711_pushErr(_self_.ptr(), _16287_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _16347_i = 1LL;;
	jule::Ptr<_1a7b800b0_TypeDecl> _16367_base;
	jule::Bool _163617_ok;
	({
		__jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8811317_buildType(_self_, &(_162730_tokens), (&(_16347_i)), true);
		_16367_base = __jule_assign_result.__jule_result_arg0;
		_163617_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163617_ok))) {
		return nullptr;;
	};
	if ((_16347_i >= _162730_tokens.len())) {
		_1a880e711_pushErr(_self_, _16287_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7ba1a82_Impl> _16457_ipl = jule::new_ptr<_1a7ba1a82_Impl>(_1a7ba1a82_Impl{._field_End=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_Base=_16367_base, ._field_Dest=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1a7b96acc_FnDecl>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1a7b97c87_VarDecl>>(nullptr)});;
	_16287_token=_162730_tokens[_16347_i];
	if (((*(_16287_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*_16287_token.alloc)._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_16457_ipl))._field_Base, (*_16457_ipl.alloc)._field_Dest);
			goto _julec_label_1ac7238a7;
		};
		_1a880e05c_stop(_self_);
		_1a880e711_pushErr(_self_, _16287_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_16347_i)++;
	if ((_16347_i >= _162730_tokens.len())) {
		_1a880e05c_stop(_self_);
		_1a880e711_pushErr(_self_, _16287_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8811317_buildType(_self_, &(_162730_tokens), (&(_16347_i)), true);
		(*_16457_ipl.alloc)._field_Dest = __jule_assign_result.__jule_result_arg0;
		_163617_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163617_ok))) {
		return nullptr;;
	};
	if ((_16347_i >= _162730_tokens.len())) {
		_1a880e05c_stop(_self_);
		_1a880e711_pushErr(_self_, _16287_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1ac7238a7:;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _16837_bodyTokens = _1a880c3ce_range(&(_16347_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_162730_tokens));;
	if ((_16837_bodyTokens == nullptr)) {
		_1a880e05c_stop(_self_);
		_1a880e711_pushErr(_self_, _16287_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_16347_i < _162730_tokens.len())) {
		_1a880e711_pushErr(_self_, _162730_tokens[_16347_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_16457_ipl.alloc)._field_End=_162730_tokens[(_16347_i - 1LL)];
	_1a881bca1_parseImplBody(_self_, &(_16457_ipl), &(_16837_bodyTokens));
	return _16457_ipl;;
}



inline jule::Any _1a881c433_buildNodeData(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _169835_tokens) {
	jule::Ptr<_1a7b69b05_Token> _16997_token = (*(_169835_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_16997_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ac728a77:;
			{
				jule::Ptr<_1a7b96acc_FnDecl> _17038_f = _1a881589e_buildFn(_self_, _169835_tokens, false, false);;
				if ((_17038_f != nullptr)) {
					(*_17038_f.alloc)._field_Global=true;
				};
				return jule::Any(_17038_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1ac72925e:;
			{
				return jule::Any(_1a88124d3_buildVar(_self_, (*(_169835_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ac7292c5:;
			{
				return jule::Any(_1a8811658_buildTypeAliasDecl(_self_, _169835_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1ac72868c:;
			{
				return _1a8818c26_buildNodeEnumDecl(_self_, _169835_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1ac728703:;
			{
				return jule::Any(_1a88196e9_buildStructDecl(_self_, _169835_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1ac728769:;
			{
				return jule::Any(_1a881a156_buildTraitDecl(_self_, _169835_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1ac7287d0:;
			{
				return jule::Any(_1a881c0e2_buildImpl(_self_, (*(_169835_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ac728857:;
			{
				return _1a881b5ec_buildBind(_self_, _169835_tokens);;
			}
		}
		else {
			_case_begin_1ac728390:;
			{
				_1a880e711_pushErr(_self_.ptr(), _16997_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac728626:;
	};
}



inline void _1a881c6db_applyFnMeta(_1a880dc2c_parser* _self_, jule::Ptr<_1a7b96acc_FnDecl>* _173132_f) {
	(*((*(_173132_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1a881c994_applyMeta(_1a880dc2c_parser* _self_, _1a7b7e0ae_Node* _173630_node) {
	{
		auto &_match_expr{ (*(_173630_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ac730441:;
			{
				jule::Ptr<_1a7b97c87_VarDecl> _17398_v = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1a7b97c87_VarDecl>();;
				if ((_17398_v == nullptr)) {
					return;;
				};
				(*(_17398_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ac730199:;
			{
				jule::Ptr<_1a7b96acc_FnDecl> _17468_f = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1a7b96acc_FnDecl>();;
				if ((_17468_f == nullptr)) {
					return;;
				};
				_1a881c6db_applyFnMeta(_self_, &(_17468_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1ac7304da:;
			{
				jule::Ptr<_1a7ba0bd5_StructDecl> _17528_sd = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1a7ba0bd5_StructDecl>();;
				if ((_17528_sd == nullptr)) {
					return;;
				};
				(*(_17528_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1ac7303a8:;
	};
}



inline void _1a881cc4c_pushUseDecl(jule::Ptr<_1a880dc2c_parser> _self_, jule::Ptr<_1a7b9d023_UseDecl>* _176133_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*(_self_))._field_ast.alloc)._field_UseDecls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b9d023_UseDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_176133_decl)); __jule_collection; }));
	if (((*(*(_self_))._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_1a880e711_pushErr(_self_, (*((*(_176133_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("use declarations must declared top of source code", 49)), jule::Slice<jule::Any>());
		_1a880ea74_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("move this use declaration to top of source file", 47)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a881d08d_pushMetaNodes(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _176935_tokens) {
	{
		auto &_match_expr{ (*((*(_176935_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1ac736a85:;
			{
				;
				jule::Ptr<_1a7b9d023_UseDecl> _17738_decl = _1a88172c9_buildUseDecl(_self_.ptr(), (*(_176935_tokens)), false);;
				_1a881cc4c_pushUseDecl(_self_, &(_17738_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ac736b0c:;
			{
				if ((((*(_176935_tokens)).len() > 1LL) && ((*((*(_176935_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1a7b9d023_UseDecl> _17789_decl = _1a881b2ab_buildBindUse(_self_, (*(_176935_tokens)));;
					_1a881cc4c_pushUseDecl(_self_, &(_17789_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1ac736b73:;
			{
				_1a88104ae_pushDirective(_self_.ptr(), _1a8810206_buildDirective(_self_, (*(_176935_tokens))));
				return true;;
			}
		}
		_match_end_1ac736975:;
	};
	return false;;
}



inline _1a7b7e0ae_Node _1a881d3ce_parseNode(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _178931_st) {
	_1a7b7e0ae_Node _17907_node = _1a7b7e0ae_Node{._field_Token=(*(_178931_st))[0LL], ._field_Data=jule::Any(nullptr)};;
	if (_1a881d08d_pushMetaNodes(_self_, _178931_st)) {
		return _17907_node;;
	};
	jule::Any _17987_data = _1a881c433_buildNodeData(_self_, _178931_st);;
	if ((_17987_data == nullptr)) {
		return _17907_node;;
	};
	_17907_node._field_Data=_17987_data;
	_1a881c994_applyMeta(_self_, &(_17907_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1a880e711_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _17907_node;;
}



inline void _1a881d687_appendNode(jule::Ptr<_1a880dc2c_parser> _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _181332_st) {
	if (((*(_181332_st)).len() == 0LL)) {
		return;;
	};
	_1a7b7e0ae_Node _18177_node = _1a881d3ce_parseNode(_self_, _181332_st);;
	if (((_18177_node._field_Data != nullptr) && (!(_1a880e2e3_stopped(_self_))))) {
		(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*(_self_))._field_ast.alloc)._field_Nodes,({ auto __jule_collection = jule::Slice<_1a7b7e0ae_Node>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _18177_node; __jule_collection; }));
	};
}



inline void _1a881db60_removeRange(_1a880dc2c_parser* _self_, jule::I64 _182327_i, jule::U64 _182335_id, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _182349_tokens, jule::Slice<jule::I64>* _182372_ranges) {
	jule::U64 _18243_close = _1a880cdd5_getCloseOfBrace(_182335_id);;
	for (; (_182327_i >= 0LL); (_182327_i)--) {
		{
			jule::Ptr<_1a7b69b05_Token> _18264_tok = (*(_182349_tokens))[(*(_182372_ranges))[_182327_i]];;
			if (((*(_18264_tok))._field_Id != _18243_close)) {
				goto _iter_next_1ac741d15;
			};
			(*(_182372_ranges))=jule::append((*(_182372_ranges)).slice(0LL, _182327_i),(*(_182372_ranges)).slice((_182327_i + 1LL)));
			goto _iter_end_1ac741d15;
		}
	_iter_next_1ac741d15:;
	}
	_iter_end_1ac741d15:;;
}



inline void _1a881e07d_pushWrongOrderCloseErr(_1a880dc2c_parser* _self_, jule::Ptr<_1a7b69b05_Token>* _183539_t, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _183551_tokens, jule::Slice<jule::I64>* _183570_ranges) {
	{
		auto &_match_expr{ (*((*(_183551_tokens))[(*(_183570_ranges))[((*(_183570_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1ac744224:;
			{
				_1a880e711_pushErr(_self_, (*(_183539_t)), static_cast<jule::Str>(jule::Str::lit("was expected parentheses close", 30)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1ac74429b:;
			{
				_1a880e711_pushErr(_self_, (*(_183539_t)), static_cast<jule::Str>(jule::Str::lit("was expected brace close", 24)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1ac744312:;
			{
				_1a880e711_pushErr(_self_, (*(_183539_t)), static_cast<jule::Str>(jule::Str::lit("was expected bracket close", 26)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac744114:;
	};
}



inline void _1a881e556_pushRangeClose(_1a880dc2c_parser* _self_, jule::Ptr<_1a7b69b05_Token> _184630_t, jule::U64 _184641_left, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _184657_tokens, jule::Slice<jule::I64>* _184680_ranges) {
	jule::I64 _18473_n = (*(_184680_ranges)).len();;
	if ((_18473_n == 0LL)) {
		{
			auto &_match_expr{ (*(_184630_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1ac747326:;
				{
					_1a880e711_pushErr(_self_, _184630_t, static_cast<jule::Str>(jule::Str::lit("extra closed brackets", 21)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1ac74739d:;
				{
					_1a880e711_pushErr(_self_, _184630_t, static_cast<jule::Str>(jule::Str::lit("extra closed braces", 19)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1ac747414:;
				{
					_1a880e711_pushErr(_self_, _184630_t, static_cast<jule::Str>(jule::Str::lit("extra closed parentheses", 24)), jule::Slice<jule::Any>());
				}
			}
			_match_end_1ac74725a:;
		};
		return;;
	} else if (((*((*(_184657_tokens))[(*(_184680_ranges))[(_18473_n - 1LL)]]))._field_Id != _184641_left)) {
		_1a881e07d_pushWrongOrderCloseErr(_self_, &(_184630_t), _184657_tokens, _184680_ranges);
	};
	_1a881db60_removeRange(_self_, (_18473_n - 1LL), (*(_184630_t))._field_Id, _184657_tokens, _184680_ranges);
}



inline void _1a881e80e_checkRanges(_1a880dc2c_parser* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _186428_tokens) {
	jule::Slice<jule::I64> _186511_ranges = nullptr;;
	{
		auto expr = _186428_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac74a6e2:;
		if (it != expr_end) {
			jule::I64 _18677_i = it - expr->begin();
			jule::Ptr<_1a7b69b05_Token> *_186710_token = it;
			{
				{
					auto &_match_expr{ (*((*(_186710_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1ac74b58e:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _186511_ranges; __jule_push_dest.push(_18677_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac74b627:;
						{
							_1a881e556_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U64>(74LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1ac74b68d:;
						{
							_1a881e556_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U64>(72LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1ac74b704:;
						{
							_1a881e556_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U64>(76LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					_match_end_1ac74b4c3:;
				};
			}
			_iter_next_1ac74a6e2:;
			++it;
			_18677_i++;
			goto _iter_begin_1ac74a6e2;
		}
		_iter_end_1ac74a6e2:;
	};
	{
		auto expr = &(_186511_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac74a7be:;
		if (it != expr_end) {
			jule::I64 _188210_i = *it;
			{
				jule::Ptr<_1a7b69b05_Token> _18834_token = (*(_186428_tokens))[_188210_i];;
				{
					auto &_match_expr{ (*(_18834_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac74e5b4:;
						{
							_1a880e711_pushErr(_self_, _18834_token, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1ac74e62a:;
						{
							_1a880e711_pushErr(_self_, _18834_token, static_cast<jule::Str>(jule::Str::lit("brace waiting to close", 22)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1ac74e691:;
						{
							_1a880e711_pushErr(_self_, _18834_token, static_cast<jule::Str>(jule::Str::lit("bracket are waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					_match_end_1ac74e32d:;
				};
			}
			_iter_next_1ac74a7be:;
			++it;
			goto _iter_begin_1ac74a7be;
		}
		_iter_end_1ac74a7be:;
	};
}



inline void _1a881eab7_parse(jule::Ptr<_1a880dc2c_parser> _self_, jule::Ptr<_1a7b7038b_File>* _189527_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1a7b7d19b_AST>(_1a7b7d19b_AST{._field_File=(*(_189527_f)), ._field_TopDirectives=jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>(nullptr), ._field_UseDecls=jule::Slice<jule::Ptr<_1a7b9d023_UseDecl>>(nullptr), ._field_Nodes=jule::Slice<_1a7b7e0ae_Node>(nullptr)});
	(*_self_.alloc)._field_ep=jule::new_ptr<_1a87ed117_exprBuilder>(_1a87ed117_exprBuilder{._field_p=_self_});
	_1a881e80e_checkRanges(_self_, &((*((*(_189527_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a87ded0c_stmt>> _19087_stmts = _1a87e01b4_splitStmts(&((*((*(_189527_f))))._field_Tokens));;
	jule::I64 _19117_i = 0LL;;
	for (; (_19117_i < _19087_stmts.len()); (_19117_i)++) {
		{
			jule::Ptr<_1a87ded0c_stmt> _19138_stmt = _19087_stmts[_19117_i];;
			if (((*(_19138_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*_19138_stmt.alloc)._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1ac753464;
			};
			if ((!(_1d91468b9_IsTopDirective((*((*_19138_stmt.alloc)._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1ac753464;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*(_self_))._field_ast.alloc)._field_TopDirectives,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a8810206_buildDirective(_self_, (*_19138_stmt.alloc)._field_tokens); __jule_collection; }));
		}
	_iter_next_1ac753464:;
	}
	_iter_end_1ac753464:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; ((_19117_i < _19087_stmts.len()) && (!(_1a880e2e3_stopped(_self_)))); (_19117_i)++) {
		{
			jule::Ptr<_1a87ded0c_stmt> _19308_stmt = _19087_stmts[_19117_i];;
			_1a881d687_appendNode(_self_, &((*(_19308_stmt))._field_tokens));
		}
	_iter_next_1ac756467:;
	}
	_iter_end_1ac756467:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1a880e711_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
}







inline void _1a8821426_pushErr(_1a8820d4e_typeBuilder* _self_, jule::Ptr<_1a7b69b05_Token> _4123_token, jule::Str _4138_fmt) {
	if ((*(_self_))._field_err) {
		_1a880e711_pushErr((*(_self_))._field_p.ptr(), _4123_token, _4138_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1a8821789_pushSuggestion(_1a8820d4e_typeBuilder* _self_, jule::Str _4830_fmt, jule::Slice<jule::Any> _4843_args) {
	if ((*(_self_))._field_err) {
		_1a880ea74_pushSuggestion((*(_self_))._field_p.ptr(), _4830_fmt, _4843_args);
	};
}



inline jule::Ptr<_1a7b800b0_TypeDecl> _1a8821a20_buildNamespace(_1a8820d4e_typeBuilder* _self_) {
	jule::Ptr<_1a7b800b0_TypeDecl> _557_t = jule::new_ptr<_1a7b800b0_TypeDecl>(_1a7b800b0_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], ._field_Kind=jule::Any(nullptr)});;
	jule::Ptr<_1a7b85bba_NamespaceTypeDecl> _597_nst = jule::new_ptr<_1a7b85bba_NamespaceTypeDecl>(_1a7b85bba_NamespaceTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1a7b69b05_Token>>(nullptr), ._field_Kind=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr)});;
	jule::I64 _607_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1a7b69b05_Token> _628_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_607_n & 1LL) == 0LL)) {
				if (((*(_628_token))._field_Id != static_cast<jule::U64>(1LLU))) {
					_1a8821426_pushErr(_self_, _628_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
					_1a8821789_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
				};
				(*_597_nst.alloc)._field_Idents=jule::append((*_597_nst.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b69b05_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _628_token; __jule_collection; }));
			} else if (((*(_628_token))._field_Id != static_cast<jule::U64>(19LLU))) {
				goto _iter_end_1ac75bd52;
			};
			(_607_n)++;
		}
	_iter_next_1ac75bd52:;
	}
	_iter_end_1ac75bd52:;;
	((*(_597_nst))._field_Idents).mut_slice(0LL, ((*(_597_nst))._field_Idents.len() - 1LL));;
	((*((*(_self_))._field_i)))--;
	(*_597_nst.alloc)._field_Kind=_1a88222c3_buildIdent(_self_);
	(*(_557_t))._field_Kind=jule::Any(_597_nst, &__jule_any_type94);
	return _557_t;;
}



inline jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>> _1a8821ca6_buildGenerics(_1a8820d4e_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1a7b69b05_Token> _883_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_883_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _937_parts = _1a882203c_identGenerics(_self_);;
	if ((_937_parts.len() == 0LL)) {
		_1a8821426_pushErr(_self_, _883_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>> _997_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>>::alloc(0LL, _937_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b800b0_TypeDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_937_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac764596:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a7b69b05_Token>> _10015_part = *it;
			{
				jule::I64 _1018_j = 0LL;;
				jule::Ptr<_1a7b800b0_TypeDecl> _1028_t;
				({
					__jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8811317_buildType((*(_self_))._field_p, &(_10015_part), (&(_1018_j)), true);
					_1028_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_1018_j < _10015_part.len())) {
					_1a8821426_pushErr(_self_, _10015_part[_1018_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
				{ jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>> &__jule_push_dest = _997_types; __jule_push_dest.push(_1028_t); };
			}
			_iter_next_1ac764596:;
			++it;
			goto _iter_begin_1ac764596;
		}
		_iter_end_1ac764596:;
	};
	return _997_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _1a882203c_identGenerics(_1a8820d4e_typeBuilder* _self_) {
	jule::I64 _1123_first = (*((*(_self_))._field_i));;
	jule::I64 _1137_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1a7b69b05_Token> _1154_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_1154_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1ac768831:;
					{
						(_1137_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1ac768b61:;
					{
						(_1137_rangeN)--;
					}
				}
				_match_end_1ac7688a8:;
			};
			if ((_1137_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1ac767a0b;
			};
		}
	_iter_next_1ac767a0b:;
	}
	_iter_end_1ac767a0b:;;
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _1277_tokens = (*(_self_))._field_tokens.slice((_1123_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _1287_parts;
	jule::Slice<_1d9144ab5_Log> _12814_errors;
	({
		__jule_tuple_ssx_1a7b69b05_Token__jule_tuple_s_1d9144ab5_Log __jule_assign_result = _1a880cb4e_parts(&(_1277_tokens), static_cast<jule::U64>(5LLU), true);
		_1287_parts = __jule_assign_result.__jule_result_arg0;
		_12814_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12814_errors);
	};
	return _1287_parts;;
}



inline jule::Ptr<_1a7b800b0_TypeDecl> _1a88222c3_buildIdent(_1a8820d4e_typeBuilder* _self_) {
	jule::Bool _1367_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_1367_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1a8821a20_buildNamespace(_self_);;
	};
	jule::Ptr<_1a7b69b05_Token> _1407_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1a7b806ba_IdentTypeDecl> _1417_it = jule::new_ptr<_1a7b806ba_IdentTypeDecl>(_1a7b806ba_IdentTypeDecl{._field_Token=_1407_token, ._field_Ident=(*(_1407_token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>>(nullptr)});;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a7b800b0_TypeDecl> _1477_itd = jule::new_ptr<_1a7b800b0_TypeDecl>(_1a7b800b0_TypeDecl{._field_Token=_1407_token, ._field_Kind=jule::Any(_1417_it, &__jule_any_type78)});;
	if (((!(_1367_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_1417_it))._field_Generics=_1a8821ca6_buildGenerics(_self_);
		return _1477_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1a8821426_pushErr(_self_, _1407_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1477_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a8821426_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1477_itd;;
	};
	jule::Ptr<_1a7b857e1_SubIdentTypeDecl> _1647_sit = jule::new_ptr<_1a7b857e1_SubIdentTypeDecl>(_1a7b857e1_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1a7b806ba_IdentTypeDecl>>(nullptr)});;
	(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b806ba_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1417_it; __jule_collection; }));
	jule::Ptr<_1a7b800b0_TypeDecl> _1667_ident = _1a88222c3_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_1667_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1ac7747d7:;
			{
				(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b806ba_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_1667_ident))._field_Kind.cast_ptr<_1a7b806ba_IdentTypeDecl>(&__jule_any_type78); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1ac76dbdd:;
			{
				(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,(*((*(_1667_ident))._field_Kind.unsafe_cast_ptr<_1a7b857e1_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_1ac774760:;
	};
	return jule::new_ptr<_1a7b800b0_TypeDecl>(_1a7b800b0_TypeDecl{._field_Token=_1407_token, ._field_Kind=jule::Any(_1647_sit, &__jule_any_type90)});;
}



inline jule::Ptr<_1a7b800b0_TypeDecl> _1a8822559_buildCppLink(_1a8820d4e_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1a8821426_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1a7b800b0_TypeDecl> _1857_t = _1a88222c3_buildIdent(_self_);;
	(*((*(_1857_t))._field_Kind.cast_ptr<_1a7b806ba_IdentTypeDecl>(&__jule_any_type78)))._field_Binded=true;
	return _1857_t;;
}



inline jule::Ptr<_1a7b800b0_TypeDecl> _1a88227e0_buildFn(_1a8820d4e_typeBuilder* _self_) {
	jule::Ptr<_1a7b69b05_Token> _1917_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1a7b96acc_FnDecl> _1927_f = _1a88153e8_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_1927_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a7b96e73_IsAnon(_1927_f.ptr())))) {
		_1a8821426_pushErr(_self_, (*(_1927_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return jule::new_ptr<_1a7b800b0_TypeDecl>(_1a7b800b0_TypeDecl{._field_Token=_1917_token, ._field_Kind=jule::Any(_1927_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1a7b800b0_TypeDecl> _1a8822a76_buildPtr(_1a8820d4e_typeBuilder* _self_) {
	jule::Ptr<_1a7b69b05_Token> _2067_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a8821426_pushErr(_self_, _2067_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1a7b800b0_TypeDecl>(_1a7b800b0_TypeDecl{._field_Token=_2067_token, ._field_Kind=jule::Any(jule::new_ptr<_1a7b86946_PtrTypeDecl>(_1a7b86946_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type74)});;
	};
	jule::Ptr<_1a7b800b0_TypeDecl> _2237_elem = _1a8823acc_step(_self_);;
	if ((_2237_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a7b800b0_TypeDecl>(_1a7b800b0_TypeDecl{._field_Token=_2067_token, ._field_Kind=jule::Any(jule::new_ptr<_1a7b86946_PtrTypeDecl>(_1a7b86946_PtrTypeDecl{._field_Elem=_2237_elem}), &__jule_any_type74)});;
}



inline jule::Ptr<_1a7b800b0_TypeDecl> _1a8822d0c_buildSptr(_1a8820d4e_typeBuilder* _self_) {
	jule::Ptr<_1a7b69b05_Token> _2377_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a8821426_pushErr(_self_, _2377_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a7b800b0_TypeDecl> _2447_elem = _1a8823acc_step(_self_);;
	if ((_2447_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a7b800b0_TypeDecl>(_1a7b800b0_TypeDecl{._field_Token=_2377_token, ._field_Kind=jule::Any(jule::new_ptr<_1a7b85eb7_SptrTypeDecl>(_1a7b85eb7_SptrTypeDecl{._field_Elem=_2447_elem}), &__jule_any_type75)});;
}



inline jule::Ptr<_1a7b800b0_TypeDecl> _1a8823093_buildSlc(_1a8820d4e_typeBuilder* _self_) {
	jule::Ptr<_1a7b69b05_Token> _2587_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a7b800b0_TypeDecl> _2607_elem = _1a8823acc_step(_self_);;
	if ((_2607_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a7b800b0_TypeDecl>(_1a7b800b0_TypeDecl{._field_Token=_2587_token, ._field_Kind=jule::Any(jule::new_ptr<_1a7b8634c_SlcTypeDecl>(_1a7b8634c_SlcTypeDecl{._field_Elem=_2607_elem}), &__jule_any_type73)});;
}



inline jule::Ptr<_1a7b800b0_TypeDecl> _1a8823329_buildArr(_1a8820d4e_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _2737_exprTokens = _1a880c3ce_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a8821426_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1a7b800b0_TypeDecl> _2797_elem = _1a8823acc_step(_self_);;
	if ((_2797_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a7b871d8_ArrTypeDecl> _2847_arrt = jule::new_ptr<_1a7b871d8_ArrTypeDecl>(_1a7b871d8_ArrTypeDecl{._field_Elem=_2797_elem, ._field_Size=jule::Ptr<_1a7b89251_Expr>(nullptr)});;
	jule::Ptr<_1a7b69b05_Token> _2887_token = _2737_exprTokens[0LL];;
	if (((_2737_exprTokens.len() == 1LL) && ((*(_2887_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_2847_arrt))._field_Size=_1a880edb5_buildExpr((*(_self_))._field_p, &(_2737_exprTokens));
	};
	return jule::new_ptr<_1a7b800b0_TypeDecl>(_1a7b800b0_TypeDecl{._field_Token=_2887_token, ._field_Kind=jule::Any(_2847_arrt, &__jule_any_type72)});;
}



inline jule::Ptr<_1a7b800b0_TypeDecl> _1a88235b0_buildMap(_1a8820d4e_typeBuilder* _self_) {
	jule::Ptr<_1a7b69b05_Token> _3027_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a8821426_pushErr(_self_, _3027_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _3107_keyTokens = _1a880c3ce_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a8821426_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	} else if ((_3107_keyTokens.len() == 0LL)) {
		_1a8821426_pushErr(_self_, _3027_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1a7b87936_MapTypeDecl> _3197_mapt = jule::new_ptr<_1a7b87936_MapTypeDecl>(_1a7b87936_MapTypeDecl{._field_Key=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Val=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr)});;
	jule::I64 _3207_j = 0LL;;
	jule::Ptr<_1a7b800b0_TypeDecl> _3217_keyt;
	jule::Bool _32117_ok;
	({
		__jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8811317_buildType((*(_self_))._field_p, &(_3107_keyTokens), (&(_3207_j)), (*(_self_))._field_err);
		_3217_keyt = __jule_assign_result.__jule_result_arg0;
		_32117_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32117_ok))) {
		return nullptr;;
	} else if ((_3207_j < _3107_keyTokens.len())) {
		_1a8821426_pushErr(_self_, _3107_keyTokens[_3207_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_3197_mapt.alloc)._field_Key=_3217_keyt;
	jule::Ptr<_1a7b800b0_TypeDecl> _3297_valt;
	({
		__jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8811317_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_3297_valt = __jule_assign_result.__jule_result_arg0;
		_32117_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32117_ok))) {
		return nullptr;;
	};
	(*_3197_mapt.alloc)._field_Val=_3297_valt;
	return jule::new_ptr<_1a7b800b0_TypeDecl>(_1a7b800b0_TypeDecl{._field_Token=_3027_mapToken, ._field_Kind=jule::Any(_3197_mapt, &__jule_any_type76)});;
}



inline jule::Ptr<_1a7b800b0_TypeDecl> _1a8823846_buildEnumerable(_1a8820d4e_typeBuilder* _self_) {
	jule::Ptr<_1a7b69b05_Token> _3417_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1a8821426_pushErr(_self_, _3417_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_3417_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_3417_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1a8823093_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1a8823329_buildArr(_self_);;
}



inline jule::Ptr<_1a7b800b0_TypeDecl> _1a8823acc_step(_1a8820d4e_typeBuilder* _self_) {
	jule::Ptr<_1a7b69b05_Token> _3563_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3563_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1ac794d9b:;
			{
				return _1a88222c3_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ac795286:;
			{
				return _1a8822559_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ac7952ec:;
			{
				if (((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) > 1LL) && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(29LLU)))) {
					((*((*(_self_))._field_i)))++;
					jule::Ptr<_1a7b800b0_TypeDecl> _3669_f = _1a88227e0_buildFn(_self_);;
					if ((_3669_f != nullptr)) {
						(*((*_3669_f.alloc)._field_Kind.cast_ptr<_1a7b96acc_FnDecl>(&__jule_any_type14)))._field_Unsafety=true;
					};
					return _3669_f;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1ac795363:;
			{
				return _1a88227e0_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac7953c9:;
			{
				return _1a8822a76_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ac795451:;
			{
				return _1a8822d0c_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1ac7954c8:;
			{
				return jule::new_ptr<_1a7b800b0_TypeDecl>(_1a7b800b0_TypeDecl{._field_Token=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1a7b85eb7_SptrTypeDecl>(_1a7b85eb7_SptrTypeDecl{._field_Elem=_1a8822d0c_buildSptr(_self_)}), &__jule_any_type75)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1ac795550:;
			{
				return _1a8823846_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1ac7955c7:;
			{
				return _1a88235b0_buildMap(_self_);;
			}
		}
		_match_end_1ac794e23:;
	};
	((*((*(_self_))._field_i)))++;
	_1a8821426_pushErr(_self_, _3563_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline __jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool _1a8823d63_build(_1a8820d4e_typeBuilder* _self_) {
	__jule_tuple_x_1a7b800b0_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a7b800b0_TypeDecl> _3977_root = _1a8823acc_step(_self_);;
	if ((_3977_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1a88205bd_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _3977_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}








inline jule::Bool _1a804ce2d_CompileInfo_eq(_1a804ce2d_CompileInfo *_self_, _1a804ce2d_CompileInfo _other_) {
	return 
		(_self_->_field_Prod == _other_._field_Prod) &&
		(_self_->_field_Test == _self_->_field_Test) &&
		(_self_->_field_AtomicRC == _self_->_field_AtomicRC) &&
		(_self_->_field_Compiler == _self_->_field_Compiler) &&
		(_self_->_field_CppStd == _self_->_field_CppStd);
}





inline void _1a804e98a_pushErr(_1a804e407_directiveEval* _self_, jule::Ptr<_1a7b69b05_Token> _2123_t, jule::Str _2134_fmt, jule::Slice<jule::Any> _2147_args) {
	{ jule::Slice<_1d9144ab5_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1d9144ab5_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2123_t))._field_Row, ._field_Column=(*_2123_t.alloc)._field_Column, ._field_Path=(*((*_2123_t.alloc)._field_File))._field_Path, ._field_Text=_1d9145027_Logf(_2134_fmt, _2147_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _1a804ed86_splitOperans(_1a804e407_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _3346_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _347_parts = ({ auto __jule_collection = jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Ptr<_1a7b69b05_Token>>(nullptr); __jule_collection; });;
	jule::I64 _357_i = 0LL;;
	jule::I64 _367_rangeN = 0LL;;
	jule::I64 _377_last = 0LL;;
	for (; (_357_i < ((*(_3346_tokens)).len() - 1LL)); (_357_i)++) {
		{
			jule::Ptr<_1a7b69b05_Token> _394_b = (*(_3346_tokens))[_357_i];;
			{
				auto &_match_expr{ (*(_394_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ac7be546:;
					{
						(_367_rangeN)++;
						goto _iter_next_1ac7bdab7;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ac7be876:;
					{
						(_367_rangeN)--;
					}
				}
				_match_end_1ac7be5bd:;
			};
			if (((_367_rangeN > 0LL) || ((*(_394_b))._field_Id != _3328_op))) {
				goto _iter_next_1ac7bdab7;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3346_tokens)).slice(_377_last, _357_i)); };
			_377_last=(_357_i + 1LL);
		}
	_iter_next_1ac7bdab7:;
	}
	_iter_end_1ac7bdab7:;;
	if ((_377_last < (*(_3346_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3346_tokens)).slice(_377_last)); };
	} else {
		_1a804e98a_pushErr(_self_, (*(_3346_tokens))[(_377_last - 1LL)], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _347_parts;;
}



inline jule::Bool _1a80501c7_evalDirectiveIdent(_1a804e407_directiveEval* _self_, jule::Str _6430_ident) {
	if ((_6430_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7c2439:;
		if (it != expr_end) {
			jule::Str *_6810_var = it;
			{
				if (((*(_6810_var)) == _6430_ident)) {
					return true;;
				};
			}
			_iter_next_1ac7c2439:;
			++it;
			goto _iter_begin_1ac7c2439;
		}
		_iter_end_1ac7c2439:;
	};
	return false;;
}



inline jule::Bool _1a8050518_evalDirectivePart(_1a804e407_directiveEval* _self_, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _7837_part) {
	jule::Bool _793_logicalNot = ((*(_7837_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_793_logicalNot) {
		(_7837_part).mut_slice(1LL);;
	};
	if ((_7837_part.len() > 1LL)) {
		_1a804e98a_pushErr(_self_, _7837_part[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _897_result = _1a80501c7_evalDirectiveIdent(_self_, (*(_7837_part[0LL]))._field_Kind);;
	if (_793_logicalNot) {
		_897_result=(!(_897_result));
	};
	return _897_result;;
}



inline jule::Bool _1a805079e_eval(_1a804e407_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1a804e98a_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _1027_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _1047_logicalOrParts = _1a804ed86_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*(*(_self_))._field_d.alloc)._field_Args));;
	if ((_1047_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_1047_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7c7e56:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a7b69b05_Token>> _10915_part = *it;
			{
				jule::Bool _1108_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> _1118_logicalAndParts = _1a804ed86_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10915_part));;
				if ((_1118_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_1118_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac7c9980:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1a7b69b05_Token>> _11616_andPart = *it;
						{
							jule::Ptr<_1a7b69b05_Token> _1175_first = _11616_andPart[0LL];;
							if (((*(_1175_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_1a7b69b05_Token> _1196_end = _11616_andPart[(_11616_andPart.len() - 1LL)];;
								if (((*(_1196_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_1a804e98a_pushErr(_self_, _1175_first, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
									return false;;
								};
								(_11616_andPart).mut_slice(1LL, (_11616_andPart.len() - 1LL));;
							};
							_1108_and=(_1108_and && _1a8050518_evalDirectivePart(_self_, _11616_andPart));
						}
						_iter_next_1ac7c9980:;
						++it;
						goto _iter_begin_1ac7c9980;
					}
					_iter_end_1ac7c9980:;
				};
				_1027_result=(_1027_result || _1108_and);
			}
			_iter_next_1ac7c7e56:;
			++it;
			goto _iter_begin_1ac7c7e56;
		}
		_iter_end_1ac7c7e56:;
	};
	return _1027_result;;
}







inline jule::Ptr<_1a8824e85_JuleImporter> static__1a88253b4_New(_1a804ce2d_CompileInfo _5816_info) {
	jule::Ptr<_1a8824e85_JuleImporter> _597_imp = jule::new_ptr<_1a8824e85_JuleImporter>(_1a8824e85_JuleImporter{._field_mods=({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1d9257eb4_PathStdlib; __jule_collection; }), ._field_mod=jule::Str(), ._field_pkgs=jule::Slice<jule::Ptr<_1a7c36793_ImportInfo>>(nullptr), ._field_vars=jule::Slice<jule::Str>(nullptr)});;
	_1a804d7ad_initVars(&((*(_597_imp))._field_vars), &(_5816_info));
	return _597_imp;;
}



inline jule::Slice<jule::Ptr<_1a7c36793_ImportInfo>> _1a882564a_AllPackages(_1a8824e85_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1a8825a8a_SetModPath(_1a8824e85_JuleImporter* _self_, jule::Str _7526_path) {
	(*(_self_))._field_mod=_7526_path;
}



inline jule::Str _1a8825d21_GetModPath(_1a8824e85_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1a8826162_ModById(_1a8824e85_JuleImporter* _self_, jule::I64 _8319_id) {
	return (*(_self_))._field_mods[_8319_id];;
}



inline jule::Ptr<_1a7c36793_ImportInfo> _1a88264a3_GetImport(_1a8824e85_JuleImporter* _self_, jule::Str _8725_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7d0e09:;
		if (it != expr_end) {
			jule::Ptr<_1a7c36793_ImportInfo> _8815_p = *it;
			{
				if (((*(_8815_p))._field_Path == _8725_path)) {
					return _8815_p;;
				};
			}
			_iter_next_1ac7d0e09:;
			++it;
			goto _iter_begin_1ac7d0e09;
		}
		_iter_end_1ac7d0e09:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1a7b7d19b_AST__jule_tuple_s_1d9144ab5_Log _1a882689e_ImportPackage(_1a8824e85_JuleImporter* _self_, jule::Str _9629_path, jule::Bool _9640_updateMod) {
	__jule_tuple_sx_1a7b7d19b_AST__jule_tuple_s_1d9144ab5_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1d828aeb5_DirEntry>> _977_dirents = ({
		auto except = static__1daee2631_Read(_9629_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = ({ auto __jule_collection = jule::Slice<_1d9144ab5_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a882499b_flatCompilerErr((jule::Str::lit("cannot read package directory: ", 31) + _9629_path)); __jule_collection; });
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_1d828aeb5_DirEntry>>(nullptr);});
	});;
	if (_9640_updateMod) {
		jule::Str _1024_newMod = _1a7c530d9_FindModuleFileDeep(_9629_path);;
		if ((_1024_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_1024_newMod;
			jule::Slice<_1d9144ab5_Log> _1059_errs = _1a7c533a3_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_1059_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _1059_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1a7b7d19b_AST>> _1127_asts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b7d19b_AST>>::alloc(0LL, _977_dirents.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b7d19b_AST>(nullptr); __jule_collection; });;
	{
		auto expr = &(_977_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7d311a:;
		if (it != expr_end) {
			jule::Ptr<_1d828aeb5_DirEntry> _11310_dirent = *it;
			{
				if ((_1d8290382_IsDir((*(_11310_dirent))._field_Stat.ptr()) || (!(_1daebcd15_HasSuffix((*_11310_dirent.alloc)._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1ac7d311a;
				};
				jule::Str _1194__path = _1daede4b8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _9629_path; (*it++) = (*_11310_dirent.alloc)._field_Name; __jule_collection; }));;
				jule::Ptr<_1a7b7038b_File> _1208_file = _1a7b71766_NewFileSet(_1194__path);;
				_1a7b707dc_Fill(_1208_file.ptr(), _1a882468d_readBuff((*_1208_file.alloc)._field_Path));
				jule::Slice<_1d9144ab5_Log> _1228_errors = _1a7b7cc4a_Lex(_1208_file, static_cast<jule::I64>(0LL));;
				if ((_1228_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _1228_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1a879690c_FileInfo> _1278_finfo = _1a87dca52_ParseFile(_1208_file);;
				if (((*(_1278_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_1278_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1a80327d6_isPassFileAnnotation((*_11310_dirent.alloc)._field_Name)))) {
					goto _iter_next_1ac7d311a;
				};
				jule::Bool _1374_r;
				jule::Slice<_1d9144ab5_Log> _13711_logs;
				({
					__jule_tuple_bool__jule_tuple_s_1d9144ab5_Log __jule_assign_result = _1a8827086_isPassBuildDirectives(_self_, &((*_1278_finfo.alloc)._field_Ast));
					_1374_r = __jule_assign_result.__jule_result_arg0;
					_13711_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13711_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13711_logs;
					return __jule_func_result;;
				};
				if ((!(_1374_r))) {
					goto _iter_next_1ac7d311a;
				};
				{ jule::Slice<jule::Ptr<_1a7b7d19b_AST>> &__jule_push_dest = _1127_asts; __jule_push_dest.push((*_1278_finfo.alloc)._field_Ast); };
			}
			_iter_next_1ac7d311a:;
			++it;
			goto _iter_begin_1ac7d311a;
		}
		_iter_end_1ac7d311a:;
	};
	__jule_func_result.__jule_result_arg0 = _1127_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a8826b57_Imported(_1a8824e85_JuleImporter* _self_, jule::Ptr<_1a7c36793_ImportInfo> _15328_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7d524e:;
		if (it != expr_end) {
			jule::Ptr<_1a7c36793_ImportInfo> _15510_p = *it;
			{
				if ((((*(_15510_p))._field_Binded == (*(_15328_imp))._field_Binded) && ((*_15510_p.alloc)._field_LinkPath == (*_15328_imp.alloc)._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1ac7d524e:;
			++it;
			goto _iter_begin_1ac7d524e;
		}
		_iter_end_1ac7d524e:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac7dc883:;
			if (it != expr_end) {
				jule::I64 _1628_i = it - expr->begin();
				jule::Str _16211_mod = *it;
				{
					if (((*(_self_))._field_mod == _16211_mod)) {
						(*_15328_imp.alloc)._field_ModId=_1628_i;
						goto _julec_label_1ac7dbed1;
					};
				}
				_iter_next_1ac7dc883:;
				++it;
				_1628_i++;
				goto _iter_begin_1ac7dc883;
			}
			_iter_end_1ac7dc883:;
		};
		(*_15328_imp.alloc)._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1ac7dbed1:;
	};
	{ jule::Slice<jule::Ptr<_1a7c36793_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15328_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1d9144ab5_Log _1a8827086_isPassBuildDirectives(_1a8824e85_JuleImporter* _self_, jule::Ptr<_1a7b7d19b_AST>* _17942_file) {
	__jule_tuple_bool__jule_tuple_s_1d9144ab5_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_17942_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7d520a:;
		if (it != expr_end) {
			jule::Ptr<_1a7b7e4cc_Directive> _18015_td = *it;
			{
				if (((*((*(_18015_td))._field_Tag))._field_Kind != static_cast<jule::Str>(jule::Str::lit("build", 5)))) {
					goto _iter_next_1ac7d520a;
				};
				_1a804e407_directiveEval _1848_de = _1a804e407_directiveEval{._field_logs=jule::Slice<_1d9144ab5_Log>(nullptr), ._field_d=_18015_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _1884_result = _1a805079e_eval(&_1848_de);;
				if ((_1848_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _1848_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_1884_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac7d520a:;
			++it;
			goto _iter_begin_1ac7d520a;
		}
		_iter_end_1ac7d520a:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







inline jule::Ptr<_1a882b992_ExprInspector> static__1a882bd38_New(void) {
	return jule::new_ptr<_1a882b992_ExprInspector>(_1a882b992_ExprInspector{._field_SkipChild=false, ._field_handler=jule::Fn<void,jule::Any*>(nullptr)});;
}



inline void _1a882c0e1_args(_1a882b992_ExprInspector* _self_, jule::Slice<jule::Any> _5624_args) {
	{
		auto expr = &(_5624_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac83704d:;
		if (it != expr_end) {
			jule::Any _5715_arg = *it;
			{
				_1a882c399_inspect(_self_, &(_5715_arg));
			}
			_iter_next_1ac83704d:;
			++it;
			goto _iter_begin_1ac83704d;
		}
		_iter_end_1ac83704d:;
	};
}



inline void _1a882c399_inspect(_1a882b992_ExprInspector* _self_, jule::Any* _6228_m) {
	(*(_self_))._field_SkipChild=false;
	(*(_self_))._field_handler(_6228_m);
	if ((*(_self_))._field_SkipChild) {
		return;;
	};
	{
		auto &_match_expr{ (*(_6228_m)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ac83846c:;
			{
				jule::Ptr<_1a7bace23_BinaryExprModel> _708_b = (*(_6228_m)).cast_ptr<_1a7bace23_BinaryExprModel>(&__jule_any_type114);;
				_1a882c399_inspect(_self_, &((*((*(_708_b))._field_Left))._field_Model));
				_1a882c399_inspect(_self_, &((*((*_708_b.alloc)._field_Right))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ac8385e3:;
			{
				jule::Ptr<_1a7bad2ec_UnaryExprModel> _748_u = (*(_6228_m)).cast_ptr<_1a7bad2ec_UnaryExprModel>(&__jule_any_type113);;
				_1a882c399_inspect(_self_, &((*((*(_748_u))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac8384d3:;
			{
				jule::Ptr<_1a7badbc1_StructLitExprModel> _778_lit = (*(_6228_m)).cast_ptr<_1a7badbc1_StructLitExprModel>(&__jule_any_type98);;
				{
					auto expr = &((*(_778_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac83c9e3:;
					if (it != expr_end) {
						jule::Ptr<_1a7bad82a_StructArgExprModel> _7816_arg = *it;
						{
							_1a882c399_inspect(_self_, &((*((*(_7816_arg))._field_Expr))._field_Model));
						}
						_iter_next_1ac83c9e3:;
						++it;
						goto _iter_begin_1ac83c9e3;
					}
					_iter_end_1ac83c9e3:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ac8388bd:;
			{
				jule::Ptr<_1a7badbc1_StructLitExprModel> _828_lit = (*((*(_6228_m)).cast_ptr<_1a7badebd_AllocStructLitExprModel>(&__jule_any_type115)))._field_Lit;;
				{
					auto expr = &((*(_828_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac83e1cb:;
					if (it != expr_end) {
						jule::Ptr<_1a7bad82a_StructArgExprModel> _8316_arg = *it;
						{
							_1a882c399_inspect(_self_, &((*((*(_8316_arg))._field_Expr))._field_Model));
						}
						_iter_next_1ac83e1cb:;
						++it;
						goto _iter_begin_1ac83e1cb;
					}
					_iter_end_1ac83e1cb:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1ac838934:;
			{
				jule::Ptr<_1a7bae551_CastingExprModel> _878_c = (*(_6228_m)).cast_ptr<_1a7bae551_CastingExprModel>(&__jule_any_type96);;
				_1a882c399_inspect(_self_, &((*((*(_878_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1ac83899a:;
			{
				jule::Ptr<_1a7baee03_FnCallExprModel> _908_fc = (*(_6228_m)).cast_ptr<_1a7baee03_FnCallExprModel>(&__jule_any_type41);;
				_1a882c399_inspect(_self_, &((*(_908_fc))._field_Expr));
				_1a882c0e1_args(_self_, (*_908_fc.alloc)._field_Args);
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ac838a11:;
			{
				jule::Ptr<_1a7bb02cc_SliceExprModel> _948_s = (*(_6228_m)).cast_ptr<_1a7bb02cc_SliceExprModel>(&__jule_any_type80);;
				_1a882c0e1_args(_self_, (*(_948_s))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1ac838a77:;
			{
				jule::Ptr<_1a7bb3214_ArrayExprModel> _978_a = (*(_6228_m)).cast_ptr<_1a7bb3214_ArrayExprModel>(&__jule_any_type88);;
				_1a882c0e1_args(_self_, (*(_978_a))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1ac838aee:;
			{
				jule::Ptr<_1a7bb0783_IndexingExprModel> _1008_i = (*(_6228_m)).cast_ptr<_1a7bb0783_IndexingExprModel>(&__jule_any_type53);;
				_1a882c399_inspect(_self_, &((*((*(_1008_i))._field_Expr))._field_Model));
				_1a882c399_inspect(_self_, &((*((*_1008_i.alloc)._field_Index))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1ac838b76:;
			{
				jule::Ptr<_1a7bb14dc_MapExprModel> _1048_mp = (*(_6228_m)).cast_ptr<_1a7bb14dc_MapExprModel>(&__jule_any_type102);;
				{
					auto expr = &((*(_1048_mp))._field_Entries);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac845787:;
					if (it != expr_end) {
						jule::Ptr<_1a7bb1113_KeyValPairExprModel> _10516_entry = *it;
						{
							_1a882c399_inspect(_self_, &((*(_10516_entry))._field_Key));
							_1a882c399_inspect(_self_, &((*_10516_entry.alloc)._field_Val));
						}
						_iter_next_1ac845787:;
						++it;
						goto _iter_begin_1ac845787;
					}
					_iter_end_1ac845787:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ac838bed:;
			{
				jule::Ptr<_1a7bb1a70_SlicingExprModel> _1108_s = (*(_6228_m)).cast_ptr<_1a7bb1a70_SlicingExprModel>(&__jule_any_type95);;
				_1a882c399_inspect(_self_, &((*(_1108_s))._field_Expr));
				_1a882c399_inspect(_self_, &((*_1108_s.alloc)._field_Left));
				if (((*_1108_s.alloc)._field_Right != nullptr)) {
					_1a882c399_inspect(_self_, &((*_1108_s.alloc)._field_Right));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ac838c75:;
			{
				jule::Ptr<_1a7bb2103_TraitSubIdentExprModel> _1178_t = (*(_6228_m)).cast_ptr<_1a7bb2103_TraitSubIdentExprModel>(&__jule_any_type100);;
				_1a882c399_inspect(_self_, &((*(_1178_t))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ac838cec:;
			{
				jule::Ptr<_1a7bb2994_StructSubIdentExprModel> _1208_s = (*(_6228_m)).cast_ptr<_1a7bb2994_StructSubIdentExprModel>(&__jule_any_type101);;
				_1a882c399_inspect(_self_, &((*((*(_1208_s))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1ac838d74:;
			{
				jule::Ptr<_1a7bb3511_TupleExprModel> _1238_t = (*(_6228_m)).cast_ptr<_1a7bb3511_TupleExprModel>(&__jule_any_type84);;
				{
					auto expr = &((*(_1238_t))._field_Datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac84a36e:;
					if (it != expr_end) {
						jule::Ptr<_1a7cd41ae_Data> _12416_d = *it;
						{
							_1a882c399_inspect(_self_, &((*(_12416_d))._field_Model));
						}
						_iter_next_1ac84a36e:;
						++it;
						goto _iter_begin_1ac84a36e;
					}
					_iter_end_1ac84a36e:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1ac838deb:;
			{
				jule::Ptr<_1a7bb418d_BuiltinNewCallExprModel> _1288_b = (*(_6228_m)).cast_ptr<_1a7bb418d_BuiltinNewCallExprModel>(&__jule_any_type116);;
				if (((*(_1288_b))._field_Init != nullptr)) {
					_1a882c399_inspect(_self_, &((*_1288_b.alloc)._field_Init));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ac838e73:;
			{
				jule::Ptr<_1a7bb38da_BuiltinOutCallExprModel> _1338_c = (*(_6228_m)).cast_ptr<_1a7bb38da_BuiltinOutCallExprModel>(&__jule_any_type34);;
				_1a882c399_inspect(_self_, &((*((*(_1338_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ac838eea:;
			{
				jule::Ptr<_1a7bb3cb4_BuiltinOutlnCallExprModel> _1368_c = (*(_6228_m)).cast_ptr<_1a7bb3cb4_BuiltinOutlnCallExprModel>(&__jule_any_type35);;
				_1a882c399_inspect(_self_, &((*((*(_1368_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1ac839072:;
			{
				jule::Ptr<_1a7bb4567_BuiltinPanicCallExprModel> _1398_c = (*(_6228_m)).cast_ptr<_1a7bb4567_BuiltinPanicCallExprModel>(&__jule_any_type36);;
				_1a882c399_inspect(_self_, &((*(_1398_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1ac8390e9:;
			{
				jule::Ptr<_1a7bb4a1d_BuiltinAssertCallExprModel> _1428_c = (*(_6228_m)).cast_ptr<_1a7bb4a1d_BuiltinAssertCallExprModel>(&__jule_any_type37);;
				_1a882c399_inspect(_self_, &((*(_1428_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1ac839171:;
			{
				jule::Ptr<_1a7bb6624_BuiltinErrorCallExprModel> _1458_c = (*(_6228_m)).cast_ptr<_1a7bb6624_BuiltinErrorCallExprModel>(&__jule_any_type30);;
				_1a882c399_inspect(_self_, &((*((*(_1458_c))._field_Err))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ac8391e8:;
			{
				jule::Ptr<_1a7bb4ec4_BuiltinMakeCallExprModel> _1488_b = (*(_6228_m)).cast_ptr<_1a7bb4ec4_BuiltinMakeCallExprModel>(&__jule_any_type117);;
				if (((*(_1488_b))._field_Len != nullptr)) {
					_1a882c399_inspect(_self_, &((*_1488_b.alloc)._field_Len));
				};
				if (((*_1488_b.alloc)._field_Cap != nullptr)) {
					_1a882c399_inspect(_self_, &((*_1488_b.alloc)._field_Cap));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ac839270:;
			{
				jule::Ptr<_1a7bb539d_BuiltinAppendCallExprModel> _1568_b = (*(_6228_m)).cast_ptr<_1a7bb539d_BuiltinAppendCallExprModel>(&__jule_any_type33);;
				_1a882c399_inspect(_self_, &((*(_1568_b))._field_Dest));
				_1a882c399_inspect(_self_, &((*_1568_b.alloc)._field_Elements));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1ac8392e7:;
			{
				jule::Ptr<_1a7bb569a_BuiltinLenCallExprModel> _1608_l = (*(_6228_m)).cast_ptr<_1a7bb569a_BuiltinLenCallExprModel>(&__jule_any_type118);;
				_1a882c399_inspect(_self_, &((*((*(_1608_l))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1ac83936e:;
			{
				jule::Ptr<_1a7bb5997_BuiltinCapCallExprModel> _1638_c = (*(_6228_m)).cast_ptr<_1a7bb5997_BuiltinCapCallExprModel>(&__jule_any_type119);;
				_1a882c399_inspect(_self_, &((*((*(_1638_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1ac8393e6:;
			{
				jule::Ptr<_1a7bb5d71_BuiltinDeleteCallExprModel> _1668_b = (*(_6228_m)).cast_ptr<_1a7bb5d71_BuiltinDeleteCallExprModel>(&__jule_any_type39);;
				_1a882c399_inspect(_self_, &((*((*(_1668_b))._field_Dest))._field_Model));
				if (((*_1668_b.alloc)._field_Key != nullptr)) {
					_1a882c399_inspect(_self_, &((*(*(_1668_b))._field_Key.alloc)._field_Model));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1ac83946d:;
			{
				jule::Ptr<_1a7bb6cc8_SizeofExprModel> _1728_s = (*(_6228_m)).cast_ptr<_1a7bb6cc8_SizeofExprModel>(&__jule_any_type120);;
				_1a882c399_inspect(_self_, &((*(_1728_s))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1ac8394e5:;
			{
				jule::Ptr<_1a7bb6eb5_AlignofExprModel> _1758_a = (*(_6228_m)).cast_ptr<_1a7bb6eb5_AlignofExprModel>(&__jule_any_type121);;
				_1a882c399_inspect(_self_, &((*(_1758_a))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1ac83956c:;
			{
				jule::Ptr<_1a7bb7933_FreeExprModel> _1788_f = (*(_6228_m)).cast_ptr<_1a7bb7933_FreeExprModel>(&__jule_any_type40);;
				_1a882c399_inspect(_self_, &((*(_1788_f))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1ac8395e4:;
			{
				jule::Ptr<_1a7bb7636_BackendEmitExprModel> _1818_e = (*(_6228_m)).cast_ptr<_1a7bb7636_BackendEmitExprModel>(&__jule_any_type32);;
				_1a882c0e1_args(_self_, (*(_1818_e))._field_Exprs);
			}
		}
		_match_end_1ac838406:;
	};
}



inline void _1a882c70c_Inspect(_1a882b992_ExprInspector* _self_, jule::Any* _18928_m, jule::Fn<void,jule::Any*> _18942_f) {
	(*(_self_))._field_handler=_18942_f;
	_1a882c399_inspect(_self_, _18928_m);
}












inline jule::Bool _1a896be89_specialCaseDefines_eq(_1a896be89_specialCaseDefines *_self_, _1a896be89_specialCaseDefines _other_) {
	return 
		(_self_->_field_runtime_Map == _other_._field_runtime_Map) &&
		(_self_->_field_runtime_mapIterator == _self_->_field_runtime_mapIterator);
}

inline jule::Bool _1a896c2ec_isAllMethodsLive(_1a896be89_specialCaseDefines* _self_, jule::Ptr<_1a7ba5ca6_Struct> _3028_s) {
	return ((_3028_s == (*(_self_))._field_runtime_Map) || (_3028_s == (*(_self_))._field_runtime_mapIterator));;
}











inline jule::Ptr<_1a896cd58_ObjectDeadCode> static__1a896d3ca_new(jule::Ptr<_1a882795a_IR>* _5021_ir) {
	return jule::new_ptr<_1a896cd58_ObjectDeadCode>(_1a896cd58_ObjectDeadCode{._field_live=_1a896c8a2_liveTable{._field_vars=jule::Slice<jule::Ptr<_1a7c7b178_Var>>(nullptr), ._field_fns=jule::Slice<jule::Ptr<_1a7bbd8b2_FnIns>>(nullptr), ._field_structs=jule::Slice<jule::Ptr<_1a7ba8b11_StructIns>>(nullptr), ._field_traits=jule::Slice<jule::Ptr<_1a7bce362_Trait>>(nullptr)}, ._field_ir=(*(_5021_ir)), ._field_scd=_1a896be89_specialCaseDefines{._field_runtime_Map=jule::Ptr<_1a7ba5ca6_Struct>(nullptr), ._field_runtime_mapIterator=jule::Ptr<_1a7ba5ca6_Struct>(nullptr)}});;
}



inline jule::Bool _1ac8a5aa0_isLive(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _5627_t) {
	jule::Slice<jule::Ptr<_1a7ba8b11_StructIns>> _5711_live = nullptr;;
	{
		
{
			_case_begin_1ac8a771c:;
			{
				_5711_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1ac8a75da:;
	};
	{
		auto expr = &(_5711_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8a7651:;
		if (it != expr_end) {
			jule::I64 _687_i = it - expr->begin();
			{
				if ((_5711_live[_687_i] == (*(_5627_t)))) {
					return true;;
				};
			}
			_iter_next_1ac8a7651:;
			++it;
			_687_i++;
			goto _iter_begin_1ac8a7651;
		}
		_iter_end_1ac8a7651:;
	};
	return false;;
}

inline jule::Bool _1ac8ac997_isLive(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _5627_t) {
	jule::Slice<jule::Ptr<_1a7bbd8b2_FnIns>> _5711_live = nullptr;;
	{
		
{
			_case_begin_1ac8ae559:;
			{
				_5711_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1ac8ae48d:;
	};
	{
		auto expr = &(_5711_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8ae504:;
		if (it != expr_end) {
			jule::I64 _687_i = it - expr->begin();
			{
				if ((_5711_live[_687_i] == (*(_5627_t)))) {
					return true;;
				};
			}
			_iter_next_1ac8ae504:;
			++it;
			_687_i++;
			goto _iter_begin_1ac8ae504;
		}
		_iter_end_1ac8ae504:;
	};
	return false;;
}

inline jule::Bool _1ac8d45c3_isLive(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7bce362_Trait>* _5627_t) {
	jule::Slice<jule::Ptr<_1a7bce362_Trait>> _5711_live = nullptr;;
	{
		
{
			_case_begin_1ac8d62a6:;
			{
				_5711_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1ac8d610d:;
	};
	{
		auto expr = &(_5711_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8d7373:;
		if (it != expr_end) {
			jule::I64 _687_i = it - expr->begin();
			{
				if ((_5711_live[_687_i] == (*(_5627_t)))) {
					return true;;
				};
			}
			_iter_next_1ac8d7373:;
			++it;
			_687_i++;
			goto _iter_begin_1ac8d7373;
		}
		_iter_end_1ac8d7373:;
	};
	return false;;
}

inline jule::Bool _1ac8de7ed_isLive(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7c7b178_Var>* _5627_t) {
	jule::Slice<jule::Ptr<_1a7c7b178_Var>> _5711_live = nullptr;;
	{
		
{
			_case_begin_1ac8e1190:;
			{
				_5711_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1ac8e12e4:;
	};
	{
		auto expr = &(_5711_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8e1d2d:;
		if (it != expr_end) {
			jule::I64 _687_i = it - expr->begin();
			{
				if ((_5711_live[_687_i] == (*(_5627_t)))) {
					return true;;
				};
			}
			_iter_next_1ac8e1d2d:;
			++it;
			_687_i++;
			goto _iter_begin_1ac8e1d2d;
		}
		_iter_end_1ac8e1d2d:;
	};
	return false;;
}



inline void _1ac8a64a7_pushLive(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7ba8b11_StructIns> _7632_t) {
	{
		
{
			_case_begin_1ac8a9ab5:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ba8b11_StructIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7632_t; __jule_collection; }));
			}
		}
		_match_end_1ac8a881c:;
	};
}

inline void _1ac8acda4_pushLive(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7bbd8b2_FnIns> _7632_t) {
	{
		
{
			_case_begin_1ac8b2073:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7bbd8b2_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7632_t; __jule_collection; }));
			}
		}
		_match_end_1ac8b146d:;
	};
}

inline void _1ac8d4eca_pushLive(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7bce362_Trait> _7632_t) {
	{
		
{
			_case_begin_1ac8d8440:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7bce362_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7632_t; __jule_collection; }));
			}
		}
		_match_end_1ac8d6be1:;
	};
}

inline void _1ac8deba5_pushLive(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7c7b178_Var> _7632_t) {
	{
		
{
			_case_begin_1ac8e3923:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c7b178_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7632_t; __jule_collection; }));
			}
		}
		_match_end_1ac8e246b:;
	};
}



inline void _1a896dc49_pushStructAsLive(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _8938_s) {
	if (_1ac8a5aa0_isLive(_self_, _8938_s)) {
		return;;
	};
	_1ac8a64a7_pushLive(_self_, (*(_8938_s)));
	_1a896e002_setReferencesAsLive(_self_, &((*((*(_8938_s))))._field_Refers));
	jule::Bool _953_allLive = _1a896c2ec_isAllMethodsLive(&(*_self_.alloc)._field_scd, (*((*(_8938_s))))._field_Decl);;
	{
		auto expr = &((*((*(_8938_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8ab039:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _9615_m = *it;
			{
				{
					auto expr = &((*(_9615_m))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac8ab985:;
					if (it != expr_end) {
						jule::Ptr<_1a7bbd8b2_FnIns> _9716_ins = *it;
						{
							if (_1ac8ac997_isLive(_self_, &(_9716_ins))) {
								goto _iter_next_1ac8ab985;
							};
							if (_953_allLive) {
								_1ac8acda4_pushLive(_self_, _9716_ins);
								_1a896e002_setReferencesAsLive(_self_, &((*(_9716_ins))._field_Refers));
								goto _iter_next_1ac8ab985;
							};
							if (_1a882e533_IsTraitMethod(_8938_s, &(_9716_ins))) {
								_1ac8acda4_pushLive(_self_, _9716_ins);
								_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
							};
							;
							;
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Eq)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Gt)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_GtEq)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Lt)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_LtEq)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Shl)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Shr)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Add)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Sub)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Div)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Mul)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Mod)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitAnd)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitOr)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitXor)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Neg)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Pos)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitNot)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_AddAssign)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_SubAssign)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_DivAssign)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_MulAssign)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_ModAssign)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_ShlAssign)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_ShrAssign)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitOrAssign)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitAndAssign)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitXorAssign)) {
									_1ac8acda4_pushLive(_self_, _9716_ins);
									_1a896e002_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							;
							jule::Ptr<_1a7bba8d1_Fn> _1359_dispose = _1a7ba9bab_FindMethod((*(_8938_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
							if (((_1359_dispose != nullptr) && static__1a7c7c773_Dispose(_1359_dispose))) {
								jule::Ptr<_1a7bbd8b2_FnIns> _13710_fins = (*_1359_dispose.alloc)._field_Instances[0LL];;
								_1ac8acda4_pushLive(_self_, _13710_fins);
								_1a896e002_setReferencesAsLive(_self_, &((*(_13710_fins))._field_Refers));
							};
							jule::Ptr<_1a7bba8d1_Fn> _1429__str = _1a7ba9bab_FindMethod((*(_8938_s)).ptr(), jule::Str::lit("Str", 3), false);;
							if (((_1429__str != nullptr) && static__1a7c7ca3c_Str(_1429__str))) {
								jule::Ptr<_1a7bbd8b2_FnIns> _14410_fins = (*(_1429__str))._field_Instances[0LL];;
								_1ac8acda4_pushLive(_self_, _14410_fins);
								_1a896e002_setReferencesAsLive(_self_, &((*(_14410_fins))._field_Refers));
							};
						}
						_iter_next_1ac8ab985:;
						++it;
						goto _iter_begin_1ac8ab985;
					}
					_iter_end_1ac8ab985:;
				};
			}
			_iter_next_1ac8ab039:;
			++it;
			goto _iter_begin_1ac8ab039;
		}
		_iter_end_1ac8ab039:;
	};
}



inline void _1a896e002_setReferencesAsLive(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7bc1a4c_ReferenceStack>* _15241_rs) {
	if (((*(_15241_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _1567_i = 0LL;;
	for (; (_1567_i < _1a7bc2267_Len((*(_15241_rs)).ptr())); (_1567_i)++) {
		{
			jule::Any _1588_ref = _1a7bc25a8_At((*(_15241_rs)).ptr(), _1567_i);;
			{
				auto &_match_expr{ _1588_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1ac8d32b4:;
					{
						jule::Ptr<_1a7bce362_Trait> _1619_t = _1588_ref.unsafe_cast_ptr<_1a7bce362_Trait>();;
						if (_1ac8d45c3_isLive(_self_, &(_1619_t))) {
							goto _iter_next_1ac8d248e;
						};
						_1ac8d4eca_pushLive(_self_, _1619_t);
						{
							auto expr = &((*(_1619_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1ac8d3eda:;
							if (it != expr_end) {
								jule::Ptr<_1a7bba8d1_Fn> _16617_ins = *it;
								{
									{
										auto expr = &((*(_16617_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1ac8d8044:;
										if (it != expr_end) {
											jule::Ptr<_1a7bbd8b2_FnIns> _16718_mins = *it;
											{
												if (_1ac8ac997_isLive(_self_, &(_16718_mins))) {
													goto _iter_next_1ac8d8044;
												};
												_1ac8acda4_pushLive(_self_, _16718_mins);
												_1a896e002_setReferencesAsLive(_self_, &((*(_16718_mins))._field_Refers));
											}
											_iter_next_1ac8d8044:;
											++it;
											goto _iter_begin_1ac8d8044;
										}
										_iter_end_1ac8d8044:;
									};
								}
								_iter_next_1ac8d3eda:;
								++it;
								goto _iter_begin_1ac8d3eda;
							}
							_iter_end_1ac8d3eda:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1ac8d30e9:;
					{
						jule::Ptr<_1a7bbd8b2_FnIns> _1769_f = _1588_ref.unsafe_cast_ptr<_1a7bbd8b2_FnIns>();;
						if (_1ac8ac997_isLive(_self_, &(_1769_f))) {
							goto _match_end_1ac8d3171;
						};
						if ((((*(_1769_f))._field_Owner != nullptr) && (!((*((*_1769_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_1ac8a5aa0_isLive(_self_, &((*_1769_f.alloc)._field_Owner))))) {
								_1ac8a64a7_pushLive(_self_, (*_1769_f.alloc)._field_Owner);
								_1a896e002_setReferencesAsLive(_self_, &((*(*(_1769_f))._field_Owner.alloc)._field_Refers));
							};
						};
						_1ac8acda4_pushLive(_self_, _1769_f);
						_1a896e002_setReferencesAsLive(_self_, &((*_1769_f.alloc)._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1ac8d332a:;
					{
						jule::Ptr<_1a7c7b178_Var> _1899_v = _1588_ref.unsafe_cast_ptr<_1a7c7b178_Var>();;
						if (_1ac8de7ed_isLive(_self_, &(_1899_v))) {
							goto _match_end_1ac8d3171;
						};
						_1ac8deba5_pushLive(_self_, _1899_v);
						_1a896e002_setReferencesAsLive(_self_, &((*(_1899_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1ac8d3391:;
					{
						jule::Ptr<_1a7ba8b11_StructIns> _1969_s = _1588_ref.unsafe_cast_ptr<_1a7ba8b11_StructIns>();;
						_1a896dc49_pushStructAsLive(_self_, &(_1969_s));
					}
				}
				_match_end_1ac8d3171:;
			};
		}
	_iter_next_1ac8d248e:;
	}
	_iter_end_1ac8d248e:;;
}



inline void _1a896e2aa_inits(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7c396b9_Package>* _20227_pkg) {
	{
		auto expr = &((*((*(_20227_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8d2626:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _20315_file = *it;
			{
				{
					auto expr = &((*(_20315_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac8e5d65:;
					if (it != expr_end) {
						jule::Ptr<_1a7bba8d1_Fn> _20416_f = *it;
						{
							if ((*(_20416_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1a7bbd8b2_FnIns> _20610_ins = (*(_20416_f))._field_Instances[0LL];;
								if ((!(_1ac8ac997_isLive(_self_, &(_20610_ins))))) {
									_1ac8acda4_pushLive(_self_, _20610_ins);
								};
								_1a896e002_setReferencesAsLive(_self_, &((*(_20610_ins))._field_Refers));
							};
						}
						_iter_next_1ac8e5d65:;
						++it;
						goto _iter_begin_1ac8e5d65;
					}
					_iter_end_1ac8e5d65:;
				};
			}
			_iter_next_1ac8d2626:;
			++it;
			goto _iter_begin_1ac8d2626;
		}
		_iter_end_1ac8d2626:;
	};
}



inline void _1a896e563_collectLivePackage(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7c396b9_Package>* _21640_pkg) {
	_1a896e2aa_inits(_self_, _21640_pkg);
	_1a882a6b6_IterFiles(_21640_pkg, jule::__new_closure<void,jule::Ptr<_1a7ccd9e4_SymbolTable>*>((void*)__jule_anon_1ac8e8b59, jule::Ptr<__jule_anon_1ac8e8b59_ctx>::make(__jule_anon_1ac8e8b59_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac8e8b59_ctx_handler));
	if (_1d9260b26_Test) {
		if ((((*((*(_21640_pkg))))._field_Files.len() > 0LL) && _1a882e8a7_IsStdPackage((*((*((*((*(_21640_pkg))))._field_Files[0LL]))._field_File))._field_Path, jule::Str::lit("testing", 7)))) {
			;
			jule::Ptr<_1a7ba5ca6_Struct> _2469_s = _1a7c3a885_FindStruct((*(_21640_pkg)).ptr(), jule::Str::lit("T", 1), false);;
			jule::Ptr<_1a7ba8b11_StructIns> _2479_ins = (*(_2469_s))._field_Instances[0LL];;
			_1a896dc49_pushStructAsLive(_self_, &(_2479_ins));
			{
				auto expr = &((*(_2479_ins))._field_Methods);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1ac90018d:;
				if (it != expr_end) {
					jule::Ptr<_1a7bba8d1_Fn> _24917_m = *it;
					{
						{
							auto expr = &((*(_24917_m))._field_Instances);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1ac900c0a:;
							if (it != expr_end) {
								jule::Ptr<_1a7bbd8b2_FnIns> _25018_mins = *it;
								{
									if (_1ac8ac997_isLive(_self_, &(_25018_mins))) {
										goto _iter_next_1ac900c0a;
									};
									_1ac8acda4_pushLive(_self_, _25018_mins);
									_1a896e002_setReferencesAsLive(_self_, &((*(_25018_mins))._field_Refers));
								}
								_iter_next_1ac900c0a:;
								++it;
								goto _iter_begin_1ac900c0a;
							}
							_iter_end_1ac900c0a:;
						};
					}
					_iter_next_1ac90018d:;
					++it;
					goto _iter_begin_1ac90018d;
				}
				_iter_end_1ac90018d:;
			};
		};
		{
			auto expr = &((*((*(_21640_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac8ebbe5:;
			if (it != expr_end) {
				jule::Ptr<_1a7ccd9e4_SymbolTable> _25916_file = *it;
				{
					{
						auto expr = &((*(_25916_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac9033c2:;
						if (it != expr_end) {
							jule::Ptr<_1a7bba8d1_Fn> _26017_f = *it;
							{
								if (_1a8830c71_HasDirective(&((*(_26017_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
									jule::Ptr<_1a7bbd8b2_FnIns> _26211_ins = (*_26017_f.alloc)._field_Instances[0LL];;
									if ((!(_1ac8ac997_isLive(_self_, &(_26211_ins))))) {
										_1ac8acda4_pushLive(_self_, _26211_ins);
									};
									_1a896e002_setReferencesAsLive(_self_, &((*(_26211_ins))._field_Refers));
								};
							}
							_iter_next_1ac9033c2:;
							++it;
							goto _iter_begin_1ac9033c2;
						}
						_iter_end_1ac9033c2:;
					};
				}
				_iter_next_1ac8ebbe5:;
				++it;
				goto _iter_begin_1ac8ebbe5;
			}
			_iter_end_1ac8ebbe5:;
		};
	};
}



inline void _1a896e761_collectLive(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9040d7:;
		if (it != expr_end) {
			jule::Ptr<_1a7c36793_ImportInfo> _27415_used = *it;
			{
				if ((!((*(_27415_used))._field_Binded))) {
					_1a896e563_collectLivePackage(_self_, &((*_27415_used.alloc)._field_Package));
				};
			}
			_iter_next_1ac9040d7:;
			++it;
			goto _iter_begin_1ac9040d7;
		}
		_iter_end_1ac9040d7:;
	};
	_1a896e563_collectLivePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	jule::Ptr<_1a7bba8d1_Fn> _2827_main = _1a7c3ac81_FindFn((*(*(_self_))._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	if ((_2827_main != nullptr)) {
		jule::Ptr<_1a7bbd8b2_FnIns> _2848_ins = (*_2827_main.alloc)._field_Instances[0LL];;
		if ((!(_1ac8ac997_isLive(_self_, &(_2848_ins))))) {
			_1ac8acda4_pushLive(_self_, _2848_ins);
		};
		_1a896e002_setReferencesAsLive(_self_, &((*(_2848_ins))._field_Refers));
	};
}



inline void _1a896ea19_removeDeadGlobals(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a7c7b178_Var>>* _29239_vars) {
	jule::I64 _2937_i = 0LL;;
	while ((_2937_i < (*(_29239_vars)).len())) {
		{
			jule::Ptr<_1a7c7b178_Var> _2954_v = (*(_29239_vars))[_2937_i];;
			if (_1ac8de7ed_isLive(_self_, &(_2954_v))) {
				(_2937_i)++;
				goto _iter_next_1ac909d02;
			};
			(*(_29239_vars))=jule::append((*(_29239_vars)).slice(0LL, _2937_i),(*(_29239_vars)).slice((_2937_i + 1LL)));
		}
	_iter_next_1ac909d02:;
	}
	_iter_end_1ac909d02:;;
}



inline void _1a896ecc2_removeDeadFns(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a7bba8d1_Fn>>* _30435_funcs) {
	jule::I64 _3057_i = 0LL;;
	while ((_3057_i < (*(_30435_funcs)).len())) {
		{
			jule::Ptr<_1a7bba8d1_Fn> _3078_f = (*(_30435_funcs))[_3057_i];;
			jule::I64 _3088_j = 0LL;;
			while ((_3088_j < (*(_3078_f))._field_Instances.len())) {
				{
					jule::Ptr<_1a7bbd8b2_FnIns> _3105_ins = (*(_3078_f))._field_Instances[_3088_j];;
					if (_1ac8ac997_isLive(_self_, &(_3105_ins))) {
						(_3088_j)++;
						goto _iter_next_1ac90c6a6;
					};
					(*_3078_f.alloc)._field_Instances=jule::append((*_3078_f.alloc)._field_Instances.slice(0LL, _3088_j),(*_3078_f.alloc)._field_Instances.slice((_3088_j + 1LL)));
				}
			_iter_next_1ac90c6a6:;
			}
			_iter_end_1ac90c6a6:;;
			if (((*_3078_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_30435_funcs))=jule::append((*(_30435_funcs)).slice(0LL, _3057_i),(*(_30435_funcs)).slice((_3057_i + 1LL)));
				goto _iter_next_1ac90b6c7;
			};
			(_3057_i)++;
		}
	_iter_next_1ac90b6c7:;
	}
	_iter_end_1ac90b6c7:;;
}



inline void _1a897007a_removeDeadStructs(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>>* _32539_structs) {
	jule::I64 _3267_i = 0LL;;
	while ((_3267_i < (*(_32539_structs)).len())) {
		{
			jule::Ptr<_1a7ba5ca6_Struct> _3288_s = (*(_32539_structs))[_3267_i];;
			jule::I64 _3298_j = 0LL;;
			while ((_3298_j < (*(_3288_s))._field_Instances.len())) {
				{
					jule::Ptr<_1a7ba8b11_StructIns> _3319_ins = (*(_3288_s))._field_Instances[_3298_j];;
					_1a896ecc2_removeDeadFns(_self_, &((*(_3319_ins))._field_Methods));
					if ((((*_3319_ins.alloc)._field_Methods.len() != 0LL) || _1ac8a5aa0_isLive(_self_, &(_3319_ins)))) {
						(_3298_j)++;
						goto _iter_next_1ac911358;
					};
					(*_3288_s.alloc)._field_Instances=jule::append((*_3288_s.alloc)._field_Instances.slice(0LL, _3298_j),(*_3288_s.alloc)._field_Instances.slice((_3298_j + 1LL)));
				}
			_iter_next_1ac911358:;
			}
			_iter_end_1ac911358:;;
			if (((*_3288_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_32539_structs))=jule::append((*(_32539_structs)).slice(0LL, _3267_i),(*(_32539_structs)).slice((_3267_i + 1LL)));
				goto _iter_next_1ac910511;
			};
			(_3267_i)++;
		}
	_iter_next_1ac910511:;
	}
	_iter_end_1ac910511:;;
}



inline void _1a8970333_removeDeadTraits(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a7bce362_Trait>>* _34738_traits) {
	jule::I64 _3487_i = 0LL;;
	while ((_3487_i < (*(_34738_traits)).len())) {
		{
			jule::Ptr<_1a7bce362_Trait> _3508_t = (*(_34738_traits))[_3487_i];;
			if ((!(_1ac8d45c3_isLive(_self_, &(_3508_t))))) {
				(*(_34738_traits))=jule::append((*(_34738_traits)).slice(0LL, _3487_i),(*(_34738_traits)).slice((_3487_i + 1LL)));
				goto _iter_next_1ac914c1e;
			};
			jule::I64 _3558_j = 0LL;;
			while ((_3558_j < (*(_3508_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1a7ba5ca6_Struct> _3575_s = (*(_3508_t))._field_Implemented[_3558_j];;
					if (((*(_3575_s))._field_Instances.len() > 0LL)) {
						(_3558_j)++;
						goto _iter_next_1ac91566a;
					};
					(*_3508_t.alloc)._field_Implemented=jule::append((*_3508_t.alloc)._field_Implemented.slice(0LL, _3558_j),(*_3508_t.alloc)._field_Implemented.slice((_3558_j + 1LL)));
				}
			_iter_next_1ac91566a:;
			}
			_iter_end_1ac91566a:;;
			(_3487_i)++;
		}
	_iter_next_1ac914c1e:;
	}
	_iter_end_1ac914c1e:;;
}



inline void _1a89705db_removeDeadsFile(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7ccd9e4_SymbolTable>* _36837_file) {
	_1a896ecc2_removeDeadFns(_self_, &((*((*(_36837_file))))._field_Funcs));
	_1a897007a_removeDeadStructs(_self_, &((*((*(_36837_file))))._field_Structs));
	_1a8970333_removeDeadTraits(_self_, &((*((*(_36837_file))))._field_Traits));
	_1a896ea19_removeDeadGlobals(_self_, &((*((*(_36837_file))))._field_Vars));
}



inline void _1a8970894_removeDeadsPackage(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_, jule::Ptr<_1a7c396b9_Package>* _37540_pkg) {
	{
		auto expr = &((*((*(_37540_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac91a230:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _37615_file = *it;
			{
				_1a89705db_removeDeadsFile(_self_, &(_37615_file));
			}
			_iter_next_1ac91a230:;
			++it;
			goto _iter_begin_1ac91a230;
		}
		_iter_end_1ac91a230:;
	};
}



inline void _1a8970a92_removeDeads(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac91a9c2:;
		if (it != expr_end) {
			jule::Ptr<_1a7c36793_ImportInfo> _38215_used = *it;
			{
				if ((!((*(_38215_used))._field_Binded))) {
					_1a8970894_removeDeadsPackage(_self_, &((*_38215_used.alloc)._field_Package));
				};
			}
			_iter_next_1ac91a9c2:;
			++it;
			goto _iter_begin_1ac91a9c2;
		}
		_iter_end_1ac91a9c2:;
	};
	_1a8970894_removeDeadsPackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
}



inline void _1a8970c90_collectSpecialCaseDefines(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_) {
	(*(_self_))._field_scd._field_runtime_Map=_1a7e9de39_RuntimeFindStruct(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));
	(*_self_.alloc)._field_scd._field_runtime_mapIterator=_1a7e9de39_RuntimeFindStruct(&((*(*(_self_))._field_ir.alloc)._field_Runtime), static_cast<jule::Str>(jule::Str::lit("mapIterator", 11)));
}



inline void _1a8970e8d_elimanate(jule::Ptr<_1a896cd58_ObjectDeadCode> _self_) {
	_1a8970c90_collectSpecialCaseDefines(_self_);
	_1a896e761_collectLive(_self_);
	_1a8970a92_removeDeads(_self_);
}








inline jule::Bool _1a8971e7d_scopeDeadCode_eq(_1a8971e7d_scopeDeadCode *_self_, _1a8971e7d_scopeDeadCode _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_except == _self_->_field_except);
}

inline void _1a897249a_optimizeChild(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Ptr<_1a7c1397e_Scope>* _3935_s) {
	jule::Ptr<_1a8971e7d_scopeDeadCode> _407_sdc = jule::new_ptr<_1a8971e7d_scopeDeadCode>(_1a8971e7d_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3935_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1a8974db5_optimizeStmts(_407_sdc);
	};
}



inline void _1a8972753_optimizeBodyChildExceptional(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Ptr<_1a7c1397e_Scope>* _4950_s) {
	jule::Ptr<_1a8971e7d_scopeDeadCode> _507_sdc = jule::new_ptr<_1a8971e7d_scopeDeadCode>(_1a8971e7d_scopeDeadCode{._field_parent=jule::Ptr<_1a8971e7d_scopeDeadCode>(nullptr), ._field_s=(*(_4950_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_1a8974db5_optimizeStmts(_507_sdc);
	};
}



inline void _1a8972a0b_optimizeBodyChild(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Ptr<_1a7c1397e_Scope>* _5939_s) {
	jule::Ptr<_1a8971e7d_scopeDeadCode> _607_sdc = jule::new_ptr<_1a8971e7d_scopeDeadCode>(_1a8971e7d_scopeDeadCode{._field_parent=jule::Ptr<_1a8971e7d_scopeDeadCode>(nullptr), ._field_s=(*(_5939_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1a8974db5_optimizeStmts(_607_sdc);
	};
}



inline void _1a8972cb4_optimizeExprModel(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Any* _6839_model) {
	_1a8976625_exprDeadCode _693_edc = static__1a89769dd_new(&(_self_));;
	_1a8976c96_optimize(&_693_edc, _6839_model);
}



inline void _1a8972eb2_eliminateFollowed(_1a8971e7d_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		((*((*(_self_))._field_s))._field_Stmts).mut_slice(0LL, ((*(_self_))._field_i + 1LL));;
	};
	jule::Ptr<_1a8971e7d_scopeDeadCode> _807_parent = (*(_self_))._field_parent;;
	while ((_807_parent != nullptr)) {
		{
			{
				((*((*(_807_parent))._field_s))._field_Stmts).mut_slice(0LL, ((*(_807_parent))._field_i + 1LL));;
			};
			_807_parent=(*_807_parent.alloc)._field_parent;
		}
	_iter_next_1ac92cd58:;
	}
	_iter_end_1ac92cd58:;;
}



inline void _1a897326a_pushGoto(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Ptr<_1a7c16b3b_GotoSt> _8929_gt) {
	jule::I64 _907_i = 0LL;;
	for (; (_907_i < (*((*(_self_))._field_labels)).len()); (_907_i)++) {
		{
			if (((*(_8929_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_907_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1ac93118b:;
	}
	_iter_end_1ac93118b:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c16b3b_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _8929_gt; __jule_collection; }));
}



inline void _1a8973523_pushLabel(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Ptr<_1a7c164cb_Label> _9930_l) {
	jule::I64 _1007_i = 0LL;;
	while ((_1007_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_9930_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_1007_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_1007_i), (*((*(_self_))._field_gotos)).slice((_1007_i + 1LL)));
				((*((*(_self_))._field_gotos))).mut_slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));;
				goto _iter_next_1ac93338b;
			};
			(_1007_i)++;
		}
	_iter_next_1ac93338b:;
	}
	_iter_end_1ac93338b:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c164cb_Label>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _9930_l; __jule_collection; }));
}



inline void _1a89737cb_optimizeRangeIter(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Ptr<_1a7c157b6_RangeIter> _11238_it) {
	_1a8972cb4_optimizeExprModel(_self_, &((*((*(_11238_it))._field_Expr))._field_Model));
	_1a8972a0b_optimizeBodyChild(_self_, &((*_11238_it.alloc)._field_Scope));
}



inline void _1a8973a84_optimizeWhileIter(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Ptr<_1a7c14d6a_WhileIter> _11738_it) {
	_1a8972cb4_optimizeExprModel(_self_, &((*(_11738_it))._field_Expr));
	if (((*_11738_it.alloc)._field_Next != nullptr)) {
		_1a8974bb7_optimizeStmt(_self_, (*_11738_it.alloc)._field_Next);
	};
	_1a8972a0b_optimizeBodyChild(_self_, &((*_11738_it.alloc)._field_Scope));
}



inline void _1a8973d3c_optimizeInfIter(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Ptr<_1a7c148b4_InfIter> _12536_it) {
	_1a8972a0b_optimizeBodyChild(_self_, &((*(_12536_it))._field_Scope));
}



inline void _1a89740e5_optimizeConditional(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Ptr<_1a7c145b7_Conditional> _12940_c) {
	{
		auto expr = &((*(_12940_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac93a151:;
		if (it != expr_end) {
			jule::Ptr<_1a7c13d9c_If> _13015_case = *it;
			{
				if ((_13015_case != nullptr)) {
					_1a8972cb4_optimizeExprModel(_self_, &((*_13015_case.alloc)._field_Expr));
					_1a8972a0b_optimizeBodyChild(_self_, &((*_13015_case.alloc)._field_Scope));
				};
			}
			_iter_next_1ac93a151:;
			++it;
			goto _iter_begin_1ac93a151;
		}
		_iter_end_1ac93a151:;
	};
	if (((*_12940_c.alloc)._field_Default != nullptr)) {
		if (((*_12940_c.alloc)._field_Elifs.len() == 0LL)) {
			_1a897249a_optimizeChild(_self_, &((*(*(_12940_c))._field_Default.alloc)._field_Scope));
		} else {
			_1a8972a0b_optimizeBodyChild(_self_, &((*(*(_12940_c))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1a897439d_optimizeMatch(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Ptr<_1a7c181ae_Match> _14734_m) {
	{
		auto expr = &((*(_14734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac93d6d7:;
		if (it != expr_end) {
			jule::Ptr<_1a7c18bd7_Case> _14815_case = *it;
			{
				{
					auto expr = &((*(_14815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac93e166:;
					if (it != expr_end) {
						jule::Ptr<_1a7cd41ae_Data> _14916_expr = *it;
						{
							_1a8972cb4_optimizeExprModel(_self_, &((*(_14916_expr))._field_Model));
						}
						_iter_next_1ac93e166:;
						++it;
						goto _iter_begin_1ac93e166;
					}
					_iter_end_1ac93e166:;
				};
				_1a8972a0b_optimizeBodyChild(_self_, &((*_14815_case.alloc)._field_Scope));
			}
			_iter_next_1ac93d6d7:;
			++it;
			goto _iter_begin_1ac93d6d7;
		}
		_iter_end_1ac93d6d7:;
	};
	if (((*_14734_m.alloc)._field_Default != nullptr)) {
		if (((*_14734_m.alloc)._field_Cases.len() == 0LL)) {
			_1a897249a_optimizeChild(_self_, &((*(*(_14734_m))._field_Default.alloc)._field_Scope));
		} else {
			_1a8972a0b_optimizeBodyChild(_self_, &((*(*(_14734_m))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1a8974656_optimizeAssign(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Ptr<_1a7c174bb_Assign> _16535_assign) {
	_1a8972cb4_optimizeExprModel(_self_, &((*((*(_16535_assign))._field_Left))._field_Model));
	_1a8972cb4_optimizeExprModel(_self_, &((*((*_16535_assign.alloc)._field_Right))._field_Model));
}



inline void _1a897490e_optimizeMultiAssign(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Ptr<_1a7c17972_MultiAssign> _17040_assign) {
	{
		auto expr = &((*(_17040_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac943533:;
		if (it != expr_end) {
			jule::Ptr<_1a7cd41ae_Data> _17115_l = *it;
			{
				if ((_17115_l != nullptr)) {
					_1a8972cb4_optimizeExprModel(_self_, &((*_17115_l.alloc)._field_Model));
				};
			}
			_iter_next_1ac943533:;
			++it;
			goto _iter_begin_1ac943533;
		}
		_iter_end_1ac943533:;
	};
	_1a8972cb4_optimizeExprModel(_self_, &((*_17040_assign.alloc)._field_Right));
}



inline void _1a8974bb7_optimizeStmt(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_, jule::Any _17933_st) {
	{
		auto &_match_expr{ _17933_st };
		
		if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1ac9451d3:;
			{
				jule::Ptr<_1a7c1397e_Scope> _1828_scope = _17933_st.unsafe_cast_ptr<_1a7c1397e_Scope>();;
				if ((*(_1828_scope))._field_Deferred) {
					_1a89751b2_eliminateDeadCodeOfScope(_1828_scope);
				} else {
					_1a897249a_optimizeChild(_self_, &(_1828_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ac944e4c:;
			{
				_1a89737cb_optimizeRangeIter(_self_, _17933_st.cast_ptr<_1a7c157b6_RangeIter>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ac94525a:;
			{
				_1a8973a84_optimizeWhileIter(_self_, _17933_st.cast_ptr<_1a7c14d6a_WhileIter>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1ac9452d2:;
			{
				_1a8973d3c_optimizeInfIter(_self_, _17933_st.cast_ptr<_1a7c148b4_InfIter>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1ac945359:;
			{
				_1a89740e5_optimizeConditional(_self_, _17933_st.cast_ptr<_1a7c145b7_Conditional>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1ac9453d1:;
			{
				_1a897439d_optimizeMatch(_self_, _17933_st.cast_ptr<_1a7c181ae_Match>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1ac945458:;
			{
				_1a8974656_optimizeAssign(_self_, _17933_st.cast_ptr<_1a7c174bb_Assign>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1ac9454d0:;
			{
				_1a897490e_optimizeMultiAssign(_self_, _17933_st.cast_ptr<_1a7c17972_MultiAssign>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ac945557:;
			{
				jule::Ptr<_1a7cd41ae_Data> _2038_d = _17933_st.unsafe_cast_ptr<_1a7cd41ae_Data>();;
				if ((*(_self_))._field_except) {
					goto _match_end_1ac94507e;
				};
				{
					auto &_match_expr{ (*(_2038_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type36) {
						_case_begin_1ac94acbb:;
						{
							_1a8972eb2_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_1ac94b43c:;
						{
							_1a8972cb4_optimizeExprModel(_self_, &((*(_2038_d))._field_Model));
						}
					}
					_match_end_1ac94b3c6:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1ac9455ce:;
			{
				_1a8972eb2_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1ac945656:;
			{
				_1a897326a_pushGoto(_self_, _17933_st.cast_ptr<_1a7c16b3b_GotoSt>(&__jule_any_type49));
				_1a8972eb2_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1ac9456cd:;
			{
				_1a8973523_pushLabel(_self_, _17933_st.cast_ptr<_1a7c164cb_Label>(&__jule_any_type28));
			}
		}
		_match_end_1ac94507e:;
	};
}



inline void _1a8974db5_optimizeStmts(jule::Ptr<_1a8971e7d_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_s))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1a8974bb7_optimizeStmt(_self_, (*(*(_self_))._field_s.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1ac94e0cc:;
	}
	_iter_end_1ac94e0cc:;;
}








inline jule::Bool _1a8976625_exprDeadCode_eq(_1a8976625_exprDeadCode *_self_, _1a8976625_exprDeadCode _other_) {
	return 
		(_self_->_field_s == _other_._field_s);
}

inline _1a8976625_exprDeadCode static__1a89769dd_new(jule::Ptr<_1a8971e7d_scopeDeadCode>* _1821_s) {
	return _1a8976625_exprDeadCode{._field_s=(*(_1821_s))};;
}



inline void _1a8976c96_optimize(_1a8976625_exprDeadCode* _self_, jule::Any* _2425_model) {
	jule::Ptr<_1a882b992_ExprInspector> _257_inspector = static__1a882bd38_New();;
	_1a882c70c_Inspect(_257_inspector.ptr(), _2425_model, jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1ac951c28, jule::Ptr<__jule_anon_1ac951c28_ctx>::make(__jule_anon_1ac951c28_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac951c28_ctx_handler));
}








inline jule::Bool _1a7e125d9_ExceptionalForwardingExprModel_eq(_1a7e125d9_ExceptionalForwardingExprModel *_self_, _1a7e125d9_ExceptionalForwardingExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a7e1296e_SwapExprModel_eq(_1a7e1296e_SwapExprModel *_self_, _1a7e1296e_SwapExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1a7e12d48_EmptyCompareExprModel_eq(_1a7e12d48_EmptyCompareExprModel *_self_, _1a7e12d48_EmptyCompareExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Neg == _self_->_field_Neg);
}






inline jule::Bool _1a7e131bc_RefExprModel_eq(_1a7e131bc_RefExprModel *_self_, _1a7e131bc_RefExprModel _other_) {
	return 
		(_self_->_field_Var == _other_._field_Var);
}






inline jule::Bool _1a7e13640_StrCompExprModel_eq(_1a7e13640_StrCompExprModel *_self_, _1a7e13640_StrCompExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_NotEq == _self_->_field_NotEq);
}






inline jule::Bool _1a7e13bc3_MutSlicingExprModel_eq(_1a7e13bc3_MutSlicingExprModel *_self_, _1a7e13bc3_MutSlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1a7e13ec0_UnsafeBinaryExprModel_eq(_1a7e13ec0_UnsafeBinaryExprModel *_self_, _1a7e13ec0_UnsafeBinaryExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1a7e14355_UnsafeIndexingExprModel_eq(_1a7e14355_UnsafeIndexingExprModel *_self_, _1a7e14355_UnsafeIndexingExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1a7e1472e_PushToSliceExprModel_eq(_1a7e1472e_PushToSliceExprModel *_self_, _1a7e1472e_PushToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elems == _self_->_field_Elems);
}






inline jule::Bool _1a7e14b08_AppendToSliceExprModel_eq(_1a7e14b08_AppendToSliceExprModel *_self_, _1a7e14b08_AppendToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Slice == _self_->_field_Slice);
}






inline jule::Bool _1a7e14ed2_StrRuneIter_eq(_1a7e14ed2_StrRuneIter *_self_, _1a7e14ed2_StrRuneIter _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Base == _self_->_field_Base);
}






inline jule::Bool _1a7e152ce_UnsafeDerefExprModel_eq(_1a7e152ce_UnsafeDerefExprModel *_self_, _1a7e152ce_UnsafeDerefExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1a7e155cb_UnsafeCastingExprModel_eq(_1a7e155cb_UnsafeCastingExprModel *_self_, _1a7e155cb_UnsafeCastingExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1a7e162ad_nilVar_eq(_1a7e162ad_nilVar *_self_, _1a7e162ad_nilVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_safe == _self_->_field_safe);
}





inline void _1a7e16a94_pushVar(_1a7e165ee_nils* _self_, jule::Uintptr _2923_var, jule::Bool _2937_safe) {
	if (((!(_1a884976d_Access)) || (_2923_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9a3780:;
		if (it != expr_end) {
			_1a7e162ad_nilVar _3415_v = *it;
			{
				if ((_3415_v._field_var == _2923_var)) {
					_3415_v._field_safe=_2937_safe;
					return;;
				};
			}
			_iter_next_1ac9a3780:;
			++it;
			goto _iter_begin_1ac9a3780;
		}
		_iter_end_1ac9a3780:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9a462c:;
		if (it != expr_end) {
			_1a7e162ad_nilVar _4115_v = *it;
			{
				if ((_4115_v._field_var == 0LLU)) {
					_4115_v._field_var=_2923_var;
					_4115_v._field_safe=_2937_safe;
					return;;
				};
			}
			_iter_next_1ac9a462c:;
			++it;
			goto _iter_begin_1ac9a462c;
		}
		_iter_end_1ac9a462c:;
	};
	{ jule::Slice<_1a7e162ad_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1a7e162ad_nilVar{._field_var=_2923_var, ._field_safe=_2937_safe}); };
}



inline jule::Bool _1a7e16dd5_removeVar(_1a7e165ee_nils* _self_, jule::Uintptr _5225_var) {
	if ((_5225_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac9a6651:;
			if (it != expr_end) {
				_1a7e162ad_nilVar _5416_v = *it;
				{
					if ((_5416_v._field_var == _5225_var)) {
						_5416_v._field_var=0LLU;
						_5416_v._field_safe=false;
						return true;;
					};
				}
				_iter_next_1ac9a6651:;
				++it;
				goto _iter_begin_1ac9a6651;
			}
			_iter_end_1ac9a6651:;
		};
	};
	return false;;
}



inline jule::Bool _1a7e17226_isSafe(_1a7e165ee_nils* _self_, jule::Uintptr _6622_var) {
	if ((_6622_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac9a7ce5:;
			if (it != expr_end) {
				_1a7e162ad_nilVar _6811_v = *it;
				{
					if ((_6811_v._field_var == _6622_var)) {
						return _6811_v._field_safe;;
					};
				}
				_iter_next_1ac9a7ce5:;
				++it;
				goto _iter_begin_1ac9a7ce5;
			}
			_iter_end_1ac9a7ce5:;
		};
	};
	return false;;
}








inline jule::Bool _1a8834769_scopeOptimizer_eq(_1a8834769_scopeOptimizer *_self_, _1a8834769_scopeOptimizer _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Ptr<_1a8834769_scopeOptimizer> static__1a8834d1e_new(jule::Ptr<_1a7c1397e_Scope> _5120_scope) {
	jule::Ptr<_1a8834769_scopeOptimizer> _527_sc = jule::new_ptr<_1a8834769_scopeOptimizer>(_1a8834769_scopeOptimizer{._field_parent=jule::Ptr<_1a8834769_scopeOptimizer>(nullptr), ._field_i=0, ._field_scope=_5120_scope, ._field_data=jule::new_ptr<_1a884457b_data>(_1a884457b_data{._field_boundary=jule::new_ptr<_1a8845e73_boundary>(_1a8845e73_boundary{._field_vars=jule::Slice<_1a8845b32_boundaryVar>(nullptr)}), ._field_nils=jule::new_ptr<_1a7e165ee_nils>(_1a7e165ee_nils{._field_vars=jule::Slice<_1a7e162ad_nilVar>(nullptr)}), ._field_dynamic=jule::new_ptr<_1a88418ec_dynamic>(_1a88418ec_dynamic{._field_vars=jule::Slice<_1a88415ab_dynamicVar>(nullptr)})})});;
	return _527_sc;;
}



inline void _1a88350c7_setCurrentStmt(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Any _6335_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_6335_stmt))))));
}



inline void _1a88352c5_removeCurrent(jule::Ptr<_1a8834769_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*(_self_))._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _1a883555b_isLastStmt(jule::Ptr<_1a8834769_scopeOptimizer> _self_) {
	jule::Ptr<_1a8834769_scopeOptimizer> _737_r = _self_;;
	for (; (_737_r != nullptr); _737_r=(*_737_r.alloc)._field_parent) {
		{
			if ((((*((*_737_r.alloc)._field_scope))._field_Stmts.len() - (*_737_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_1ac9b9d18:;
	}
	_iter_end_1ac9b9d18:;;
	return true;;
}



inline jule::Bool _1a88357e2_isIter(jule::Ptr<_1a8834769_scopeOptimizer> _self_) {
	jule::Ptr<_1a8834769_scopeOptimizer> _837_r = (*(_self_))._field_parent;;
	for (; (_837_r != nullptr); _837_r=(*_837_r.alloc)._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_837_r))._field_scope))._field_Stmts[(*(_837_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type47 || _match_expr.type == &__jule_any_type45 || _match_expr.type == &__jule_any_type43) {
					_case_begin_1ac9bc667:;
					{
						return true;;
					}
				}
				_match_end_1ac9bc5bd:;
			};
		}
	_iter_next_1ac9bb248:;
	}
	_iter_end_1ac9bb248:;;
	return false;;
}



inline void _1a8835a9a_optimizeData(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7cd41ae_Data> _9533_d) {
	{
		auto &_match_expr{ (*(_9533_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1ac9bd833:;
			{
				jule::Ptr<_1a7baee03_FnCallExprModel> _988_m = (*(_9533_d))._field_Model.unsafe_cast_ptr<_1a7baee03_FnCallExprModel>();;
				if (_1d92614d9_Production) {
					if (((!(_1a7bbed7a_IsBuiltin((*(_988_m))._field_Func.ptr()))) && _1a882e8a7_IsStdPackage((*((*((*((*(*(_988_m))._field_Func.alloc)._field_Decl))._field_Token))._field_File))._field_Path, jule::Str::lit("debug", 5)))) {
						_1a88350c7_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
				static__1a883b980_optimizeData(&((*(_9533_d))._field_Model), &((*_self_.alloc)._field_data));
				if (((((((_1a884abe2_Exceptional && (*(*((*(_988_m))._field_Func))._field_Decl.alloc)._field_Exceptional) && ((*_988_m.alloc)._field_Except != nullptr)) && ((*(*(_988_m))._field_Except.alloc)._field_Stmts.len() == 1LL)) && _1a882d510_IsForwarded(&((*_988_m.alloc)._field_Except))) && _1a883555b_isLastStmt(_self_)) && (!(_1a88357e2_isIter(_self_))))) {
					_1a88350c7_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a7e125d9_ExceptionalForwardingExprModel>(_1a7e125d9_ExceptionalForwardingExprModel{._field_Expr=_988_m}), &__jule_any_type122));
				};
				return;;
			}
		}
		_match_end_1ac9bd7ab:;
	};
	static__1a883b980_optimizeData(&((*_9533_d.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1a8835d53_optimizeVar(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c7b178_Var> _12132_v) {
	if (((*(_12132_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _1a7e17c60_isNilValidType((*((*_12132_v.alloc)._field_Kind))._field_Kind)) && _1a7e17996_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(*(_12132_v))._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_1a7e16a94_pushVar((*((*(_self_))._field_data))._field_nils, _1a7e180a1_getNilVar(jule::Any(_12132_v, &__jule_any_type8)), true);
		};
		if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
			jule::Ptr<_1a7d1bc96_TypeKind> _1309_kind = _1a88431c3_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_12132_v))._field_Kind.alloc)._field_Kind, (*(*((*(_12132_v))._field_Value))._field_Data.alloc)._field_Model);;
			if ((_1309_kind != nullptr)) {
				if (_1a8842c94_isDynamicValidType((*(*(_12132_v))._field_Kind.alloc)._field_Kind)) {
					_1a8841d92_pushVar((*((*(_self_))._field_data))._field_dynamic, _1a8843514_getDynamicVar(jule::Any(_12132_v, &__jule_any_type8)), _1309_kind);
				};
			};
		};
		static__1a883b980_optimizeData(&((*(*((*(_12132_v))._field_Value))._field_Data.alloc)._field_Model), &((*_self_.alloc)._field_data));
	};
}



inline void _1a883610b_optimizeConditional(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c145b7_Conditional> _14240_c) {
	_1a8844081_dataCheckpoint _1437_checkpoint = _1a8844933_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9ce954:;
		if (it != expr_end) {
			jule::Ptr<_1a7c13d9c_If> _14415_elif = *it;
			{
				static__1a883b980_optimizeData(&((*(_14415_elif))._field_Expr), &((*_self_.alloc)._field_data));
				_1a8838c8a_optimizeChild(_self_, (*_14415_elif.alloc)._field_Scope);
				if ((((*(_14240_c))._field_Elifs.len() > 1LL) || ((*_14240_c.alloc)._field_Default != nullptr))) {
					_1a8844bdb_loadCheckpoint((*(_self_))._field_data, &(_1437_checkpoint));
				};
			}
			_iter_next_1ac9ce954:;
			++it;
			goto _iter_begin_1ac9ce954;
		}
		_iter_end_1ac9ce954:;
	};
	if (((*_14240_c.alloc)._field_Default != nullptr)) {
		_1a8838c8a_optimizeChild(_self_, (*(*(_14240_c))._field_Default.alloc)._field_Scope);
		_1a8844bdb_loadCheckpoint((*(_self_))._field_data, &(_1437_checkpoint));
	};
	if ((!(_1a884a197_Cond))) {
		return;;
	};
	jule::Bool _1607_constCase = false;;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9d35d4:;
		if (it != expr_end) {
			jule::I64 _1638_i = it - expr->begin();
			jule::Ptr<_1a7c13d9c_If> _16315_elif = *it;
			{
				if ((!(_1a883931d_isConstantValidConditionalCase(&(_16315_elif))))) {
					goto _iter_next_1ac9d35d4;
				};
				_1607_constCase=true;
				((*(_14240_c))._field_Elifs).mut_slice(0LL, _1638_i);;
				(*_14240_c.alloc)._field_Default=jule::new_ptr<_1a7c14199_Else>(_1a7c14199_Else{._field_Scope=(*(_16315_elif))._field_Scope});
				goto _iter_end_1ac9d35d4;
			}
			_iter_next_1ac9d35d4:;
			++it;
			_1638_i++;
			goto _iter_begin_1ac9d35d4;
		}
		_iter_end_1ac9d35d4:;
	};
	if (((*_14240_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a7c13d9c_If>* _1807_i = (&((*(_14240_c))._field_Elifs[0LL]));;
	jule::Ptr<_1a7c13d9c_If>* _1813_end = (&((*_14240_c.alloc)._field_Elifs[((*_14240_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_1807_i <= _1813_end); (_1807_i)++) {
		{
			{
				if (_1a8839c36_isUnreachableConditionalCase(&((*(_1807_i))))) {
					(*(_1807_i))=nullptr;
				};
			};
		}
	_iter_next_1ac9d6bae:;
	}
	_iter_end_1ac9d6bae:;;
	if (((*_14240_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_1607_constCase))) {
		return;;
	};
	jule::I64 _1997_only = -1LL;;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9d85b7:;
		if (it != expr_end) {
			jule::I64 _2007_j = it - expr->begin();
			jule::Ptr<_1a7c13d9c_If> _20010_elif = *it;
			{
				if ((_20010_elif != nullptr)) {
					if ((_1997_only != -1LL)) {
						return;;
					};
					_1997_only=_2007_j;
				};
			}
			_iter_next_1ac9d85b7:;
			++it;
			_2007_j++;
			goto _iter_begin_1ac9d85b7;
		}
		_iter_end_1ac9d85b7:;
	};
	if ((_1997_only != -1LL)) {
		_1a88350c7_setCurrentStmt(_self_, jule::Any((*((*_14240_c.alloc)._field_Elifs[_1997_only]))._field_Scope, &__jule_any_type29));
	};
}



inline void _1a8836529_buildDefaultConstantTrueCase(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c18bd7_Case> _21649_case, jule::I64* _21667_i, jule::Ptr<_1a7c181ae_Match>* _21680_m) {
	(*(_21649_case))._field_Exprs=nullptr;
	jule::I64 _2183_start = (*(_21667_i));;
	_julec_label_1ac9db4bb:;
	for (;;) {
		{
			if (((*((*_21649_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1ac9db466;
			};
			jule::Any *_2249_stmt = &((*(*(_21649_case))._field_Scope.alloc)._field_Stmts[((*(*(_21649_case))._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_2249_stmt)) };
				
				if (_match_expr.type == &__jule_any_type56) {
					_case_begin_1ac9dd3d0:;
					{
						((*(_21667_i)))++;
						if (((*(_21667_i)) >= (*((*(_21680_m))))._field_Cases.len())) {
							(*(_2249_stmt))=jule::Any((*((*((*(_21680_m))))._field_Default))._field_Scope, &__jule_any_type29);
							goto _iter_end_1ac9db466;
						};
						_21649_case=(*((*(_21680_m))))._field_Cases[(*(_21667_i))];
						(*(_2249_stmt))=jule::Any((*_21649_case.alloc)._field_Scope, &__jule_any_type29);
					}
				}
				else {
					_case_begin_1ac9dd4ac:;
					{
						goto _iter_end_1ac9db466;
					}
				}
				_match_end_1ac9dd369:;
			};
		}
	_iter_next_1ac9db466:;
	}
	_iter_end_1ac9db466:;;
	(*((*(_21680_m))))._field_Default=(*((*(_21680_m))))._field_Cases[_2183_start];
	((*((*(_21680_m))))._field_Cases).mut_slice(0LL, _2183_start);;
}



inline void _1a88367d2_optimizeMatch(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c181ae_Match> _24234_m) {
	jule::Uintptr _2437_var = 0LLU;;
	if ((_1a884b253_Dynamic && (*(_24234_m))._field_TypeMatch)) {
		_2437_var=_1a8843514_getDynamicVar((*((*_24234_m.alloc)._field_Expr))._field_Model);
	};
	_1a8844081_dataCheckpoint _2477_checkpoint = _1a8844933_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9e234b:;
		if (it != expr_end) {
			jule::Ptr<_1a7c18bd7_Case> _24815_case = *it;
			{
				{
					auto expr = &((*(_24815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac9e2c42:;
					if (it != expr_end) {
						jule::Ptr<_1a7cd41ae_Data> _24916_expr = *it;
						{
							static__1a883b980_optimizeData(&((*(_24916_expr))._field_Model), &((*_self_.alloc)._field_data));
						}
						_iter_next_1ac9e2c42:;
						++it;
						goto _iter_begin_1ac9e2c42;
					}
					_iter_end_1ac9e2c42:;
				};
				if ((((*_24815_case.alloc)._field_Exprs.len() == 1LL) && ((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr))) {
					jule::Ptr<_1a7d1bc96_TypeKind> _2549_kind = _1a88431c3_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_24815_case))._field_Exprs[0LL]))._field_Kind, nullptr);;
					if ((_2549_kind != nullptr)) {
						_1a8841d92_pushVar((*((*(_self_))._field_data))._field_dynamic, _2437_var, _2549_kind);
					} else {
						_1a88421d3_removeVar((*((*(_self_))._field_data))._field_dynamic, _2437_var);
					};
				};
				_1a8838c8a_optimizeChild(_self_, (*_24815_case.alloc)._field_Scope);
				if ((((*_24234_m.alloc)._field_Cases.len() > 1LL) || ((*_24234_m.alloc)._field_Default != nullptr))) {
					_1a8844bdb_loadCheckpoint((*(_self_))._field_data, &(_2477_checkpoint));
				};
			}
			_iter_next_1ac9e234b:;
			++it;
			goto _iter_begin_1ac9e234b;
		}
		_iter_end_1ac9e234b:;
	};
	if (((*_24234_m.alloc)._field_Default != nullptr)) {
		_1a8838c8a_optimizeChild(_self_, (*(*(_24234_m))._field_Default.alloc)._field_Scope);
		_1a8844bdb_loadCheckpoint((*(_self_))._field_data, &(_2477_checkpoint));
	};
	if ((!(_1a884a197_Cond))) {
		return;;
	};
	jule::Bool _2757_constCase = false;;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9e970a:;
		if (it != expr_end) {
			jule::I64 _27812_i = it - expr->begin();
			jule::Ptr<_1a7c18bd7_Case> _27819_case = *it;
			{
				if ((!(_1a88398e5_isConstantValidMatchCase(&(_27819_case))))) {
					goto _iter_next_1ac9e970a;
				};
				_2757_constCase=true;
				_1a8836529_buildDefaultConstantTrueCase(_self_, _27819_case, &(_27812_i), &(_24234_m));
				goto _iter_end_1ac9e970a;
			}
			_iter_next_1ac9e970a:;
			++it;
			_27812_i++;
			goto _iter_begin_1ac9e970a;
		}
		_iter_end_1ac9e970a:;
	};
	if (((*_24234_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a7c18bd7_Case>* _2927_i = (&((*(_24234_m))._field_Cases[0LL]));;
	jule::Ptr<_1a7c18bd7_Case>* _2933_end = (&((*_24234_m.alloc)._field_Cases[((*_24234_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_2927_i <= _2933_end); (_2927_i)++) {
		{
			{
				if (_1a8839ebc_isUnreachableMatchCase(&((*(_2927_i))))) {
					(*(_2927_i))=nullptr;
				};
			};
		}
	_iter_next_1ac9ec2bd:;
	}
	_iter_end_1ac9ec2bd:;;
	if ((!(_2757_constCase))) {
		return;;
	};
	jule::I64 _3077_only = -1LL;;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9ed599:;
		if (it != expr_end) {
			jule::I64 _3087_j = it - expr->begin();
			jule::Ptr<_1a7c18bd7_Case> _30810_case = *it;
			{
				if ((_30810_case != nullptr)) {
					if ((_3077_only != -1LL)) {
						return;;
					};
					_3077_only=_3087_j;
				};
			}
			_iter_next_1ac9ed599:;
			++it;
			_3087_j++;
			goto _iter_begin_1ac9ed599;
		}
		_iter_end_1ac9ed599:;
	};
	if ((_3077_only != -1LL)) {
		_1a88350c7_setCurrentStmt(_self_, jule::Any((*((*_24234_m.alloc)._field_Cases[_3077_only]))._field_Scope, &__jule_any_type29));
	};
}



inline void _1a8836a8a_optimizeRangeIter(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c157b6_RangeIter> _32438_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_32438_it))._field_KeyA != nullptr))) {
		_1a8846418_pushVar((*((*(_self_))._field_data))._field_boundary, _1a88483a4_getBoundaryVar((*((*_32438_it.alloc)._field_Expr))._field_Model), jule::Any((*_32438_it.alloc)._field_KeyA, &__jule_any_type8));
	};
	_1a8838c8a_optimizeChild(_self_, (*_32438_it.alloc)._field_Scope);
	if (_1a884ae9a_Iter) {
		{
			auto &_match_expr{ (*((*(_32438_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type96) {
				_case_begin_1aca032b3:;
				{
					jule::Ptr<_1a7bae551_CastingExprModel> _3369_cem = (*((*(_32438_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1a7bae551_CastingExprModel>();;
					jule::Ptr<_1a7d24dae_Prim> _3375_eprim = _1a7d1e44c_Prim((*(_3369_cem))._field_ExprKind.ptr());;
					if (((_3375_eprim == nullptr) || (!(_1a7d28379_IsStr(_3375_eprim.ptr()))))) {
						goto _match_end_1aca0323b;
					};
					jule::Ptr<_1a7d293ad_Slc> _3419_s = _1a7d204a3_Slc((*_3369_cem.alloc)._field_Kind.ptr());;
					if ((_3419_s == nullptr)) {
						goto _match_end_1aca0323b;
					};
					jule::Ptr<_1a7d24dae_Prim> _3455_prim = _1a7d1e44c_Prim((*(_3419_s))._field_Elem.ptr());;
					if ((_3455_prim == nullptr)) {
						goto _match_end_1aca0323b;
					};
					{
						
						if (_1a7d267d9_IsU8(_3455_prim.ptr())) {
							_case_begin_1aca06b9b:;
							{
								(*_32438_it.alloc)._field_Expr=(*_3369_cem.alloc)._field_Expr;
							}
						}
						else if (_1a7d262bc_IsI32(_3455_prim.ptr())) {
							_case_begin_1aca06d77:;
							{
								static__1a883b980_optimizeData(&((*((*_3369_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data));
								_1a88350c7_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a7e14ed2_StrRuneIter>(_1a7e14ed2_StrRuneIter{._field_Expr=(*_3369_cem.alloc)._field_Expr, ._field_Base=_32438_it}), &__jule_any_type123));
								return;;
							}
						}
						_match_end_1aca069ae:;
					};
				}
			}
			_match_end_1aca0323b:;
		};
	};
	static__1a883b980_optimizeData(&((*(*(_32438_it))._field_Expr.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1a8836d43_optimizeWhileIter(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c14d6a_WhileIter> _36938_it) {
	static__1a883b980_optimizeData(&((*(_36938_it))._field_Expr), &((*(_self_))._field_data));
	_1a88389d2_optimizeStmt(_self_, (*_36938_it.alloc)._field_Next);
	_1a8838c8a_optimizeChild(_self_, (*_36938_it.alloc)._field_Scope);
}



inline jule::Bool _1a8837184_substr(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c174bb_Assign> _37527_a) {
	if (((*((*(_37527_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_37527_a))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1aca0e621:;
			{
				jule::Ptr<_1a7bb1a70_SlicingExprModel> _3818_sem = (*((*(_37527_a))._field_Right))._field_Model.unsafe_cast_ptr<_1a7bb1a70_SlicingExprModel>();;
				if (_1a7e119b2_equalModels((*((*_37527_a.alloc)._field_Left))._field_Model, (*(_3818_sem))._field_Expr)) {
					_1a88350c7_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a7e13bc3_MutSlicingExprModel>(_1a7e13bc3_MutSlicingExprModel{._field_Token=(*_3818_sem.alloc)._field_Token, ._field_Expr=(*_3818_sem.alloc)._field_Expr, ._field_Left=(*_3818_sem.alloc)._field_Left, ._field_Right=(*_3818_sem.alloc)._field_Right}), &__jule_any_type124));
					return true;;
				};
			}
		}
		_match_end_1aca0e599:;
	};
	return false;;
}



inline jule::Bool _1a88374c5_strAssign(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c174bb_Assign> _39530_a) {
	if ((!(_1a884a3d9_Str))) {
		return false;;
	};
	jule::Ptr<_1a7d24dae_Prim> _3993_lp = _1a7d1e44c_Prim((*((*(_39530_a))._field_Left))._field_Kind.ptr());;
	if (((_3993_lp == nullptr) || (!(_1a7d28379_IsStr(_3993_lp.ptr()))))) {
		return false;;
	};
	return _1a8837184_substr(_self_, _39530_a);;
}



inline jule::Bool _1a8837816_sliceAssign(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c174bb_Assign> _40632_a) {
	if (((!(_1a884a681_Slice)) || (_1a7d204a3_Slc((*((*(_40632_a))._field_Left))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1a8837184_substr(_self_, _40632_a);;
}



inline void _1a8837abe_optimizePostfix(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c17015_Postfix> _41436_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_1a8847a57_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(_41436_postfix))._field_Expr);
	};
	static__1a883b980_optimizeData(&((*_41436_postfix.alloc)._field_Expr), &((*_self_.alloc)._field_data));
}



inline void _1a8837d77_optimizeAssign(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c174bb_Assign> _42135_assign) {
	if ((((*((*(_42135_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _1a7e119b2_equalModels((*((*_42135_assign.alloc)._field_Left))._field_Model, (*((*_42135_assign.alloc)._field_Right))._field_Model))) {
		_1a88352c5_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
		if (_1a8847d21_isBoundaryRiskyType((*(*(_42135_assign))._field_Left.alloc)._field_Kind)) {
			_1a8847a57_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(*(_42135_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
		if (_1a7e17996_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_42135_assign))._field_Right.alloc)._field_Model)) {
			if (_1a7e17c60_isNilValidType((*(*(_42135_assign))._field_Left.alloc)._field_Kind)) {
				;
				_1a7e16a94_pushVar((*((*(_self_))._field_data))._field_nils, _1a7e180a1_getNilVar((*(*(_42135_assign))._field_Left.alloc)._field_Model), true);
			};
		} else {
			_1a7e175cd_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_42135_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
		jule::Ptr<_1a7d1bc96_TypeKind> _4458_kind = _1a88431c3_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_42135_assign))._field_Right.alloc)._field_Kind, (*(*(_42135_assign))._field_Right.alloc)._field_Model);;
		if ((_4458_kind != nullptr)) {
			if (_1a8842c94_isDynamicValidType((*(*(_42135_assign))._field_Left.alloc)._field_Kind)) {
				_1a8841d92_pushVar((*((*(_self_))._field_data))._field_dynamic, _1a8843514_getDynamicVar((*(*(_42135_assign))._field_Left.alloc)._field_Model), _4458_kind);
			};
		} else {
			_1a8842986_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_42135_assign))._field_Left.alloc)._field_Model);
		};
	};
	{
		
		if (_1a88374c5_strAssign(_self_, _42135_assign) || _1a8837816_sliceAssign(_self_, _42135_assign)) {
			_case_begin_1aca216cc:;
			{
				return;;
			}
		}
		_match_end_1aca2337c:;
	};
	static__1a883b980_optimizeData(&((*(*(_42135_assign))._field_Left.alloc)._field_Model), &((*_self_.alloc)._field_data));
	static__1a883b980_optimizeData(&((*(*(_42135_assign))._field_Right.alloc)._field_Model), &((*_self_.alloc)._field_data));
	{
		auto &_match_expr{ (*((*(_42135_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU) || _match_expr == static_cast<jule::U64>(45LLU) || _match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1aca26e96:;
			{
				if (((!(_1a88494b5_Math)) || (_1a7d209c0_Struct((*(*(_42135_assign))._field_Left.alloc)._field_Kind.ptr()) != nullptr))) {
					goto _match_end_1aca26e1e;
				};
				jule::U64 _4714_oldId;
				jule::Str _47111_oldKind;
				({
					jule::U64 ___jule_assign_arg = (*(*(_42135_assign))._field_Op.alloc)._field_Id;
					jule::Str _1___jule_assign_arg = (*(*(_42135_assign))._field_Op.alloc)._field_Kind;
					_4714_oldId = ___jule_assign_arg;
					_47111_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_42135_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(43LLU)) {
						_case_begin_1aca2a21e:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(63LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("/", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(44LLU)) {
						_case_begin_1aca2a285:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(64LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("%", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(45LLU)) {
						_case_begin_1aca29d9a:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(56LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(46LLU)) {
						_case_begin_1aca29e22:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(57LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
						}
					}
					else {
						_case_begin_1aca29927:;
						{
							__jule_panic_s(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/opt/scope.jule:486:5"));;
						}
					}
					_match_end_1aca29c57:;
				};
				jule::Ptr<_1a7bace23_BinaryExprModel> _4888_b = jule::new_ptr<_1a7bace23_BinaryExprModel>(_1a7bace23_BinaryExprModel{._field_Left=(*_42135_assign.alloc)._field_Left, ._field_Right=(*_42135_assign.alloc)._field_Right, ._field_Op=(*_42135_assign.alloc)._field_Op});;
				jule::Any _4938_model = jule::Any(_4888_b, &__jule_any_type114);;
				static__1a883b980_optimizeData(&(_4938_model), &((*_self_.alloc)._field_data));
				if ((!__jule_any_type114_compare(_4938_model, _4888_b))) {
					(*_42135_assign.alloc)._field_Right=jule::new_ptr<_1a7bac928_OperandExprModel>((*(*(_42135_assign))._field_Right.alloc));
					(*(_4888_b))._field_Op=jule::new_ptr<_1a7b69b05_Token>((*(*(_4888_b))._field_Op.alloc));
					(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(71LLU);
					(*(*(_42135_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("=", 1));
					(*(*(_42135_assign))._field_Right.alloc)._field_Model=_4938_model;
					return;;
				};
				(*(*(_42135_assign))._field_Op.alloc)._field_Id=_4714_oldId;
				(*(*(_42135_assign))._field_Op.alloc)._field_Kind=_47111_oldKind;
				return;;
			}
		}
		_match_end_1aca26e1e:;
	};
	if (_1a88491b8_Append) {
		{
			auto &_match_expr{ (*((*(_42135_assign))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type33) {
				_case_begin_1aca34118:;
				{
					jule::Ptr<_1a7bb539d_BuiltinAppendCallExprModel> _5139_m = (*(*(_42135_assign))._field_Right.alloc)._field_Model.cast_ptr<_1a7bb539d_BuiltinAppendCallExprModel>(&__jule_any_type33);;
					if ((!(_1a88407b9_areSameLvalueExprModel(&((*(*(_42135_assign))._field_Left.alloc)._field_Model), &((*(_5139_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_5139_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type80) {
							_case_begin_1aca36b54:;
							{
								_1a88350c7_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a7e1472e_PushToSliceExprModel>(_1a7e1472e_PushToSliceExprModel{._field_Dest=(*_5139_m.alloc)._field_Dest, ._field_Elems=(*(_5139_m))._field_Elements.unsafe_cast_ptr<_1a7bb02cc_SliceExprModel>()}), &__jule_any_type125));
							}
						}
						else {
							_case_begin_1aca35b97:;
							{
								_1a88350c7_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a7e14b08_AppendToSliceExprModel>(_1a7e14b08_AppendToSliceExprModel{._field_Dest=(*(*(_42135_assign))._field_Left.alloc)._field_Model, ._field_Slice=(*_5139_m.alloc)._field_Elements}), &__jule_any_type126));
							}
						}
						_match_end_1aca35b31:;
					};
				}
			}
			_match_end_1aca34091:;
		};
	};
}



inline jule::Bool _1a88381b8_tryOptimizeSwap(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c17972_MultiAssign>* _53537_assign) {
	if (((((!(_1a884a939_Assign)) || ((*((*(_53537_assign))))._field_Left.len() != 2LL)) || ((*((*(_53537_assign))))._field_Left[0LL] == nullptr)) || ((*((*(_53537_assign))))._field_Left[1LL] == nullptr))) {
		return false;;
	};
	jule::Ptr<_1a7bb3511_TupleExprModel> _54011_tup;;
	{
		auto &_match_expr{ (*((*(_53537_assign))))._field_Right };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1aca3d85e:;
			{
				_54011_tup=(*((*(_53537_assign))))._field_Right.unsafe_cast_ptr<_1a7bb3511_TupleExprModel>();
			}
		}
		_match_end_1aca3d7d7:;
	};
	if (((_54011_tup == nullptr) || ((*(_54011_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1a7e119b2_equalModels((*((*((*(_53537_assign))))._field_Left[0LL]))._field_Model, (*((*(_54011_tup))._field_Datas[0LL]))._field_Model) && _1a7e119b2_equalModels((*((*((*(_53537_assign))))._field_Left[1LL]))._field_Model, (*((*(_54011_tup))._field_Datas[1LL]))._field_Model))) {
		_1a88352c5_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return true;;
	};
	if (((!(_1a7e119b2_equalModels((*((*((*(_53537_assign))))._field_Left[0LL]))._field_Model, (*((*(_54011_tup))._field_Datas[1LL]))._field_Model))) || (!(_1a7e119b2_equalModels((*((*((*(_53537_assign))))._field_Left[1LL]))._field_Model, (*((*(_54011_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1a7e1296e_SwapExprModel> _5627_model = jule::new_ptr<_1a7e1296e_SwapExprModel>(_1a7e1296e_SwapExprModel{._field_Left=(*((*(_53537_assign))))._field_Left[0LL], ._field_Right=(*((*(_53537_assign))))._field_Left[1LL]});;
	static__1a883b980_optimizeData(&((*((*(_5627_model))._field_Left))._field_Model), &((*_self_.alloc)._field_data));
	static__1a883b980_optimizeData(&((*((*_5627_model.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data));
	_1a88350c7_setCurrentStmt(_self_, jule::Any(_5627_model, &__jule_any_type127));
	return true;;
}



inline void _1a8838471_optimizeMultiAssign(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c17972_MultiAssign> _57240_assign) {
	if (_1a88381b8_tryOptimizeSwap(_self_, &(_57240_assign))) {
		return;;
	};
	jule::Ptr<_1a7bb3511_TupleExprModel> _5797_tup = static_cast<jule::Ptr<_1a7bb3511_TupleExprModel>>(nullptr);;
	{
		auto &_match_expr{ (*(_57240_assign))._field_Right };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1aca49d10:;
			{
				_5797_tup=(*(_57240_assign))._field_Right.unsafe_cast_ptr<_1a7bb3511_TupleExprModel>();
			}
		}
		_match_end_1aca49c88:;
	};
	{
		auto expr = &((*(_57240_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca47c97:;
		if (it != expr_end) {
			jule::I64 _5848_i = it - expr->begin();
			jule::Ptr<_1a7cd41ae_Data> _58415_l = *it;
			{
				if ((_58415_l != nullptr)) {
					if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
						if (_1a8847d21_isBoundaryRiskyType((*_58415_l.alloc)._field_Kind)) {
							_1a8847a57_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*_58415_l.alloc)._field_Model);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						if (((_5797_tup != nullptr) && _1a7e17996_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*_5797_tup.alloc)._field_Datas[_5848_i]))._field_Model))) {
							if (_1a7e17c60_isNilValidType((*_58415_l.alloc)._field_Kind)) {
								;
								_1a7e16a94_pushVar((*((*(_self_))._field_data))._field_nils, _1a7e180a1_getNilVar((*_58415_l.alloc)._field_Model), true);
							};
						} else {
							_1a7e175cd_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*_58415_l.alloc)._field_Model);
						};
					};
					if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && (_5797_tup != nullptr))) {
						jule::Ptr<_1a7d1bc96_TypeKind> _60210_kind = _1a88431c3_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_5797_tup.alloc)._field_Datas[_5848_i]))._field_Kind, (*((*(_5797_tup))._field_Datas[_5848_i]))._field_Model);;
						if ((_60210_kind != nullptr)) {
							if (_1a8842c94_isDynamicValidType((*_58415_l.alloc)._field_Kind)) {
								_1a8841d92_pushVar((*((*(_self_))._field_data))._field_dynamic, _1a8843514_getDynamicVar((*_58415_l.alloc)._field_Model), _60210_kind);
							};
						} else {
							_1a8842986_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*_58415_l.alloc)._field_Model);
						};
					};
					static__1a883b980_optimizeData(&((*_58415_l.alloc)._field_Model), &((*_self_.alloc)._field_data));
				};
			}
			_iter_next_1aca47c97:;
			++it;
			_5848_i++;
			goto _iter_begin_1aca47c97;
		}
		_iter_end_1aca47c97:;
	};
	static__1a883b980_optimizeData(&((*_57240_assign.alloc)._field_Right), &((*_self_.alloc)._field_data));
}



inline void _1a8838729_optimizeRet(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c19776_RetSt> _61832_r) {
	static__1a883b980_optimizeData(&((*(_61832_r))._field_Expr), &((*(_self_))._field_data));
	if ((!(_1a884abe2_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_61832_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1aca5716e:;
			{
				goto _match_end_1aca57229;
			}
		}
		else {
			_case_begin_1aca57290:;
			{
				return;;
			}
		}
		_match_end_1aca57229:;
	};
	jule::Ptr<_1a7baee03_FnCallExprModel> _6327_fc = (*_61832_r.alloc)._field_Expr.cast_ptr<_1a7baee03_FnCallExprModel>(&__jule_any_type41);;
	if (((((!((*((*((*(_6327_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*_6327_fc.alloc)._field_Except == nullptr)) || ((*((*_6327_fc.alloc)._field_Except))._field_Stmts.len() != 1LL)) || (!(_1a882d510_IsForwarded(&((*_6327_fc.alloc)._field_Except)))))) {
		return;;
	};
	_1a88350c7_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a7e125d9_ExceptionalForwardingExprModel>(_1a7e125d9_ExceptionalForwardingExprModel{._field_Expr=_6327_fc}), &__jule_any_type122));
}



inline void _1a88389d2_optimizeStmt(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Any _64233_stmt) {
	{
		auto &_match_expr{ _64233_stmt };
		
		if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1aca5a6b1:;
			{
				_1a8838c8a_optimizeChild(_self_, _64233_stmt.cast_ptr<_1a7c1397e_Scope>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1aca5a43b:;
			{
				_1a8835a9a_optimizeData(_self_, _64233_stmt.cast_ptr<_1a7cd41ae_Data>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aca5a749:;
			{
				_1a8835d53_optimizeVar(_self_, _64233_stmt.cast_ptr<_1a7c7b178_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1aca5a7e3:;
			{
				_1a883610b_optimizeConditional(_self_, _64233_stmt.cast_ptr<_1a7c145b7_Conditional>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1aca5a859:;
			{
				_1a8836a8a_optimizeRangeIter(_self_, _64233_stmt.cast_ptr<_1a7c157b6_RangeIter>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1aca5a8c0:;
			{
				_1a8836d43_optimizeWhileIter(_self_, _64233_stmt.cast_ptr<_1a7c14d6a_WhileIter>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1aca5a947:;
			{
				_1a8838c8a_optimizeChild(_self_, (*(_64233_stmt.unsafe_cast_ptr<_1a7c148b4_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1aca5a9be:;
			{
				_1a8837d77_optimizeAssign(_self_, _64233_stmt.cast_ptr<_1a7c174bb_Assign>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1aca5aa46:;
			{
				_1a8838471_optimizeMultiAssign(_self_, _64233_stmt.cast_ptr<_1a7c17972_MultiAssign>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1aca5aabd:;
			{
				_1a88367d2_optimizeMatch(_self_, _64233_stmt.cast_ptr<_1a7c181ae_Match>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1aca5ab45:;
			{
				_1a8838729_optimizeRet(_self_, _64233_stmt.cast_ptr<_1a7c19776_RetSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1aca5abbc:;
			{
				_1a8837abe_optimizePostfix(_self_, _64233_stmt.cast_ptr<_1a7c17015_Postfix>(&__jule_any_type50));
			}
		}
		_match_end_1aca5a55c:;
	};
}



inline void _1a8838c8a_optimizeChild(jule::Ptr<_1a8834769_scopeOptimizer> _self_, jule::Ptr<_1a7c1397e_Scope> _67134_child) {
	jule::Ptr<_1a8834769_scopeOptimizer> _6727_so = static__1a8834d1e_new(_67134_child);;
	(*(_6727_so))._field_parent=_self_;
	(*_6727_so.alloc)._field_data=(*(_self_))._field_data;
	_1a8838e88_optimize(_6727_so);
}



inline void _1a8838e88_optimize(jule::Ptr<_1a8834769_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1a88389d2_optimizeStmt(_self_, (*(*(_self_))._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1aca63be7:;
	}
	_iter_end_1aca63be7:;;
}








inline jule::Bool _1a883b1bb_exprOptimizer_eq(_1a883b1bb_exprOptimizer *_self_, _1a883b1bb_exprOptimizer _other_) {
	return 
		(_self_->_field_model == _other_._field_model) &&
		(_self_->_field_data == _self_->_field_data) &&
		(_self_->_field_inspector == _self_->_field_inspector);
}

inline void static__1a883b694_optimize(jule::Any* _3626_model) {
	static__1a883b980_optimizeData(_3626_model, &(_1a8843b85_emptyData));
}



inline void static__1a883b980_optimizeData(jule::Any* _4030_model, jule::Ptr<_1a884457b_data>* _4053_d) {
	if (_1a8977318_exprEnabled) {
		jule::Ptr<_1a883b1bb_exprOptimizer> _438_exop = jule::new_ptr<_1a883b1bb_exprOptimizer>(_1a883b1bb_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_4030_model)), ._field_data=(*(_4053_d)), ._field_inspector=static__1a882bd38_New()});;
		_1a883eeb1_do(_438_exop.ptr());
	};
}



inline jule::Bool _1a883bcc1_selfCmpCond(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7bace23_BinaryExprModel>* _5228_m) {
	if ((!(_1a7e119b2_equalModels((*((*((*(_5228_m))))._field_Left))._field_Model, (*((*((*(_5228_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_5228_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1aca7370c:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1c006ae67_NewBool(true), &__jule_any_type20);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1aca73b19:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1c006ae67_NewBool(false), &__jule_any_type20);
				return true;;
			}
		}
		else {
			_case_begin_1aca725c9:;
			{
				return false;;
			}
		}
		_match_end_1aca73685:;
	};
}



inline jule::Bool _1a883c112_boolCond(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7bace23_BinaryExprModel>* _7625_m) {
	jule::Ptr<_1a7d24dae_Prim> _773_lp = _1a7d1e44c_Prim((*((*((*(_7625_m))))._field_Left))._field_Kind.ptr());;
	if (((_773_lp == nullptr) || (!(_1a7d280e3_IsBool(_773_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_7625_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1aca7804c:;
			{
				std::swap((*((*(_7625_m))))._field_Left, (*((*(_7625_m))))._field_Right);
			}
		}
		else {
			_case_begin_1aca77227:;
			{
				{
					auto &_match_expr{ (*((*((*(_7625_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1aca76512:;
						{
							goto _match_end_1aca77a52;
						}
					}
					else {
						_case_begin_1aca77ab8:;
						{
							return false;;
						}
					}
					_match_end_1aca77a52:;
				};
			}
		}
		_match_end_1aca771b1:;
	};
	jule::Ptr<_1c006a461_Const> _947_c = (*((*((*(_7625_m))))._field_Right))._field_Model.cast_ptr<_1c006a461_Const>(&__jule_any_type20);;
	{
		auto &_match_expr{ (*((*((*(_7625_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1aca79b97:;
			{
				if (_1c006c386_ReadBool(_947_c.ptr())) {
					(*((*(_self_))._field_model))=(*(*((*(_7625_m))))._field_Left.alloc)._field_Model;
				} else {
					_1c006d970_SetBool(_947_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_947_c, &__jule_any_type20);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1aca79c41:;
			{
				if (_1c006c386_ReadBool(_947_c.ptr())) {
					_1c006d970_SetBool(_947_c, true);
					(*((*(_self_))._field_model))=jule::Any(_947_c, &__jule_any_type20);
				} else {
					(*((*(_self_))._field_model))=(*(*((*(_7625_m))))._field_Left.alloc)._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1aca77d1b:;
		}
		_match_end_1aca79b0e:;
	};
	return false;;
}



inline jule::Bool _1a883c453_strCond(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7bace23_BinaryExprModel> _12923_m) {
	jule::Ptr<_1a7d24dae_Prim> _1303_lp = _1a7d1e44c_Prim((*((*(_12923_m))._field_Left))._field_Kind.ptr());;
	if (((_1303_lp == nullptr) || (!(_1a7d28379_IsStr(_1303_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*_12923_m.alloc)._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*(*(_12923_m))._field_Op.alloc)._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_12923_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1aca81891:;
			{
				std::swap((*_12923_m.alloc)._field_Left, (*_12923_m.alloc)._field_Right);
			}
		}
		else {
			_case_begin_1aca80a6b:;
			{
				{
					auto &_match_expr{ (*((*(_12923_m))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1aca7e5e7:;
						{
							goto _match_end_1aca81396;
						}
					}
					else {
						_case_begin_1aca8140c:;
						{
							return false;;
						}
					}
					_match_end_1aca81396:;
				};
			}
		}
		_match_end_1aca80a05:;
	};
	jule::Ptr<_1c006a461_Const> _1507_c = (*((*_12923_m.alloc)._field_Right))._field_Model.cast_ptr<_1c006a461_Const>(&__jule_any_type20);;
	{
		auto &_match_expr{ (*((*(_12923_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1aca81671:;
			{
				if ((_1c006c61c_ReadStr(_1507_c.ptr())).empty()) {
					jule::Any _1549_model = jule::Any(jule::new_ptr<_1a7e12d48_EmptyCompareExprModel>(_1a7e12d48_EmptyCompareExprModel{._field_Expr=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Neg=false}), &__jule_any_type128);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1549_model))))));
					goto _match_end_1aca833dc;
				};
				jule::Any _1618_model = jule::Any(jule::new_ptr<_1a7e13640_StrCompExprModel>(_1a7e13640_StrCompExprModel{._field_Left=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Right=_1507_c, ._field_NotEq=false}), &__jule_any_type129);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1618_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1aca83497:;
			{
				if ((_1c006c61c_ReadStr(_1507_c.ptr())).empty()) {
					jule::Any _1699_model = jule::Any(jule::new_ptr<_1a7e12d48_EmptyCompareExprModel>(_1a7e12d48_EmptyCompareExprModel{._field_Expr=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Neg=true}), &__jule_any_type128);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1699_model))))));
					goto _match_end_1aca833dc;
				};
				jule::Any _1768_model = jule::Any(jule::new_ptr<_1a7e13640_StrCompExprModel>(_1a7e13640_StrCompExprModel{._field_Left=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Right=_1507_c, ._field_NotEq=true}), &__jule_any_type129);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1768_model))))));
			}
		}
		_match_end_1aca833dc:;
	};
	return true;;
}



inline jule::Bool _1a883c909_tryNeutralElement1(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7bace23_BinaryExprModel>* _18635_m, jule::Ptr<_1c006a461_Const> _18660_c, jule::Ptr<_1a7bac928_OperandExprModel>* _18672_nc) {
	if (_1c006ec18_IsStr(_18660_c.ptr())) {
		if ((!(_1a884a3d9_Str))) {
			return false;;
		};
		if (((_1c006c61c_ReadStr(_18660_c.ptr())).empty() && ((*((*((*(_18635_m))))._field_Op))._field_Id == static_cast<jule::U64>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_18672_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1a88494b5_Math)) || (_1c006d156_AsF64(_18660_c) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_18635_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1aca9261b:;
			{
				if (((*(_18672_nc)) == (*((*(_18635_m))))._field_Left)) {
					(*(*(_self_))._field_model.alloc)=(*((*(_18672_nc))))._field_Model;
					return true;;
				};
				(*(*(_self_))._field_model.alloc)=jule::Any(_18660_c, &__jule_any_type20);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1aca93254:;
			{
				_1c006d40e_SetI64(_18660_c, 0LL);
				(*(*(_self_))._field_model.alloc)=jule::Any(_18660_c, &__jule_any_type20);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1aca932ba:;
			{
				(*(*(_self_))._field_model.alloc)=(*((*(_18672_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1aca93111:;
	};
	return false;;
}



inline jule::Bool _1a883cc4a_tryNeutralElement(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7bace23_BinaryExprModel>* _23034_m) {
	{
		auto &_match_expr{ (*((*((*(_23034_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1aca968d9:;
			{
				jule::Ptr<_1c006a461_Const> _2348_c = (*((*((*(_23034_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1c006a461_Const>();;
				return _1a883c909_tryNeutralElement1(_self_, _23034_m, _2348_c, &((*((*(_23034_m))))._field_Right));;
			}
		}
		_match_end_1aca96862:;
	};
	{
		auto &_match_expr{ (*((*((*(_23034_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1aca96e06:;
			{
				jule::Ptr<_1c006a461_Const> _2398_c = (*((*((*(_23034_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1c006a461_Const>();;
				return _1a883c909_tryNeutralElement1(_self_, _23034_m, _2398_c, &((*((*(_23034_m))))._field_Left));;
			}
		}
		_match_end_1aca96d90:;
	};
	return false;;
}



inline void _1a883d003_checkBinaryForBoundary(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7bace23_BinaryExprModel>* _24539_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_24539_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1aca9a35a:;
			{
				jule::Ptr<_1a7bb569a_BuiltinLenCallExprModel> _2518_blc = (*((*((*(_24539_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1a7bb569a_BuiltinLenCallExprModel>();;
				if ((!(_1a88480da_isBoundaryValidType((*((*(_2518_blc))._field_Expr))._field_Kind)))) {
					return;;
				};
				if ((((*((*((*(_24539_m))))._field_Op))._field_Id != static_cast<jule::U64>(70LLU)) && ((*(*((*(_24539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_24539_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_24539_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type20) {
							_case_begin_1aca9d638:;
							{
								jule::Ptr<_1c006a461_Const> _26310_c = jule::new_ptr<_1c006a461_Const>((*((*((*((*(_24539_m))))._field_Right))._field_Model.cast_ptr<_1c006a461_Const>(&__jule_any_type20))));;
								_1c00724e0_Sub(_26310_c, (*(static__1c006a8d4_NewI64(1LL))));
								_1a8846418_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a88483a4_getBoundaryVar((*(*(_2518_blc))._field_Expr.alloc)._field_Model), jule::Any(_26310_c, &__jule_any_type20));
							}
						}
						_match_end_1aca9d5b1:;
					};
					return;;
				};
				_1a8846418_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a88483a4_getBoundaryVar((*(*(_2518_blc))._field_Expr.alloc)._field_Model), (*(*((*(_24539_m))))._field_Right.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1aca9a2d3:;
	};
	{
		auto &_match_expr{ (*((*((*(_24539_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1aca9a9cb:;
			{
				jule::Ptr<_1a7bb569a_BuiltinLenCallExprModel> _2748_blc = (*((*((*(_24539_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1a7bb569a_BuiltinLenCallExprModel>();;
				if ((!(_1a88480da_isBoundaryValidType((*(*(_2748_blc))._field_Expr.alloc)._field_Kind)))) {
					return;;
				};
				if ((((*(*((*(_24539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(69LLU)) && ((*(*((*(_24539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_24539_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_24539_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type20) {
							_case_begin_1acaa5277:;
							{
								jule::Ptr<_1c006a461_Const> _28610_c = jule::new_ptr<_1c006a461_Const>((*((*((*((*(_24539_m))))._field_Left))._field_Model.cast_ptr<_1c006a461_Const>(&__jule_any_type20))));;
								_1c00724e0_Sub(_28610_c, (*(static__1c006a8d4_NewI64(1LL))));
								_1a8846418_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a88483a4_getBoundaryVar((*(*(_2748_blc))._field_Expr.alloc)._field_Model), jule::Any(_28610_c, &__jule_any_type20));
							}
						}
						_match_end_1acaa5200:;
					};
					return;;
				};
				_1a8846418_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a88483a4_getBoundaryVar((*(*(_2748_blc))._field_Expr.alloc)._field_Model), (*(*((*(_24539_m))))._field_Left.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1aca9a954:;
	};
}



inline void _1a883d2ab_checkBinaryForNil(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7bace23_BinaryExprModel>* _29734_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _3017_var = _1a7e180a1_getNilVar((*((*((*(_29734_m))))._field_Left))._field_Model);;
	if ((_3017_var != 0LLU)) {
		if ((!(_1a7e17c60_isNilValidType((*(*((*(_29734_m))))._field_Left.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_29734_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type20) {
				_case_begin_1acaaab2e:;
				{
					_1a7e16a94_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _3017_var, ((*((*((*(_29734_m))))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1acaaaaa7:;
		};
		return;;
	};
	_3017_var=_1a7e180a1_getNilVar((*((*((*(_29734_m))))._field_Right))._field_Model);
	if ((_3017_var != 0LLU)) {
		if ((!(_1a7e17c60_isNilValidType((*(*((*(_29734_m))))._field_Right.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_29734_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type20) {
				_case_begin_1acaad318:;
				{
					_1a7e16a94_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _3017_var, ((*(*((*(_29734_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1acaad291:;
		};
		return;;
	};
}



inline void _1a883d564_binary(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7bace23_BinaryExprModel> _32922_m) {
	_1a883d003_checkBinaryForBoundary(_self_, &(_32922_m));
	_1a883d2ab_checkBinaryForNil(_self_, &(_32922_m));
	if (_1a884a197_Cond) {
		{
			
			if (_1a883c453_strCond(_self_, _32922_m) || _1a883c112_boolCond(_self_, &(_32922_m)) || _1a883bcc1_selfCmpCond(_self_, &(_32922_m))) {
				_case_begin_1acab0271:;
				{
					return;;
				}
			}
			_match_end_1acab013e:;
		};
	};
	if (_1a883cc4a_tryNeutralElement(_self_, &(_32922_m))) {
		return;;
	};
	if ((!(_1a88494b5_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_32922_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1acab11d9:;
			{
				goto _match_end_1acab1470;
			}
		}
		else {
			_case_begin_1acab14d6:;
			{
				return;;
			}
		}
		_match_end_1acab1470:;
	};
	jule::Ptr<_1a7d24dae_Prim> _3623_lp = _1a7d1e44c_Prim((*((*(_32922_m))._field_Left))._field_Kind.ptr());;
	if ((_3623_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1a7d24dae_Prim> _3663_rp = _1a7d1e44c_Prim((*((*(_32922_m))._field_Right))._field_Kind);;
	if ((_3663_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_32922_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1acab3cad:;
			{
				jule::Bool _3734_ok;
				jule::U64 _3738_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1a8840401_checkForBitShiftOpt(&((*_32922_m.alloc)._field_Left), &((*_32922_m.alloc)._field_Right));
					_3734_ok = __jule_assign_result.__jule_result_arg0;
					_3738_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3734_ok) {
					(*_32922_m.alloc)._field_Op=jule::new_ptr<_1a7b69b05_Token>((*(*(_32922_m))._field_Op.alloc));
					(*(*(_32922_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(56LLU);
					(*(*(_32922_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
					jule::Ptr<_1c006a461_Const> _3789_c = (*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1c006a461_Const>(&__jule_any_type20);;
					_1c006d6b7_SetU64(_3789_c.ptr(), _3738_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1acab3d24:;
			{
				jule::Bool _3854_ok;
				jule::U64 _3858_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1a8840401_checkForBitShiftOpt(&((*_32922_m.alloc)._field_Left), &((*_32922_m.alloc)._field_Right));
					_3854_ok = __jule_assign_result.__jule_result_arg0;
					_3858_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3854_ok) {
					(*_32922_m.alloc)._field_Op=jule::new_ptr<_1a7b69b05_Token>((*(*(_32922_m))._field_Op.alloc));
					(*(*(_32922_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(57LLU);
					(*(*(_32922_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
					jule::Ptr<_1c006a461_Const> _3909_c = (*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1c006a461_Const>(&__jule_any_type20);;
					_1c006d6b7_SetU64(_3909_c.ptr(), _3858_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1acab3d8a:;
			{
				jule::Ptr<_1c006a461_Const> _3978_c = (*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1c006a461_Const>(&__jule_any_type20);;
				if ((_1c006d156_AsF64(_3978_c.ptr()) == 2LL)) {
					(*_32922_m.alloc)._field_Op=jule::new_ptr<_1a7b69b05_Token>((*(*(_32922_m))._field_Op.alloc));
					(*(*(_32922_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(65LLU);
					(*(*(_32922_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("&", 1));
					_1c006d40e_SetI64(_3978_c, 1LL);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1acab3e01:;
			{
				jule::I64 _4094_z = _1c005e7c9_BitsizeOf((*(_3623_lp))._field_Kind);;
				jule::U64 _4104_s = _1c006cdc0_AsU64((*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1c006a461_Const>(&__jule_any_type20).ptr());;
				if ((_4104_s >= static_cast<jule::U64>(_4094_z))) {
					(*((*(_self_))._field_model))=jule::Any(static__1c006ab9d_NewU64(0LLU), &__jule_any_type20);
					return;;
				};
			}
		}
		else {
			_case_begin_1acab3917:;
			{
				return;;
			}
		}
		_match_end_1acab3c36:;
	};
	jule::Any _4237_model = jule::Any(jule::new_ptr<_1a7e13ec0_UnsafeBinaryExprModel>(_1a7e13ec0_UnsafeBinaryExprModel{._field_Node=_32922_m}), &__jule_any_type130);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4237_model))))));
}



inline void _1a883d81c_unary(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7bad2ec_UnaryExprModel> _42721_m) {
	if ((!(_1a8849cce_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_42721_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1acac35a3:;
			{
				{
					auto &_match_expr{ (*((*(_42721_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type113) {
						_case_begin_1acac55b6:;
						{
							jule::Ptr<_1a7bad2ec_UnaryExprModel> _4359_um = (*((*(_42721_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1a7bad2ec_UnaryExprModel>();;
							if (((*((*(_4359_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*_4359_um.alloc)._field_Expr))._field_Model;
								return;;
							};
							return;;
						}
					}
					_match_end_1acac553e:;
				};
				if ((!(_1a884976d_Access))) {
					return;;
				};
				if ((((*((*(_self_))._field_data))._field_nils != nullptr) && _1a7e17c60_isNilValidType((*(*(_42721_m))._field_Expr.alloc)._field_Kind))) {
					jule::Uintptr _4495_var = _1a7e180a1_getNilVar((*(*(_42721_m))._field_Expr.alloc)._field_Model);;
					if (_1a7e17226_isSafe((*((*(_self_))._field_data))._field_nils, _4495_var)) {
						jule::Any _45110_model = jule::Any(jule::new_ptr<_1a7e152ce_UnsafeDerefExprModel>(_1a7e152ce_UnsafeDerefExprModel{._field_Base=_42721_m}), &__jule_any_type131);;
						(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_45110_model))))));
						return;;
					};
					_1a7e16a94_pushVar((*((*(_self_))._field_data))._field_nils, _4495_var, true);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1acac3619:;
			{
				{
					auto &_match_expr{ (*((*(_42721_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1acacda75:;
						{
							jule::Ptr<_1a7c7b178_Var> _4619_v = (*((*(_42721_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1a7c7b178_Var>();;
							if ((*(_4619_v))._field_Reference) {
								jule::Any _46310_model = jule::Any(jule::new_ptr<_1a7e131bc_RefExprModel>(_1a7e131bc_RefExprModel{._field_Var=_4619_v}), &__jule_any_type132);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_46310_model))))));
							};
						}
					}
					_match_end_1acacd9ed:;
				};
			}
		}
		_match_end_1acac353c:;
	};
}



inline void _1a883dac5_structureLit(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7badbc1_StructLitExprModel> _47028_m) {
	{
		auto expr = &((*(_47028_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acad0e95:;
		if (it != expr_end) {
			jule::Ptr<_1a7bad82a_StructArgExprModel> _47115_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_1a8847d21_isBoundaryRiskyType((*((*(_47115_arg))._field_Expr))._field_Kind)) {
						_1a8847a57_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_47115_arg, &__jule_any_type133));
					};
				};
				if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
					_1a7e175cd_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_47115_arg))._field_Expr.alloc)._field_Model);
				};
				if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
					_1a8842986_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_47115_arg))._field_Expr.alloc)._field_Model);
				};
			}
			_iter_next_1acad0e95:;
			++it;
			goto _iter_begin_1acad0e95;
		}
		_iter_end_1acad0e95:;
	};
}



inline void _1a883dd7d_casting(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7bae551_CastingExprModel> _48623_m) {
	jule::Bool _4873_valid = _1a8842c94_isDynamicValidType((*(_48623_m))._field_ExprKind);;
	jule::Uintptr _4883_var = _1a8843514_getDynamicVar((*((*_48623_m.alloc)._field_Expr))._field_Model);;
	if (((_4873_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _1a88425ce_isFits((*((*(_self_))._field_data))._field_dynamic, _4883_var, (*_48623_m.alloc)._field_Kind))) {
		jule::Any _4908_model = jule::Any(jule::new_ptr<_1a7e155cb_UnsafeCastingExprModel>(_1a7e155cb_UnsafeCastingExprModel{._field_Base=_48623_m}), &__jule_any_type134);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4908_model))))));
		(*((*(_self_))._field_inspector))._field_SkipChild=true;
		return;;
	};
	if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && _4873_valid)) {
		_1a8841d92_pushVar((*((*(_self_))._field_data))._field_dynamic, _4883_var, (*_48623_m.alloc)._field_Kind);
	};
}



inline void _1a883e1e1_args(_1a883b1bb_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>> _50020_params, jule::Slice<jule::Any>* _50046_args) {
	{
		auto expr = _50046_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acae1d96:;
		if (it != expr_end) {
			jule::I64 _5018_i = it - expr->begin();
			jule::Any _50115_arg = *it;
			{
				if ((_5018_i >= _50020_params.len())) {
					goto _iter_next_1acae1d96;
				};
				jule::Ptr<_1a7bbc839_ParamIns> _5058_p = _50020_params[_5018_i];;
				if (((*((*(_5058_p))._field_Decl))._field_Mutable && (*(*(_5058_p))._field_Decl.alloc)._field_Reference)) {
					if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
						if (_1a8847d21_isBoundaryRiskyType((*_5058_p.alloc)._field_Kind)) {
							_1a8847a57_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _50115_arg);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						_1a7e175cd_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _50115_arg);
					};
					if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
						_1a8842986_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _50115_arg);
					};
				};
			}
			_iter_next_1acae1d96:;
			++it;
			_5018_i++;
			goto _iter_begin_1acae1d96;
		}
		_iter_end_1acae1d96:;
	};
}



inline void _1a883e499_scope(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7c1397e_Scope>* _52222_s) {
	jule::Ptr<_1a8834769_scopeOptimizer> _5237_scopt = static__1a8834d1e_new((*(_52222_s)));;
	(*(_5237_scopt))._field_data=(*(_self_))._field_data;
	_1a8838e88_optimize(_5237_scopt);
}



inline void _1a883e752_funcCall(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7baee03_FnCallExprModel> _52824_m) {
	_1a883e1e1_args(_self_, (*((*(_52824_m))._field_Func))._field_Params, &((*_52824_m.alloc)._field_Args));
	if (((*_52824_m.alloc)._field_Except != nullptr)) {
		_1a883e499_scope(_self_, &((*_52824_m.alloc)._field_Except));
	};
}



inline void _1a883ea0a_indexing(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7bb0783_IndexingExprModel> _53524_m) {
	if ((!(_1a884976d_Access))) {
		return;;
	};
	jule::Bool _5403_array = (_1a7d2021c_Arr((*((*(_53524_m))._field_Expr))._field_Kind.ptr()) != nullptr);;
	if ((_5403_array && _1a7cd4ae9_IsConst((*_53524_m.alloc)._field_Index.ptr()))) {
		jule::Any _5438_model = jule::Any(jule::new_ptr<_1a7e14355_UnsafeIndexingExprModel>(_1a7e14355_UnsafeIndexingExprModel{._field_Node=_53524_m}), &__jule_any_type135);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5438_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _1a88480da_isBoundaryValidType((*(*(_53524_m))._field_Expr.alloc)._field_Kind))) {
		jule::Uintptr _5494_var = _1a88483a4_getBoundaryVar((*(*(_53524_m))._field_Expr.alloc)._field_Model);;
		if (_1a8846b55_fitsMaxSize((*((*(_self_))._field_data))._field_boundary, _5494_var, (*(*(_53524_m))._field_Index.alloc)._field_Model)) {
			jule::Any _5519_model = jule::Any(jule::new_ptr<_1a7e14355_UnsafeIndexingExprModel>(_1a7e14355_UnsafeIndexingExprModel{._field_Node=_53524_m}), &__jule_any_type135);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_5519_model))))));
			return;;
		};
		_1a8846418_pushVar((*((*(_self_))._field_data))._field_boundary, _5494_var, (*(*(_53524_m))._field_Index.alloc)._field_Model);
	};
}



inline void _1a883ecb3_anonFunc(_1a883b1bb_exprOptimizer* _self_, jule::Ptr<_1a7bb0c39_AnonFnExprModel> _55924_m) {
	_1a883e499_scope(_self_, &((*((*(_55924_m))._field_Func))._field_Scope));
}



inline void _1a883eeb1_do(_1a883b1bb_exprOptimizer* _self_) {
	_1a882c70c_Inspect((*(_self_))._field_inspector.ptr(), &((*((*(_self_))._field_model))), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1acb03c98, jule::Ptr<__jule_anon_1acb03c98_ctx>::make(__jule_anon_1acb03c98_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1acb03c98_ctx_handler));
}








inline jule::Bool _1a88415ab_dynamicVar_eq(_1a88415ab_dynamicVar *_self_, _1a88415ab_dynamicVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_kind == _self_->_field_kind);
}





inline void _1a8841d92_pushVar(jule::Ptr<_1a88418ec_dynamic> _self_, jule::Uintptr _3224_var, jule::Ptr<_1a7d1bc96_TypeKind> _3242_kind) {
	if (((!(_1a884b253_Dynamic)) || (_3224_var == 0LLU))) {
		return;;
	};
	_3242_kind=_1a88431c3_isTypeGuaranteedDynamicData(&(_self_), _3242_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb1344a:;
		if (it != expr_end) {
			_1a88415ab_dynamicVar _3815_v = *it;
			{
				if ((_3815_v._field_var == _3224_var)) {
					_3815_v._field_kind=_3242_kind;
					return;;
				};
			}
			_iter_next_1acb1344a:;
			++it;
			goto _iter_begin_1acb1344a;
		}
		_iter_end_1acb1344a:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb13e40:;
		if (it != expr_end) {
			_1a88415ab_dynamicVar _4515_v = *it;
			{
				if ((_4515_v._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _3224_var;
						jule::Ptr<_1a7d1bc96_TypeKind> _1___jule_assign_arg = _3242_kind;
						_4515_v._field_var = ___jule_assign_arg;
						_4515_v._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_1acb13e40:;
			++it;
			goto _iter_begin_1acb13e40;
		}
		_iter_end_1acb13e40:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,({ auto __jule_collection = jule::Slice<_1a88415ab_dynamicVar>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a88415ab_dynamicVar{._field_var=_3224_var, ._field_kind=_3242_kind}; __jule_collection; }));
}



inline jule::Bool _1a88421d3_removeVar(_1a88418ec_dynamic* _self_, jule::Uintptr _5525_var) {
	if ((_5525_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acb1612e:;
			if (it != expr_end) {
				_1a88415ab_dynamicVar _5716_v = *it;
				{
					if ((_5716_v._field_var == _5525_var)) {
						_5716_v._field_var=0LLU;
						_5716_v._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_1acb1612e:;
				++it;
				goto _iter_begin_1acb1612e;
			}
			_iter_end_1acb1612e:;
		};
	};
	return false;;
}



inline jule::Bool _1a88425ce_isFits(_1a88418ec_dynamic* _self_, jule::Uintptr _6922_var, jule::Ptr<_1a7d1bc96_TypeKind> _6936_kind) {
	if ((_6922_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acb179e3:;
			if (it != expr_end) {
				_1a88415ab_dynamicVar _7111_v = *it;
				{
					if ((_7111_v._field_var == _6922_var)) {
						return ((_7111_v._field_kind != nullptr) && _1a7d1c4d3_Equal(_7111_v._field_kind, _6936_kind));;
					};
				}
				_iter_next_1acb179e3:;
				++it;
				goto _iter_begin_1acb179e3;
			}
			_iter_end_1acb179e3:;
		};
	};
	return false;;
}








inline jule::Bool _1a884457b_data_eq(_1a884457b_data *_self_, _1a884457b_data _other_) {
	return 
		(_self_->_field_boundary == _other_._field_boundary) &&
		(_self_->_field_nils == _self_->_field_nils) &&
		(_self_->_field_dynamic == _self_->_field_dynamic);
}

inline _1a8844081_dataCheckpoint _1a8844933_getCheckpoint(_1a884457b_data* _self_) {
	_1a8844081_dataCheckpoint _257_c = _1a8844081_dataCheckpoint{._field_boundary=_1a8845e73_boundary{._field_vars=jule::Slice<_1a8845b32_boundaryVar>(nullptr)}, ._field_nils=_1a7e165ee_nils{._field_vars=jule::Slice<_1a7e162ad_nilVar>(nullptr)}, ._field_dynamic=_1a88418ec_dynamic{._field_vars=jule::Slice<_1a88415ab_dynamicVar>(nullptr)}};;
	_257_c._field_boundary._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1a8845b32_boundaryVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1a8845b32_boundaryVar{._field_var=0, ._field_maxSize=jule::Slice<jule::Any>(nullptr)}; __jule_collection; }),(*((*(_self_))._field_boundary))._field_vars);
	{
		auto expr = &(_257_c._field_boundary._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb1e6ed:;
		if (it != expr_end) {
			jule::I64 _277_i = it - expr->begin();
			{
				_257_c._field_boundary._field_vars[_277_i]._field_maxSize=jule::append(({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; }),_257_c._field_boundary._field_vars[_277_i]._field_maxSize);
			}
			_iter_next_1acb1e6ed:;
			++it;
			_277_i++;
			goto _iter_begin_1acb1e6ed;
		}
		_iter_end_1acb1e6ed:;
	};
	_257_c._field_nils._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1a7e162ad_nilVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1a7e162ad_nilVar{._field_var=0, ._field_safe=false}; __jule_collection; }),(*((*(_self_))._field_nils))._field_vars);
	_257_c._field_dynamic._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1a88415ab_dynamicVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1a88415ab_dynamicVar{._field_var=0, ._field_kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr)}; __jule_collection; }),(*((*(_self_))._field_dynamic))._field_vars);
	return _257_c;;
}



inline void _1a8844bdb_loadCheckpoint(_1a884457b_data* _self_, _1a8844081_dataCheckpoint* _3535_c) {
	(*((*(_self_))._field_boundary))=(*(_3535_c))._field_boundary;
	(*((*(_self_))._field_nils))=(*(_3535_c))._field_nils;
	(*((*(_self_))._field_dynamic))=(*(_3535_c))._field_dynamic;
}











inline void _1a8846418_pushVar(_1a8845e73_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize) {
	if (((!(_1a884976d_Access)) || (_2423_var == 0LLU))) {
		return;;
	};
	if ((!(_1a8846eda_isValidBoundaryInfo(_2441_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb339a9:;
		if (it != expr_end) {
			_1a8845b32_boundaryVar _3215_v = *it;
			{
				if ((_3215_v._field_var == _2423_var)) {
					{
						auto expr = &(_3215_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1acb3479b:;
						if (it != expr_end) {
							jule::I64 _349_i = it - expr->begin();
							jule::Any _3412_max = *it;
							{
								if (_1a8847727_fitsSize(_2441_maxSize, _3412_max)) {
									_3215_v._field_maxSize[_349_i]=_2441_maxSize;
									return;;
								};
							}
							_iter_next_1acb3479b:;
							++it;
							_349_i++;
							goto _iter_begin_1acb3479b;
						}
						_iter_end_1acb3479b:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3215_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1acb339a9:;
			++it;
			goto _iter_begin_1acb339a9;
		}
		_iter_end_1acb339a9:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb34328:;
		if (it != expr_end) {
			_1a8845b32_boundaryVar _4615_v = *it;
			{
				if ((_4615_v._field_var == 0LLU)) {
					_4615_v._field_var=_2423_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4615_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1acb34328:;
			++it;
			goto _iter_begin_1acb34328;
		}
		_iter_end_1acb34328:;
	};
	{ jule::Slice<_1a8845b32_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1a8845b32_boundaryVar{._field_var=_2423_var, ._field_maxSize=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2441_maxSize; __jule_collection; })}); };
}



inline jule::Bool _1a8846b55_fitsMaxSize(_1a8845e73_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr) {
	if ((_7127_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acb391b8:;
			if (it != expr_end) {
				_1a8845b32_boundaryVar _7311_v = *it;
				{
					if ((_7311_v._field_var == _7127_var)) {
						return (_1a88473a3_fitsMaxSize(_7311_v._field_maxSize, _7141_expr) != -1LL);;
					};
				}
				_iter_next_1acb391b8:;
				++it;
				goto _iter_begin_1acb391b8;
			}
			_iter_end_1acb391b8:;
		};
	};
	return false;;
}








inline jule::Bool _1a8977747_Optimizer_eq(_1a8977747_Optimizer *_self_, _1a8977747_Optimizer _other_) {
	return 
		(_self_->_field_ir == _other_._field_ir);
}

inline jule::Ptr<_1a8977747_Optimizer> static__1a8977bed_New(jule::Ptr<_1a882795a_IR>* _2621_ir) {
	return jule::new_ptr<_1a8977747_Optimizer>(_1a8977747_Optimizer{._field_ir=(*(_2621_ir))});;
}



inline void _1a8977ea6_optimizeGlobal(_1a8977747_Optimizer* _self_, jule::Ptr<_1a7c7b178_Var>* _3235_v) {
	if ((!((*((*(_3235_v))))._field_Binded))) {
		static__1a883b694_optimize(&((*((*((*((*(_3235_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1a897825e_optimizeFunction(_1a8977747_Optimizer* _self_, jule::Ptr<_1a7bba8d1_Fn>* _3837_func) {
	if ((*((*(_3837_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3837_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb3e234:;
		if (it != expr_end) {
			jule::Ptr<_1a7bbd8b2_FnIns> _4215_ins = *it;
			{
				jule::Ptr<_1a8834769_scopeOptimizer> _438_so = static__1a8834d1e_new((*(_4215_ins))._field_Scope);;
				_1a8838e88_optimize(_438_so);
			}
			_iter_next_1acb3e234:;
			++it;
			goto _iter_begin_1acb3e234;
		}
		_iter_end_1acb3e234:;
	};
}



inline void _1a8978517_optimizeStruct(_1a8977747_Optimizer* _self_, jule::Ptr<_1a7ba5ca6_Struct>* _4835_s) {
	if ((*((*(_4835_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4835_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb4090b:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba8b11_StructIns> _5215_ins = *it;
			{
				{
					auto expr = &((*(_5215_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acb41313:;
					if (it != expr_end) {
						jule::Ptr<_1a7ba8061_FieldIns> _5316_f = *it;
						{
							if (((*(_5316_f))._field_Default != nullptr)) {
								static__1a883b694_optimize(&((*(*(_5316_f))._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_1acb41313:;
						++it;
						goto _iter_begin_1acb41313;
					}
					_iter_end_1acb41313:;
				};
				{
					auto expr = &((*_5215_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acb41764:;
					if (it != expr_end) {
						jule::Ptr<_1a7bba8d1_Fn> _5816_m = *it;
						{
							_1a897825e_optimizeFunction(_self_, &(_5816_m));
						}
						_iter_next_1acb41764:;
						++it;
						goto _iter_begin_1acb41764;
					}
					_iter_end_1acb41764:;
				};
			}
			_iter_next_1acb4090b:;
			++it;
			goto _iter_begin_1acb4090b;
		}
		_iter_end_1acb4090b:;
	};
}



inline void _1a89787c0_optimizeGlobals(_1a8977747_Optimizer* _self_, jule::Ptr<_1a7c396b9_Package>* _6436_p) {
	{
		auto expr = &((*((*(_6436_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb42aa6:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _6515_f = *it;
			{
				{
					auto expr = &((*(_6515_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acb438ba:;
					if (it != expr_end) {
						jule::Ptr<_1a7c7b178_Var> _6616_v = *it;
						{
							_1a8977ea6_optimizeGlobal(_self_, &(_6616_v));
						}
						_iter_next_1acb438ba:;
						++it;
						goto _iter_begin_1acb438ba;
					}
					_iter_end_1acb438ba:;
				};
			}
			_iter_next_1acb42aa6:;
			++it;
			goto _iter_begin_1acb42aa6;
		}
		_iter_end_1acb42aa6:;
	};
}



inline void _1a8978a78_optimizeFunctions(_1a8977747_Optimizer* _self_, jule::Ptr<_1a7c396b9_Package>* _7238_p) {
	{
		auto expr = &((*((*(_7238_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb43e70:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _7315_f = *it;
			{
				{
					auto expr = &((*(_7315_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acb44cd9:;
					if (it != expr_end) {
						jule::Ptr<_1a7bba8d1_Fn> _7416_func = *it;
						{
							_1a897825e_optimizeFunction(_self_, &(_7416_func));
						}
						_iter_next_1acb44cd9:;
						++it;
						goto _iter_begin_1acb44cd9;
					}
					_iter_end_1acb44cd9:;
				};
			}
			_iter_next_1acb43e70:;
			++it;
			goto _iter_begin_1acb43e70;
		}
		_iter_end_1acb43e70:;
	};
}



inline void _1a8978d31_optimizeStructs(_1a8977747_Optimizer* _self_, jule::Ptr<_1a7c396b9_Package>* _8036_p) {
	{
		auto expr = &((*((*(_8036_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb4538e:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _8115_f = *it;
			{
				{
					auto expr = &((*(_8115_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acb46208:;
					if (it != expr_end) {
						jule::Ptr<_1a7ba5ca6_Struct> _8216_s = *it;
						{
							_1a8978517_optimizeStruct(_self_, &(_8216_s));
						}
						_iter_next_1acb46208:;
						++it;
						goto _iter_begin_1acb46208;
					}
					_iter_end_1acb46208:;
				};
			}
			_iter_next_1acb4538e:;
			++it;
			goto _iter_begin_1acb4538e;
		}
		_iter_end_1acb4538e:;
	};
}



inline void _1a89790d9_optimizePackage(_1a8977747_Optimizer* _self_, jule::Ptr<_1a7c396b9_Package>* _8836_p) {
	_1a89787c0_optimizeGlobals(_self_, _8836_p);
	_1a8978a78_optimizeFunctions(_self_, _8836_p);
	_1a8978d31_optimizeStructs(_self_, _8836_p);
}



inline void _1a89792d7_Optimize(_1a8977747_Optimizer* _self_) {
	_1a897954b_detectEnabled();
	if (_1a8848e10_Deadcode) {
		_1a8971246_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1a897755a_scopeEnabled || _1a8977318_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acb48260:;
			if (it != expr_end) {
				jule::Ptr<_1a7c36793_ImportInfo> _10416_u = *it;
				{
					if ((!((*(_10416_u))._field_Binded))) {
						_1a89790d9_optimizePackage(_self_, &((*_10416_u.alloc)._field_Package));
					};
				}
				_iter_next_1acb48260:;
				++it;
				goto _iter_begin_1acb48260;
			}
			_iter_end_1acb48260:;
		};
		_1a89790d9_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_1a8848e10_Deadcode) {
		_1a8975d50_EliminateScopes(&((*(_self_))._field_ir));
	};
}








inline jule::Bool _1a899dae2_AnsiEscape_eq(_1a899dae2_AnsiEscape *_self_, _1a899dae2_AnsiEscape _other_) { return true; }

inline void static__1a89798e2_Reset(void) {
	jule::out(_1a9954ee8_toStr(jule::Str::lit("\033[0m", 4)));
}



inline void static__1a899c96a_Print(jule::Str _1918_escape, jule::Str _1931_text) {
	jule::out(_1a9954ee8_toStr(_1918_escape));
	jule::out(_1a9954ee8_toStr(_1931_text));
	static__1a89798e2_Reset();
}








inline jule::Bool _1a89a0198_Logger_eq(_1a89a0198_Logger *_self_, _1a89a0198_Logger _other_) { return true; }

inline void static__1a89a0473_LogFlat(_1d9144ab5_Log* _1421_l) {
	jule::outln(_1a9954ee8_toStr((*(_1421_l))._field_Text));
}



inline void static__1a89a06a4_LogError(_1d9144ab5_Log* _1922_l) {
	jule::out(_1a9954ee8_toStr(jule::Str::lit("\033[31m", 5)));
	jule::out(_1a9954ee8_toStr(jule::Str::lit("error: ", 7)));
	jule::out(_1a9954ee8_toStr((*(_1922_l))._field_Text));
	static__1a89798e2_Reset();
	if (((*(_1922_l))._field_Path.len() != 0LL)) {
		jule::out(_1a9954ee8_toStr(jule::Str::lit("\n  --> ", 7)));
		jule::out(_1a9954ee8_toStr((*(_1922_l))._field_Path));
	};
	if ((((*(_1922_l))._field_Row != 0LL) && ((*(_1922_l))._field_Column != 0LL))) {
		jule::out(_1a9954ee8_toStr(jule::Str::lit(":", 1)));
		jule::out(_1a9954ee8_toStr(_1c005c398_Itoa((*(_1922_l))._field_Row)));
		jule::out(_1a9954ee8_toStr(jule::Str::lit(":", 1)));
		jule::out(_1a9954ee8_toStr(_1c005c398_Itoa((*(_1922_l))._field_Column)));
	};
	if (((*(_1922_l))._field_Line.len() != 0LL)) {
		jule::Str _388_line = _1daec47ab_Trim((*(_1922_l))._field_Line, jule::Str::lit("\r\n\v\b\t ", 6));;
		_388_line=_1daec3337_Replace(_388_line, jule::Str::lit("\t", 1), jule::Str::lit(" ", 1), -1LL);
		jule::I64 _418_offset = (((*(_1922_l))._field_Line.len() - _388_line.len()) + 1LL);;
		jule::out(_1a9954ee8_toStr(jule::Str::lit("\n  ", 3)));
		jule::Str _434_row = _1c005c398_Itoa((*(_1922_l))._field_Row);;
		jule::out(_1a9954ee8_toStr(_434_row));
		jule::out(_1a9954ee8_toStr(jule::Str::lit(" | ", 3)));
		jule::out(_1a9954ee8_toStr(_388_line));
		jule::out(_1a9954ee8_toStr(jule::Str::lit("\n  ", 3)));
		jule::out(_1a9954ee8_toStr(_1daebc5c8_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
		jule::out(_1a9954ee8_toStr(jule::Str::lit(" | ", 3)));
		jule::out(_1a9954ee8_toStr(_1daebc5c8_Repeat(jule::Str::lit(" ", 1), ((*(_1922_l))._field_Column - _418_offset))));
		jule::out(_1a9954ee8_toStr(jule::Str::lit("^", 1)));
		if (((*(_1922_l))._field_Suggestion.len() != 0LL)) {
			jule::out(_1a9954ee8_toStr(jule::Str::lit("\n  ", 3)));
			jule::out(_1a9954ee8_toStr(_1daebc5c8_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
			jule::out(_1a9954ee8_toStr(jule::Str::lit(" | ", 3)));
			static__1a899c96a_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out(_1a9954ee8_toStr((*(_1922_l))._field_Suggestion));
		};
	};
	jule::outln(_1a9954ee8_toStr(jule::Str::lit("\n", 1)));
}



inline void static__1a89a08d5_Log(_1d9144ab5_Log* _6417_l) {
	{
		auto &_match_expr{ (*(_6417_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1acb559ed:;
			{
				static__1a89a0473_LogFlat(_6417_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1acb55cb7:;
			{
				static__1a89a06a4_LogError(_6417_l);
			}
		}
		_match_end_1acb55bb8:;
	};
}



inline void static__1a89a0b16_PrintLogs(jule::Slice<_1d9144ab5_Log>* _7423_logs) {
	{
		auto expr = _7423_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb55d83:;
		if (it != expr_end) {
			_1d9144ab5_Log *_7510_l = it;
			{
				static__1a89a08d5_Log(_7510_l);
			}
			_iter_next_1acb55d83:;
			++it;
			goto _iter_begin_1acb55d83;
		}
		_iter_end_1acb55d83:;
	};
	jule::out(_1a9954ee8_toStr(jule::Str::lit("=== ", 4)));
	jule::out(_1a9954ee8_toStr(_1c005c398_Itoa((*(_7423_logs)).len())));
	jule::outln(_1a9954ee8_toStr(jule::Str::lit(" error generated ===", 20)));
}








inline jule::Bool _1a968806c_AbsTime_eq(_1a968806c_AbsTime *_self_, _1a968806c_AbsTime _other_) {
	return 
		(_self_->_field_Day == _other_._field_Day) &&
		(_self_->_field_WeekDay == _self_->_field_WeekDay) &&
		(_self_->_field_YearDay == _self_->_field_YearDay) &&
		(_self_->_field_Month == _self_->_field_Month) &&
		(_self_->_field_Year == _self_->_field_Year) &&
		(_self_->_field_Second == _self_->_field_Second) &&
		(_self_->_field_Minute == _self_->_field_Minute) &&
		(_self_->_field_Hour == _self_->_field_Hour);
}






inline jule::Bool _1a9688743_Time_eq(_1a9688743_Time *_self_, _1a9688743_Time _other_) {
	return 
		(_self_->_field_sec == _other_._field_sec);
}

inline _1a9688743_Time static__1a9688b2d_Unix(jule::U64 _9117_sec) {
	return _1a9688743_Time{._field_sec=_9117_sec};;
}



inline _1a9688743_Time static__1a9688d3c_Now(void) {
	return static__1a9688b2d_Unix(_1a968a833_unix());;
}



inline _1a968806c_AbsTime _1a968a525_Abs(_1a9688743_Time* _self_) {
	jule::U64 _1273_secs = (jule::U64)((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _1287_days = (_1273_secs / 86400LLU);;
	jule::U64 _1297_remSecs = (_1273_secs % 86400LL);;
	if ((_1297_remSecs < 0LLU)) {
		_1297_remSecs+=86400LLU;
		(_1287_days)--;
	};
	jule::U64 _1357_qcCycles = (_1287_days / 146097LLU);;
	jule::U64 _1367_remDays = (_1287_days % 146097LL);;
	if ((_1367_remDays < 0LLU)) {
		_1367_remDays+=146097LLU;
		(_1357_qcCycles)--;
	};
	jule::U64 _1427_cCycles = (_1367_remDays / 36524LLU);;
	if ((_1427_cCycles == 4LLU)) {
		(_1427_cCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1427_cCycles * 36524LLU);
	jule::U64 _1487_qCycles = (_1367_remDays / 1461LLU);;
	if ((_1487_qCycles == 25LLU)) {
		(_1487_qCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1487_qCycles * 1461LLU);
	jule::U64 _1547_remYears = (_1367_remDays / 365LLU);;
	if ((_1547_remYears == 4LLU)) {
		(_1547_remYears)--;
	};
	_1367_remDays-=(jule::U64)(_1547_remYears * 365LLU);
	jule::U64 _1607_leap = static_cast<jule::U64>(0LLU);;
	if (((_1547_remYears == 0LLU) && ((_1487_qCycles > 0LLU) || (_1427_cCycles == 0LLU)))) {
		_1607_leap=1LLU;
	};
	jule::U64 _1647_yDay = (jule::U64)((jule::U64)((jule::U64)(_1367_remDays + 31LLU) + 28LLU) + _1607_leap);;
	if ((_1647_yDay >= (jule::U64)(365LLU + _1607_leap))) {
		_1647_yDay-=(jule::U64)(365LLU + _1607_leap);
	};
	jule::U64 _1697_months = static_cast<jule::U64>(0LLU);;
	for (; (_1a96874cd_mdays[static_cast<jule::I64>(_1697_months)] <= _1367_remDays); (_1697_months)++) {
		{
			_1367_remDays-=_1a96874cd_mdays[static_cast<jule::I64>(_1697_months)];
		}
	_iter_next_1acb83ad6:;
	}
	_iter_end_1acb83ad6:;;
	_1a968806c_AbsTime _1747_t = _1a968806c_AbsTime{._field_Day=0, ._field_WeekDay=0, ._field_YearDay=0, ._field_Month=0, ._field_Year=0, ._field_Second=0, ._field_Minute=0, ._field_Hour=0};;
	_1747_t._field_Year=(jule::U64)((jule::U64)((jule::U64)((jule::U64)(_1547_remYears + (jule::U64)(4LLU * _1487_qCycles)) + (jule::U64)(100LLU * _1427_cCycles)) + (jule::U64)(400LLU * _1357_qcCycles)) + 100LLU);
	_1747_t._field_Month=(jule::U64)(_1697_months + 2LLU);
	if ((_1747_t._field_Month >= 12LLU)) {
		_1747_t._field_Month-=12LLU;
		(_1747_t._field_Year)++;
	};
	_1747_t._field_Month+=1LLU;
	_1747_t._field_Year+=1900LLU;
	_1747_t._field_Day=(jule::U64)(_1367_remDays + 1LLU);
	_1747_t._field_WeekDay=((jule::U64)(3LLU + _1287_days) % 7LL);
	if ((_1747_t._field_WeekDay < 0LLU)) {
		_1747_t._field_WeekDay+=7LLU;
	};
	_1747_t._field_YearDay=_1647_yDay;
	_1747_t._field_Hour=(_1297_remSecs / 3600LLU);
	_1747_t._field_Minute=(({ jule::U64 __jule_x = _1297_remSecs; jule::U64 __jule_y = 60LLU; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) % 60LL);
	_1747_t._field_Second=(_1297_remSecs % 60LL);
	return _1747_t;;
}








inline jule::Bool _1a95aebec_scopeCoder_eq(_1a95aebec_scopeCoder *_self_, _1a95aebec_scopeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc);
}

inline jule::Ptr<_1a95aebec_scopeCoder> static__1a95b03e5_new(jule::Ptr<_1a9694078_ObjectCoder>* _7321_oc) {
	return jule::new_ptr<_1a95aebec_scopeCoder>(_1a95aebec_scopeCoder{._field_oc=(*(_7321_oc))});;
}



inline void _1accc7bb4_iterHead(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c157b6_RangeIter>* _8029_it, jule::Bool* _8041_ref, jule::Str _8052_begin) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a9694c16_addIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1a8848b13_Copy && _1a95b8123_isCopyOptimizable(&((*((*(_8029_it))))._field_Expr)))) {
		(*(_8041_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_8029_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1acccd25d:;
				{
					jule::Ptr<_1a7c7b178_Var> _895_v = (*((*((*(_8029_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_1a7c7b178_Var>();;
					if ((*(_895_v))._field_Reference) {
						_1a95c9e9d_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
						goto _match_end_1acccb68a;
					};
					goto _case_begin_1acccb701;
				}
			}
			else {
				_case_begin_1acccb701:;
				{
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1a95c9e9d_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1acccb68a:;
		};
	} else {
		_1a95c0b42_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_8041_ref))) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_8041_ref))) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, _8052_begin);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1a9694c16_addIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
}



inline void _1a95b0abb_rangeIndexIter(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c157b6_RangeIter>* _12936_it) {
	_1daed18b7_StrBuilder _1307_sb = static__1daed1bb4_New(64LL);;
	static__1a95d4936_iterBegin(&(_1307_sb), static_cast<jule::Uintptr>((*(_12936_it))));
	jule::Str _1323_begin = _1daedaea9_Str(&_1307_sb);;
	_1daedb1a7_Clear(&_1307_sb);
	static__1a95d500d_iterNext(&(_1307_sb), static_cast<jule::Uintptr>((*(_12936_it))));
	jule::Str _1353_next = _1daedaea9_Str(&_1307_sb);;
	jule::Bool _1377_ref = false;;
	_1accc7bb4_iterHead(_self_, _12936_it, &(_1377_ref), _1323_begin);
	if (((*((*(_12936_it))))._field_KeyA != nullptr)) {
		_1a969b35a_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_12936_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1accd86ca, jule::Ptr<__jule_anon_1accd86ca_ctx>::make(__jule_anon_1accd86ca_ctx{._self_=_self_,._1377_ref=_1377_ref}).as<jule::Uintptr>(), __jule_anon_1accd86ca_ctx_handler));
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a9695112_indent((*(_self_))._field_oc);
	};
	if (((*((*(_12936_it))))._field_KeyB != nullptr)) {
		(*(*((*(_12936_it))))._field_KeyB.alloc)._field_Reference=(_1a8848b13_Copy && _1a95b84db_isIterCopyOptimizable(&((*((*(_12936_it))))._field_Expr), &((*((*(_12936_it))))._field_KeyB)));
		_1a969b35a_varInitExpr((*(_self_))._field_oc, &((*((*(_12936_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1accdc1d4, jule::Ptr<__jule_anon_1accdc1d4_ctx>::make(__jule_anon_1accdc1d4_ctx{._self_=_self_,._12936_it=_12936_it}).as<jule::Uintptr>(), __jule_anon_1accdc1d4_ctx_handler));
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a9695112_indent((*(_self_))._field_oc);
	};
	_1a95b73b9_scope(_self_, (*((*(_12936_it))))._field_Scope);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, _1353_next);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1a9695112_indent((*(_self_))._field_oc);
	if (((*((*(_12936_it))))._field_KeyA != nullptr)) {
		static__1a95d464a_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_12936_it))))._field_KeyA);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1a9695112_indent((*(_self_))._field_oc);
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1a9694760_write((*(_self_))._field_oc, _1323_begin);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a9694e14_doneIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a9695112_indent((*(_self_))._field_oc);
	static__1a95d4c22_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_12936_it))));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a9694e14_doneIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a95b0d74_rangeHashmapIter(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c157b6_RangeIter>* _19638_it) {
	_1daed18b7_StrBuilder _1977_sb = static__1daed1bb4_New(64LL);;
	static__1a95d4936_iterBegin(&(_1977_sb), static_cast<jule::Uintptr>((*(_19638_it))));
	jule::Str _1993_begin = _1daedaea9_Str(&_1977_sb);;
	_1daedb1a7_Clear(&_1977_sb);
	static__1a95d500d_iterNext(&(_1977_sb), static_cast<jule::Uintptr>((*(_19638_it))));
	jule::Str _2023_next = _1daedaea9_Str(&_1977_sb);;
	jule::Ptr<_1a7d2aa52_Map> _2047__map = _1a7d20edc_Map((*((*((*(_19638_it))))._field_Expr))._field_Kind.ptr());;
	jule::Ptr<_1a7ba5ca6_Struct> _2057_s = _1a7e9de39_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1a7ba8b11_StructIns> _2067_ins = _1a8832866_FindStructGenericInstance(&(_2057_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_2047__map))._field_Key; (*it++) = (*_2047__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1a7bbd8b2_FnIns> _2087_f = (*(_1a7ba9bab_FindMethod(_2067_ins.ptr(), jule::Str::lit("iterator", 8), false)))._field_Instances[0LL];;
	jule::Ptr<_1a7ba5ca6_Struct> _2107_itDecl = _1a7e9de39_RuntimeFindStruct(&((*(*((*(_self_))._field_oc))._field_ir.alloc)._field_Runtime), static_cast<jule::Str>(jule::Str::lit("mapIterator", 11)));;
	jule::Ptr<_1a7ba8b11_StructIns> _2117_iterator = _1a8832866_FindStructGenericInstance(&(_2107_itDecl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_2047__map.alloc)._field_Key; (*it++) = (*_2047__map.alloc)._field_Val; __jule_collection; }));;
	jule::Ptr<_1a7bbd8b2_FnIns> _2127_nextCall = (*(_1a7ba9bab_FindMethod(_2117_iterator.ptr(), jule::Str::lit("next", 4), false)))._field_Instances[0LL];;
	;
	;
	jule::Str _2167_resultKey = jule::Str::lit("__iterator_result.__jule_result_arg0", 36);;
	jule::Str _2177_resultVal = jule::Str::lit("__iterator_result.__jule_result_arg1", 36);;
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a9694c16_addIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a96a6ee2_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _2117_iterator);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" it = ", 6));
	static__1a95d33c4_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_2087_f));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a95c0b42_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*((*(_19638_it))))._field_Expr.alloc)._field_Model);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, _1993_begin);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a96a8202_funcInsResult((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_2127_nextCall));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result", 17));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1a95d33c4_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_2127_nextCall));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(&it);\n", 7));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1a9694760_write((*(_self_))._field_oc, _2167_resultKey);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" != nullptr) {\n", 15));
	_1a9694c16_addIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	if (((*((*(_19638_it))))._field_KeyA != nullptr)) {
		_1a969b35a_varInitExpr((*(_self_))._field_oc, &((*((*(_19638_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1acd0c765, jule::Ptr<__jule_anon_1acd0c765_ctx>::make(__jule_anon_1acd0c765_ctx{._self_=_self_,._2167_resultKey=_2167_resultKey}).as<jule::Uintptr>(), __jule_anon_1acd0c765_ctx_handler));
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a9695112_indent((*(_self_))._field_oc);
	};
	if (((*((*(_19638_it))))._field_KeyB != nullptr)) {
		_1a969b35a_varInitExpr((*(_self_))._field_oc, &((*((*(_19638_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1acd0ecd9, jule::Ptr<__jule_anon_1acd0ecd9_ctx>::make(__jule_anon_1acd0ecd9_ctx{._self_=_self_,._2177_resultVal=_2177_resultVal}).as<jule::Uintptr>(), __jule_anon_1acd0ecd9_ctx_handler));
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a9695112_indent((*(_self_))._field_oc);
	};
	_1a95b73b9_scope(_self_, (*((*(_19638_it))))._field_Scope);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, _2023_next);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1a9694760_write((*(_self_))._field_oc, _1993_begin);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a9694e14_doneIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a9695112_indent((*(_self_))._field_oc);
	static__1a95d4c22_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_19638_it))));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a9694e14_doneIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a95b112c_strRuneIter(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7e14ed2_StrRuneIter> _27932_it) {
	_1daed18b7_StrBuilder _2807_sb = static__1daed1bb4_New(64LL);;
	static__1a95d4936_iterBegin(&(_2807_sb), static_cast<jule::Uintptr>((*(_27932_it))._field_Base));
	jule::Str _2823_begin = _1daedaea9_Str(&_2807_sb);;
	_1daedb1a7_Clear(&_2807_sb);
	static__1a95d500d_iterNext(&(_2807_sb), static_cast<jule::Uintptr>((*_27932_it.alloc)._field_Base));
	jule::Str _2853_next = _1daedaea9_Str(&_2807_sb);;
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a9694c16_addIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	jule::Bool _2917_ref = false;;
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1a8848b13_Copy && _1a95b8123_isCopyOptimizable(&((*_27932_it.alloc)._field_Expr)))) {
		_2917_ref=true;
		{
			auto &_match_expr{ (*((*(_27932_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1acd1ded5:;
				{
					jule::Ptr<_1a7c7b178_Var> _2975_v = (*((*(_27932_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1a7c7b178_Var>();;
					if ((*(_2975_v))._field_Reference) {
						_1a95c9e9d_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_27932_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1acd1c412;
					};
					goto _case_begin_1acd1c478;
				}
			}
			else {
				_case_begin_1acd1c478:;
				{
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1a95c9e9d_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_27932_it.alloc)._field_Expr))._field_Model);
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1acd1c412:;
		};
	} else {
		_1a95c0b42_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_27932_it.alloc)._field_Expr))._field_Model);
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" *it = expr", 11));
	if (_2917_ref) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("const ", 6));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" *end = it + expr", 17));
	if (_2917_ref) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("len();\n", 7));
	_1a9695112_indent((*(_self_))._field_oc);
	if (((*((*_27932_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_1a969b35a_varInitExpr((*(_self_))._field_oc, &((*(*(_27932_it))._field_Base.alloc)._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1acd28d36, jule::Ptr<__jule_anon_1acd28d36_ctx>::make(__jule_anon_1acd28d36_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1acd28d36_ctx_handler));
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a9695112_indent((*(_self_))._field_oc);
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("jule::Int", 9));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" len;\n", 6));
	_1a9695112_indent((*(_self_))._field_oc);
	if (((*(*(_27932_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		_1a969b35a_varInitExpr((*(_self_))._field_oc, &((*(*(_27932_it))._field_Base.alloc)._field_KeyB), nullptr);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a9695112_indent((*(_self_))._field_oc);
	};
	_1a9694760_write((*(_self_))._field_oc, _2823_begin);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_runeStep(it, end - it, ", 30));
	if (((*(*(_27932_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
		static__1a95d464a_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_27932_it))._field_Base.alloc)._field_KeyB);
	} else {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", &len);\n", 9));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_1a9694c16_addIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a95b73b9_scope(_self_, (*(*(_27932_it))._field_Base.alloc)._field_Scope);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, _2853_next);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("it += len;\n", 11));
	_1a9695112_indent((*(_self_))._field_oc);
	if (((*(*(_27932_it))._field_Base.alloc)._field_KeyA != nullptr)) {
		static__1a95d464a_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_27932_it))._field_Base.alloc)._field_KeyA);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1a9695112_indent((*(_self_))._field_oc);
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1a9694760_write((*(_self_))._field_oc, _2823_begin);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a9694e14_doneIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a9694e14_doneIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a95b13d5_ifCase(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c13d9c_If> _39127_i) {
	if (((*(_39127_i))._field_Expr != nullptr)) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1a95c0b42_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39127_i.alloc)._field_Expr);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1a95b73b9_scope(_self_, (*_39127_i.alloc)._field_Scope);
}



inline void _1a95b168d_conditional(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c145b7_Conditional> _40032_c) {
	jule::Bool _4017_writed = false;;
	{
		auto expr = &((*(_40032_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd3e39b:;
		if (it != expr_end) {
			jule::Ptr<_1a7c13d9c_If> _40215_elif = *it;
			{
				if ((_40215_elif == nullptr)) {
					goto _iter_next_1acd3e39b;
				};
				if (_4017_writed) {
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_4017_writed=true;
				_1a95b13d5_ifCase(_self_, _40215_elif);
			}
			_iter_next_1acd3e39b:;
			++it;
			goto _iter_begin_1acd3e39b;
		}
		_iter_end_1acd3e39b:;
	};
	if (((*_40032_c.alloc)._field_Default != nullptr)) {
		if (_4017_writed) {
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1a95b73b9_scope(_self_, (*(*(_40032_c))._field_Default.alloc)._field_Scope);
	};
}



inline void _1a95b1946_infIter(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c148b4_InfIter> _42028_it) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1a9694c16_addIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a95b73b9_scope(_self_, (*(_42028_it))._field_Scope);
	_1a9694e14_doneIndent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a9695112_indent((*(_self_))._field_oc);
	static__1a95d500d_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_42028_it));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a9695112_indent((*(_self_))._field_oc);
	static__1a95d4c22_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_42028_it));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1a95b1bee_whileIter(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c14d6a_WhileIter> _43730_it) {
	if ((((*(_43730_it))._field_Expr != nullptr) && ((*_43730_it.alloc)._field_Next == nullptr))) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1a95c0b42_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_43730_it.alloc)._field_Expr);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	} else {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_43730_it))._field_Expr != nullptr)) {
			_1a95c0b42_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_43730_it.alloc)._field_Expr);
		};
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*_43730_it.alloc)._field_Next != nullptr)) {
			_1a95b6d58_st(_self_, (*_43730_it.alloc)._field_Next);
		};
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_43730_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a9694c16_addIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a95b73b9_scope(_self_, (*_43730_it.alloc)._field_Scope);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a9694e14_doneIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	static__1a95d500d_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_43730_it));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a9695112_indent((*(_self_))._field_oc);
	static__1a95d4c22_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_43730_it));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1a95b1ea7_rangeIter(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c157b6_RangeIter> _47630_it) {
	{
		
		if ((_1a7d204a3_Slc((*((*(_47630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acd54c96:;
			{
				_1a95b0abb_rangeIndexIter(_self_, &(_47630_it));
			}
		}
		else if ((_1a7d2021c_Arr((*((*(_47630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acd54944:;
			{
				_1a95b0abb_rangeIndexIter(_self_, &(_47630_it));
			}
		}
		else if ((_1a7d20edc_Map((*((*(_47630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acd549aa:;
			{
				_1a95b0d74_rangeHashmapIter(_self_, &(_47630_it));
			}
		}
		else {
			_case_begin_1acd548cd:;
			{
				_1a95b0abb_rangeIndexIter(_self_, &(_47630_it));
			}
		}
		_match_end_1acd547bd:;
	};
}



inline void _1a95b2260_cont(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c15b4b_ContSt> _48921_c) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a95d500d_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_48921_c))._field_It);
}



inline void _1a95b2518_label(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c164cb_Label> _49422_l) {
	static__1a95d52e9_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_49422_l));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1a95b27c1_gotoSt(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c16b3b_GotoSt> _49923_gt) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a95d52e9_label(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_49923_gt))._field_Label));
}



inline void _1a95b2a79_postfix(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c17015_Postfix> _50428_p) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a95c0b42_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_50428_p))._field_Expr);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1a9694760_write((*(_self_))._field_oc, (*_50428_p.alloc)._field_Op);
}



inline void _1a95b2d32_assignLeft(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Any* _51132_model) {
	{
		auto &_match_expr{ (*(_51132_model)) };
		
		if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1acd5dcb1:;
			{
				jule::Ptr<_1a7bb0783_IndexingExprModel> _5148_iem = (*(_51132_model)).cast_ptr<_1a7bb0783_IndexingExprModel>(&__jule_any_type53);;
				jule::Ptr<_1a7d2aa52_Map> _5154__map = _1a7d20edc_Map((*((*(_5148_iem))._field_Expr))._field_Kind.ptr());;
				if ((_5154__map == nullptr)) {
					goto _match_end_1acd5dc4a;
				};
				jule::Ptr<_1a7ba5ca6_Struct> _5218_s = _1a7e9de39_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
				jule::Ptr<_1a7ba8b11_StructIns> _5228_ins = _1a8832866_FindStructGenericInstance(&(_5218_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_5154__map))._field_Key; (*it++) = (*(_5154__map))._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1a7bbd8b2_FnIns> _5248_f = (*(_1a7ba9bab_FindMethod(_5228_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1a95d33c4_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_5248_f));
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1a95c0b42_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_5148_iem))._field_Expr.alloc)._field_Model);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(").ptr(", 6));
				if ((!(_1d92614d9_Production))) {
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1a9696aa3_locInfo((*(_self_))._field_oc, &((*_5148_iem.alloc)._field_Token));
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
				};
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1a95c0b42_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_5148_iem.alloc)._field_Index))._field_Model);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		_match_end_1acd5dc4a:;
	};
	_1a95c0b42_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_51132_model)));
}



inline void _1a95b30da_shl(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c174bb_Assign> _54324_a) {
	_1a95b2d32_assignLeft(_self_, &((*((*(_54324_a))._field_Left))._field_Model));
	_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1a95be3e3_shl((*(*(_self_))._field_oc.alloc)._field_ec, &((*_54324_a.alloc)._field_Left), &((*_54324_a.alloc)._field_Right));
}



inline void _1a95b3393_shr(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c174bb_Assign> _54924_a) {
	_1a95b2d32_assignLeft(_self_, &((*((*(_54924_a))._field_Left))._field_Model));
	_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1a95be756_shr((*(*(_self_))._field_oc.alloc)._field_ec, &((*_54924_a.alloc)._field_Left), &((*_54924_a.alloc)._field_Right));
}



inline void _1a95b364b_divByZeroAssign(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c174bb_Assign> _55536_a) {
	_1a95b2d32_assignLeft(_self_, &((*((*(_55536_a))._field_Left))._field_Model));
	_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1a95bd5ce_divByZeroBinary((*(*(_self_))._field_oc.alloc)._field_ec, &((*_55536_a.alloc)._field_Op), &((*_55536_a.alloc)._field_Left), &((*_55536_a.alloc)._field_Right));
}



inline void _1a95b3b24_operatorOverloadingAssign(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _56147_s, jule::Ptr<_1a7bac928_OperandExprModel>* _56173_l, jule::Ptr<_1a7bac928_OperandExprModel>* _5628_r, jule::U64 _56236_op) {
	;
	jule::Ptr<_1a7bbd8b2_FnIns> _5647_f = _1a883205d_FindOperator(_56147_s, _56236_op, false);;
	if ((_5647_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("binary operator overloading is not exist, this is an implementation mistake", 75) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:566:4"));;
	};
	static__1a95d33c4_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_5647_f));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1a95b2d32_assignLeft(_self_, &((*((*(_56173_l))))._field_Model));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a95c0b42_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_5628_r))))._field_Model);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a95b3dcc_assign(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c174bb_Assign> _57627_a) {
	{
		auto &_match_expr{ (*((*(_57627_a))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1acd74766:;
			{
				if ((_1d9261297_Safety && (_1a7d209c0_Struct((*((*(_57627_a))._field_Left))._field_Kind.ptr()) == nullptr))) {
					_1a95b364b_divByZeroAssign(_self_, _57627_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1acd747dd:;
			{
				if ((_1a7d209c0_Struct((*((*(_57627_a))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1a95b30da_shl(_self_, _57627_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1acd74854:;
			{
				if ((_1a7d209c0_Struct((*((*(_57627_a))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1a95b3393_shr(_self_, _57627_a);
					return;;
				};
			}
		}
		_match_end_1acd7469a:;
	};
	if ((((*((*(_57627_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1a7d209c0_Struct((*((*_57627_a.alloc)._field_Left))._field_Kind.ptr()) != nullptr))) {
		jule::Ptr<_1a7ba8b11_StructIns> _5998_s = _1a7d209c0_Struct((*((*(_57627_a))._field_Left))._field_Kind);;
		_1a95b3b24_operatorOverloadingAssign(_self_, &(_5998_s), &((*_57627_a.alloc)._field_Left), &((*_57627_a.alloc)._field_Right), (*(*(_57627_a))._field_Op.alloc)._field_Id);
		return;;
	};
	_1a95b2d32_assignLeft(_self_, &((*(*(_57627_a))._field_Left.alloc)._field_Model));
	_1a9694760_write((*_self_.alloc)._field_oc, (*(*(_57627_a))._field_Op.alloc)._field_Kind);
	_1a95c0b42_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_57627_a.alloc)._field_Right))._field_Model);
}



inline void _1a95b4185_mapLookupAssign(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c17972_MultiAssign>* _60937_a) {
	jule::Ptr<_1a7bb0783_IndexingExprModel> _6117_iem = (*((*(_60937_a))))._field_Right.cast_ptr<_1a7bb0783_IndexingExprModel>(&__jule_any_type53);;
	jule::Ptr<_1a7d2aa52_Map> _6127__map = _1a7d20edc_Map((*((*(_6117_iem))._field_Expr))._field_Kind.ptr());;
	jule::Ptr<_1a7ba5ca6_Struct> _6147_s = _1a7e9de39_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1a7ba8b11_StructIns> _6157_ins = _1a8832866_FindStructGenericInstance(&(_6147_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_6127__map))._field_Key; (*it++) = (*_6127__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1a7bbd8b2_FnIns> _6177_f = (*(_1a7ba9bab_FindMethod(_6157_ins.ptr(), jule::Str::lit("lookup", 6), false)))._field_Instances[0LL];;
	static__1a95d33c4_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_6177_f));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a95b2d32_assignLeft(_self_, &((*(*(_6117_iem))._field_Expr.alloc)._field_Model));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a95c0b42_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_6117_iem.alloc)._field_Index))._field_Model);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_60937_a))))._field_Left[0LL] != nullptr)) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1a95c0b42_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_60937_a))))._field_Left[0LL]))._field_Model);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_60937_a))))._field_Left[1LL] != nullptr)) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1a95c0b42_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_60937_a))))._field_Left[1LL]))._field_Model);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a95b443d_multiAssignTup(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c17972_MultiAssign>* _64236_a) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1a9694c16_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1a7bb3511_TupleExprModel> _6467_tup = (*((*(_64236_a))))._field_Right.cast_ptr<_1a7bb3511_TupleExprModel>(&__jule_any_type84);;
	{
		auto expr = &((*(_6467_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd8a282:;
		if (it != expr_end) {
			jule::I64 _6488_i = it - expr->begin();
			jule::Ptr<_1a7cd41ae_Data> _64815_r = *it;
			{
				_1a9695112_indent((*(_self_))._field_oc);
				jule::Ptr<_1a7cd41ae_Data> _6508_l = (*((*(_64236_a))))._field_Left[_6488_i];;
				if ((_6508_l != nullptr)) {
					{
						auto &_match_expr{ (*(_6508_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1acd8d30c:;
							{
								jule::Ptr<_1a7c7b178_Var> _65410_v = (*(_6508_l))._field_Model.unsafe_cast_ptr<_1a7c7b178_Var>();;
								if (((*(_65410_v))._field_Reference && (!(_1a7c7b585_IsInitialized(_65410_v))))) {
									static__1a95d464a_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _65410_v);
									_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
									_1a95c0b42_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_64815_r))._field_Model);
									_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_64236_a))))._field_Left[_6488_i]=nullptr;
									goto _iter_next_1acd8a282;
								};
							}
						}
						_match_end_1acd8d296:;
					};
					_1a96a8c3b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_6508_l.alloc)._field_Kind);
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					static__1a95d289b_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a95ae48d_assignArgName, static_cast<jule::Uintptr>(_6488_i));
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1a95c0b42_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_64815_r.alloc)._field_Model);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1acd8a282:;
			++it;
			_6488_i++;
			goto _iter_begin_1acd8a282;
		}
		_iter_end_1acd8a282:;
	};
	{
		auto expr = &((*((*(_64236_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd94940:;
		if (it != expr_end) {
			jule::I64 _6758_i = it - expr->begin();
			jule::Ptr<_1a7cd41ae_Data> _67515_l = *it;
			{
				if ((_67515_l == nullptr)) {
					goto _iter_next_1acd94940;
				};
				_1a9695112_indent((*(_self_))._field_oc);
				_1a95b2d32_assignLeft(_self_, &((*(_67515_l))._field_Model));
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				static__1a95d289b_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a95ae48d_assignArgName, static_cast<jule::Uintptr>(_6758_i));
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1acd94940:;
			++it;
			_6758_i++;
			goto _iter_begin_1acd94940;
		}
		_iter_end_1acd94940:;
	};
	_1a9694e14_doneIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a95b46e6_multiAssignFn(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c17972_MultiAssign>* _69135_a) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1a9694c16_addIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	jule::Ptr<_1a7baee03_FnCallExprModel> _6967_f = (*((*(_69135_a))))._field_Right.cast_ptr<_1a7baee03_FnCallExprModel>(&__jule_any_type41);;
	_1a96adbdb_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_6967_f))._field_Func))._field_Result));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1a95c0b42_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_69135_a))))._field_Right);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1a7d29ea2_Tuple> _7027_tup = _1a7d21273_Tup((*(*(_6967_f))._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_69135_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd9d5d6:;
		if (it != expr_end) {
			jule::I64 _7038_i = it - expr->begin();
			jule::Ptr<_1a7cd41ae_Data> _70315_l = *it;
			{
				if ((_70315_l == nullptr)) {
					goto _iter_next_1acd9d5d6;
				};
				;
				_1a9695112_indent((*(_self_))._field_oc);
				_1a95b2d32_assignLeft(_self_, &((*(_70315_l))._field_Model));
				{
					
					if (_1a7d1c4d3_Equal((*(_7027_tup))._field_Types[_7038_i], (*(_70315_l))._field_Kind)) {
						_case_begin_1acda87bc:;
						{
							_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
							_1a9694760_write((*(_self_))._field_oc, _1c005c398_Itoa(_7038_i));
						}
					}
					else if (_1a882dad7_IsAny(&((*(_70315_l))._field_Kind))) {
						_case_begin_1acda56cb:;
						{
							_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
							_1a9694760_write((*(_self_))._field_oc, _1c005c398_Itoa(_7038_i));
							_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
							_1a9694760_write((*(_self_))._field_oc, _1c005c398_Itoa(_1a9695e26_pushAnyType((*(_self_))._field_oc, (*(_7027_tup))._field_Types[_7038_i])));
							_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					else {
						_case_begin_1acd9e8c3:;
						{
							if ((_1a7d20c56_Trait((*(_7027_tup))._field_Types[_7038_i].ptr()) != nullptr)) {
								_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
								jule::Ptr<_1a7bce362_Trait> _72410_t1 = _1a7d20c56_Trait((*(_70315_l))._field_Kind.ptr());;
								jule::Ptr<_1a7bce362_Trait> _72510_t2 = _1a7d20c56_Trait((*(_7027_tup))._field_Types[_7038_i].ptr());;
								_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_1a9694760_write((*(_self_))._field_oc, _1c005c398_Itoa(_7038_i));
								_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".map(", 5));
								_1a96967ea_pushAndWriteMaskMapper((*(_self_))._field_oc, _72410_t1, _72510_t2);
								_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1acda07c5;
							};
							jule::Ptr<_1a7bce362_Trait> _7335_t = _1a7d20c56_Trait((*(_70315_l))._field_Kind);;
							_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Trait(__jule_assign_result.__jule_result_arg", 53));
							_1a9694760_write((*(_self_))._field_oc, _1c005c398_Itoa(_7038_i));
							_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
							static__1a95d36b0_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _7335_t);
							_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
							_1a9694760_write((*(_self_))._field_oc, _1c005c398_Itoa(_1a8831b2e_FindTraitTypeOffset(_7335_t, (*(_7027_tup))._field_Types[_7038_i])));
							_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					_match_end_1acda07c5:;
				};
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1acd9d5d6:;
			++it;
			_7038_i++;
			goto _iter_begin_1acd9d5d6;
		}
		_iter_end_1acd9d5d6:;
	};
	_1a9694e14_doneIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a95b499e_multiAssign(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c17972_MultiAssign> _75032_a) {
	{
		auto expr = &((*(_75032_a))._field_Decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdae22e:;
		if (it != expr_end) {
			jule::Ptr<_1a7c7b178_Var> _75315_d = *it;
			{
				_1a969b35a_varInitExpr((*(_self_))._field_oc, &(_75315_d), nullptr);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
				_1a9695112_indent((*(_self_))._field_oc);
			}
			_iter_next_1acdae22e:;
			++it;
			goto _iter_begin_1acdae22e;
		}
		_iter_end_1acdae22e:;
	};
	{
		auto &_match_expr{ (*(_75032_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1acdae949:;
			{
				_1a95b4185_mapLookupAssign(_self_, &(_75032_a));
				return;;
			}
		}
		_match_end_1acdae8d3:;
	};
	{
		auto &_match_expr{ (*(_75032_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1acdae9d2:;
			{
				_1a95b443d_multiAssignTup(_self_, &(_75032_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1acdb1495:;
			{
				_1a95b46e6_multiAssignFn(_self_, &(_75032_a));
			}
		}
		else {
			_case_begin_1acdb142e:;
			{
				__jule_panic_s(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:772:4"));;
			}
		}
		_match_end_1acdb13b8:;
	};
}



inline jule::Fn<void> _1a95b4ce0_matchExpr(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c181ae_Match> _77630_m) {
	if ((!(_1a7cd4ae9_IsConst((*(_77630_m))._field_Expr.ptr())))) {
		return jule::__new_closure<void>((void*)__jule_anon_1acdb39e7, jule::Ptr<__jule_anon_1acdb39e7_ctx>::make(__jule_anon_1acdb39e7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1acdb39e7_ctx_handler);;
	};
	if (((!(_1c006e982_IsBool((*(*(_77630_m))._field_Expr.alloc)._field_Constant.ptr()))) || (!(_1c006c386_ReadBool((*((*(_77630_m))._field_Expr))._field_Constant))))) {
		return jule::__new_closure<void>((void*)__jule_anon_1acdb4d28, jule::Ptr<__jule_anon_1acdb4d28_ctx>::make(__jule_anon_1acdb4d28_ctx{._self_=_self_,._77630_m=_77630_m}).as<jule::Uintptr>(), __jule_anon_1acdb4d28_ctx_handler);;
	};
	return nullptr;;
}



inline void _1a95b5153_case(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c181ae_Match> _78625_m, jule::Ptr<_1a7c18bd7_Case> _78640_c) {
	if ((((*(_78640_c))._field_Exprs.len() != 0LL) && (!((*(_78625_m))._field_Comptime)))) {
		if ((((*_78625_m.alloc)._field_Cases.len() > 0LL) && ((*(_78625_m))._field_Cases[0LL] == _78640_c))) {
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_78640_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acdb90b3:;
			if (it != expr_end) {
				jule::I64 _7939_i = it - expr->begin();
				jule::Ptr<_1a7cd41ae_Data> _79316_expr = *it;
				{
					{
						
						if ((!((*_78625_m.alloc)._field_TypeMatch))) {
							_case_begin_1acdc1ae3:;
							{
								jule::Fn<void> _7966_caseExpr = _1a95b4ce0_matchExpr(_self_, _78625_m);;
								if (_1a7cd4e3a_GoodOperand((*_78625_m.alloc)._field_Expr.ptr(), &(_79316_expr))) {
									if ((_7966_caseExpr != nullptr)) {
										_7966_caseExpr();
										_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_1a95c0b42_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_79316_expr))._field_Model);
								} else {
									_1a95c0b42_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_79316_expr))._field_Model);
									if ((_7966_caseExpr != nullptr)) {
										_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_7966_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1acdb9b85:;
							{
								_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1a7d1bc96_TypeKind> _81210_tk = (*(_79316_expr))._field_Model.cast_ptr<_1a7d1bc96_TypeKind>(&__jule_any_type87);;
								if ((_1a7d20c56_Trait((*((*_78625_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1a95bbe3a_boolean((*(*(_self_))._field_oc.alloc)._field_ec, (_1a7d1e6d3_Sptr((*(_79316_expr))._field_Kind) != nullptr));
									_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", (const jule::Trait::Type*)&", 29));
									static__1a95d36b0_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a7d20c56_Trait((*((*(_78625_m))._field_Expr))._field_Kind));
									_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
									_1a9694760_write((*(_self_))._field_oc, _1c005c398_Itoa(_1a8831b2e_FindTraitTypeOffset(_1a7d20c56_Trait((*((*(_78625_m))._field_Expr))._field_Kind), (*_79316_expr.alloc)._field_Kind)));
									_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I64 _8227_j = _1a9695e26_pushAnyType((*(_self_))._field_oc, _81210_tk);;
									_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1a9694760_write((*(_self_))._field_oc, _1c005c398_Itoa(_8227_j));
								};
							}
						}
						_match_end_1acdb9a75:;
					};
					if ((((*_78640_c.alloc)._field_Exprs.len() - _7939_i) > 1LL)) {
						_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1acdb90b3:;
				++it;
				_7939_i++;
				goto _iter_begin_1acdb90b3;
			}
			_iter_end_1acdb90b3:;
		};
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_78625_m))._field_Default == _78640_c) && ((*_78625_m.alloc)._field_Cases.len() != 0LL))) {
		_1a9695112_indent((*(_self_))._field_oc);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1a9694c16_addIndent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a9695112_indent((*(_self_))._field_oc);
	static__1a95d58c1_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_78640_c));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_78640_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1a9695112_indent((*(_self_))._field_oc);
		_1a95b73b9_scope(_self_, (*_78640_c.alloc)._field_Scope);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1a9694e14_doneIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a95b540b_matchSt(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c181ae_Match> _85628_m) {
	if ((((*(_85628_m))._field_Cases.len() == 0LL) && ((*_85628_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*_85628_m.alloc)._field_Comptime && (((*_85628_m.alloc)._field_Default == nullptr) || ((*((*((*_85628_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a9694c16_addIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	if (((!((*_85628_m.alloc)._field_Comptime)) && (!(_1a7cd4ae9_IsConst((*_85628_m.alloc)._field_Expr.ptr()))))) {
		if ((_1a8848b13_Copy && _1a95b8123_isCopyOptimizable(&((*_85628_m.alloc)._field_Expr)))) {
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1a95c0b42_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_85628_m))._field_Expr.alloc)._field_Model);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1a9695112_indent((*(_self_))._field_oc);
	};
	if (((*_85628_m.alloc)._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_85628_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acdda28d:;
			if (it != expr_end) {
				jule::Ptr<_1a7c18bd7_Case> _88416_c = *it;
				{
					if ((_88416_c == nullptr)) {
						goto _iter_next_1acdda28d;
					};
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1a9695112_indent((*(_self_))._field_oc);
					_1a95b5153_case(_self_, _85628_m, _88416_c);
				}
				_iter_next_1acdda28d:;
				++it;
				goto _iter_begin_1acdda28d;
			}
			_iter_end_1acdda28d:;
		};
	};
	if (((*_85628_m.alloc)._field_Default != nullptr)) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a95b5153_case(_self_, _85628_m, (*_85628_m.alloc)._field_Default);
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a9695112_indent((*(_self_))._field_oc);
	static__1a95d55d5_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_85628_m));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a9694e14_doneIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a95b56b4_fallSt(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c193d0_FallSt> _91123_f) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a95d58c1_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_91123_f))._field_DestCase);
}



inline void _1a95b596c_breakSt(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c16025_BreakSt> _91624_b) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_91624_b))._field_It != 0LLU)) {
		static__1a95d4c22_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_91624_b.alloc)._field_It);
	} else {
		static__1a95d55d5_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_91624_b))._field_Mtch);
	};
}



inline void _1a95b5c25_setResult(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c19776_RetSt> _92530_r) {
	if (((*((*((*((*(_92530_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1a95c0b42_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_92530_r.alloc)._field_Expr);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1a9695112_indent((*(_self_))._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_92530_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1acde5122:;
			{
				jule::Slice<jule::Ptr<_1a7cd41ae_Data>> _9358_datas = (*((*(_92530_r))._field_Expr.unsafe_cast_ptr<_1a7bb3511_TupleExprModel>()))._field_Datas;;
				{
					auto expr = &(_9358_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acde8d07:;
					if (it != expr_end) {
						jule::I64 _9368_i = it - expr->begin();
						jule::Ptr<_1a7cd41ae_Data> _93611_data = *it;
						{
							_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1a9694760_write((*(_self_))._field_oc, _1c005c398_Itoa(_9368_i));
							_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1a95c0b42_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_93611_data))._field_Model);
							_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
							_1a9695112_indent((*(_self_))._field_oc);
						}
						_iter_next_1acde8d07:;
						++it;
						_9368_i++;
						goto _iter_begin_1acde8d07;
					}
					_iter_end_1acde8d07:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1acde7ca1:;
			{
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_1a95c9e9d_model((*((*(_self_))._field_oc))._field_ec, (*_92530_r.alloc)._field_Expr);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_1acde78b6:;
			{
				__jule_panic_s(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:949:4"));;
			}
		}
		_match_end_1acde7850:;
	};
}



inline void _1a95b5ecd_retSt(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c19776_RetSt> _95326_r) {
	if (_1a7bbad87_IsVoid((*((*(_95326_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*((*(_95326_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_95326_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*((*(_95326_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1a96a8c3b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_95326_r))._field_Func.alloc)._field_Result);
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(">{.result=", 10));
			_1a95c0b42_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_95326_r.alloc)._field_Expr);
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
		} else {
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1a95c0b42_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_95326_r.alloc)._field_Expr);
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_95326_r))._field_Expr != nullptr)) {
		_1a95b5c25_setResult(_self_, _95326_r);
	};
	if ((*((*((*_95326_r.alloc)._field_Func))._field_Decl))._field_Exceptional) {
		_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1a96adbdb_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(*(_95326_r))._field_Func.alloc)._field_Result));
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1a95b6286_var(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c7b178_Var> _98924_v) {
	if ((!((*(_98924_v))._field_Constant))) {
		_1a969b613_var((*(_self_))._field_oc, _98924_v);
	};
}



inline void _1a95b653e_mutSlicing(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7e13bc3_MutSlicingExprModel> _99531_m) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a95c0b42_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_99531_m))._field_Expr);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_1d92614d9_Production))) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1a9696aa3_locInfo((*(_self_))._field_oc, &((*_99531_m.alloc)._field_Token));
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1a95c0b42_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_99531_m.alloc)._field_Left);
	if (((*_99531_m.alloc)._field_Right != nullptr)) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a95c0b42_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_99531_m.alloc)._field_Right);
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1a95b67e7_swap(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7e1296e_SwapExprModel> _101225_m) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1a95c0b42_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_101225_m))._field_Left))._field_Model);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a95c0b42_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_101225_m.alloc)._field_Right))._field_Model);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a95b6aa0_exceptionalForwarding(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7e125d9_ExceptionalForwardingExprModel> _102042_m) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_1a95c256c_pureFuncCall((*(*(_self_))._field_oc.alloc)._field_ec, &((*(_102042_m))._field_Expr));
}



inline void _1a95b6d58_st(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Any _102623_st) {
	if ((_102623_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _102623_st };
		
		if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1ace15ede:;
			{
				_1a95b73b9_scope(_self_, _102623_st.cast_ptr<_1a7c1397e_Scope>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ace16264:;
			{
				_1a95b6286_var(_self_, _102623_st.cast_ptr<_1a7c7b178_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ace162ca:;
			{
				_1a95c9e9d_model((*((*(_self_))._field_oc))._field_ec, (*(_102623_st.unsafe_cast_ptr<_1a7cd41ae_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1ace16a4a:;
			{
				_1a95b168d_conditional(_self_, _102623_st.cast_ptr<_1a7c145b7_Conditional>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1ace16ab1:;
			{
				_1a95b1946_infIter(_self_, _102623_st.cast_ptr<_1a7c148b4_InfIter>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ace16b27:;
			{
				_1a95b1bee_whileIter(_self_, _102623_st.cast_ptr<_1a7c14d6a_WhileIter>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ace16b8d:;
			{
				_1a95b1ea7_rangeIter(_self_, _102623_st.cast_ptr<_1a7c157b6_RangeIter>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1ace16c04:;
			{
				_1a95b2260_cont(_self_, _102623_st.cast_ptr<_1a7c15b4b_ContSt>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1ace16c6a:;
			{
				_1a95b2518_label(_self_, _102623_st.cast_ptr<_1a7c164cb_Label>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1ace16cd1:;
			{
				_1a95b27c1_gotoSt(_self_, _102623_st.cast_ptr<_1a7c16b3b_GotoSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1ace16d47:;
			{
				_1a95b2a79_postfix(_self_, _102623_st.cast_ptr<_1a7c17015_Postfix>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1ace16dad:;
			{
				_1a95b3dcc_assign(_self_, _102623_st.cast_ptr<_1a7c174bb_Assign>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1ace16e24:;
			{
				_1a95b499e_multiAssign(_self_, _102623_st.cast_ptr<_1a7c17972_MultiAssign>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1ace16e8a:;
			{
				_1a95b540b_matchSt(_self_, _102623_st.cast_ptr<_1a7c181ae_Match>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1ace17001:;
			{
				_1a95b56b4_fallSt(_self_, _102623_st.cast_ptr<_1a7c193d0_FallSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1ace17078:;
			{
				_1a95b596c_breakSt(_self_, _102623_st.cast_ptr<_1a7c16025_BreakSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1ace17100:;
			{
				_1a95b5ecd_retSt(_self_, _102623_st.cast_ptr<_1a7c19776_RetSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1ace17177:;
			{
				_1a95c797e_pushToSlice((*((*(_self_))._field_oc))._field_ec, _102623_st.cast_ptr<_1a7e1472e_PushToSliceExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1ace171ee:;
			{
				_1a95c7c37_appendToSlice((*((*(_self_))._field_oc))._field_ec, _102623_st.cast_ptr<_1a7e14b08_AppendToSliceExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1ace17276:;
			{
				_1a95b653e_mutSlicing(_self_, _102623_st.cast_ptr<_1a7e13bc3_MutSlicingExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1ace172ed:;
			{
				_1a95b67e7_swap(_self_, _102623_st.cast_ptr<_1a7e1296e_SwapExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1ace17375:;
			{
				_1a95b6aa0_exceptionalForwarding(_self_, _102623_st.cast_ptr<_1a7e125d9_ExceptionalForwardingExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1ace173ec:;
			{
				_1a95b112c_strRuneIter(_self_, _102623_st.cast_ptr<_1a7e14ed2_StrRuneIter>(&__jule_any_type123));
			}
		}
		else {
			_case_begin_1ace15d57:;
			{
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1ace15ce1:;
	};
}



inline void _1a95b7111_scopeStmts(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c1397e_Scope>* _108232_s) {
	{
		auto expr = &((*((*(_108232_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace25042:;
		if (it != expr_end) {
			jule::Any _108315_st = *it;
			{
				_1a9695112_indent((*(_self_))._field_oc);
				_1a95b6d58_st(_self_, _108315_st);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ace25042:;
			++it;
			goto _iter_begin_1ace25042;
		}
		_iter_end_1ace25042:;
	};
}



inline void _1a95b73b9_scope(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7c1397e_Scope> _109126_s) {
	_1a9694c16_addIndent((*(_self_))._field_oc);
	if ((*(_109126_s))._field_Deferred) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a95b7111_scopeStmts(_self_, &(_109126_s));
	_1a9694e14_doneIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*_109126_s.alloc)._field_Deferred) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1a95b7672_commonFuncScope(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _110637_f) {
	if ((!(_1a7bbad87_IsVoid((*((*(_110637_f))))._field_Decl.ptr())))) {
		jule::Ptr<_1a7d29ea2_Tuple> _11088_tup = _1a7d21273_Tup((*((*(_110637_f))))._field_Result.ptr());;
		if ((_11088_tup != nullptr)) {
			_1a9695112_indent((*(_self_))._field_oc);
			_1a96ad515_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _11088_tup);
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*_11088_tup.alloc)._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1ace2bcb3:;
				if (it != expr_end) {
					jule::I64 _111310_i = it - expr->begin();
					jule::Ptr<_1a7d1bc96_TypeKind> _111317_t = *it;
					{
						if (_1a96b0db9_shouldInitialized(&(_111317_t))) {
							_1a9695112_indent((*(_self_))._field_oc);
							_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1a9694760_write((*(_self_))._field_oc, _1c005c398_Itoa(_111310_i));
							_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1a95cb169_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, _111317_t);
							_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1ace2bcb3:;
					++it;
					_111310_i++;
					goto _iter_begin_1ace2bcb3;
				}
				_iter_end_1ace2bcb3:;
			};
		} else if (((*((*(*((*(_110637_f))))._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_1a9695112_indent((*(_self_))._field_oc);
			_1a96a8c3b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_110637_f))))._field_Result);
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1a96b0db9_shouldInitialized(&((*((*(_110637_f))))._field_Result))) {
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1a95cb169_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_110637_f))))._field_Result);
			};
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1a95b7111_scopeStmts(_self_, &((*((*(_110637_f))))._field_Scope));
	if (((*(*((*(_110637_f))))._field_Decl.alloc)._field_Exceptional && _1a7bbad87_IsVoid((*((*(_110637_f))))._field_Decl))) {
		_1a9695112_indent((*_self_.alloc)._field_oc);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
}



inline void _1a95b79d5_anonFuncScope(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7bb0c39_AnonFnExprModel> _114634_m, jule::Str _114655_ident) {
	if (((*((*(_114634_m))._field_Func))._field_Scope == nullptr)) {
		return;;
	};
	jule::Bool _11503_closure = _1a882de28_IsClosure(&(_114634_m));;
	if (_11503_closure) {
		(*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes=jule::append((*(*((*(_self_))._field_oc))._field_ec.alloc)._field_varPrefixes,({ auto __jule_collection = jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1a7c7b178_Var>>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::__new_closure<jule::Bool,jule::Ptr<_1a7c7b178_Var>>((void*)__jule_anon_1ace3a552, jule::Ptr<__jule_anon_1ace3a552_ctx>::make(__jule_anon_1ace3a552_ctx{._self_=_self_,._114634_m=_114634_m}).as<jule::Uintptr>(), __jule_anon_1ace3a552_ctx_handler); __jule_collection; }));
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a9694c16_addIndent((*(_self_))._field_oc);
	if (_11503_closure) {
		_1a9695112_indent((*(_self_))._field_oc);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("jule::Ptr<", 10));
		_1a9694760_write((*(_self_))._field_oc, _114655_ident);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("_ctx> __jule_closure_ctx = __f_ctx.as<", 38));
		_1a9694760_write((*(_self_))._field_oc, _114655_ident);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("_ctx>();\n", 9));
	};
	_1a95b7672_commonFuncScope(_self_, &((*_114634_m.alloc)._field_Func));
	_1a9694e14_doneIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if (_11503_closure) {
		((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes).mut_slice(0LL, ((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes.len() - 1LL));;
	};
}



inline void _1a95b7c8d_funcScope(jule::Ptr<_1a95aebec_scopeCoder> _self_, jule::Ptr<_1a7bbd8b2_FnIns> _117830_f) {
	if (((*(_117830_f))._field_Scope == nullptr)) {
		return;;
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a9694c16_addIndent((*(_self_))._field_oc);
	_1a95b7672_commonFuncScope(_self_, &(_117830_f));
	_1a9694e14_doneIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}







inline jule::Ptr<_1a95bb4cd_exprCoder> static__1a95bb8c9_new(jule::Ptr<_1a9694078_ObjectCoder>* _11321_oc) {
	return jule::new_ptr<_1a95bb4cd_exprCoder>(_1a95bb4cd_exprCoder{._field_oc=(*(_11321_oc)), ._field_varPrefixes=jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1a7c7b178_Var>>>(nullptr)});;
}



inline void _1a95bbb82_string(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1c006a461_Const>* _11924_c) {
	jule::Str _1203_content = _1c006c61c_ReadStr((*(_11924_c)).ptr());;
	if ((_1203_content.len() == 0LL)) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _1253_len = _1c005c0ce_FmtInt(static_cast<jule::I64>(_1203_content.len()), 10LL);;
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1a95cbe28_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1203_content);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a9694760_write((*(_self_))._field_oc, _1253_len);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a95bbe3a_boolean(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Bool _13424_b) {
	if (_13424_b) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1a95bc138_nilLit(jule::Ptr<_1a95bb4cd_exprCoder> _self_) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1a95bc479_ftoaSpecialCases(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::F64* _14634_x) {
	{
		
		if (_1c0011dca_IsNaN((*(_14634_x)))) {
			_case_begin_1ace5e8ea:;
			{
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1c001255c_IsInf((*(_14634_x)), 1LL)) {
			_case_begin_1ace5e994:;
			{
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1c001255c_IsInf((*(_14634_x)), -1LL)) {
			_case_begin_1ace5ea1b:;
			{
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1ace5e862:;
			{
				return false;;
			}
		}
		_match_end_1ace5e752:;
	};
	return true;;
}



inline void _1a95bc732_float32(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1c006a461_Const>* _16025_c) {
	jule::F64 _1613_x = _1c006d156_AsF64((*(_16025_c)).ptr());;
	if (_1a95bc479_ftoaSpecialCases(_self_, &(_1613_x))) {
		return;;
	};
	{
		
		if ((_1613_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1ace63ba7:;
			{
				_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_1613_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1ace63080:;
			{
				_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1ace62bea:;
			{
				_1a95cc2be_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1613_x, 32LL);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1ace62986:;
	};
}



inline void _1a95bc9da_float64(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1c006a461_Const>* _17925_c) {
	jule::F64 _1803_x = _1c006d156_AsF64((*(_17925_c)).ptr());;
	if (_1a95bc479_ftoaSpecialCases(_self_, &(_1803_x))) {
		return;;
	};
	{
		
		if ((_1803_x == jule::MAX_F64)) {
			_case_begin_1ace664e5:;
			{
				_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1803_x == jule::MIN_F64)) {
			_case_begin_1ace661c6:;
			{
				_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1ace66160:;
			{
				_1a95cc2be_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1803_x, 64LL);
			}
		}
		_match_end_1ace65deb:;
	};
}



inline void _1a95bcc93_constant(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1c006a461_Const> _19729_c) {
	{
		
		if (_1c006ec18_IsStr(_19729_c.ptr())) {
			_case_begin_1ace68371:;
			{
				_1a95bbb82_string(_self_, &(_19729_c));
			}
		}
		else if (_1c006e982_IsBool(_19729_c.ptr())) {
			_case_begin_1ace683d7:;
			{
				_1a95bbe3a_boolean(_self_, _1c006c386_ReadBool(_19729_c));
			}
		}
		else if (_1c006ee9e_IsF64(_19729_c.ptr())) {
			_case_begin_1ace6844d:;
			{
				{
					
					if (((*_19729_c.alloc)._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
						_case_begin_1ace6ad8a:;
						{
							_1a95bc732_float32(_self_, &(_19729_c));
						}
					}
					else {
						_case_begin_1ace6a9e4:;
						{
							_1a95bc9da_float64(_self_, &(_19729_c));
						}
					}
					_match_end_1ace6a8d4:;
				};
			}
		}
		else if (_1c006e465_IsI64(_19729_c.ptr())) {
			_case_begin_1ace684b4:;
			{
				_1a95cc5aa_itoa(&((*((*(_self_))._field_oc))._field_Buf), _1c006bd69_ReadI64(_19729_c));
			}
		}
		else if (_1c006e6eb_IsU64(_19729_c.ptr())) {
			_case_begin_1ace6852a:;
			{
				_1a95cc896_utoa(&((*((*(_self_))._field_oc))._field_Buf), _1c006c100_ReadU64(_19729_c));
			}
		}
		else if (_1c0070235_IsNil(_19729_c.ptr())) {
			_case_begin_1ace68591:;
			{
				_1a95bc138_nilLit(_self_);
			}
		}
		else {
			_case_begin_1ace6830a:;
			{
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1ace6820b:;
	};
}



inline void _1a95bd1b1_operatorOverloadingUnary(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _22146_s, jule::U64 _22161_op, jule::Any _22178_e) {
	;
	jule::Ptr<_1a7bbd8b2_FnIns> _2237_f = _1a883205d_FindOperator(_22146_s, _22161_op, true);;
	if ((_2237_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("unary operator overloading is not exist, this is an implementation mistake", 74) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:225:4"));;
	};
	static__1a95d33c4_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_2237_f));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1a95c0b42_possibleRefExpr(_self_, _22178_e);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a95bd5ce_divByZeroBinary(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7b69b05_Token>* _23333_op, jule::Ptr<_1a7bac928_OperandExprModel>* _23350_l, jule::Ptr<_1a7bac928_OperandExprModel>* _23377_r) {
	;
	;
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1a96a8c3b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_23350_l))))._field_Kind);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a95c0b42_possibleRefExpr(_self_, (*((*(_23350_l))))._field_Model);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1a96a8c3b_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_23377_r))))._field_Kind);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a95c0b42_possibleRefExpr(_self_, (*((*(_23377_r))))._field_Model);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("; if (", 6));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" == 0) __jule_panic_s(\"runtime: divide by zero\"", 47));
	if ((!(_1d92614d9_Production))) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" \"\\nlocation: ", 14));
		_1a9696aa3_locInfo((*(_self_))._field_oc, _23333_op);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("); ((", 5));
	_1a96a8c3b_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_23350_l))))._field_Kind);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	{
		auto &_match_expr{ (*((*(_23333_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1ace7976c:;
			{
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" / ", 3));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1ace7ce9b:;
			{
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" % ", 3));
			}
		}
		_match_end_1ace7ce02:;
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1a95bdcc7__unsafeBinary(jule::Ptr<_1a95bb4cd_exprCoder> _self_, _1daed18b7_StrBuilder* _27235_buf, jule::Str* _27253_l, jule::Str* _27262_r, jule::Ptr<_1a7d1bc96_TypeKind>* _2738_lk, jule::Ptr<_1a7d1bc96_TypeKind>* _27328_rk, jule::U64 _27343_op, jule::Str _27356_kind) {
	if ((_1a7d209c0_Struct((*(_2738_lk)).ptr()) != nullptr)) {
		jule::Ptr<_1a7ba8b11_StructIns> _2768_s = _1a7d209c0_Struct((*(_2738_lk)).ptr());;
		_1a95ccee5_operatorOverloadingBinary(_27235_buf, &(_2768_s), _27253_l, _27262_r, _27343_op, _27356_kind);
		return;;
	};
	if (((_27343_op == static_cast<jule::U64>(50LLU)) || (_27343_op == static_cast<jule::U64>(51LLU)))) {
		{
			
			if (_1a882dad7_IsAny(_2738_lk)) {
				_case_begin_1ace829ea:;
				{
					if (((!(_1a7d1cdc9_IsNil((*(_27328_rk)).ptr()))) && (!(_1a882dad7_IsAny(_27328_rk))))) {
						_1daeda96a_WriteByte(_27235_buf, '(');
						if ((_27343_op == static_cast<jule::U64>(51LLU))) {
							_1daeda96a_WriteByte(_27235_buf, '!');
						};
						jule::I64 _2926_i = _1a9695e26_pushAnyType((*(_self_))._field_oc, (*(_27328_rk)));;
						_1daeda6b2_WriteStr(_27235_buf, jule::Str::lit("__jule_any_type", 15));
						_1daeda6b2_WriteStr(_27235_buf, _1c005c398_Itoa(_2926_i));
						_1daeda6b2_WriteStr(_27235_buf, jule::Str::lit("_compare(", 9));
						_1daeda6b2_WriteStr(_27235_buf, (*(_27253_l)));
						_1daeda6b2_WriteStr(_27235_buf, jule::Str::lit(", ", 2));
						_1daeda6b2_WriteStr(_27235_buf, (*(_27262_r)));
						_1daeda6b2_WriteStr(_27235_buf, jule::Str::lit("))", 2));
						return;;
					};
				}
			}
			else if ((_1a7d2021c_Arr((*(_2738_lk)).ptr()) != nullptr)) {
				_case_begin_1ace82a94:;
				{
					jule::Ptr<_1a7d2b6ce_Arr> _3055_arr = _1a7d2021c_Arr((*(_2738_lk)).ptr());;
					jule::Ptr<_1a7bba8d1_Fn> _3069_f = _1a7e9d840_RuntimeFindFn(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8)));;
					jule::Ptr<_1a7bbd8b2_FnIns> _3079_ins = _1a88323d2_FindFnGenericInstance(&(_3069_f), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_3055_arr))._field_Elem; __jule_collection; }));;
					if ((_27343_op == static_cast<jule::U64>(51LLU))) {
						_1daeda96a_WriteByte(_27235_buf, '!');
					};
					static__1a95d33c4_funcIns(_27235_buf, &(_3079_ins));
					_1daeda96a_WriteByte(_27235_buf, '(');
					_1daeda6b2_WriteStr(_27235_buf, (*(_27253_l)));
					_1daeda6b2_WriteStr(_27235_buf, jule::Str::lit(".begin(), ", 10));
					_1daeda6b2_WriteStr(_27235_buf, (*(_27262_r)));
					_1daeda6b2_WriteStr(_27235_buf, jule::Str::lit(".begin(), ", 10));
					_1daeda6b2_WriteStr(_27235_buf, _1c005c398_Itoa((*_3055_arr.alloc)._field_N));
					_1daeda96a_WriteByte(_27235_buf, ')');
					return;;
				}
			}
			_match_end_1ace8290c:;
		};
	};
	{
		auto &_match_expr{ _27343_op };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1ace82b2c:;
			{
				jule::Ptr<_1a7d24dae_Prim> _3264_lp = _1a7d1e44c_Prim((*(_2738_lk)).ptr());;
				if (((_3264_lp != nullptr) && _1c006952b_IsUnsigInt((*_3264_lp.alloc)._field_Kind))) {
					_1daeda96a_WriteByte(_27235_buf, '(');
					_1a96a475e_prim((*((*(_self_))._field_oc))._field_tc.ptr(), _27235_buf, _3264_lp);
					_1daeda96a_WriteByte(_27235_buf, ')');
				};
			}
		}
		_match_end_1ace86647:;
	};
	_1daeda96a_WriteByte(_27235_buf, '(');
	_1daeda6b2_WriteStr(_27235_buf, (*(_27253_l)));
	_1daeda96a_WriteByte(_27235_buf, ' ');
	_1daeda6b2_WriteStr(_27235_buf, _27356_kind);
	_1daeda96a_WriteByte(_27235_buf, ' ');
	_1daeda6b2_WriteStr(_27235_buf, (*(_27262_r)));
	_1daeda96a_WriteByte(_27235_buf, ')');
}



inline void _1a95be080_unsafeBinary(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bace23_BinaryExprModel> _34333_m) {
	jule::I64 _3443_i = _1daedb43d_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::U8> _3457_oldbuf = _1daedb95a_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	_1a95c0b42_possibleRefExpr(_self_, (*((*(_34333_m))._field_Left))._field_Model);
	jule::Str _3473_l = __jule_bytesToStr(_1daedb95a_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_3443_i));;
	{
		_1daedbc13_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _3457_oldbuf);
	};
	_1a95c0b42_possibleRefExpr(_self_, (*((*_34333_m.alloc)._field_Right))._field_Model);
	jule::Str _3503_r = __jule_bytesToStr(_1daedb95a_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_3443_i));;
	{
		_1daedbc13_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _3457_oldbuf);
	};
	_1a95bdcc7__unsafeBinary(_self_, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_3473_l), &(_3503_r), &((*(*(_34333_m))._field_Left.alloc)._field_Kind), &((*(*(_34333_m))._field_Right.alloc)._field_Kind), (*((*_34333_m.alloc)._field_Op))._field_Id, (*(*(_34333_m))._field_Op.alloc)._field_Kind);
}



inline void _1a95be3e3_shl(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bac928_OperandExprModel>* _35525_l, jule::Ptr<_1a7bac928_OperandExprModel>* _35552_r) {
	;
	;
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1a96a8c3b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_35525_l))))._field_Kind);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a95c0b42_possibleRefExpr(_self_, (*((*(_35525_l))))._field_Model);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1a96a8c3b_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_35552_r))))._field_Kind);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a95c0b42_possibleRefExpr(_self_, (*((*(_35552_r))))._field_Model);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1a96a8c3b_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_35525_l))))._field_Kind);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1a9694760_write((*(_self_))._field_oc, _1c005c398_Itoa(_1c005e7c9_BitsizeOf((*(_1a7d1e44c_Prim((*((*(_35525_l))))._field_Kind.ptr())))._field_Kind)));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" << ", 4));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1a95be756_shr(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bac928_OperandExprModel>* _38325_l, jule::Ptr<_1a7bac928_OperandExprModel>* _38352_r) {
	;
	;
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1a96a8c3b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_38325_l))))._field_Kind);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a95c0b42_possibleRefExpr(_self_, (*((*(_38325_l))))._field_Model);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1a96a8c3b_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_38352_r))))._field_Kind);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a95c0b42_possibleRefExpr(_self_, (*((*(_38352_r))))._field_Model);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1a96a8c3b_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_38325_l))))._field_Kind);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1a9694760_write((*(_self_))._field_oc, _1c005c398_Itoa(_1c005e7c9_BitsizeOf((*(_1a7d1e44c_Prim((*((*(_38325_l))))._field_Kind.ptr())))._field_Kind)));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" >> ", 4));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1a95bea0e_binary(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bace23_BinaryExprModel> _41127_m) {
	{
		auto &_match_expr{ (*((*(_41127_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1aceae96c:;
			{
				if ((_1d9261297_Safety && (_1a7d209c0_Struct((*((*(_41127_m))._field_Left))._field_Kind.ptr()) == nullptr))) {
					_1a95bd5ce_divByZeroBinary(_self_, &((*_41127_m.alloc)._field_Op), &((*_41127_m.alloc)._field_Left), &((*_41127_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1aceae9e4:;
			{
				if ((_1a7d209c0_Struct((*((*(_41127_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1a95be3e3_shl(_self_, &((*_41127_m.alloc)._field_Left), &((*_41127_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1aceaea5a:;
			{
				if ((_1a7d209c0_Struct((*((*(_41127_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1a95be756_shr(_self_, &((*_41127_m.alloc)._field_Left), &((*_41127_m.alloc)._field_Right));
					return;;
				};
			}
		}
		_match_end_1aceae8a1:;
	};
	_1a95be080_unsafeBinary(_self_, _41127_m);
}



inline void _1a95becb7_var(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7c7b178_Var> _43524_m) {
	{
		auto expr = &((*(_self_))._field_varPrefixes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aceb4873:;
		if (it != expr_end) {
			jule::Fn<jule::Bool,jule::Ptr<_1a7c7b178_Var>> _43610_prefix = *it;
			{
				if (_43610_prefix(_43524_m)) {
					return;;
				};
			}
			_iter_next_1aceb4873:;
			++it;
			goto _iter_begin_1aceb4873;
		}
		_iter_end_1aceb4873:;
	};
	if ((*(_43524_m))._field_Binded) {
		jule::Ptr<_1a7b7e4cc_Directive> _4424_d = _1a88308a8_FindDirective(&((*_43524_m.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_4424_d != nullptr)) {
			_1a9694a18_writeBytes((*_self_.alloc)._field_oc, _1a96a134e_concatAllParts((*_4424_d.alloc)._field_Args));
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1a95d464a_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _43524_m);
}



inline void _1a95c0070_structureIns(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7ba8b11_StructIns> _45133_m) {
	_1a96a6ee2_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _45133_m);
}



inline void _1a95c0328_unary(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bad2ec_UnaryExprModel> _45526_m) {
	if ((_1a7d209c0_Struct((*((*(_45526_m))._field_Expr))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a7ba8b11_StructIns> _4588_s = _1a7d209c0_Struct((*((*(_45526_m))._field_Expr))._field_Kind);;
		_1a95bd1b1_operatorOverloadingUnary(_self_, &(_4588_s), (*((*_45526_m.alloc)._field_Op))._field_Id, (*(*(_45526_m))._field_Expr.alloc)._field_Model);
		return;;
	};
	{
		auto &_match_expr{ (*((*(_45526_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1acebab87:;
			{
				_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit("(~(", 3));
				_1a95c0b42_possibleRefExpr(_self_, (*(*(_45526_m))._field_Expr.alloc)._field_Model);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1acebb4e5:;
			{
				if ((_1d92614d9_Production || (_1a7d1e6d3_Sptr((*((*(_45526_m))._field_Expr))._field_Kind) == nullptr))) {
					goto _match_end_1acebb44b;
				};
				_1a95c0b42_possibleRefExpr(_self_, (*(*(_45526_m))._field_Expr.alloc)._field_Model);
				_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_1a9696aa3_locInfo((*(_self_))._field_oc, &((*_45526_m.alloc)._field_Op));
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1acebb44b:;
	};
	_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1a9694760_write((*(_self_))._field_oc, (*(*(_45526_m))._field_Op.alloc)._field_Kind);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a95c0b42_possibleRefExpr(_self_, (*(*(_45526_m))._field_Expr.alloc)._field_Model);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1a95c05d1_structureLit(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7badbc1_StructLitExprModel> _48633_m) {
	if ((*((*((*(_48633_m))._field_Strct))._field_Decl))._field_Binded) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1a96a6ee2_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_48633_m.alloc)._field_Strct);
	if ((*(*((*(_48633_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	jule::Bool _4977_inited = false;;
	_julec_label_1acec37a5:;
	{
		auto expr = &((*(*(_48633_m))._field_Strct.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acec6962:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba8061_FieldIns> _49915_f = *it;
			{
				{
					auto expr = &((*_48633_m.alloc)._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acec7677:;
					if (it != expr_end) {
						jule::Ptr<_1a7bad82a_StructArgExprModel> _50016_arg = *it;
						{
							if (((*(_50016_arg))._field_Field == _49915_f)) {
								if (_4977_inited) {
									_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
								};
								_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
								static__1a95d435e_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(_49915_f))._field_Decl));
								_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
								_1a95c0b42_possibleRefExpr(_self_, (*((*_50016_arg.alloc)._field_Expr))._field_Model);
								_4977_inited=true;
								goto _iter_next_1acec6962;
							};
						}
						_iter_next_1acec7677:;
						++it;
						goto _iter_begin_1acec7677;
					}
					_iter_end_1acec7677:;
				};
				if ((*(*((*(_48633_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
					_4977_inited=false;
					goto _iter_next_1acec6962;
				};
				if (_4977_inited) {
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_4977_inited=_1a95ca2de_handleFieldByDefault(_self_, &(_49915_f));
			}
			_iter_next_1acec6962:;
			++it;
			goto _iter_begin_1acec6962;
		}
		_iter_end_1acec6962:;
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a95c0889_allocStructure(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7badebd_AllocStructLitExprModel> _52935_m) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1a95d4073_structureIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_52935_m))._field_Lit))._field_Strct));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1a95c05d1_structureLit(_self_, (*_52935_m.alloc)._field_Lit);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a95c0b42_possibleRefExpr(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Any _53732_expr) {
	{
		auto &_match_expr{ _53732_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1acecee32:;
			{
				jule::Ptr<_1a7c7b178_Var> _5404_v = _53732_expr.unsafe_cast_ptr<_1a7c7b178_Var>();;
				if ((*(_5404_v))._field_Reference) {
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1a95c9e9d_model(_self_, _53732_expr);
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1acecedbb:;
	};
	_1a95c9e9d_model(_self_, _53732_expr);
}



inline void _1a95c1060_castTraitFromTrait(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bae551_CastingExprModel>* _55140_m, jule::Ptr<_1a7bce362_Trait> _55166_t1, jule::Ptr<_1a7bce362_Trait> _55182_t2) {
	_1a95c0b42_possibleRefExpr(_self_, (*((*((*(_55140_m))))._field_Expr))._field_Model);
	_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit(".map(", 5));
	_1a96967ea_pushAndWriteMaskMapper((*(_self_))._field_oc, _55166_t1, _55182_t2);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a95c1318_casting(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bae551_CastingExprModel> _56428_m) {
	{
		
		if (_1a882dad7_IsAny(&((*(_56428_m))._field_Kind))) {
			_case_begin_1aced4a2a:;
			{
				if (_1a7d1cdc9_IsNil((*_56428_m.alloc)._field_ExprKind.ptr())) {
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1a7d1ee86_TypeEnum((*(_56428_m))._field_ExprKind) != nullptr)) {
					_1a95c0b42_possibleRefExpr(_self_, (*((*_56428_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I64 _5754_i = _1a9695e26_pushAnyType((*(_self_))._field_oc, (*_56428_m.alloc)._field_ExprKind);;
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_56428_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1aced670d:;
						{
							jule::Ptr<_1a7d24dae_Prim> _5795_prim = _1a7d1e44c_Prim((*(_56428_m))._field_ExprKind);;
							if (((_5795_prim != nullptr) && _1c00697e5_IsInt((*_5795_prim.alloc)._field_Kind))) {
								_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1a96a475e_prim((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _5795_prim);
								_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1a95c0b42_possibleRefExpr(_self_, (*(*(_56428_m))._field_Expr.alloc)._field_Model);
								_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1aced8941;
							};
							goto _case_begin_1aced89a7;
						}
					}
					else {
						_case_begin_1aced89a7:;
						{
							_1a95c0b42_possibleRefExpr(_self_, (*(*(_56428_m))._field_Expr.alloc)._field_Model);
						}
					}
					_match_end_1aced8941:;
				};
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1a9694760_write((*(_self_))._field_oc, _1c005c398_Itoa(_5754_i));
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1a882dad7_IsAny(&((*(_56428_m))._field_ExprKind))) {
			_case_begin_1aced4ac4:;
			{
				_1a95c0b42_possibleRefExpr(_self_, (*((*_56428_m.alloc)._field_Expr))._field_Model);
				_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1a7d1e6d3_Sptr((*_56428_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1a96a8c3b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1a7d1e6d3_Sptr((*(_56428_m))._field_Kind)))._field_Elem);
				} else {
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1a96a8c3b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_56428_m.alloc)._field_Kind);
				};
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1d92614d9_Production))) {
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1a9696aa3_locInfo((*(_self_))._field_oc, &((*_56428_m.alloc)._field_Token));
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1a9694760_write((*(_self_))._field_oc, _1c005c398_Itoa(_1a9695e26_pushAnyType((*(_self_))._field_oc, (*_56428_m.alloc)._field_Kind)));
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1a7d1e969_Ptr((*(_56428_m))._field_ExprKind.ptr()) != nullptr) || (_1a7d1e969_Ptr((*_56428_m.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aced4b3a:;
			{
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1a96a8c3b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_56428_m.alloc)._field_Kind);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1a95c0b42_possibleRefExpr(_self_, (*((*_56428_m.alloc)._field_Expr))._field_Model);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1a7d20c56_Trait((*(_56428_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1aced4ba1:;
			{
				if ((_1a7d20c56_Trait((*_56428_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1a95c1060_castTraitFromTrait(_self_, &(_56428_m), _1a7d20c56_Trait((*(_56428_m))._field_Kind), _1a7d20c56_Trait((*(_56428_m))._field_ExprKind));
					return;;
				};
				_1a95c0b42_possibleRefExpr(_self_, (*((*_56428_m.alloc)._field_Expr))._field_Model);
				_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1a7d1e6d3_Sptr((*(_56428_m))._field_Kind) != nullptr)) {
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1a96a8c3b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1a7d1e6d3_Sptr((*(_56428_m))._field_Kind)))._field_Elem);
				} else {
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1a96a8c3b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_56428_m.alloc)._field_Kind);
				};
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1d92614d9_Production))) {
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1a9696aa3_locInfo((*(_self_))._field_oc, &((*_56428_m.alloc)._field_Token));
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(jule::Trait::Type*)&", 21));
				static__1a95d36b0_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a7d20c56_Trait((*(_56428_m))._field_ExprKind));
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1a9694760_write((*(_self_))._field_oc, _1c005c398_Itoa(_1a8831b2e_FindTraitTypeOffset(_1a7d20c56_Trait((*(_56428_m))._field_ExprKind), (*_56428_m.alloc)._field_Kind)));
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1a7d20c56_Trait((*(_56428_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aced4c17:;
			{
				_1a96a8c3b_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_56428_m.alloc)._field_Kind);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1a95c0b42_possibleRefExpr(_self_, (*((*_56428_m.alloc)._field_Expr))._field_Model);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
				static__1a95d36b0_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a7d20c56_Trait((*(_56428_m))._field_Kind));
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1a9694760_write((*(_self_))._field_oc, _1c005c398_Itoa(_1a8831b2e_FindTraitTypeOffset(_1a7d20c56_Trait((*(_56428_m))._field_Kind), (*_56428_m.alloc)._field_ExprKind)));
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1aced4893:;
	};
	jule::Ptr<_1a7d24dae_Prim> _6617_prim = _1a7d1e44c_Prim((*(_56428_m))._field_Kind.ptr());;
	if (((_6617_prim != nullptr) && _1a7d28379_IsStr(_6617_prim))) {
		jule::Ptr<_1a7d24dae_Prim> _6638_eprim = _1a7d1e44c_Prim((*_56428_m.alloc)._field_ExprKind.ptr());;
		if (((_6638_eprim != nullptr) && (_6617_prim != nullptr))) {
			if (_1a7d267d9_IsU8(_6638_eprim)) {
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromByte(", 19));
			} else {
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromRune(", 19));
			};
			_1a95c0b42_possibleRefExpr(_self_, (*((*_56428_m.alloc)._field_Expr))._field_Model);
			_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
		jule::Ptr<_1a7d293ad_Slc> _6748_slc = _1a7d204a3_Slc((*(_56428_m))._field_ExprKind);;
		if ((_6748_slc != nullptr)) {
			_6638_eprim=_1a7d1e44c_Prim((*_6748_slc.alloc)._field_Elem.ptr());
			if (_1a7d262bc_IsI32(_6638_eprim)) {
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_runesToStr(", 18));
			} else {
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_bytesToStr(", 18));
			};
			_1a95c0b42_possibleRefExpr(_self_, (*(*(_56428_m))._field_Expr.alloc)._field_Model);
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_6617_prim=_1a7d1e44c_Prim((*(_56428_m))._field_ExprKind);
	if (((_6617_prim != nullptr) && _1a7d28379_IsStr(_6617_prim))) {
		jule::Ptr<_1a7d293ad_Slc> _6908_slc = _1a7d204a3_Slc((*(_56428_m))._field_Kind);;
		if ((_6908_slc != nullptr)) {
			_6617_prim=_1a7d1e44c_Prim((*(_6908_slc))._field_Elem);
			if (_1a7d262bc_IsI32(_6617_prim)) {
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToRunes(", 18));
			} else {
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToBytes(", 18));
			};
			_1a95c0b42_possibleRefExpr(_self_, (*(*(_56428_m))._field_Expr.alloc)._field_Model);
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1a96a8c3b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_56428_m.alloc)._field_Kind);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1a95c0b42_possibleRefExpr(_self_, (*(*(_56428_m))._field_Expr.alloc)._field_Model);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a95c15c1_args(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7baee03_FnCallExprModel>* _71126_m) {
	jule::I64 _7127_j = 0LL;;
	if (((((*((*((*(_71126_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_71126_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*(*((*(_71126_m))))._field_Func.alloc)._field_Params.len() > 0LL) && _1a7bb955b_IsSelf((*((*((*((*(_71126_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_7127_j)++;
	};
	{
		auto expr = &((*((*(_71126_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad01b347:;
		if (it != expr_end) {
			jule::I64 _7177_i = it - expr->begin();
			jule::Any _71710_arg = *it;
			{
				jule::Ptr<_1a7bbc839_ParamIns> _7184_p = (*(*((*(_71126_m))))._field_Func.alloc)._field_Params[_7127_j];;
				if ((((*(_7184_p))._field_Decl != nullptr) && (*(*(_7184_p))._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _71710_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1ad01e16e:;
							{
								jule::Ptr<_1a7c7b178_Var> _7226_v = _71710_arg.unsafe_cast_ptr<_1a7c7b178_Var>();;
								if ((*(_7226_v))._field_Reference) {
									_1a95c9e9d_model(_self_, _71710_arg);
									goto _julec_label_1ad021bbb;
								};
							}
						}
						_match_end_1ad01e108:;
					};
					_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1a95c9e9d_model(_self_, _71710_arg);
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1ad021bbb;
				};
				_1a95c0b42_possibleRefExpr(_self_, _71710_arg);
				_julec_label_1ad021bbb:;
				if ((((*((*(_71126_m))))._field_Args.len() - _7177_i) > 1LL)) {
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				(_7127_j)++;
			}
			_iter_next_1ad01b347:;
			++it;
			_7177_i++;
			goto _iter_begin_1ad01b347;
		}
		_iter_end_1ad01b347:;
	};
}



inline void _1a95c1879_modelForCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Any _74233_expr) {
	{
		auto &_match_expr{ _74233_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ad022c22:;
			{
				_1a95c4dee_funcIns(_self_, _74233_expr.cast_ptr<_1a7bbd8b2_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ad01d0d5:;
			{
				jule::Ptr<_1a7bb2994_StructSubIdentExprModel> _7488_ssie = _74233_expr.unsafe_cast_ptr<_1a7bb2994_StructSubIdentExprModel>();;
				if (((*(_7488_ssie))._field_Method != nullptr)) {
					_1a95c4dee_funcIns(_self_, (*_7488_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1ad022bab:;
	};
	_1a95c0b42_possibleRefExpr(_self_, _74233_expr);
}



inline void _1a95c1b32_pushCallInf(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7baee03_FnCallExprModel>* _75729_m) {
	if ((_1d92614d9_Production || (!((*((*((*(_75729_m))))._field_Func))._field_Anon)))) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*(*((*(_75729_m))))._field_Func.alloc)._field_Anon) {
		{
			auto &_match_expr{ (*((*(_75729_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1ad0267c5:;
				{
					if ((*((*((*((*((*((*(_75729_m))))._field_Expr.unsafe_cast_ptr<_1a7bb2994_StructSubIdentExprModel>()))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1ad02675e:;
		};
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1a9696aa3_locInfo((*(_self_))._field_oc, &((*((*(_75729_m))))._field_Token));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_75729_m))))._field_Args.len() != 0LL)) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1a95c1e73_isWrapped(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7baee03_FnCallExprModel>* _78031_m) {
	if ((((!(_1a7bbed7a_IsBuiltin((*((*(_78031_m))))._field_Func.ptr()))) && ((*((*(*((*(_78031_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1a7bb955b_IsSelf((*((*((*((*(_78031_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_78031_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1ad02b588:;
				{
					jule::Ptr<_1a7bb2994_StructSubIdentExprModel> _7849_ssie = (*((*(_78031_m))))._field_Expr.unsafe_cast_ptr<_1a7bb2994_StructSubIdentExprModel>();;
					{
						
						if (_1a7bb97e2_IsRef((*((*((*((*(_78031_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1a7d1e6d3_Sptr((*((*(_7849_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1ad02d337:;
							{
								goto _match_end_1ad02c4e0;
							}
						}
						else {
							_case_begin_1ad02c567:;
							{
								if ((_1a7d209c0_Struct((*((*(_7849_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*(*(_7849_ssie))._field_Expr.alloc)._field_Lvalue))) {
										_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1a95c9e9d_model(_self_, (*(*(_7849_ssie))._field_Expr.alloc)._field_Model);
										_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1ad02c4e0:;
					};
				}
			}
			_match_end_1ad02b522:;
		};
	};
	return false;;
}



inline jule::Bool _1a95c22b4_writeReceiver(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Any _80434_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _80434_m };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ad032d64:;
			{
				_1a95c0b42_possibleRefExpr(_self_, (*((*(_80434_m.unsafe_cast_ptr<_1a7bad2ec_UnaryExprModel>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1ad033073:;
			{
				_1a95c0b42_possibleRefExpr(_self_, (*((*((*(_80434_m.unsafe_cast_ptr<_1a7e152ce_UnsafeDerefExprModel>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ad03300c:;
			{
				__jule_panic_s(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:813:4"));;
			}
		}
		_match_end_1ad032e96:;
	};
}



inline void _1a95c256c_pureFuncCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7baee03_FnCallExprModel>* _81734_m) {
	jule::Bool _8183_wrapped = _1a95c1e73_isWrapped(_self_, _81734_m);;
	_1a95c1879_modelForCall(_self_, (*((*(_81734_m))))._field_Expr);
	if ((!(_1a7bbed7a_IsBuiltin((*((*(_81734_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_81734_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_81734_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_1a8830c71_HasDirective(&((*(*((*((*(_81734_m))))._field_Func))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("cdef", 4)))))) {
				_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_81734_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad0373b8:;
					if (it != expr_end) {
						jule::I64 _82411_i = it - expr->begin();
						jule::Ptr<_1a7d1a3b0_InsGeneric> _82418_g = *it;
						{
							_1a96a8c3b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_82418_g))._field_Kind);
							if ((((*(*((*(_81734_m))))._field_Func.alloc)._field_Generics.len() - _82411_i) > 1LL)) {
								_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1ad0373b8:;
						++it;
						_82411_i++;
						goto _iter_begin_1ad0373b8;
					}
					_iter_end_1ad0373b8:;
				};
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1a95c1b32_pushCallInf(_self_, _81734_m);
	if (((*(*((*(_81734_m))))._field_Func.alloc)._field_AsAnon && (!((*(*((*(_81734_m))))._field_Func.alloc)._field_Anon)))) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		if (((*((*(_81734_m))))._field_Args.len() > 0LL)) {
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		};
	};
	if ((((!(_1a7bbed7a_IsBuiltin((*((*(_81734_m))))._field_Func))) && ((*(*((*((*(_81734_m))))._field_Func))._field_Decl.alloc)._field_Params.len() > 0LL)) && _1a7bb955b_IsSelf((*((*((*((*(_81734_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_81734_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1ad043e30:;
				{
					jule::Ptr<_1a7bb2994_StructSubIdentExprModel> _8489_ssie = (*((*(_81734_m))))._field_Expr.unsafe_cast_ptr<_1a7bb2994_StructSubIdentExprModel>();;
					{
						
						if (_1a7bb97e2_IsRef((*((*((*((*(_81734_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1ad0481ba:;
							{
								_1a95c22b4_writeReceiver(_self_, (*((*(_8489_ssie))._field_Expr))._field_Model);
							}
						}
						else if ((_1a7d1e6d3_Sptr((*((*(_8489_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1ad049760:;
							{
								jule::Bool _8556_safe = _1a95c22b4_writeReceiver(_self_, (*(*(_8489_ssie))._field_Expr.alloc)._field_Model);;
								if (_8556_safe) {
									_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".ptr(", 5));
									if ((!(_1d92614d9_Production))) {
										_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
										_1a9696aa3_locInfo((*(_self_))._field_oc, &((*((*(_81734_m))))._field_Token));
										_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									};
									_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								};
							}
						}
						else {
							_case_begin_1ad044e86:;
							{
								if ((_1a7d209c0_Struct((*((*(_8489_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_8489_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1ad0457d3:;
											{
												jule::Ptr<_1a7c7b178_Var> _8698_v = (*((*(_8489_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_1a7c7b178_Var>();;
												if ((*(_8698_v))._field_Reference) {
													goto _match_end_1ad045cab;
												};
												goto _case_begin_1ad045d22;
											}
										}
										else {
											_case_begin_1ad045d22:;
											{
												_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1ad045cab:;
									};
								};
								if (_8183_wrapped) {
									_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1a7d1e969_Ptr((*((*(_8489_ssie))._field_Expr))._field_Kind) == nullptr)) {
									_1a95c9e9d_model(_self_, (*(*(_8489_ssie))._field_Expr.alloc)._field_Model);
								} else {
									_1a95c0b42_possibleRefExpr(_self_, (*((*((*(*(_8489_ssie))._field_Expr.alloc)._field_Model.cast_ptr<_1a7bad2ec_UnaryExprModel>(&__jule_any_type113)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1ad044e0e:;
					};
					if (((*((*(_81734_m))))._field_Args.len() > 0LL)) {
						_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1ad043abc:;
				{
					_1a95c0b42_possibleRefExpr(_self_, (*((*((*(_81734_m))))._field_Expr.unsafe_cast_ptr<_1a7bb2103_TraitSubIdentExprModel>()))._field_Expr);
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".data", 5));
					if (((*((*(_81734_m))))._field_Args.len() > 0LL)) {
						_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1ad043da8:;
		};
	};
	_1a95c15c1_args(_self_, _81734_m);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if (_8183_wrapped) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1a95c2825_coFuncCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7baee03_FnCallExprModel>* _90732_m) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a9694c16_addIndent((*(_self_))._field_oc);
	_1daed18b7_StrBuilder _9107_head = static__1daed1bb4_New(32LL);;
	_1daeda6b2_WriteStr(&_9107_head, jule::Str::lit("std::thread([", 13));
	if (((*((*((*(_90732_m))))._field_Func))._field_Owner != nullptr)) {
		_1daeda6b2_WriteStr(&_9107_head, jule::Str::lit("_self_", 6));
		if (((*((*(_90732_m))))._field_Args.len() > 0LL)) {
			_1daeda6b2_WriteStr(&_9107_head, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_90732_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad057e22:;
		if (it != expr_end) {
			jule::I64 _9187_i = it - expr->begin();
			jule::Any _91810_arg = *it;
			{
				if ((_9187_i > 0LL)) {
					_1daeda6b2_WriteStr(&_9107_head, jule::Str::lit(", ", 2));
				};
				{
					auto &_match_expr{ _91810_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1ad05942e:;
						{
							jule::Ptr<_1a7c7b178_Var> _9249_v = _91810_arg.unsafe_cast_ptr<_1a7c7b178_Var>();;
							static__1a95d464a_var(&(_9107_head), _9249_v);
							goto _iter_next_1ad057e22;
						}
					}
					_match_end_1ad058dbd:;
				};
				jule::Str _9284_name = (jule::Str::lit("_co_arg_", 8) + _1c005c398_Itoa(_9187_i));;
				_1daeda6b2_WriteStr(&_9107_head, _9284_name);
				_1a9695112_indent((*(_self_))._field_oc);
				_1a96a8c3b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(*((*(_90732_m))))._field_Func.alloc)._field_Params[_9187_i]))._field_Kind);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				if ((*((*((*((*((*(_90732_m))))._field_Func))._field_Params[_9187_i]))._field_Decl))._field_Reference) {
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
				};
				_1a9694760_write((*(_self_))._field_oc, _9284_name);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1a95c0b42_possibleRefExpr(_self_, _91810_arg);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				jule::Any _9404_argS = jule::Any(_9284_name, &__jule_any_type4);;
				(*((*(_90732_m))))._field_Args[_9187_i]=(*(((jule::Any*)((&(_9404_argS))))));
			}
			_iter_next_1ad057e22:;
			++it;
			_9187_i++;
			goto _iter_begin_1ad057e22;
		}
		_iter_end_1ad057e22:;
	};
	_1a9695112_indent((*(_self_))._field_oc);
	_1daeda409_Write(&(*(*(_self_))._field_oc.alloc)._field_Buf, _1daedb95a_Buf(&_9107_head));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("](void) mutable -> void {\n", 26));
	_1a9694c16_addIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a95c256c_pureFuncCall(_self_, _90732_m);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a9694e14_doneIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("}).detach();\n", 13));
	_1a9694e14_doneIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a95c2b88_writeUseExpr(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _95834_f, jule::Ptr<_1a7cd41ae_Data> _95849_d) {
	if ((_1a7d21273_Tup((*(_95849_d))._field_Kind.ptr()) == nullptr)) {
		_1a95c0b42_possibleRefExpr(_self_, (*_95849_d.alloc)._field_Model);
		_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1a7bb3511_TupleExprModel> _9647_tup = (*_95849_d.alloc)._field_Model.cast_ptr<_1a7bb3511_TupleExprModel>(&__jule_any_type84);;
	_1a96ad515_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1a7d21273_Tup((*((*(_95834_f))))._field_Result.ptr()));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*_9647_tup.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad06920d:;
		if (it != expr_end) {
			jule::I64 _9677_i = it - expr->begin();
			jule::Ptr<_1a7cd41ae_Data> _96710_data = *it;
			{
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1a9694760_write((*(_self_))._field_oc, _1c005c398_Itoa(_9677_i));
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1a95c0b42_possibleRefExpr(_self_, (*(_96710_data))._field_Model);
				if ((((*(_9647_tup))._field_Datas.len() - _9677_i) > 1LL)) {
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1ad06920d:;
			++it;
			_9677_i++;
			goto _iter_begin_1ad06920d;
		}
		_iter_end_1ad06920d:;
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1a95c2e41_funcCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7baee03_FnCallExprModel> _97929_m) {
	if ((*(_97929_m))._field_IsCo) {
		_1a95c2825_coFuncCall(_self_, &(_97929_m));
		return;;
	};
	if (((_1a7bbed7a_IsBuiltin((*_97929_m.alloc)._field_Func.ptr()) || (!((*((*(*(_97929_m))._field_Func.alloc)._field_Decl))._field_Exceptional))) || (((*_97929_m.alloc)._field_Except != nullptr) && ((*(*(_97929_m))._field_Except.alloc)._field_Stmts.len() == 0LL)))) {
		_1a95c256c_pureFuncCall(_self_, &(_97929_m));
		return;;
	};
	_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit("({\n", 3));
	_1a9694c16_addIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1a95c256c_pureFuncCall(_self_, &(_97929_m));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a9695112_indent((*(_self_))._field_oc);
	if (((*_97929_m.alloc)._field_Except != nullptr)) {
		if ((((*(*(_97929_m))._field_Func.alloc)._field_Result == nullptr) || (!((*_97929_m.alloc)._field_Assigned)))) {
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1a95b73b9_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_97929_m.alloc)._field_Except);
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _10075_forwarded = _1a882d510_IsForwarded(&((*_97929_m.alloc)._field_Except));;
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_10075_forwarded) {
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _10129_stmt = (*(*(_97929_m))._field_Except.alloc)._field_Stmts[((*(*(_97929_m))._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _10129_stmt };
				
				if (_match_expr.type == &__jule_any_type31) {
					_case_begin_1ad076605:;
					{
						((*((*(_97929_m))._field_Except))._field_Stmts).mut_slice(0LL, ((*((*(_97929_m))._field_Except))._field_Stmts.len() - 1LL));;
						_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1a9694c16_addIndent((*(_self_))._field_oc);
						_1a95b7111_scopeStmts((*(*(_self_))._field_oc.alloc)._field_sc, &((*_97929_m.alloc)._field_Except));
						_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1a9695112_indent((*(_self_))._field_oc);
						_1a95c2b88_writeUseExpr(_self_, &((*_97929_m.alloc)._field_Func), _10129_stmt.cast_ptr<_1a7cd41ae_Data>(&__jule_any_type31));
						_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1a9694e14_doneIndent((*(_self_))._field_oc);
						_1a9695112_indent((*(_self_))._field_oc);
						_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1ad077a68:;
					{
						_1a95b73b9_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_97929_m.alloc)._field_Except);
					}
				}
				_match_end_1ad077a02:;
			};
			if (_10075_forwarded) {
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1a95cb169_initExpr(_self_, (*(*(_97929_m))._field_Func.alloc)._field_Result);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1a9694e14_doneIndent((*(_self_))._field_oc);
	} else {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) __jule_panic_s(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 142));
		_1a9696aa3_locInfo((*(_self_))._field_oc, &((*_97929_m.alloc)._field_Token));
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1a7bbad87_IsVoid((*((*(_97929_m))._field_Func))._field_Decl)))) {
			_1a9695112_indent((*(_self_))._field_oc);
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1a9694e14_doneIndent((*(_self_))._field_oc);
	};
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a95c31e9_slice(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb02cc_SliceExprModel> _105226_m) {
	if (((*(_105226_m))._field_Elems.len() == 0LL)) {
		_1a96a6145_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_105226_m.alloc)._field_ElemKind);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1a96a6145_asSlice((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_105226_m.alloc)._field_ElemKind);
	jule::Str _10603_size = _1c005c398_Itoa((*_105226_m.alloc)._field_Elems.len());;
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1a9694760_write((*(_self_))._field_oc, _10603_size);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a9694760_write((*(_self_))._field_oc, _10603_size);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("); auto ", 8));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	{
		auto expr = &((*_105226_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad08ba05:;
		if (it != expr_end) {
			jule::I64 _10707_i = it - expr->begin();
			{
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1a95c0b42_possibleRefExpr(_self_, (*(_105226_m))._field_Elems[_10707_i]);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1ad08ba05:;
			++it;
			_10707_i++;
			goto _iter_begin_1ad08ba05;
		}
		_iter_end_1ad08ba05:;
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1a95c34a2_indexing(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb0783_IndexingExprModel> _108129_m) {
	{
		auto &_match_expr{ (*((*(_108129_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ad090883:;
			{
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_1d92614d9_Production))) {
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1a9696aa3_locInfo((*(_self_))._field_oc, &((*(_108129_m))._field_Token));
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _10924_s = _1c006c61c_ReadStr((*((*(_108129_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1c006a461_Const>().ptr());;
				_1a95cbe28_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _10924_s);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1a9694760_write((*(_self_))._field_oc, _1c005c398_Itoa(_10924_s.len()));
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1a95c0b42_possibleRefExpr(_self_, (*((*_108129_m.alloc)._field_Index))._field_Model);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1ad09081c:;
	};
	{
		
		if ((_1a7d20edc_Map((*((*_108129_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad0995e5:;
			{
				jule::Ptr<_1a7d2aa52_Map> _11058__map = _1a7d20edc_Map((*((*(_108129_m))._field_Expr))._field_Kind);;
				jule::Ptr<_1a7ba5ca6_Struct> _11068_s = _1a7e9de39_RuntimeFindStruct(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
				jule::Ptr<_1a7ba8b11_StructIns> _11078_ins = _1a8832866_FindStructGenericInstance(&(_11068_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_11058__map))._field_Key; (*it++) = (*_11058__map.alloc)._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1a7bbd8b2_FnIns> _11098_f = (*(_1a7ba9bab_FindMethod(_11078_ins.ptr(), jule::Str::lit("get", 3), false)))._field_Instances[0LL];;
				static__1a95d33c4_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11098_f));
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1a95c0b42_possibleRefExpr(_self_, (*(*(_108129_m))._field_Expr.alloc)._field_Model);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1a95c0b42_possibleRefExpr(_self_, (*(*(_108129_m))._field_Index.alloc)._field_Model);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		else if (_1d92614d9_Production || (_1a7d1e969_Ptr((*((*_108129_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr) || _1a882d81d_IsExprComesFromBind(&((*_108129_m.alloc)._field_Expr))) {
			_case_begin_1ad096c30:;
			{
				_1a95c0b42_possibleRefExpr(_self_, (*(*(_108129_m))._field_Expr.alloc)._field_Model);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1a95c0b42_possibleRefExpr(_self_, (*(*(_108129_m))._field_Index.alloc)._field_Model);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1ad096b20:;
			{
				_1a95c0b42_possibleRefExpr(_self_, (*((*_108129_m.alloc)._field_Expr))._field_Model);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1a9696aa3_locInfo((*(_self_))._field_oc, &((*_108129_m.alloc)._field_Token));
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1a95c0b42_possibleRefExpr(_self_, (*(*(_108129_m))._field_Index.alloc)._field_Model);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1ad09414a:;
	};
}



inline void _1a95c375a_unsafeIndexing(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7e14355_UnsafeIndexingExprModel> _113335_m) {
	_1a95c0b42_possibleRefExpr(_self_, (*((*((*(_113335_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_1d92614d9_Production || (_1a7d1e969_Ptr((*(*((*(_113335_m))._field_Node))._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1a7d20edc_Map((*((*((*(_113335_m))._field_Node))._field_Expr))._field_Kind) != nullptr)) {
			_case_begin_1ad0a5bb7:;
			{
				_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1a95c0b42_possibleRefExpr(_self_, (*((*(*(_113335_m))._field_Node.alloc)._field_Index))._field_Model);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1ad0a3720:;
			{
				_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_1a95c0b42_possibleRefExpr(_self_, (*((*(*(_113335_m))._field_Node.alloc)._field_Index))._field_Model);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1ad0a42c0:;
	};
}



inline void _1a95c3a13_anonFunc(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb0c39_AnonFnExprModel> _115029_m) {
	jule::Bool _11513_closure = _1a882de28_IsClosure(&(_115029_m));;
	jule::Str _11523_ident = _1a9695ad5_pushAnonFn((*(_self_))._field_oc, &(_115029_m));;
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("jule::__new_closure<", 20));
	_1a96a8565_anonFunc((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_115029_m))._field_Func);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(">((void*)", 9));
	_1a9694760_write((*(_self_))._field_oc, _11523_ident);
	if (_11513_closure) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", jule::Ptr<", 12));
		_1a9694760_write((*(_self_))._field_oc, _11523_ident);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("_ctx", 4));
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(">::make(", 8));
		_1a9694760_write((*(_self_))._field_oc, _11523_ident);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("_ctx{", 5));
		{
			auto expr = &((*_115029_m.alloc)._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad0aa3b4:;
			if (it != expr_end) {
				jule::I64 _11649_i = it - expr->begin();
				jule::Ptr<_1a7c7b178_Var> _116416_v = *it;
				{
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
					static__1a95d464a_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _116416_v);
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1a95becb7_var(_self_, _116416_v);
					if ((((*_115029_m.alloc)._field_Captured.len() - _11649_i) > 1LL)) {
						_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1ad0aa3b4:;
				++it;
				_11649_i++;
				goto _iter_begin_1ad0aa3b4;
			}
			_iter_end_1ad0aa3b4:;
		};
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("}).as<jule::Uintptr>(), ", 24));
		_1a9694760_write((*(_self_))._field_oc, _11523_ident);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("_ctx_handler)", 13));
	} else {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", nullptr, nullptr)", 19));
	};
}



inline void _1a95c3cbb_mapExpr(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb14dc_MapExprModel> _118128_m) {
	jule::Ptr<_1a7ba5ca6_Struct> _11827_s = _1a7e9de39_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1a7ba8b11_StructIns> _11837_ins = _1a8832866_FindStructGenericInstance(&(_11827_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*((*(_118128_m))._field_Kind))._field_Key; (*it++) = (*(*(_118128_m))._field_Kind.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1a7bbd8b2_FnIns> _11857_maker = (*(_1a7ba9bab_FindMethod(_11837_ins.ptr(), jule::Str::lit("make", 4), true)))._field_Instances[0LL];;
	if (((*_118128_m.alloc)._field_Entries.len() == 0LL)) {
		static__1a95d33c4_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11857_maker));
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	jule::Ptr<_1a7bbd8b2_FnIns> _11927_f = (*(_1a7ba9bab_FindMethod(_11837_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
	;
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1a96a681b_mapType((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_118128_m.alloc)._field_Kind);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1a95d33c4_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11857_maker));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	{
		auto expr = &((*_118128_m.alloc)._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0bc1ea:;
		if (it != expr_end) {
			jule::Ptr<_1a7bb1113_KeyValPairExprModel> _120215_pair = *it;
			{
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1a95d33c4_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11927_f));
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1a95c0b42_possibleRefExpr(_self_, (*(_120215_pair))._field_Key);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")) = ", 5));
				_1a95c0b42_possibleRefExpr(_self_, (*_120215_pair.alloc)._field_Val);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1ad0bc1ea:;
			++it;
			goto _iter_begin_1ad0bc1ea;
		}
		_iter_end_1ad0bc1ea:;
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1a95c4074_slicing(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb1a70_SlicingExprModel> _121728_m) {
	_1a95c0b42_possibleRefExpr(_self_, (*(_121728_m))._field_Expr);
	_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_1d92614d9_Production))) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1a9696aa3_locInfo((*(_self_))._field_oc, &((*_121728_m.alloc)._field_Token));
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1a95c0b42_possibleRefExpr(_self_, (*_121728_m.alloc)._field_Left);
	if (((*_121728_m.alloc)._field_Right != nullptr)) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a95c0b42_possibleRefExpr(_self_, (*_121728_m.alloc)._field_Right);
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a95c432c_traitSub(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb2103_TraitSubIdentExprModel> _123329_m) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
	static__1a95d36b0_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_123329_m))._field_Trt);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("MptrData", 8));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("*)", 2));
	_1a95c0b42_possibleRefExpr(_self_, (*_123329_m.alloc)._field_Expr);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".safe_type(", 11));
	if ((!(_1d92614d9_Production))) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1a9696aa3_locInfo((*(_self_))._field_oc, &((*_123329_m.alloc)._field_Token));
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("))->", 4));
	static__1a95d30d8_func(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*_123329_m.alloc)._field_Method));
}



inline void _1a95c45d5_structureSub(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb2994_StructSubIdentExprModel> _124933_m) {
	_1a95c0b42_possibleRefExpr(_self_, (*((*(_124933_m))._field_Expr))._field_Model);
	if (((*_124933_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__1a95d435e_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*_124933_m.alloc)._field_Field))._field_Decl));
}



inline void _1a95c488d_array(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb3214_ArrayExprModel> _125826_m) {
	if ((((*((*(_125826_m))._field_Kind))._field_N == 0LL) || (((*_125826_m.alloc)._field_Elems.len() == 0LL) && (!(_1a96b0ade_ableToInit(&((*(*(_125826_m))._field_Kind.alloc)._field_Elem))))))) {
		_1a96a7355_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_125826_m.alloc)._field_Kind);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*_125826_m.alloc)._field_Elems.len() == 2LL) && ((*(_125826_m))._field_Elems[1LL] == nullptr))) {
		_1a96a7355_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_125826_m.alloc)._field_Kind);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a95c0b42_possibleRefExpr(_self_, (*(_125826_m))._field_Elems[0LL]);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1a96a7355_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_125826_m.alloc)._field_Kind);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(); auto ", 9));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	if (((*_125826_m.alloc)._field_Elems.len() != (*(*(_125826_m))._field_Kind.alloc)._field_N)) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("const auto ", 11));
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	};
	{
		auto expr = &((*_125826_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0d7e5d:;
		if (it != expr_end) {
			jule::I64 _12917_i = it - expr->begin();
			{
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1a95c0b42_possibleRefExpr(_self_, (*_125826_m.alloc)._field_Elems[_12917_i]);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1ad0d7e5d:;
			++it;
			_12917_i++;
			goto _iter_begin_1ad0d7e5d;
		}
		_iter_end_1ad0d7e5d:;
	};
	if ((((*_125826_m.alloc)._field_Elems.len() != (*(*(_125826_m))._field_Kind.alloc)._field_N) && _1a96b0ade_ableToInit(&((*(*(_125826_m))._field_Kind.alloc)._field_Elem)))) {
		_1a95ca850_fillCollectionByDefault(_self_, &((*(*(_125826_m))._field_Kind.alloc)._field_Elem));
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	return;;
}



inline void _1a95c4b46_funcInsCommon(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bbd8b2_FnIns> _130834_m) {
	_1a96a88c8_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _130834_m);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a95c4dee_funcIns(_self_, _130834_m);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a95c4dee_funcIns(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bbd8b2_FnIns> _131528_m) {
	if ((((*(_131528_m))._field_Decl != nullptr) && (*(*(_131528_m))._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_1a7b7e4cc_Directive> _13174_d = _1a88308a8_FindDirective(&((*(*(_131528_m))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_13174_d != nullptr)) {
			_1a9694a18_writeBytes((*(_self_))._field_oc, _1a96a134e_concatAllParts((*_13174_d.alloc)._field_Args));
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1a95d33c4_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_131528_m));
}



inline void _1a95c51a7_tuple(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb3511_TupleExprModel> _132626_m) {
	{
		auto expr = &((*_132626_m.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0e5696:;
		if (it != expr_end) {
			jule::I64 _13278_i = it - expr->begin();
			jule::Ptr<_1a7cd41ae_Data> _132715_d = *it;
			{
				_1a95c0b42_possibleRefExpr(_self_, (*(_132715_d))._field_Model);
				_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_132626_m))._field_Datas.len() - _13278_i) > 1LL)) {
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1a9695112_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1ad0e5696:;
			++it;
			_13278_i++;
			goto _iter_begin_1ad0e5696;
		}
		_iter_end_1ad0e5696:;
	};
}



inline void _1a95c5460_newCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb418d_BuiltinNewCallExprModel> _133728_m) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1a96a8c3b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_133728_m))._field_Kind);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*_133728_m.alloc)._field_Init != nullptr)) {
		_1a95c0b42_possibleRefExpr(_self_, (*_133728_m.alloc)._field_Init);
	} else if (_1a96b0ade_ableToInit(&((*_133728_m.alloc)._field_Kind))) {
		_1a95cb169_initExpr(_self_, (*_133728_m.alloc)._field_Kind);
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a95c5718_outCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb38da_BuiltinOutCallExprModel> _134928_m) {
	if (((*(_134928_m))._field_Debug && _1d92614d9_Production)) {
		return;;
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	jule::Ptr<_1a7bba8d1_Fn> _13547_decl = _1a7e9d840_RuntimeFindFn(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5)));;
	jule::Ptr<_1a7bbd8b2_FnIns> _13557_f = _1a88323d2_FindFnGenericInstance(&(_13547_decl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*_134928_m.alloc)._field_Expr))._field_Kind; __jule_collection; }));;
	static__1a95d33c4_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13557_f));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a95c0b42_possibleRefExpr(_self_, (*(*(_134928_m))._field_Expr.alloc)._field_Model);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1a95c59c1_outlnCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb3cb4_BuiltinOutlnCallExprModel> _136230_m) {
	if (((*(_136230_m))._field_Debug && _1d92614d9_Production)) {
		return;;
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	jule::Ptr<_1a7bba8d1_Fn> _13677_decl = _1a7e9d840_RuntimeFindFn(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5)));;
	jule::Ptr<_1a7bbd8b2_FnIns> _13687_f = _1a88323d2_FindFnGenericInstance(&(_13677_decl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*_136230_m.alloc)._field_Expr))._field_Kind; __jule_collection; }));;
	static__1a95d33c4_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13687_f));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a95c0b42_possibleRefExpr(_self_, (*(*(_136230_m))._field_Expr.alloc)._field_Model);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1a95c5c79_panicCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb4567_BuiltinPanicCallExprModel> _137530_m) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_panic_s(", 15));
	_1a95c0b42_possibleRefExpr(_self_, (*(_137530_m))._field_Expr);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1a9696aa3_locInfo((*(_self_))._field_oc, &((*_137530_m.alloc)._field_Token));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1a95c6032_assertCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb4a1d_BuiltinAssertCallExprModel> _138331_m) {
	if (_1d92614d9_Production) {
		return;;
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("if (!(", 6));
	_1a95c0b42_possibleRefExpr(_self_, (*(_138331_m))._field_Expr);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")) __jule_panic_s(jule::Str(", 28));
	_1a95cbe28_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_138331_m.alloc)._field_Log);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(") + jule::Str(\"\\nlocation: ", 27));
	_1a9696aa3_locInfo((*(_self_))._field_oc, &((*_138331_m.alloc)._field_Token));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1a95c62da_errorCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb6624_BuiltinErrorCallExprModel> _139630_m) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1a7bbad87_IsVoid((*((*(_139630_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_139630_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1ad10c0a3:;
				{
					jule::Ptr<_1a7c7b178_Var> _14015_v = (*((*(_139630_m))._field_Err))._field_Model.unsafe_cast_ptr<_1a7c7b178_Var>();;
					if (((*(_14015_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1ad10c03c:;
		};
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1a96adbdb_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_139630_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_139630_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1ad1115e6:;
				{
					jule::Ptr<_1a7c7b178_Var> _14135_v = (*((*(_139630_m))._field_Err))._field_Model.unsafe_cast_ptr<_1a7c7b178_Var>();;
					if (((*(_14135_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1ad111580:;
		};
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1a95c0b42_possibleRefExpr(_self_, (*((*(_139630_m))._field_Err))._field_Model);
	jule::I64 _14223_i = _1a9695e26_pushAnyType((*(_self_))._field_oc, (*(*(_139630_m))._field_Err.alloc)._field_Kind);;
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1a9694760_write((*(_self_))._field_oc, _1c005c398_Itoa(_14223_i));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")}", 2));
}



inline void _1a95c6593_copyCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb624a_BuiltinCopyCallExprModel> _142829_m) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_1a95c0b42_possibleRefExpr(_self_, (*((*(_142829_m))._field_Dest))._field_Model);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a95c0b42_possibleRefExpr(_self_, (*((*_142829_m.alloc)._field_Src))._field_Model);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a95c684b_lenCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb569a_BuiltinLenCallExprModel> _143628_m) {
	jule::Ptr<_1a7d2aa52_Map> _14377__map = _1a7d20edc_Map((*((*(_143628_m))._field_Expr))._field_Kind.ptr());;
	if ((_14377__map != nullptr)) {
		jule::Ptr<_1a7ba5ca6_Struct> _14398_s = _1a7e9de39_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
		jule::Ptr<_1a7ba8b11_StructIns> _14408_ins = _1a8832866_FindStructGenericInstance(&(_14398_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_14377__map.alloc)._field_Key; (*it++) = (*_14377__map.alloc)._field_Val; __jule_collection; }));;
		;
		jule::Ptr<_1a7bbd8b2_FnIns> _14428_f = (*(_1a7ba9bab_FindMethod(_14408_ins.ptr(), jule::Str::lit("len", 3), false)))._field_Instances[0LL];;
		static__1a95d33c4_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_14428_f));
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a95c0b42_possibleRefExpr(_self_, (*(*(_143628_m))._field_Expr.alloc)._field_Model);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1a95c0b42_possibleRefExpr(_self_, (*(*(_143628_m))._field_Expr.alloc)._field_Model);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1a95c6b04_capCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb5997_BuiltinCapCallExprModel> _145328_m) {
	_1a95c0b42_possibleRefExpr(_self_, (*((*(_145328_m))._field_Expr))._field_Model);
	_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1a95c6dac_deleteCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb5d71_BuiltinDeleteCallExprModel> _145831_m) {
	jule::Ptr<_1a7d2aa52_Map> _14597__map = _1a7d20edc_Map((*((*(_145831_m))._field_Dest))._field_Kind.ptr());;
	if ((_14597__map == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: deleteCall: destination is not map", 39) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1461:4"));;
	};
	jule::Ptr<_1a7ba5ca6_Struct> _14637_s = _1a7e9de39_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1a7ba8b11_StructIns> _14647_ins = _1a8832866_FindStructGenericInstance(&(_14637_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_14597__map))._field_Key; (*it++) = (*(_14597__map))._field_Val; __jule_collection; }));;
	;
	if (((*_145831_m.alloc)._field_Key != nullptr)) {
		jule::Ptr<_1a7bbd8b2_FnIns> _14678_f = (*(_1a7ba9bab_FindMethod(_14647_ins.ptr(), jule::Str::lit("del", 3), false)))._field_Instances[0LL];;
		static__1a95d33c4_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_14678_f));
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a95c0b42_possibleRefExpr(_self_, (*(*(_145831_m))._field_Dest.alloc)._field_Model);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a95c0b42_possibleRefExpr(_self_, (*(*(_145831_m))._field_Key.alloc)._field_Model);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		jule::Ptr<_1a7bbd8b2_FnIns> _14758_f = (*(_1a7ba9bab_FindMethod(_14647_ins.ptr(), jule::Str::lit("clear", 5), false)))._field_Instances[0LL];;
		static__1a95d33c4_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_14758_f));
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a95c0b42_possibleRefExpr(_self_, (*(*(_145831_m))._field_Dest.alloc)._field_Model);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1a95c7165_makeCallSlice(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb4ec4_BuiltinMakeCallExprModel>* _148335_m) {
	jule::Ptr<_1a7d293ad_Slc> _14847_slice = _1a7d204a3_Slc((*((*(_148335_m))))._field_Kind.ptr());;
	jule::Bool _14853_init = _1a96b0ade_ableToInit(&((*(_14847_slice))._field_Elem));;
	if (_14853_init) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	};
	_1a96a8c3b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_148335_m))))._field_Kind);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1a95c0b42_possibleRefExpr(_self_, (*((*(_148335_m))))._field_Len);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_148335_m))))._field_Cap != nullptr)) {
		_1a95c0b42_possibleRefExpr(_self_, (*((*(_148335_m))))._field_Cap);
	} else {
		_1a95c0b42_possibleRefExpr(_self_, (*((*(_148335_m))))._field_Len);
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((!(_14853_init))) {
		return;;
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1a95cab08_initCollection(_self_, &((*_14847_slice.alloc)._field_Elem));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1a95c741d_makeCallStr(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb4ec4_BuiltinMakeCallExprModel>* _150733_m) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1a95c0b42_possibleRefExpr(_self_, (*((*(_150733_m))))._field_Len);
	if (((*((*(_150733_m))))._field_Cap != nullptr)) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a95c0b42_possibleRefExpr(_self_, (*((*(_150733_m))))._field_Cap);
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a95c76c6_makeCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb4ec4_BuiltinMakeCallExprModel> _151829_m) {
	if ((_1a7d204a3_Slc((*(_151829_m))._field_Kind.ptr()) != nullptr)) {
		_1a95c7165_makeCallSlice(_self_, &(_151829_m));
		return;;
	};
	_1a95c741d_makeCallStr(_self_, &(_151829_m));
}



inline void _1a95c797e_pushToSlice(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7e1472e_PushToSliceExprModel> _152632_m) {
	;
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1a96a6145_asSlice((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_152632_m))._field_Elems))._field_ElemKind);
	jule::Bool _15347_ptr = false;;
	{
		auto &_match_expr{ (*(_152632_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ad139542:;
			{
				jule::Ptr<_1a7bad2ec_UnaryExprModel> _15388_u = (*(_152632_m))._field_Dest.unsafe_cast_ptr<_1a7bad2ec_UnaryExprModel>();;
				if ((_1a7d1e969_Ptr((*((*(_15388_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1a95c0b42_possibleRefExpr(_self_, (*(*(_15388_u))._field_Expr.alloc)._field_Model);
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_15347_ptr=true;
					goto _match_end_1ad138035;
				};
				goto _case_begin_1ad13809b;
			}
		}
		else {
			_case_begin_1ad13809b:;
			{
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1a95c0b42_possibleRefExpr(_self_, (*_152632_m.alloc)._field_Dest);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1ad138035:;
	};
	if (((*(*(_152632_m))._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_15347_ptr) {
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1a95c0b42_possibleRefExpr(_self_, (*((*(_152632_m))._field_Elems))._field_Elems[0LL]);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_15347_ptr) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1a9694760_write((*(_self_))._field_oc, _1c005c398_Itoa((*(*(_152632_m))._field_Elems.alloc)._field_Elems.len()));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*(_152632_m))._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad1419bc:;
		if (it != expr_end) {
			jule::Any _157215_e = *it;
			{
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_15347_ptr) {
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1a95c0b42_possibleRefExpr(_self_, _157215_e);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1ad1419bc:;
			++it;
			goto _iter_begin_1ad1419bc;
		}
		_iter_end_1ad1419bc:;
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a95c7c37_appendToSlice(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7e14b08_AppendToSliceExprModel> _158634_m) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a95c0b42_possibleRefExpr(_self_, (*(_158634_m))._field_Dest);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1a95c0b42_possibleRefExpr(_self_, (*_158634_m.alloc)._field_Slice);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1a95c7ee0_appendCall(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb539d_BuiltinAppendCallExprModel> _159431_m) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1a95c0b42_possibleRefExpr(_self_, (*(_159431_m))._field_Dest);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1a95c0b42_possibleRefExpr(_self_, (*_159431_m.alloc)._field_Elements);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a95c8298_sizeof(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb6cc8_SizeofExprModel> _160227_m) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1a95c0b42_possibleRefExpr(_self_, (*(_160227_m))._field_Expr);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a95c8551_alignof(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb6eb5_AlignofExprModel> _160828_m) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1a95c0b42_possibleRefExpr(_self_, (*(_160828_m))._field_Expr);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a95c8809_runeLit(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb725c_RuneExprModel> _161424_m) {
	if (((*(_161424_m))._field_Code <= 127LL)) {
		_1daeda96a_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		jule::Str _16178_b = _1a95cb80c_sbtoa(static_cast<jule::U8>((*_161424_m.alloc)._field_Code));;
		if (_16178_b.equal("'", 1)) {
			_1daeda96a_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\\');
		};
		_1daeda6b2_WriteStr(&(*(*(_self_))._field_oc.alloc)._field_Buf, _16178_b);
		_1daeda96a_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\'');
		return;;
	};
	_1a95cc5aa_itoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::I64>((*_161424_m.alloc)._field_Code));
}



inline void _1a95c8ab2_structureStatic(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb2d3a_StructStaticIdentExprModel> _162836_m) {
	static__1a95d33c4_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_162836_m))._field_Method));
}



inline void _1a95c8d6a_backendEmit(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb7636_BackendEmitExprModel> _163232_m) {
	if (((*(_163232_m))._field_Exprs.len() == 0LL)) {
		_1a9694760_write((*(_self_))._field_oc, (*_163232_m.alloc)._field_Code);
		return;;
	};
	jule::I64 _16373_n = _1daedb43d_Len(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	jule::Slice<jule::Any> _16387_args = ({ auto __jule_collection = jule::Slice<jule::Any>::alloc((*_163232_m.alloc)._field_Exprs.len(), (*_163232_m.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });;
	{
		auto expr = &((*_163232_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad151c0d:;
		if (it != expr_end) {
			jule::I64 _16398_i = it - expr->begin();
			jule::Any _163915_expr = *it;
			{
				_1a95c0b42_possibleRefExpr(_self_, _163915_expr);
				jule::Slice<jule::U8> _16418_buf = _1daedb95a_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
				_16387_args[_16398_i]=jule::Any(__jule_bytesToStr(_16418_buf.slice(_16373_n)), &__jule_any_type4);
				{
					_1daedbc13_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _16418_buf.slice(0LL, _16373_n));
				};
			}
			_iter_next_1ad151c0d:;
			++it;
			_16398_i++;
			goto _iter_begin_1ad151c0d;
		}
		_iter_end_1ad151c0d:;
	};
	_1a9694760_write((*(_self_))._field_oc, _1a7e0041d_Format((*_163232_m.alloc)._field_Code, _16387_args));
}



inline void _1a95c9123_free(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7bb7933_FreeExprModel> _164825_m) {
	_1a95c0b42_possibleRefExpr(_self_, (*(_164825_m))._field_Expr);
	if (_1d9260dce_RC) {
		_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1a95c93cb_strComp(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7e13640_StrCompExprModel> _165728_m) {
	if ((*(_165728_m))._field_NotEq) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _16613_s = _1c006c61c_ReadStr((*_165728_m.alloc)._field_Right.ptr());;
	_1a95c0b42_possibleRefExpr(_self_, (*_165728_m.alloc)._field_Left);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".equal(", 7));
	_1a95cbe28_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _16613_s);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a9694760_write((*(_self_))._field_oc, _1c005c398_Itoa(_16613_s.len()));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*_165728_m.alloc)._field_NotEq) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1a95c9684_emptyCompare(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7e12d48_EmptyCompareExprModel> _167333_m) {
	if ((*(_167333_m))._field_Neg) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a95c0b42_possibleRefExpr(_self_, (*_167333_m.alloc)._field_Expr);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1a95c993c_unsafeDeref(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7e152ce_UnsafeDerefExprModel> _168232_m) {
	{
		
		if ((_1a7d1e6d3_Sptr((*((*((*(_168232_m))._field_Base))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad160766:;
			{
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1a95c0b42_possibleRefExpr(_self_, (*(*((*(_168232_m))._field_Base))._field_Expr.alloc)._field_Model);
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1ad16039d:;
			{
				__jule_panic_s(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1689:4"));;
			}
		}
		_match_end_1ad16028d:;
	};
}



inline void _1a95c9be5_unsafeCasting(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7e155cb_UnsafeCastingExprModel> _169334_m) {
	{
		
		if (_1a882dad7_IsAny(&((*((*(_169334_m))._field_Base))._field_ExprKind))) {
			_case_begin_1ad16344a:;
			{
				_1a95c0b42_possibleRefExpr(_self_, (*((*(*(_169334_m))._field_Base.alloc)._field_Expr))._field_Model);
				if ((_1a7d1e6d3_Sptr((*(*(_169334_m))._field_Base.alloc)._field_Kind.ptr()) != nullptr)) {
					_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_1a96a8c3b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1a7d1e6d3_Sptr((*((*(_169334_m))._field_Base))._field_Kind)))._field_Elem);
				} else {
					_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_1a96a8c3b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_169334_m))._field_Base.alloc)._field_Kind);
				};
				_1a9694760_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1ad163082:;
			{
				__jule_panic_s(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1706:4"));;
			}
		}
		_match_end_1ad162e94:;
	};
}



inline void _1a95c9e9d_model(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Any _171026_m) {
	{
		auto &_match_expr{ _171026_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ad163cb9:;
			{
				_1a9694760_write((*(_self_))._field_oc, _171026_m.cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1ad168d02:;
			{
				_1a9694760_write((*(_self_))._field_oc, (*(_171026_m.unsafe_cast_ptr<jule::Str>())));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1ad168d68:;
			{
				_1a96a8c3b_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _171026_m.cast_ptr<_1a7d1bc96_TypeKind>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ad168dce:;
			{
				_1a95bcc93_constant(_self_, _171026_m.cast_ptr<_1c006a461_Const>(&__jule_any_type20));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad168e45:;
			{
				_1a95becb7_var(_self_, _171026_m.cast_ptr<_1a7c7b178_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ad168eab:;
			{
				_1a95c0070_structureIns(_self_, _171026_m.cast_ptr<_1a7ba8b11_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ad169022:;
			{
				_1a95c4b46_funcInsCommon(_self_, _171026_m.cast_ptr<_1a7bbd8b2_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1ad169b8d:;
			{
				_1a95be080_unsafeBinary(_self_, (*(_171026_m.unsafe_cast_ptr<_1a7e13ec0_UnsafeBinaryExprModel>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ad169c04:;
			{
				_1a95bea0e_binary(_self_, _171026_m.cast_ptr<_1a7bace23_BinaryExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ad169c6a:;
			{
				_1a95c0328_unary(_self_, _171026_m.cast_ptr<_1a7bad2ec_UnaryExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad169cd1:;
			{
				_1a95c05d1_structureLit(_self_, _171026_m.cast_ptr<_1a7badbc1_StructLitExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ad169d47:;
			{
				_1a95c0889_allocStructure(_self_, _171026_m.cast_ptr<_1a7badebd_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1ad169dad:;
			{
				_1a95c1318_casting(_self_, _171026_m.cast_ptr<_1a7bae551_CastingExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1ad169e24:;
			{
				_1a95c2e41_funcCall(_self_, _171026_m.cast_ptr<_1a7baee03_FnCallExprModel>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ad169e8a:;
			{
				_1a95c31e9_slice(_self_, _171026_m.cast_ptr<_1a7bb02cc_SliceExprModel>(&__jule_any_type80));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1ad16a012:;
			{
				_1a95c488d_array(_self_, _171026_m.cast_ptr<_1a7bb3214_ArrayExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1ad16a089:;
			{
				_1a95c375a_unsafeIndexing(_self_, _171026_m.cast_ptr<_1a7e14355_UnsafeIndexingExprModel>(&__jule_any_type135));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1ad16a111:;
			{
				_1a95c34a2_indexing(_self_, _171026_m.cast_ptr<_1a7bb0783_IndexingExprModel>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1ad16a188:;
			{
				_1a95c3a13_anonFunc(_self_, _171026_m.cast_ptr<_1a7bb0c39_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1ad16a210:;
			{
				_1a95c3cbb_mapExpr(_self_, _171026_m.cast_ptr<_1a7bb14dc_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ad16a287:;
			{
				_1a95c4074_slicing(_self_, _171026_m.cast_ptr<_1a7bb1a70_SlicingExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ad16a30e:;
			{
				_1a95c432c_traitSub(_self_, _171026_m.cast_ptr<_1a7bb2103_TraitSubIdentExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ad16a386:;
			{
				_1a95c45d5_structureSub(_self_, _171026_m.cast_ptr<_1a7bb2994_StructSubIdentExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1ad16a40d:;
			{
				_1a95c51a7_tuple(_self_, _171026_m.cast_ptr<_1a7bb3511_TupleExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ad16a485:;
			{
				_1a95c5718_outCall(_self_, _171026_m.cast_ptr<_1a7bb38da_BuiltinOutCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ad16a50c:;
			{
				_1a95c59c1_outlnCall(_self_, _171026_m.cast_ptr<_1a7bb3cb4_BuiltinOutlnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1ad16a584:;
			{
				_1a95c5460_newCall(_self_, _171026_m.cast_ptr<_1a7bb418d_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1ad16a60b:;
			{
				_1a95c5c79_panicCall(_self_, _171026_m.cast_ptr<_1a7bb4567_BuiltinPanicCallExprModel>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1ad16a683:;
			{
				_1a95c6032_assertCall(_self_, _171026_m.cast_ptr<_1a7bb4a1d_BuiltinAssertCallExprModel>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1ad16a70a:;
			{
				_1a95c62da_errorCall(_self_, _171026_m.cast_ptr<_1a7bb6624_BuiltinErrorCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ad16a782:;
			{
				_1a95c76c6_makeCall(_self_, _171026_m.cast_ptr<_1a7bb4ec4_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ad16a809:;
			{
				_1a95c7ee0_appendCall(_self_, _171026_m.cast_ptr<_1a7bb539d_BuiltinAppendCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1ad16a881:;
			{
				_1a95c6593_copyCall(_self_, _171026_m.cast_ptr<_1a7bb624a_BuiltinCopyCallExprModel>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1ad16a908:;
			{
				_1a95c684b_lenCall(_self_, _171026_m.cast_ptr<_1a7bb569a_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1ad16a980:;
			{
				_1a95c6b04_capCall(_self_, _171026_m.cast_ptr<_1a7bb5997_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1ad16aa07:;
			{
				_1a95c6dac_deleteCall(_self_, _171026_m.cast_ptr<_1a7bb5d71_BuiltinDeleteCallExprModel>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1ad16aa7e:;
			{
				_1a95c8298_sizeof(_self_, _171026_m.cast_ptr<_1a7bb6cc8_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1ad16ab06:;
			{
				_1a95c8551_alignof(_self_, _171026_m.cast_ptr<_1a7bb6eb5_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1ad16ab7d:;
			{
				_1a95c8809_runeLit(_self_, _171026_m.cast_ptr<_1a7bb725c_RuneExprModel>(&__jule_any_type86));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ad16ac05:;
			{
				_1a95c8ab2_structureStatic(_self_, _171026_m.cast_ptr<_1a7bb2d3a_StructStaticIdentExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1ad16ac7c:;
			{
				_1a95c8d6a_backendEmit(_self_, _171026_m.cast_ptr<_1a7bb7636_BackendEmitExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1ad16ad04:;
			{
				_1a95c9123_free(_self_, _171026_m.cast_ptr<_1a7bb7933_FreeExprModel>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1ad16ad7b:;
			{
				_1a95c93cb_strComp(_self_, _171026_m.cast_ptr<_1a7e13640_StrCompExprModel>(&__jule_any_type129));
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1ad16ae03:;
			{
				_1a95becb7_var(_self_, (*(_171026_m.unsafe_cast_ptr<_1a7e131bc_RefExprModel>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1ad16ae7a:;
			{
				_1a95c9684_emptyCompare(_self_, _171026_m.cast_ptr<_1a7e12d48_EmptyCompareExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1ad16b002:;
			{
				_1a95c993c_unsafeDeref(_self_, _171026_m.cast_ptr<_1a7e152ce_UnsafeDerefExprModel>(&__jule_any_type131));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1ad16b079:;
			{
				_1a95c9be5_unsafeCasting(_self_, _171026_m.cast_ptr<_1a7e155cb_UnsafeCastingExprModel>(&__jule_any_type134));
			}
		}
		else {
			_case_begin_1ad168c8b:;
			{
				_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1ad168b9d:;
	};
}



inline jule::Bool _1a95ca2de_handleFieldByDefault(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7ba8061_FieldIns>* _181242_f) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_181242_f))))._field_Default != nullptr)) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
		static__1a95d435e_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_181242_f))))._field_Decl));
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
		_1a95c0b42_possibleRefExpr(_self_, (*(*((*(_181242_f))))._field_Default.alloc)._field_Model);
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1a96b0ade_ableToInit(&((*((*(_181242_f))))._field_Kind))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	static__1a95d435e_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_181242_f))))._field_Decl));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
	_1a95cb169_initExpr(_self_, (*((*(_181242_f))))._field_Kind);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a95ca597_initStructLit(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _183335_s) {
	if ((*((*((*(_183335_s))))._field_Decl))._field_Binded) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a96a6ee2_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_183335_s)));
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1a96a6ee2_structureIns((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_183335_s)));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	jule::Bool _18427_inited = false;;
	{
		auto expr = &((*((*(_183335_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad18d783:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba8061_FieldIns> _184315_f = *it;
			{
				if (_18427_inited) {
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_18427_inited=_1a95ca2de_handleFieldByDefault(_self_, &(_184315_f));
			}
			_iter_next_1ad18d783:;
			++it;
			goto _iter_begin_1ad18d783;
		}
		_iter_end_1ad18d783:;
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a95ca850_fillCollectionByDefault(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _185545_elem) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" < ", 3));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("_end; ++", 8));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(") *", 3));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a95cb169_initExpr(_self_, (*(_185545_elem)));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
}



inline void _1a95cab08_initCollection(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _187036_elem) {
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("auto ", 5));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".begin(); const auto ", 21));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	_1a95ca850_fillCollectionByDefault(_self_, _187036_elem);
}



inline void _1a95cadb1_initArray(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7d2b6ce_Arr>* _188431_arr) {
	if (((*((*(_188431_arr))))._field_N == 0LL)) {
		_1a96a7355_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_188431_arr)));
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1a96a7355_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_188431_arr)));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	_1a95cab08_initCollection(_self_, &((*((*(_188431_arr))))._field_Elem));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1a95cb169_initExpr(jule::Ptr<_1a95bb4cd_exprCoder> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _189829_t) {
	if (_1a7d1db99_NilCompatible(_189829_t.ptr())) {
		if ((_1a7d20edc_Map(_189829_t) != nullptr)) {
			_1a96a8c3b_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _189829_t);
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("{}", 2));
			return;;
		};
		if ((_1a7d1e969_Ptr(_189829_t) != nullptr)) {
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1a96a8c3b_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _189829_t);
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1a7d29ea2_Tuple> _19137_tup = _1a7d21273_Tup(_189829_t);;
	if ((_19137_tup != nullptr)) {
		_1a96ad515_tup((*(*((*(_self_))._field_oc))._field_tc.alloc)._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _19137_tup);
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*_19137_tup.alloc)._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad1abcac:;
			if (it != expr_end) {
				jule::I64 _19179_i = it - expr->begin();
				jule::Ptr<_1a7d1bc96_TypeKind> _191716_tt = *it;
				{
					if ((!(_1a96b0db9_shouldInitialized(&(_191716_tt))))) {
						goto _iter_next_1ad1abcac;
					};
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1a9694760_write((*(_self_))._field_oc, _1c005c398_Itoa(_19179_i));
					_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1a95cb169_initExpr(_self_, _191716_tt);
					if ((((*_19137_tup.alloc)._field_Types.len() - _19179_i) > 1LL)) {
						_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1ad1abcac:;
				++it;
				_19179_i++;
				goto _iter_begin_1ad1abcac;
			}
			_iter_end_1ad1abcac:;
		};
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1a7bd1a6d_Enum> _19327_enm = _1a7d1ec00_Enum(_189829_t);;
	if ((_19327_enm != nullptr)) {
		_1a95c9e9d_model(_self_, (*((*((*((*_19327_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1a7d24dae_Prim> _19373_prim = _1a7d1e44c_Prim(_189829_t);;
	if ((_19373_prim != nullptr)) {
		if (_1c0069dbc_IsNum((*_19373_prim.alloc)._field_Kind)) {
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1a7d280e3_IsBool(_19373_prim)) {
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1a7d28379_IsStr(_19373_prim)) {
			_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1a7d2021c_Arr(_189829_t) != nullptr)) {
		jule::Ptr<_1a7d2b6ce_Arr> _19498_arr = _1a7d2021c_Arr(_189829_t);;
		_1a95cadb1_initArray(_self_, &(_19498_arr));
		return;;
	};
	jule::Ptr<_1a7ba8b11_StructIns> _19537_s = _1a7d209c0_Struct(_189829_t);;
	if ((_19537_s != nullptr)) {
		_1a95ca597_initStructLit(_self_, &(_19537_s));
		return;;
	};
	_1a96a8c3b_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _189829_t);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}








inline jule::Bool _1a95ce03a_TestCoder_eq(_1a95ce03a_TestCoder *_self_, _1a95ce03a_TestCoder _other_) {
	return 
		(_self_->_field_t == _other_._field_t) &&
		(_self_->_field_tmReset == _self_->_field_tmReset) &&
		(_self_->_field_tmFailed == _self_->_field_tmFailed) &&
		(_self_->_field_tmSkipped == _self_->_field_tmSkipped) &&
		(_self_->_field_oc == _self_->_field_oc);
}

inline jule::Ptr<_1a95ce03a_TestCoder> static__1a95ce4e1_New(jule::Ptr<_1a9694078_ObjectCoder>* _2921_oc) {
	return jule::new_ptr<_1a95ce03a_TestCoder>(_1a95ce03a_TestCoder{._field_t=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_tmReset=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_tmFailed=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_tmSkipped=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_oc=(*(_2921_oc))});;
}



inline jule::Ptr<_1a7c36793_ImportInfo> _1a95ce777_findTestingPackage(jule::Ptr<_1a95ce03a_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad1b7757:;
		if (it != expr_end) {
			jule::Ptr<_1a7c36793_ImportInfo> _3615_imp = *it;
			{
				if ((*(_3615_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3615_imp;;
				};
			}
			_iter_next_1ad1b7757:;
			++it;
			goto _iter_begin_1ad1b7757;
		}
		_iter_end_1ad1b7757:;
	};
	return nullptr;;
}



inline void _1a95cea30_appendTest(jule::Ptr<_1a95ce03a_TestCoder> _self_, jule::Ptr<_1a7bbd8b2_FnIns> _4431_f) {
	_1a9695112_indent((*(_self_))._field_oc);
	_1a95d026c_callTmReset(_self_);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str(\">>> TEST RUNNING: \" ", 50));
	_1a95cbe28_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_4431_f))._field_Decl))._field_Ident);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" \"\\n\").fake_slice());\n", 22));
	_1a9695112_indent((*(_self_))._field_oc);
	static__1a95d33c4_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_4431_f));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1a95cecd8_appendPackageTests(jule::Ptr<_1a95ce03a_TestCoder> _self_, jule::Ptr<_1a7c396b9_Package>* _5940_p) {
	{
		auto expr = &((*((*(_5940_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad1be033:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _6015_file = *it;
			{
				{
					auto expr = &((*(_6015_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad1be9b2:;
					if (it != expr_end) {
						jule::Ptr<_1a7bba8d1_Fn> _6116_f = *it;
						{
							if (_1a8830c71_HasDirective(&((*(_6116_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
								_1a95cea30_appendTest(_self_, (*_6116_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1ad1be9b2:;
						++it;
						goto _iter_begin_1ad1be9b2;
					}
					_iter_end_1ad1be9b2:;
				};
			}
			_iter_next_1ad1be033:;
			++it;
			goto _iter_begin_1ad1be033;
		}
		_iter_end_1ad1be033:;
	};
}



inline jule::Bool _1a95d006e_readyTestingPackage(jule::Ptr<_1a95ce03a_TestCoder> _self_) {
	jule::Ptr<_1a7c36793_ImportInfo> _707_p = _1a95ce777_findTestingPackage(_self_);;
	if ((_707_p == nullptr)) {
		return false;;
	};
	;
	(*_self_.alloc)._field_t=(*(_1a7c379a3_FindStruct(_707_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	;
	(*_self_.alloc)._field_tmReset=_1a7ba9bab_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_1a7ba9bab_FindMethod((*(_self_))._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_1a7ba9bab_FindMethod((*(_self_))._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1a95d026c_callTmReset(jule::Ptr<_1a95ce03a_TestCoder> _self_) {
	static__1a95d30d8_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a95d046a_callTmFailed(jule::Ptr<_1a95ce03a_TestCoder> _self_) {
	static__1a95d30d8_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a95d0668_callTmSkipped(jule::Ptr<_1a95ce03a_TestCoder> _self_) {
	static__1a95d30d8_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a95d0866_Serialize(jule::Ptr<_1a95ce03a_TestCoder> _self_) {
	_1a96a0cbb_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1a96a075a_end((*(_self_))._field_oc);
	});;
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1a9694c16_addIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	if ((!(_1a95d006e_readyTestingPackage(_self_)))) {
		_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		_1a9694e14_doneIndent((*(_self_))._field_oc);
		return;;
	};
	_1daed18b7_StrBuilder _1207_tb = static__1daed1bb4_New(40LL);;
	_1a96a6ee2_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &(_1207_tb), (*_self_.alloc)._field_t);
	_1a96a4e35_asSptr((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _1daedb95a_Buf(&_1207_tb));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1a9694a18_writeBytes((*(_self_))._field_oc, _1daedb95a_Buf(&_1207_tb));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("jule::U64 total = 0, failed = 0, skipped = 0;\n", 46));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1a9694c16_addIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1a95d046a_callTmFailed(_self_);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; __jule_writeStdout(jule::Str::lit(\"    [*] FAILED\\n\", 16).fake_slice()); }\n", 89));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1a95d0668_callTmSkipped(_self_);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; __jule_writeStdout(jule::Str::lit(\"    [*] SKIPPED\\n\", 17).fake_slice()); }\n", 91));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("else { __jule_writeStdout(jule::Str::lit(\"    [*] PASSED\\n\", 16).fake_slice()); }\n", 82));
	_1a9694e14_doneIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1a95cecd8_appendPackageTests(_self_, &((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Main));
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\ntotal tests: \", 14).fake_slice());\n", 72));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total).fake_slice());\n", 57));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" skipped: \", 10).fake_slice());\n", 67));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(skipped).fake_slice());\n", 59));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" failed: \", 9).fake_slice());\n", 65));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(failed).fake_slice());\n", 58));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" pass: \", 7).fake_slice());\n", 63));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total-failed-skipped).fake_slice());\n", 72));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\n\", 1).fake_slice());\n", 58));
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1a9694e14_doneIndent((*(_self_))._field_oc);
	_1a9695112_indent((*(_self_))._field_oc);
	_1a9694760_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
}








inline jule::Bool _1a95d1eb6_identCoder_eq(_1a95d1eb6_identCoder *_self_, _1a95d1eb6_identCoder _other_) { return true; }

inline void static__1a95d2505_writeIdentTo(_1daed18b7_StrBuilder* _3530_buf, jule::Str* _3548_ident) {
	{
		auto expr = _3548_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad1e0b48:;
		if (it != expr_end) {
			jule::U8 *_3610_b = it;
			{
				if (((*(_3610_b)) >= 128LLU)) {
					goto _julec_label_1ad1e0ebc;
				};
			}
			_iter_next_1ad1e0b48:;
			++it;
			goto _iter_begin_1ad1e0b48;
		}
		_iter_end_1ad1e0b48:;
	};
	_1daeda6b2_WriteStr(_3530_buf, (*(_3548_ident)));
	return;;
	_julec_label_1ad1e0ebc:;
	{
		auto expr = _3548_ident;
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _4610_r;
		_iter_begin_1ad1e1a06:;
		__jule_runeStep(it, end - it, &_4610_r, &len);
		if (it < end) {
			{
				if ((_4610_r < 128LL)) {
					_1daeda96a_WriteByte(_3530_buf, static_cast<jule::U8>(_4610_r));
					goto _iter_next_1ad1e1a06;
				};
				_1daeda6b2_WriteStr(_3530_buf, _1c005c0ce_FmtInt(static_cast<jule::I64>(_4610_r), 15LL));
			}
			_iter_next_1ad1e1a06:;
			it += len;
			goto _iter_begin_1ad1e1a06;
		}
	};
}



inline void static__1a95d289b_toOut(_1daed18b7_StrBuilder* _6323_buf, jule::Str _6340_ident, jule::Uintptr _6352_addr) {
	_1daeda96a_WriteByte(_6323_buf, '_');
	if ((_6352_addr != 0LLU)) {
		_1daeda6b2_WriteStr(_6323_buf, _1c005bc16_FmtUint(static_cast<jule::U64>(_6352_addr), 15LL));
		_1daeda96a_WriteByte(_6323_buf, '_');
	};
	static__1a95d2505_writeIdentTo(_6323_buf, &(_6340_ident));
}



inline void static__1a95d2cec_toLocal(_1daed18b7_StrBuilder* _7825_buf, jule::I64 _7842_row, jule::I64 _7852_col, jule::Str* _7863_ident) {
	_1daeda96a_WriteByte(_7825_buf, '_');
	_1daeda6b2_WriteStr(_7825_buf, _1c005c398_Itoa(_7842_row));
	_1daeda6b2_WriteStr(_7825_buf, _1c005c398_Itoa(_7852_col));
	_1daeda96a_WriteByte(_7825_buf, '_');
	static__1a95d2505_writeIdentTo(_7825_buf, _7863_ident);
}



inline void static__1a95d30d8_func(_1daed18b7_StrBuilder* _8622_buf, jule::Ptr<_1a7bba8d1_Fn>* _8644_f) {
	{
		
		if ((*((*(_8644_f))))._field_Binded) {
			_case_begin_1ad1e5e39:;
			{
				_1daeda6b2_WriteStr(_8622_buf, (*((*(_8644_f))))._field_Ident);
				return;;
			}
		}
		else if ((*((*(_8644_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1ad1e5ed3:;
			{
				_1daeda6b2_WriteStr(_8622_buf, jule::Str::lit("entry_point", 11));
				return;;
			}
		}
		else if (_1a7bbb11d_IsMethod((*(_8644_f)).ptr())) {
			_case_begin_1ad1e6049:;
			{
				if ((*((*(_8644_f))))._field_Statically) {
					_1daeda6b2_WriteStr(_8622_buf, jule::Str::lit("static_", 7));
				};
			}
		}
		_match_end_1ad1e5cc4:;
	};
	jule::Ptr<_1a7b7e4cc_Directive> _993_export = _1a88308a8_FindDirective(&((*((*(_8644_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
	if ((_993_export != nullptr)) {
		_1daeda6b2_WriteStr(_8622_buf, (*((*_993_export.alloc)._field_Args[0LL]))._field_Kind);
		return;;
	};
	static__1a95d289b_toOut(_8622_buf, (*((*(_8644_f))))._field_Ident, static_cast<jule::Uintptr>((*(_8644_f))));
}



inline void static__1a95d33c4_funcIns(_1daed18b7_StrBuilder* _10725_buf, jule::Ptr<_1a7bbd8b2_FnIns>* _10747_f) {
	if (_1a7bbed7a_IsBuiltin((*(_10747_f)).ptr())) {
		_1daeda6b2_WriteStr(_10725_buf, jule::Str::lit("jule::", 6));
		_1daeda6b2_WriteStr(_10725_buf, (*((*((*(_10747_f))))._field_Decl))._field_Ident);
		return;;
	};
	if (((*(*((*(_10747_f))))._field_Decl.alloc)._field_Binded || ((*((*(_10747_f))))._field_Generics.len() == 0LL))) {
		static__1a95d30d8_func(_10725_buf, &((*((*(_10747_f))))._field_Decl));
		return;;
	};
	static__1a95d289b_toOut(_10725_buf, (*(*((*(_10747_f))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_10747_f))));
}



inline void static__1a95d36b0_traitDecl(_1daed18b7_StrBuilder* _12227_buf, jule::Ptr<_1a7bce362_Trait> _12244_t) {
	static__1a95d289b_toOut(_12227_buf, (*(_12244_t))._field_Ident, static_cast<jule::Uintptr>(_12244_t));
}



inline void static__1a95d399b_param(_1daed18b7_StrBuilder* _12623_buf, jule::Ptr<_1a7bb8e0c_Param>* _12641_p) {
	if ((_1a7b6c7a6_IsAnonIdent((*((*(_12641_p))))._field_Ident) || _1a7b6c4dc_IsIgnoreIdent((*((*(_12641_p))))._field_Ident))) {
		return;;
	};
	if (_1a7bb955b_IsSelf((*(_12641_p)).ptr())) {
		_1daeda6b2_WriteStr(_12623_buf, jule::Str::lit("_self_", 6));
		return;;
	};
	if (((*((*(_12641_p))))._field_Token == nullptr)) {
		static__1a95d2cec_toLocal(_12623_buf, 0LL, 0LL, &((*((*(_12641_p))))._field_Ident));
		return;;
	};
	static__1a95d2cec_toLocal(_12623_buf, (*((*((*(_12641_p))))._field_Token))._field_Row, (*((*((*(_12641_p))))._field_Token))._field_Column, &((*((*(_12641_p))))._field_Ident));
}



inline void static__1a95d3c87_structure(_1daed18b7_StrBuilder* _14127_buf, jule::Ptr<_1a7ba5ca6_Struct>* _14145_s) {
	if ((*((*(_14145_s))))._field_Binded) {
		if ((!(_1a8830c71_HasDirective(&((*((*(_14145_s))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("typedef", 7)))))) {
			_1daeda6b2_WriteStr(_14127_buf, jule::Str::lit("struct ", 7));
		};
		_1daeda6b2_WriteStr(_14127_buf, (*((*(_14145_s))))._field_Ident);
		return;;
	};
	static__1a95d289b_toOut(_14127_buf, (*((*(_14145_s))))._field_Ident, static_cast<jule::Uintptr>((*(_14145_s))));
}



inline void static__1a95d4073_structureIns(_1daed18b7_StrBuilder* _15230_buf, jule::Ptr<_1a7ba8b11_StructIns>* _15248_s) {
	if (((*((*((*(_15248_s))))._field_Decl))._field_Binded || ((*((*(_15248_s))))._field_Generics.len() == 0LL))) {
		static__1a95d3c87_structure(_15230_buf, &((*((*(_15248_s))))._field_Decl));
		return;;
	};
	static__1a95d289b_toOut(_15230_buf, (*(*((*(_15248_s))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_15248_s))));
}



inline void static__1a95d435e_field(_1daed18b7_StrBuilder* _16023_buf, jule::Ptr<_1a7ba2d80_Field>* _16041_f) {
	if ((*((*((*(_16041_f))))._field_Owner))._field_Binded) {
		_1daeda6b2_WriteStr(_16023_buf, (*((*(_16041_f))))._field_Ident);
		return;;
	};
	_1daeda6b2_WriteStr(_16023_buf, jule::Str::lit("_field_", 7));
	static__1a95d2505_writeIdentTo(_16023_buf, &((*((*(_16041_f))))._field_Ident));
}



inline void static__1a95d464a_var(_1daed18b7_StrBuilder* _17021_buf, jule::Ptr<_1a7c7b178_Var> _17042_v) {
	{
		
		if ((*(_17042_v))._field_Binded) {
			_case_begin_1ad207a50:;
			{
				_1daeda6b2_WriteStr(_17021_buf, (*_17042_v.alloc)._field_Ident);
			}
		}
		else if (((*(_17042_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
			_case_begin_1ad206c6e:;
			{
				_1daeda6b2_WriteStr(_17021_buf, jule::Str::lit("except.error", 12));
			}
		}
		else if (((*(_17042_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("self", 4)))) {
			_case_begin_1ad205d06:;
			{
				_1daeda6b2_WriteStr(_17021_buf, jule::Str::lit("_self_", 6));
			}
		}
		else if (((*(_17042_v))._field_RetOrder == -1LL)) {
			_case_begin_1ad205d6c:;
			{
				_1daeda6b2_WriteStr(_17021_buf, jule::Str::lit("__jule_func_result", 18));
			}
		}
		else if (((*(_17042_v))._field_RetOrder >= 0LL)) {
			_case_begin_1ad205dd3:;
			{
				_1daeda6b2_WriteStr(_17021_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_1daeda6b2_WriteStr(_17021_buf, _1c005c398_Itoa((*_17042_v.alloc)._field_RetOrder));
			}
		}
		else if (((*(_17042_v))._field_Scope != nullptr)) {
			_case_begin_1ad205e49:;
			{
				static__1a95d2cec_toLocal(_17021_buf, (*((*_17042_v.alloc)._field_Token))._field_Row, (*(*(_17042_v))._field_Token.alloc)._field_Column, &((*_17042_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1ad205c90:;
			{
				jule::Ptr<_1a7b7e4cc_Directive> _1884_export = _1a88308a8_FindDirective(&((*(_17042_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
				if ((_1884_export != nullptr)) {
					_1daeda6b2_WriteStr(_17021_buf, (*((*_1884_export.alloc)._field_Args[0LL]))._field_Kind);
					return;;
				};
				static__1a95d289b_toOut(_17021_buf, (*_17042_v.alloc)._field_Ident, static_cast<jule::Uintptr>(_17042_v));
			}
		}
		_match_end_1ad205b80:;
	};
}



inline void static__1a95d4936_iterBegin(_1daed18b7_StrBuilder* _19727_buf, jule::Uintptr _19744_it) {
	_1daeda6b2_WriteStr(_19727_buf, jule::Str::lit("_iter_begin_", 12));
	_1daeda6b2_WriteStr(_19727_buf, _1c005bc16_FmtUint(static_cast<jule::U64>(_19744_it), 15LL));
}



inline void static__1a95d4c22_iterEnd(_1daed18b7_StrBuilder* _20225_buf, jule::Uintptr _20242_it) {
	_1daeda6b2_WriteStr(_20225_buf, jule::Str::lit("_iter_end_", 10));
	_1daeda6b2_WriteStr(_20225_buf, _1c005bc16_FmtUint(static_cast<jule::U64>(_20242_it), 15LL));
}



inline void static__1a95d500d_iterNext(_1daed18b7_StrBuilder* _20726_buf, jule::Uintptr _20743_it) {
	_1daeda6b2_WriteStr(_20726_buf, jule::Str::lit("_iter_next_", 11));
	_1daeda6b2_WriteStr(_20726_buf, _1c005bc16_FmtUint(static_cast<jule::U64>(_20743_it), 15LL));
}



inline void static__1a95d52e9_label(_1daed18b7_StrBuilder* _21223_buf, jule::Uintptr _21240_u) {
	_1daeda6b2_WriteStr(_21223_buf, jule::Str::lit("_julec_label_", 13));
	_1daeda6b2_WriteStr(_21223_buf, _1c005bc16_FmtUint(static_cast<jule::U64>(_21240_u), 15LL));
}



inline void static__1a95d55d5_matchEnd(_1daed18b7_StrBuilder* _21726_buf, jule::Uintptr _21743_m) {
	_1daeda6b2_WriteStr(_21726_buf, jule::Str::lit("_match_end_", 11));
	_1daeda6b2_WriteStr(_21726_buf, _1c005bc16_FmtUint(static_cast<jule::U64>(_21743_m), 15LL));
}



inline void static__1a95d58c1_caseBegin(_1daed18b7_StrBuilder* _22227_buf, jule::Uintptr _22244_c) {
	_1daeda6b2_WriteStr(_22227_buf, jule::Str::lit("_case_begin_", 12));
	_1daeda6b2_WriteStr(_22227_buf, _1c005bc16_FmtUint(static_cast<jule::U64>(_22244_c), 15LL));
}








inline jule::Bool _1a96922c9_SerializationInfo_eq(_1a96922c9_SerializationInfo *_self_, _1a96922c9_SerializationInfo _other_) {
	return 
		(_self_->_field_Compiler == _other_._field_Compiler) &&
		(_self_->_field_CompilerCommand == _self_->_field_CompilerCommand);
}






inline jule::Bool _1a96926e7_traitCast_eq(_1a96926e7_traitCast *_self_, _1a96926e7_traitCast _other_) {
	return 
		(_self_->_field_t1 == _other_._field_t1) &&
		(_self_->_field_t2 == _self_->_field_t2);
}






inline jule::Bool _1a9692ac1_anonHash_eq(_1a9692ac1_anonHash *_self_, _1a9692ac1_anonHash _other_) {
	return 
		(_self_->_field_expr == _other_._field_expr) &&
		(_self_->_field_ident == _self_->_field_ident);
}





inline jule::Ptr<_1a9694078_ObjectCoder> static__1a96944a7_New(jule::Ptr<_1a882795a_IR>* _11721_ir, _1a96922c9_SerializationInfo _11730_info) {
	jule::Ptr<_1a9694078_ObjectCoder> _1187_oc = jule::new_ptr<_1a9694078_ObjectCoder>(_1a9694078_ObjectCoder{._field_Buf=_1daed18b7_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_resultDecls=_1daed18b7_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anyObj=_1daed18b7_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anonObj=_1daed18b7_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_deallocObj=_1daed18b7_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_ir=(*(_11721_ir)), ._field_info=_11730_info, ._field_anons=jule::Slice<jule::Ptr<_1a9692ac1_anonHash>>(nullptr), ._field_deallocated=jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>(nullptr), ._field_indentBuffer=jule::Slice<jule::U8>(nullptr), ._field_resultMap=static__1acba32dc_make(), ._field_anyTypeMap=jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>(nullptr), ._field_traitCastMap=jule::Slice<_1a96926e7_traitCast>(nullptr), ._field_traitMetMap=static__1acbedab8_make(), ._field_ec=jule::Ptr<_1a95bb4cd_exprCoder>(nullptr), ._field_sc=jule::Ptr<_1a95aebec_scopeCoder>(nullptr), ._field_tc=jule::Ptr<_1a96a3a38_typeCoder>(nullptr), ._field_headPos=0, ._field_declPos=0, ._field_wrapPos=0});;
	(*(_1187_oc))._field_ec=static__1a95bb8c9_new(&(_1187_oc));
	(*_1187_oc.alloc)._field_sc=static__1a95b03e5_new(&(_1187_oc));
	(*_1187_oc.alloc)._field_tc=static__1a96a4088_new(&(_1187_oc));
	return _1187_oc;;
}



inline void _1a9694760_write(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Str _13022_s) {
	_1daeda6b2_WriteStr(&(*(_self_))._field_Buf, _13022_s);
}



inline void _1a9694a18_writeBytes(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Slice<jule::U8> _13427_b) {
	_1daeda409_Write(&(*(_self_))._field_Buf, _13427_b);
}



inline void _1a9694c16_addIndent(jule::Ptr<_1a9694078_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 9LLU; __jule_collection; }));
}



inline void _1a9694e14_doneIndent(jule::Ptr<_1a9694078_ObjectCoder> _self_) {
	((*(_self_))._field_indentBuffer).mut_slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));;
}



inline void _1a9695112_indent(jule::Ptr<_1a9694078_ObjectCoder> _self_) {
	_1daeda409_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
}



inline jule::I64 _1a9695453_findAnyType(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _15333_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad21c5d1:;
		if (it != expr_end) {
			jule::I64 _1548_i = it - expr->begin();
			jule::Ptr<_1a7d1bc96_TypeKind> _15415_at = *it;
			{
				if (_1a7d1c4d3_Equal(_15415_at, (*(_15333_t)))) {
					return _1548_i;;
				};
			}
			_iter_next_1ad21c5d1:;
			++it;
			_1548_i++;
			goto _iter_begin_1ad21c5d1;
		}
		_iter_end_1ad21c5d1:;
	};
	return -1LL;;
}



inline jule::I64 _1a9695794_pushDealloc(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _16232_t) {
	{
		auto expr = &((*(_self_))._field_deallocated);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad21d192:;
		if (it != expr_end) {
			jule::I64 _1637_i = it - expr->begin();
			jule::Ptr<_1a7d1bc96_TypeKind> _16310_dt = *it;
			{
				if (_1a7d1c4d3_Equal(_16310_dt, _16232_t)) {
					return _1637_i;;
				};
			}
			_iter_next_1ad21d192:;
			++it;
			_1637_i++;
			goto _iter_begin_1ad21d192;
		}
		_iter_end_1ad21d192:;
	};
	jule::I64 _1683_i = (*_self_.alloc)._field_deallocated.len();;
	(*_self_.alloc)._field_deallocated=jule::append((*_self_.alloc)._field_deallocated,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16232_t; __jule_collection; }));
	_1daeda6b2_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("void __jule_type_deallocator", 28));
	_1daeda6b2_WriteStr(&(*_self_.alloc)._field_deallocObj, _1c005c398_Itoa(_1683_i));
	_1daeda6b2_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 56));
	_1a96a8c3b_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_deallocObj), _16232_t);
	_1daeda6b2_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit(">().dealloc(); }\n", 17));
	return _1683_i;;
}



inline jule::Str _1a9695ad5_pushAnonFn(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bb0c39_AnonFnExprModel>* _17832_m) {
	jule::Str __jule_func_result;
	jule::Bool _1793_closure = _1a882de28_IsClosure(_17832_m);;
	if (_1793_closure) {
		_1daeda6b2_WriteStr(&(*(_self_))._field_anonObj, jule::Str::lit("struct ", 7));
		jule::I64 _1834_l = _1daedb43d_Len(&(*_self_.alloc)._field_anonObj);;
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("__jule_anon_", 12));
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anonObj, _1c005bc16_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_17832_m))))._field_Func)), 15LL));
		__jule_func_result=__jule_bytesToStr(_1daedb95a_Buf(&(*_self_.alloc)._field_anonObj).slice(_1834_l));
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx{\n", 6));
		{
			auto expr = &((*((*(_17832_m))))._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad225463:;
			if (it != expr_end) {
				jule::Ptr<_1a7c7b178_Var> _18816_v = *it;
				{
					_1daeda96a_WriteByte(&(*_self_.alloc)._field_anonObj, 9LLU);
					_1a96a8c3b_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_anonObj), (*((*(_18816_v))._field_Kind))._field_Kind);
					_1daeda96a_WriteByte(&(*_self_.alloc)._field_anonObj, ' ');
					if ((*_18816_v.alloc)._field_Reference) {
						_1daeda96a_WriteByte(&(*_self_.alloc)._field_anonObj, '*');
					};
					static__1a95d464a_var(&((*_self_.alloc)._field_anonObj), _18816_v);
					_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit(";\n", 2));
				}
				_iter_next_1ad225463:;
				++it;
				goto _iter_begin_1ad225463;
			}
			_iter_end_1ad225463:;
		};
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("};\n", 3));
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("static void ", 12));
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<", 55));
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx>().dealloc(); }\n", 21));
	} else {
		__jule_func_result=jule::Str::lit("__jule_anon", 11);
		__jule_func_result+=_1c005bc16_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_17832_m))))._field_Func)), 15LL);
	};
	(*(_self_))._field_anons=jule::append((*_self_.alloc)._field_anons,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a9692ac1_anonHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a9692ac1_anonHash>(_1a9692ac1_anonHash{._field_expr=(*(_17832_m)), ._field_ident=__jule_func_result}); __jule_collection; }));
	_1a969b976_anonFuncInsDecl(_self_, _17832_m, __jule_func_result);
	_1daeda96a_WriteByte(&(*_self_.alloc)._field_anonObj, '\n');
	return __jule_func_result;;
}



inline jule::I64 _1a9695e26_pushAnyType(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _21832_t) {
	jule::Ptr<_1a7d1bc96_TypeKind> _2197_orig = _21832_t;;
	if ((_1a7d1ec00_Enum(_21832_t.ptr()) != nullptr)) {
		_21832_t=(*((*(_1a7d1ec00_Enum(_21832_t)))._field_Kind))._field_Kind;
	};
	jule::I64 _2237_i = _1a9695453_findAnyType(_self_, &(_21832_t));;
	if ((_2237_i != -1LL)) {
		return _2237_i;;
	};
	_2237_i=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _21832_t; __jule_collection; }));
	jule::Str _2293_si = _1c005c398_Itoa(_2237_i);;
	if ((_1a7d1e6d3_Sptr(_21832_t) != nullptr)) {
		_1daed18b7_StrBuilder _2318_elemKind = static__1daed1bb4_New(40LL);;
		_1a96a8c3b_kind((*_self_.alloc)._field_tc.ptr(), &(_2318_elemKind), (*(_1a7d1e6d3_Sptr(_21832_t)))._field_Elem);
		jule::I64 _2354_di = _1a9695794_pushDealloc(_self_, (*(_1a7d1e6d3_Sptr(_21832_t)))._field_Elem);;
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, _2293_si);
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, _1c005c398_Itoa(_2354_di));
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};\n", 49));
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, _2293_si);
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_1a96a4e35_asSptr((*(_self_))._field_tc, &((*_self_.alloc)._field_anyObj), _1daedb95a_Buf(&_2318_elemKind));
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, _2293_si);
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_ptrEqual(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _2544_comparable = _1a7d1d3e6_Comparable(_21832_t);;
		_1daed18b7_StrBuilder _2558_kindB = static__1daed1bb4_New(40LL);;
		_1a96a8c3b_kind((*_self_.alloc)._field_tc.ptr(), &(_2558_kindB), _21832_t);
		jule::Str _2574_kind = _1daedaea9_Str(&_2558_kindB);;
		jule::I64 _2604_di = _1a9695794_pushDealloc(_self_, _21832_t);;
		if (_2544_comparable) {
			jule::Str _2669_lmodel = jule::Str::lit("*reinterpret_cast<", 18);;
			_2669_lmodel+=_2574_kind;
			_2669_lmodel+=jule::Str::lit("*>(", 3);
			jule::Str _2699_rmodel = _2669_lmodel;;
			_2699_rmodel+=jule::Str::lit("other)", 6);
			_2669_lmodel+=jule::Str::lit("alloc)", 6);
			_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, _2293_si);
			_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { return ", 48));
			_1a95bdcc7__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_anyObj), &(_2669_lmodel), &(_2699_rmodel), &(_21832_t), &(_21832_t), static_cast<jule::U64>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
			_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; }\n", 4));
		};
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, _2293_si);
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(void *alloc) noexcept { return ", 39));
		jule::Ptr<_1a7bba8d1_Fn> _2848_decl = _1a7e9d840_RuntimeFindFn(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5)));;
		jule::Ptr<_1a7bbd8b2_FnIns> _2858_f = _1a88323d2_FindFnGenericInstance(&(_2848_decl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2197_orig; __jule_collection; }));;
		static__1a95d33c4_funcIns(&((*_self_.alloc)._field_anyObj), &(_2858_f));
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(*reinterpret_cast<", 19));
		if ((_1a7d1e969_Ptr(_21832_t) == nullptr)) {
			_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
			_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, _2574_kind);
		} else {
			_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, _2574_kind);
			_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
		};
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, _2293_si);
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, _1c005c398_Itoa(_2604_di));
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", ", 2));
		if (_2544_comparable) {
			_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".eq=__jule_any_type", 19));
			_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, _2293_si);
			_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, ", 5));
		};
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".to_str=__jule_any_type", 23));
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, _2293_si);
		_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
		if (_2544_comparable) {
			_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, _2293_si);
			_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, _2574_kind);
			_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, _2293_si);
			_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_any_type", 19));
			_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, _2293_si);
			_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _2237_i;;
}



inline void _1a96961ce_pushResultIns(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _32935_f) {
	jule::Str _3303_s = __jule_bytesToStr(_1a96adee9_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_32935_f))))._field_Result)));;
	jule::Bool _3316_ok;
	_1acba39a2_lookup((*_self_.alloc)._field_resultMap, _3303_s, nullptr, &(_3316_ok));
	if (_3316_ok) {
		return;;
	};
	(*_1acba3c5a_set(((*_self_.alloc)._field_resultMap).ptr(), _3303_s))=false;
	_1daeda6b2_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
	_1daeda6b2_WriteStr(&(*_self_.alloc)._field_resultDecls, _3303_s);
	_1daeda6b2_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1a7d21273_Tup((*((*(_32935_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad24bdb3:;
		if (it != expr_end) {
			jule::I64 _3398_i = it - expr->begin();
			jule::Ptr<_1a7d1bc96_TypeKind> _33915_t = *it;
			{
				_1daeda96a_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
				_1a96a8c3b_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_resultDecls), _33915_t);
				_1daeda96a_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
				_1daeda6b2_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_1daeda6b2_WriteStr(&(*_self_.alloc)._field_resultDecls, _1c005c398_Itoa(_3398_i));
				_1daeda6b2_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ad24bdb3:;
			++it;
			_3398_i++;
			goto _iter_begin_1ad24bdb3;
		}
		_iter_end_1ad24bdb3:;
	};
	_1daeda6b2_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1a9696487_pushResult(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bba8d1_Fn>* _35032_f) {
	if ((_1a7bbad87_IsVoid((*(_35032_f)).ptr()) || ((*((*((*(_35032_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _3547_n = (*((*(_35032_f))))._field_Instances.len();;
	if (((*((*(_35032_f))))._field_Generics.len() == 0LL)) {
		_3547_n=1LL;
	};
	{
		auto expr = (*((*(_35032_f))))._field_Instances.slice(0LL, _3547_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ad251e95:;
		if (it != expr_end) {
			jule::Ptr<_1a7bbd8b2_FnIns> _35815_ins = *it;
			{
				_1a96961ce_pushResultIns(_self_, &(_35815_ins));
			}
			_iter_next_1ad251e95:;
			++it;
			goto _iter_begin_1ad251e95;
		}
		_iter_end_1ad251e95:;
	};
}



inline void _1a96967ea_pushAndWriteMaskMapper(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bce362_Trait> _36343_t1, jule::Ptr<_1a7bce362_Trait> _36359_t2) {
	_1daed18b7_StrBuilder _3647_ident = static__1daed1bb4_New(32LL);;
	_1daeda6b2_WriteStr(&_3647_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_1daeda6b2_WriteStr(&_3647_ident, _1c005bc16_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_36359_t2)), 15LL));
	_1daeda6b2_WriteStr(&_3647_ident, jule::Str::lit("_to_", 4));
	_1daeda6b2_WriteStr(&_3647_ident, _1c005bc16_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_36343_t1)), 15LL));
	_1daeda409_Write(&(*(_self_))._field_Buf, _1daedb95a_Buf(&_3647_ident));
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad254d22:;
		if (it != expr_end) {
			_1a96926e7_traitCast _37210_m = *it;
			{
				if (((_37210_m._field_t1 == _36343_t1) && (_37210_m._field_t2 == _36359_t2))) {
					return;;
				};
			}
			_iter_next_1ad254d22:;
			++it;
			goto _iter_begin_1ad254d22;
		}
		_iter_end_1ad254d22:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,({ auto __jule_collection = jule::Slice<_1a96926e7_traitCast>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a96926e7_traitCast{._field_t1=_36343_t1, ._field_t2=_36359_t2}; __jule_collection; }));
	;
	_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void *", 6));
	_1daeda409_Write(&(*_self_.alloc)._field_anyObj, _1daedb95a_Buf(&_3647_ident));
	_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const void *data) noexcept { ", 30));
	_1daed18b7_StrBuilder _3867_t1Ident = static__1daed1bb4_New(16LL);;
	_1daed18b7_StrBuilder _3877_t2Ident = static__1daed1bb4_New(16LL);;
	static__1a95d36b0_traitDecl(&(_3867_t1Ident), _36343_t1);
	static__1a95d36b0_traitDecl(&(_3877_t2Ident), _36359_t2);
	{
		auto expr = &((*(_36343_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad25544e:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba5ca6_Struct> _39115_s1 = *it;
			{
				{
					auto expr = &((*(_36359_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad259431:;
					if (it != expr_end) {
						jule::Ptr<_1a7ba5ca6_Struct> _39211_s2 = *it;
						{
							if ((_39115_s1 == _39211_s2)) {
								{
									auto expr = &((*(_39115_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1ad25a322:;
									if (it != expr_end) {
										jule::Ptr<_1a7ba8b11_StructIns> _39418_s1i = *it;
										{
											jule::I64 _3957_i1 = _1a88317aa_FindTraitTypeOffsetS(_36343_t1, _39418_s1i);;
											jule::I64 _3967_i2 = _1a88317aa_FindTraitTypeOffsetS(_36359_t2, _39418_s1i);;
											_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (data == &", 13));
											_1daeda409_Write(&(*_self_.alloc)._field_anyObj, _1daedb95a_Buf(&_3877_t2Ident));
											_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, _1c005c398_Itoa(_3967_i2));
											_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return &", 10));
											_1daeda409_Write(&(*_self_.alloc)._field_anyObj, _1daedb95a_Buf(&_3867_t1Ident));
											_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, _1c005c398_Itoa(_3957_i1));
											_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1ad25a322:;
										++it;
										goto _iter_begin_1ad25a322;
									}
									_iter_end_1ad25a322:;
								};
							};
						}
						_iter_next_1ad259431:;
						++it;
						goto _iter_begin_1ad259431;
					}
					_iter_end_1ad259431:;
				};
			}
			_iter_next_1ad25544e:;
			++it;
			goto _iter_begin_1ad25544e;
		}
		_iter_end_1ad25544e:;
	};
	_1daeda6b2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" __jule_panic_s(\"trait casting failed because of an implementation mistake, this is a JuleC bug\"); return nullptr; }\n", 117));
}



inline void _1a9696aa3_locInfo(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7b69b05_Token>* _41425_t) {
	jule::Str *_4154_loc = &((*((*((*(_41425_t))))._field_File))._field_Path);;
	if (_1d92614d9_Production) {
		{
			
			if (_1daebc991_HasPrefix((*(_4154_loc)), _1d9257eb4_PathStdlib)) {
				_case_begin_1ad260811:;
				{
					_1a95cbae8_cstrBytes(&((*(_self_))._field_Buf), (*(_4154_loc)).slice((_1daee01ab_Dir(_1d9257eb4_PathStdlib).len() + 1LL)));
				}
			}
			else if (_1daebc991_HasPrefix((*(_4154_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1ad2608dd:;
				{
					_1a95cbae8_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_4154_loc)).slice((_1daee01ab_Dir((*(*(_self_))._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1ad260448:;
				{
					_1a95cbae8_cstrBytes(&((*(_self_))._field_Buf), (*(_4154_loc)));
				}
			}
			_match_end_1ad26036b:;
		};
	} else {
		_1a95cbae8_cstrBytes(&((*(_self_))._field_Buf), (*(_4154_loc)));
	};
	_1a9694760_write(_self_, jule::Str::lit(":", 1));
	_1a9694760_write(_self_, _1c005c398_Itoa((*((*(_41425_t))))._field_Row));
	_1a9694760_write(_self_, jule::Str::lit(":", 1));
	_1a9694760_write(_self_, _1c005c398_Itoa((*((*(_41425_t))))._field_Column));
}



inline void _1a9696ca1_head(jule::Ptr<_1a9694078_ObjectCoder> _self_) {
	_1a9688743_Time _4413_time = static__1a9688d3c_Now();;
	_1a968806c_AbsTime _4423_abs = _1a968a525_Abs(&_4413_time);;
	_1a9694760_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1a9694760_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1a9694760_write(_self_, jule::Str::lit("jule0.0.16 @master", 18));
	_1a9694760_write(_self_, jule::Str::lit("\n", 1));
	_1a9694760_write(_self_, jule::Str::lit("// Date: ", 9));
	_1a9694760_write(_self_, _1c005bc16_FmtUint(_4423_abs._field_Day, 10LL));
	_1a9694760_write(_self_, jule::Str::lit("/", 1));
	_1a9694760_write(_self_, _1c005bc16_FmtUint(_4423_abs._field_Month, 10LL));
	_1a9694760_write(_self_, jule::Str::lit("/", 1));
	_1a9694760_write(_self_, _1c005bc16_FmtUint(_4423_abs._field_Year, 10LL));
	_1a9694760_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1a9694760_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_1a9694760_write(_self_, jule::Str::lit(" ", 1));
	_1a9694760_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_1a9694760_write(_self_, jule::Str::lit("\n\n", 2));
	if (_1d92614d9_Production) {
		_1a9694760_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_1d9260dce_RC))) {
		_1a9694760_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_1d9261297_Safety))) {
		_1a9694760_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1a9697059_links(_self_, true);
	_1a9694760_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1a9694760_write(_self_, _1d92587ab_PathApi);
	_1a9694760_write(_self_, jule::Str::lit("\"\n\n", 3));
	_1a9697059_links(_self_, false);
}



inline void _1a9697059_links(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Bool _48122_std) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad26c510:;
		if (it != expr_end) {
			jule::Ptr<_1a7c36793_ImportInfo> _48210_used = *it;
			{
				{
					
					if ((!((*(_48210_used))._field_Binded))) {
						_case_begin_1ad26d346:;
						{
							goto _iter_next_1ad26c510;
						}
					}
					else if (_1d9137415_IsStdHeaderPath((*(_48210_used))._field_Path)) {
						_case_begin_1ad26d3ce:;
						{
							if ((!(_48122_std))) {
								goto _iter_next_1ad26c510;
							};
							_1a9694760_write(_self_, jule::Str::lit("#include ", 9));
							_1a9694760_write(_self_, (*_48210_used.alloc)._field_Path);
							_1a9694760_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_1d91376e0_IsValidHeaderExt(_1daede74e_Ext((*(_48210_used))._field_Path))) {
						_case_begin_1ad26d445:;
						{
							if (_48122_std) {
								goto _iter_next_1ad26c510;
							};
							_1a9694760_write(_self_, jule::Str::lit("#include \"", 10));
							_1a9694760_write(_self_, (*_48210_used.alloc)._field_Path);
							_1a9694760_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1ad26d1e2:;
				};
			}
			_iter_next_1ad26c510:;
			++it;
			goto _iter_begin_1ad26c510;
		}
		_iter_end_1ad26c510:;
	};
}



inline void _1a9697312_prepareStructure(_1a9694078_ObjectCoder* _self_, jule::Ptr<_1a7ba5ca6_Struct>* _50437_s) {
	{
		auto expr = &((*((*(_50437_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad26cea0:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba8b11_StructIns> _50515_ins = *it;
			{
				{
					auto expr = &((*(_50515_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad2720d6:;
					if (it != expr_end) {
						jule::Ptr<_1a7bba8d1_Fn> _50616_m = *it;
						{
							if ((*(_50616_m))._field_Statically) {
								goto _iter_next_1ad2720d6;
							};
							{
								auto expr = &((*_50616_m.alloc)._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ad272b97:;
								if (it != expr_end) {
									jule::Ptr<_1a7bbd8b2_FnIns> _51017_mins = *it;
									{
										jule::Ptr<_1a7bbc839_ParamIns> _51110_p = (*(_51017_mins))._field_Params[0LL];;
										_1daed18b7_StrBuilder _51210_kind = static__1daed1bb4_New(40LL);;
										_1a96a8c3b_kind((*(_self_))._field_tc.ptr(), &(_51210_kind), (*(_51110_p))._field_Kind);
										if ((!(_1a7bb97e2_IsRef((*_51110_p.alloc)._field_Decl.ptr())))) {
											_1daeda6b2_WriteStr(&_51210_kind, jule::Str::lit("*", 1));
										};
										(*_51110_p.alloc)._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a96a2e00_customType>(_1a96a2e00_customType{._field_kind=_1daedaea9_Str(&_51210_kind)}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data29)});
									}
									_iter_next_1ad272b97:;
									++it;
									goto _iter_begin_1ad272b97;
								}
								_iter_end_1ad272b97:;
							};
						}
						_iter_next_1ad2720d6:;
						++it;
						goto _iter_begin_1ad2720d6;
					}
					_iter_end_1ad2720d6:;
				};
			}
			_iter_next_1ad26cea0:;
			++it;
			goto _iter_begin_1ad26cea0;
		}
		_iter_end_1ad26cea0:;
	};
}



inline void _1a9697510_prepareStructures(jule::Ptr<_1a9694078_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad26beb0:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba5ca6_Struct> _52815_s = *it;
			{
				if (((*(_52815_s))._field_Token != nullptr)) {
					_1a9697312_prepareStructure(_self_.ptr(), &(_52815_s));
				};
			}
			_iter_next_1ad26beb0:;
			++it;
			goto _iter_begin_1ad26beb0;
		}
		_iter_end_1ad26beb0:;
	};
}



inline void _1a96977b8_structurePlainDecl(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7ba5ca6_Struct>* _53540_s) {
	{
		auto expr = &((*((*(_53540_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad277284:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba8b11_StructIns> _53615_ins = *it;
			{
				_1a9694760_write(_self_, jule::Str::lit("struct ", 7));
				static__1a95d4073_structureIns(&((*_self_.alloc)._field_Buf), &(_53615_ins));
				_1a9694760_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ad277284:;
			++it;
			goto _iter_begin_1ad277284;
		}
		_iter_end_1ad277284:;
	};
}



inline void _1a96979b6_structurePlainDecls(jule::Ptr<_1a9694078_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2788a1:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba5ca6_Struct> _54415_s = *it;
			{
				if (((*(_54415_s))._field_Token != nullptr)) {
					_1a96977b8_structurePlainDecl(_self_, &(_54415_s));
				};
			}
			_iter_next_1ad2788a1:;
			++it;
			goto _iter_begin_1ad2788a1;
		}
		_iter_end_1ad2788a1:;
	};
}



inline void _1a9697c6e_fieldDecl(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7ba8061_FieldIns>* _55131_f) {
	_1a96a8c3b_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_55131_f))))._field_Kind);
	_1a9694760_write(_self_, jule::Str::lit(" ", 1));
	static__1a95d435e_field(&((*_self_.alloc)._field_Buf), &((*((*(_55131_f))))._field_Decl));
	_1a9694760_write(_self_, jule::Str::lit(";", 1));
}



inline void _1a9698027_structureDestructor(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _55841_s) {
	;
	jule::Ptr<_1a7bba8d1_Fn> _5617_disposeMethod = _1a7ba9bab_FindMethod((*(_55841_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _5627_disposed = static__1a7c7c773_Dispose(_5617_disposeMethod);;
	if ((!(_5627_disposed))) {
		return;;
	};
	_1a9694760_write(_self_, jule::Str::lit("~", 1));
	static__1a95d4073_structureIns(&((*_self_.alloc)._field_Buf), _55841_s);
	_1a9694760_write(_self_, jule::Str::lit("(void) { ", 9));
	static__1a95d30d8_func(&((*_self_.alloc)._field_Buf), &(_5617_disposeMethod));
	_1a9694760_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1a9698445_structureOperatorEq(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Str _57436_ident, jule::Ptr<_1a7ba8b11_StructIns>* _57453_s, jule::Bool _57468_decl) {
	if ((!(_1a96a1926_defaultEq(_57453_s)))) {
		return;;
	};
	_1a9694760_write(_self_, jule::Str::lit("\n", 1));
	if (_1a8849a26_Inline) {
		_1a9694760_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1a9694760_write(_self_, jule::Str::lit("jule::Bool ", 11));
	_1a9694760_write(_self_, _57436_ident);
	_1a9694760_write(_self_, jule::Str::lit("_eq", 3));
	_1a9694760_write(_self_, jule::Str::lit("(", 1));
	_1a9694760_write(_self_, _57436_ident);
	_1a9694760_write(_self_, jule::Str::lit(" *_self_, ", 10));
	_1a9694760_write(_self_, _57436_ident);
	_1a9694760_write(_self_, jule::Str::lit(" _other_)", 9));
	if (_57468_decl) {
		_1a9694760_write(_self_, jule::Str::lit(";\n\n", 3));
		return;;
	};
	_1a9694760_write(_self_, jule::Str::lit(" {", 2));
	if (((*((*(_57453_s))))._field_Fields.len() == 0LL)) {
		_1a9694760_write(_self_, jule::Str::lit(" return true; }\n\n", 17));
		return;;
	};
	_1a9694c16_addIndent(_self_);
	_1a9694760_write(_self_, jule::Str::lit("\n", 1));
	_1a9695112_indent(_self_);
	_1a9694760_write(_self_, jule::Str::lit("return ", 7));
	_1a9694c16_addIndent(_self_);
	jule::Bool _6057_writed = false;;
	jule::Str _6087_lmodel = jule::Str::lit("_self_->", 8);;
	jule::Str _6097_rmodel = jule::Str::lit("_other_.", 8);;
	{
		auto expr = &((*((*(_57453_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad286617:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba8061_FieldIns> _61115_f = *it;
			{
				jule::Ptr<_1a7ba8b11_StructIns> _6134_strct = _1a7d209c0_Struct((*(_61115_f))._field_Kind.ptr());;
				if ((((_6134_strct != nullptr) && ((*_6134_strct.alloc)._field_Decl != nullptr)) && (*(*(_6134_strct))._field_Decl.alloc)._field_Binded)) {
					goto _iter_next_1ad286617;
				};
				if (_6057_writed) {
					_1a9694760_write(_self_, jule::Str::lit(" &&", 3));
				};
				_6057_writed=true;
				_1a9694760_write(_self_, jule::Str::lit("\n", 1));
				_1a9695112_indent(_self_);
				_1daed18b7_StrBuilder _6248_fIdent = static__1daed1bb4_New((*((*_61115_f.alloc)._field_Decl))._field_Ident.len());;
				static__1a95d435e_field(&(_6248_fIdent), &((*_61115_f.alloc)._field_Decl));
				_6087_lmodel+=_1d7e4d98b_BytesStr(_1daedb95a_Buf(&_6248_fIdent));
				_6097_rmodel+=_1d7e4d98b_BytesStr(_1daedb95a_Buf(&_6248_fIdent));
				_1a95bdcc7__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_Buf), &(_6087_lmodel), &(_6097_rmodel), &((*_61115_f.alloc)._field_Kind), &((*_61115_f.alloc)._field_Kind), static_cast<jule::U64>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
				(_6087_lmodel).mut_slice(0LL, (_6087_lmodel.len() - _1daedb43d_Len(&_6248_fIdent)));;
				_6097_rmodel=_6087_lmodel.slice(0LL, (_6097_rmodel.len() - _1daedb43d_Len(&_6248_fIdent)));
			}
			_iter_next_1ad286617:;
			++it;
			goto _iter_begin_1ad286617;
		}
		_iter_end_1ad286617:;
	};
	_1a9694e14_doneIndent(_self_);
	if ((!(_6057_writed))) {
		_1a9694760_write(_self_, jule::Str::lit("true", 4));
	};
	_1a9694760_write(_self_, jule::Str::lit(";\n", 2));
	_1a9694e14_doneIndent(_self_);
	_1a9695112_indent(_self_);
	_1a9694760_write(_self_, jule::Str::lit("}\n\n", 3));
}



inline void _1a96987a8_structureOperators(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _64240_s, jule::Bool _64255_decl) {
	_1daed18b7_StrBuilder _6437_sb = static__1daed1bb4_New(40LL);;
	static__1a95d4073_structureIns(&(_6437_sb), _64240_s);
	jule::Str _6453_ident = _1daedaea9_Str(&_6437_sb);;
	_1a9698445_structureOperatorEq(_self_, _6453_ident, _64240_s, _64255_decl);
}



inline void _1a9698a61_structureInsDecl(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _65138_s) {
	{
		auto expr = &((*((*(_65138_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad290830:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _65215_m = *it;
			{
				if (_1a96a165c_isHeadDecl(&(_65215_m))) {
					_1a9699db4_funcDecl(_self_, &(_65215_m), false);
				};
			}
			_iter_next_1ad290830:;
			++it;
			goto _iter_begin_1ad290830;
		}
		_iter_end_1ad290830:;
	};
	_1a9694760_write(_self_, jule::Str::lit("struct ", 7));
	static__1a95d4073_structureIns(&((*_self_.alloc)._field_Buf), _65138_s);
	_1a9694760_write(_self_, jule::Str::lit(" {\n", 3));
	_1a9694c16_addIndent(_self_);
	{
		auto expr = &((*((*(_65138_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad292238:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba8061_FieldIns> _66315_f = *it;
			{
				_1a9695112_indent(_self_);
				_1a9697c6e_fieldDecl(_self_, &(_66315_f));
				_1a9694760_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1ad292238:;
			++it;
			goto _iter_begin_1ad292238;
		}
		_iter_end_1ad292238:;
	};
	_1a9695112_indent(_self_);
	_1a9698027_structureDestructor(_self_, _65138_s);
	_1a9694760_write(_self_, jule::Str::lit("\n\n", 2));
	_1a9694e14_doneIndent(_self_);
	_1a9695112_indent(_self_);
	_1a9694760_write(_self_, jule::Str::lit("};", 2));
	;
	_1a96987a8_structureOperators(_self_, _65138_s, true);
}



inline void _1a9698d19_structureDecl(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7ba5ca6_Struct>* _68135_s) {
	{
		auto expr = &((*((*(_68135_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad295c97:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba8b11_StructIns> _68215_ins = *it;
			{
				_1a9698a61_structureInsDecl(_self_, &(_68215_ins));
			}
			_iter_next_1ad295c97:;
			++it;
			goto _iter_begin_1ad295c97;
		}
		_iter_end_1ad295c97:;
	};
}



inline void _1a9699017_structureDecls(jule::Ptr<_1a9694078_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad296539:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba5ca6_Struct> _68815_s = *it;
			{
				if (((*(_68815_s))._field_Token != nullptr)) {
					_1a9698d19_structureDecl(_self_, &(_68815_s));
					_1a9694760_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1ad296539:;
			++it;
			goto _iter_begin_1ad296539;
		}
		_iter_end_1ad296539:;
	};
}



inline void _1a9699215_structureMethodDecls(jule::Ptr<_1a9694078_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad29755c:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba5ca6_Struct> _69715_s = *it;
			{
				if (((*(_69715_s))._field_Token != nullptr)) {
					{
						auto expr = &((*_69715_s.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ad299680:;
						if (it != expr_end) {
							jule::Ptr<_1a7ba8b11_StructIns> _69917_ins = *it;
							{
								{
									auto expr = &((*(_69917_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1ad29a0cb:;
									if (it != expr_end) {
										jule::Ptr<_1a7bba8d1_Fn> _70018_m = *it;
										{
											if ((!(_1a96a165c_isHeadDecl(&(_70018_m))))) {
												_1a9696487_pushResult(_self_, &(_70018_m));
												_1a9699db4_funcDecl(_self_, &(_70018_m), false);
											};
										}
										_iter_next_1ad29a0cb:;
										++it;
										goto _iter_begin_1ad29a0cb;
									}
									_iter_end_1ad29a0cb:;
								};
							}
							_iter_next_1ad299680:;
							++it;
							goto _iter_begin_1ad299680;
						}
						_iter_end_1ad299680:;
					};
				};
			}
			_iter_next_1ad29755c:;
			++it;
			goto _iter_begin_1ad29755c;
		}
		_iter_end_1ad29755c:;
	};
}



inline void _1a96996dd_funcHead(jule::Ptr<_1a9694078_ObjectCoder> _self_, _1daed18b7_StrBuilder* _71530_buf, jule::Ptr<_1a7bbd8b2_FnIns>* _71552_f, jule::Bool _71563_ptr, jule::Str _71574_ident) {
	if ((((!(_71563_ptr)) && _1a8849a26_Inline) && (!(_1a7bbb3a4_IsEntryPoint((*((*(_71552_f))))._field_Decl.ptr()))))) {
		_1daeda6b2_WriteStr(_71530_buf, jule::Str::lit("inline ", 7));
	};
	_1a96a8202_funcInsResult((*(_self_))._field_tc.ptr(), _71530_buf, _71552_f);
	if (_71563_ptr) {
		_1daeda6b2_WriteStr(_71530_buf, jule::Str::lit("(*", 2));
		static__1a95d33c4_funcIns(_71530_buf, _71552_f);
		_1daeda96a_WriteByte(_71530_buf, ')');
	} else {
		_1daeda96a_WriteByte(_71530_buf, ' ');
		if ((_71574_ident).empty()) {
			static__1a95d33c4_funcIns(_71530_buf, _71552_f);
		} else {
			_1daeda6b2_WriteStr(_71530_buf, _71574_ident);
		};
	};
}



inline void _1a9699a51_funcDeclIns(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _73433_f, jule::Bool _73444_ptr) {
	_1a9695112_indent(_self_);
	_1a96996dd_funcHead(_self_, &((*_self_.alloc)._field_Buf), _73433_f, _73444_ptr, jule::Str());
	_1a969aee7_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _73433_f);
	_1a9694760_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1a9699db4_funcDecl(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bba8d1_Fn>* _74130_f, jule::Bool _74138_ptr) {
	{
		auto expr = &((*((*(_74130_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2a1313:;
		if (it != expr_end) {
			jule::Ptr<_1a7bbd8b2_FnIns> _74215_c = *it;
			{
				_1a9699a51_funcDeclIns(_self_, &(_74215_c), _74138_ptr);
			}
			_iter_next_1ad2a1313:;
			++it;
			goto _iter_begin_1ad2a1313;
		}
		_iter_end_1ad2a1313:;
	};
}



inline void _1a969a16c_funcDeclTrait(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bba8d1_Fn>* _74735_f) {
	{
		auto expr = &((*((*(_74735_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2a2248:;
		if (it != expr_end) {
			jule::Ptr<_1a7bbd8b2_FnIns> _74815_c = *it;
			{
				jule::Ptr<_1a7d1bc96_TypeKind> _7498_k = (*((*(_74815_c))._field_Params[0LL]))._field_Kind;;
				(*((*(_74815_c))._field_Params[0LL]))._field_Kind=_1a9692010_generalGCPtr;
				_1a9699a51_funcDeclIns(_self_, &(_74815_c), true);
				(*((*(_74815_c))._field_Params[0LL]))._field_Kind=_7498_k;
			}
			_iter_next_1ad2a2248:;
			++it;
			goto _iter_begin_1ad2a2248;
		}
		_iter_end_1ad2a2248:;
	};
}



inline void _1a969a36a_funcDecls(jule::Ptr<_1a9694078_ObjectCoder> _self_) {
	_1a882a386_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a7c396b9_Package>*>((void*)__jule_anon_1ad2a4e71, jule::Ptr<__jule_anon_1ad2a4e71_ctx>::make(__jule_anon_1ad2a4e71_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad2a4e71_ctx_handler));
}



inline void _1a969a623_traitDataTypeMethods(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bce362_Trait>* _76942_t) {
	_1a882b233_IterTraitMethods(_76942_t, jule::__new_closure<void,jule::Ptr<_1a7bba8d1_Fn>*>((void*)__jule_anon_1ad2a644a, jule::Ptr<__jule_anon_1ad2a644a_ctx>::make(__jule_anon_1ad2a644a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad2a644a_ctx_handler));
}



inline void _1a969a821_traitDataTypes(jule::Ptr<_1a9694078_ObjectCoder> _self_) {
	_1a882a386_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a7c396b9_Package>*>((void*)__jule_anon_1ad2abab0, jule::Ptr<__jule_anon_1ad2abab0_ctx>::make(__jule_anon_1ad2abab0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad2abab0_ctx_handler));
}



inline void _1a969ab84_paramIns(jule::Ptr<_1a9694078_ObjectCoder> _self_, _1daed18b7_StrBuilder* _80530_buf, jule::Ptr<_1a7bbc839_ParamIns>* _80552_p) {
	_1a96a7a2b_paramIns((*(_self_))._field_tc.ptr(), _80530_buf, _80552_p);
	_1daeda96a_WriteByte(_80530_buf, ' ');
	static__1a95d399b_param(_80530_buf, &((*((*(_80552_p))))._field_Decl));
}



inline void _1a969aee7_paramsIns(jule::Ptr<_1a9694078_ObjectCoder> _self_, _1daed18b7_StrBuilder* _81131_buf, jule::Ptr<_1a7bbd8b2_FnIns>* _81153_f) {
	if (((!((*((*(_81153_f))))._field_AsAnon)) && ((*((*(_81153_f))))._field_Params.len() == 0LL))) {
		_1daeda6b2_WriteStr(_81131_buf, jule::Str::lit("(void)", 6));
		return;;
	};
	_1daeda96a_WriteByte(_81131_buf, '(');
	if ((*((*(_81153_f))))._field_AsAnon) {
		_1daeda6b2_WriteStr(_81131_buf, jule::Str::lit("jule::Ptr<jule::Uintptr> __f_ctx", 32));
		if (((*((*(_81153_f))))._field_Params.len() > 0LL)) {
			_1daeda6b2_WriteStr(_81131_buf, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_81153_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2b4da4:;
		if (it != expr_end) {
			jule::I64 _8238_i = it - expr->begin();
			jule::Ptr<_1a7bbc839_ParamIns> _82315_p = *it;
			{
				_1a969ab84_paramIns(_self_, _81131_buf, &(_82315_p));
				if ((((*((*(_81153_f))))._field_Params.len() - _8238_i) > 1LL)) {
					_1daeda6b2_WriteStr(_81131_buf, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1ad2b4da4:;
			++it;
			_8238_i++;
			goto _iter_begin_1ad2b4da4;
		}
		_iter_end_1ad2b4da4:;
	};
	_1daeda96a_WriteByte(_81131_buf, ')');
}



inline void _1a969b35a_varInitExpr(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7c7b178_Var>* _83233_v, jule::Fn<void> _83242_init) {
	if ((*((*(_83233_v))))._field_Statically) {
		_1a9694760_write(_self_, jule::Str::lit("static ", 7));
	};
	_1a96a8c3b_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_83233_v))))._field_Kind))._field_Kind);
	_1a9694760_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_83233_v))))._field_Reference) {
		_1a9694760_write(_self_, jule::Str::lit("*", 1));
	};
	static__1a95d464a_var(&((*_self_.alloc)._field_Buf), (*(_83233_v)));
	if ((_83242_init != nullptr)) {
		_1a9694760_write(_self_, jule::Str::lit(" = ", 3));
		_83242_init();
	};
	_1a9694760_write(_self_, jule::Str::lit(";", 1));
}



inline void _1a969b613_var(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7c7b178_Var> _85024_v) {
	if (_1a7b6c4dc_IsIgnoreIdent((*(_85024_v))._field_Ident)) {
		return;;
	};
	if ((((*_85024_v.alloc)._field_Value != nullptr) && ((*(*(_85024_v))._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*(_85024_v))._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_85024_v.alloc)._field_Reference) {
				_1a969b35a_varInitExpr(_self_, &(_85024_v), jule::__new_closure<void>((void*)__jule_anon_1ad2bc263, jule::Ptr<__jule_anon_1ad2bc263_ctx>::make(__jule_anon_1ad2bc263_ctx{._self_=_self_,._85024_v=_85024_v}).as<jule::Uintptr>(), __jule_anon_1ad2bc263_ctx_handler));
			} else {
				_1a969b35a_varInitExpr(_self_, &(_85024_v), jule::__new_closure<void>((void*)__jule_anon_1ad2be353, jule::Ptr<__jule_anon_1ad2be353_ctx>::make(__jule_anon_1ad2be353_ctx{._self_=_self_,._85024_v=_85024_v}).as<jule::Uintptr>(), __jule_anon_1ad2be353_ctx_handler));
			};
			return;;
		};
		_1a969b35a_varInitExpr(_self_, &(_85024_v), nullptr);
		return;;
	};
	if ((*_85024_v.alloc)._field_Reference) {
		_1a969b35a_varInitExpr(_self_, &(_85024_v), jule::__new_closure<void>((void*)__jule_anon_1ad2c1a5e, jule::Ptr<__jule_anon_1ad2c1a5e_ctx>::make(__jule_anon_1ad2c1a5e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad2c1a5e_ctx_handler));
		return;;
	};
	if (_1a96b0db9_shouldInitialized(&((*((*_85024_v.alloc)._field_Kind))._field_Kind))) {
		_1a969b35a_varInitExpr(_self_, &(_85024_v), jule::__new_closure<void>((void*)__jule_anon_1ad2c2c08, jule::Ptr<__jule_anon_1ad2c2c08_ctx>::make(__jule_anon_1ad2c2c08_ctx{._self_=_self_,._85024_v=_85024_v}).as<jule::Uintptr>(), __jule_anon_1ad2c2c08_ctx_handler));
		return;;
	};
	_1a969b35a_varInitExpr(_self_, &(_85024_v), nullptr);
}



inline void _1a969b976_anonFuncInsDecl(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bb0c39_AnonFnExprModel>* _88137_m, jule::Str _88158_ident) {
	_1a96996dd_funcHead(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_88137_m))))._field_Func), false, _88158_ident);
	_1a969aee7_paramsIns(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_88137_m))))._field_Func));
	_1daeda96a_WriteByte(&(*_self_.alloc)._field_anonObj, ';');
}



inline void _1a969bcd9_anonFuncIns(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bb0c39_AnonFnExprModel>* _88733_m, jule::Str _88754_ident) {
	_1a96996dd_funcHead(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_88733_m))))._field_Func), false, _88754_ident);
	_1a969aee7_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_88733_m))))._field_Func));
	_1a9694760_write(_self_, jule::Str::lit(" ", 1));
	_1a95b79d5_anonFuncScope((*_self_.alloc)._field_sc, (*(_88733_m)), _88754_ident);
	if (((*((*((*(_88733_m))))._field_Func))._field_Scope != nullptr)) {
		_1a9694760_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1a969c14c_funcIns(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bbd8b2_FnIns>* _89729_f, jule::Str _89740_ident) {
	_1a96996dd_funcHead(_self_, &((*_self_.alloc)._field_Buf), _89729_f, false, _89740_ident);
	_1a969aee7_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _89729_f);
	_1a9694760_write(_self_, jule::Str::lit(" ", 1));
	_1a95b7c8d_funcScope((*_self_.alloc)._field_sc, (*(_89729_f)));
	if (((*((*(_89729_f))))._field_Scope != nullptr)) {
		_1a9694760_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1a969c405_func(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bba8d1_Fn>* _90726_f) {
	{
		auto expr = &((*((*(_90726_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2cb53b:;
		if (it != expr_end) {
			jule::Ptr<_1a7bbd8b2_FnIns> _90815_ins = *it;
			{
				_1a969c14c_funcIns(_self_, &(_90815_ins), jule::Str());
			}
			_iter_next_1ad2cb53b:;
			++it;
			goto _iter_begin_1ad2cb53b;
		}
		_iter_end_1ad2cb53b:;
	};
}



inline void _1a969c768_funcTrait(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _91327_s, jule::Ptr<_1a7bbd8b2_FnIns>* _91347_f) {
	(*((*(_91347_f))))._field_Scope=nullptr;
	_1daed18b7_StrBuilder _9167_nident = static__1daed1bb4_New(30LL);;
	_1daeda6b2_WriteStr(&_9167_nident, jule::Str::lit("__jule_trait_method_", 20));
	_1daeda6b2_WriteStr(&_9167_nident, _1c005bc16_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_91347_f)))), 15LL));
	_1daeda6b2_WriteStr(&_9167_nident, jule::Str::lit("_", 1));
	_1daeda6b2_WriteStr(&_9167_nident, _1c005bc16_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_91327_s)))), 15LL));
	jule::Ptr<_1a7d1bc96_TypeKind> _9227_k = (*((*((*(_91347_f))))._field_Params[0LL]))._field_Kind;;
	(*((*((*(_91347_f))))._field_Params[0LL]))._field_Kind=_1a9692010_generalGCPtr;
	_1a969c14c_funcIns(_self_, _91347_f, _1daedaea9_Str(&_9167_nident));
	(*((*((*(_91347_f))))._field_Params[0LL]))._field_Kind=_9227_k;
}



inline __jule_tuple_x_1a7bbd8b2_FnIns__jule_tuple_bool _1a969caa9_findTraitMetMap(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bba8d1_Fn>* _92837_m) {
	__jule_tuple_x_1a7bbd8b2_FnIns__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a7bbd8b2_FnIns> _9297_mins = (*((*(_92837_m))))._field_Instances[0LL];;
	{
		_1acc07b7c_mapIterator it = _1acbeebeb_iterator((*(_self_))._field_traitMetMap);
		_iter_begin_1ad2d1d16:;
		__jule_tuple_px_1a7bbd8b2_FnIns__jule_tuple_psuintptr __iterator_result = _1acc08364_next(&it);
		if (__iterator_result.__jule_result_arg0 != nullptr) {
			jule::Ptr<_1a7bbd8b2_FnIns> _93012_f = *__iterator_result.__jule_result_arg0;
			{
				if (((((*((*(_93012_f))._field_Decl))._field_Public == (*((*(_92837_m))))._field_Public) && ((*(*(_93012_f))._field_Decl.alloc)._field_Ident == (*((*(_92837_m))))._field_Ident)) && _1a7bbe51c_EqualFn(_93012_f, &(_9297_mins)))) {
					__jule_func_result.__jule_result_arg0 = _93012_f;
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1ad2d1d16:;
			goto _iter_begin_1ad2d1d16;
		}
		_iter_end_1ad2d1d16:;
	};
	__jule_func_result.__jule_result_arg0 = _9297_mins;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline void _1a969ce1c_traitWrapper(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bce362_Trait>* _94034_t, jule::Ptr<_1a7bba8d1_Fn>* _94050_m) {
	_julec_label_1ad2d4544:;
	{
		auto expr = &((*((*(_94034_t))))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2d46ed:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba5ca6_Struct> _94215_imp = *it;
			{
				jule::Ptr<_1a7bbd8b2_FnIns> _9438_mepf;
				jule::Bool _94314_exist;
				({
					__jule_tuple_x_1a7bbd8b2_FnIns__jule_tuple_bool __jule_assign_result = _1a969caa9_findTraitMetMap(_self_, _94050_m);
					_9438_mepf = __jule_assign_result.__jule_result_arg0;
					_94314_exist = __jule_assign_result.__jule_result_arg1;
				});
				if (_94314_exist) {
					jule::Slice<jule::Uintptr> _9469_vals = _1acbee3d2_get((*_self_.alloc)._field_traitMetMap, _9438_mepf);;
					{
						auto expr = &(_9469_vals);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ad2d66cd:;
						if (it != expr_end) {
							jule::Uintptr _94712_val = *it;
							{
								if ((_94712_val == static_cast<jule::Uintptr>(_94215_imp))) {
									goto _iter_next_1ad2d46ed;
								};
							}
							_iter_next_1ad2d66cd:;
							++it;
							goto _iter_begin_1ad2d66cd;
						}
						_iter_end_1ad2d66cd:;
					};
					(*_1acbee536_set(((*_self_.alloc)._field_traitMetMap).ptr(), _9438_mepf))=jule::append(_9469_vals,({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_94215_imp); __jule_collection; }));
				} else {
					(*_1acbee536_set(((*_self_.alloc)._field_traitMetMap).ptr(), _9438_mepf))=jule::append(({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }),({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_94215_imp); __jule_collection; }));
				};
				{
					auto expr = &((*(_94215_imp))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad2d7415:;
					if (it != expr_end) {
						jule::Ptr<_1a7ba8b11_StructIns> _95716_ins = *it;
						{
							_1a969c768_funcTrait(_self_, &(_95716_ins), &(_9438_mepf));
							;
							jule::Ptr<_1a7bba8d1_Fn> _9619_sm = _1a7ba9bab_FindMethod(_95716_ins.ptr(), (*((*(_94050_m))))._field_Ident, false);;
							if (((_9619_sm == nullptr) || ((*(_9619_sm))._field_Instances.len() == 0LL))) {
								return;;
							};
							_1a9694c16_addIndent(_self_);
							_1a9694760_write(_self_, jule::Str::lit("{\n", 2));
							_1a9695112_indent(_self_);
							if (((*((*(_94050_m))))._field_Exceptional || (!(_1a7bbad87_IsVoid((*(_94050_m)).ptr()))))) {
								_1a9694760_write(_self_, jule::Str::lit("return ", 7));
							};
							static__1a95d30d8_func(&((*_self_.alloc)._field_Buf), &(_9619_sm));
							_1a9694760_write(_self_, jule::Str::lit("(", 1));
							_1a9694760_write(_self_, jule::Str::lit("_self_.as<", 10));
							_1a96a6ee2_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _95716_ins);
							_1a9694760_write(_self_, jule::Str::lit(">()", 3));
							jule::Bool _9785_ptr = (!(_1a7bb97e2_IsRef((*((*(_94050_m))))._field_Params[0LL].ptr())));;
							if (_9785_ptr) {
								_1a9694760_write(_self_, jule::Str::lit(".alloc", 6));
							};
							{
								auto expr = (*((*(_94050_m))))._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_1ad2de2eb:;
								if (it != expr_end) {
									jule::Ptr<_1a7bb8e0c_Param> _98212_mp = *it;
									{
										_1a9694760_write(_self_, jule::Str::lit(", ", 2));
										static__1a95d399b_param(&((*_self_.alloc)._field_Buf), &(_98212_mp));
									}
									_iter_next_1ad2de2eb:;
									++it;
									goto _iter_begin_1ad2de2eb;
								}
								_iter_end_1ad2de2eb:;
							};
							_1a9694760_write(_self_, jule::Str::lit(");\n}\n", 5));
							_1a9694e14_doneIndent(_self_);
						}
						_iter_next_1ad2d7415:;
						++it;
						goto _iter_begin_1ad2d7415;
					}
					_iter_end_1ad2d7415:;
				};
			}
			_iter_next_1ad2d46ed:;
			++it;
			goto _iter_begin_1ad2d46ed;
		}
		_iter_end_1ad2d46ed:;
	};
}



inline void _1a969d11a_traitWrappers(jule::Ptr<_1a9694078_ObjectCoder> _self_) {
	_1a882a386_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a7c396b9_Package>*>((void*)__jule_anon_1ad2e0dbe, jule::Ptr<__jule_anon_1ad2e0dbe_ctx>::make(__jule_anon_1ad2e0dbe_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad2e0dbe_ctx_handler));
}



inline void _1a969d47d_traitDataMethods(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bce362_Trait>* _100738_t, jule::Ptr<_1a7ba8b11_StructIns> _100749_s) {
	_1a882b233_IterTraitMethods(_100738_t, jule::__new_closure<void,jule::Ptr<_1a7bba8d1_Fn>*>((void*)__jule_anon_1ad2e2244, jule::Ptr<__jule_anon_1ad2e2244_ctx>::make(__jule_anon_1ad2e2244_ctx{._self_=_self_,._100749_s=_100749_s}).as<jule::Uintptr>(), __jule_anon_1ad2e2244_ctx_handler));
}



inline void _1a969d89b_traitData(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7bce362_Trait>* _102431_t, jule::I64 _102442_i, jule::Ptr<_1a7ba8b11_StructIns>* _102455_s) {
	_1daed18b7_StrBuilder _10257_ident = static__1daed1bb4_New((*((*(_102431_t))))._field_Ident.len());;
	static__1a95d36b0_traitDecl(&(_10257_ident), (*(_102431_t)));
	_1a9694760_write(_self_, jule::Str::lit("static ", 7));
	_1a9694a18_writeBytes(_self_, _1daedb95a_Buf(&_10257_ident));
	_1a9694760_write(_self_, jule::Str::lit("MptrData ", 9));
	_1a9694a18_writeBytes(_self_, _1daedb95a_Buf(&_10257_ident));
	_1a9694760_write(_self_, jule::Str::lit("_mptr_data", 10));
	_1a9694760_write(_self_, _1c005c398_Itoa(_102442_i));
	_1a9694760_write(_self_, jule::Str::lit(" {\n", 3));
	_1a9694c16_addIndent(_self_);
	_1a9695112_indent(_self_);
	_1a9694760_write(_self_, jule::Str::lit(".dealloc=__jule_type_deallocator", 32));
	_1a9694760_write(_self_, _1c005c398_Itoa(_1a9695794_pushDealloc(_self_, jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_102455_s)), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data0)}))));
	_1a9694760_write(_self_, jule::Str::lit(",\n", 2));
	_1a969d47d_traitDataMethods(_self_, _102431_t, (*(_102455_s)));
	_1a9694e14_doneIndent(_self_);
	_1a9694760_write(_self_, jule::Str::lit("};\n", 3));
}



inline void _1a969da99_traitDatas(jule::Ptr<_1a9694078_ObjectCoder> _self_) {
	_1a882a386_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a7c396b9_Package>*>((void*)__jule_anon_1ad2eeac0, jule::Ptr<__jule_anon_1ad2eeac0_ctx>::make(__jule_anon_1ad2eeac0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad2eeac0_ctx_handler));
}



inline void _1a969dc97_globalDecls(jule::Ptr<_1a9694078_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2ee460:;
		if (it != expr_end) {
			jule::Ptr<_1a7c7b178_Var> _106115_v = *it;
			{
				_1a96a8c3b_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_106115_v))._field_Kind))._field_Kind);
				_1a9694760_write(_self_, jule::Str::lit(" ", 1));
				static__1a95d464a_var(&((*_self_.alloc)._field_Buf), _106115_v);
				_1a9694760_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ad2ee460:;
			++it;
			goto _iter_begin_1ad2ee460;
		}
		_iter_end_1ad2ee460:;
	};
}



inline void _1a969de95_decls(jule::Ptr<_1a9694078_ObjectCoder> _self_) {
	_1a96979b6_structurePlainDecls(_self_);
	_1a9699017_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_1daedb43d_Len(&(*_self_.alloc)._field_Buf);
	_1a9699215_structureMethodDecls(_self_);
	_1a969a36a_funcDecls(_self_);
	_1a9694760_write(_self_, jule::Str::lit("\n\n", 2));
	_1a969a821_traitDataTypes(_self_);
	_1a9694760_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_wrapPos=_1daedb43d_Len(&(*_self_.alloc)._field_Buf);
	_1a969d11a_traitWrappers(_self_);
	_1a9694760_write(_self_, jule::Str::lit("\n\n", 2));
	_1a969da99_traitDatas(_self_);
	_1a9694760_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_1daedb43d_Len(&(*_self_.alloc)._field_Buf);
	_1a969dc97_globalDecls(_self_);
}



inline void _1a969e24d_structureMethods(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _108738_s) {
	{
		auto expr = &((*((*(_108738_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad30e717:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _108815_f = *it;
			{
				_1a969c405_func(_self_, &(_108815_f));
				_1a9694760_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1ad30e717:;
			++it;
			goto _iter_begin_1ad30e717;
		}
		_iter_end_1ad30e717:;
	};
}



inline void _1a969e506_structureIns(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7ba8b11_StructIns>* _109434_s) {
	;
	_1a96987a8_structureOperators(_self_, _109434_s, false);
	_1a969e24d_structureMethods(_self_, _109434_s);
}



inline void _1a969e7ae_structure(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7ba5ca6_Struct>* _110031_s) {
	{
		auto expr = &((*((*(_110031_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad311be2:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba8b11_StructIns> _110115_ins = *it;
			{
				_1a969e506_structureIns(_self_, &(_110115_ins));
				_1a9694760_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1ad311be2:;
			++it;
			goto _iter_begin_1ad311be2;
		}
		_iter_end_1ad311be2:;
	};
}



inline void _1a969e9ac_structures(jule::Ptr<_1a9694078_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad31242e:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba5ca6_Struct> _110815_s = *it;
			{
				if (((*(_110815_s))._field_Token != nullptr)) {
					_1a969e7ae_structure(_self_, &(_110815_s));
					_1a9694760_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1ad31242e:;
			++it;
			goto _iter_begin_1ad31242e;
		}
		_iter_end_1ad31242e:;
	};
}



inline void _1a969ebaa_funcs(jule::Ptr<_1a9694078_ObjectCoder> _self_) {
	_1a882a386_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a7c396b9_Package>*>((void*)__jule_anon_1ad315058, jule::Ptr<__jule_anon_1ad315058_ctx>::make(__jule_anon_1ad315058_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad315058_ctx_handler));
}



inline void _1a969ee63_pushInit(jule::Ptr<_1a9694078_ObjectCoder> _self_, jule::Ptr<_1a7c396b9_Package>* _113230_pkg) {
	_1a882a6b6_IterFiles(_113230_pkg, jule::__new_closure<void,jule::Ptr<_1a7ccd9e4_SymbolTable>*>((void*)__jule_anon_1ad316532, jule::Ptr<__jule_anon_1ad316532_ctx>::make(__jule_anon_1ad316532_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad316532_ctx_handler));
}



inline void _1a96a0161_anonHashes(jule::Ptr<_1a9694078_ObjectCoder> _self_) {
	_julec_label_1ad319bea:;
	jule::Slice<jule::Ptr<_1a9692ac1_anonHash>> _11497_anons = (*(_self_))._field_anons;;
	(*_self_.alloc)._field_anons=nullptr;
	{
		auto expr = &(_11497_anons);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad31b779:;
		if (it != expr_end) {
			jule::Ptr<_1a9692ac1_anonHash> _115115_h = *it;
			{
				_1a969bcd9_anonFuncIns(_self_, &((*(_115115_h))._field_expr), (*_115115_h.alloc)._field_ident);
			}
			_iter_next_1ad31b779:;
			++it;
			goto _iter_begin_1ad31b779;
		}
		_iter_end_1ad31b779:;
	};
	if (((*_self_.alloc)._field_anons.len() > 0LL)) {
		goto _julec_label_1ad319bea;
	};
}



inline void _1a96a035e_initGlobals(jule::Ptr<_1a9694078_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad31cc97:;
		if (it != expr_end) {
			jule::Ptr<_1a7c7b178_Var> _116015_v = *it;
			{
				static__1a95d464a_var(&((*(_self_))._field_Buf), _116015_v);
				_1a9694760_write(_self_, jule::Str::lit(" = ", 3));
				_1a95c9e9d_model((*_self_.alloc)._field_ec, (*((*((*(_116015_v))._field_Value))._field_Data))._field_Model);
				_1a9694760_write(_self_, jule::Str::lit(";\n", 2));
				_1daeda96a_WriteByte(&(*_self_.alloc)._field_Buf, 9LLU);
			}
			_iter_next_1ad31cc97:;
			++it;
			goto _iter_begin_1ad31cc97;
		}
		_iter_end_1ad31cc97:;
	};
}



inline void _1a96a055c_initCaller(jule::Ptr<_1a9694078_ObjectCoder> _self_) {
	_1a9694760_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1a9694c16_addIndent(_self_);
	_1a882a386_IterPackages(&((*_self_.alloc)._field_ir), jule::__new_closure<void,jule::Ptr<_1a7c396b9_Package>*>((void*)__jule_anon_1ad32174b, jule::Ptr<__jule_anon_1ad32174b_ctx>::make(__jule_anon_1ad32174b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad32174b_ctx_handler));
	_1a9694e14_doneIndent(_self_);
	_1a9694760_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1a96a075a_end(jule::Ptr<_1a9694078_ObjectCoder> _self_) {
	_1a9694760_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {", 48));
	_1a9694760_write(_self_, jule::Str::lit("\n\n", 2));
	_1a9695112_indent(_self_);
	_1a96a035e_initGlobals(_self_);
	_1a9694760_write(_self_, jule::Str::lit("\n\t__jule_argc = static_cast<jule::Int>(argc);\n\t__jule_argv = reinterpret_cast<jule::U8**>(argv);\n\t__jule_envp = reinterpret_cast<jule::U8**>(envp);\n\n\t__jule_call_initializers();\n\t", 179));
	if (_1d9260b26_Test) {
		_1a9694760_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1a9694760_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1a9694760_write(_self_, jule::Str::lit("\n\n\treturn EXIT_SUCCESS;\n}", 25));
}



inline void _1a96a0abd_insertBuf(jule::Ptr<_1a9694078_ObjectCoder> _self_, _1daed18b7_StrBuilder* _120431_buf, jule::I64 _120448_pos) {
	if ((_1daedb43d_Len(_120431_buf) > 0LL)) {
		jule::Slice<jule::U8> _12068_head = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, (_1daedb43d_Len(&(*(_self_))._field_Buf) + _1daedb43d_Len(_120431_buf))); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
		(_12068_head).append(_1daedb95a_Buf(&(*_self_.alloc)._field_Buf).slice(0LL, _120448_pos));;
		(_12068_head).append(_1daedb95a_Buf(_120431_buf));;
		(_12068_head).append(_1daedb95a_Buf(&(*_self_.alloc)._field_Buf).slice(_120448_pos));;
		{
			_1daedbc13_SetBuf(&(*_self_.alloc)._field_Buf, _12068_head);
		};
	};
}



inline void _1a96a0cbb_serializeHead(jule::Ptr<_1a9694078_ObjectCoder> _self_) {
	_1a9697510_prepareStructures(_self_);
	_1a9696ca1_head(_self_);
	_1a9694760_write(_self_, jule::Str::lit("\n", 1));
	_1a969de95_decls(_self_);
	_1a96a0abd_insertBuf(_self_, &((*_self_.alloc)._field_resultDecls), (*_self_.alloc)._field_headPos);
	(*_self_.alloc)._field_wrapPos+=_1daedb43d_Len(&(*_self_.alloc)._field_resultDecls);
	(*_self_.alloc)._field_declPos+=_1daedb43d_Len(&(*_self_.alloc)._field_resultDecls);
	_1a9694760_write(_self_, jule::Str::lit("\n", 1));
	_1a969e9ac_structures(_self_);
	_1a969ebaa_funcs(_self_);
	_1a96a055c_initCaller(_self_);
	_1a9694760_write(_self_, jule::Str::lit("\n\n", 2));
	_1a96a0161_anonHashes(_self_);
	_1a96a0abd_insertBuf(_self_, &((*_self_.alloc)._field_deallocObj), (*_self_.alloc)._field_wrapPos);
	(*_self_.alloc)._field_wrapPos+=_1daedb43d_Len(&(*_self_.alloc)._field_deallocObj);
	(*_self_.alloc)._field_declPos+=_1daedb43d_Len(&(*_self_.alloc)._field_deallocObj);
	_1a96a0abd_insertBuf(_self_, &((*_self_.alloc)._field_anyObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1daedb43d_Len(&(*_self_.alloc)._field_anyObj);
	_1a96a0abd_insertBuf(_self_, &((*_self_.alloc)._field_anonObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1daedb43d_Len(&(*_self_.alloc)._field_anonObj);
}



inline void _1a96a0eb9_Serialize(jule::Ptr<_1a9694078_ObjectCoder> _self_) {
	_1a96a0cbb_serializeHead(_self_);
	_1a96a075a_end(_self_);
}








inline jule::Bool _1a96a2e00_customType_eq(_1a96a2e00_customType *_self_, _1a96a2e00_customType _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1a96a32eb_Str(_1a96a2e00_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1a96a363c_Equal(jule::Ptr<_1a96a2e00_customType> _self_, jule::Ptr<_1a7d1bc96_TypeKind> _4418_k) {
	return false;;
}








inline jule::Bool _1a96a3a38_typeCoder_eq(_1a96a3a38_typeCoder *_self_, _1a96a3a38_typeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc) &&
		(_self_->_field_rc == _self_->_field_rc);
}

inline jule::Ptr<_1a96a3a38_typeCoder> static__1a96a4088_new(jule::Ptr<_1a9694078_ObjectCoder>* _6921_oc) {
	jule::Ptr<_1a96a3a38_typeCoder> _707_tc = jule::new_ptr<_1a96a3a38_typeCoder>(_1a96a3a38_typeCoder{._field_oc=(*(_6921_oc)), ._field_rc=jule::Ptr<_1a96ab623_resultCoder>(nullptr)});;
	(*(_707_tc))._field_rc=static__1a96abb2e_new(&(_707_tc));
	return _707_tc;;
}



inline void _1a96a43eb_toType(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _7627_buf, jule::Str _7648_id) {
	if ((_7648_id != static_cast<jule::Str>(jule::Str::lit("uintptr", 7)))) {
		_7648_id=_1c005e510_RealKindOf(_7648_id);
	};
	_1daeda6b2_WriteStr(_7627_buf, jule::Str::lit("jule::", 6));
	if (((97LL <= _7648_id[0LL]) && (_7648_id[0LL] <= 122LLU))) {
		_1daeda96a_WriteByte(_7627_buf, (jule::U8)(_7648_id[0LL] - 32LLU));
	} else {
		_1daeda96a_WriteByte(_7627_buf, _7648_id[0LL]);
	};
	_1daeda6b2_WriteStr(_7627_buf, _7648_id.slice(1LL));
}



inline void _1a96a475e_prim(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _9025_buf, jule::Ptr<_1a7d24dae_Prim> _9042_p) {
	_1a96a43eb_toType(_self_, _9025_buf, (*(_9042_p))._field_Kind);
}



inline void _1a96a4ac2_tuple(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _9526_buf, jule::Ptr<_1a7d29ea2_Tuple> _9547_t) {
	_1daeda6b2_WriteStr(_9526_buf, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*_9547_t.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad33add6:;
		if (it != expr_end) {
			jule::I64 _978_i = it - expr->begin();
			jule::Ptr<_1a7d1bc96_TypeKind> _9715_tk = *it;
			{
				_1a96a8c3b_kind(_self_, _9526_buf, _9715_tk);
				if ((((*(_9547_t))._field_Types.len() - _978_i) > 1LL)) {
					_1daeda96a_WriteByte(_9526_buf, ',');
				};
			}
			_iter_next_1ad33add6:;
			++it;
			_978_i++;
			goto _iter_begin_1ad33add6;
		}
		_iter_end_1ad33add6:;
	};
	_1daeda96a_WriteByte(_9526_buf, '>');
}



inline void _1a96a4e35_asSptr(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _10727_buf, jule::Slice<jule::U8> _10744_elem) {
	_1daeda6b2_WriteStr(_10727_buf, jule::Str::lit("jule::Ptr<", 10));
	_1daeda409_Write(_10727_buf, _10744_elem);
	_1daeda96a_WriteByte(_10727_buf, '>');
}



inline void _1a96a5298_sptr(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _11425_buf, jule::Ptr<_1a7d288da_Sptr> _11446_sptr) {
	_1daeda6b2_WriteStr(_11425_buf, jule::Str::lit("jule::Ptr<", 10));
	_1a96a8c3b_kind(_self_, _11425_buf, (*(_11446_sptr))._field_Elem);
	_1daeda96a_WriteByte(_11425_buf, '>');
}



inline void _1a96a560b_ptr(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _12124_buf, jule::Ptr<_1a7d2c1a2_Ptr> _12145_p) {
	;
	if (_1a7d2cc1e_IsUnsafe(_12145_p.ptr())) {
		_1daeda6b2_WriteStr(_12124_buf, jule::Str::lit("void*", 5));
	} else {
		_1a96a8c3b_kind(_self_, _12124_buf, (*(_12145_p))._field_Elem);
		_1daeda6b2_WriteStr(_12124_buf, jule::Str::lit("*", 1));
	};
}



inline void _1a96a596e_enumDecl(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _13229_buf, jule::Ptr<_1a7bd1a6d_Enum> _13250_e) {
	_1a96a8c3b_kind(_self_, _13229_buf, (*((*(_13250_e))._field_Kind))._field_Kind);
}



inline void _1a96a5cd2_typeEnumDecl(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _13733_buf, jule::Ptr<_1a7bd3278_TypeEnum> _13754_e) {
	_1daeda6b2_WriteStr(_13733_buf, jule::Str::lit("jule::Any", 9));
}



inline void _1a96a6145_asSlice(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _14128_buf, jule::Ptr<_1a7d1bc96_TypeKind> _14149_elem) {
	_1daeda6b2_WriteStr(_14128_buf, jule::Str::lit("jule::Slice<", 12));
	_1a96a8c3b_kind(_self_, _14128_buf, _14149_elem);
	_1daeda96a_WriteByte(_14128_buf, '>');
}



inline void _1a96a64a8_slice(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _14826_buf, jule::Ptr<_1a7d293ad_Slc> _14847_s) {
	_1a96a6145_asSlice(_self_, _14826_buf, (*(_14847_s))._field_Elem);
}



inline void _1a96a681b_mapType(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _15328_buf, jule::Ptr<_1a7d2aa52_Map> _15349_m) {
	jule::Ptr<_1a7ba5ca6_Struct> _1547_s = _1a7e9de39_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1a7ba8b11_StructIns> _1557_ins = _1a8832866_FindStructGenericInstance(&(_1547_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_15349_m))._field_Key; (*it++) = (*_15349_m.alloc)._field_Val; __jule_collection; }));;
	_1daeda6b2_WriteStr(_15328_buf, jule::Str::lit("jule::Ptr<", 10));
	static__1a95d4073_structureIns(_15328_buf, &(_1557_ins));
	_1daeda6b2_WriteStr(_15328_buf, jule::Str::lit(">", 1));
}



inline void _1a96a6ee2_structureIns(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _16733_buf, jule::Ptr<_1a7ba8b11_StructIns> _16754_s) {
	if ((!((*((*(_16754_s))._field_Decl))._field_Binded))) {
		static__1a95d4073_structureIns(_16733_buf, &(_16754_s));
		return;;
	};
	jule::Ptr<_1a7b7e4cc_Directive> _1723_d = _1a88308a8_FindDirective(&((*(*(_16754_s))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
	if ((_1723_d != nullptr)) {
		_1daeda409_Write(_16733_buf, _1a96a134e_concatAllParts((*_1723_d.alloc)._field_Args));
		_1daeda6b2_WriteStr(_16733_buf, jule::Str::lit("::", 2));
	};
	static__1a95d4073_structureIns(_16733_buf, &(_16754_s));
	if (((*_16754_s.alloc)._field_Generics.len() > 0LL)) {
		_1daeda96a_WriteByte(_16733_buf, '<');
		{
			auto expr = &((*_16754_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad349774:;
			if (it != expr_end) {
				jule::I64 _1809_i = it - expr->begin();
				jule::Ptr<_1a7d1a3b0_InsGeneric> _18016_g = *it;
				{
					_1a96a8c3b_kind(_self_, _16733_buf, (*(_18016_g))._field_Kind);
					if ((((*_16754_s.alloc)._field_Generics.len() - _1809_i) > 1LL)) {
						_1daeda96a_WriteByte(_16733_buf, ',');
					};
				}
				_iter_next_1ad349774:;
				++it;
				_1809_i++;
				goto _iter_begin_1ad349774;
			}
			_iter_end_1ad349774:;
		};
		_1daeda96a_WriteByte(_16733_buf, '>');
	};
}



inline void _1a96a7355_array(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _19126_buf, jule::Ptr<_1a7d2b6ce_Arr> _19147_a) {
	_1daeda6b2_WriteStr(_19126_buf, jule::Str::lit("jule::Array<", 12));
	_1a96a8c3b_kind(_self_, _19126_buf, (*(_19147_a))._field_Elem);
	_1daeda96a_WriteByte(_19126_buf, ',');
	_1daeda6b2_WriteStr(_19126_buf, _1c005c398_Itoa((*_19147_a.alloc)._field_N));
	_1daeda96a_WriteByte(_19126_buf, '>');
}



inline void _1a96a7a2b_paramIns(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _21429_buf, jule::Ptr<_1a7bbc839_ParamIns>* _21451_p) {
	if ((*((*((*(_21451_p))))._field_Decl))._field_Variadic) {
		_1daeda6b2_WriteStr(_21429_buf, jule::Str::lit("jule::Slice<", 12));
		_1a96a8c3b_kind(_self_, _21429_buf, (*((*(_21451_p))))._field_Kind);
		_1daeda96a_WriteByte(_21429_buf, '>');
	} else {
		_1a96a8c3b_kind(_self_, _21429_buf, (*((*(_21451_p))))._field_Kind);
	};
	if ((*((*((*(_21451_p))))._field_Decl))._field_Reference) {
		_1daeda96a_WriteByte(_21429_buf, '*');
	};
}



inline void _1a96a8202_funcInsResult(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _24634_s, jule::Ptr<_1a7bbd8b2_FnIns>* _24654_f) {
	if (_1a7bbad87_IsVoid((*((*(_24654_f))))._field_Decl.ptr())) {
		if ((*(*((*(_24654_f))))._field_Decl.alloc)._field_Exceptional) {
			_1daeda6b2_WriteStr(_24634_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_1daeda6b2_WriteStr(_24634_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*(*((*(_24654_f))))._field_Decl.alloc)._field_Exceptional) {
		_1daeda6b2_WriteStr(_24634_s, jule::Str::lit("jule::Exceptional<", 18));
		_1a96adbdb_codeMut1((*(_self_))._field_rc.ptr(), _24634_s, &((*((*(_24654_f))))._field_Result));
		_1daeda96a_WriteByte(_24634_s, '>');
		return;;
	};
	_1a96adbdb_codeMut1((*(_self_))._field_rc, _24634_s, &((*((*(_24654_f))))._field_Result));
}



inline void _1a96a8565_anonFunc(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _26429_buf, jule::Ptr<_1a7bbd8b2_FnIns> _26450_f) {
	if ((((*(_26450_f))._field_Result != nullptr) && (_1a7d21273_Tup((*(_26450_f))._field_Result) != nullptr))) {
		_1a96961ce_pushResultIns((*(_self_))._field_oc, &(_26450_f));
	};
	_1a96a8202_funcInsResult(_self_, _26429_buf, &(_26450_f));
	if (((*_26450_f.alloc)._field_Params.len() == 0LL)) {
		return;;
	};
	_1daeda96a_WriteByte(_26429_buf, ',');
	{
		auto expr = &((*_26450_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad35b0b0:;
		if (it != expr_end) {
			jule::I64 _2738_i = it - expr->begin();
			jule::Ptr<_1a7bbc839_ParamIns> _27315_param = *it;
			{
				if (_1a7bb955b_IsSelf((*(_27315_param))._field_Decl.ptr())) {
					goto _iter_next_1ad35b0b0;
				};
				_1a96a7a2b_paramIns(_self_, _26429_buf, &(_27315_param));
				if ((((*_26450_f.alloc)._field_Params.len() - _2738_i) > 1LL)) {
					_1daeda96a_WriteByte(_26429_buf, ',');
				};
			}
			_iter_next_1ad35b0b0:;
			++it;
			_2738_i++;
			goto _iter_begin_1ad35b0b0;
		}
		_iter_end_1ad35b0b0:;
	};
}



inline void _1a96a88c8_func(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _28525_buf, jule::Ptr<_1a7bbd8b2_FnIns> _28546_f) {
	_1daeda6b2_WriteStr(_28525_buf, jule::Str::lit("jule::Fn<", 9));
	_1a96a8565_anonFunc(_self_, _28525_buf, _28546_f);
	_1daeda96a_WriteByte(_28525_buf, '>');
}



inline void _1a96a8c3b_kind(_1a96a3a38_typeCoder* _self_, _1daed18b7_StrBuilder* _29225_buf, jule::Ptr<_1a7d1bc96_TypeKind> _29246_k) {
	{
		
		if ((_1a7d209c0_Struct(_29246_k.ptr()) != nullptr)) {
			_case_begin_1ad35e602:;
			{
				_1a96a6ee2_structureIns(_self_, _29225_buf, _1a7d209c0_Struct(_29246_k));
				return;;
			}
		}
		else if (_1a7d1cb43_Binded(_29246_k.ptr())) {
			_case_begin_1ad35e69b:;
			{
				_1daeda6b2_WriteStr(_29225_buf, (*_29246_k.alloc)._field_BindIdent);
				return;;
			}
		}
		else if ((_1a7d1e44c_Prim(_29246_k.ptr()) != nullptr)) {
			_case_begin_1ad35e712:;
			{
				_1a96a475e_prim(_self_, _29225_buf, _1a7d1e44c_Prim(_29246_k));
				return;;
			}
		}
		else if ((_1a7d21273_Tup(_29246_k.ptr()) != nullptr)) {
			_case_begin_1ad35e778:;
			{
				_1a96a4ac2_tuple(_self_, _29225_buf, _1a7d21273_Tup(_29246_k));
				return;;
			}
		}
		else if ((_1a7d1e6d3_Sptr(_29246_k.ptr()) != nullptr)) {
			_case_begin_1ad35e7de:;
			{
				_1a96a5298_sptr(_self_, _29225_buf, _1a7d1e6d3_Sptr(_29246_k));
				return;;
			}
		}
		else if ((_1a7d1e969_Ptr(_29246_k.ptr()) != nullptr)) {
			_case_begin_1ad35e866:;
			{
				_1a96a560b_ptr(_self_, _29225_buf, _1a7d1e969_Ptr(_29246_k));
				return;;
			}
		}
		else if ((_1a7d1ec00_Enum(_29246_k.ptr()) != nullptr)) {
			_case_begin_1ad35e8dd:;
			{
				_1a96a596e_enumDecl(_self_, _29225_buf, _1a7d1ec00_Enum(_29246_k));
				return;;
			}
		}
		else if ((_1a7d1ee86_TypeEnum(_29246_k.ptr()) != nullptr)) {
			_case_begin_1ad35e965:;
			{
				_1a96a5cd2_typeEnumDecl(_self_, _29225_buf, _1a7d1ee86_TypeEnum(_29246_k));
				return;;
			}
		}
		else if ((_1a7d204a3_Slc(_29246_k.ptr()) != nullptr)) {
			_case_begin_1ad35e9dc:;
			{
				_1a96a64a8_slice(_self_, _29225_buf, _1a7d204a3_Slc(_29246_k));
				return;;
			}
		}
		else if ((_1a7d20edc_Map(_29246_k.ptr()) != nullptr)) {
			_case_begin_1ad35ea64:;
			{
				_1a96a681b_mapType(_self_, _29225_buf, _1a7d20edc_Map(_29246_k));
				return;;
			}
		}
		else if ((_1a7d20c56_Trait(_29246_k.ptr()) != nullptr)) {
			_case_begin_1ad35eadb:;
			{
				_1daeda6b2_WriteStr(_29225_buf, jule::Str::lit("jule::Trait", 11));
				return;;
			}
		}
		else if ((_1a7d2021c_Arr(_29246_k.ptr()) != nullptr)) {
			_case_begin_1ad35eb63:;
			{
				_1a96a7355_array(_self_, _29225_buf, _1a7d2021c_Arr(_29246_k));
				return;;
			}
		}
		else if ((_1a7d20739_Fn(_29246_k.ptr()) != nullptr)) {
			_case_begin_1ad35ebda:;
			{
				_1a96a88c8_func(_self_, _29225_buf, _1a7d20739_Fn(_29246_k));
				return;;
			}
		}
		_match_end_1ad35e415:;
	};
	{
		auto &_match_expr{ (*(_29246_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data29)) {
			_case_begin_1ad35ec73:;
			{
				_1daeda6b2_WriteStr(_29225_buf, (*((*(_29246_k))._field_Kind.cast_ptr<_1a96a2e00_customType>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data29)))._field_kind);
			}
		}
		else {
			_case_begin_1ad368331:;
			{
				_1daeda6b2_WriteStr(_29225_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
			}
		}
		_match_end_1ad3682ba:;
	};
}








inline jule::Bool _1a96ab623_resultCoder_eq(_1a96ab623_resultCoder *_self_, _1a96ab623_resultCoder _other_) {
	return 
		(_self_->_field_tc == _other_._field_tc);
}

inline jule::Ptr<_1a96ab623_resultCoder> static__1a96abb2e_new(jule::Ptr<_1a96a3a38_typeCoder>* _36021_tc) {
	return jule::new_ptr<_1a96ab623_resultCoder>(_1a96ab623_resultCoder{._field_tc=(*(_36021_tc))});;
}



inline void _1a96abe92_ptr(_1a96ab623_resultCoder* _self_, _1daed18b7_StrBuilder* _36424_s, jule::Ptr<_1a7d2c1a2_Ptr> _36443_p) {
	_1daeda6b2_WriteStr(_36424_s, jule::Str::lit("p", 1));
	_1a96ad878_codeMut(_self_, _36424_s, &((*(_36443_p))._field_Elem));
}



inline void _1a96ac305_sptr(_1a96ab623_resultCoder* _self_, _1daed18b7_StrBuilder* _36925_s, jule::Ptr<_1a7d288da_Sptr> _36944_p) {
	_1daeda6b2_WriteStr(_36925_s, jule::Str::lit("x", 1));
	_1a96ad878_codeMut(_self_, _36925_s, &((*(_36944_p))._field_Elem));
}



inline void _1a96ac668_mapType(_1a96ab623_resultCoder* _self_, _1daed18b7_StrBuilder* _37428_s, jule::Ptr<_1a7d2aa52_Map> _37447_p) {
	_1daeda6b2_WriteStr(_37428_s, jule::Str::lit("m", 1));
	_1a96ad878_codeMut(_self_, _37428_s, &((*(_37447_p))._field_Key));
	_1a96ad878_codeMut(_self_, _37428_s, &((*_37447_p.alloc)._field_Val));
}



inline void _1a96ac9cb_slice(_1a96ab623_resultCoder* _self_, _1daed18b7_StrBuilder* _38026_s, jule::Ptr<_1a7d293ad_Slc> _38045_slc) {
	_1daeda6b2_WriteStr(_38026_s, jule::Str::lit("s", 1));
	_1a96ad878_codeMut(_self_, _38026_s, &((*(_38045_slc))._field_Elem));
}



inline void _1a96acd3e_arr(_1a96ab623_resultCoder* _self_, _1daed18b7_StrBuilder* _38524_s, jule::Ptr<_1a7d2b6ce_Arr> _38543_arr) {
	_1daeda6b2_WriteStr(_38524_s, jule::Str::lit("a", 1));
	_1daeda6b2_WriteStr(_38524_s, _1c005c0ce_FmtInt(static_cast<jule::I64>((*(_38543_arr))._field_N), 16LL));
	_1a96ad878_codeMut(_self_, _38524_s, &((*_38543_arr.alloc)._field_Elem));
}



inline void _1a96ad1a2_func(_1a96ab623_resultCoder* _self_, _1daed18b7_StrBuilder* _39125_s, jule::Ptr<_1a7bbd8b2_FnIns> _39144_f) {
	_1daeda6b2_WriteStr(_39125_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_39144_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3707bc:;
		if (it != expr_end) {
			jule::Ptr<_1a7bbc839_ParamIns> _39315_p = *it;
			{
				if ((*((*(_39315_p))._field_Decl))._field_Reference) {
					_1daeda6b2_WriteStr(_39125_s, jule::Str::lit("r", 1));
				};
				_1a96ad878_codeMut(_self_, _39125_s, &((*_39315_p.alloc)._field_Kind));
			}
			_iter_next_1ad3707bc:;
			++it;
			goto _iter_begin_1ad3707bc;
		}
		_iter_end_1ad3707bc:;
	};
	if (((*_39144_f.alloc)._field_Result != nullptr)) {
		_1a96ad878_codeMut(_self_, _39125_s, &((*_39144_f.alloc)._field_Result));
	};
}



inline void _1a96ad515_tup(_1a96ab623_resultCoder* _self_, _1daed18b7_StrBuilder* _40424_s, jule::Ptr<_1a7d29ea2_Tuple> _40443_tup) {
	{
		auto expr = &((*(_40443_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad372e51:;
		if (it != expr_end) {
			jule::Ptr<_1a7d1bc96_TypeKind> _40515_t = *it;
			{
				_1daeda6b2_WriteStr(_40424_s, jule::Str::lit("__jule_tuple_", 13));
				_1a96ad878_codeMut(_self_, _40424_s, &(_40515_t));
			}
			_iter_next_1ad372e51:;
			++it;
			goto _iter_begin_1ad372e51;
		}
		_iter_end_1ad372e51:;
	};
}



inline void _1a96ad878_codeMut(_1a96ab623_resultCoder* _self_, _1daed18b7_StrBuilder* _41128_s, jule::Ptr<_1a7d1bc96_TypeKind>* _41148_t) {
	if (_1a7d1cb43_Binded((*(_41148_t)).ptr())) {
		_1daeda6b2_WriteStr(_41128_s, jule::Str::lit("b", 1));
		_1daeda6b2_WriteStr(_41128_s, (*((*(_41148_t))))._field_BindIdent);
		return;;
	};
	{
		auto &_match_expr{ (*((*(_41148_t))))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data28)) {
			_case_begin_1ad3745e5:;
			{
				_1a96abe92_ptr(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1a7d2c1a2_Ptr>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data28));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data23)) {
			_case_begin_1ad375283:;
			{
				_1a96ac305_sptr(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1a7d288da_Sptr>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data23));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data26)) {
			_case_begin_1ad3752e9:;
			{
				_1a96ac668_mapType(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1a7d2aa52_Map>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data26));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data24)) {
			_case_begin_1ad375360:;
			{
				_1a96ac9cb_slice(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1a7d293ad_Slc>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data24));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data27)) {
			_case_begin_1ad3753c6:;
			{
				_1a96acd3e_arr(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1a7d2b6ce_Arr>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data27));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data1)) {
			_case_begin_1ad375816:;
			{
				_1a96ad1a2_func(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1a7bbd8b2_FnIns>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data1));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data3)) {
			_case_begin_1ad37587c:;
			{
				jule::Ptr<_1a7bd1a6d_Enum> _4314_te = (*((*(_41148_t))))._field_Kind.cast_ptr<_1a7bd1a6d_Enum>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data3);;
				static__1a95d289b_toOut(_41128_s, (*(_4314_te))._field_Ident, static_cast<jule::Uintptr>(_4314_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data4)) {
			_case_begin_1ad3758e3:;
			{
				jule::Ptr<_1a7bd3278_TypeEnum> _4344_te = (*((*(_41148_t))))._field_Kind.cast_ptr<_1a7bd3278_TypeEnum>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data4);;
				static__1a95d289b_toOut(_41128_s, (*(_4344_te))._field_Ident, static_cast<jule::Uintptr>(_4344_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data0)) {
			_case_begin_1ad375959:;
			{
				jule::Ptr<_1a7ba8b11_StructIns> _4378_si = (*((*(_41148_t))))._field_Kind.cast_ptr<_1a7ba8b11_StructIns>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data0);;
				static__1a95d4073_structureIns(_41128_s, &(_4378_si));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data2)) {
			_case_begin_1ad3759c0:;
			{
				jule::Ptr<_1a7bce362_Trait> _4408_trt = (*((*(_41148_t))))._field_Kind.cast_ptr<_1a7bce362_Trait>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data2);;
				static__1a95d36b0_traitDecl(_41128_s, _4408_trt);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22)) {
			_case_begin_1ad375a36:;
			{
				_1daeda6b2_WriteStr(_41128_s, (*((*((*(_41148_t))))._field_Kind.cast_ptr<_1a7d24dae_Prim>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data25)) {
			_case_begin_1ad375a9c:;
			{
				_1a96ad515_tup(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1a7d29ea2_Tuple>((jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data25));
			}
		}
		else {
			_case_begin_1ad37521c:;
			{
				__jule_panic_s(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:447:4"));;
			}
		}
		_match_end_1ad3751a6:;
	};
}



inline void _1a96adbdb_codeMut1(_1a96ab623_resultCoder* _self_, _1daed18b7_StrBuilder* _45129_s, jule::Ptr<_1a7d1bc96_TypeKind>* _45149_t) {
	jule::Ptr<_1a7d29ea2_Tuple> _4527_tup = _1a7d21273_Tup((*(_45149_t)).ptr());;
	if ((_4527_tup != nullptr)) {
		_1a96ad515_tup(_self_, _45129_s, _4527_tup);
	} else {
		_1a96a8c3b_kind((*(_self_))._field_tc.ptr(), _45129_s, (*(_45149_t)));
	};
}



inline jule::Slice<jule::U8> _1a96adee9_code(_1a96ab623_resultCoder* _self_, jule::Ptr<_1a7d1bc96_TypeKind>* _46025_t) {
	_1daed18b7_StrBuilder _4617_s = static__1daed1bb4_New(20LL);;
	_1a96ad878_codeMut(_self_, &(_4617_s), _46025_t);
	return _1daedb95a_Buf(&_4617_s);;
}








inline jule::Bool _1ad3818cc_Flag_eq(_1ad3818cc_Flag *_self_, _1ad3818cc_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1ad381734_Name(_1ad3818cc_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1ad381bb8_What(_1ad3818cc_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1ad381d0b_Reset(_1ad3818cc_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1ad381e4e_Short(_1ad3818cc_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1ad3851e9_Flag_eq(_1ad3851e9_Flag *_self_, _1ad3851e9_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1ad384d75_Name(_1ad3851e9_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1ad3854d5_What(_1ad3851e9_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1ad385628_Reset(_1ad3851e9_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1ad38576b_Short(_1ad3851e9_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1ad388906_Flag_eq(_1ad388906_Flag *_self_, _1ad388906_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1ad388582_Name(_1ad388906_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1ad388be2_What(_1ad388906_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1ad388d35_Reset(_1ad388906_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1ad388e78_Short(_1ad388906_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1ad38c157_Flag_eq(_1ad38c157_Flag *_self_, _1ad38c157_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1ad38bcd3_Name(_1ad38c157_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1ad38c443_What(_1ad38c157_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1ad38c586_Reset(_1ad38c157_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1ad38c6c9_Short(_1ad38c157_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1ad390864_Flag_eq(_1ad390864_Flag *_self_, _1ad390864_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1ad3904e0_Name(_1ad390864_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1ad390b50_What(_1ad390864_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1ad390c93_Reset(_1ad390864_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1ad390dd6_Short(_1ad390864_Flag* _self_) {
	return (*(_self_))._field_short;;
}







inline jule::Ptr<_1a97276b1_FlagSet> static__1a97279d0_New(void) {
	return jule::new_ptr<_1a97276b1_FlagSet>(_1a97276b1_FlagSet{._field_flags=({ auto __jule_collection = jule::Slice<jule::Trait>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Trait(nullptr); __jule_collection; })});;
}



inline jule::Trait _1a9727e86_FindFlag(_1a97276b1_FlagSet* _self_, jule::Str _7124_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad39a6d7:;
		if (it != expr_end) {
			jule::Trait _7215_flag = *it;
			{
				if ((((_1a9725add_CommonFlagMptrData*)_7215_flag.safe_type())->_1a96e499c_Name(_7215_flag.data) == _7124_name)) {
					return _7215_flag;;
				};
			}
			_iter_next_1ad39a6d7:;
			++it;
			goto _iter_begin_1ad39a6d7;
		}
		_iter_end_1ad39a6d7:;
	};
	return nullptr;;
}



inline jule::Trait _1a97282c7_FindFlagShort(_1a97276b1_FlagSet* _self_, jule::I32 _8129_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad39ae02:;
		if (it != expr_end) {
			jule::Trait _8215_flag = *it;
			{
				if ((((_1a9725add_CommonFlagMptrData*)_8215_flag.safe_type())->_1a96e4ae0_Short(_8215_flag.data) == _8129_name)) {
					return _8215_flag;;
				};
			}
			_iter_next_1ad39ae02:;
			++it;
			goto _iter_begin_1ad39ae02;
		}
		_iter_end_1ad39ae02:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1a972889e_Parse(_1a97276b1_FlagSet* _self_, jule::Slice<jule::Str> _11521_args) {
	_1a972a175_argParser _1167_ap = _1a972a175_argParser{._field_set=(*(_self_)), ._field_args=_11521_args, ._field_content=jule::Slice<jule::Str>(nullptr), ._field_i=0};;
	({
		auto except = _1a972b6a4_parse(&_1167_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_1167_ap._field_content};;
}



inline jule::Ptr<_1ad390864_Flag> _1ad41c56c_addFlagCommon(_1a97276b1_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1a9727e86_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1a97282c7_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1ad390864_Flag> _1407_flag = jule::new_ptr<_1ad390864_Flag>(_1ad390864_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=jule::Str(), ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Str>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1a9725add_CommonFlag_mptr_data4)); };
	return _1407_flag;;
}

inline jule::Ptr<_1ad38c157_Flag> _1ad426642_addFlagCommon(_1a97276b1_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1a9727e86_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1a97282c7_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1ad38c157_Flag> _1407_flag = jule::new_ptr<_1ad38c157_Flag>(_1ad38c157_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=false, ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Bool>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1a9725add_CommonFlag_mptr_data3)); };
	return _1407_flag;;
}



inline void _1ad419d3e_AddVar(_1a97276b1_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("std::flag: FlatSet.AddVar[T]: variable is nil", 45) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1ad390864_Flag> _1717_flag = _1ad41c56c_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}

inline void _1ad423e58_AddVar(_1a97276b1_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("std::flag: FlatSet.AddVar[T]: variable is nil", 45) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1ad38c157_Flag> _1717_flag = _1ad426642_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}







inline __jule_tuple_i64__jule_tuple_bool _1ad3a3635_parseInteger(_1a972a175_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1ad3a668d:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1daebc991_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1ad3a63d5:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1daebc991_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1ad3a5c97:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1daebc991_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1ad3a5d0d:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1ad3a5d74:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1ad3a5c31:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1ad3a5b21:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1ad3ab20e_parseInteger(_1a972a175_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1ad3ae300:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1daebc991_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1ad3ae047:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1daebc991_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1ad3ad909:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1daebc991_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1ad3ad970:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1ad3ad9d6:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1ad3ad893:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1ad3ad783:;
	};
	return __jule_func_result;;
}



inline jule::Str _1a972a9c2_getData(_1a972a175_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1a972ac47_processFlag(_1a972a175_argParser* _self_, jule::Trait* _21232_flag) {
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a9725add_CommonFlag_mptr_data3)) {
			_case_begin_1ad3a07db:;
			{
				jule::Ptr<_1ad38c157_Flag> _2158_bf = (*(_21232_flag)).cast_ptr<_1ad38c157_Flag>((jule::Trait::Type*)&_1a9725add_CommonFlag_mptr_data3);;
				(*((*(_2158_bf))._field_data))=(!((*_2158_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1ad3a0775:;
	};
	jule::Str _2203_data = _1a972a9c2_getData(_self_);;
	if ((_2203_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a9725add_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1a96e499c_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression missing", 20)), &__jule_any_type4)};
	};
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a9725add_CommonFlag_mptr_data0)) {
			_case_begin_1ad3a26de:;
			{
				jule::Ptr<_1ad3818cc_Flag> _2278_intf = (*(_21232_flag)).cast_ptr<_1ad3818cc_Flag>((jule::Trait::Type*)&_1a9725add_CommonFlag_mptr_data0);;
				jule::Bool _22818_ok;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1ad3a3635_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1ad3a713e, nullptr, nullptr));
					(*((*(_2278_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22818_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22818_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a9725add_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1a96e499c_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a9725add_CommonFlag_mptr_data1)) {
			_case_begin_1ad3a214a:;
			{
				jule::Ptr<_1ad3851e9_Flag> _2358_uintf = (*(_21232_flag)).cast_ptr<_1ad3851e9_Flag>((jule::Trait::Type*)&_1a9725add_CommonFlag_mptr_data1);;
				jule::Bool _23619_ok;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1ad3ab20e_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1ad3aeca1, nullptr, nullptr));
					(*((*(_2358_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23619_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23619_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a9725add_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1a96e499c_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a9725add_CommonFlag_mptr_data2)) {
			_case_begin_1ad3a2755:;
			{
				jule::Ptr<_1ad388906_Flag> _2438_ff = (*(_21232_flag)).cast_ptr<_1ad388906_Flag>((jule::Trait::Type*)&_1a9725add_CommonFlag_mptr_data2);;
				(*((*(_2438_ff))._field_data))=({
					auto except = _1c0052349_ParseFloat(_2203_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a9725add_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1a96e499c_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type4)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a9725add_CommonFlag_mptr_data4)) {
			_case_begin_1ad3a27bb:;
			{
				(*((*((*(_21232_flag)).cast_ptr<_1ad390864_Flag>((jule::Trait::Type*)&_1a9725add_CommonFlag_mptr_data4)))._field_data))=_2203_data;
			}
		}
		_match_end_1ad3a1e80:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a972b000_singleDash(_1a972a175_argParser* _self_, jule::Str* _25227_arg) {
	if (((*(_25227_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_25227_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	{
		auto expr = (*(_25227_arg)).slice(1LL);
		jule::U8 *it = expr.begin();
		const jule::U8 *end = it + expr.len();
		jule::Int len;
		jule::I32 _25710_r;
		_iter_begin_1ad3b5625:;
		__jule_runeStep(it, end - it, &_25710_r, &len);
		if (it < end) {
			{
				jule::Trait _2588_flag = _1a97282c7_FindFlagShort(&(*(_self_))._field_set, _25710_r);;
				if ((_2588_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any((((*(_25227_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + __jule_strFromRune(_25710_r)), &__jule_any_type4)};
				};
				({
					auto except = _1a972ac47_processFlag(_self_, &(_2588_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1ad3b5625:;
			it += len;
			goto _iter_begin_1ad3b5625;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a972b2a8_doubleDash(_1a972a175_argParser* _self_, jule::Str* _26627_arg) {
	if (((*(_26627_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	jule::Trait _2707_flag = _1a9727e86_FindFlag(&(*(_self_))._field_set, (*(_26627_arg)).slice(2LL));;
	if ((_2707_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type4)};
	};
	return _1a972ac47_processFlag(_self_, &(_2707_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a972b4a6_tryArg(_1a972a175_argParser* _self_) {
	jule::Str _2783_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2783_arg[0LL] == '-')) {
		if (((_2783_arg.len() > 1LL) && (_2783_arg[1LL] == '-'))) {
			({
				auto except = _1a972b2a8_doubleDash(_self_, &(_2783_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1a972b000_singleDash(_self_, &(_2783_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2783_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a972b6a4_parse(_1a972a175_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1a972b4a6_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1ad3ba383:;
	}
	_iter_end_1ad3ba383:;;
	return jule::VoidExceptional{};
}







inline __jule_tuple_x_1a882795a_IR__jule_tuple_s_1d9144ab5_Log static__1a8827e33_Build(jule::Str _2918_path, jule::I64 _2929_flags) {
	__jule_tuple_x_1a882795a_IR__jule_tuple_s_1d9144ab5_Log __jule_func_result;
	jule::Ptr<_1a8824e85_JuleImporter> _307_importer = static__1a88253b4_New(_1a88298d5_buildCompileInfo());;
	;
	jule::Slice<jule::Ptr<_1a7b7d19b_AST>> _327_files;
	jule::Slice<_1d9144ab5_Log> _3218_logs;
	({
		__jule_tuple_sx_1a7b7d19b_AST__jule_tuple_s_1d9144ab5_Log __jule_assign_result = _1a882689e_ImportPackage(_307_importer.ptr(), _2918_path, true);
		_327_files = __jule_assign_result.__jule_result_arg0;
		_3218_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3218_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3218_logs;
		return __jule_func_result;;
	};
	jule::Str _363_root = _2918_path;;
	if ((_327_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7b7d19b_AST> _447_firstFile = _327_files[0LL];;
	_1a8829b8d_pushRuntimeToAST(&(_447_firstFile));
	jule::Ptr<_1a7c396b9_Package> _477_pkg;
	({
		__jule_tuple_x_1a7c396b9_Package__jule_tuple_s_1d9144ab5_Log __jule_assign_result = _1a7d3de50_AnalyzePackage(_327_files, jule::Trait(_307_importer, (jule::Trait::Type*)&_1a7c33509_Importer_mptr_data0), _2929_flags);
		_477_pkg = __jule_assign_result.__jule_result_arg0;
		_3218_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3218_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3218_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1a882795a_IR> _527_ir = jule::new_ptr<_1a882795a_IR>(_1a882795a_IR{._field_Root=_363_root, ._field_Passes=jule::Slice<jule::Str>(nullptr), ._field_Main=_477_pkg, ._field_Runtime=jule::Ptr<_1a7c36793_ImportInfo>(nullptr), ._field_Used=_1a882564a_AllPackages(_307_importer), ._field_Ordered=_1a8832eb5_OrderedDefines{._field_Structs=jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>>(nullptr), ._field_Globals=jule::Slice<jule::Ptr<_1a7c7b178_Var>>(nullptr)}});;
	(*(_527_ir))._field_Passes=_1a88296c6_getAllUniquePasses(&((*_527_ir.alloc)._field_Main), (*_527_ir.alloc)._field_Used);
	(*_527_ir.alloc)._field_Runtime=(*((*(_477_pkg))._field_Files[0LL]))._field_Imports[0LL];
	__jule_func_result.__jule_result_arg0 = _527_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a882841c_appendStructs(_1a882795a_IR* _self_, jule::Ptr<_1a7c396b9_Package>* _6730_p, jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>>* _6754_buffer) {
	{
		auto expr = &((*((*(_6730_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac81c6b5:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _6815_f = *it;
			{
				{
					auto expr = &((*(_6815_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac81d122:;
					if (it != expr_end) {
						jule::Ptr<_1a7ba5ca6_Struct> _6916_s = *it;
						{
							if ((!((*(_6916_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>> &__jule_push_dest = (*(_6754_buffer)); __jule_push_dest.push(_6916_s); };
							};
						}
						_iter_next_1ac81d122:;
						++it;
						goto _iter_begin_1ac81d122;
					}
					_iter_end_1ac81d122:;
				};
			}
			_iter_next_1ac81c6b5:;
			++it;
			goto _iter_begin_1ac81c6b5;
		}
		_iter_end_1ac81c6b5:;
	};
}



inline jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>> _1a88286a3_GetAllStructures(_1a882795a_IR* _self_) {
	jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>> _8011_buffer = nullptr;;
	_1a882841c_appendStructs(_self_, &((*(_self_))._field_Main), &(_8011_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac81e2cc:;
		if (it != expr_end) {
			jule::Ptr<_1a7c36793_ImportInfo> _8215_u = *it;
			{
				if ((!((*(_8215_u))._field_Binded))) {
					_1a882841c_appendStructs(_self_, &((*_8215_u.alloc)._field_Package), &(_8011_buffer));
				};
			}
			_iter_next_1ac81e2cc:;
			++it;
			goto _iter_begin_1ac81e2cc;
		}
		_iter_end_1ac81e2cc:;
	};
	return _8011_buffer;;
}



inline void _1a8828a16_appendGlobals(_1a882795a_IR* _self_, jule::Ptr<_1a7c396b9_Package>* _9030_p, jule::Slice<jule::Ptr<_1a7c7b178_Var>>* _9054_buffer) {
	{
		auto expr = &((*((*(_9030_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac820960:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _9115_f = *it;
			{
				{
					auto expr = &((*(_9115_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac8213bc:;
					if (it != expr_end) {
						jule::Ptr<_1a7c7b178_Var> _9216_v = *it;
						{
							if (((((*(_9216_v))._field_Token != nullptr) && (!((*_9216_v.alloc)._field_Binded))) && (!((*_9216_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1a7c7b178_Var>> &__jule_push_dest = (*(_9054_buffer)); __jule_push_dest.push(_9216_v); };
							};
						}
						_iter_next_1ac8213bc:;
						++it;
						goto _iter_begin_1ac8213bc;
					}
					_iter_end_1ac8213bc:;
				};
			}
			_iter_next_1ac820960:;
			++it;
			goto _iter_begin_1ac820960;
		}
		_iter_end_1ac820960:;
	};
}



inline jule::Slice<jule::Ptr<_1a7c7b178_Var>> _1a8828c9c_GetAllGlobals(_1a882795a_IR* _self_) {
	jule::Slice<jule::Ptr<_1a7c7b178_Var>> _10311_buffer = nullptr;;
	_1a8828a16_appendGlobals(_self_, &((*(_self_))._field_Main), &(_10311_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac822ce7:;
		if (it != expr_end) {
			jule::Ptr<_1a7c36793_ImportInfo> _10515_u = *it;
			{
				if ((!((*(_10515_u))._field_Binded))) {
					_1a8828a16_appendGlobals(_self_, &((*_10515_u.alloc)._field_Package), &(_10311_buffer));
				};
			}
			_iter_next_1ac822ce7:;
			++it;
			goto _iter_begin_1ac822ce7;
		}
		_iter_end_1ac822ce7:;
	};
	return _10311_buffer;;
}



inline void _1a8828e9a_Order(_1a882795a_IR* _self_) {
	(*(_self_))._field_Ordered._field_Globals=_1a8828c9c_GetAllGlobals(_self_);
	(*(_self_))._field_Ordered._field_Structs=_1a88286a3_GetAllStructures(_self_);
	_1ac8248ed_order((*(_self_))._field_Ordered._field_Globals);
	_1ac8254d1_order((*(_self_))._field_Ordered._field_Structs);
}











inline jule::Ptr<_1d92015cd_Cmd> static__1d9201a2e_New(jule::Str _2616_path) {
	return jule::new_ptr<_1d92015cd_Cmd>(_1d92015cd_Cmd{._field_attrs=_1d92555aa_cmdAttrs{._field_pid=-1LL}, ._field_path=_2616_path, ._field_Args=jule::Slice<jule::Str>(nullptr), ._field_Env=jule::Slice<jule::Str>(nullptr)});;
}



inline jule::VoidExceptional _1d9201c2c_Spawn(_1d92015cd_Cmd* _self_) {
	return _1d9256358_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _1d92021b1_Wait(_1d92015cd_Cmd* _self_) {
	return _1d92567dc_wait(_self_);
}



inline jule::VoidExceptional _1d9256358_spawn(_1d92015cd_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		__jule_panic_s(jule::Str::lit("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_unix.jule:83:4"));;
	};
	jule::Str _853_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _867_pipe;;
	if ((pipe((&(_867_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0)};
	};
	if ((_1d7e07857_Fcntl(static_cast<jule::I64>(_867_pipe[1LL]), F_SETFD, (fcntl(static_cast<jule::I64>(_867_pipe[1LL]), F_GETFD) | FD_CLOEXEC)) == -1LL)) {
		_1d7e24ec3_Close(static_cast<jule::I64>(_867_pipe[0LL]));
		_1d7e24ec3_Close(static_cast<jule::I64>(_867_pipe[1LL]));
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0)};
	};
	(*(_self_))._field_attrs._field_pid=fork();
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1aa6e4d0e:;
			{
				return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0)};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1aa6e3e40:;
			{
				_1d7e24ec3_Close(static_cast<jule::I64>(_867_pipe[0LL]));
				jule::Slice<jule::Str> _1018_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len())); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
				_1018_args[0LL]=_853_path;
				(_1018_args).append((*(_self_))._field_Args);;
				({
					auto except = _1d92560c2_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
				_1d9255d91_execvp(&(_853_path), &(_1018_args));
				jule::Str _1064_code = _1d9251b8e_Itoa(_1d7a9bba0_GetLastErrno());;
				{
					_1d7e2537a_Write(static_cast<jule::I64>(_867_pipe[1LL]), (&(_1064_code[0LL])), static_cast<jule::U64>(_1064_code.len()));
				};
				_1d7e24ec3_Close(static_cast<jule::I64>(_867_pipe[1LL]));
				_1d92579db_Exit(1LL);
			}
		}
		else {
			_case_begin_1aa6dec60:;
			{
				_1d7e24ec3_Close(static_cast<jule::I64>(_867_pipe[1LL]));
				jule::Array<jule::U8,16> _11212_buf = ({ auto __jule_collection = jule::Array<jule::U8,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
				jule::I64 _1134_n = _1d7e24ae9_Read(static_cast<jule::I64>(_867_pipe[0LL]), (&(_11212_buf[0LL])), static_cast<jule::U64>(16LLU));;
				_1d7e24ec3_Close(static_cast<jule::I64>(_867_pipe[0LL]));
				if ((_1134_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I64 _1175_code;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d9202c0b_AtoiBp((&(_11212_buf[0LL])), _1134_n);
						_1175_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional{.error=jule::Any(_1d925704b_processErrorFromCode(_1175_code), &__jule_any_type0)};
				};
			}
		}
		_match_end_1aa6e1b30:;
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _1d92567dc_wait(_1d92015cd_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		__jule_panic_s(jule::Str::lit("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:135:4"));;
	};
	jule::I64 _1377_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_1377_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_1d925729e_getLastProcessError(), &__jule_any_type0)};
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I64>{.result=WEXITSTATUS(_1377_stat)};;
}







inline void _1d7db74e8_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _1d7de7d31_BytePtrToStr(jule::U8* _6524_s) {
	if ((_6524_s == nullptr)) {
		return jule::Str();;
	};
	jule::I64 _696_n = 0LL;;
	{
		for (; (_6524_s[_696_n] != 0LLU); (_696_n)++) {};
	};
	if ((_696_n == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _766_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_696_n, _696_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_696_n=0LL;
	{
		for (; (_6524_s[_696_n] != 0LLU); (_696_n)++) {
			{
				_766_buf[_696_n]=_6524_s[_696_n];
			}
		_iter_next_1a9754710:;
		}
		_iter_end_1a9754710:;;
	};
	return __jule_bytesToStr(_766_buf);;
}



inline jule::Slice<jule::U8> _1d7de80b7_StrToBytes(jule::Str _8915_s) {
	{
		auto expr = &(_8915_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9754c0a:;
		if (it != expr_end) {
			jule::I64 _906_i = it - expr->begin();
			jule::U8 *_909_b = it;
			{
				if (((*(_909_b)) == 0LLU)) {
					jule::Slice<jule::U8> _928_bytes = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc((_906_i + 1LL), (_906_i + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
					jule::copy(_928_bytes, _8915_s.slice(0LL, _928_bytes.len()));
					return _928_bytes;;
				};
			}
			_iter_next_1a9754c0a:;
			++it;
			_906_i++;
			goto _iter_begin_1a9754c0a;
		}
		_iter_end_1a9754c0a:;
	};
	jule::Slice<jule::U8> _976_bytes = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc((_8915_s.len() + 1LL), (_8915_s.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_976_bytes, _8915_s);
	return _976_bytes;;
}



inline jule::I64 _1d7a9bba0_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _1d7e07857_Fcntl(jule::I64 _5410_handle, jule::I64 _5423_cmd, jule::I64 _5433_arg) {
	return fcntl(_5410_handle, _5423_cmd, _5433_arg);;
}



inline jule::I64 _1d7e07bcb_Stat(jule::U8* _5916_path, struct stat* _5933_stat) {
	return stat(((char*)(_5916_path)), _5933_stat);;
}



inline jule::I64 _1d7e0810a_Open(jule::U8* _6416_path, jule::I64 _6429_flag, jule::I64 _6440_mode) {
	return open(((char*)(_6416_path)), _6429_flag, _6440_mode);;
}



inline jule::U8* _1d7e0847e_Getcwd(jule::U8* _7018_buff, jule::U64 _7031_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7018_buff)), _7031_bufflen)));;
}



inline DIR* _1d7e08979_Opendir(jule::U8* _7519_path) {
	return opendir(((char*)(_7519_path)));;
}



inline struct dirent* _1d7e08b55_Readdir(DIR* _7823_dir) {
	return readdir(_7823_dir);;
}



inline jule::I64 _1d7e08dec_Closedir(DIR* _8124_dir) {
	return closedir(_8124_dir);;
}



inline jule::I64 _1d7e09804_Mkdir(jule::U8* _9017_path, jule::I64 _9030_mode) {
	return mkdir(((char*)(_9017_path)), _9030_mode);;
}



inline jule::I64 _1d7e09abd_Rmdir(jule::U8* _9517_path) {
	return rmdir(((char*)(_9517_path)));;
}



inline jule::I64 _1d7e09d87_Unlink(jule::U8* _9818_path) {
	return unlink(((char*)(_9818_path)));;
}



inline jule::I64 _1d7e24ae9_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I64 _1d7e24ec3_Close(jule::I64 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I64 _1d7e2537a_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _1d7e255ab_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline jule::Str _1d7e42353_Str(jule::U8* _108_b, jule::I64 _1018_n) {
	jule::Str _116_s = jule::Str();;
	{
		_116_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_116_s._len = _1018_n;
		_116_s._slice = _108_b;
	};
	return _116_s;;
}



inline jule::Slice<jule::U8> _1a97a7785_Slice(jule::U8* _2216_e, jule::I64 _2226_len, jule::I64 _2236_cap) {
	jule::Slice<jule::U8> _236_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_236_buf.data = jule::Ptr<jule::U8>::make(_2216_e, nullptr);
		_236_buf._len = _2226_len;
		_236_buf._cap = _2236_cap;
		_236_buf._slice = _2216_e;
	};
	return _236_buf;;
}



inline jule::Slice<jule::U8> _1d7e4d705_StrBytes(jule::Str _4013_s) {
	if ((_4013_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1a97a7785_Slice((&(_4013_s[0LL])), _4013_s.len(), _4013_s.len());;
}



inline jule::Str _1d7e4d98b_BytesStr(jule::Slice<jule::U8> _4913_b) {
	if ((_4913_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _1d7e42353_Str((&(_4913_b[0LL])), _4913_b.len());;
}



inline jule::Str _1d7e4dc55_StrFromBytes(jule::Slice<jule::U8> _5717_b) {
	return (*(((jule::Str*)((&(_5717_b))))));;
}



inline __jule_tuple_i32__jule_tuple_int _1d806264e_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1862_p0 = _18215_p[0LL];;
	jule::U8 _1872_x = _1d80613b7_first[static_cast<jule::I64>(_1862_p0)];;
	if ((_1872_x >= 240LLU)) {
		jule::I32 _1923_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_1872_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1923_mask))) | (65533LL & _1923_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1952_sz = static_cast<jule::I64>((_1872_x & 7LLU));;
	_1d806196c_acceptRange _1962_accept = _1d8061d13_acceptRanges[static_cast<jule::I64>((_1872_x >> 4LLU))];;
	if ((_18215_p.len() < _1952_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2002_b1 = _18215_p[1LL];;
	if (((_2002_b1 < _1962_accept._field_lo) || (_1962_accept._field_hi < _2002_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1862_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2002_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2072_b2 = _18215_p[2LL];;
	if (((_2072_b2 < 128LLU) || (191LL < _2072_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1862_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2072_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2142_b3 = _18215_p[3LL];;
	if (((_2142_b3 < 128LLU) || (191LL < _2142_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1862_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2072_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2142_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1d8062990_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2332_s0 = _22918_s[0LL];;
	jule::U8 _2342_x = _1d80613b7_first[static_cast<jule::I64>(_2332_s0)];;
	if ((_2342_x >= 240LLU)) {
		jule::I32 _2393_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_2342_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2393_mask))) | (65533LL & _2393_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2422_sz = static_cast<jule::I64>((_2342_x & 7LLU));;
	_1d806196c_acceptRange _2432_accept = _1d8061d13_acceptRanges[static_cast<jule::I64>((_2342_x >> 4LLU))];;
	if ((_22918_s.len() < _2422_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2472_s1 = _22918_s[1LL];;
	if (((_2472_s1 < _2432_accept._field_lo) || (_2432_accept._field_hi < _2472_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2332_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2472_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2542_s2 = _22918_s[2LL];;
	if (((_2542_s2 < 128LLU) || (191LL < _2542_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2332_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2542_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2612_s3 = _22918_s[3LL];;
	if (((_2612_s3 < 128LLU) || (191LL < _2612_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2332_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2542_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2612_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1d8062ee0_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _3212_end = _31722_s.len();;
	jule::I64 _3226_start = (_3212_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3226_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _3306_lim = (_3212_end - 4LL);;
	if ((_3306_lim < 0LL)) {
		_3306_lim=0LL;
	};
	(_3226_start)--;
	for (; (_3226_start >= _3306_lim); (_3226_start)--) {
		{
			if (_1d806470b_RuneStart(_31722_s[_3226_start])) {
				goto _iter_end_1a97edab7;
			};
		}
	_iter_next_1a97edab7:;
	}
	_iter_end_1a97edab7:;;
	if ((_3226_start < 0LL)) {
		_3226_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d8062990_DecodeRuneStr(_31722_s.slice(_3226_start, _3212_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3226_start + __jule_func_result.__jule_result_arg1) != _3212_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _1d8063a3a_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U8>(_40530_r); __jule_collection; }));;
	};
	return _1d8063dae_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _1d8063dae_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4142_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4142_i <= 2047LLU)) {
			_case_begin_1a980cd4b:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (192LL | static_cast<jule::U8>((_41242_r >> 6LL))); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else if ((_4142_i > 1114111LLU) || ((55296LL <= _4142_i) && (_4142_i <= 57343LLU))) {
			_case_begin_1a980ba09:;
			{
				_41242_r=128LL;
				goto _case_begin_1a980ba70;
			}
		}
		else if ((_4142_i <= 65535LLU)) {
			_case_begin_1a980ba70:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = (224LL | static_cast<jule::U8>((_41242_r >> 12LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else {
			_case_begin_1a980b29a:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = (240LL | static_cast<jule::U8>((_41242_r >> 18LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		_match_end_1a980b223:;
	};
}



inline jule::I64 _1d8064442_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _4746_i = 0LL;;
	for (; (_4746_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _4767_c = _47317_s[_4746_i];;
			if ((_4767_c < 128LLU)) {
				(_4746_i)++;
				goto _iter_next_1a9816162;
			};
			jule::U8 _4823_x = _1d80613b7_first[static_cast<jule::I64>(_4767_c)];;
			if ((_4823_x == 241LLU)) {
				(_4746_i)++;
				goto _iter_next_1a9816162;
			};
			jule::I64 _4877_size = static_cast<jule::I64>((_4823_x & 7LLU));;
			if (((_4746_i + _4877_size) > _47317_s.len())) {
				(_4746_i)++;
				goto _iter_next_1a9816162;
			};
			_1d806196c_acceptRange _4923_accept = _1d8061d13_acceptRanges[static_cast<jule::I64>((_4823_x >> 4LLU))];;
			_4767_c=_47317_s[(_4746_i + 1LL)];
			if (((_4767_c < _4923_accept._field_lo) || (_4923_accept._field_hi < _4767_c))) {
				_4877_size=1LL;
			} else if ((_4877_size == 2LL)) {
			} else {
				_4767_c=_47317_s[(_4746_i + 2LL)];
				if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
					_4877_size=1LL;
				} else if ((_4877_size == 3LL)) {
				} else {
					_4767_c=_47317_s[(_4746_i + 3LL)];
					if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
						_4877_size=1LL;
					};
				};
			};
			_4746_i+=_4877_size;
		}
	_iter_next_1a9816162:;
	}
	_iter_end_1a9816162:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1d806470b_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _1d81b09de_LeadingZeros64(jule::U64 _6119_x) {
	return (64LL - _1d81b8376_Len64(_6119_x));;
}



inline jule::I64 _1d81b1935_TrailingZeros(jule::U64 _8318_x) {
	;
	return _1d81b25d4_TrailingZeros64(static_cast<jule::U64>(_8318_x));;
}



inline jule::I64 _1d81b231a_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(_1d81b112c__DE_BRUIJN32_TAB[static_cast<jule::I64>(((jule::U32)((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I64 _1d81b25d4_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(_1d81b16c1__DE_BRUIJN64_TAB[static_cast<jule::I64>(((jule::U64)((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I64 _1d81b80ac_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x=(_35214_x >> 16LLU);
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x=(_35214_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_35214_x))));
	return __jule_func_result;;
}



inline jule::I64 _1d81b8376_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x=(_36614_x >> 32LLU);
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x=(_36614_x >> 16LLU);
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x=(_36614_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_36614_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1d81b9113_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)(_41510_x + _41518_y) + _41526_carry);
	__jule_func_result.__jule_result_arg1=(((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1d81ba91c_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5012_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5022_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5032_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5042_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5052_w0 = (jule::U64)(_5012_x0 * _5032_y0);;
	jule::U64 _5062_t = (jule::U64)((jule::U64)(_5022_x1 * _5032_y0) + (_5052_w0 >> 32LLU));;
	jule::U64 _5076_w1 = (_5062_t & 4294967295LLU);;
	jule::U64 _5082_w2 = (_5062_t >> 32LLU);;
	_5076_w1+=(jule::U64)(_5012_x0 * _5042_y1);
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)((jule::U64)(_5022_x1 * _5042_y1) + _5082_w2) + (_5076_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(jule::U64)(_49910_x * _49918_y);
	return __jule_func_result;;
}



inline jule::I64 _202401100_randInt(jule::U64 _716_seed, jule::I64 _727_max) {
	;
	;
	;
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	_716_seed=(jule::U64)((jule::U64)(_716_seed * 1103515245LLU) + 12345LLU);
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	jule::I64 _162_p1 = static_cast<jule::I64>((_716_seed & 9223372036854775807LLU));;
	jule::U64 _172_p2 = static_cast<jule::U64>(_162_p1);;
	return ({ jule::I64 __jule_x = static_cast<jule::I64>((({ jule::U64 __jule_x = _172_p2; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) >> 1LLU)); jule::I64 __jule_y = _727_max; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x % __jule_y)); });;
}



inline jule::Bool _1a9983a82_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Str* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1a9985831:;
	}
	_iter_end_1a9985831:;;
	return true;;
}

inline jule::Bool _1aa882496_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::U8* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1aa883b4b:;
	}
	_iter_end_1aa883b4b:;;
	return true;;
}

inline jule::Bool _1acba57a6_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Bool* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1acba7511:;
	}
	_iter_end_1acba7511:;;
	return true;;
}



inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b) {
	return (_1313_a == _1325_b);;
}



inline void _1d7e34873__handleRW(jule::Slice<jule::U8>* _1615_b) {
	if (((*(_1615_b)).len() > 1073741824LL)) {
		{
			((*((&((*(_1615_b))))))).mut_slice(0LL, 1073741824LLU);;
		};
	};
}



inline jule::I64 __jule_writeStdout(jule::Slice<jule::U8> _2520_buf) {
	if ((_2520_buf.len() == 0LL)) {
		return 0LL;;
	};
	_1d806707c_handleRW(&(_2520_buf));
	return _1d7e2537a_Write(static_cast<jule::I64>(_1d7e06adc_STDOUT), (&(_2520_buf[0LL])), static_cast<jule::U64>(_2520_buf.len()));;
}



inline jule::I64 __jule_writeStderr(jule::Slice<jule::U8> _3620_buf) {
	if ((_3620_buf.len() == 0LL)) {
		return 0LL;;
	};
	_1d806707c_handleRW(&(_3620_buf));
	return _1d7e2537a_Write(static_cast<jule::I64>(_1d7e06dc8_STDERR), (&(_3620_buf[0LL])), static_cast<jule::U64>(_3620_buf.len()));;
}



inline jule::I64 __jule_readStdin(jule::Slice<jule::U8> _4718_buf) {
	if ((_4718_buf.len() == 0LL)) {
		return 0LL;;
	};
	_1d806707c_handleRW(&(_4718_buf));
	return _1d7e2537a_Write(static_cast<jule::I64>(_1d7e067ac_STDIN), (&(_4718_buf[0LL])), static_cast<jule::U64>(_4718_buf.len()));;
}



inline void __jule_panic(jule::U8* _1318_m, jule::I64 _1328_n) {
	__jule_writeStderr(_1d7e4d705_StrBytes(jule::Str::lit("panic: ", 7)));
	__jule_writeStderr(_1a97a7785_Slice(_1318_m, _1328_n, _1328_n));
	__jule_writeStderr(_1d7e4d705_StrBytes(jule::Str::lit("\n", 1)));
	_1d7e255ab_Exit(2LL);
}



inline jule::Str _1d7e54dc1_executable(void) {
	jule::Array<jule::U8,1024> _1310_buf = jule::Array<jule::U8,1024>(0LLU);;
	jule::U32 _142_size = static_cast<jule::U32>(1024LLU);;
	jule::U8* _156_p = (&(_1310_buf[0LL]));;
	{
		if ((!(_NSGetExecutablePath(((char*)(_156_p)), (&(_142_size)))))) {
			return _1d7de7d31_BytePtrToStr(_156_p);;
		};
	};
	__jule_panic_s(jule::Str::lit("runtime: executable path read error", 35) + jule::Str("\nlocation: std/runtime/env_darwin.jule:21:2"));;
}



inline jule::U64 __jule_RCLoad(jule::U64* _1019_p) {
	return (*(_1019_p));;
}



inline void __jule_RCAdd(jule::U64* _1722_p) {
	(*(_1722_p))+=1LLU;
}



inline jule::Bool __jule_RCDrop(jule::U64* _2523_p) {
	jule::Bool _272_alive = ((*(_2523_p)) > 1LLU);;
	(*(_2523_p))-=1LLU;
	return _272_alive;;
}



inline jule::U64* __jule_RCNew(void) {
	;
	;
	jule::U64* _256_p = ((jule::U64*)(malloc(8LLU)));;
	if ((_256_p == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime: memory allocation failed for reference counting data", 61) + jule::Str("\nlocation: std/runtime/rc.jule:27:3"));;
	};
	{
		(*(_256_p))=1LLU;
	};
	return _256_p;;
}



inline void __jule_RCFree(jule::U64* _3519_p) {
	free(_3519_p);
}



inline jule::Str __jule_ptrToStr(void* _1113_p) {
	if ((_1113_p == nullptr)) {
		return jule::Str::lit("<nil>", 5);;
	};
	;
	jule::Slice<jule::U8> _166_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 12LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	(_166_buf).append(jule::Str::lit("0x", 2));;
	jule::Uintptr _186_z = ((jule::Uintptr)(_1113_p));;
	while ((_186_z > 0LLU)) {
		{
			{ jule::Slice<jule::U8> &__jule_push_dest = _166_buf; __jule_push_dest.push(jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdef"), 16, static_cast<jule::I64>((_186_z % 16LL)))); };
			_186_z=(_186_z >> 4LLU);
		}
	_iter_next_1a98e4240:;
	}
	_iter_end_1a98e4240:;;
	jule::I64 _236_i = 0LL;;
	for (; (_236_i < (_166_buf.len() >> 1LL)); (_236_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _166_buf[((_166_buf.len() - _236_i) - 1LL)];
				jule::U8 _1___jule_assign_arg = _166_buf[(_236_i + 2LL)];
				_166_buf[(_236_i + 2LL)] = ___jule_assign_arg;
				_166_buf[((_166_buf.len() - _236_i) - 1LL)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1a98e46e6:;
	}
	_iter_end_1a98e46e6:;;
	return _1d7e4dc55_StrFromBytes(_166_buf);;
}



inline jule::Str __jule_boolToStr(jule::Bool _3214_b) {
	if (_3214_b) {
		return jule::Str::lit("true", 4);;
	};
	return jule::Str::lit("false", 5);;
}



inline jule::Str __jule_i64ToStr(jule::I64 _4113_x) {
	if ((_4113_x < 0LL)) {
		return (jule::Str::lit("-", 1) + __jule_u64ToStr(static_cast<jule::U64>((-(_4113_x)))));;
	};
	return __jule_u64ToStr(static_cast<jule::U64>(_4113_x));;
}



inline jule::Str __jule_u64ToStr(jule::U64 _5017_x) {
	jule::Slice<jule::U8> _516_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(20LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _522_n = _1d7e5e54b_u64ToBuf(_516_buf, _5017_x);;
	(_516_buf).mut_slice(0LL, _522_n);;
	return _1d7e4dc55_StrFromBytes(_516_buf);;
}



inline jule::I64 _1d7e5e54b_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x) {
	if ((_5934_x == 0LLU)) {
		_5917_buf[0LL]='0';
		return 1LL;;
	};
	jule::I64 _646_i = 0LL;;
	while ((_5934_x >= 10LLU)) {
		{
			jule::U64 _663_q = (_5934_x / 10LLU);;
			_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)((jule::U64)('0' + _5934_x) - (jule::U64)(_663_q * 10LLU)));
			(_646_i)++;
			_5934_x=_663_q;
		}
	_iter_next_1a98e96c9:;
	}
	_iter_end_1a98e96c9:;;
	jule::I64 _722_n = (_646_i + 1LL);;
	_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)('0' + _5934_x));
	_1d7e606e5_rev(_5917_buf.slice(0LL, _722_n));
	return _722_n;;
}



inline jule::Str __jule_f64ToStr(jule::F64 _8017_f) {
	;
	jule::I64 _842_n = 26LL;;
	jule::Slice<jule::U8> _856_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_842_n, _842_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _866_j = 0LL;;
	if ((_8017_f < 0LL)) {
		_856_buf[0LL]='-';
		(_866_j)++;
		_8017_f=(-(_8017_f));
	};
	jule::U64 _932_intPart = static_cast<jule::U64>(_8017_f);;
	_866_j+=_1d7e5e54b_u64ToBuf(_856_buf.slice(_866_j), _932_intPart);
	_856_buf[_866_j]='.';
	jule::F64 _976_fracPart = (_8017_f - static_cast<jule::F64>(_932_intPart));;
	jule::I64 _986_i = 0LL;;
	for (; (_986_i < 4LL); (_986_i)++) {
		{
			_976_fracPart*=10LL;
			jule::I64 _1013_digit = static_cast<jule::I64>(_976_fracPart);;
			(_866_j)++;
			_856_buf[_866_j]=static_cast<jule::U8>(('0' + _1013_digit));
			_976_fracPart-=static_cast<jule::F64>(_1013_digit);
		}
	_iter_next_1a98eeda5:;
	}
	_iter_end_1a98eeda5:;;
	for (; (_866_j >= 0LL); (_866_j)--) {
		{
			if ((_856_buf[_866_j] != '0')) {
				goto _iter_end_1a9900c41;
			};
		}
	_iter_next_1a9900c41:;
	}
	_iter_end_1a9900c41:;;
	if ((_856_buf[_866_j] != '.')) {
		(_866_j)++;
	};
	(_856_buf).mut_slice(0LL, _866_j);;
	return _1d7e4dc55_StrFromBytes(_856_buf);;
}



inline jule::Str _1ad3dbb46_arrToStr(jule::Slice<jule::U8> _12316_x) {
	jule::Slice<jule::U8> _1246_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1246_buf; __jule_push_dest.push('['); };
	{
		auto expr = &(_12316_x);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3dce11:;
		if (it != expr_end) {
			jule::I64 _1266_i = it - expr->begin();
			jule::U8 *_1269_z = it;
			{
				if ((_1266_i > 0LL)) {
					(_1246_buf).append(jule::Str::lit(", ", 2));;
				};
				(_1246_buf).append(_1a9968acd_toStr((*(_1269_z))));;
			}
			_iter_next_1ad3dce11:;
			++it;
			_1266_i++;
			goto _iter_begin_1ad3dce11;
		}
		_iter_end_1ad3dce11:;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1246_buf; __jule_push_dest.push(']'); };
	return _1d7e4dc55_StrFromBytes(_1246_buf);;
}



inline jule::Str _1ad3d19d7_structToStr(_1daed18b7_StrBuilder _15619_x) {
	;
	;
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		{
			
{
				_case_begin_1ad3d4a1d:;
				{
					;
					{
						
{
							_case_begin_1ad3d5ba6:;
							{
								;
								;
							}
						}
						_match_end_1ad3d5887:;
					};
				}
			}
			_match_end_1ad3d40b1:;
		};
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	jule::Slice<jule::U8> _1776_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1776_buf; __jule_push_dest.push('{'); };
	{
		;
		{
			
{
				_case_begin_1ad3d7a87:;
				{
					(_1776_buf).append(_1ad3d836d_toStr(_15619_x._field_buf));;
				}
			}
			_match_end_1ad3d79dd:;
		};
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1776_buf; __jule_push_dest.push('}'); };
	return _1d7e4dc55_StrFromBytes(_1776_buf);;
}



inline jule::Str _1a9952d1a_toStr(jule::Any _19713_x) {
	;
	{
		
{
			_case_begin_1a995404c:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9953e5e:;
	};
	{
		
{
			_case_begin_1a9954569:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
				return _19713_x.type->to_str(_19713_x.data.alloc);;
			}
		}
		_match_end_1a9954404:;
	};
}

inline jule::Str _1a9954ee8_toStr(jule::Str _19713_x) {
	;
	;
	{
		
{
			_case_begin_1a995626e:;
			{
				return _19713_x;;
			}
		}
		_match_end_1a9956208:;
	};
}

inline jule::Str _1a9955746_toStr(jule::I64 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1a9958c77:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_19713_x));;
			}
		}
		_match_end_1a9958b89:;
	};
}

inline jule::Str _1a995a4a4_toStr(jule::I8 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1a995b708:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_19713_x));;
			}
		}
		_match_end_1a995b61a:;
	};
}

inline jule::Str _1a99581d8_toStr(jule::I16 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1a995e189:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_19713_x));;
			}
		}
		_match_end_1a995e09b:;
	};
}

inline jule::Str _1a99608b6_toStr(jule::I32 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1a9961ba3:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_19713_x));;
			}
		}
		_match_end_1a9961ab5:;
	};
}

inline jule::Str _1a996339c_toStr(jule::I64 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1a99646bc:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_19713_x));;
			}
		}
		_match_end_1a99645ce:;
	};
}

inline jule::Str _1a9965de9_toStr(jule::U64 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1a99671c5:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_19713_x));;
			}
		}
		_match_end_1a9967060:;
	};
}

inline jule::Str _1a996390d_toStr(jule::Uintptr _19713_x) {
	;
	;
	{
		
{
			_case_begin_1a9969617:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_19713_x));;
			}
		}
		_match_end_1a99694a2:;
	};
}

inline jule::Str _1a9968acd_toStr(jule::U8 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1a996ba59:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_19713_x));;
			}
		}
		_match_end_1a996b8e4:;
	};
}

inline jule::Str _1a996b020_toStr(jule::U16 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1a996de9b:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_19713_x));;
			}
		}
		_match_end_1a996dd36:;
	};
}

inline jule::Str _1a996d462_toStr(jule::U32 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1a99713dd:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_19713_x));;
			}
		}
		_match_end_1a9971278:;
	};
}

inline jule::Str _1a99708a4_toStr(jule::U64 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1a9973973:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_19713_x));;
			}
		}
		_match_end_1a997380d:;
	};
}

inline jule::Str _1a9973c81_toStr(jule::F32 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1a9975e81:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_19713_x));;
			}
		}
		_match_end_1a9975c94:;
	};
}

inline jule::Str _1a9972d3a_toStr(jule::F64 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1a9977ed8:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_19713_x));;
			}
		}
		_match_end_1a9977ceb:;
	};
}

inline jule::Str _1a9960c90_toStr(jule::Bool _19713_x) {
	;
	;
	{
		
{
			_case_begin_1a9979da8:;
			{
				return __jule_boolToStr(_19713_x);;
			}
		}
		_match_end_1a9979b33:;
	};
}

inline jule::Str _1a997a01d_toStr(jule::I64 _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1a997ba47:;
			{
				return _1a9955746_toStr(_19713_x);;
			}
		}
		_match_end_1a997ab12:;
	};
}

inline jule::Str _1aa6a3938_toStr(jule::I64 _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1aa6a542e:;
			{
				return _1a9955746_toStr(_19713_x);;
			}
		}
		_match_end_1aa6a4d35:;
	};
}

inline jule::Str _1aa6dc18b_toStr(jule::I64 _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1aa6ddb82:;
			{
				return _1a9955746_toStr(_19713_x);;
			}
		}
		_match_end_1aa6dd588:;
	};
}

inline jule::Str _1aa92190e_toStr(jule::I64 _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1aa923405:;
			{
				return _1a9955746_toStr(_19713_x);;
			}
		}
		_match_end_1aa922d0b:;
	};
}

inline jule::Str _1ab11dcdc_toStr(jule::Ptr<_1a7ba1a82_Impl> _19713_x) {
	;
	{
		
{
			_case_begin_1ab11ee97:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab11eda9:;
	};
	;
	{
		
{
			_case_begin_1ab120948:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab120618:;
	};
}

inline jule::Str _1ab11e095_toStr(jule::Ptr<_1a7b9b939_TypeAliasDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1ab12373c:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab12364e:;
	};
	;
	{
		
{
			_case_begin_1ab1241dd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab123dad:;
	};
}

inline jule::Str _1ab1218c2_toStr(jule::Ptr<_1a7ba0bd5_StructDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1ab127334:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab127246:;
	};
	;
	{
		
{
			_case_begin_1ab127cd5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab1279a5:;
	};
}

inline jule::Str _1ab128c4d_toStr(jule::Ptr<_1a7b96acc_FnDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1ab12b06e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab12ae81:;
	};
	;
	{
		
{
			_case_begin_1ab12ba20:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab12b6e0:;
	};
}

inline jule::Str _1ab12c845_toStr(jule::Ptr<_1a7ba1422_TraitDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1ab12eb66:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab12ea78:;
	};
	;
	{
		
{
			_case_begin_1ab130617:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab1302d7:;
	};
}

inline jule::Str _1ab13143c_toStr(jule::Ptr<_1a7b97c87_VarDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1ab13375d:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab133670:;
	};
	;
	{
		
{
			_case_begin_1ab13420e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab133dce:;
	};
}

inline jule::Str _1ab135034_toStr(jule::Ptr<_1a7b9e08a_EnumDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1ab137355:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab137267:;
	};
	;
	{
		
{
			_case_begin_1ab137d06:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab1379c6:;
	};
}

inline jule::Str _1ab1388b7_toStr(jule::Ptr<_1a7ba0025_TypeEnumDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1ab140a45:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab140957:;
	};
	;
	{
		
{
			_case_begin_1ab1414e6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab1411b6:;
	};
}

inline jule::Str _1ab16067a_toStr(jule::Ptr<_1a7ba2d80_Field> _19713_x) {
	;
	{
		
{
			_case_begin_1ab161868:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab16177a:;
	};
	;
	{
		
{
			_case_begin_1ab162319:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab161ed9:;
	};
}

inline jule::Str _1ab172769_toStr(jule::Ptr<_1c006a461_Const> _19713_x) {
	;
	{
		
{
			_case_begin_1ab173957:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab173869:;
	};
	;
	{
		
{
			_case_begin_1ab174408:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab1740c8:;
	};
}

inline jule::Str _1ab1788c4_toStr(jule::Ptr<_1a7c7b178_Var> _19713_x) {
	;
	{
		
{
			_case_begin_1ab17a4b9:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab17a3cb:;
	};
	;
	{
		
{
			_case_begin_1ab17ae6a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab17ab3a:;
	};
}

inline jule::Str _1ab18ecc5_toStr(jule::Ptr<_1a7bd1001_EnumItem> _19713_x) {
	;
	{
		
{
			_case_begin_1ab190ea2:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab190db4:;
	};
	;
	{
		
{
			_case_begin_1ab191953:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab191623:;
	};
}

inline jule::Str _1ab1a13be_toStr(jule::Ptr<_1a7bb8e0c_Param> _19713_x) {
	;
	{
		
{
			_case_begin_1ab1a25ac:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab1a24be:;
	};
	;
	{
		
{
			_case_begin_1ab1a305d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab1a2c2d:;
	};
}

inline jule::Str _1ab1c7e84_toStr(jule::Ptr<_1a7ba5ca6_Struct> _19713_x) {
	;
	{
		
{
			_case_begin_1ab1c9172:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab1c9084:;
	};
	;
	{
		
{
			_case_begin_1ab1c9b23:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab1c97e3:;
	};
}

inline jule::Str _1ab1ca56e_toStr(jule::Ptr<_1a7bce362_Trait> _19713_x) {
	;
	{
		
{
			_case_begin_1ab1cca38:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab1cc94a:;
	};
	;
	{
		
{
			_case_begin_1ab1cd4d9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab1cd1a9:;
	};
}

inline jule::Str _1ab1cdce2_toStr(jule::Ptr<_1a7bd1a6d_Enum> _19713_x) {
	;
	{
		
{
			_case_begin_1ab1d12ab:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab1d11bd:;
	};
	;
	{
		
{
			_case_begin_1ab1d1c5c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab1d192c:;
	};
}

inline jule::Str _1ab1d2565_toStr(jule::Ptr<_1a7bd3278_TypeEnum> _19713_x) {
	;
	{
		
{
			_case_begin_1ab1d4a2e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab1d4941:;
	};
	;
	{
		
{
			_case_begin_1ab1d54d0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab1d51a0:;
	};
}

inline jule::Str _1ab1da1b6_toStr(jule::Ptr<_1a7bba8d1_Fn> _19713_x) {
	;
	{
		
{
			_case_begin_1ab1db32c:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab1db23e:;
	};
	;
	{
		
{
			_case_begin_1ab1dbccd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab1db99d:;
	};
}

inline jule::Str _1ab293bcb_toStr(jule::Str _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1ab2954e6:;
			{
				return _1a9954ee8_toStr(_19713_x);;
			}
		}
		_match_end_1ab294eda:;
	};
}

inline jule::Str _1ab2e1795_toStr(jule::Ptr<_1a7d1aea4_TypeAlias> _19713_x) {
	;
	{
		
{
			_case_begin_1ab2e2b4d:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab2e2a60:;
	};
	;
	{
		
{
			_case_begin_1ab2e35ee:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab2e32be:;
	};
}

inline jule::Str _1ab373096_toStr(jule::Ptr<_1a7b806ba_IdentTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1ab374251:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab374163:;
	};
	;
	{
		
{
			_case_begin_1ab374c02:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab3748c2:;
	};
}

inline jule::Str _1ab38a267_toStr(jule::Ptr<_1a7bb3511_TupleExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1ab38b257:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab38b169:;
	};
	;
	{
		
{
			_case_begin_1ab38bc08:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab38b8c8:;
	};
}

inline jule::Str _1ab38cb1b_toStr(jule::Ptr<_1a7b89d45_TupleExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1ab3900a2:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab38eeb4:;
	};
	;
	{
		
{
			_case_begin_1ab390a53:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab390723:;
	};
}

inline jule::Str _1ab39c5a9_toStr(jule::Ptr<_1a7b938ba_AssignSt> _19713_x) {
	;
	{
		
{
			_case_begin_1ab39d687:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab39d599:;
	};
	;
	{
		
{
			_case_begin_1ab39e138:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab39dd08:;
	};
}

inline jule::Str _1ab39c785_toStr(jule::Ptr<_1a7b89251_Expr> _19713_x) {
	;
	{
		
{
			_case_begin_1ab3a17cd:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab3a16e0:;
	};
	;
	{
		
{
			_case_begin_1ab3a227e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab3a1e4e:;
	};
}

inline jule::Str _1ab3a27ac_toStr(jule::Ptr<_1a7c17015_Postfix> _19713_x) {
	;
	{
		
{
			_case_begin_1ab3a4b99:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab3a4aab:;
	};
	;
	{
		
{
			_case_begin_1ab3a564a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab3a531a:;
	};
}

inline jule::Str _1ab3a5507_toStr(jule::Ptr<_1a7c174bb_Assign> _19713_x) {
	;
	{
		
{
			_case_begin_1ab3a6470:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab3a6382:;
	};
	;
	{
		
{
			_case_begin_1ab3a81ec:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab3a7dcd:;
	};
}

inline jule::Str _1ab3a80a9_toStr(jule::Ptr<_1a7c17972_MultiAssign> _19713_x) {
	;
	{
		
{
			_case_begin_1ab3a9022:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab3a8e34:;
	};
	;
	{
		
{
			_case_begin_1ab3aac9e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab3aa980:;
	};
}

inline jule::Str _1ab3a97d6_toStr(jule::Ptr<_1a7cd41ae_Data> _19713_x) {
	;
	{
		
{
			_case_begin_1ab3abc6c:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab3abb7e:;
	};
	;
	{
		
{
			_case_begin_1ab3ada60:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab3ad6b9:;
	};
}

inline jule::Str _1ab3ae313_toStr(jule::Ptr<_1a7baee03_FnCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1ab3b1755:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab3b1667:;
	};
	;
	{
		
{
			_case_begin_1ab3b2206:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab3b1dc6:;
	};
}

inline jule::Str _1ab3e0d28_toStr(jule::Ptr<_1a7c164cb_Label> _19713_x) {
	;
	{
		
{
			_case_begin_1ab3e1ed3:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab3e1de5:;
	};
	;
	{
		
{
			_case_begin_1ab3e2984:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab3e2654:;
	};
}

inline jule::Str _1ab414456_toStr(jule::Ptr<_1a7c1397e_Scope> _19713_x) {
	;
	{
		
{
			_case_begin_1ab415644:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab415556:;
	};
	;
	{
		
{
			_case_begin_1ab4160e5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab415cb5:;
	};
}

inline jule::Str _1ab41d8c2_toStr(jule::Ptr<_1a7bb6624_BuiltinErrorCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1ab41ea5a:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab41e96c:;
	};
	;
	{
		
{
			_case_begin_1ab42050b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab4201cb:;
	};
}

inline jule::Str _1ab423036_toStr(jule::Ptr<_1a7bb7636_BackendEmitExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1ab42409d:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab423eb0:;
	};
	;
	{
		
{
			_case_begin_1ab424a4e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab42471e:;
	};
}

inline jule::Str _1ab42490b_toStr(jule::Ptr<_1a7bb539d_BuiltinAppendCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1ab4259b7:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab4258c9:;
	};
	;
	{
		
{
			_case_begin_1ab4277aa:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab427414:;
	};
}

inline jule::Str _1ab425a50_toStr(jule::Ptr<_1a7bb38da_BuiltinOutCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1ab428569:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab42847b:;
	};
	;
	{
		
{
			_case_begin_1ab42a2e6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab429ec7:;
	};
}

inline jule::Str _1ab42b5e4_toStr(jule::Ptr<_1a7bb3cb4_BuiltinOutlnCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1ab42b11b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab42b02d:;
	};
	;
	{
		
{
			_case_begin_1ab42cd98:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab42ca79:;
	};
}

inline jule::Str _1ab42e196_toStr(jule::Ptr<_1a7bb4567_BuiltinPanicCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1ab42dbbd:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab42dad0:;
	};
	;
	{
		
{
			_case_begin_1ab43094a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab43062b:;
	};
}

inline jule::Str _1ab431c48_toStr(jule::Ptr<_1a7bb4a1d_BuiltinAssertCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1ab431770:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab431682:;
	};
	;
	{
		
{
			_case_begin_1ab4334ec:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab4331cd:;
	};
}

inline jule::Str _1ab4347ea_toStr(jule::Ptr<_1a7bb624a_BuiltinCopyCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1ab434322:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab434234:;
	};
	;
	{
		
{
			_case_begin_1ab43609e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab435c80:;
	};
}

inline jule::Str _1ab43739c_toStr(jule::Ptr<_1a7bb5d71_BuiltinDeleteCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1ab436b60:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab436a72:;
	};
	;
	{
		
{
			_case_begin_1ab438d71:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab436c4d:;
	};
}

inline jule::Str _1ab439e1b_toStr(jule::Ptr<_1a7bb7933_FreeExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1ab439712:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab439624:;
	};
	;
	{
		
{
			_case_begin_1ab43b48e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab43b170:;
	};
}

inline jule::Str _1ab444398_toStr(jule::Ptr<_1a7c145b7_Conditional> _19713_x) {
	;
	{
		
{
			_case_begin_1ab17a035:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab179e36:;
	};
	;
	{
		
{
			_case_begin_1ab445b08:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab4451ac:;
	};
}

inline jule::Str _1ab44e381_toStr(jule::Ptr<_1a7c148b4_InfIter> _19713_x) {
	;
	{
		
{
			_case_begin_1ab45056e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab450481:;
	};
	;
	{
		
{
			_case_begin_1ab451020:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab450be0:;
	};
}

inline jule::Str _1ab4551bc_toStr(jule::Ptr<_1a7c14d6a_WhileIter> _19713_x) {
	;
	{
		
{
			_case_begin_1ab4563aa:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab4562bc:;
	};
	;
	{
		
{
			_case_begin_1ab456d5b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab456a2b:;
	};
}

inline jule::Str _1ab47b8ec_toStr(jule::Ptr<_1a7c157b6_RangeIter> _19713_x) {
	;
	{
		
{
			_case_begin_1ab47cada:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab47c9ec:;
	};
	;
	{
		
{
			_case_begin_1ab47d58b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab47d25b:;
	};
}

inline jule::Str _1ab48b610_toStr(jule::Ptr<_1a7b9920b_WhileKind> _19713_x) {
	;
	{
		
{
			_case_begin_1ab48c7ba:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab48c6cc:;
	};
	;
	{
		
{
			_case_begin_1ab48d26b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab48ce3b:;
	};
}

inline jule::Str _1ab48e28e_toStr(jule::Ptr<_1a7b99b13_RangeKind> _19713_x) {
	;
	{
		
{
			_case_begin_1ab491626:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab491538:;
	};
	;
	{
		
{
			_case_begin_1ab4920c7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab491c97:;
	};
}

inline jule::Str _1ab4aa80a_toStr(jule::Ptr<_1a7c15b4b_ContSt> _19713_x) {
	;
	{
		
{
			_case_begin_1ab4ab9e8:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab4ab90a:;
	};
	;
	{
		
{
			_case_begin_1ab4ac499:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab4ac169:;
	};
}

inline jule::Str _1ab4b466b_toStr(jule::Ptr<_1a7c16b3b_GotoSt> _19713_x) {
	;
	{
		
{
			_case_begin_1ab4b5859:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab4b576b:;
	};
	;
	{
		
{
			_case_begin_1ab4b630a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab4b5eca:;
	};
}

inline jule::Str _1ab4ea2d9_toStr(jule::Ptr<_1a7b8aa6b_IdentExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1ab4eb4a5:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab4eb3b7:;
	};
	;
	{
		
{
			_case_begin_1ab4ebe56:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab4ebb26:;
	};
}

inline jule::Str _1ab50ec9e_toStr(jule::Ptr<_1a7bb0783_IndexingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1ab510e59:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab510d6b:;
	};
	;
	{
		
{
			_case_begin_1ab51190a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab5115ca:;
	};
}

inline jule::Str _1ab557e29_toStr(jule::Ptr<_1a7c181ae_Match> _19713_x) {
	;
	{
		
{
			_case_begin_1ab559117:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab559029:;
	};
	;
	{
		
{
			_case_begin_1ab559ab8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab559788:;
	};
}

inline jule::Str _1ab571d00_toStr(jule::Ptr<_1a7c193d0_FallSt> _19713_x) {
	;
	{
		
{
			_case_begin_1ab5737e6:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab573708:;
	};
	;
	{
		
{
			_case_begin_1ab574297:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab573e67:;
	};
}

inline jule::Str _1ab58cd71_toStr(jule::Ptr<_1a7c16025_BreakSt> _19713_x) {
	;
	{
		
{
			_case_begin_1ab58e05e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab58de71:;
	};
	;
	{
		
{
			_case_begin_1ab58ea10:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab58e6d0:;
	};
}

inline jule::Str _1ab5944e8_toStr(jule::Ptr<_1a7c19776_RetSt> _19713_x) {
	;
	{
		
{
			_case_begin_1ab5956d6:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab5955e8:;
	};
	;
	{
		
{
			_case_begin_1ab596187:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab595d57:;
	};
}

inline jule::Str _1ab59de70_toStr(jule::Ptr<_1a7b94e3d_ScopeTree> _19713_x) {
	;
	{
		
{
			_case_begin_1ab5a00e7:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab5a0009:;
	};
	;
	{
		
{
			_case_begin_1ab5a0a98:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab5a0768:;
	};
}

inline jule::Str _1ab5a3a68_toStr(jule::Ptr<_1a7b9b1ec_Conditional> _19713_x) {
	;
	{
		
{
			_case_begin_1ab5a4b9b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab5a4aad:;
	};
	;
	{
		
{
			_case_begin_1ab5a564c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab5a531c:;
	};
}

inline jule::Str _1ab5a3c99_toStr(jule::Ptr<_1a7b988d1_Iter> _19713_x) {
	;
	{
		
{
			_case_begin_1ab5a7d69:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab5a7c7b:;
	};
	;
	{
		
{
			_case_begin_1ab5a881a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab5a84da:;
	};
}

inline jule::Str _1ab5a5ebb_toStr(jule::Ptr<_1a7b9a3b6_ContSt> _19713_x) {
	;
	{
		
{
			_case_begin_1ab5ab037:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab5aae49:;
	};
	;
	{
		
{
			_case_begin_1ab5ab9d8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab5ab6a8:;
	};
}

inline jule::Str _1ab5a9189_toStr(jule::Ptr<_1a7b92501_LabelSt> _19713_x) {
	;
	{
		
{
			_case_begin_1ab5acbb5:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab5acac7:;
	};
	;
	{
		
{
			_case_begin_1ab5ae942:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab5ae612:;
	};
}

inline jule::Str _1ab5ac0e3_toStr(jule::Ptr<_1a7b928ca_GotoSt> _19713_x) {
	;
	{
		
{
			_case_begin_1ab5b215e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab5b2071:;
	};
	;
	{
		
{
			_case_begin_1ab5b2b10:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab5b27d0:;
	};
}

inline jule::Str _1ab5b36e3_toStr(jule::Ptr<_1a7b9c709_MatchCase> _19713_x) {
	;
	{
		
{
			_case_begin_1ab5b5aad:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab5b59c0:;
	};
	;
	{
		
{
			_case_begin_1ab5b655e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab5b622e:;
	};
}

inline jule::Str _1ab5b3858_toStr(jule::Ptr<_1a7b92bc7_FallSt> _19713_x) {
	;
	{
		
{
			_case_begin_1ab5b8c7b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab5b8b8d:;
	};
	;
	{
		
{
			_case_begin_1ab5b972c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab5b93ec:;
	};
}

inline jule::Str _1ab5b6dcd_toStr(jule::Ptr<_1a7b99edc_BreakSt> _19713_x) {
	;
	{
		
{
			_case_begin_1ab5bbe49:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab5bbd5b:;
	};
	;
	{
		
{
			_case_begin_1ab5bc8ea:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab5bc5ba:;
	};
}

inline jule::Str _1ab5ba09b_toStr(jule::Ptr<_1a7b98161_RetSt> _19713_x) {
	;
	{
		
{
			_case_begin_1ab5c0117:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab5c0029:;
	};
	;
	{
		
{
			_case_begin_1ab5c0ab8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab5c0788:;
	};
}

inline jule::Str _1ab5bd269_toStr(jule::Ptr<_1a7b89b25_UseExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1ab5c32d5:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab5c31e7:;
	};
	;
	{
		
{
			_case_begin_1ab5c3c86:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab5c3956:;
	};
}

inline jule::Str _1ab6545a8_toStr(jule::Ptr<_1a7bb2994_StructSubIdentExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1ab6558ea:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab65580c:;
	};
	;
	{
		
{
			_case_begin_1ab65639b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab65606b:;
	};
}

inline jule::Str _1ab654d39_toStr(jule::Ptr<_1a7bad2ec_UnaryExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1ab6594d1:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab6593e3:;
	};
	;
	{
		
{
			_case_begin_1ab659e82:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab659b52:;
	};
}

inline jule::Str _1ab6894cd_toStr(jule::Ptr<_1a7bbd8b2_FnIns> _19713_x) {
	;
	{
		
{
			_case_begin_1ab68a6bb:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab68a5cd:;
	};
	;
	{
		
{
			_case_begin_1ab68b16c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab68ad3c:;
	};
}

inline jule::Str _1ab9948a4_toStr(jule::Ptr<_1a7b87936_MapTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1ab995a5e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab995971:;
	};
	;
	{
		
{
			_case_begin_1ab996510:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab9961d0:;
	};
}

inline jule::Str _1ab99a217_toStr(jule::Ptr<_1a7b86649_TupleTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1ab99b3c2:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab99b2d4:;
	};
	;
	{
		
{
			_case_begin_1ab99bd73:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab99ba43:;
	};
}

inline jule::Str _1ab9ad5b0_toStr(jule::Ptr<_1a7b871d8_ArrTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1ab9ae77b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab9ae68d:;
	};
	;
	{
		
{
			_case_begin_1ab9b022c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab9aedec:;
	};
}

inline jule::Str _1ab9b49d4_toStr(jule::Ptr<_1a7b8634c_SlcTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1ab9b5ba0:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab9b5ab2:;
	};
	;
	{
		
{
			_case_begin_1ab9b6651:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab9b6321:;
	};
}

inline jule::Str _1ab9bae08_toStr(jule::Ptr<_1a7b86946_PtrTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1ab9bc0c4:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab9bbed6:;
	};
	;
	{
		
{
			_case_begin_1ab9bca75:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab9bc745:;
	};
}

inline jule::Str _1ab9c200d_toStr(jule::Ptr<_1a7b85eb7_SptrTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1ab9c31c9:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab9c30db:;
	};
	;
	{
		
{
			_case_begin_1ab9c3b7a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ab9c384a:;
	};
}

inline jule::Str _1aba1c3aa_toStr(jule::Ptr<_1a7b8b6d7_VariadicExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1aba1d4bb:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aba1d3cd:;
	};
	;
	{
		
{
			_case_begin_1aba1de6c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1aba1db3c:;
	};
}

inline jule::Str _1aba230e7_toStr(jule::Ptr<_1a7bb02cc_SliceExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1aba24d0d:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aba24c20:;
	};
	;
	{
		
{
			_case_begin_1aba257ae:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1aba2547e:;
	};
}

inline jule::Str _1aba3cce3_toStr(jule::Ptr<_1a7b8d970_FieldExprPair> _19713_x) {
	;
	{
		
{
			_case_begin_1aba3de9d:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aba3ddb0:;
	};
	;
	{
		
{
			_case_begin_1aba3e94e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1aba3e61e:;
	};
}

inline jule::Str _1aba466ae_toStr(jule::Ptr<_1a7b9007b_KeyValPair> _19713_x) {
	;
	{
		
{
			_case_begin_1aba47869:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aba4777b:;
	};
	;
	{
		
{
			_case_begin_1aba4831a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1aba47eda:;
	};
}

inline jule::Str _1aba9c869_toStr(jule::Ptr<_1a7b8ce7a_FnCallExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1aba9da24:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aba9d936:;
	};
	;
	{
		
{
			_case_begin_1aba9e4c5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1aba9e195:;
	};
}

inline jule::Str _1abad04a1_toStr(jule::Ptr<_1a7badebd_AllocStructLitExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1abad168e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abad15a1:;
	};
	;
	{
		
{
			_case_begin_1abad2140:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1abad1d10:;
	};
}

inline jule::Str _1abae9b91_toStr(jule::Ptr<_1a7bae551_CastingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1abaead7e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abaeac91:;
	};
	;
	{
		
{
			_case_begin_1abaeb830:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1abaeb500:;
	};
}

inline jule::Str _1abb11c63_toStr(jule::Ptr<_1a7bb2d3a_StructStaticIdentExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1abb13391:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abb132a3:;
	};
	;
	{
		
{
			_case_begin_1abb13d42:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1abb13a12:;
	};
}

inline jule::Str _1abb14947_toStr(jule::Ptr<_1a7b8c364_SubIdentExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1abb18231:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abb18143:;
	};
	;
	{
		
{
			_case_begin_1abb18bd2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1abb188a2:;
	};
}

inline jule::Str _1abb21657_toStr(jule::Ptr<_1a7badbc1_StructLitExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1abb22801:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abb22713:;
	};
	;
	{
		
{
			_case_begin_1abb232a2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1abb22e72:;
	};
}

inline jule::Str _1abb41b50_toStr(jule::Ptr<_1a7bb725c_RuneExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1abb42d3d:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abb42c50:;
	};
	;
	{
		
{
			_case_begin_1abb437de:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1abb434ae:;
	};
}

inline jule::Str _1abb648dc_toStr(jule::Ptr<_1a7ba8b11_StructIns> _19713_x) {
	;
	{
		
{
			_case_begin_1abb65aca:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abb659dc:;
	};
	;
	{
		
{
			_case_begin_1abb6657b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1abb6624b:;
	};
}

inline jule::Str _1abba4344_toStr(jule::Ptr<_1a7d1bc96_TypeKind> _19713_x) {
	;
	{
		
{
			_case_begin_1abba54cc:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abba53de:;
	};
	;
	{
		
{
			_case_begin_1abba5e7d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1abba5b4d:;
	};
}

inline jule::Str _1abbc6388_toStr(jule::Ptr<_1a7bb3214_ArrayExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1abbc7576:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abbc7488:;
	};
	;
	{
		
{
			_case_begin_1abbc8027:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1abbc7be7:;
	};
}

inline jule::Str _1abc10658_toStr(jule::Ptr<_1a7b857e1_SubIdentTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1abc11846:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abc11758:;
	};
	;
	{
		
{
			_case_begin_1abc122e7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1abc11eb7:;
	};
}

inline jule::Str _1abc14c67_toStr(jule::Ptr<_1a7b8b30d_UnaryExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1abc15e00:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abc15d12:;
	};
	;
	{
		
{
			_case_begin_1abc168a1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1abc16571:;
	};
}

inline jule::Str _1abc1dde7_toStr(jule::Ptr<_1a7b800b0_TypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1abc1e48b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abc1e39d:;
	};
	;
	{
		
{
			_case_begin_1abc1ee3c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1abc1eb1d:;
	};
}

inline jule::Str _1abc23847_toStr(jule::Ptr<_1a7b8be8a_NsSelectionExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1abc262a6:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abc261b8:;
	};
	;
	{
		
{
			_case_begin_1abc26c57:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1abc26927:;
	};
}

inline jule::Str _1abc2a332_toStr(jule::Ptr<_1a7b85bba_NamespaceTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1abc2b520:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abc2b432:;
	};
	;
	{
		
{
			_case_begin_1abc2bec1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1abc2bb91:;
	};
}

inline jule::Str _1abc6a76d_toStr(jule::Ptr<_1a7bb1a70_SlicingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1abc6b906:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abc6b818:;
	};
	;
	{
		
{
			_case_begin_1abc6c3a7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1abc6c077:;
	};
}

inline jule::Str _1abde6a3c_toStr(jule::Ptr<_1a7b907a7_SliceExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1abde7be7:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abde7b09:;
	};
	;
	{
		
{
			_case_begin_1abde8698:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1abde8368:;
	};
}

inline jule::Str _1abe65968_toStr(jule::Ptr<_1a7bb2103_TraitSubIdentExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1abe66b56:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abe66a68:;
	};
	;
	{
		
{
			_case_begin_1abe67607:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1abe672c7:;
	};
}

inline jule::Str _1ac016178_toStr(jule::Ptr<_1a7bb14dc_MapExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1ac017d06:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac017c18:;
	};
	;
	{
		
{
			_case_begin_1ac0187a7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ac018477:;
	};
}

inline jule::Str _1ac0266e9_toStr(jule::Ptr<_1a7bb0c39_AnonFnExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1ac0278d7:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac0277e9:;
	};
	;
	{
		
{
			_case_begin_1ac028388:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ac028058:;
	};
}

inline jule::Str _1ac02d7ab_toStr(jule::Ptr<_1a7b8951a_RangeExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1ac02e966:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac02e878:;
	};
	;
	{
		
{
			_case_begin_1ac030417:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ac0300d7:;
	};
}

inline jule::Str _1ac02da64_toStr(jule::Ptr<_1a7b8a1db_LitExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1ac033360:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac033272:;
	};
	;
	{
		
{
			_case_begin_1ac033d11:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ac0339d1:;
	};
}

inline jule::Str _1ac036918_toStr(jule::Ptr<_1a7b8a5b5_UnsafeExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1ac038024:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac037e36:;
	};
	;
	{
		
{
			_case_begin_1ac0389c5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ac038695:;
	};
}

inline jule::Str _1ac03908b_toStr(jule::Ptr<_1a7b91214_IndexingExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1ac03b6dc:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac03b5ee:;
	};
	;
	{
		
{
			_case_begin_1ac03c18d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ac03bd5d:;
	};
}

inline jule::Str _1ac034c13_toStr(jule::Ptr<_1a7b91874_SlicingExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1ac03e8aa:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac03e7bc:;
	};
	;
	{
		
{
			_case_begin_1ac04035b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ac04002b:;
	};
}

inline jule::Str _1ac040922_toStr(jule::Ptr<_1a7b8bab1_CastExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1ac042a78:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac04298a:;
	};
	;
	{
		
{
			_case_begin_1ac043529:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ac0431e9:;
	};
}

inline jule::Str _1ac043ae0_toStr(jule::Ptr<_1a7b8e29a_StructLit> _19713_x) {
	;
	{
		
{
			_case_begin_1ac0464e9:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac04640b:;
	};
	;
	{
		
{
			_case_begin_1ac046e9a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ac046b6a:;
	};
}

inline jule::Str _1ac047d36_toStr(jule::Ptr<_1a7b8e751_BraceLit> _19713_x) {
	;
	{
		
{
			_case_begin_1ac04b6b9:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac04b5cb:;
	};
	;
	{
		
{
			_case_begin_1ac04c16a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ac04bd3a:;
	};
}

inline jule::Str _1ac04ab08_toStr(jule::Ptr<_1a7b8c81a_BinaryExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1ac050118:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac05002a:;
	};
	;
	{
		
{
			_case_begin_1ac050ab9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ac050789:;
	};
}

inline jule::Str _1ac173505_toStr(jule::Ptr<_1a7bace23_BinaryExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1ac1746e3:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac174605:;
	};
	;
	{
		
{
			_case_begin_1ac175194:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ac174d64:;
	};
}

inline jule::Str _1ac31d194_toStr(jule::Ptr<_1a7bb418d_BuiltinNewCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1ac31e382:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac31e294:;
	};
	;
	{
		
{
			_case_begin_1ac31ed33:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ac31ea03:;
	};
}

inline jule::Str _1ac333d25_toStr(jule::Ptr<_1a7bb4ec4_BuiltinMakeCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1ac335013:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac334e25:;
	};
	;
	{
		
{
			_case_begin_1ac3359b4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ac335684:;
	};
}

inline jule::Str _1a763765b_toStr(jule::Ptr<_1a7bb569a_BuiltinLenCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1a7638849:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a763875b:;
	};
	;
	{
		
{
			_case_begin_1a76392ea:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1a7638eba:;
	};
}

inline jule::Str _1a7652434_toStr(jule::Ptr<_1a7bb5997_BuiltinCapCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1a7653622:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7653534:;
	};
	;
	{
		
{
			_case_begin_1a76540c3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1a7653c93:;
	};
}

inline jule::Str _1a76a5289_toStr(jule::Ptr<_1a7bb6cc8_SizeofExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1a76a63ab:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a76a62bd:;
	};
	;
	{
		
{
			_case_begin_1a76a6d5c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1a76a6a2c:;
	};
}

inline jule::Str _1a76ae293_toStr(jule::Ptr<_1a7bb6eb5_AlignofExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1a76b03b5:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a76b02c7:;
	};
	;
	{
		
{
			_case_begin_1a76b0d66:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1a76b0a36:;
	};
}

inline jule::Str _1ac808d99_toStr(jule::Str _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1ac80a87e:;
			{
				return _1a9954ee8_toStr(_19713_x);;
			}
		}
		_match_end_1ac80a285:;
	};
}

inline jule::Str _1ac9c24b3_toStr(jule::Ptr<_1a7e125d9_ExceptionalForwardingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1ac9c36a1:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac9c35b3:;
	};
	;
	{
		
{
			_case_begin_1ac9c4152:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ac9c3d22:;
	};
}

inline jule::Str _1aca094ea_toStr(jule::Ptr<_1a7e14ed2_StrRuneIter> _19713_x) {
	;
	{
		
{
			_case_begin_1aca0a6d8:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aca0a5ea:;
	};
	;
	{
		
{
			_case_begin_1aca0b189:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1aca0ad59:;
	};
}

inline jule::Str _1aca11e3c_toStr(jule::Ptr<_1a7e13bc3_MutSlicingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1aca1312a:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aca1303c:;
	};
	;
	{
		
{
			_case_begin_1aca13acb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1aca1379b:;
	};
}

inline jule::Str _1aca3700b_toStr(jule::Ptr<_1a7e14b08_AppendToSliceExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1aca381e9:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aca3810b:;
	};
	;
	{
		
{
			_case_begin_1aca38b9a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1aca3886a:;
	};
}

inline jule::Str _1aca39838_toStr(jule::Ptr<_1a7e1472e_PushToSliceExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1aca3bd02:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aca3bc14:;
	};
	;
	{
		
{
			_case_begin_1aca3c7a3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1aca3c473:;
	};
}

inline jule::Str _1aca47417_toStr(jule::Ptr<_1a7e1296e_SwapExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1aca48605:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aca48517:;
	};
	;
	{
		
{
			_case_begin_1aca490a6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1aca48c76:;
	};
}

inline jule::Str _1aca84e8d_toStr(jule::Ptr<_1a7e12d48_EmptyCompareExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1aca8617b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aca8608d:;
	};
	;
	{
		
{
			_case_begin_1aca86b2c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1aca867ec:;
	};
}

inline jule::Str _1aca87c1b_toStr(jule::Ptr<_1a7e13640_StrCompExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1aca8a1d5:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aca8a0e7:;
	};
	;
	{
		
{
			_case_begin_1aca8ab86:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1aca8a856:;
	};
}

inline jule::Str _1acac0d0e_toStr(jule::Ptr<_1a7e13ec0_UnsafeBinaryExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1acac1eec:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1acac1e0e:;
	};
	;
	{
		
{
			_case_begin_1acac299d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1acac266d:;
	};
}

inline jule::Str _1acac91ad_toStr(jule::Ptr<_1a7e152ce_UnsafeDerefExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1acaca39b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1acaca2ad:;
	};
	;
	{
		
{
			_case_begin_1acacad4c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1acacaa1c:;
	};
}

inline jule::Str _1acad0a22_toStr(jule::Ptr<_1a7e131bc_RefExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1acad1c10:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1acad1b22:;
	};
	;
	{
		
{
			_case_begin_1acad26b1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1acad2381:;
	};
}

inline jule::Str _1acad50ba_toStr(jule::Ptr<_1a7bad82a_StructArgExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1acad62a8:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1acad61ba:;
	};
	;
	{
		
{
			_case_begin_1acad6c59:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1acad6929:;
	};
}

inline jule::Str _1acadb885_toStr(jule::Ptr<_1a7e155cb_UnsafeCastingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1acadca73:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1acadc985:;
	};
	;
	{
		
{
			_case_begin_1acadd524:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1acadd1e4:;
	};
}

inline jule::Str _1acaea6eb_toStr(jule::Ptr<_1a7e14355_UnsafeIndexingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1acaeb8d9:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1acaeb7eb:;
	};
	;
	{
		
{
			_case_begin_1acaec38a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1acaec05a:;
	};
}

inline jule::Str _1ad16bde3_toStr(jule::Ptr<jule::Str> _19713_x) {
	;
	{
		
{
			_case_begin_1ad16d037:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad16ce49:;
	};
	;
	{
		
{
			_case_begin_1ad16d9d8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ad16d6a8:;
	};
}

inline jule::Str _1ad3cba26_toStr(_1daed18b7_StrBuilder _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1ad3cee25:;
			{
				return _1ad3d19d7_structToStr(_19713_x);;
			}
		}
		_match_end_1ad3ce9a2:;
	};
}

inline jule::Str _1ad3d836d_toStr(jule::Slice<jule::U8> _19713_x) {
	;
	{
		
{
			_case_begin_1ad3d9715:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad3d943a:;
	};
	;
	{
		
{
			_case_begin_1ad3da073:;
			{
				return _1ad3dbb46_arrToStr(_19713_x);;
			}
		}
		_match_end_1ad3d9d97:;
	};
}

inline jule::Str _1ad3d3698_toStr(jule::Str _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1ad3d0178:;
			{
				return _1a9954ee8_toStr(_19713_x);;
			}
		}
		_match_end_1ad3d8deb:;
	};
}

inline jule::Str _1ad3da7b0_toStr(jule::Str _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1ad3e19b4:;
			{
				return _1a9954ee8_toStr(_19713_x);;
			}
		}
		_match_end_1ad3d7548:;
	};
}



inline void _1d7e606e5_rev(jule::Slice<jule::U8> _25012_b) {
	jule::I64 _2516_i = 0LL;;
	for (; (_2516_i < (_25012_b.len() >> 1LL)); (_2516_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _25012_b[((_25012_b.len() - 1LL) - _2516_i)];
				jule::U8 _1___jule_assign_arg = _25012_b[_2516_i];
				_25012_b[_2516_i] = ___jule_assign_arg;
				_25012_b[((_25012_b.len() - 1LL) - _2516_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1a99026b0:;
	}
	_iter_end_1a99026b0:;;
}



inline jule::I64 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b) {
	jule::I64 _116_l = (*(_1016_a)).len();;
	if (((*(_1025_b)).len() < _116_l)) {
		_116_l=(*(_1025_b)).len();
	};
	jule::I64 _156_i = 0LL;;
	for (; (_156_i < _116_l); (_156_i)++) {
		{
			jule::U8 _173_c1;
			jule::U8 _177_c2;
			({
				jule::U8 ___jule_assign_arg = (*(_1016_a))[_156_i];
				jule::U8 _1___jule_assign_arg = (*(_1025_b))[_156_i];
				_173_c1 = ___jule_assign_arg;
				_177_c2 = _1___jule_assign_arg;
			});
			if ((_173_c1 < _177_c2)) {
				return -1LL;;
			};
			if ((_173_c1 > _177_c2)) {
				return 1LL;;
			};
		}
	_iter_next_1a9904184:;
	}
	_iter_end_1a9904184:;;
	if (((*(_1016_a)).len() < (*(_1025_b)).len())) {
		return -1LL;;
	};
	if (((*(_1016_a)).len() > (*(_1025_b)).len())) {
		return 1LL;;
	};
	return 0LL;;
}



inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes) {
	jule::Slice<jule::U8> _376_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_3615_bytes.len(), _3615_bytes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_376_buf, _3615_bytes);
	return _1d7e4dc55_StrFromBytes(_376_buf);;
}



inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes) {
	jule::Slice<jule::U8> _456_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, ({ jule::I64 __jule_x = _4415_runes.len(); jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_4415_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9907e8a:;
		if (it != expr_end) {
			jule::I32 *_469_r = it;
			{
				_456_buf=_1d8063a3a_AppendRune(_456_buf, (*(_469_r)));
			}
			_iter_next_1a9907e8a:;
			++it;
			goto _iter_begin_1a9907e8a;
		}
		_iter_end_1a9907e8a:;
	};
	return _1d7e4dc55_StrFromBytes(_456_buf);;
}



inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s) {
	jule::Slice<jule::I32> _556_buf = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(0LL, _1d8064442_RuneCountStr(_5415_s)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _566_n = 0LL;;
	while ((_566_n < _5415_s.len())) {
		{
			jule::I32 _583_r;
			jule::I64 _586_len;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d8062990_DecodeRuneStr(_5415_s.slice(_566_n));
				_583_r = __jule_assign_result.__jule_result_arg0;
				_586_len = __jule_assign_result.__jule_result_arg1;
			});
			_566_n+=_586_len;
			{ jule::Slice<jule::I32> &__jule_push_dest = _556_buf; __jule_push_dest.push(_583_r); };
		}
	_iter_next_1a9909178:;
	}
	_iter_end_1a9909178:;;
	return _556_buf.slice(0LL, _566_n);;
}



inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s) {
	jule::Slice<jule::U8> _686_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_6715_s.len(), _6715_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_686_buf, _6715_s);
	return _686_buf;;
}



inline jule::Str __jule_strFromByte(jule::U8 _7516_b) {
	jule::Slice<jule::U8> _766_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_766_buf[0LL]=_7516_b;
	return _1d7e4dc55_StrFromBytes(_766_buf);;
}



inline jule::Str __jule_strFromRune(jule::I32 _8316_r) {
	jule::Slice<jule::U8> _846_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 4LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_846_buf=_1d8063a3a_AppendRune(_846_buf, _8316_r);
	return _1d7e4dc55_StrFromBytes(_846_buf);;
}



inline void __jule_runeStep(jule::U8* _9420_s, jule::I64 _9430_n, jule::I32* _9442_r, jule::I64* _9456_outLen) {
	jule::Slice<jule::U8> _952_buf = _1a97a7785_Slice(_9420_s, _9430_n, _9430_n);;
	if ((_9442_r != nullptr)) {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d806264e_DecodeRune(_952_buf);
			(*(_9442_r)) = __jule_assign_result.__jule_result_arg0;
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d806264e_DecodeRune(_952_buf);
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	};
}



inline void _1d806707c_handleRW(jule::Slice<jule::U8>* _814_b) {
	_1d7e34873__handleRW(_814_b);
}



inline jule::Slice<jule::Str> _1d8067654_args(void) {
	jule::Slice<jule::Str> _86_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(__jule_argc, __jule_argc); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	{
		auto expr = &(_86_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a990e9ca:;
		if (it != expr_end) {
			jule::I64 _96_i = it - expr->begin();
			{
				{
					jule::U8* _118_arg = __jule_argv[_96_i];;
					_86_args[_96_i]=_1d7e42353_Str(_118_arg, _1d8067b71_strlen(_118_arg));
				};
			}
			_iter_next_1a990e9ca:;
			++it;
			_96_i++;
			goto _iter_begin_1a990e9ca;
		}
		_iter_end_1a990e9ca:;
	};
	return _86_args;;
}



inline jule::I64 _1d8067b71_strlen(jule::U8* _3122_p) {
	jule::I64 __jule_func_result = 0;
	for (; ((*(_3122_p)) != 0LLU); (_3122_p)++) {
		{
			(__jule_func_result)++;
		}
	_iter_next_1a9911889:;
	}
	_iter_end_1a9911889:;;
	return __jule_func_result;;
}



inline jule::U64 _1d80bd39c_hash128to64(_1d80bcee5_u128 _4316_sum) {
	;
	jule::U64 _456_a = (jule::U64)((_4316_sum._field_lo ^ _4316_sum._field_hi) * 11376068507788127593LLU);;
	_456_a^=(_456_a >> 47LLU);
	jule::U64 _476_b = (jule::U64)((_4316_sum._field_hi ^ _456_a) * 11376068507788127593LLU);;
	_476_b^=(_476_b >> 47LLU);
	_476_b*=11376068507788127593LLU;
	return _476_b;;
}



inline jule::U64 _1d80bd6aa_fetch64(jule::Slice<jule::U8> _5312_bytes) {
	return static__1d80b9a6e_DecodeU64(_5312_bytes);;
}



inline jule::U32 _1d80bd974_fetch32(jule::Slice<jule::U8> _5412_bytes) {
	return static__1d80b91cd_DecodeU32(_5412_bytes);;
}



inline jule::U64 _1d80bdcb5_shiftMix(jule::U64 _5513_z) {
	return (_5513_z ^ (_5513_z >> 47LLU));;
}



inline jule::U64 _1d80be106_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v) {
	return _1d80bd39c_hash128to64(_1d80bcee5_u128{._field_hi=_5614_u, ._field_lo=_5622_v});;
}



inline jule::U64 _1d80be47a_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift) {
	if ((_5823_shift != 0LLU)) {
		return (({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = _5823_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) | ({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = (jule::U32)(64LLU - _5823_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
	};
	return _5813_val;;
}



inline jule::U64 _1d80be8a9_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul) {
	jule::U64 _676_a = (jule::U64)((_6616_u ^ _6624_v) * _6632_mul);;
	_676_a^=(_676_a >> 47LLU);
	jule::U64 _696_b = (jule::U64)((_6624_v ^ _676_a) * _6632_mul);;
	_696_b^=(_696_b >> 47LLU);
	_696_b*=_6632_mul;
	return _696_b;;
}



inline jule::U64 _1d80bed3d_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I64 _7532_n) {
	if ((_7532_n >= 8LL)) {
		jule::U64 _773_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _783_a = (jule::U64)(_1d80bd6aa_fetch64(_7517_bytes) + 11160318154034397263LLU);;
		jule::U64 _793_b = _1d80bd6aa_fetch64(_7517_bytes.slice((_7532_n - 8LL)));;
		jule::U64 _803_c = (jule::U64)((jule::U64)(_1d80be47a_rotate64(_793_b, 37LLU) * _773_mul) + _783_a);;
		jule::U64 _813_d = (jule::U64)((jule::U64)(_1d80be47a_rotate64(_783_a, 25LLU) + _793_b) * _773_mul);;
		return _1d80be8a9_hashLen16_3(_803_c, _813_d, _773_mul);;
	};
	if ((_7532_n >= 4LL)) {
		jule::U64 _863_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _873_a = static_cast<jule::U64>(_1d80bd974_fetch32(_7517_bytes));;
		return _1d80be8a9_hashLen16_3((jule::U64)(static_cast<jule::U64>(_7532_n) + (jule::U64)(_873_a << 3LLU)), static_cast<jule::U64>(_1d80bd974_fetch32(_7517_bytes.slice((_7532_n - 4LL)))), _863_mul);;
	};
	if ((_7532_n > 0LL)) {
		jule::U8 _923_a = static_cast<jule::U8>(_7517_bytes[0LL]);;
		jule::U8 _933_b = static_cast<jule::U8>(_7517_bytes[(_7532_n >> 1LL)]);;
		jule::U8 _943_c = static_cast<jule::U8>(_7517_bytes[(_7532_n - 1LL)]);;
		jule::U32 _953_y = (jule::U32)(static_cast<jule::U32>(_923_a) + (jule::U32)(static_cast<jule::U32>(_933_b) << 8LLU));;
		jule::I64 _963_z = (_7532_n + (static_cast<jule::I64>(_943_c) << 2LL));;
		return (jule::U64)(_1d80bdcb5_shiftMix(((jule::U64)(static_cast<jule::U64>(_953_y) * 11160318154034397263LLU) ^ (jule::U64)(static_cast<jule::U64>(_963_z) * 14097894508562428199LLU))) * 11160318154034397263LLU);;
	};
	return 11160318154034397263LLU;;
}



inline _1d80bcee5_u128 _1d80c01e5_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I64 _10334_n, _1d80bcee5_u128 _10342_seed) {
	jule::U64 _1046_a = _10342_seed._field_lo;;
	jule::U64 _1056_b = _10342_seed._field_hi;;
	jule::U64 _1066_c = static_cast<jule::U64>(0LLU);;
	jule::U64 _1076_d = static_cast<jule::U64>(0LLU);;
	jule::I64 _1086_l = (_10334_n - 16LL);;
	if ((_1086_l <= 0LL)) {
		_1046_a=(jule::U64)(_1d80bdcb5_shiftMix((jule::U64)(_1046_a * 13011662864482103923LLU)) * 13011662864482103923LLU);
		_1066_c=(jule::U64)((jule::U64)(_1056_b * 13011662864482103923LLU) + _1d80bed3d_hashLen0to16(_10319_bytes, _10334_n));
		if ((_10334_n >= 8LL)) {
			_1076_d=_1d80bdcb5_shiftMix((jule::U64)(_1046_a + _1d80bd6aa_fetch64(_10319_bytes)));
		} else {
			_1076_d=_1d80bdcb5_shiftMix((jule::U64)(_1046_a + _1066_c));
		};
	} else {
		_1066_c=_1d80be106_hashLen16((jule::U64)(_1d80bd6aa_fetch64(_10319_bytes.slice((_10334_n - 8LL))) + 13011662864482103923LLU), _1046_a);
		_1076_d=_1d80be106_hashLen16((jule::U64)(_1056_b + static_cast<jule::U64>(_10334_n)), (jule::U64)(_1066_c + _1d80bd6aa_fetch64(_10319_bytes.slice((_10334_n - 16LL)))));
		_1046_a+=_1076_d;
		for (;;) {
			{
				_1046_a^=(jule::U64)(_1d80bdcb5_shiftMix((jule::U64)(_1d80bd6aa_fetch64(_10319_bytes) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1046_a*=13011662864482103923LLU;
				_1056_b^=_1046_a;
				_1066_c^=(jule::U64)(_1d80bdcb5_shiftMix((jule::U64)(_1d80bd6aa_fetch64(_10319_bytes.slice(8LL)) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1066_c*=13011662864482103923LLU;
				_1076_d^=_1066_c;
				(_10319_bytes).mut_slice(16LL);;
				_1086_l-=16LL;
				if ((_1086_l <= 0LL)) {
					goto _iter_end_1a99233c3;
				};
			}
		_iter_next_1a99233c3:;
		}
		_iter_end_1a99233c3:;;
	};
	_1046_a=_1d80be106_hashLen16(_1046_a, _1066_c);
	_1056_b=_1d80be106_hashLen16(_1076_d, _1056_b);
	return _1d80bcee5_u128{._field_hi=(_1046_a ^ _1056_b), ._field_lo=_1d80be106_hashLen16(_1056_b, _1046_a)};;
}



inline _1d80bcee5_u128 _1d80c0844_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b) {
	_14563_a+=_14527_w;
	_14575_b=_1d80be47a_rotate64((jule::U64)((jule::U64)(_14575_b + _14563_a) + _14551_z), 21LLU);
	jule::U64 _1482_c = _14563_a;;
	_14563_a+=_14535_x;
	_14563_a+=_14543_y;
	_14575_b+=_1d80be47a_rotate64(_14563_a, 44LLU);
	return _1d80bcee5_u128{._field_hi=(jule::U64)(_14563_a + _14551_z), ._field_lo=(jule::U64)(_14575_b + _1482_c)};;
}



inline _1d80bcee5_u128 _1d80c0c73_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b) {
	return _1d80c0844_weakHashLen32WithSeeds(_1d80bd6aa_fetch64(_15529_bytes), _1d80bd6aa_fetch64(_15529_bytes.slice(8LL)), _1d80bd6aa_fetch64(_15529_bytes.slice(16LL)), _1d80bd6aa_fetch64(_15529_bytes.slice(24LL)), _15544_a, _15552_b);;
}



inline _1d80bcee5_u128 _1d80c11a2_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I64 _16040_n, _1d80bcee5_u128 _16048_seed) {
	if ((_16040_n < 128LL)) {
		return _1d80c01e5_hashMurmur(_16021_bytes, _16040_n, _16048_seed);;
	};
	jule::I64 _1642_rn = _16040_n;;
	jule::Slice<jule::U8> _1652_t = _16021_bytes;;
	_1d80bcee5_u128 _16910_v = _1d80bcee5_u128{._field_hi=0, ._field_lo=0};;
	_1d80bcee5_u128 _17010_w = _1d80bcee5_u128{._field_hi=0, ._field_lo=0};;
	jule::U64 _1716_x = _16048_seed._field_lo;;
	jule::U64 _1726_y = _16048_seed._field_hi;;
	jule::U64 _1736_z = (jule::U64)(static_cast<jule::U64>(_16040_n) * 13011662864482103923LLU);;
	_16910_v._field_lo=(jule::U64)((jule::U64)(_1d80be47a_rotate64((_1726_y ^ 13011662864482103923LLU), 49LLU) * 13011662864482103923LLU) + _1d80bd6aa_fetch64(_16021_bytes));
	_16910_v._field_hi=(jule::U64)((jule::U64)(_1d80be47a_rotate64(_16910_v._field_lo, 42LLU) * 13011662864482103923LLU) + _1d80bd6aa_fetch64(_16021_bytes.slice(8LL)));
	_17010_w._field_lo=(jule::U64)((jule::U64)(_1d80be47a_rotate64((jule::U64)(_1726_y + _1736_z), 35LLU) * 13011662864482103923LLU) + _1716_x);
	_17010_w._field_hi=(jule::U64)(_1d80be47a_rotate64((jule::U64)(_1716_x + _1d80bd6aa_fetch64(_16021_bytes.slice(88LL))), 53LLU) * 13011662864482103923LLU);
	for (;;) {
		{
			_1716_x=(jule::U64)(_1d80be47a_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _1d80bd6aa_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_1d80be47a_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _1d80bd6aa_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _1d80bd6aa_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_1d80be47a_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_1d80c0c73_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_1d80c0c73_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _1d80bd6aa_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_1716_x=(jule::U64)(_1d80be47a_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _1d80bd6aa_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_1d80be47a_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _1d80bd6aa_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _1d80bd6aa_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_1d80be47a_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_1d80c0c73_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_1d80c0c73_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _1d80bd6aa_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_16040_n-=128LL;
			if ((_16040_n < 128LL)) {
				goto _iter_end_1a9933a87;
			};
		}
	_iter_next_1a9933a87:;
	}
	_iter_end_1a9933a87:;;
	_1716_x+=(jule::U64)(_1d80be47a_rotate64((jule::U64)(_16910_v._field_lo + _1736_z), 49LLU) * 14097894508562428199LLU);
	_1726_y=(jule::U64)((jule::U64)(_1726_y * 14097894508562428199LLU) + _1d80be47a_rotate64(_17010_w._field_hi, 37LLU));
	_1736_z=(jule::U64)((jule::U64)(_1736_z * 14097894508562428199LLU) + _1d80be47a_rotate64(_17010_w._field_lo, 27LLU));
	_17010_w._field_lo*=9LLU;
	_16910_v._field_lo*=14097894508562428199LLU;
	jule::I64 _21310_tailDone = 0LL;;
	while ((_21310_tailDone < _16040_n)) {
		{
			_21310_tailDone+=32LL;
			_1726_y=(jule::U64)((jule::U64)(_1d80be47a_rotate64((jule::U64)(_1716_x + _1726_y), 42LLU) * 14097894508562428199LLU) + _16910_v._field_hi);
			_17010_w._field_lo+=_1d80bd6aa_fetch64(_1652_t.slice(((_1642_rn - _21310_tailDone) + 16LL)));
			_1716_x=(jule::U64)((jule::U64)(_1716_x * 14097894508562428199LLU) + _17010_w._field_lo);
			_1736_z+=(jule::U64)(_17010_w._field_hi + _1d80bd6aa_fetch64(_1652_t.slice((_1642_rn - _21310_tailDone))));
			_17010_w._field_hi+=_16910_v._field_lo;
			_16910_v=_1d80c0c73_weakHashLen32WithSeeds_3(_1652_t.slice((_1642_rn - _21310_tailDone)), (jule::U64)(_16910_v._field_lo + _1736_z), _16910_v._field_hi);
			_16910_v._field_lo*=14097894508562428199LLU;
		}
	_iter_next_1a993e774:;
	}
	_iter_end_1a993e774:;;
	_1716_x=_1d80be106_hashLen16(_1716_x, _16910_v._field_lo);
	_1726_y=_1d80be106_hashLen16((jule::U64)(_1726_y + _1736_z), _17010_w._field_lo);
	return _1d80bcee5_u128{._field_hi=(jule::U64)(_1d80be106_hashLen16((jule::U64)(_1716_x + _16910_v._field_hi), _17010_w._field_hi) + _1726_y), ._field_lo=_1d80be106_hashLen16((jule::U64)(_1716_x + _17010_w._field_hi), (jule::U64)(_1726_y + _16910_v._field_hi))};;
}



inline jule::U64 _1d80c146b_hash(jule::Slice<jule::U8> _23413_bytes) {
	_1d80bcee5_u128 _2356_sum = _1d80bcee5_u128{._field_hi=0, ._field_lo=0};;
	if ((_23413_bytes.len() > 16LL)) {
		_2356_sum=_1d80c11a2_hashWithSeed(_23413_bytes.slice(16LL), (_23413_bytes.len() - 16LL), _1d80bcee5_u128{._field_hi=_1d80bd6aa_fetch64(_23413_bytes), ._field_lo=(jule::U64)(_1d80bd6aa_fetch64(_23413_bytes.slice(8LL)) + 14097894508562428199LLU)});
	} else {
		_2356_sum=_1d80c11a2_hashWithSeed(_23413_bytes, _23413_bytes.len(), _1d80bcee5_u128{._field_hi=14097894508562428199LLU, ._field_lo=13011662864482103923LLU});
	};
	return _1d80bd39c_hash128to64(_2356_sum);;
}



inline jule::U64 _1d81bee4e_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h) {
	return _1d81c0867_hasZeroByte((_1d81c0aed_castU64(_5523_m) ^ (jule::U64)(72340172838076673LLU * static_cast<jule::U64>(_5537_h))));;
}



inline jule::U64 _1d81c025c_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m) {
	return _1d81c0867_hasZeroByte((_1d81c0aed_castU64(_6026_m) ^ 9259542123273814144LLU));;
}



inline jule::U32 _1d81c0526_nextMatch(jule::U64* _6419_b) {
	jule::U32 _652_s = static_cast<jule::U32>(_1d81b25d4_TrailingZeros64(static_cast<jule::U64>((*(_6419_b)))));;
	(*(_6419_b))&=(~(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = _652_s; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })));
	return (_652_s >> 3LLU);;
}



inline jule::U64 _1d81c0867_hasZeroByte(jule::U64 _7016_x) {
	return static_cast<jule::U64>((((jule::U64)(_7016_x - 72340172838076673LLU) & (~(_7016_x))) & 9259542123273814144LLU));;
}



inline jule::U64 _1d81c0aed_castU64(jule::Array<jule::I8,8>* _7419_m) {
	return (*(((jule::U64*)(_7419_m))));;
}



inline jule::I64 _1d81c0db7_numGroups(jule::I64 _7914_n) {
	jule::I64 __jule_func_result = 0;
	__jule_func_result=({ jule::I64 __jule_x = ((_7914_n + 4LL) - 1LL); jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
	if ((__jule_func_result == 0LL)) {
		__jule_func_result=1LL;
	};
	return __jule_func_result;;
}



inline jule::Array<jule::I8,8> _1d81c10c6_newEmptyMetadata(void) {
	jule::Array<jule::I8,8> __jule_func_result = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
	{
		auto expr = &(__jule_func_result);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a994930b:;
		if (it != expr_end) {
			jule::I64 _886_i = it - expr->begin();
			{
				__jule_func_result[_886_i]=-128LL;
			}
			_iter_next_1a994930b:;
			++it;
			_886_i++;
			goto _iter_begin_1a994930b;
		}
		_iter_end_1a994930b:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_i8 _1d81c14a0_splitHash(jule::U64 _9414_h) {
	__jule_tuple_u64__jule_tuple_i8 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_9414_h & 18446744073709551488LLU) >> 7LLU));
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I8>((_9414_h & 127LLU));
	return __jule_func_result;;
}



inline jule::U32 _1d81c179c_probeStart(jule::U64 _9815_hi, jule::I64 _9823_groups) {
	return _1d81c1b21_fastModN(static_cast<jule::U32>(_9815_hi), static_cast<jule::U32>(_9823_groups));;
}



inline jule::U32 _1d81c1b21_fastModN(jule::U32 _10313_x, jule::U32 _10321_n) {
	return static_cast<jule::U32>(((jule::U64)(static_cast<jule::U64>(_10313_x) * static_cast<jule::U64>(_10321_n)) >> 32LLU));;
}



inline jule::I64 _1d835936e_getLastOsError(void) {
	jule::I64 _302_err = _1d7a9bba0_GetLastErrno();;
	{
		auto &_match_expr{ _302_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a99502e0:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a994eba2:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1a994ec18:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1a994ec90:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a994ed17:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a994eed2:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a9950048:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_1a994e993:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1a994eaa3:;
	};
}



inline jule::Slice<jule::Str> _1d835987a_Args(void) {
	return _1d8067654_args();;
}



inline jule::Exceptional<jule::Str> _1d8359cdc_WorkingDir(void) {
	return _1d835acaa_getwd();
}



inline jule::Exceptional<jule::Str> _1d835acaa_getwd(void) {
	jule::U8* _116_buf = _1d7e0847e_Getcwd(nullptr, 0LLU);;
	if ((_116_buf == nullptr)) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_1d835936e_getLastOsError(), &__jule_any_type0)};
	};
	jule::Str _152_pwd = _1d7de7d31_BytePtrToStr(_116_buf);;
	{
		_1d7db74e8_Free(_116_buf);
	};
	return jule::Exceptional<jule::Str>{.result=_152_pwd};;
}



inline jule::Bool _1dae14ad6_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1dae72858__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1dae7aca1_isExcludingLatin(_1dae1daac_Letter, _7613_r);;
}



inline jule::Bool _1dae7a124_is16(jule::Slice<_1dae78386_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1db0cee9e:;
			if (it != expr_end) {
				jule::I64 _1937_i = it - expr->begin();
				{
					_1dae78386_Range16* _1944_range = (&(_1919_ranges[_1937_i]));;
					{
						if ((_19128_r < (*(_1944_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_1944_range))._field_Hi)) {
							return (((*(_1944_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_1944_range))._field_Lo); jule::U16 __jule_y = (*(_1944_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1db0cee9e:;
				++it;
				_1937_i++;
				goto _iter_begin_1db0cee9e;
			}
			_iter_end_1db0cee9e:;
		};
		return false;;
	};
	jule::I64 _2086_lo = 0LL;;
	jule::I64 _2096_hi = _1919_ranges.len();;
	while ((_2086_lo < _2096_hi)) {
		{
			jule::I64 _2113_m = (_2086_lo + ({ jule::I64 __jule_x = (_2096_hi - _2086_lo); jule::I64 __jule_y = 1LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));;
			_1dae78386_Range16* _2123_range = (&(_1919_ranges[_2113_m]));;
			{
				if ((((*(_2123_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2123_range))._field_Hi))) {
					return (((*(_2123_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_2123_range))._field_Lo); jule::U16 __jule_y = (*(_2123_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_19128_r < (*(_2123_range))._field_Lo)) {
					_2096_hi=_2113_m;
				} else {
					_2086_lo=(_2113_m + 1LL);
				};
			};
		}
	_iter_next_1db0cdcd3:;
	}
	_iter_end_1db0cdcd3:;;
	return false;;
}



inline jule::Bool _1dae7a498_is32(jule::Slice<_1dae788b4_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1db0d637e:;
			if (it != expr_end) {
				jule::I64 _2307_i = it - expr->begin();
				{
					_1dae788b4_Range32* _2314_range = (&(_2289_ranges[_2307_i]));;
					{
						if ((_22828_r < (*(_2314_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_2314_range))._field_Hi)) {
							return (((*(_2314_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2314_range))._field_Lo); jule::U32 __jule_y = (*(_2314_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1db0d637e:;
				++it;
				_2307_i++;
				goto _iter_begin_1db0d637e;
			}
			_iter_end_1db0d637e:;
		};
		return false;;
	};
	jule::I64 _2456_lo = 0LL;;
	jule::I64 _2466_hi = _2289_ranges.len();;
	while ((_2456_lo < _2466_hi)) {
		{
			jule::I64 _2483_m = (_2456_lo + ({ jule::I64 __jule_x = (_2466_hi - _2456_lo); jule::I64 __jule_y = 1LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));;
			_1dae788b4_Range32* _2493_range = (&(_2289_ranges[_2483_m]));;
			{
				if ((((*(_2493_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2493_range))._field_Hi))) {
					return (((*(_2493_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2493_range))._field_Lo); jule::U32 __jule_y = (*(_2493_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_22828_r < (*(_2493_range))._field_Lo)) {
					_2466_hi=_2483_m;
				} else {
					_2456_lo=(_2483_m + 1LL);
				};
			};
		}
	_iter_next_1db0d30a1:;
	}
	_iter_end_1db0d30a1:;;
	return false;;
}



inline jule::Bool _1dae7aca1_isExcludingLatin(jule::Ptr<_1dae78d37_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1dae78386_Range16> *_2804_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _2823_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_2804_R16)).len() > _2823_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_2804_R16))[((*(_2804_R16)).len() - 1LL)]._field_Hi)))) {
			return _1dae7a124_is16((*(_2804_R16)).slice(_2823_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_1dae788b4_Range32> *_2873_R32 = &((*_27821_rangeTab.alloc)._field_R32);;
	if ((((*(_2873_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2873_R32))[0LL]._field_Lo)))) {
		return _1dae7a498_is32((*(_2873_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _1dae7aee3_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1dae72858__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1dae7aca1_isExcludingLatin(_1dae24d7c_Upper, _29512_r);;
}



inline jule::I64 _1daebb82a_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _466_it = _4535_end;;
	for (; (_466_it >= _4517_begin); (_466_it)--) {
		{
			{
				if (((*(_466_it)) == _4547_b)) {
					return ((jule::I64)((_466_it - _4517_begin)));;
				};
			};
		}
	_iter_next_1db0ebeaa:;
	}
	_iter_end_1db0ebeaa:;;
	return -1LL;;
}



inline jule::I64 _1daebbe57_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db0ec362:;
		if (it != expr_end) {
			jule::I64 _706_i = it - expr->begin();
			jule::U8 *_709_se = it;
			{
				if (((*(_709_se)) == _6824_b)) {
					return _706_i;;
				};
			}
			_iter_next_1db0ec362:;
			++it;
			_706_i++;
			goto _iter_begin_1db0ec362;
		}
		_iter_end_1db0ec362:;
	};
	return -1LL;;
}



inline jule::I64 _1daebc2cb_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return _1daebb82a_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b);;
}



inline jule::Str _1daebc5c8_Repeat(jule::Str _1111_s, jule::I64 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > ({ jule::I64 __jule_x = jule::MAX_I64; jule::I64 __jule_y = _1123_n; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }))) {
		__jule_panic_s(jule::Str::lit("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:16:3"));;
	};
	_1daed18b7_StrBuilder _186_ss = static__1daed1bb4_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			_1daeda6b2_WriteStr(&_186_ss, _1111_s);
		}
	_iter_next_1db11a072:;
	}
	_iter_end_1db11a072:;;
	return _1daedaea9_Str(&_186_ss);;
}



inline jule::Bool _1daebc991_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub) {
	return ((_2614_s.len() >= _2622_sub.len()) && (_2614_s.slice(0LL, _2622_sub.len()) == _2622_sub));;
}



inline jule::Bool _1daebcd15_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub) {
	return ((_3114_s.len() >= _3122_sub.len()) && (_3114_s.slice((_3114_s.len() - _3122_sub.len())) == _3122_sub));;
}



inline jule::I64 _1daebd2bb_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i) {
	if ((((_3933_i < 0LL) || (_3911_s.len() < _3919_sub.len())) || (_3919_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_3933_i < _3911_s.len()); (_3933_i)++) {
		{
			if (_1daebc991_HasPrefix(_3911_s.slice(_3933_i), _3919_sub)) {
				return _3933_i;;
			};
		}
	_iter_next_1db11dc35:;
	}
	_iter_end_1db11dc35:;;
	return -1LL;;
}



inline jule::I64 _1daebd60c_Find(jule::Str _549_s, jule::Str _5417_sub) {
	return _1daebd2bb_FindAt(_549_s, _5417_sub, 0LL);;
}



inline jule::I64 _1daebda3b_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i) {
	jule::I64 _636_j = ((_6233_i - _6223_sub.len()) + 1LL);;
	if (((((_6223_sub.len() == 0LL) || (_6233_i < 0LL)) || (_6233_i >= _6215_s.len())) || (_636_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1db120e8a:;
	for (; (_636_j >= 0LL); (_636_j)--) {
		{
			jule::I64 _697_k = _636_j;;
			jule::I64 _707_z = 0LL;;
			for (; (_707_z < _6223_sub.len()); ({
				jule::I64 ___jule_assign_arg = (_697_k + 1LL);
				jule::I64 _1___jule_assign_arg = (_707_z + 1LL);
				_697_k = ___jule_assign_arg;
				_707_z = _1___jule_assign_arg;
			})) {
				{
					if ((_6215_s[_697_k] != _6223_sub[_707_z])) {
						goto _iter_next_1db1207a3;
					};
				}
			_iter_next_1db12270b:;
			}
			_iter_end_1db12270b:;;
			return _636_j;;
		}
	_iter_next_1db1207a3:;
	}
	_iter_end_1db1207a3:;;
	return -1LL;;
}



inline jule::I64 _1daebddb0_FindLast(jule::Str _8413_s, jule::Str _8421_sub) {
	return _1daebda3b_FindLastAt(_8413_s, _8421_sub, (_8413_s.len() - 1LL));;
}



inline jule::I64 _1daec0697_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b) {
	return _1daebc2cb_FindLastByteStr(_14817_s, _14825_b);;
}



inline jule::I64 _1daec0a1b_FindRune(jule::Str _15513_s, jule::I32 _15521_r) {
	jule::I64 _1566_i = 0LL;;
	while ((_1566_i < _15513_s.len())) {
		{
			jule::I32 _1583_br;
			jule::I64 _1587_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d8062990_DecodeRuneStr(_15513_s.slice(_1566_i));
				_1583_br = __jule_assign_result.__jule_result_arg0;
				_1587_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_15521_r == _1583_br)) {
				return _1566_i;;
			};
			_1566_i+=_1587_n;
		}
	_iter_next_1db129867:;
	}
	_iter_end_1db129867:;;
	return -1LL;;
}



inline jule::I64 _1daec1445_FindAny(jule::Str _18512_s, jule::Str _18520_runes) {
	jule::I64 _1866_i = 0LL;;
	while ((_1866_i < _18512_s.len())) {
		{
			jule::I32 _1883_r;
			jule::I64 _1886_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d8062990_DecodeRuneStr(_18512_s.slice(_1866_i));
				_1883_r = __jule_assign_result.__jule_result_arg0;
				_1886_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1daec0a1b_FindRune(_18520_runes, _1883_r) != -1LL)) {
				return _1866_i;;
			};
			_1866_i+=_1886_n;
		}
	_iter_next_1db12cb78:;
	}
	_iter_end_1db12cb78:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1daec1ad8_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n) {
	jule::I64 _2166_cap = _21532_n;;
	if ((_21532_n < 0LL)) {
		_2166_cap=16LLU;
	};
	jule::Slice<jule::Str> _2206_parts = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(0LL, _2166_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	if ((_21532_n == 0LL)) {
		return _2206_parts;;
	};
	if ((_21532_n < 0LL)) {
		_21532_n=_21510_s.len();
	};
	jule::I64 _2276_i = 0LL;;
	for (; (_21532_n > 0LL); (_21532_n)--) {
		{
			jule::I64 _2293_j = _1daebd2bb_FindAt(_21510_s, _21518_sub, _2276_i);;
			if ((_2293_j == -1LL)) {
				goto _iter_end_1db132d8c;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i, _2293_j)); };
			_2276_i=(_2293_j + _21518_sub.len());
		}
	_iter_next_1db132d8c:;
	}
	_iter_end_1db132d8c:;;
	if (((_21532_n > 0LL) && (_2276_i < _21510_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i)); };
	};
	return _2206_parts;;
}



inline jule::Bool _1daec1e5c_Contains(jule::Str _24313_s, jule::Str _24321_sub) {
	return (_1daebd2bb_FindAt(_24313_s, _24321_sub, 0LL) != -1LL);;
}



inline jule::Bool _1daec29c9_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes) {
	return (_1daec1445_FindAny(_25816_s, _25824_runes) != -1LL);;
}



inline jule::I64 _1daec2d4d_Count(jule::Str _26410_s, jule::Str _26418_sub) {
	if ((_26418_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _2686_n = 0LL;;
	jule::I64 _2696_i = 0LL;;
	for (;;) {
		{
			jule::I64 _2713_j = _1daebd2bb_FindAt(_26410_s, _26418_sub, _2696_i);;
			if ((_2713_j == -1LL)) {
				goto _iter_end_1db13790d;
			};
			(_2686_n)++;
			_2696_i=(_2713_j + _26418_sub.len());
		}
	_iter_next_1db13790d:;
	}
	_iter_end_1db13790d:;;
	return _2686_n;;
}



inline jule::Str _1daec3337_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I64 _28444_n) {
	if (((_28444_n == 0LL) || (_28420_sub == _28430_new))) {
		return _28412_s;;
	};
	jule::I64 _2892_m = _1daec2d4d_Count(_28412_s, _28420_sub);;
	if ((_2892_m == 0LL)) {
		return _28412_s;;
	};
	if (((_28444_n < 0LL) || (_2892_m < _28444_n))) {
		_28444_n=_2892_m;
	};
	_1daed18b7_StrBuilder _2976_ss = static__1daed1bb4_New(((_28412_s.len() + (_28444_n * (_28430_new.len() - _28420_sub.len()))) + 1LL));;
	jule::I64 _2986_i = 0LL;;
	for (; (_28444_n > 0LL); (_28444_n)--) {
		{
			jule::I64 _3003_j = _1daebd2bb_FindAt(_28412_s, _28420_sub, _2986_i);;
			if ((_3003_j == -1LL)) {
				goto _iter_end_1db13b4e4;
			};
			_1daeda6b2_WriteStr(&_2976_ss, _28412_s.slice(_2986_i, _3003_j));
			_1daeda6b2_WriteStr(&_2976_ss, _28430_new);
			_2986_i=(_3003_j + _28420_sub.len());
		}
	_iter_next_1db13b4e4:;
	}
	_iter_end_1db13b4e4:;;
	_1daeda6b2_WriteStr(&_2976_ss, _28412_s.slice(_2986_i));
	return _1daedaea9_Str(&_2976_ss);;
}



inline jule::Str _1daec40b3_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset) {
	jule::I64 _3426_i = 0LL;;
	while ((_3426_i < _34117_s.len())) {
		{
			jule::I32 _3443_r;
			jule::I64 _3446_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d8062990_DecodeRuneStr(_34117_s.slice(_3426_i));
				_3443_r = __jule_assign_result.__jule_result_arg0;
				_3446_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1daec0a1b_FindRune(_34125_cutset, _3443_r) == -1LL)) {
				return _34117_s.slice(_3426_i);;
			};
			_3426_i+=_3446_n;
		}
	_iter_next_1db141461:;
	}
	_iter_end_1db141461:;;
	return jule::Str();;
}



inline jule::Str _1daec4437_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset) {
	jule::I64 _3566_i = _35514_s.len();;
	while ((_3566_i > 0LL)) {
		{
			jule::I32 _3583_r;
			jule::I64 _3586_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d8062ee0_DecodeLastRuneStr(_35514_s.slice(0LL, _3566_i));
				_3583_r = __jule_assign_result.__jule_result_arg0;
				_3586_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1daec0a1b_FindRune(_35522_cutset, _3583_r) == -1LL)) {
				return _35514_s.slice(0LL, _3566_i);;
			};
			_3566_i-=_3586_n;
		}
	_iter_next_1db143078:;
	}
	_iter_end_1db143078:;;
	return jule::Str();;
}



inline jule::Str _1daec47ab_Trim(jule::Str _3699_s, jule::Str _36917_cutset) {
	return _1daec40b3_TrimLeft(_1daec4437_TrimRight(_3699_s, _36917_cutset), _36917_cutset);;
}



inline jule::Str _1daec4b30_Join(jule::Slice<jule::Str> _3759_parts, jule::Str _37523_sep) {
	{
		auto _match_expr{ _3759_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1db14495e:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1db145179:;
			{
				return _3759_parts[0LL];;
			}
		}
		_match_end_1db1450e1:;
	};
	jule::I64 _3826_n = 0LL;;
	{
		auto expr = &(_3759_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db145234:;
		if (it != expr_end) {
			jule::Str *_3839_part = it;
			{
				_3826_n+=(*(_3839_part)).len();
				(_3826_n)++;
			}
			_iter_next_1db145234:;
			++it;
			goto _iter_begin_1db145234;
		}
		_iter_end_1db145234:;
	};
	_1daed18b7_StrBuilder _3876_s = static__1daed1bb4_New((_3826_n + 1LL));;
	_1daeda6b2_WriteStr(&_3876_s, _3759_parts[0LL]);
	{
		auto expr = _3759_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1db146c3b:;
		if (it != expr_end) {
			jule::Str *_3899_part = it;
			{
				_1daeda6b2_WriteStr(&_3876_s, _37523_sep);
				_1daeda6b2_WriteStr(&_3876_s, (*(_3899_part)));
			}
			_iter_next_1db146c3b:;
			++it;
			goto _iter_begin_1db146c3b;
		}
		_iter_end_1db146c3b:;
	};
	return _1daedaea9_Str(&_3876_s);;
}



inline jule::Str _1daeddaa0_Clean(jule::Str _10914_path) {
	jule::Str _1102_originalPath = _10914_path;;
	jule::I64 _1112_volLen = _1daee191b_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1112_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1112_volLen > 1LL) && _1daee1344_IsPathSep(_1102_originalPath[0LL])) && _1daee1344_IsPathSep(_1102_originalPath[1LL]))) {
			return _1daede177_FromSlash(_1102_originalPath);;
		};
		return (_1102_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1202_rooted = _1daee1344_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1272_n = _10914_path.len();;
	_1daedcc14_lazyBuff _1286_out = _1daedcc14_lazyBuff{._field_path=_10914_path, ._field_buff=jule::Slice<jule::U8>(nullptr), ._field_w=0, ._field_volAndPath=_1102_originalPath, ._field_volLen=_1112_volLen};;
	jule::I64 _1336_r;
	jule::I64 _13313_dotdot;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_1336_r = ___jule_assign_arg;
		_13313_dotdot = _1___jule_assign_arg;
	});
	if (_1202_rooted) {
		_1daedd484_append(&_1286_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_1336_r = ___jule_assign_arg;
			_13313_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1336_r < _1272_n)) {
		{
			{
				
				if (_1daee1344_IsPathSep(_10914_path[_1336_r])) {
					_case_begin_1db1576b9:;
					{
						(_1336_r)++;
					}
				}
				else if (((_10914_path[_1336_r] == '.') && (((_1336_r + 1LL) == _1272_n) || _1daee1344_IsPathSep(_10914_path[(_1336_r + 1LL)])))) {
					_case_begin_1db1553cb:;
					{
						(_1336_r)++;
					}
				}
				else if ((((_10914_path[_1336_r] == '.') && (_10914_path[(_1336_r + 1LL)] == '.')) && (((_1336_r + 2LL) == _1272_n) || _1daee1344_IsPathSep(_10914_path[(_1336_r + 2LL)])))) {
					_case_begin_1db155442:;
					{
						_1336_r+=2LL;
						{
							
							if ((_1286_out._field_w > _13313_dotdot)) {
								_case_begin_1db15b778:;
								{
									(_1286_out._field_w)--;
									while (((_1286_out._field_w > _13313_dotdot) && (!(_1daee1344_IsPathSep(_1daedd1cb_index(&_1286_out, _1286_out._field_w)))))) {
										{
											(_1286_out._field_w)--;
										}
									_iter_next_1db15c009:;
									}
									_iter_end_1db15c009:;;
								}
							}
							else if ((!(_1202_rooted))) {
								_case_begin_1db15b822:;
								{
									if ((_1286_out._field_w > 0LL)) {
										_1daedd484_append(&_1286_out, 47LLU);
									};
									_1daedd484_append(&_1286_out, '.');
									_1daedd484_append(&_1286_out, '.');
									_13313_dotdot=_1286_out._field_w;
								}
							}
							_match_end_1db15b3c1:;
						};
					}
				}
				else {
					_case_begin_1db155365:;
					{
						if (((_1202_rooted && (_1286_out._field_w != 1LL)) || ((!(_1202_rooted)) && (_1286_out._field_w != 0LL)))) {
							_1daedd484_append(&_1286_out, 47LLU);
						};
						;
						for (; ((_1336_r < _1272_n) && (!(_1daee1344_IsPathSep(_10914_path[_1336_r])))); (_1336_r)++) {
							{
								_1daedd484_append(&_1286_out, _10914_path[_1336_r]);
							}
						_iter_next_1db156751:;
						}
						_iter_end_1db156751:;;
					}
				}
				_match_end_1db155068:;
			};
		}
	_iter_next_1db154a7e:;
	}
	_iter_end_1db154a7e:;;
	if ((_1286_out._field_w == 0LL)) {
		_1daedd484_append(&_1286_out, '.');
	};
	return _1daede177_FromSlash(_1daedd71a_string(&_1286_out));;
}



inline jule::Str _1daede177_FromSlash(jule::Str _21214_path) {
	{
		return _21214_path;;
	};
}



inline jule::Str _1daede4b8_Join(jule::Slice<jule::Str> _2269_elem) {
	return _1daee1ee3_join(_2269_elem);;
}



inline jule::Str _1daede74e_Ext(jule::Str _2318_path) {
	jule::I64 _2326_i = (_2318_path.len() - 1LL);;
	for (; ((_2326_i >= 0LL) && (!(_1daee1344_IsPathSep(_2318_path[_2326_i])))); (_2326_i)--) {
		{
			if ((_2318_path[_2326_i] == '.')) {
				return _2318_path.slice(_2326_i);;
			};
		}
	_iter_next_1db160a13:;
	}
	_iter_end_1db160a13:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1daedea18_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result = std::move(_1daee1c5c_abs(_2468_path));
return __jule_func_result;;
}



inline jule::Str _1daedecd2_Base(jule::Str _25213_path) {
	if ((_25213_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25213_path.len() > 0LL) && _1daee1344_IsPathSep(_25213_path[(_25213_path.len() - 1LL)]))) {
		{
			(_25213_path).mut_slice(0LL, (_25213_path.len() - 1LL));;
		}
	_iter_next_1db161d99:;
	}
	_iter_end_1db161d99:;;
	(_25213_path).mut_slice(_1daee03ed_VolumeName(_25213_path).len());;
	jule::I64 _2636_i = (_25213_path.len() - 1LL);;
	while (((_2636_i >= 0LL) && (!(_1daee1344_IsPathSep(_25213_path[_2636_i]))))) {
		{
			(_2636_i)--;
		}
	_iter_next_1db1622b7:;
	}
	_iter_end_1db1622b7:;;
	if ((_2636_i >= 0LL)) {
		(_25213_path).mut_slice((_2636_i + 1LL));;
	};
	if ((_25213_path).empty()) {
		return jule::Str::lit("/", 1);;
	};
	return _25213_path;;
}



inline jule::Str _1daee01ab_Dir(jule::Str _2838_path) {
	jule::Str _2842_vol = _1daee03ed_VolumeName(_2838_path);;
	jule::I64 _2856_i = (_2838_path.len() - 1LL);;
	while (((_2856_i >= _2842_vol.len()) && (!(_1daee1344_IsPathSep(_2838_path[_2856_i]))))) {
		{
			(_2856_i)--;
		}
	_iter_next_1db165771:;
	}
	_iter_end_1db165771:;;
	jule::Str _2892_dir = _1daeddaa0_Clean(_2838_path.slice(_2842_vol.len(), (_2856_i + 1LL)));;
	if ((_2892_dir.equal(".", 1) && (_2842_vol.len() > 2LL))) {
		return _2842_vol;;
	};
	return (_2842_vol + _2892_dir);;
}



inline jule::Str _1daee03ed_VolumeName(jule::Str _30115_path) {
	return _1daede177_FromSlash(_30115_path.slice(0LL, _1daee191b_volumeNameLen(_30115_path)));;
}



inline jule::Bool _1daee1344_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _1daee1652_IsAbs(jule::Str _5310_path) {
	return _1daebc991_HasPrefix(_5310_path, jule::Str::lit("/", 1));;
}



inline jule::I64 _1daee191b_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _1daee1c5c_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_1daee1652_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _1daeddaa0_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _672_wd = ({
		auto except = _1d8359cdc_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _1daee1ee3_join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _672_wd; (*it++) = _638_path; __jule_collection; }));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1daee1ee3_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto expr = &(_739_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db16d79b:;
		if (it != expr_end) {
			jule::I64 _746_i = it - expr->begin();
			jule::Str *_749_e = it;
			{
				if (!((*(_749_e))).empty()) {
					return _1daeddaa0_Clean(_1daec4b30_Join(_739_elem.slice(_746_i), jule::Str::lit("/", 1)));;
				};
			}
			_iter_next_1db16d79b:;
			++it;
			_746_i++;
			goto _iter_begin_1db16d79b;
		}
		_iter_end_1db16d79b:;
	};
	return jule::Str();;
}



inline jule::I64 _1d8289238_getLastFsError(void) {
	jule::I64 _722_err = _1d7a9bba0_GetLastErrno();;
	{
		auto &_match_expr{ _722_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1aa699753:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1aa699654:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1aa69907c:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1aa6990e3:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1aa699159:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1aa6991d1:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 84LL) {
			_case_begin_1aa699258:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1aa6992d0:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1aa6998eb:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1aa699973:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1aa6999ea:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1aa699a72:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1aa699ae9:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1aa699b71:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1aa699be8:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 98LL) {
			_case_begin_1aa699c70:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1aa699ce7:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1aa699d6e:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1aa699de6:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 35LL) {
			_case_begin_1aa699e6d:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1aa699ee5:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1aa69a06c:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1aa69a0e4:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1aa69a16b:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1aa69a1e3:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 55LL) {
			_case_begin_1aa69a26a:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 94LL) {
			_case_begin_1aa69a2e2:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 66LL) {
			_case_begin_1aa69a369:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1aa698e06:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1aa699016:;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1d9202c0b_AtoiBp(jule::U8* _722_b, jule::I64 _736_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _86_neg = ((*(_722_b)) == '-');;
	if (_86_neg) {
		if ((_736_n == 1LL)) {
			return __jule_func_result;;
		};
		(_736_n)--;
		(_722_b)++;
	};
	for (; (_736_n > 0LL); (_736_n)--) {
		{
			if ((('0' <= (*(_722_b))) && ((*(_722_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I64>((jule::U8)((*(_722_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_722_b)++;
		}
	_iter_next_1aa6c5a6a:;
	}
	_iter_end_1aa6c5a6a:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_86_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	return __jule_func_result;;
}



inline jule::Str _1d9251b8e_Itoa(jule::I64 _89_x) {
	if ((_89_x < 0LL)) {
		return (jule::Str::lit("-", 1) + _1d9251e9c_Utoa(static_cast<jule::U64>((-(_89_x)))));;
	};
	return _1d9251e9c_Utoa(static_cast<jule::U64>(_89_x));;
}



inline jule::Str _1d9251e9c_Utoa(jule::U64 _1613_x) {
	if ((_1613_x == 0LLU)) {
		return jule::Str::lit("0", 1);;
	};
	jule::Slice<jule::U8> _206_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(20LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _216_i = 0LL;;
	while ((_1613_x >= 10LLU)) {
		{
			jule::U64 _233_q = (_1613_x / 10LLU);;
			_206_buf[_216_i]=static_cast<jule::U8>((jule::U64)((jule::U64)('0' + _1613_x) - (jule::U64)(_233_q * 10LLU)));
			(_216_i)++;
			_1613_x=_233_q;
		}
	_iter_next_1aa6cc5aa:;
	}
	_iter_end_1aa6cc5aa:;;
	_206_buf[_216_i]=static_cast<jule::U8>((jule::U64)('0' + _1613_x));
	(_206_buf).mut_slice(0LL, (_216_i + 1LL));;
	_1d92521cd_rev(&(_206_buf));
	return _1d7e4dc55_StrFromBytes(_206_buf);;
}



inline void _1d92521cd_rev(jule::Slice<jule::U8>* _3513_b) {
	jule::I64 _366_i = 0LL;;
	for (; (_366_i < ((*(_3513_b)).len() >> 1LL)); (_366_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = (*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _366_i)];
				jule::U8 _1___jule_assign_arg = (*(_3513_b))[_366_i];
				(*(_3513_b))[_366_i] = ___jule_assign_arg;
				(*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _366_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1aa6d11b3:;
	}
	_iter_end_1aa6d11b3:;;
}



inline jule::Slice<char*> _1d9255a1c_strSliceToCstrSlice(jule::Slice<jule::Str>* _3525_s, jule::Slice<jule::Slice<jule::U8>>* _3540_bargs) {
	jule::Slice<char*> _366_cs = ({ auto __jule_collection = jule::Slice<char*>::alloc(((*(_3525_s)).len() + 1LL), ((*(_3525_s)).len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = nullptr; __jule_collection; });;
	(*(_3540_bargs))=({ auto __jule_collection = jule::Slice<jule::Slice<jule::U8>>::alloc((*(_3525_s)).len(), (*(_3525_s)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::U8>(nullptr); __jule_collection; });
	{
		auto expr = _3525_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa6ed9e9:;
		if (it != expr_end) {
			jule::I64 _386_i = it - expr->begin();
			jule::Str *_389_arg = it;
			{
				jule::Slice<jule::U8> _397_barg = _1d7de80b7_StrToBytes((*(_389_arg)));;
				(*(_3540_bargs))[_386_i]=_397_barg;
				_366_cs[_386_i]=((char*)((&(_397_barg[0LL]))));
			}
			_iter_next_1aa6ed9e9:;
			++it;
			_386_i++;
			goto _iter_begin_1aa6ed9e9;
		}
		_iter_end_1aa6ed9e9:;
	};
	_366_cs[(_366_cs.len() - 1LL)]=nullptr;
	return _366_cs;;
}



inline jule::I64 _1d9255d91_execvp(jule::Str* _4712_file, jule::Slice<jule::Str>* _4724_argv) {
	jule::Slice<jule::Slice<jule::U8>> _486_bargs = static_cast<jule::Slice<jule::Slice<jule::U8>>>(nullptr);;
	jule::Slice<char*> _492_cargv = _1d9255a1c_strSliceToCstrSlice(_4724_argv, &(_486_bargs));;
	jule::Slice<jule::U8> _502_s = _1d7de80b7_StrToBytes((*(_4712_file)));;
	{
		return execvp(((char*)((&(_502_s[0LL])))), (char*const*)(&(_492_cargv[0LL])));;
	};
}



inline jule::VoidExceptional _1d92560c2_setenv(jule::Slice<jule::Str>* _5612_envv) {
	;
	{
		auto expr = _5612_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa700e4c:;
		if (it != expr_end) {
			jule::Str *_589_env = it;
			{
				jule::I64 _593_i = _1daebbe57_FindByteStr((*(_589_env)), '=');;
				if ((_593_i == -1LL)) {
					return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
				};
				{
					jule::Slice<jule::U8> _644_key = _1d7de80b7_StrToBytes((*(_589_env)).slice(0LL, _593_i));;
					if ((((*(_589_env)).len() - _593_i) == 1LL)) {
						jule::Str _665_val = jule::Str::lit("\x00", 1);;
						if ((setenv(((char*)((&(_644_key[0LL])))), ((char*)((&(_665_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
						};
					} else {
						jule::Slice<jule::U8> _715_val = _1d7de80b7_StrToBytes((*(_589_env)).slice((_593_i + 1LL)));;
						if ((setenv(((char*)((&(_644_key[0LL])))), ((char*)((&(_715_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
						};
					};
				};
			}
			_iter_next_1aa700e4c:;
			++it;
			goto _iter_begin_1aa700e4c;
		}
		_iter_end_1aa700e4c:;
	};
	return jule::VoidExceptional{};
}



inline jule::I64 _1d925704b_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1aa702d83:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1aa702de9:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1aa707926:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1aa70763a:;
	};
}



inline jule::I64 _1d925729e_getLastProcessError(void) {
	return _1d925704b_processErrorFromCode(_1d7a9bba0_GetLastErrno());;
}



inline void _1d92579db_Exit(jule::I64 _109_code) {
	_1d7e255ab_Exit(_109_code);
}



inline jule::Str _1d9257c1c_Executable(void) {
	return _1d7e54dc1_executable();;
}



inline jule::Bool _1d9137415_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1d91376e0_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1d913516b_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa7295d5:;
		if (it != expr_end) {
			jule::Str *_329_validExt = it;
			{
				if ((_3121_ext == (*(_329_validExt)))) {
					return true;;
				};
			}
			_iter_next_1aa7295d5:;
			++it;
			goto _iter_begin_1aa7295d5;
		}
		_iter_end_1aa7295d5:;
	};
	return false;;
}



inline jule::Bool _1d91379a9_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1d9136e2b_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa72a42c:;
		if (it != expr_end) {
			jule::Str *_459_e = it;
			{
				if ((_4118_ext == (*(_459_e)))) {
					return true;;
				};
			}
			_iter_next_1aa72a42c:;
			++it;
			goto _iter_begin_1aa72a42c;
		}
		_iter_end_1aa72a42c:;
	};
	{
		auto expr = &(_1d913713a_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa72a32d:;
		if (it != expr_end) {
			jule::Str *_509_e = it;
			{
				if ((_4118_ext == (*(_509_e)))) {
					return true;;
				};
			}
			_iter_next_1aa72a32d:;
			++it;
			goto _iter_begin_1aa72a32d;
		}
		_iter_end_1aa72a32d:;
	};
	return false;;
}



inline jule::Str _1d9145027_Logf(jule::Str _3249_fmt, jule::Slice<jule::Any> _32422_args) {
	return _1d91459b7_applyFmt(_3249_fmt, _32422_args);;
}



inline jule::Str _1d9145335_argToStr(jule::Any _32813_arg) {
	{
		auto &_match_expr{ _32813_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1aa72c6c6:;
			{
				return _32813_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1aa72c96d:;
			{
				return __jule_strFromByte(_32813_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1aa72c9d4:;
			{
				return __jule_strFromRune(_32813_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_1aa72c907:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1aa72c891:;
	};
}



inline jule::I64 _1d91455ee_findNextFmt(jule::Str _34116_fmt) {
	{
		auto expr = &(_34116_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa72bdac:;
		if (it != expr_end) {
			jule::I64 _3426_i = it - expr->begin();
			jule::U8 *_3429_b = it;
			{
				if (((*(_3429_b)) == '@')) {
					return _3426_i;;
				};
			}
			_iter_next_1aa72bdac:;
			++it;
			_3426_i++;
			goto _iter_begin_1aa72bdac;
		}
		_iter_end_1aa72bdac:;
	};
	return -1LL;;
}



inline jule::Str _1d91459b7_applyFmt(jule::Str _35017_fmt, jule::Slice<jule::Any> _35027_args) {
	_1daed18b7_StrBuilder _3516_s = static__1daed1bb4_New(32LL);;
	{
		auto expr = &(_35027_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa730432:;
		if (it != expr_end) {
			jule::Any *_3529_arg = it;
			{
				jule::I64 _3533_i = _1d91455ee_findNextFmt(_35017_fmt);;
				if ((_3533_i == -1LL)) {
					goto _iter_end_1aa730432;
				};
				_1daeda6b2_WriteStr(&_3516_s, _35017_fmt.slice(0LL, _3533_i));
				_1daeda6b2_WriteStr(&_3516_s, _1d9145335_argToStr((*(_3529_arg))));
				(_35017_fmt).mut_slice((_3533_i + 1LL));;
			}
			_iter_next_1aa730432:;
			++it;
			goto _iter_begin_1aa730432;
		}
		_iter_end_1aa730432:;
	};
	_1daeda6b2_WriteStr(&_3516_s, _35017_fmt);
	return _1daedaea9_Str(&_3516_s);;
}



inline jule::Bool _1d91468b9_IsTopDirective(jule::Str _2319_directive) {
	return ((_2319_directive == static_cast<jule::Str>(jule::Str::lit("pass", 4))) || (_2319_directive == static_cast<jule::Str>(jule::Str::lit("build", 5))));;
}



inline jule::Bool _1d9147cd8_IsWindows(jule::Str _3714_os) {
	return (_3714_os == static_cast<jule::Str>(jule::Str::lit("windows", 7)));;
}



inline jule::Bool _1d91480e6_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == static_cast<jule::Str>(jule::Str::lit("darwin", 6)));;
}



inline jule::Bool _1d91483b0_IsLinux(jule::Str _4312_os) {
	return (_4312_os == static_cast<jule::Str>(jule::Str::lit("linux", 5)));;
}



inline jule::Bool _1d9148701_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == static_cast<jule::Str>(jule::Str::lit("i386", 4)));;
}



inline jule::Bool _1d9148987_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == static_cast<jule::Str>(jule::Str::lit("amd64", 5)));;
}



inline jule::Bool _1d9148c51_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == static_cast<jule::Str>(jule::Str::lit("arm64", 5)));;
}



inline jule::Bool _1d914901a_IsUnix(jule::Str _5511_os) {
	return (_1d91480e6_IsDarwin(_5511_os) || _1d91483b0_IsLinux(_5511_os));;
}



inline jule::Bool _1d91493e4_Is32Bit(jule::Str _5812_arch) {
	return _1d9148701_IsI386(_5812_arch);;
}



inline jule::Bool _1d9149636_Is64Bit(jule::Str _6112_arch) {
	return (_1d9148987_IsAmd64(_6112_arch) || _1d9148c51_IsArm64(_6112_arch));;
}



inline void _1d9258e60_init(void) {
	jule::Str _256_path = _1d9257c1c_Executable();;
	if ((_256_path).empty()) {
		__jule_panic_s(jule::Str::lit("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:3"));;
	};
	{
		_1d92584ae_PathWd=({
			auto except = _1d8359cdc_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				__jule_panic_s(jule::Str::lit("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:4"));;
				return;;
			} jule::Str();});
		});
		_1d9258206_PathExec=_1daee01ab_Dir(_256_path);
		_1d9257eb4_PathStdlib=_1daede4b8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = _1d9258206_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("std", 3); __jule_collection; }));
		_1d92587ab_PathApi=_1daede4b8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = _1d9258206_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("api", 3); (*it++) = jule::Str::lit("jule.hpp", 8); __jule_collection; }));
	};
}



inline jule::U32 _1c0008696_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1c0008982_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1c0008c4b_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1c000908c_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1c000b600_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1aa7a2e22:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1c001255c_IsInf(_4714_f, 0LL) || _1c0011dca_IsNaN(_4714_f)) {
			_case_begin_1aa7a2ebb:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1aa7a2d34:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1c0012826_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _566_x = _1c0008c4b_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_566_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_566_x=(_566_x & 9227875636482146303LLU);
	_566_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_1c000908c_F64FromBits(_566_x);
	return __jule_func_result;;
}



inline jule::F64 _1c0011abc_NaN(void) {
	return _1c000908c_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _1c0011dca_IsNaN(jule::F64 _5210_f) {
	return false;;
}



inline jule::F64 _1c0012194_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _1c000908c_F64FromBits(9218868437227405312LLU);;
	};
	return _1c000908c_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _1c001255c_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1c0012826_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1c0014bd0_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1c00142ea_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1c0011dca_IsNaN(_1118_x) || _1c001255c_IsInf(_1118_x, 1LL)) {
			_case_begin_1a8ea7d76:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1a8ea7e20:;
			{
				return _1c0011abc_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1a8ea7e86:;
			{
				return _1c0012194_Inf(-1LL);;
			}
		}
		_match_end_1a8ea7caa:;
	};
	jule::F64 _1336_f1;
	jule::I64 _13314_ki;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1c000b600_Frexp(_1118_x);
		_1336_f1 = __jule_assign_result.__jule_result_arg0;
		_13314_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1336_f1 < 0.7071067811865476)) {
		_1336_f1*=2LL;
		(_13314_ki)--;
	};
	jule::F64 _1382_f = (_1336_f1 - 1LL);;
	jule::F64 _1392_k = static_cast<jule::F64>(_13314_ki);;
	jule::F64 _1422_s = ({ jule::F64 __jule_x = _1382_f; jule::F64 __jule_y = (2LL + _1382_f); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });;
	jule::F64 _1432_s2 = (_1422_s * _1422_s);;
	jule::F64 _1442_s4 = (_1432_s2 * _1432_s2);;
	jule::F64 _1452_t1 = (_1432_s2 * (0.6666666666666735 + (_1442_s4 * (0.2857142874366239 + (_1442_s4 * (0.1818357216161805 + (_1442_s4 * 0.14798198605116586)))))));;
	jule::F64 _1462_t2 = (_1442_s4 * (0.3999999999940942 + (_1442_s4 * (0.22222198432149784 + (_1442_s4 * 0.15313837699209373)))));;
	jule::F64 _1472_R = (_1452_t1 + _1462_t2);;
	jule::F64 _1482_hfsq = ((0.5 * _1382_f) * _1382_f);;
	return ((_1392_k * 0.6931471803691238) - ((_1482_hfsq - ((_1422_s * (_1482_hfsq + _1472_R)) + (_1392_k * 0.00000000019082149292705877))) - _1382_f));;
}



inline jule::F64 _1c0014bd0_Abs(jule::F64 _438_x) {
	return _1c000908c_F64FromBits((_1c0008c4b_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1c001b7a8_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _462_absF = _1c0014bd0_Abs(_449_f);;
	jule::F64 _476_i = 0LL;;
	if ((_462_absF > 4503599627370496LL)) {
		_476_i=_449_f;
	} else {
		_476_i=(_462_absF + 4503599627370496LL);
		_476_i-=4503599627370496LL;
		while ((_476_i > _462_absF)) {
			{
				(_476_i)--;
			}
		_iter_next_1a901ac74:;
		}
		_iter_end_1a901ac74:;;
		if ((_449_f < 0LL)) {
			_476_i=(-(_476_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _476_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _476_i);
	return __jule_func_result;;
}



inline jule::F64 _1c001c0b1_Log2(jule::F64 _449_x) {
	jule::F64 _452_frac;
	jule::I64 _458_exp;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1c000b600_Frexp(_449_x);
		_452_frac = __jule_assign_result.__jule_result_arg0;
		_458_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_452_frac == 0.5)) {
		return static_cast<jule::F64>((_458_exp - 1LL));;
	};
	return ((_1c00142ea_Log(_452_frac) * 1.4426950408889634) + static_cast<jule::F64>(_458_exp));;
}



inline jule::Str _1c004567d_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize) {
	return _1d7e4dc55_StrFromBytes(_1c0045c66_genericFtoa(({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _1c0049121_max(((_7932_prec + 4LL) + 1LL), 25LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _1c0045c66_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize) {
	jule::U64 _886_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1d949ac2e_floatInfo> _8910_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1aa927294:;
			{
				_886_bits=static_cast<jule::U64>(_1c0008696_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8910_flt=((jule::Ptr<_1d949ac2e_floatInfo>)((&(_1c0044869_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1aa926eca:;
			{
				_886_bits=_1c0008c4b_F64Bits(_8733_val);
				_8910_flt=((jule::Ptr<_1d949ac2e_floatInfo>)((&(_1c0044b66_f64info))));
			}
		}
		else {
			_case_begin_1aa925c87:;
			{
				__jule_panic_s(jule::Str::lit("std::conv: illegal bitSize", 26) + jule::Str("\nlocation: std/conv/ftoa.jule:98:3"));;
			}
		}
		_match_end_1aa926b56:;
	};
	jule::Bool _1012_neg = (({ jule::U64 __jule_x = _886_bits; jule::U64 __jule_y = (jule::U64)((*(_8910_flt))._field_expbits + (*_8910_flt.alloc)._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU);;
	jule::I64 _1026_exp = (static_cast<jule::I64>(({ jule::U64 __jule_x = _886_bits; jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); })) & static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)));;
	jule::U64 _1036_mant = (_886_bits & (jule::U64)(({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	{
		auto &_match_expr{ _1026_exp };
		
		if (_match_expr == static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL))) {
			_case_begin_1aa92b0de:;
			{
				{
					
					if ((_1036_mant != 0LLU)) {
						_case_begin_1aa92c82c:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1012_neg) {
						_case_begin_1aa92c91a:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_1aa92c1ab:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_1aa92c09b:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1aa92b1cc:;
			{
				(_1026_exp)++;
			}
		}
		else {
			_case_begin_1aa92a297:;
			{
				_1036_mant|=({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
			}
		}
		_match_end_1aa92a440:;
	};
	_1026_exp+=(*_8910_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _1c0048296_fmtB(_8720_dst, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _1c0048928_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	;
	_1c00450ea_decimalSlice _1376_digs = _1c00450ea_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1386_ok = false;;
	jule::Bool _1402_shortest = (_8758_prec < 0LL);;
	if (_1402_shortest) {
		_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(32LL, 32LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		_1c0053e83_ryuFtoaShortest(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), &((*(_8910_flt))));
		_1386_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa9305aa:;
				{
					_8758_prec=_1c0049121_max((_1376_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aa9315bc:;
				{
					_8758_prec=_1c0049121_max((_1376_digs._field_nd - _1376_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa931633:;
				{
					_8758_prec=_1376_digs._field_nd;
				}
			}
			_match_end_1aa9307ca:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I64 _1577_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa9335be:;
				{
					(_1577_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa93368a:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_1577_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1aa933129:;
				{
					_1577_digits=1LL;
				}
			}
			_match_end_1aa933239:;
		};
		if (((_8769_bitSize == 32LL) && (_1577_digits <= 9LL))) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1c0052bc9_ryuFtoaFixed32(&(_1376_digs), static_cast<jule::U32>(_1036_mant), (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		} else if ((_1577_digits <= 18LL)) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1c005316e_ryuFtoaFixed64(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		};
	};
	if ((!(_1386_ok))) {
		return _1c0046470_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	return _1c0046b46_fmtDigits(_8720_dst, _1402_shortest, _1012_neg, _1376_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _1c0046470_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _1d949ac2e_floatInfo* _18824_flt) {
	_1c0057c67_decimal _1896_d = _1c0057c67_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1c0058152_assign(&_1896_d, _1882_mant);
	_1c005840a_shift(&_1896_d, (_18813_exp - static_cast<jule::I64>((*(_18824_flt))._field_mantbits)));
	_1c00450ea_decimalSlice _1926_digs = _1c00450ea_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1932_shortest = (_18733_prec < 0LL);;
	if (_1932_shortest) {
		_1c0047064_roundShortest(&(_1896_d), _1882_mant, _18813_exp, _18824_flt);
		_1926_digs=_1c00450ea_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa93954d:;
				{
					_18733_prec=(_1926_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aa93a351:;
				{
					_18733_prec=_1c0049121_max((_1926_digs._field_nd - _1926_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa93a3b7:;
				{
					_18733_prec=_1926_digs._field_nd;
				}
			}
			_match_end_1aa93a1b9:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa939273:;
				{
					_1c0058c24_round(&_1896_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aa9392d9:;
				{
					_1c0058c24_round(&_1896_d, (_1896_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa939350:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_1c0058c24_round(&_1896_d, _18733_prec);
				}
			}
			_match_end_1aa93b8a2:;
		};
		_1926_digs=_1c00450ea_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
	};
	return _1c0046b46_fmtDigits(_18716_dst, _1932_shortest, _18755_neg, _1926_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _1c0046b46_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1c00450ea_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt) {
	{
		auto &_match_expr{ _22537_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1aa93ea3c:;
			{
				return _1c0047608_fmtE(_22418_dst, _22447_neg, _2252_digs, _22526_prec, _22537_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1aa93eaa3:;
			{
				return _1c0047ae2_fmtF(_22418_dst, _22447_neg, _2252_digs, _22526_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1aa93eb19:;
			{
				jule::I64 _2337_eprec = _22526_prec;;
				if (((_2337_eprec > _2252_digs._field_nd) && (_2252_digs._field_nd >= _2252_digs._field_dp))) {
					_2337_eprec=_2252_digs._field_nd;
				};
				if (_22431_shortest) {
					_2337_eprec=6LL;
				};
				jule::I64 _2433_exp = (_2252_digs._field_dp - 1LL);;
				if (((_2433_exp < -4LL) || (_2433_exp >= _2337_eprec))) {
					if ((_22526_prec > _2252_digs._field_nd)) {
						_22526_prec=_2252_digs._field_nd;
					};
					return _1c0047608_fmtE(_22418_dst, _22447_neg, _2252_digs, (_22526_prec - 1LL), (jule::U8)((jule::U8)(_22537_fmt + 'e') - 'g'));;
				};
				if ((_22526_prec > _2252_digs._field_dp)) {
					_22526_prec=_2252_digs._field_nd;
				};
				return _1c0047ae2_fmtF(_22418_dst, _22447_neg, _2252_digs, _1c0049121_max((_22526_prec - _2252_digs._field_dp), 0LL));;
			}
		}
		_match_end_1aa93e982:;
	};
	return jule::append(_22418_dst,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = '%'; (*it++) = _22537_fmt; __jule_collection; }));;
}



inline void _1c0047064_roundShortest(_1c0057c67_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1d949ac2e_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2832_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2832_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_1c0057c67_decimal _2926_upper = _1c0057c67_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1c0058152_assign(&_2926_upper, (jule::U64)(({ jule::U64 __jule_x = _26235_mant; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) + 1LLU));
	_1c005840a_shift(&_2926_upper, ((_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3026_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I64 _3036_explo = 0LL;;
	if (((_26235_mant > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_26257_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_26246_exp == _2832_minexp))) {
		_3026_mantlo=(jule::U64)(_26235_mant - 1LLU);
		_3036_explo=_26246_exp;
	} else {
		_3026_mantlo=(jule::U64)(({ jule::U64 __jule_x = _26235_mant; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU);
		_3036_explo=(_26246_exp - 1LL);
	};
	_1c0057c67_decimal _3116_lower = _1c0057c67_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1c0058152_assign(&_3116_lower, (jule::U64)(({ jule::U64 __jule_x = _3026_mantlo; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) + 1LLU));
	_1c005840a_shift(&_3116_lower, ((_3036_explo - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3182_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3316_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I64 _3356_ui = 0LL;;
	for (; ; (_3356_ui)++) {
		{
			jule::I64 _3403_mi = ((_3356_ui - _2926_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3403_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1aa94ac46;
			};
			jule::I64 _3443_li = ((_3356_ui - _2926_upper._field_dp) + _3116_lower._field_dp);;
			jule::U8 _3457_l = static_cast<jule::U8>(48LLU);;
			if (((_3443_li >= 0LL) && (_3443_li < _3116_lower._field_nd))) {
				_3457_l=_3116_lower._field_d[_3443_li];
			};
			jule::U8 _3497_m = static_cast<jule::U8>(48LLU);;
			if ((_3403_mi >= 0LL)) {
				_3497_m=(*(_26223_d))._field_d[_3403_mi];
			};
			jule::U8 _3537_u = static_cast<jule::U8>(48LLU);;
			if ((_3356_ui < _2926_upper._field_nd)) {
				_3537_u=_2926_upper._field_d[_3356_ui];
			};
			jule::Bool _3613_okdown = ((_3457_l != _3497_m) || (_3182_inclusive && ((_3443_li + 1LL) == _3116_lower._field_nd)));;
			{
				
				if (((_3316_upperdelta == 0LLU) && ((jule::U8)(_3497_m + 1LLU) < _3537_u))) {
					_case_begin_1aa9509e8:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				else if (((_3316_upperdelta == 0LLU) && (_3497_m != _3537_u))) {
					_case_begin_1aa950a92:;
					{
						_3316_upperdelta=1LLU;
					}
				}
				else if (((_3316_upperdelta == 1LLU) && ((_3497_m != '9') || (_3537_u != '0')))) {
					_case_begin_1aa950b08:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				_match_end_1aa95091b:;
			};
			jule::Bool _3823_okup = ((_3316_upperdelta > 0LLU) && ((_3182_inclusive || (_3316_upperdelta > 1LLU)) || ((_3356_ui + 1LL) < _2926_upper._field_nd)));;
			{
				
				if ((_3613_okdown && _3823_okup)) {
					_case_begin_1aa958319:;
					{
						_1c0058c24_round(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3613_okdown) {
					_case_begin_1aa9583b3:;
					{
						_1c00586b3_roundDown(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3823_okup) {
					_case_begin_1aa958429:;
					{
						_1c005896b_roundUp(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				_match_end_1aa950b6e:;
			};
		}
	_iter_next_1aa94ac46:;
	}
	_iter_end_1aa94ac46:;;
}



inline jule::Slice<jule::U8> _1c0047608_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1c00450ea_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4086_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4086_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I64 _4177_i = 1LL;;
		jule::I64 _4183_m = _1c0048c9c_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_4177_i < _4183_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_4177_i, _4183_m));;
			_4177_i=_4183_m;
		};
		for (; (_4177_i <= _40154_prec); (_4177_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1aa95c30c:;
		}
		_iter_end_1aa95c30c:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I64 _4306_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4306_exp=0LL;
	};
	if ((_4306_exp < 0LL)) {
		_4086_ch='-';
		_4306_exp=(-(_4306_exp));
	} else {
		_4086_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	{
		
		if ((_4306_exp < 10LL)) {
			_case_begin_1aa95e9e6:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>(_4306_exp) + '0')); };
			}
		}
		else if ((_4306_exp < 100LL)) {
			_case_begin_1aa95eba0:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1aa95e463:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I64 __jule_x = _4306_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1aa95e30e:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _1c0047ae2_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1c00450ea_decimalSlice _45637_d, jule::I64 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I64 _4647_m = _1c0048c9c_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _4647_m));;
		for (; (_4647_m < _45637_d._field_dp); (_4647_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1aa9637b9:;
		}
		_iter_end_1aa9637b9:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I64 _4757_i = 0LL;;
		for (; (_4757_i < _45654_prec); (_4757_i)++) {
			{
				jule::U8 _4778_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _4784_j = (_45637_d._field_dp + _4757_i);;
				if (((0LL <= _4784_j) && (_4784_j < _45637_d._field_nd))) {
					_4778_ch=_45637_d._field_d[_4784_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_4778_ch); };
			}
		_iter_next_1aa964ac8:;
		}
		_iter_end_1aa964ac8:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _1c0048296_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1d949ac2e_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1c005d014_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I64>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1c005d014_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _1c0048928_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _1d949ac2e_floatInfo* _51232_flt) {
	if ((_5126_mant == 0LLU)) {
		_51221_exp=0LL;
	};
	_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - (*(_51232_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	while (((_5126_mant != 0LLU) && ((_5126_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5126_mant=(jule::U64)(_5126_mant << 1LLU);
			(_51221_exp)--;
		}
	_iter_next_1aa9698be:;
	}
	_iter_end_1aa9698be:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U64 _5263_shift = static_cast<jule::U64>(({ jule::I64 __jule_x = _51126_prec; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
		jule::U64 _5273_extra = (({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = _5263_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) & 1152921504606846975LLU);;
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		if (((_5273_extra | (_5126_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5126_mant)++;
		};
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		if (((_5126_mant & 2305843009213693952LLU) != 0LLU)) {
			_5126_mant=(_5126_mant >> 1LLU);
			(_51221_exp)++;
		};
	};
	jule::Str _5406_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5406_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5406_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push((jule::U8)('0' + static_cast<jule::U8>(((_5126_mant >> 60LLU) & 1LLU)))); };
	_5126_mant=(jule::U64)(_5126_mant << 4LLU);
	if (((_51126_prec < 0LL) && (_5126_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5126_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1aa96ece2:;
		}
		_iter_end_1aa96ece2:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I64 _5637_i = 0LL;;
		for (; (_5637_i < _51126_prec); (_5637_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1aa971860:;
		}
		_iter_end_1aa971860:;;
	};
	jule::U8 _5716_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _1c0049bc1_lower(_51137_fmt))) {
		_5716_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	if ((_51221_exp < 0LL)) {
		_5716_ch='-';
		_51221_exp=(-(_51221_exp));
	} else {
		_5716_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	{
		
		if ((_51221_exp < 100LL)) {
			_case_begin_1aa96dbe2:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51221_exp < 1000LL)) {
			_case_begin_1aa974313:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1aa973950:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 1000LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1aa9737b8:;
	};
	return _51113_dst;;
}



inline jule::I64 _1c0048c9c_min(jule::I64 _5968_a, jule::I64 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I64 _1c0049121_max(jule::I64 _6038_a, jule::I64 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _1c0049bc1_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__1d9497d80_ConvError _1c004a144_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1d9497d80_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1aa979a99:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1aa9799cd:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1c0049bc1_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1aa97b54b:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1c0049bc1_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1aa97b639:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1c0049bc1_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1aa97b1e9:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1aa97b183:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1aa97b0a6:;
					};
				};
			}
		}
		else {
			_case_begin_1aa978dea:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1aa97947d:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _906_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1aa980561:;
			{
				_906_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1aa980242:;
			{
				_906_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1aa97a79d:;
			{
				_906_cutoff=(jule::U64)(({ jule::U64 __jule_x = jule::MAX_U64; jule::U64 __jule_y = static_cast<jule::U64>(_5131_base); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) + 1LLU);
			}
		}
		_match_end_1aa9801cb:;
	};
	jule::U64 _1006_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1aa9802a8:;
			{
				_1006_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1aa97ac65:;
			{
				_1006_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1aa9816a5:;
	};
	jule::U64 _1086_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa982651:;
		if (it != expr_end) {
			jule::U8 _1099_c = *it;
			{
				jule::U8 _1107_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _1099_c) && (_1099_c <= '9'))) {
						_case_begin_1aa98391b:;
						{
							_1107_d=(jule::U8)(_1099_c - '0');
						}
					}
					else if ((('a' <= _1c0049bc1_lower(_1099_c)) && (_1c0049bc1_lower(_1099_c) <= 'z'))) {
						_case_begin_1aa983850:;
						{
							_1107_d=(jule::U8)((jule::U8)(_1c0049bc1_lower(_1099_c) - 'a') + 10LLU);
						}
					}
					else if ((_1099_c == '_')) {
						_case_begin_1aa983443:;
						{
							goto _iter_next_1aa982651;
						}
					}
					else {
						_case_begin_1aa9833cc:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1aa983355:;
				};
				if ((_1107_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_1086_n >= _906_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1323_n1 = (jule::U64)(_1086_n + static_cast<jule::U64>(_1107_d));;
				if (((_1323_n1 < _1086_n) || (_1323_n1 > _1006_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n=_1323_n1;
			}
			_iter_next_1aa982651:;
			++it;
			goto _iter_begin_1aa982651;
		}
		_iter_end_1aa982651:;
	};
	__jule_func_result.__jule_result_arg0 = _1086_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1c004a573_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize) {
	jule::U64 _1472_un;
	jule::I64 _1476_err;
	({
		__jule_tuple_u64__jule_tuple__1d9497d80_ConvError __jule_assign_result = _1c004a144_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1472_un = __jule_assign_result.__jule_result_arg0;
		_1476_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1476_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1476_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::U64>{.result=_1472_un};;
}



inline jule::Exceptional<jule::I64> _1c004aa29_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	jule::Bool _1786_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1786_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1876_un;
	jule::I64 _18710_err;
	({
		__jule_tuple_u64__jule_tuple__1d9497d80_ConvError __jule_assign_result = _1c004a144_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1876_un = __jule_assign_result.__jule_result_arg0;
		_18710_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18710_err != static_cast<jule::I64>(0LL)) && (_18710_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18710_err, &__jule_any_type0)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1962_cutoff = static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = static_cast<jule::U64>((_17240_bitSize - 1LL)); ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
	if (((!(_1786_neg)) && (_1876_un >= _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	if ((_1786_neg && (_1876_un > _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	jule::I64 _2036_n = static_cast<jule::I64>(_1876_un);;
	if (_1786_neg) {
		_2036_n=(-(_2036_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2036_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _1c004b6d9_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_1c000908c_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _572_clz = _1d81b09de_LeadingZeros64(_4122_man);;
	_4122_man = ({ jule::U64 __jule_x = _4122_man; jule::U64 __jule_y = static_cast<jule::U64>(_572_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _606_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_572_clz));;
	jule::U64 _636_xHi;
	jule::U64 _6315_xLo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1d81ba91c_Mul64(_4122_man, _1c004c553_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_636_xHi = __jule_assign_result.__jule_result_arg0;
		_6315_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_636_xHi & 511LLU) == 511LLU) && ((jule::U64)(_6315_xLo + _4122_man) < _4122_man))) {
		jule::U64 _673_yHi;
		jule::U64 _678_yLo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1d81ba91c_Mul64(_4122_man, _1c004c553_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_673_yHi = __jule_assign_result.__jule_result_arg0;
			_678_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _687_mergedHi;
		jule::U64 _6817_mergedLo;
		({
			jule::U64 ___jule_assign_arg = _636_xHi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_6315_xLo + _673_yHi);
			_687_mergedHi = ___jule_assign_arg;
			_6817_mergedLo = _1___jule_assign_arg;
		});
		if ((_6817_mergedLo < _6315_xLo)) {
			(_687_mergedHi)++;
		};
		if (((((_687_mergedHi & 511LLU) == 511LLU) && ((jule::U64)(_6817_mergedLo + 1LLU) == 0LLU)) && ((jule::U64)(_678_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _687_mergedHi;
			jule::U64 _1___jule_assign_arg = _6817_mergedLo;
			_636_xHi = ___jule_assign_arg;
			_6315_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _792_msb = (_636_xHi >> 63LLU);;
	jule::U64 _806_retMantissa = ({ jule::U64 __jule_x = _636_xHi; jule::U64 __jule_y = (jule::U64)(_792_msb + 9LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_606_retExp2-=(1LLU ^ _792_msb);
	if ((((_6315_xLo == 0LLU) && ((_636_xHi & 511LLU) == 0LLU)) && ((_806_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_806_retMantissa+=(_806_retMantissa & 1LLU);
	_806_retMantissa=(_806_retMantissa >> 1LLU);
	if (((_806_retMantissa >> 53LLU) > 0LLU)) {
		_806_retMantissa=(_806_retMantissa >> 1LLU);
		_606_retExp2+=1LLU;
	};
	if (((jule::U64)(_606_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1036_retBits = ((jule::U64)(_606_retExp2 << 52LLU) | (_806_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1036_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1c000908c_F64FromBits(_1036_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1c004bb5c_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_1c0008982_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1322_clz = _1d81b09de_LeadingZeros64(_11022_man);;
	_11022_man = ({ jule::U64 __jule_x = _11022_man; jule::U64 __jule_y = static_cast<jule::U64>(_1322_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _1356_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1322_clz));;
	jule::U64 _1386_x_hi;
	jule::U64 _13816_x_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1d81ba91c_Mul64(_11022_man, _1c004c553_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1386_x_hi = __jule_assign_result.__jule_result_arg0;
		_13816_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1386_x_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_13816_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1423_y_hi;
		jule::U64 _1429_y_lo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1d81ba91c_Mul64(_11022_man, _1c004c553_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1423_y_hi = __jule_assign_result.__jule_result_arg0;
			_1429_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _1437_merged_hi;
		jule::U64 _14318_merged_lo;
		({
			jule::U64 ___jule_assign_arg = _1386_x_hi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_13816_x_lo + _1423_y_hi);
			_1437_merged_hi = ___jule_assign_arg;
			_14318_merged_lo = _1___jule_assign_arg;
		});
		if ((_14318_merged_lo < _13816_x_lo)) {
			(_1437_merged_hi)++;
		};
		if (((((_1437_merged_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_14318_merged_lo + 1LLU) == 0LLU)) && ((jule::U64)(_1429_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _1437_merged_hi;
			jule::U64 _1___jule_assign_arg = _14318_merged_lo;
			_1386_x_hi = ___jule_assign_arg;
			_13816_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1542_msb = (_1386_x_hi >> 63LLU);;
	jule::U64 _1556_retMantissa = ({ jule::U64 __jule_x = _1386_x_hi; jule::U64 __jule_y = (jule::U64)(_1542_msb + 38LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_1356_retExp2-=(1LLU ^ _1542_msb);
	if ((((_13816_x_lo == 0LLU) && ((_1386_x_hi & 274877906943LLU) == 0LLU)) && ((_1556_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1556_retMantissa+=(_1556_retMantissa & 1LLU);
	_1556_retMantissa=(_1556_retMantissa >> 1LLU);
	if (((_1556_retMantissa >> 24LLU) > 0LLU)) {
		_1556_retMantissa=(_1556_retMantissa >> 1LLU);
		_1356_retExp2+=1LLU;
	};
	if (((jule::U64)(_1356_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1786_retBits = ((jule::U64)(_1356_retExp2 << 23LLU) | (_1556_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1786_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1c0008982_F32FromBits(static_cast<jule::U32>(_1786_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1c004d93e_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I64 _476_n = _4638_prefix.len();;
	if ((_476_n > _4630_s.len())) {
		_476_n=_4630_s.len();
	};
	jule::I64 _516_i = 0LL;;
	for (; (_516_i < _476_n); (_516_i)++) {
		{
			jule::U8 _537_c = _4630_s[_516_i];;
			if ((('A' <= _537_c) && (_537_c <= 'Z'))) {
				_537_c+=32LL;
			};
			if ((_537_c != _4638_prefix[_516_i])) {
				return _516_i;;
			};
		}
	_iter_next_1aa9a75dd:;
	}
	_iter_end_1aa9a75dd:;;
	return _476_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1c004dc4c_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _736_sign = 1LL;;
	jule::I64 _746_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1aa9ab070:;
			{
				if ((_6912_s[0LL] == '-')) {
					_736_sign=-1LL;
				};
				_746_nsign=1LL;
				{
					jule::Str* _838_sp = (&(_6912_s));;
					((*(_838_sp))).mut_slice(1LL);;
				};
				goto _case_begin_1aa9ab0e7;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1aa9ab0e7:;
			{
				jule::I64 _887_caseN = _1c004d93e_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _887_caseN) && (_887_caseN < 8LL))) {
					_887_caseN=3LL;
				};
				if (((_887_caseN == 3LL) || (_887_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _1c0012194_Inf(_736_sign);
					__jule_func_result.__jule_result_arg1 = (_746_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1aa9ab15d:;
			{
				if ((_1c004d93e_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _1c0011abc_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1aa9aaec6:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1c004e016_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1aa9b1372:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1aa9b176d:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1aa9b130b:;
	};
	jule::U64 _1226_base = static_cast<jule::U64>(10LLU);;
	jule::I64 _1236_maxMantDigits = 19LL;;
	jule::U8 _1246_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1c0049bc1_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1226_base=16LLU;
		_1236_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1246_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1326_sawdot = false;;
	jule::Bool _1336_sawdigits = false;;
	jule::I64 _1346_nd = 0LL;;
	jule::I64 _1356_ndMant = 0LL;;
	jule::I64 _1366_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1383_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1383_c == '_')) {
					_case_begin_1aa9b671d:;
					{
						goto _iter_next_1aa9b5ba1;
					}
				}
				else if ((_1383_c == '.')) {
					_case_begin_1aa9b67b7:;
					{
						if (_1326_sawdot) {
							goto _julec_label_1aa9ba3d1;
						};
						_1326_sawdot=true;
						_1366_dp=_1346_nd;
						goto _iter_next_1aa9b5ba1;
					}
				}
				else if ((('0' <= _1383_c) && (_1383_c <= '9'))) {
					_case_begin_1aa9b682d:;
					{
						_1336_sawdigits=true;
						if (((_1383_c == '0') && (_1346_nd == 0LL))) {
							(_1366_dp)--;
							goto _iter_next_1aa9b5ba1;
						};
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1226_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)(_1383_c - '0'));
							(_1356_ndMant)++;
						} else if ((_1383_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1aa9b5ba1;
					}
				}
				else if ((((_1226_base == 16LLU) && ('a' <= _1c0049bc1_lower(_1383_c))) && (_1c0049bc1_lower(_1383_c) <= 'f'))) {
					_case_begin_1aa9b6894:;
					{
						_1336_sawdigits=true;
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)((jule::U8)(_1c0049bc1_lower(_1383_c) - 'a') + 10LLU));
							(_1356_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1aa9b5ba1;
					}
				}
				_match_end_1aa9b6630:;
			};
			goto _iter_end_1aa9b5ba1;
		}
	_iter_next_1aa9b5ba1:;
	}
	_iter_end_1aa9b5ba1:;;
	_julec_label_1aa9ba3d1:;
	if ((!(_1336_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1326_sawdot))) {
		_1366_dp=_1346_nd;
	};
	if ((_1226_base == 16LLU)) {
		_1366_dp*=4LL;
		_1356_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1c0049bc1_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1246_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _2017_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_2017_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _2117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1aa9bda88;
				};
				if ((_2117_e < 10000LL)) {
					_2117_e=(((_2117_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_1aa9bda88:;
		}
		_iter_end_1aa9bda88:;;
		_1366_dp+=(_2117_e * _2017_esign);
	} else if ((_1226_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1366_dp - _1356_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1c0050a62_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _48616_mantissa; jule::U64 __jule_y = _1c0044b66_f64info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1aa9c6ab3:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1aa9c6b29:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1c004ee29_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1c004ee29_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1aa9c6b90:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F64 __jule_x = __jule_func_result.__jule_result_arg0; jule::F64 __jule_y = _1c004ee29_f64pow10[(-(_48635_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1aa9c69c5:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1c0050e91_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _52016_mantissa; jule::U64 __jule_y = _1c0044869_f32info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1aa9cad2b:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1aa9cad92:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1c0050259_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1c0050259_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1aa9cae08:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F32 __jule_x = __jule_func_result.__jule_result_arg0; jule::F32 __jule_y = _1c0050259_f32pow10[(-(_52035_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F32)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1aa9cac3d:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1d9497d80_ConvError _1c0051535_atofHex(_1d949ac2e_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1d9497d80_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5572_maxExp = ((static_cast<jule::I64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5582_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && (({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (jule::U64)((*(_55613_flt))._field_mantbits + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU))) {
		{
			_55633_mantissa=(jule::U64)(_55633_mantissa << 1LLU);
			(_55652_exp)--;
		}
	_iter_next_1aa9ce6d1:;
	}
	_iter_end_1aa9ce6d1:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while ((({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (jule::U64)((jule::U64)(1LLU + (*(_55613_flt))._field_mantbits) + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1aa9d19ad:;
	}
	_iter_end_1aa9d19ad:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5582_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1aa9d1d87:;
	}
	_iter_end_1aa9d1d87:;;
	jule::U64 _5886_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa=(_55633_mantissa >> 2LLU);
	_5886_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5886_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(1LLU + (*(_55613_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
			_55633_mantissa=(_55633_mantissa >> 1LLU);
			(_55652_exp)++;
		};
	};
	if ((({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _6036_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5572_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
		_55652_exp=(_5572_maxExp + 1LL);
		_6036_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _6106_bits = (_55633_mantissa & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_6106_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))); jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if (_55662_neg) {
		_6106_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	if (_1d949ac2e_floatInfo_eq(&(*(_55613_flt)), _1c0044869_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1c0008982_F32FromBits(static_cast<jule::U32>(_6106_bits)));
		__jule_func_result.__jule_result_arg1 = _6036_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1c000908c_F64FromBits(_6106_bits);
	__jule_func_result.__jule_result_arg1 = _6036_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1d9497d80_ConvError _1c005190e_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1d9497d80_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6233_val;
		jule::I64 _6238__n;
		jule::Bool _62312_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c004dc4c_special(_62111_s);
			_6233_val = __jule_assign_result.__jule_result_arg0;
			_6238__n = __jule_assign_result.__jule_result_arg1;
			_62312_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62312_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6233_val);
			__jule_func_result.__jule_result_arg1 = _6238__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6292_mantissa;
	jule::I64 _62912_exp;
	jule::Bool _62917_neg;
	jule::Bool _62922_trunc;
	jule::Bool _62929_hex;
	jule::I64 _62934__n;
	jule::Bool _62942_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c004e016_readFloat(&(_62111_s));
		_6292_mantissa = __jule_assign_result.__jule_result_arg0;
		_62912_exp = __jule_assign_result.__jule_result_arg1;
		_62917_neg = __jule_assign_result.__jule_result_arg2;
		_62922_trunc = __jule_assign_result.__jule_result_arg3;
		_62929_hex = __jule_assign_result.__jule_result_arg4;
		_62934__n = __jule_assign_result.__jule_result_arg5;
		_62942_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62934__n;
	if ((!(_62942_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62929_hex) {
		jule::F64 _6367_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1d9497d80_ConvError __jule_assign_result = _1c0051535_atofHex(&(_1c0044869_f32info), _6292_mantissa, _62912_exp, _62917_neg, _62922_trunc);
			_6367_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6367_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62922_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1c0050e91_atof32exact(_6292_mantissa, _62912_exp, _62917_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62942_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1c004bb5c_eiselLemire32(_6292_mantissa, _62912_exp, _62917_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62942_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62942_ok) {
			if ((!(_62922_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _6588_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1c004bb5c_eiselLemire32((jule::U64)(_6292_mantissa + 1LLU), _62912_exp, _62917_neg);
				_6588_fUp = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62942_ok && (__jule_func_result.__jule_result_arg0 == _6588_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1c0057c67_decimal _6676_d = _1c0057c67_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1c004e6cb_set(&_6676_d, _1d7e4d705_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6712_b;
	jule::Bool _6715_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1c004ea1c_floatBits(&_6676_d, &(_1c0044869_f32info));
		_6712_b = __jule_assign_result.__jule_result_arg0;
		_6715_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1c0008982_F32FromBits(static_cast<jule::U32>(_6712_b));
	if (_6715_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1d9497d80_ConvError _1c0051b51_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1d9497d80_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6813_val;
		jule::I64 _6818__n;
		jule::Bool _68112_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c004dc4c_special(_67911_s);
			_6813_val = __jule_assign_result.__jule_result_arg0;
			_6818__n = __jule_assign_result.__jule_result_arg1;
			_68112_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68112_ok) {
			__jule_func_result.__jule_result_arg0 = _6813_val;
			__jule_func_result.__jule_result_arg1 = _6818__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6872_mantissa;
	jule::I64 _68712_exp;
	jule::Bool _68717_neg;
	jule::Bool _68722_trunc;
	jule::Bool _68729_hex;
	jule::I64 _68734__n;
	jule::Bool _68742_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c004e016_readFloat(&(_67911_s));
		_6872_mantissa = __jule_assign_result.__jule_result_arg0;
		_68712_exp = __jule_assign_result.__jule_result_arg1;
		_68717_neg = __jule_assign_result.__jule_result_arg2;
		_68722_trunc = __jule_assign_result.__jule_result_arg3;
		_68729_hex = __jule_assign_result.__jule_result_arg4;
		_68734__n = __jule_assign_result.__jule_result_arg5;
		_68742_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68734__n;
	if ((!(_68742_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68729_hex) {
		({
			__jule_tuple_f64__jule_tuple__1d9497d80_ConvError __jule_assign_result = _1c0051535_atofHex(&(_1c0044b66_f64info), _6872_mantissa, _68712_exp, _68717_neg, _68722_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68722_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1c0050a62_atof64exact(_6872_mantissa, _68712_exp, _68717_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68742_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1c004b6d9_eiselLemire64(_6872_mantissa, _68712_exp, _68717_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68742_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68742_ok) {
			if ((!(_68722_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _7158_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1c004b6d9_eiselLemire64((jule::U64)(_6872_mantissa + 1LLU), _68712_exp, _68717_neg);
				_7158_fUp = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68742_ok && (__jule_func_result.__jule_result_arg0 == _7158_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1c0057c67_decimal _7246_d = _1c0057c67_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1c004e6cb_set(&_7246_d, _1d7e4d705_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7282_b;
	jule::Bool _7285_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1c004ea1c_floatBits(&_7246_d, &(_1c0044b66_f64info));
		_7282_b = __jule_assign_result.__jule_result_arg0;
		_7285_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1c000908c_F64FromBits(_7282_b);
	if (_7285_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1d9497d80_ConvError _1c0051ec5_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1d9497d80_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7383_f;
		jule::I64 _7386_n;
		jule::I64 _7389_err;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1d9497d80_ConvError __jule_assign_result = _1c005190e_atof32((*(_73622_s)));
			_7383_f = __jule_assign_result.__jule_result_arg0;
			_7386_n = __jule_assign_result.__jule_result_arg1;
			_7389_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7383_f);
		__jule_func_result.__jule_result_arg1 = _7386_n;
		__jule_func_result.__jule_result_arg2 = _7389_err;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1c0051b51_atof64((*(_73622_s))));
return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1c0052349_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize) {
	jule::F64 _7692_f;
	jule::I64 _7695_n;
	jule::I64 _7698_err;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1d9497d80_ConvError __jule_assign_result = _1c0051ec5_parseFloatPrefix(&(_76815_s), _76823_bitSize);
		_7692_f = __jule_assign_result.__jule_result_arg0;
		_7695_n = __jule_assign_result.__jule_result_arg1;
		_7698_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7695_n != _76815_s.len()) && ((_7698_err == static_cast<jule::I64>(0LL)) || (_7698_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	if ((_7698_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_7698_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::F64>{.result=_7692_f};;
}



inline void _1c0052bc9_ryuFtoaFixed32(_1c00450ea_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		__jule_panic_s(jule::Str::lit("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:3"));;
	};
	if ((_4966_prec > 9LL)) {
		__jule_panic_s(jule::Str::lit("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:3"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _626_e2 = _4956_exp;;
	jule::I64 _632_b = _1d81b80ac_Len32(_4945_mant);;
	if ((_632_b < 25LL)) {
		_4945_mant = ({ jule::U32 __jule_x = _4945_mant; jule::U64 __jule_y = static_cast<jule::U64>((25LL - _632_b)); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
		_626_e2+=(static_cast<jule::I64>(_632_b) - 25LL);
	};
	jule::I64 _742_q = (((-(_1c0054219_mulByLog2Log10((_626_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _796_exact = ((_742_q <= 27LL) && (_742_q >= 0LL));;
	jule::U32 _816_di;
	jule::I64 _8110_dexp2;
	jule::Bool _8121_d0;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c0055b11_mult64bitPow10(_4945_mant, _626_e2, _742_q);
		_816_di = __jule_assign_result.__jule_result_arg0;
		_8110_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8121_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8110_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:3"));;
	};
	if ((((_742_q < 0LL) && (_742_q >= -10LL)) && _1c00563b4_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_742_q))))) {
		_796_exact=true;
		_8121_d0=true;
	};
	jule::U64 _942_extra = static_cast<jule::U64>((-(_8110_dexp2)));;
	jule::U32 _952_extraMask = static_cast<jule::U32>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _942_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U32 _976_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = ({ jule::U32 __jule_x = _816_di; jule::U64 __jule_y = _942_extra; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });
		jule::U32 _1___jule_assign_arg = (_816_di & _952_extraMask);
		_816_di = ___jule_assign_arg;
		_976_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _996_roundUp = false;;
	if (_796_exact) {
		_996_roundUp=(((_976_dfrac > ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) || ((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && (!(_8121_d0)))) || (((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && _8121_d0) && ((_816_di & 1LLU) == 1LLU)));
	} else {
		_996_roundUp=(({ jule::U32 __jule_x = _976_dfrac; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_976_dfrac != 0LLU)) {
		_8121_d0=false;
	};
	_1c00539aa_formatDecimal(_4924_d, static_cast<jule::U64>(_816_di), (!(_8121_d0)), _996_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_742_q;
}



inline void _1c005316e_ryuFtoaFixed64(_1c00450ea_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		__jule_panic_s(jule::Str::lit("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:3"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _1316_e2 = _12156_exp;;
	jule::I64 _1322_b = _1d81b8376_Len64(_12145_mant);;
	if ((_1322_b < 55LL)) {
		_12145_mant=({ jule::U64 __jule_x = _12145_mant; jule::U64 __jule_y = static_cast<jule::U64>((55LL - _1322_b)); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		_1316_e2+=(static_cast<jule::I64>(_1322_b) - 55LL);
	};
	jule::I64 _1462_q = (((-(_1c0054219_mulByLog2Log10((_1316_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1516_exact = ((_1462_q <= 55LL) && (_1462_q >= 0LL));;
	jule::U64 _1536_di;
	jule::I64 _15310_dexp2;
	jule::Bool _15321_d0;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c0056040_mult128bitPow10(_12145_mant, _1316_e2, _1462_q);
		_1536_di = __jule_assign_result.__jule_result_arg0;
		_15310_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15321_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15310_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:3"));;
	};
	if ((((_1462_q < 0LL) && (_1462_q >= -22LL)) && _1c00563b4_divisibleByPow5(_12145_mant, (-(_1462_q))))) {
		_1516_exact=true;
		_15321_d0=true;
	};
	jule::U64 _1662_extra = static_cast<jule::U64>((-(_15310_dexp2)));;
	jule::U64 _1672_extraMask = static_cast<jule::U64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _1662_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _1696_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _1536_di; jule::U64 __jule_y = _1662_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_1536_di & _1672_extraMask);
		_1536_di = ___jule_assign_arg;
		_1696_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1716_roundUp = false;;
	if (_1516_exact) {
		_1716_roundUp=(((_1696_dfrac > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && (!(_15321_d0)))) || (((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && _15321_d0) && ((_1536_di & 1LLU) == 1LLU)));
	} else {
		_1716_roundUp=(({ jule::U64 __jule_x = _1696_dfrac; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_1696_dfrac != 0LLU)) {
		_15321_d0=false;
	};
	_1c00539aa_formatDecimal(_12124_d, _1536_di, (!(_15321_d0)), _1716_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1462_q;
}



inline void _1c00539aa_formatDecimal(_1c00450ea_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2012_max = _1c00534b0_u64pow10[_20088_prec];;
	jule::I64 _2026_trimmed = 0LL;;
	while ((_20044_m >= _2012_max)) {
		{
			jule::U64 _2043_a;
			jule::U64 _2046_b;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2043_a = ___jule_assign_arg;
				_2046_b = _1___jule_assign_arg;
			});
			_20044_m=_2043_a;
			(_2026_trimmed)++;
			if ((_2046_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_2046_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_2046_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1aaa16ce0:;
	}
	_iter_end_1aaa16ce0:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2012_max)) {
		_20044_m=(_20044_m / 10LLU);
		(_2026_trimmed)++;
	};
	jule::U64 _2296_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(_20088_prec);
	jule::U64 _2316_v = _20044_m;;
	while ((_2316_v >= 100LLU)) {
		{
			jule::U64 _2337_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _2347_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2316_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) % 100LL));
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2316_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2316_v % 100LL);
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			};
			_2296_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((jule::U64)(_2296_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)((jule::U64)(2LL * _2347_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(2LL * _2347_v2)));
			_2316_v=_2337_v1;
		}
	_iter_next_1aaa19e9c:;
	}
	_iter_end_1aaa19e9c:;;
	if ((_2316_v > 0LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)((jule::U64)(2LL * _2316_v) + 1LLU)));
	};
	if ((_2316_v >= 10LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(2LL * _2316_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2026_trimmed)++;
		}
	_iter_next_1aaa20964:;
	}
	_iter_end_1aaa20964:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2026_trimmed);
}



inline void _1c0053e83_ryuFtoaShortest(_1c00450ea_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1d949ac2e_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1d81b25d4_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant = ({ jule::U64 __jule_x = _26146_mant; jule::U64 __jule_y = static_cast<jule::U64>((-(_26157_exp))); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		_1c0055061_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2732_ml;
	jule::U64 _2736_mc;
	jule::U64 _27310_mu;
	jule::I64 _27318_e2;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1c0054912_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2732_ml = __jule_assign_result.__jule_result_arg0;
		_2736_mc = __jule_assign_result.__jule_result_arg1;
		_27310_mu = __jule_assign_result.__jule_result_arg2;
		_27318_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27318_e2 == 0LL)) {
		_1c0055061_ryuDigits(_26125_d, _2732_ml, _2736_mc, _27310_mu, true, false);
		return;;
	};
	jule::I64 _2792_q = (_1c0054219_mulByLog2Log10((-(_27318_e2))) + 1LL);;
	jule::U64 _2836_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2846_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2856_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2866_dl0 = false;;
	jule::Bool _2876_dc0 = false;;
	jule::Bool _2886_du0 = false;;
	if (_1d949ac2e_floatInfo_eq(&(*(_26168_flt)), _1c0044869_f32info)) {
		jule::U32 _2907_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2917_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2927_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c0055b11_mult64bitPow10(static_cast<jule::U32>(_2732_ml), _27318_e2, _2792_q);
			_2907_dl32 = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c0055b11_mult64bitPow10(static_cast<jule::U32>(_2736_mc), _27318_e2, _2792_q);
			_2917_dc32 = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c0055b11_mult64bitPow10(static_cast<jule::U32>(_27310_mu), _27318_e2, _2792_q);
			_2927_du32 = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_2907_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_2917_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_2927_du32);
			_2836_dl = ___jule_assign_arg;
			_2846_dc = _1___jule_assign_arg;
			_2856_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c0056040_mult128bitPow10(_2732_ml, _27318_e2, _2792_q);
			_2836_dl = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c0056040_mult128bitPow10(_2736_mc, _27318_e2, _2792_q);
			_2846_dc = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c0056040_mult128bitPow10(_27310_mu, _27318_e2, _2792_q);
			_2856_du = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27318_e2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:3"));;
	};
	if ((_2792_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2866_dl0 = ___jule_assign_arg;
			_2876_dc0 = _1___jule_assign_arg;
			_2886_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2792_q < 0LL) && (_2792_q >= -24LL))) {
		if (_1c00563b4_divisibleByPow5(_2732_ml, (-(_2792_q)))) {
			_2866_dl0=true;
		};
		if (_1c00563b4_divisibleByPow5(_2736_mc, (-(_2792_q)))) {
			_2876_dc0=true;
		};
		if (_1c00563b4_divisibleByPow5(_27310_mu, (-(_2792_q)))) {
			_2886_du0=true;
		};
	};
	jule::U64 _3252_extra = static_cast<jule::U64>((-(_27318_e2)));;
	jule::U64 _3262_extraMask = static_cast<jule::U64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _3252_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _3286_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2836_dl; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2836_dl & _3262_extraMask);
		_2836_dl = ___jule_assign_arg;
		_3286_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3306_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2846_dc; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2846_dc & _3262_extraMask);
		_2846_dc = ___jule_assign_arg;
		_3306_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3326_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2856_du; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2856_du & _3262_extraMask);
		_2856_du = ___jule_assign_arg;
		_3326_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3386_uok = ((!(_2886_du0)) || (_3326_fracu > 0LLU));;
	if ((_2886_du0 && (_3326_fracu == 0LLU))) {
		_3386_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3386_uok))) {
		(_2856_du)--;
	};
	jule::Bool _3476_cup = false;;
	if (_2876_dc0) {
		_3476_cup=((_3306_fracc > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_3306_fracc == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && ((_2846_dc & 1LLU) == 1LLU)));
	} else {
		_3476_cup=(({ jule::U64 __jule_x = _3306_fracc; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	jule::Bool _3612_lok = ((_2866_dl0 && (_3286_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3612_lok))) {
		(_2836_dl)++;
	};
	jule::Bool _3662_c0 = (_2876_dc0 && (_3306_fracc == 0LLU));;
	_1c0055061_ryuDigits(_26125_d, _2836_dl, _2846_dc, _2856_du, _3662_c0, _3476_cup);
	(*(_26125_d))._field_dp-=_2792_q;
}



inline jule::I64 _1c0054219_mulByLog2Log10(jule::I64 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I64 _1c00544d3_mulByLog10Log2(jule::I64 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1c0054912_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1d949ac2e_floatInfo* _3963_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_3963_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_39529_exp == (((*(_3963_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3963_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _1c0055061_ryuDigits(_1c00450ea_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4106_lhi;
	jule::U32 _41011_llo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1c005667d_divmod1e9(_40936_lower);
		_4106_lhi = __jule_assign_result.__jule_result_arg0;
		_41011_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4112_chi;
	jule::U32 _4117_clo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1c005667d_divmod1e9(_40948_central);
		_4112_chi = __jule_assign_result.__jule_result_arg0;
		_4117_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4122_uhi;
	jule::U32 _4127_ulo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1c005667d_divmod1e9(_40962_upper);
		_4122_uhi = __jule_assign_result.__jule_result_arg0;
		_4127_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4122_uhi == 0LLU)) {
		_1c00556d2_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4106_lhi < _4122_uhi)) {
		if ((_41011_llo != 0LLU)) {
			(_4106_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_4117_clo == 0LLU));
		_40992_cup=((_4117_clo > 500000000LL) || ((_4117_clo == 500000000LL) && _40992_cup));
		_1c00556d2_ryuDigits32(_40919_d, _4106_lhi, _4112_chi, _4122_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _4287_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _4297_v = _4112_chi;;
		while ((_4297_v > 0LLU)) {
			{
				jule::U32 _4314_v1;
				jule::U32 _4318_v2;
				({
					jule::U32 ___jule_assign_arg = (_4297_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_4297_v % 10LL);
					_4314_v1 = ___jule_assign_arg;
					_4318_v2 = _1___jule_assign_arg;
				});
				_4297_v=_4314_v1;
				(_4287_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_4287_n)]=static_cast<jule::U8>((jule::U32)(_4318_v2 + '0'));
			}
		_iter_next_1aaa3d7a6:;
		}
		_iter_end_1aaa3d7a6:;;
		((*(_40919_d))._field_d).mut_slice(static_cast<jule::I64>(_4287_n));;
		(*(_40919_d))._field_nd=static_cast<jule::I64>((jule::U64)(9LL - _4287_n));
		_1c00556d2_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1aaa3e367:;
	}
	_iter_end_1aaa3e367:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			((*(_40919_d))._field_d).mut_slice(1LL);;
		}
	_iter_next_1aaa4118d:;
	}
	_iter_end_1aaa4118d:;;
}



inline void _1c00556d2_ryuDigits32(_1c00450ea_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex) {
	if ((_4556_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45551_endindex + 1LL);
		return;;
	};
	jule::I64 _4606_trimmed = 0LL;;
	jule::I64 _4636_cNextDigit = 0LL;;
	while ((_4556_upper > 0LLU)) {
		{
			jule::U32 _4703_l = ((jule::U32)(_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _4717_c;
			jule::U32 _47114_cdigit;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_4717_c = ___jule_assign_arg;
				_47114_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4723_u = (_4556_upper / 10LLU);;
			if ((_4703_l > _4723_u)) {
				goto _iter_end_1aaa43a31;
			};
			if (((_4703_l == (jule::U32)(_4717_c + 1LLU)) && (_4717_c < _4723_u))) {
				(_4717_c)++;
				_47114_cdigit=0LLU;
				_45536_cup=false;
			};
			(_4606_trimmed)++;
			_45522_c0=(_45522_c0 && (_4636_cNextDigit == 0LL));
			_4636_cNextDigit=static_cast<jule::I64>(_47114_cdigit);
			({
				jule::U32 ___jule_assign_arg = _4703_l;
				jule::U32 _1___jule_assign_arg = _4717_c;
				jule::U32 _2___jule_assign_arg = _4723_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4556_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1aaa43a31:;
	}
	_iter_end_1aaa43a31:;;
	if ((_4606_trimmed > 0LL)) {
		_45536_cup=(((_4636_cNextDigit > 5LL) || ((_4636_cNextDigit == 5LL) && (!(_45522_c0)))) || (((_4636_cNextDigit == 5LL) && _45522_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4556_upper) && _45536_cup)) {
		(_45458_central)++;
	};
	_45551_endindex-=_4606_trimmed;
	jule::U32 _5096_v = _45458_central;;
	jule::I64 _5106_n = _45551_endindex;;
	while ((_5106_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5123_v1;
			jule::U32 _5127_v2;
			({
				jule::U32 ___jule_assign_arg = (_5096_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5096_v % 100LL);
				_5123_v1 = ___jule_assign_arg;
				_5127_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5106_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U32)((jule::U32)(2LL * _5127_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5106_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U32)(2LL * _5127_v2)));
			_5106_n-=2LL;
			_5096_v=_5123_v1;
		}
	_iter_next_1aaa49ae2:;
	}
	_iter_end_1aaa49ae2:;;
	if ((_5106_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5106_n]=static_cast<jule::U8>((jule::U32)(_5096_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45551_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4606_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1c0055b11_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U32)(_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		__jule_panic_s(jule::Str::lit("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:3"));;
	};
	jule::U64 _5436_pow = _1c004c553_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5436_pow+=1LLU;
	};
	jule::U64 _5482_hi;
	jule::U64 _5486_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1d81ba91c_Mul64(static_cast<jule::U64>(_53419_m), _5436_pow);
		_5482_hi = __jule_assign_result.__jule_result_arg0;
		_5486_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1c00544d3_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((jule::U64)(_5482_hi << 7LLU) | (_5486_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((jule::U64)(_5486_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1c0056040_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U64)(_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		__jule_panic_s(jule::Str::lit("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:3"));;
	};
	jule::Array<jule::U64,2> _5716_pow = _1c004c553_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5716_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1c00544d3_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5792_l1;
	jule::U64 _5796_l0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1d81ba91c_Mul64(_56220_m, _5716_pow[0LL]);
		_5792_l1 = __jule_assign_result.__jule_result_arg0;
		_5796_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5806_h1;
	jule::U64 _58010_h0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1d81ba91c_Mul64(_56220_m, _5716_pow[1LL]);
		_5806_h1 = __jule_assign_result.__jule_result_arg0;
		_58010_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5812_mid;
	jule::U64 _5817_carry;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1d81b9113_Add64(_5792_l1, _58010_h0, 0LLU);
		_5812_mid = __jule_assign_result.__jule_result_arg0;
		_5817_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5806_h1+=_5817_carry;
	__jule_func_result.__jule_result_arg0 = ((jule::U64)(_5806_h1 << 9LLU) | (_5812_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((jule::U64)(_5812_mid << 9LLU) == 0LLU) && (_5796_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1c00563b4_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _5906_i = 0LL;;
	for (; (_5906_i < _58632_k); (_5906_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m=(_58624_m / 5LLU);
		}
	_iter_next_1aaa57b66:;
	}
	_iter_end_1aaa57b66:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1c005667d_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_60214_x / 1000000000LL));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((_60214_x % 1000000000LL));
		return __jule_func_result;;
	};
}



inline void _1c00595b5_trim(_1c0057c67_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1aaa5b0dc:;
	}
	_iter_end_1aaa5b0dc:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1c00598a1_rightShift(_1c0057c67_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _2856_r = 0LL;;
	jule::I64 _2866_w = 0LL;;
	jule::U64 _2896_n = static_cast<jule::U64>(0LLU);;
	for (; (({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU); (_2856_r)++) {
		{
			if ((_2856_r >= (*(_28420_a))._field_nd)) {
				if ((_2896_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while ((({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
					{
						_2896_n=(jule::U64)(_2896_n * 10LLU);
						(_2856_r)++;
					}
				_iter_next_1aaa5e2cc:;
				}
				_iter_end_1aaa5e2cc:;;
				goto _iter_end_1aaa5cbe3;
			};
			jule::U64 _3033_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			_2896_n=(jule::U64)((jule::U64)((jule::U64)(_2896_n * 10LLU) + _3033_c) - '0');
		}
	_iter_next_1aaa5cbe3:;
	}
	_iter_end_1aaa5cbe3:;;
	(*(_28420_a))._field_dp-=(_2856_r - 1LL);
	jule::U64 _3082_mask = (jule::U64)(static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _28432_k; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) - 1LLU);;
	for (; (_2856_r < (*(_28420_a))._field_nd); (_2856_r)++) {
		{
			jule::U64 _3123_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			jule::U64 _3133_dig = ({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U64)(_3133_dig + '0'));
			(_2866_w)++;
			_2896_n=(jule::U64)((jule::U64)((jule::U64)(_2896_n * 10LLU) + _3123_c) - '0');
		}
	_iter_next_1aaa606c9:;
	}
	_iter_end_1aaa606c9:;;
	while ((_2896_n > 0LLU)) {
		{
			jule::U64 _3223_dig = ({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			if ((_2866_w < 800LL)) {
				(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U64)(_3223_dig + '0'));
				(_2866_w)++;
			} else if ((_3223_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2896_n=(jule::U64)(_2896_n * 10LLU);
		}
	_iter_next_1aaa62a72:;
	}
	_iter_end_1aaa62a72:;;
	(*(_28420_a))._field_nd=_2866_w;
	_1c00595b5_trim(_28420_a);
}



inline jule::Bool _1c0059d57_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _3396_i = 0LL;;
	for (; (_3396_i < (*(_33846_s)).len()); (_3396_i)++) {
		{
			if ((_3396_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3396_i] != (*(_33846_s))[_3396_i])) {
				return (_33821_b[_3396_i] < (*(_33846_s))[_3396_i]);;
			};
		}
	_iter_next_1aaa657ab:;
	}
	_iter_end_1aaa657ab:;;
	return false;;
}



inline void _1c005a110_leftShift(_1c0057c67_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _3536_delta = _1c005767e_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_1c0059d57_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &((*((&(_1c005767e_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))))))) {
		(_3536_delta)--;
	};
	jule::I64 _3586_r = (*(_35219_a))._field_nd;;
	jule::I64 _3596_w = ((*(_35219_a))._field_nd + _3536_delta);;
	jule::U64 _3626_n = static_cast<jule::U64>(0LLU);;
	(_3586_r)--;
	for (; (_3586_r >= 0LL); (_3586_r)--) {
		{
			_3626_n+=({ jule::U64 __jule_x = (jule::U64)(static_cast<jule::U64>((*(_35219_a))._field_d[_3586_r]) - '0'); jule::U64 __jule_y = _35231_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
			jule::U64 _3663_quo = (_3626_n / 10LLU);;
			jule::U64 _3673_rem = (jule::U64)(_3626_n - (jule::U64)(10LLU * _3663_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U64)(_3673_rem + '0'));
			} else if ((_3673_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3663_quo;
		}
	_iter_next_1aaa68ccb:;
	}
	_iter_end_1aaa68ccb:;;
	while ((_3626_n > 0LLU)) {
		{
			jule::U64 _3793_quo = (_3626_n / 10LLU);;
			jule::U64 _3803_rem = (jule::U64)(_3626_n - (jule::U64)(10LLU * _3793_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U64)(_3803_rem + '0'));
			} else if ((_3803_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3793_quo;
		}
	_iter_next_1aaa6b361:;
	}
	_iter_end_1aaa6b361:;;
	(*(_35219_a))._field_nd+=_3536_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3536_delta;
	_1c00595b5_trim(_35219_a);
}



inline jule::Bool _1c005a484_shouldRoundUp(_1c0057c67_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && (((jule::U8)((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1c005bc16_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _1c005c6d9_small(static_cast<jule::I64>(_6112_i));;
	};
	jule::Str _655_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1c005d014_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_655_s = __jule_assign_result.__jule_result_arg1;
	});
	return _655_s;;
}



inline jule::Str _1c005c0ce_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _1c005c6d9_small(static_cast<jule::I64>(_7211_i));;
	};
	jule::Str _765_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1c005d014_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_765_s = __jule_assign_result.__jule_result_arg1;
	});
	return _765_s;;
}



inline jule::Str _1c005c398_Itoa(jule::I64 _819_i) {
	return _1c005c0ce_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _1c005c6d9_small(jule::I64 _8610_i) {
	if ((_8610_i < 10LL)) {
		return __jule_strFromByte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _906_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3LL, 3LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_906_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_906_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _1d7e4dc55_StrFromBytes(_906_buf.slice(0LL, 2LL));;
}



inline jule::Bool _1c005c970_isPowerOfTwo(jule::I64 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1c005d014_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		__jule_panic_s(jule::Str::lit("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:107:3"));;
	};
	jule::Slice<jule::U8> _1116_a = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(65LL, 65LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1126_i = _1116_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1aaaa271b:;
			{
				;
				jule::U64 _1547_us = static_cast<jule::U64>(_10533_u);;
				while ((_1547_us >= 100LLU)) {
					{
						jule::U64 _1564_is = ({ jule::U64 __jule_x = (_1547_us % 100LL); jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });;
						_1547_us=(_1547_us / 100LLU);
						_1126_i-=2LL;
						_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(_1564_is + 1LLU)));
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1564_is));
					}
				_iter_next_1aaaa42cd:;
				}
				_iter_end_1aaaa42cd:;;
				jule::U64 _1643_is = ({ jule::U64 __jule_x = _1547_us; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(_1643_is + 1LLU)));
				if ((_1547_us >= 10LLU)) {
					(_1126_i)--;
					_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1643_is));
				};
			}
		}
		else if (_1c005c970_isPowerOfTwo(_10541_base)) {
			_case_begin_1aaaa2e25:;
			{
				jule::U64 _1793_shift = (static_cast<jule::U64>(_1d81b1935_TrailingZeros(static_cast<jule::U64>(_10541_base))) & 7LLU);;
				jule::U64 _1803_b = static_cast<jule::U64>(_10541_base);;
				jule::U64 _1813_m = (jule::U64)(static_cast<jule::U64>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1803_b)) {
					{
						(_1126_i)--;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>((static_cast<jule::U64>(_10533_u) & _1813_m)));
						_10533_u = ({ jule::U64 __jule_x = _10533_u; jule::U64 __jule_y = _1793_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
					}
				_iter_next_1aaaabda7:;
				}
				_iter_end_1aaaabda7:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		else {
			_case_begin_1aaaa1781:;
			{
				jule::U64 _1923_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1923_b)) {
					{
						(_1126_i)--;
						jule::U64 _1984_q = ({ jule::U64 __jule_x = _10533_u; jule::U64 __jule_y = _1923_b; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); });;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>((jule::U64)(_10533_u - (jule::U64)(_1984_q * _1923_b)))));
						_10533_u=_1984_q;
					}
				_iter_next_1aaaa24eb:;
				}
				_iter_end_1aaaa24eb:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		_match_end_1aaaa1a6c:;
	};
	if (_10552_neg) {
		(_1126_i)--;
		_1116_a[_1126_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1116_a.slice(_1126_i));
		return __jule_func_result;;
	};
	jule::I64 _2172_n = jule::copy(_1116_a, _1116_a.slice(_1126_i));;
	__jule_func_result.__jule_result_arg1=_1d7e4dc55_StrFromBytes(_1116_a.slice(0LL, _2172_n));
	return __jule_func_result;;
}



inline jule::Str _1c005e510_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1aaac2b9d:;
			{
				return _1c005da2b_SysInt;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1aaac65ca:;
			{
				return _1c005dcd4_SysUint;;
			}
		}
		else {
			_case_begin_1aaac36a4:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1aaac680b:;
	};
}



inline jule::I64 _1c005e7c9_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1aaac7598:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1aaac7a0a:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1aaac7a71:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1aaac760e:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1aaac7675:;
			{
				return _1c005d72e_BitSize;;
			}
		}
		else {
			_case_begin_1aaac791c:;
			{
				return -1LL;;
			}
		}
		_match_end_1aaac74dd:;
	};
}



inline jule::Str _1c005eb1a_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1aaaca9ec:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1aaaca7ee:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1aaaca865:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1aaacaa63:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i64", 3));;
			}
		}
		else {
			_case_begin_1aaaca711:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aaaca2e3:;
	};
}



inline jule::Str _1c005eda1_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1aaacc2b2:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1aaacc328:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1aaacc38e:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1aaacc405:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u64", 3));;
			}
		}
		else {
			_case_begin_1aaacaada:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aaacbdc7:;
	};
}



inline jule::Str _1c006016a_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1aaacdcca:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1aaacda99:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f64", 3));;
			}
		}
		else {
			_case_begin_1aaacadd7:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aaacd68c:;
	};
}



inline jule::Bool _1c0060c70_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _1c0052349_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1c0061039_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1aaad3c14:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1aaad2d78:;
			{
				return 64LLU;;
			}
		}
		_match_end_1aaad364d:;
	};
}



inline jule::I64 _1c0061303_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1aaad4929:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1aaad3eab:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1aaad4022:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1aaad3e45:;
			{
				return 64LLU;;
			}
		}
		_match_end_1aaad450b:;
	};
}



inline jule::I64 _1c00615bc_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1aaad650d:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1aaad56e9:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1aaad5760:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1aaad5683:;
			{
				return 64LLU;;
			}
		}
		_match_end_1aaad5ad4:;
	};
}



inline void _1c0061765_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1d9258d1c_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1aaad6e37:;
				{
					_1c005d72e_BitSize=64LLU;
					_1c005da2b_SysInt=static_cast<jule::Str>(jule::Str::lit("i64", 3));
					_1c005dcd4_SysUint=static_cast<jule::Str>(jule::Str::lit("u64", 3));
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1aaad7564:;
				{
					_1c005d72e_BitSize=32LLU;
					_1c005da2b_SysInt=static_cast<jule::Str>(jule::Str::lit("i32", 3));
					_1c005dcd4_SysUint=static_cast<jule::Str>(jule::Str::lit("u32", 3));
				}
			}
			_match_end_1aaad7476:;
		};
	};
}



inline void _1c00618db_init(void) {
	_1c0061765_UpdateTarget();
}



inline jule::I64 _1c0065549_MinI(jule::Str _6113_k) {
	_6113_k=_1c005e510_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1aaad99d9:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1aaad9ce7:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1aaad9d5d:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1aaad9dc4:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1aaad6893:;
			{
				return 0LL;;
			}
		}
		_match_end_1aaad695e:;
	};
}



inline jule::I64 _1c0065857_MaxI(jule::Str _7913_k) {
	_7913_k=_1c005e510_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1aaadb414:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1aaadb777:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1aaadb7ee:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1aaadb876:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1aaadad70:;
			{
				return 0LL;;
			}
		}
		_match_end_1aaadad09:;
	};
}



inline jule::U64 _1c0065b21_MaxU(jule::Str _9713_k) {
	_9713_k=_1c005e510_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1aaadcd94:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1aaadd207:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1aaadd27e:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1aaadd306:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1aaadc800:;
			{
				return 0LLU;;
			}
		}
		_match_end_1aaadc789:;
	};
}



inline jule::F64 _1c0065e62_Min(jule::Str _11512_k) {
	_11512_k=_1c005e510_RealKindOf(_11512_k);
	jule::I64 _1172_i = _1c0065549_MinI(_11512_k);;
	if ((_1172_i != 0LL)) {
		return static_cast<jule::F64>(_1172_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1aaae08d0:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1aaaded30:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1aaae0094:;
			{
				return 0LL;;
			}
		}
		_match_end_1aaadecb9:;
	};
}



inline jule::F64 _1c00661e8_Max(jule::Str _13312_k) {
	_13312_k=_1c005e510_RealKindOf(_13312_k);
	jule::I64 _1352_i = _1c0065857_MaxI(_13312_k);;
	if ((_1352_i != 0LL)) {
		return static_cast<jule::F64>(_1352_i);;
	};
	jule::U64 _1392_u = _1c0065b21_MaxU(_13312_k);;
	if ((_1392_u != 0LLU)) {
		return static_cast<jule::F64>(_1392_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1aaae2ddd:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1aaae22b6:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1aaae25a2:;
			{
				return 0LL;;
			}
		}
		_match_end_1aaae2250:;
	};
}



inline jule::Bool _1c006921d_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == static_cast<jule::Str>(jule::Str::lit("i8", 2))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i16", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i32", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i64", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("int", 3))));;
}



inline jule::Bool _1c006952b_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == static_cast<jule::Str>(jule::Str::lit("u8", 2))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u16", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u32", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u64", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uint", 4)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))));;
}



inline jule::Bool _1c00697e5_IsInt(jule::Str _4610_k) {
	return (_1c006921d_IsSigInt(_4610_k) || _1c006952b_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1c0069b36_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == static_cast<jule::Str>(jule::Str::lit("f32", 3))) || (_5112_k == static_cast<jule::Str>(jule::Str::lit("f64", 3))));;
}



inline jule::Bool _1c0069dbc_IsNum(jule::Str _5610_k) {
	return (_1c00697e5_IsInt(_5610_k) || _1c0069b36_IsFloat(_5610_k));;
}



inline jule::Bool _1c006a186_IsSigNum(jule::Str _6113_k) {
	return (_1c006921d_IsSigInt(_6113_k) || _1c0069b36_IsFloat(_6113_k));;
}



inline void _1c007447b_lshiftUnsig(_1c006a461_Const* _59021_c, _1c006a461_Const* _59032_x) {
	jule::U64 _5912_l = _1c006cdc0_AsU64(_59021_c);;
	jule::U64 _5922_r = _1c006cdc0_AsU64(_59032_x);;
	_1c006d6b7_SetU64(_59021_c, ({ jule::U64 __jule_x = _5912_l; jule::U64 __jule_y = _5922_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
}



inline void _1c00747ab_rshiftUnsig(_1c006a461_Const* _59621_c, _1c006a461_Const* _59632_x) {
	jule::U64 _5972_l = _1c006cdc0_AsU64(_59621_c);;
	jule::U64 _5982_r = _1c006cdc0_AsU64(_59632_x);;
	_1c006d6b7_SetU64(_59621_c, ({ jule::U64 __jule_x = _5972_l; jule::U64 __jule_y = _5982_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
}



inline jule::Bool _1a7b6a342_IsUnaryOp(jule::U64 _33414_id) {
	{
		auto expr = &(_1a7ac0e13_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaba6952:;
		if (it != expr_end) {
			jule::U64 *_3359_op = it;
			{
				if ((_33414_id == (*(_3359_op)))) {
					return true;;
				};
			}
			_iter_next_1aaba6952:;
			++it;
			goto _iter_begin_1aaba6952;
		}
		_iter_end_1aaba6952:;
	};
	return false;;
}



inline jule::Bool _1a7b6a650_IsBinOp(jule::U64 _34412_id) {
	{
		auto expr = &(_1a7ac1155_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaba6e80:;
		if (it != expr_end) {
			jule::U64 *_3459_op = it;
			{
				if ((_34412_id == (*(_3459_op)))) {
					return true;;
				};
			}
			_iter_next_1aaba6e80:;
			++it;
			goto _iter_begin_1aaba6e80;
		}
		_iter_end_1aaba6e80:;
	};
	return false;;
}



inline jule::Bool _1a7b6ac5a_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _1a7b6aee1_IsRawStr(_36410_k)));;
}



inline jule::Bool _1a7b6aee1_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1a7b6b2aa_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1a7b6bb90_IsFloat(jule::Str _38012_k) {
	if (_1daebc991_HasPrefix(_38012_k, jule::Str::lit("0x", 2))) {
		return _1daec29c9_ContainsAny(_38012_k, jule::Str::lit(".pP", 3));;
	};
	return _1daec29c9_ContainsAny(_38012_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1a7b6be59_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3932_b = _38810_k[0LL];;
	return ((_3932_b == '.') || (('0' <= _3932_b) && (_3932_b <= '9')));;
}



inline jule::Bool _1a7b6c4dc_IsIgnoreIdent(jule::Str _40318_ident) {
	return (_40318_ident == static_cast<jule::Str>(jule::Str::lit("_", 1)));;
}



inline jule::Bool _1a7b6c7a6_IsAnonIdent(jule::Str _40616_ident) {
	return (_40616_ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}



inline jule::Bool _1a7b6cd39_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_1a7ac0c04_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aabae570:;
		if (it != expr_end) {
			jule::I32 *_4209_cr = it;
			{
				if ((_41912_r == (*(_4209_cr)))) {
					return true;;
				};
			}
			_iter_next_1aabae570:;
			++it;
			goto _iter_begin_1aabae570;
		}
		_iter_end_1aabae570:;
	};
	return false;;
}



inline jule::Bool _1a7b6d334_IsLetter(jule::I32 _42913_r) {
	return _1dae14ad6_IsLetter(_42913_r);;
}



inline jule::Bool _1a7b6d7a7_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1a7b6da71_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1a7b6dd3a_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1a7b6e104_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1aabb3178:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1aabb3222:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1aabb3299:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aabb3112:;
			{
				return false;;
			}
		}
		_match_end_1aabb2e25:;
	};
}



inline jule::Bool _1a7b6e3bd_IsAssign(jule::U64 _47313_id) {
	return ((((((((_47313_id == static_cast<jule::U64>(1LLU)) || (_47313_id == static_cast<jule::U64>(27LLU))) || (_47313_id == static_cast<jule::U64>(30LLU))) || (_47313_id == static_cast<jule::U64>(32LLU))) || (_47313_id == static_cast<jule::U64>(24LLU))) || (_47313_id == static_cast<jule::U64>(74LLU))) || (_47313_id == static_cast<jule::U64>(62LLU))) || (_47313_id == static_cast<jule::U64>(65LLU)));;
}



inline jule::Bool _1a7b6e687_IsPostfixOp(jule::U64 _48516_id) {
	{
		auto expr = &(_1a7b640d8_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aabb5e39:;
		if (it != expr_end) {
			jule::U64 *_4869_op = it;
			{
				if ((_48516_id == (*(_4869_op)))) {
					return true;;
				};
			}
			_iter_next_1aabb5e39:;
			++it;
			goto _iter_begin_1aabb5e39;
		}
		_iter_end_1aabb5e39:;
	};
	return false;;
}



inline jule::Bool _1a7b6e951_IsAssignOp(jule::U64 _49515_id) {
	if (_1a7b6e687_IsPostfixOp(_49515_id)) {
		return true;;
	};
	{
		auto expr = &(_1a7b643c4_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aabb6c4d:;
		if (it != expr_end) {
			jule::U64 *_4999_op = it;
			{
				if ((_49515_id == (*(_4999_op)))) {
					return true;;
				};
			}
			_iter_next_1aabb6c4d:;
			++it;
			goto _iter_begin_1aabb6c4d;
		}
		_iter_end_1aabb6c4d:;
	};
	return false;;
}



inline jule::Ptr<_1a7b7038b_File> _1a7b71766_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1a7b7038b_File>(_1a7b7038b_File{._field_Path=_5715_path, ._field_Data=jule::Slice<jule::U8>(nullptr), ._field_Tokens=jule::Slice<jule::Ptr<_1a7b69b05_Token>>(nullptr)});;
}



inline _1d9144ab5_Log _1a7b73290_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1a7b7038b_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _1d9144ab5_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_1d9145027_Logf(_10043_fmt, _10056_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Bool _1a7b73658_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aabc22ca:;
		if (it != expr_end) {
			jule::I64 _1146_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1146_i] != _11035_prefix[_1146_i])) {
					return false;;
				};
			}
			_iter_next_1aabc22ca:;
			++it;
			_1146_i++;
			goto _iter_begin_1aabc22ca;
		}
		_iter_end_1aabc22ca:;
	};
	return true;;
}



inline jule::Str _1a7b739cc_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1286_b = (*(_12215_txt))[_12232_i];;
	if ((_1286_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1286_b == '+') || (_1286_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1422_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1286_b=(*(_12215_txt))[_12232_i];
			if (((_1286_b != '_') && (!(_1a7b6d7a7_IsDecimal(_1286_b))))) {
				goto _iter_end_1aabc5267;
			};
		}
	_iter_next_1aabc5267:;
	}
	_iter_end_1aabc5267:;;
	if ((_12232_i == _1422_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1a7b73d95_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i) {
	return _1a7b739cc_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1a7b74219_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1aabc708d:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1683_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1683_b == '_') || _1a7b6d7a7_IsDecimal(_1683_b)) {
					_case_begin_1aabc8138:;
					{
						goto _iter_next_1aabc6e4a;
					}
				}
				else if (_1a7b75a9a_isFloatFmtP(_1683_b, _16036_i)) {
					_case_begin_1aabc81d2:;
					{
						return _1a7b73d95_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1aabc80b1:;
					{
						goto _iter_end_1aabc6e4a;
					}
				}
				_match_end_1aabc8039:;
			};
		}
	_iter_next_1aabc6e4a:;
	}
	_iter_end_1aabc6e4a:;;
	return jule::Str();;
}



inline jule::Str _1a7b7458d_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i) {
	_18136_i+=2LL;
	return _1a7b739cc_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1a7b74912_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i) {
	(_18635_i)++;
	return _1a7b739cc_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1a7b74d96_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = __jule_bytesToStr((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = __jule_bytesToStr((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2013_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2013_b == 'e') || (_2013_b == 'E')))) {
				__jule_func_result = _1a7b739cc_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2013_b != '_') && (!(_1a7b6d7a7_IsDecimal(_2013_b))))) {
				goto _iter_end_1aabcaca6;
			};
		}
	_iter_next_1aabcaca6:;
	}
	_iter_end_1aabcaca6:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1a7b750d8_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I64 _2176_i = 0LL;;
	_julec_label_1aabcce40:;
	for (; (_2176_i < (*(_21615_txt)).len()); (_2176_i)++) {
		{
			jule::U8 _2203_b = (*(_21615_txt))[_2176_i];;
			{
				
				if ((_2203_b == '.')) {
					_case_begin_1aabcdbaa:;
					{
						__jule_func_result = _1a7b74d96_floatNum(_21615_txt, _2176_i);
						return __jule_func_result;;
					}
				}
				else if ((_2203_b == '_')) {
					_case_begin_1aabcdc54:;
					{
						goto _iter_next_1aabcd083;
					}
				}
				else if (_1a7b75726_isFloatFmtE(_2203_b, _2176_i)) {
					_case_begin_1aabcdcba:;
					{
						__jule_func_result = _1a7b739cc_floatFmtE(_21615_txt, _2176_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1a7b6d7a7_IsDecimal(_2203_b)))) {
					_case_begin_1aabcdd31:;
					{
						goto _iter_end_1aabcd083;
					}
				}
				_match_end_1aabcdabc:;
			};
		}
	_iter_next_1aabcd083:;
	}
	_iter_end_1aabcd083:;;
	if ((_2176_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_21615_txt)).slice(0LL, _2176_i));
	return __jule_func_result;;
}



inline jule::Str _1a7b753a2_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1a7b73658_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _2486_i = 2LL;;
	for (; (_2486_i < (*(_23915_txt)).len()); (_2486_i)++) {
		{
			if ((((*(_23915_txt))[_2486_i] != '_') && (!(_1a7b6da71_IsBinary((*(_23915_txt))[_2486_i]))))) {
				goto _iter_end_1aabd155e;
			};
		}
	_iter_next_1aabd155e:;
	}
	_iter_end_1aabd155e:;;
	if ((_2486_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_23915_txt)).slice(0LL, _2486_i));
	return __jule_func_result;;
}



inline jule::Bool _1a7b75726_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1a7b75a9a_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1a7b75e1e_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1aabd43ec:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2763_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2763_b == '_') || _1a7b6d7a7_IsDecimal(_2763_b)) {
					_case_begin_1aabd5112:;
					{
						goto _iter_next_1aabd3e68;
					}
				}
				else if (_1a7b75a9a_isFloatFmtP(_2763_b, _26938_i)) {
					_case_begin_1aabd51ab:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1aabd508a:;
					{
						goto _iter_end_1aabd3e68;
					}
				}
				_match_end_1aabd5013:;
			};
		}
	_iter_next_1aabd3e68:;
	}
	_iter_end_1aabd3e68:;;
	return false;;
}



inline jule::Bool _1a7b76293_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1aabd6113:;
			{
				goto _case_begin_1aabd5cc2;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1aabd5cc2:;
			{
				goto _case_begin_1aabd619b;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1aabd619b:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1aabd5c28:;
			{
				return true;;
			}
		}
		_match_end_1aabd5b4b:;
	};
}



inline jule::Bool _1a7b76617_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1aabd7c3b:;
			{
				goto _case_begin_1aabd7ca2;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1aabd7ca2:;
			{
				goto _case_begin_1aabd7d18;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1aabd7d18:;
			{
				goto _case_begin_1aabd7d90;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1aabd7d90:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1aabd7b70:;
			{
				return true;;
			}
		}
		_match_end_1aabd771e:;
	};
}



inline jule::Str _1a7b76b12_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _3266_octalStart = 1LL;;
	jule::Bool _3286_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3266_octalStart)++;
		_3286_o=true;
	};
	jule::I64 _3376_i = _3266_octalStart;;
	for (; (_3376_i < (*(_31814_txt)).len()); (_3376_i)++) {
		{
			jule::U8 _3393_b = (*(_31814_txt))[_3376_i];;
			if ((_3393_b == '.')) {
				if (_3286_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1a7b74d96_floatNum(_31814_txt, _3376_i);
				return __jule_func_result;;
			};
			if (_1a7b75726_isFloatFmtE(_3393_b, _3376_i)) {
				__jule_func_result = _1a7b739cc_floatFmtE(_31814_txt, _3376_i);
				return __jule_func_result;;
			};
			if (((_3393_b != '_') && (!(_1a7b6dd3a_IsOctal(_3393_b))))) {
				goto _iter_end_1aabdb5e1;
			};
		}
	_iter_next_1aabdb5e1:;
	}
	_iter_end_1aabdb5e1:;;
	if ((_3376_i == _3266_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_31814_txt)).slice(0LL, _3376_i));
	return __jule_func_result;;
}



inline jule::Str _1a7b76cdd_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3696_i = 2LL;;
	_julec_label_1aabe0da9:;
	for (; (_3696_i < (*(_36012_txt)).len()); (_3696_i)++) {
		{
			jule::U8 _3723_b = (*(_36012_txt))[_3696_i];;
			{
				
				if (_1a7b76293_isFloatFmtDotp(_36012_txt, _3696_i)) {
					_case_begin_1aabe1a25:;
					{
						__jule_func_result = _1a7b74912_floatFmtDotp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1a7b76617_isFloatFmtDotfp(_36012_txt, _3696_i)) {
					_case_begin_1aabe1abe:;
					{
						__jule_func_result = _1a7b7458d_floatFmtDotfp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1a7b75a9a_isFloatFmtP(_3723_b, _3696_i)) {
					_case_begin_1aabe1b35:;
					{
						__jule_func_result = _1a7b73d95_floatFmtP(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1a7b75e1e_isFloatFmtDotnp(_36012_txt, _3696_i)) {
					_case_begin_1aabe1b9b:;
					{
						__jule_func_result = _1a7b74219_floatFmtDotnp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (((_3723_b != '_') && (!(_1a7b6e104_IsHex(_3723_b))))) {
					_case_begin_1aabe1c12:;
					{
						goto _iter_end_1aabe0e53;
					}
				}
				_match_end_1aabe1926:;
			};
		}
	_iter_next_1aabe0e53:;
	}
	_iter_end_1aabe0e53:;;
	if ((_3696_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_36012_txt)).slice(0LL, _3696_i));
	return __jule_func_result;;
}



inline jule::Str _1a7b77140_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3996_i = 2LL;;
	for (; (_3996_i < _39328_n); (_3996_i)++) {
		{
			if ((!(_1a7b6e104_IsHex((*(_39315_txt))[_3996_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1aabe3829:;
	}
	_iter_end_1aabe3829:;;
	__jule_func_result=__jule_bytesToStr((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1a7b77409_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1a7b77140_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1a7b776c3_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1a7b77140_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1a7b7798c_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1a7b77140_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1a7b77c56_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1a7b6dd3a_IsOctal((*(_42616_txt))[1LL]))) || (!(_1a7b6dd3a_IsOctal((*(_42616_txt))[2LL])))) || (!(_1a7b6dd3a_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1d9144ab5_Log> _1a7b7cc4a_Lex(jule::Ptr<_1a7b7038b_File> _80612_f, jule::I64 _80622_mode) {
	if ((_80612_f == nullptr)) {
		return nullptr;;
	};
	_1a7b784c6_lex _8116_lex = _1a7b784c6_lex{._field_mode=_80622_mode, ._field_tokens=jule::Slice<jule::Ptr<_1a7b69b05_Token>>(nullptr), ._field_file=_80612_f, ._field_pos=0LL, ._field_column=0, ._field_row=-1LL, ._field_errors=jule::Slice<_1d9144ab5_Log>(nullptr)};;
	_1a7b7b320_newLine(&_8116_lex);
	_1a7b790ed_lex(&_8116_lex);
	if ((_8116_lex._field_errors.len() > 0LL)) {
		return _8116_lex._field_errors;;
	};
	(*(_80612_f))._field_Tokens=_8116_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _1a7c52d31_FindModuleFile(jule::Slice<jule::Ptr<_1d828aeb5_DirEntry>>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac7ba9e:;
		if (it != expr_end) {
			jule::Ptr<_1d828aeb5_DirEntry> *_149_d = it;
			{
				if (((!(_1d8290382_IsDir((*((*(_149_d))))._field_Stat.ptr()))) && (*((*(_149_d))))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1aac7ba9e:;
			++it;
			goto _iter_begin_1aac7ba9e;
		}
		_iter_end_1aac7ba9e:;
	};
	return false;;
}



inline jule::Str _1a7c530d9_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_1d828aeb5_DirEntry>> _277_dirents = ({
				auto except = static__1daee2631_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1aac7cc48;
				} jule::Slice<jule::Ptr<_1d828aeb5_DirEntry>>(nullptr);});
			});;
			jule::Bool _313_exist = _1a7c52d31_FindModuleFile(&(_277_dirents));;
			if (_313_exist) {
				return _2527_path;;
			};
			jule::I64 _363_n = _2527_path.len();;
			_2527_path=_1daee01ab_Dir(_2527_path);
			if ((_2527_path.len() == _363_n)) {
				goto _iter_end_1aac7cc48;
			};
		}
	_iter_next_1aac7cc48:;
	}
	_iter_end_1aac7cc48:;;
	return jule::Str();;
}



inline jule::Slice<_1d9144ab5_Log> _1a7c533a3_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _482_bytes = ({
		auto except = static__1d828d869_Read(_1daede4b8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4721_path)); (*it++) = jule::Str::lit("jule.mod", 8); __jule_collection; })));
		(except.ok()) ? (except.result) : ({{
			return ({ auto __jule_collection = jule::Slice<_1d9144ab5_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1d9144ab5_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _542_s = _1daec47ab_Trim(_1d7e4d98b_BytesStr(_482_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_542_s.len() != 0LL)) {
		return ({ auto __jule_collection = jule::Slice<_1d9144ab5_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1d9144ab5_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
	};
	return nullptr;;
}



inline jule::Bool _1a7c53c00_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _113_b = _910_ident[0LL];;
		return (('A' <= _113_b) && (_113_b <= 'Z'));;
	};
	jule::I32 _142_r;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d8062990_DecodeRuneStr(_910_ident);
		_142_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1dae7aee3_IsUpper(_142_r);;
}



inline jule::Bool _1a7c9cb39_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1a7cb7c64_ToRune(jule::Str _2015_lit) {
	jule::I32 _216_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I64 _247_i = 0LL;;
		_216_r=_1a7cb88be_runeFromEsqSeq(_2015_lit, &(_247_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d8062990_DecodeRuneStr(_2015_lit);
			_216_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _216_r;;
}



inline jule::Str _1a7cb7e73_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1a7cb82b4_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _536_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac894a2:;
		if (it != expr_end) {
			jule::U8 _549_b = *it;
			{
				if (((_549_b >= 128LLU) || (_549_b == '\\'))) {
					_536_isPure=false;
					goto _iter_end_1aac894a2;
				};
			}
			_iter_next_1aac894a2:;
			++it;
			goto _iter_begin_1aac894a2;
		}
		_iter_end_1aac894a2:;
	};
	if (_536_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _686_s = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _696_i = 0LL;;
	while ((_696_i < _4714_lit.len())) {
		{
			jule::U8 _713_b = _4714_lit[_696_i];;
			if ((_713_b == '\\')) {
				_1a7cb8c65_strEsqSeq(&(_686_s), _4714_lit, &(_696_i));
			} else {
				jule::I32 _754_r;
				jule::I64 _757_size;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d8062990_DecodeRuneStr(_4714_lit.slice(_696_i));
					_754_r = __jule_assign_result.__jule_result_arg0;
					_757_size = __jule_assign_result.__jule_result_arg1;
				});
				_696_i+=_757_size;
				_686_s=_1d8063a3a_AppendRune(_686_s, _754_r);
			};
		}
	_iter_next_1aac8a66d:;
	}
	_iter_end_1aac8a66d:;;
	return _1d7e4dc55_StrFromBytes(_686_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1a7cb854a_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1aac8d8a2:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1aac8e0ab:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1aac8e122:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1aac8e188:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1aac8e1ee:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1aac8e276:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1aac8e2ed:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1aac8e375:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1aac8e3ec:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1aac8e474:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1aac8de24:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1a7cb88be_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i) {
	jule::U8 _1142_b;
	jule::Bool _1145_ok;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1a7cb854a_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1142_b = __jule_assign_result.__jule_result_arg0;
		_1145_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1145_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1142_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1aac940e4:;
			{
				;
				jule::I32 _1243_r = static_cast<jule::I32>(({
					auto except = _1c004a573_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:13"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1243_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1aac943be:;
			{
				;
				jule::I32 _1293_r = static_cast<jule::I32>(({
					auto except = _1c004a573_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:13"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1293_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1aac94446:;
			{
				;
				jule::Str _1343_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1c004a573_ParseUint(_1343_seq, 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:12"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_1aac92bb4:;
			{
				;
				jule::Str _1393_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1c004a573_ParseUint(_1393_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:12"));
					(except.result);
				}));;
			}
		}
		_match_end_1aac92e06:;
	};
}



inline void _1a7cb8c65_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i) {
	jule::I32 _1462_r = _1a7cb88be_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1462_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1462_r)); };
		return;;
	};
	(*(_14519_buf))=_1d8063a3a_AppendRune((*(_14519_buf)), _1462_r);
}



inline jule::I64 _1a7dec085_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I64 _1241_i) {
	while ((_1241_i < (*(_1222_bytes)).len())) {
		{
			jule::I32 _143_r;
			jule::I64 _146_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d806264e_DecodeRune((*(_1222_bytes)).slice(_1241_i));
				_143_r = __jule_assign_result.__jule_result_arg0;
				_146_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_143_r == '{')) {
				return _1241_i;;
			};
			_1241_i+=_146_size;
		}
	_iter_next_1aacbec57:;
	}
	_iter_end_1aacbec57:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1a7dec44d_getFormatRange(jule::I64* _2824_i, jule::Slice<jule::U8>* _2837_bytes) {
	jule::I64 _292_start = (*(_2824_i));;
	jule::I64 _306_braces = 0LL;;
	while (((*(_2824_i)) < (*(_2837_bytes)).len())) {
		{
			jule::I32 _323_r;
			jule::I64 _326_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d806264e_DecodeRune((*(_2837_bytes)).slice((*(_2824_i))));
				_323_r = __jule_assign_result.__jule_result_arg0;
				_326_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2824_i))+=_326_size;
			{
				auto &_match_expr{ _323_r };
				
				if (_match_expr == '{') {
					_case_begin_1aacc26d8:;
					{
						(_306_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1aacc295d:;
					{
						(_306_braces)--;
						if ((_306_braces == 0LL)) {
							return (*(_2837_bytes)).slice(_292_start, (*(_2824_i)));;
						};
					}
				}
				_match_end_1aacc262d:;
			};
		}
	_iter_next_1aacc195c:;
	}
	_iter_end_1aacc195c:;;
	return nullptr;;
}



inline void _1a7dec739_FmtByDefault(_1daed18b7_StrBuilder* _4822_buf, jule::Any* _4840_arg) {
	if (((*(_4840_arg)) == nullptr)) {
		_1daeda6b2_WriteStr(_4822_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4840_arg)) };
		
		if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1aacc1c26:;
			{
				_1daeda6b2_WriteStr(_4822_buf, _1c004567d_FmtFloat(static_cast<jule::F64>((*(_4840_arg)).cast<jule::F32>(&__jule_any_type138)), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aacc4a1a:;
			{
				_1daeda6b2_WriteStr(_4822_buf, _1c004567d_FmtFloat((*(_4840_arg)).cast<jule::F64>(&__jule_any_type5), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1aacc4a81:;
			{
				_1daeda6b2_WriteStr(_4822_buf, _1c005c0ce_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I8>(&__jule_any_type139)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type140) {
			_case_begin_1aacc4058:;
			{
				_1daeda6b2_WriteStr(_4822_buf, _1c005c0ce_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I16>(&__jule_any_type140)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1aacc40be:;
			{
				_1daeda6b2_WriteStr(_4822_buf, _1c005c0ce_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I32>(&__jule_any_type6)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1aacc4135:;
			{
				_1daeda6b2_WriteStr(_4822_buf, _1c005c0ce_FmtInt((*(_4840_arg)).cast<jule::I64>(&__jule_any_type1), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1aacc419b:;
			{
				_1daeda6b2_WriteStr(_4822_buf, _1c005bc16_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U8>(&__jule_any_type137)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type141) {
			_case_begin_1aacc4b91:;
			{
				_1daeda6b2_WriteStr(_4822_buf, _1c005bc16_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U16>(&__jule_any_type141)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type142) {
			_case_begin_1aacc4c07:;
			{
				_1daeda6b2_WriteStr(_4822_buf, _1c005bc16_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U32>(&__jule_any_type142)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aacc4c6d:;
			{
				_1daeda6b2_WriteStr(_4822_buf, _1c005bc16_FmtUint((*(_4840_arg)).cast<jule::U64>(&__jule_any_type2), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1aacc4cd4:;
			{
				_1daeda6b2_WriteStr(_4822_buf, (*(_4840_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1aacc4d4a:;
			{
				if ((*(_4840_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_1daeda6b2_WriteStr(_4822_buf, jule::Str::lit("true", 4));
				} else {
					_1daeda6b2_WriteStr(_4822_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1aacc39b4:;
			{
				_1daeda6b2_WriteStr(_4822_buf, _1a9952d1a_toStr((*(_4840_arg))));
			}
		}
		_match_end_1aacc394d:;
	};
}



inline void _1a7decb57_applyFmtByDefault(_1daed18b7_StrBuilder* _8727_buf, jule::I64* _8749_j, jule::Slice<jule::Any> _8757_args) {
	jule::Any _882_arg = _8757_args[(*(_8749_j))];;
	((*(_8749_j)))++;
	_1a7dec739_FmtByDefault(_8727_buf, &(_882_arg));
}



inline void _1a7ded075_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _1daed18b7_StrBuilder* _9536_buf, jule::I64* _9558_j, jule::Slice<jule::Any> _9566_args) {
	if (((*(_9518_fmt)).len() == 2LL)) {
		_1a7decb57_applyFmtByDefault(_9536_buf, _9558_j, _9566_args);
		return;;
	};
	if (((((((*(_9518_fmt)).len() == 4LL) && ((*(_9518_fmt))[0LL] == '{')) && ((*(_9518_fmt))[1LL] == '{')) && ((*(_9518_fmt))[2LL] == '}')) && ((*(_9518_fmt))[3LL] == '}'))) {
		_1daeda6b2_WriteStr(_9536_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_1daeda409_Write(_9536_buf, (*(_9518_fmt)));
}



inline jule::Slice<jule::U8> _1a7ded3e9_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args) {
	jule::Slice<jule::U8> _1176_fmtBytes = _1d7e4d705_StrBytes(_11611_fmt);;
	if ((_11621_args.len() == 0LL)) {
		return _1176_fmtBytes;;
	};
	jule::I64 _1216_i = _1a7dec085_findFormatPrefix(&(_1176_fmtBytes), 0LL);;
	if ((_1216_i == -1LL)) {
		return _1176_fmtBytes;;
	};
	jule::I64 _1256_j = 0LL;;
	jule::I64 _1266_last = 0LL;;
	_1daed18b7_StrBuilder _1276_buf = static__1daed1bb4_New(_11611_fmt.len());;
	for (; (_1216_i != -1LL); _1216_i=_1a7dec085_findFormatPrefix(&(_1176_fmtBytes), _1216_i)) {
		{
			_1daeda409_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last, _1216_i));
			jule::Slice<jule::U8> _1307_format = _1a7dec44d_getFormatRange(&(_1216_i), &(_1176_fmtBytes));;
			if ((_1307_format == nullptr)) {
				goto _iter_next_1aacd1de0;
			};
			_1a7ded075_applyFmt(&(_1307_format), &(_1276_buf), &(_1256_j), _11621_args);
			if ((_1256_j >= _11621_args.len())) {
				_1daeda409_Write(&_1276_buf, _1176_fmtBytes.slice(_1216_i));
				_1266_last=_1176_fmtBytes.len();
				goto _iter_end_1aacd1de0;
			};
			_1266_last=_1216_i;
		}
	_iter_next_1aacd1de0:;
	}
	_iter_end_1aacd1de0:;;
	if ((_1266_last < _1176_fmtBytes.len())) {
		_1daeda409_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last));
	};
	return _1daedb95a_Buf(&_1276_buf);;
}



inline jule::Str _1a7e0041d_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _1d7e4dc55_StrFromBytes(_1a7ded3e9_Format(_3111_fmt, _3121_args));;
}



inline jule::Ptr<_1a7bba8d1_Fn> _1a78253d7_runtimeFindFn(jule::Ptr<_1a7c36793_ImportInfo>* _1023_runtime, jule::Str _1045_ident) {
	;
	jule::Ptr<_1a7bba8d1_Fn> _126_f = _1a7c37d9e_FindFn((*(_1023_runtime)).ptr(), _1045_ident, false);;
	if ((_126_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 103) + jule::Str("\nlocation: std/jule/sema/runtime.jule:14:3"));;
	};
	return _126_f;;
}



inline jule::Ptr<_1a7ba5ca6_Struct> _1a7825937_runtimeFindStruct(jule::Ptr<_1a7c36793_ImportInfo>* _2327_runtime, jule::Str _2349_ident) {
	;
	jule::Ptr<_1a7ba5ca6_Struct> _256_f = _1a7c379a3_FindStruct((*(_2327_runtime)).ptr(), _2349_ident, false);;
	if ((_256_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 101) + jule::Str("\nlocation: std/jule/sema/runtime.jule:27:3"));;
	};
	return _256_f;;
}



inline jule::Bool _1a7bc0b8e_parameterUsesGenerics(jule::Ptr<_1a7bbc839_ParamIns>* _39431_p, jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>>* _39446_generics) {
	if (_1a7bb955b_IsSelf((*((*(_39431_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1a7d37e49_kindUsesGenerics(&((*((*(_39431_p))))._field_Kind), _39446_generics);;
}



inline jule::Ptr<_1a7d244a7_TypeSymbol> _1a7bc33bc_buildType(jule::Ptr<_1a7b800b0_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a7d244a7_TypeSymbol>(_1a7d244a7_TypeSymbol{._field_Decl=_9418_t, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr)});;
}



inline jule::Ptr<_1a7cd5336_Value> _1a7bc36ca_buildExpr(jule::Ptr<_1a7b89251_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=_10318_expr, ._field_Data=jule::Ptr<_1a7cd41ae_Data>(nullptr)});;
}



inline jule::Ptr<_1a7d1aea4_TypeAlias> _1a7bc3994_buildTypeAlias(jule::Ptr<_1a7b9b939_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1a7d1aea4_TypeAlias>(_1a7d1aea4_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*_11223_decl.alloc)._field_Public, ._field_Binded=(*_11223_decl.alloc)._field_Binded, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_11223_decl.alloc)._field_Token, ._field_Ident=(*_11223_decl.alloc)._field_Ident, ._field_Kind=_1a7bc33bc_buildType((*_11223_decl.alloc)._field_Kind), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1a7ba2d80_Field> _1a7bc3cd5_buildField(jule::Ptr<_1a7ba02de_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1a7ba2d80_Field>(_1a7ba2d80_Field{._field_Owner=jule::Ptr<_1a7ba5ca6_Struct>(nullptr), ._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*_12319_decl.alloc)._field_Public, ._field_Mutable=(*_12319_decl.alloc)._field_Mutable, ._field_Ident=(*_12319_decl.alloc)._field_Ident, ._field_Kind=_1a7bc33bc_buildType((*_12319_decl.alloc)._field_Kind), ._field_Default=(*_12319_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_1a7ba2d80_Field>> _1a7bc406b_buildFields(jule::Slice<jule::Ptr<_1a7ba02de_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1a7ba2d80_Field>> _1356_fields = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ba2d80_Field>>::alloc(0LL, (*(_13421_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7ba2d80_Field>(nullptr); __jule_collection; });;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0a942b:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba02de_FieldDecl> _13614_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a7ba2d80_Field>> &__jule_push_dest = _1356_fields; __jule_push_dest.push(_1a7bc3cd5_buildField(_13614_decl)); };
			}
			_iter_next_1ab0a942b:;
			++it;
			goto _iter_begin_1ab0a942b;
		}
		_iter_end_1ab0a942b:;
	};
	return _1356_fields;;
}



inline jule::Ptr<_1a7ba5ca6_Struct> _1a7bc4335_buildStruct(jule::Ptr<_1a7ba0bd5_StructDecl> _14220_decl) {
	return jule::new_ptr<_1a7ba5ca6_Struct>(_1a7ba5ca6_Struct{._field_sema=jule::Ptr<_1a7c56c14_sema>(nullptr), ._field_Depends=jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>>(nullptr), ._field_Uses=jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>>(nullptr), ._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*_14220_decl.alloc)._field_Ident, ._field_Fields=_1a7bc406b_buildFields(&((*_14220_decl.alloc)._field_Fields)), ._field_Methods=jule::Slice<jule::Ptr<_1a7bba8d1_Fn>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1a7c7b178_Var>>(nullptr), ._field_Public=(*_14220_decl.alloc)._field_Public, ._field_Binded=(*_14220_decl.alloc)._field_Binded, ._field_Directives=(*_14220_decl.alloc)._field_Directives, ._field_Generics=(*_14220_decl.alloc)._field_Generics, ._field_Implements=jule::Slice<jule::Ptr<_1a7bce362_Trait>>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1a7ba8b11_StructIns>>(nullptr)});;
}



inline jule::Ptr<_1a7bb8e0c_Param> _1a7bc45ee_buildParam(jule::Ptr<_1a7b9567a_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1a7bb8e0c_Param>(_1a7bb8e0c_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*_15419_decl.alloc)._field_Mutable, ._field_Variadic=(*_15419_decl.alloc)._field_Variadic, ._field_Reference=(*_15419_decl.alloc)._field_Reference, ._field_Kind=_1a7bc33bc_buildType((*_15419_decl.alloc)._field_Kind), ._field_Ident=(*_15419_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1a7bb8e0c_Param>> _1a7bc49c8_buildParams(jule::Slice<jule::Ptr<_1a7b9567a_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1a7bb8e0c_Param>> _1666_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7bb8e0c_Param>>::alloc(0LL, (*(_16521_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7bb8e0c_Param>(nullptr); __jule_collection; });;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0ad452:;
		if (it != expr_end) {
			jule::Ptr<_1a7b9567a_ParamDecl> _16714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a7bb8e0c_Param>> &__jule_push_dest = _1666_params; __jule_push_dest.push(_1a7bc45ee_buildParam(_16714_decl)); };
			}
			_iter_next_1ab0ad452:;
			++it;
			goto _iter_begin_1ab0ad452;
		}
		_iter_end_1ab0ad452:;
	};
	return _1666_params;;
}



inline jule::Ptr<_1a7bb86c0_RetType> _1a7bc4c1a_buildRetType(jule::Ptr<_1a7b87d10_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*_17321_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a7bb86c0_RetType>(_1a7bb86c0_RetType{._field_Kind=_1a7bc33bc_buildType((*_17321_decl.alloc)._field_Kind), ._field_Idents=(*_17321_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_1a7bba8d1_Fn> _1a7bc4ed4_buildFunc(jule::Ptr<_1a7b96acc_FnDecl> _18318_decl) {
	return jule::new_ptr<_1a7bba8d1_Fn>(_1a7bba8d1_Fn{._field_sema=jule::Ptr<_1a7c56c14_sema>(nullptr), ._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*_18318_decl.alloc)._field_Global, ._field_Unsafety=(*_18318_decl.alloc)._field_Unsafety, ._field_Public=(*_18318_decl.alloc)._field_Public, ._field_Binded=(*_18318_decl.alloc)._field_Binded, ._field_Statically=(*_18318_decl.alloc)._field_Statically, ._field_Exceptional=(*_18318_decl.alloc)._field_Exceptional, ._field_Ident=(*_18318_decl.alloc)._field_Ident, ._field_Directives=(*_18318_decl.alloc)._field_Directives, ._field_Scope=(*_18318_decl.alloc)._field_Scope, ._field_Generics=(*_18318_decl.alloc)._field_Generics, ._field_Result=_1a7bc4c1a_buildRetType((*_18318_decl.alloc)._field_Result), ._field_Params=_1a7bc49c8_buildParams(&((*_18318_decl.alloc)._field_Params)), ._field_Owner=jule::Ptr<_1a7ba5ca6_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1a7bbd8b2_FnIns>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1a7bba8d1_Fn>> _1a7bc529d_buildMethods(jule::Slice<jule::Ptr<_1a7b96acc_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1a7bba8d1_Fn>> _2026_methods = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7bba8d1_Fn>>::alloc(0LL, (*(_20122_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7bba8d1_Fn>(nullptr); __jule_collection; });;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0b34ce:;
		if (it != expr_end) {
			jule::Ptr<_1a7b96acc_FnDecl> _20314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a7bba8d1_Fn>> &__jule_push_dest = _2026_methods; __jule_push_dest.push(_1a7bc4ed4_buildFunc(_20314_decl)); };
			}
			_iter_next_1ab0b34ce:;
			++it;
			goto _iter_begin_1ab0b34ce;
		}
		_iter_end_1ab0b34ce:;
	};
	return _2026_methods;;
}



inline jule::Slice<jule::Ptr<_1a7d244a7_TypeSymbol>> _1a7bc5567_buildTraitInherits(jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1a7d244a7_TypeSymbol>> _2106_symbols = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d244a7_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7d244a7_TypeSymbol>(nullptr); __jule_collection; });;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0b4623:;
		if (it != expr_end) {
			jule::Ptr<_1a7b800b0_TypeDecl> _21114_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1a7d244a7_TypeSymbol>> &__jule_push_dest = _2106_symbols; __jule_push_dest.push(_1a7bc33bc_buildType(_21114_it)); };
			}
			_iter_next_1ab0b4623:;
			++it;
			goto _iter_begin_1ab0b4623;
		}
		_iter_end_1ab0b4623:;
	};
	return _2106_symbols;;
}



inline jule::Ptr<_1a7bce362_Trait> _1a7bc5831_buildTrait(jule::Ptr<_1a7ba1422_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1a7bce362_Trait>(_1a7bce362_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*_21719_decl.alloc)._field_Ident, ._field_Public=(*_21719_decl.alloc)._field_Public, ._field_Inherits=_1a7bc5567_buildTraitInherits(&((*_21719_decl.alloc)._field_Inherits)), ._field_Methods=_1a7bc529d_buildMethods(&((*_21719_decl.alloc)._field_Methods)), ._field_Implemented=jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>>(nullptr)});;
}



inline jule::Ptr<_1a7bd1001_EnumItem> _1a7bc5aea_buildEnumItem(jule::Ptr<_1a7b9d4c9_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1a7bd1001_EnumItem>(_1a7bd1001_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*_22722_decl.alloc)._field_Ident, ._field_Value=_1a7bc36ca_buildExpr((*_22722_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1a7bd1001_EnumItem>> _1a7bc5db4_buildEnumItems(jule::Slice<jule::Ptr<_1a7b9d4c9_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1a7bd1001_EnumItem>> _2366_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7bd1001_EnumItem>>::alloc(0LL, (*(_23524_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7bd1001_EnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0b788a:;
		if (it != expr_end) {
			jule::Ptr<_1a7b9d4c9_EnumItemDecl> _23714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a7bd1001_EnumItem>> &__jule_push_dest = _2366_items; __jule_push_dest.push(_1a7bc5aea_buildEnumItem(_23714_decl)); };
			}
			_iter_next_1ab0b788a:;
			++it;
			goto _iter_begin_1ab0b788a;
		}
		_iter_end_1ab0b788a:;
	};
	return _2366_items;;
}



inline jule::Ptr<_1a7bd1a6d_Enum> _1a7bc63ae_buildEnum(jule::Ptr<_1a7b9e08a_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1a7bd1a6d_Enum>(_1a7bd1a6d_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*_24318_decl.alloc)._field_Public, ._field_Ident=(*_24318_decl.alloc)._field_Ident, ._field_Kind=_1a7bc33bc_buildType((*_24318_decl.alloc)._field_Kind), ._field_Items=_1a7bc5db4_buildEnumItems(&((*_24318_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1a7bd2ba1_TypeEnumItem> _1a7bc658a_buildTypeEnumItem(jule::Ptr<_1a7b9e8b5_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1a7bd2ba1_TypeEnumItem>(_1a7bd2ba1_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*_25326_decl.alloc)._field_Ident, ._field_Kind=_1a7bc33bc_buildType((*_25326_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1a7bd2ba1_TypeEnumItem>> _1a7bc6832_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a7b9e8b5_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1a7bd2ba1_TypeEnumItem>> _2626_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7bd2ba1_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7bd2ba1_TypeEnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0bab02:;
		if (it != expr_end) {
			jule::Ptr<_1a7b9e8b5_TypeEnumItemDecl> _26314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a7bd2ba1_TypeEnumItem>> &__jule_push_dest = _2626_items; __jule_push_dest.push(_1a7bc658a_buildTypeEnumItem(_26314_decl)); };
			}
			_iter_next_1ab0bab02:;
			++it;
			goto _iter_begin_1ab0bab02;
		}
		_iter_end_1ab0bab02:;
	};
	return _2626_items;;
}



inline jule::Ptr<_1a7bd3278_TypeEnum> _1a7bc6aeb_buildTypeEnum(jule::Ptr<_1a7ba0025_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1a7bd3278_TypeEnum>(_1a7bd3278_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*_26922_decl.alloc)._field_Public, ._field_Ident=(*_26922_decl.alloc)._field_Ident, ._field_Items=_1a7bc6832_buildTypeEnumItems(&((*_26922_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1a7c7b178_Var> _1a7bc6db5_buildVar(jule::Ptr<_1a7b97c87_VarDecl> _27817_decl) {
	return jule::new_ptr<_1a7c7b178_Var>(_1a7c7b178_Var{._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*_27817_decl.alloc)._field_Ident, ._field_Binded=(*_27817_decl.alloc)._field_Binded, ._field_Constant=(*_27817_decl.alloc)._field_Constant, ._field_Mutable=(*_27817_decl.alloc)._field_Mutable, ._field_Public=(*_27817_decl.alloc)._field_Public, ._field_Used=false, ._field_Statically=(*_27817_decl.alloc)._field_Statically, ._field_Reference=(*_27817_decl.alloc)._field_Reference, ._field_Kind=_1a7bc33bc_buildType((*_27817_decl.alloc)._field_Kind), ._field_Value=_1a7bc36ca_buildExpr((*_27817_decl.alloc)._field_Expr), ._field_Refers=static__1a7bc1d6b_new(), ._field_Directives=(*_27817_decl.alloc)._field_Directives, ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a7c7b178_Var>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1a7c7b178_Var>> _1a7bc717e_buildVars(jule::Slice<jule::Ptr<_1a7b97c87_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1a7c7b178_Var>> _2966_vars = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c7b178_Var>>::alloc(0LL, _29518_decls.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7c7b178_Var>(nullptr); __jule_collection; });;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0c0420:;
		if (it != expr_end) {
			jule::Ptr<_1a7b97c87_VarDecl> _29714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a7c7b178_Var>> &__jule_push_dest = _2966_vars; __jule_push_dest.push(_1a7bc6db5_buildVar(_29714_decl)); };
			}
			_iter_next_1ab0c0420:;
			++it;
			goto _iter_begin_1ab0c0420;
		}
		_iter_end_1ab0c0420:;
	};
	return _2966_vars;;
}



inline jule::Ptr<_1a7c0e1a5_Impl> _1a7bc7448_buildImpl(jule::Ptr<_1a7ba1a82_Impl> _30318_decl) {
	return jule::new_ptr<_1a7c0e1a5_Impl>(_1a7c0e1a5_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*_30318_decl.alloc)._field_Dest, ._field_Methods=_1a7bc529d_buildMethods(&((*_30318_decl.alloc)._field_Methods)), ._field_Statics=_1a7bc717e_buildVars((*_30318_decl.alloc)._field_Statics)});;
}



inline jule::Bool _1a7bcd85b_isImplicitImport(jule::Ptr<_1a7c36793_ImportInfo> _78821_imp) {
	return ((*(_78821_imp))._field_Token == nullptr);;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7c09788_buildAsComptimeMethodData(jule::Ptr<_1a7bbd8b2_FnIns>* _203035_f) {
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_203035_f)), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Ptr<_1a7c36793_ImportInfo> _1a7c09997_findComptimePackage(jule::Ptr<_1a7c56c14_sema>* _203829_s) {
	return _1a7c571dc_SelectPackage((*(_203829_s)).ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1a7c36793_ImportInfo>>((void*)__jule_anon1ab15a840, nullptr, nullptr));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7c09d1b_buildComptimeTypeInfoData(jule::Ptr<_1a7c56c14_sema>* _204435_s, jule::Ptr<_1a7d1bc96_TypeKind>* _204450_t) {
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7c56582_pushComptimeTypeInfo((*((*(_204435_s))))._field_meta.ptr(), _204450_t), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data15)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7c0a15c_buildComptimeValue(jule::Ptr<_1a7cd41ae_Data>* _205228_d) {
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7bebba9_comptimeValue>(_1a7bebba9_comptimeValue{._field_data=(*(_205228_d))}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data16)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Str _1a7c0d14e_toStrConstraints(jule::Ptr<_1a7d1a3b0_InsGeneric> _14321_g) {
	_1daed18b7_StrBuilder _1446_sb = static__1daed1bb4_New(128LL);;
	{
		auto expr = &((*_14321_g.alloc)._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab362690:;
		if (it != expr_end) {
			jule::I64 _1456_i = it - expr->begin();
			jule::Ptr<_1a7d1bc96_TypeKind> *_1459_c = it;
			{
				_1daeda6b2_WriteStr(&_1446_sb, _1a7d1c192_Str((*(_1459_c)).ptr()));
				if ((((*(_14321_g))._field_Constraint.len() - _1456_i) > 1LL)) {
					_1daeda6b2_WriteStr(&_1446_sb, jule::Str::lit(" | ", 3));
				};
			}
			_iter_next_1ab362690:;
			++it;
			_1456_i++;
			goto _iter_begin_1ab362690;
		}
		_iter_end_1ab362690:;
	};
	return _1daedaea9_Str(&_1446_sb);;
}



inline jule::Bool _1a7c0d517_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1a7d1bc96_TypeKind>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("signed", 6))) {
			_case_begin_1ab36454e:;
			{
				jule::Ptr<_1a7d24dae_Prim> _1573_prim = _1a7d1e44c_Prim((*(_15434_g)).ptr());;
				if ((_1573_prim == nullptr)) {
					return false;;
				};
				return _1c006a186_IsSigNum((*(_1573_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unsigned", 8))) {
			_case_begin_1ab3645b5:;
			{
				jule::Ptr<_1a7d24dae_Prim> _1633_prim = _1a7d1e44c_Prim((*(_15434_g)).ptr());;
				if ((_1633_prim == nullptr)) {
					return false;;
				};
				return _1c006952b_IsUnsigInt((*(_1633_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("float", 5))) {
			_case_begin_1ab36462b:;
			{
				jule::Ptr<_1a7d24dae_Prim> _1693_prim = _1a7d1e44c_Prim((*(_15434_g)).ptr());;
				if ((_1693_prim == nullptr)) {
					return false;;
				};
				return _1c0069b36_IsFloat((*(_1693_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("numeric", 7))) {
			_case_begin_1ab3646a3:;
			{
				jule::Ptr<_1a7d24dae_Prim> _1753_prim = _1a7d1e44c_Prim((*(_15434_g)).ptr());;
				if ((_1753_prim == nullptr)) {
					return false;;
				};
				return _1c0069dbc_IsNum((*(_1753_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("mutable", 7))) {
			_case_begin_1ab36487e:;
			{
				return _1a7d1d67c_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("immutable", 9))) {
			_case_begin_1ab3648e5:;
			{
				return (!(_1a7d1d67c_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("comparable", 10))) {
			_case_begin_1ab36495b:;
			{
				return _1a7d1d3e6_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("ordered", 7))) {
			_case_begin_1ab3649c2:;
			{
				return _1a7d1d913_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1ab362e65:;
			{
				return false;;
			}
		}
		_match_end_1ab3643ea:;
	};
}



inline jule::Bool _1a7c0d7d1_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1a7c0b515_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab36a4cd:;
		if (it != expr_end) {
			jule::Str *_1949_bc = it;
			{
				if (((*(_19325_ident)) == (*(_1949_bc)))) {
					return true;;
				};
			}
			_iter_next_1ab36a4cd:;
			++it;
			goto _iter_begin_1ab36a4cd;
		}
		_iter_end_1ab36a4cd:;
	};
	return false;;
}



inline jule::Ptr<_1a7c1ac1c_scopeChecker> _1a7c113d8_newScopeCheckerBase(jule::Ptr<_1a7c56c14_sema>* _5829_s, jule::Ptr<_1a7bbd8b2_FnIns> _5843_owner) {
	return jule::new_ptr<_1a7c1ac1c_scopeChecker>(_1a7c1ac1c_scopeChecker{._field_calledFrom=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_parent=jule::Ptr<_1a7c1ac1c_scopeChecker>(nullptr), ._field_childIndex=0, ._field_table=jule::new_ptr<_1a7ccd9e4_SymbolTable>(_1a7ccd9e4_SymbolTable{._field_File=jule::Ptr<_1a7b7038b_File>(nullptr), ._field_Passes=jule::Slice<_1a7bc3059_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1a7c36793_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1a7c7b178_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1a7bba8d1_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1a7bce362_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1a7bd1a6d_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1a7bd3278_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1a7c0e1a5_Impl>>(nullptr)}), ._field_scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_tree=jule::Ptr<_1a7b94e3d_ScopeTree>(nullptr), ._field_result=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_it=0, ._field_cse=0, ._field_captured=jule::Ptr<jule::Slice<jule::Ptr<_1a7c7b178_Var>>>(nullptr), ._field_labels=jule::Ptr<jule::Slice<jule::Ptr<_1a7c19c2c_scopeLabel>>>(nullptr), ._field_gotos=jule::Ptr<jule::Slice<jule::Ptr<_1a7c16b3b_GotoSt>>>(nullptr), ._field_i=0});;
}



inline jule::Ptr<_1a7c1ac1c_scopeChecker> _1a7c117a1_newScopeChecker(jule::Ptr<_1a7c56c14_sema>* _6625_s, jule::Ptr<_1a7bbd8b2_FnIns> _6639_owner) {
	jule::Ptr<_1a7c1ac1c_scopeChecker> _676_base = _1a7c113d8_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_676_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a7c19c2c_scopeLabel>>>(nullptr);
	(*_676_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a7c16b3b_GotoSt>>>(nullptr);
	return _676_base;;
}



inline jule::Ptr<_1a7c19c2c_scopeLabel> _1a7c11b25_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1a7c1ac1c_scopeChecker> _7637_scope) {
	jule::Ptr<_1a7c19c2c_scopeLabel> _776_label = _1a7c200d9_findLabelScope(_7637_scope, _7621_ident);;
	while ((_776_label == nullptr)) {
		{
			if ((((*_7637_scope.alloc)._field_parent == nullptr) || ((*_7637_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*_7637_scope.alloc)._field_parent;
			_776_label=_1a7c200d9_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1ab385e55:;
	}
	_iter_end_1ab385e55:;;
	return _776_label;;
}



inline jule::Slice<jule::Ptr<_1a7cd41ae_Data>> _1a7c11e66_getDatasFromTupleData(jule::Ptr<_1a7cd41ae_Data>* _8831_d) {
	if ((_1a7d21273_Tup((*((*(_8831_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_8831_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type84) {
				_case_begin_1ab38a6eb:;
				{
					return (*((*((*(_8831_d))))._field_Model.unsafe_cast_ptr<_1a7bb3511_TupleExprModel>()))._field_Datas;;
				}
			}
			else {
				_case_begin_1ab387c9d:;
				{
					jule::Ptr<_1a7d29ea2_Tuple> _948_t = _1a7d21273_Tup((*((*(_8831_d))))._field_Kind);;
					jule::Slice<jule::Ptr<_1a7cd41ae_Data>> _958_r = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7cd41ae_Data>>::alloc(0LL, (*(_948_t))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7cd41ae_Data>(nullptr); __jule_collection; });;
					{
						auto expr = &((*_948_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab389596:;
						if (it != expr_end) {
							jule::Ptr<_1a7d1bc96_TypeKind> _9616_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1a7cd41ae_Data>> &__jule_push_dest = _958_r; __jule_push_dest.push(jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_9616_kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)})); };
							}
							_iter_next_1ab389596:;
							++it;
							goto _iter_begin_1ab389596;
						}
						_iter_end_1ab389596:;
					};
					return _958_r;;
				}
			}
			_match_end_1ab387c37:;
		};
	} else {
		return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7cd41ae_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8831_d)); __jule_collection; });;
	};
}



inline jule::Bool _1a7c126d6_checkMut(jule::Ptr<_1a7c56c14_sema>* _12318_s, jule::Ptr<_1a7cd41ae_Data>* _12329_left, jule::Ptr<_1a7cd41ae_Data> _12346_right, jule::Ptr<_1a7b69b05_Token> _12360_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_12329_left))))._field_Mutable))) {
			_case_begin_1ab393c10:;
			{
				_1a7c59b18_pushErr((*(_12318_s)).ptr(), _12360_op, static_cast<jule::Str>(jule::Str::lit("cannot assign to immutable storage", 34)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_12346_right != nullptr) && (!((*_12346_right.alloc)._field_Mutable))) && _1a7d1d67c_Mutable((*_12346_right.alloc)._field_Kind.ptr()))) {
			_case_begin_1ab39411c:;
			{
				if ((((*(_12360_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1a7d209c0_Struct((*(_12346_right))._field_Kind) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1a7c59b18_pushErr((*(_12318_s)).ptr(), _12360_op, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_12346_right))._field_Kind), &__jule_any_type4); __jule_collection; }));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ab393b99:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ab393ade:;
	};
}



inline jule::Bool _1a7c12bc0_checkAssign(jule::Ptr<_1a7c56c14_sema>* _14221_s, jule::Ptr<_1a7cd41ae_Data>* _14236_left, jule::Ptr<_1a7cd41ae_Data> _14253_right, jule::Ptr<_1a7b69b05_Token> _14267_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7bbd8b2_FnIns> _1432_f = _1a7d20739_Fn((*((*(_14236_left))))._field_Kind.ptr());;
	if ((((_1432_f != nullptr) && ((*_1432_f.alloc)._field_Decl != nullptr)) && (*(*(_1432_f))._field_Decl.alloc)._field_Global)) {
		_1a7c59b18_pushErr((*(_14221_s)).ptr(), _14267_op, static_cast<jule::Str>(jule::Str::lit("type is not support assignment", 30)), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1a7cd4ae9_IsConst((*(_14236_left)).ptr())) {
			_case_begin_1ab3998a3:;
			{
				_1a7c59b18_pushErr((*(_14221_s)).ptr(), _14267_op, static_cast<jule::Str>(jule::Str::lit("constants is can't assign", 25)), jule::Slice<jule::Any>());
				_1a7c59e7b_pushSuggestion((*(_14221_s)).ptr(), static_cast<jule::Str>(jule::Str::lit("remove constant qualifer if you need to assign", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_14236_left))))._field_Lvalue))) {
			_case_begin_1ab39994c:;
			{
				_1a7c59b18_pushErr((*(_14221_s)).ptr(), _14267_op, static_cast<jule::Str>(jule::Str::lit("invalid expression: expected lvalue for assignment", 50)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1a7c126d6_checkMut(_14221_s, _14236_left, _14253_right, _14267_op)))) {
			_case_begin_1ab3999c4:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ab39983c:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ab3996d8:;
	};
}



inline jule::Bool _1a7c13099_isValidAstStForNextSt(jule::Any* _16431_n) {
	{
		auto &_match_expr{ (*(_16431_n)) };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ab38c467:;
			{
				return (!((*((*(_16431_n)).cast_ptr<_1a7b938ba_AssignSt>(&__jule_any_type66)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1ab39c026:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab39be05:;
			{
				return false;;
			}
		}
		_match_end_1ab399a5c:;
	};
}



inline jule::Bool _1a7c132db_isValidStForNextSt(jule::Any* _17524_st) {
	{
		auto &_match_expr{ (*(_17524_st)) };
		
		if (_match_expr.type == &__jule_any_type50 || _match_expr.type == &__jule_any_type51 || _match_expr.type == &__jule_any_type54) {
			_case_begin_1ab39c28a:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ab3a213b:;
			{
				{
					auto &_match_expr{ (*((*(_17524_st)).cast_ptr<_1a7cd41ae_Data>(&__jule_any_type31)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type41) {
						_case_begin_1ab3adc2a:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1ab3aedb3:;
						{
							return false;;
						}
					}
					_match_end_1ab3aed4c:;
				};
			}
		}
		else {
			_case_begin_1ab39e7a9:;
			{
				return false;;
			}
		}
		_match_end_1ab39e743:;
	};
}



inline jule::U64 _1a7c2d46b_removeEqFromOp(jule::U64 _216719_op) {
	{
		auto &_match_expr{ _216719_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1ab3b3504:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1ab3ae8a7:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1ab3ae91d:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1ab3b356a:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1ab3b35d1:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1ab3b3735:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1ab3b379b:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1ab3b3812:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1ab3ab2cc:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1ab3ab343:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1ab3b0028:;
			{
				return _216719_op;;
			}
		}
		_match_end_1ab3b2118:;
	};
}



inline void _1a7c2d69c_makeComptimeRange(jule::Ptr<_1a7cd41ae_Data>* _219627_d) {
	{
		
		if ((_1a7d21790_comptimeStructFields((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab3b279a:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7bd5ba4_comptimeRange>(_1a7bd5ba4_comptimeRange{._field_kind=jule::Trait(_1a7d21790_comptimeStructFields((*((*(_219627_d))))._field_Kind), (jule::Trait::Type*)&_1a7bd5984_comptimeRangeKind_mptr_data0)}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data5)});
			}
		}
		else if ((_1a7d21cac_comptimeEnumFields((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab3b7173:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7bd5ba4_comptimeRange>(_1a7bd5ba4_comptimeRange{._field_kind=jule::Trait(_1a7d21cac_comptimeEnumFields((*((*(_219627_d))))._field_Kind), (jule::Trait::Type*)&_1a7bd5984_comptimeRangeKind_mptr_data2)}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data5)});
			}
		}
		else if ((_1a7d22a7c_comptimeTypeInfos((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab3b71d9:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7bd5ba4_comptimeRange>(_1a7bd5ba4_comptimeRange{._field_kind=jule::Trait(_1a7d22a7c_comptimeTypeInfos((*((*(_219627_d))))._field_Kind), (jule::Trait::Type*)&_1a7bd5984_comptimeRangeKind_mptr_data4)}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data5)});
			}
		}
		else if ((_1a7d222c9_comptimeParams((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab3b2811:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7bd5ba4_comptimeRange>(_1a7bd5ba4_comptimeRange{._field_kind=jule::Trait(_1a7d222c9_comptimeParams((*((*(_219627_d))))._field_Kind), (jule::Trait::Type*)&_1a7bd5984_comptimeRangeKind_mptr_data3)}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data5)});
			}
		}
		else if ((_1a7d23099_comptimeStatics((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab3b2877:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7bd5ba4_comptimeRange>(_1a7bd5ba4_comptimeRange{._field_kind=jule::Trait(_1a7d23099_comptimeStatics((*((*(_219627_d))))._field_Kind), (jule::Trait::Type*)&_1a7bd5984_comptimeRangeKind_mptr_data1)}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data5)});
			}
		}
		else if ((_1a7d24100_comptimeFiles((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab3b28dd:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7bd5ba4_comptimeRange>(_1a7bd5ba4_comptimeRange{._field_kind=jule::Trait(_1a7d24100_comptimeFiles((*((*(_219627_d))))._field_Kind), (jule::Trait::Type*)&_1a7bd5984_comptimeRangeKind_mptr_data5)}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data5)});
			}
		}
		else if ((_1a7d23ad3_comptimeDecls((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab3b774a:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7bd5ba4_comptimeRange>(_1a7bd5ba4_comptimeRange{._field_kind=jule::Trait(_1a7d23ad3_comptimeDecls((*((*(_219627_d))))._field_Kind), (jule::Trait::Type*)&_1a7bd5984_comptimeRangeKind_mptr_data6)}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data5)});
			}
		}
		else {
			_case_begin_1ab3b2734:;
			{
				(*((*(_219627_d))))._field_Decl=true;
			}
		}
		_match_end_1ab3b6d43:;
	};
}



inline jule::Bool _1a7c2d966_canComptimeMatch(jule::Ptr<_1a7cd41ae_Data>* _221926_d) {
	if ((!(_1a7cccae2_isGoodValueToInfer(_221926_d)))) {
		return false;;
	};
	return (_1a7cd4ae9_IsConst((*(_221926_d)).ptr()) || (_1a7d22d13_comptimeTypeInfo((*((*(_221926_d))))._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1a7c2dc30_stmtIsDef(jule::Any* _222715_stmt) {
	{
		auto &_match_expr{ (*(_222715_stmt)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab3c15de:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1ab3c3bc9:;
			{
				jule::Ptr<_1a7c17972_MultiAssign> _22323_ma = (*(_222715_stmt)).cast_ptr<_1a7c17972_MultiAssign>(&__jule_any_type54);;
				return ((*(_22323_ma))._field_Decls.len() > 0LL);;
			}
		}
		else {
			_case_begin_1ab3c3789:;
			{
				return false;;
			}
		}
		_match_end_1ab3c3701:;
	};
}



inline jule::I64 _1a7c2e0a4_countMatchType(jule::Ptr<_1a7c181ae_Match>* _223920_m, jule::Ptr<_1a7d1bc96_TypeKind>* _223932_t) {
	jule::I64 _22406_n = 0LL;;
	_julec_label_1ab3c533a:;
	{
		auto expr = &((*((*(_223920_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3c5758:;
		if (it != expr_end) {
			jule::Ptr<_1a7c18bd7_Case> *_22429_c = it;
			{
				if (((*(_22429_c)) == nullptr)) {
					goto _iter_next_1ab3c5758;
				};
				{
					auto expr = &((*((*(_22429_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab3c655b:;
					if (it != expr_end) {
						jule::Ptr<_1a7cd41ae_Data> *_224610_expr = it;
						{
							if (((*(_224610_expr)) == nullptr)) {
								goto _iter_end_1ab3c5758;
							};
							if (_1a7d1c4d3_Equal((*(_223932_t)), (*((*(_224610_expr))))._field_Model.cast_ptr<_1a7d1bc96_TypeKind>(&__jule_any_type87))) {
								(_22406_n)++;
							};
						}
						_iter_next_1ab3c655b:;
						++it;
						goto _iter_begin_1ab3c655b;
					}
					_iter_end_1ab3c655b:;
				};
			}
			_iter_next_1ab3c5758:;
			++it;
			goto _iter_begin_1ab3c5758;
		}
		_iter_end_1ab3c5758:;
	};
	return _22406_n;;
}



inline jule::Ptr<_1a7ccd9e4_SymbolTable> _1a7c3384a_findVarFileInPackage(jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>* _4430_files, jule::Ptr<_1a7c7b178_Var>* _4454_v) {
	{
		auto expr = _4430_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab637b74:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _4514_f = *it;
			{
				if ((_1a7cd108a_findVar1(_4514_f.ptr(), _4454_v) != -1LL)) {
					return _4514_f;;
				};
			}
			_iter_next_1ab637b74:;
			++it;
			goto _iter_begin_1ab637b74;
		}
		_iter_end_1ab637b74:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7c7b178_Var> _1a7c33cbd_findVarInPackage(jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>* _5526_files, jule::Str* _5550_ident, jule::Bool _5562_binded) {
	{
		auto expr = _5526_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab638e2d:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _5614_f = *it;
			{
				jule::Ptr<_1a7c7b178_Var> _577_v = _1a7cce40c_FindVar(_5614_f.ptr(), (*(_5550_ident)), _5562_binded);;
				if ((_577_v != nullptr)) {
					return _577_v;;
				};
			}
			_iter_next_1ab638e2d:;
			++it;
			goto _iter_begin_1ab638e2d;
		}
		_iter_end_1ab638e2d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7d1aea4_TypeAlias> _1a7c341ec_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>* _6732_files, jule::Str* _6756_ident, jule::Bool _6768_binded) {
	{
		auto expr = _6732_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab63a4d4:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _6814_f = *it;
			{
				jule::Ptr<_1a7d1aea4_TypeAlias> _697_ta = _1a7cce808_FindTypeAlias(_6814_f.ptr(), (*(_6756_ident)), _6768_binded);;
				if ((_697_ta != nullptr)) {
					return _697_ta;;
				};
			}
			_iter_next_1ab63a4d4:;
			++it;
			goto _iter_begin_1ab63a4d4;
		}
		_iter_end_1ab63a4d4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7ba5ca6_Struct> _1a7c346a3_findStructInPackage(jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>* _7929_files, jule::Str* _7953_ident, jule::Bool _7965_binded) {
	{
		auto expr = _7929_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab63ba13:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _8014_f = *it;
			{
				jule::Ptr<_1a7ba5ca6_Struct> _817_s = _1a7ccec04_FindStruct(_8014_f.ptr(), (*(_7953_ident)), _7965_binded);;
				if ((_817_s != nullptr)) {
					return _817_s;;
				};
			}
			_iter_next_1ab63ba13:;
			++it;
			goto _iter_begin_1ab63ba13;
		}
		_iter_end_1ab63ba13:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7bba8d1_Fn> _1a7c34a9e_findFnInPackage(jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>* _9125_files, jule::Str* _9149_ident, jule::Bool _9161_binded) {
	{
		auto expr = _9125_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab63d042:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _9214_file = *it;
			{
				jule::Ptr<_1a7bba8d1_Fn> _937_f = _1a7cd0100_FindFn(_9214_file.ptr(), (*(_9149_ident)), _9161_binded);;
				if ((_937_f != nullptr)) {
					return _937_f;;
				};
			}
			_iter_next_1ab63d042:;
			++it;
			goto _iter_begin_1ab63d042;
		}
		_iter_end_1ab63d042:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7bce362_Trait> _1a7c34e23_findTraitInPackage(jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>* _10328_files, jule::Str* _10352_ident) {
	{
		auto expr = _10328_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab63de33:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _10414_f = *it;
			{
				jule::Ptr<_1a7bce362_Trait> _1057_t = _1a7cd0441_FindTrait(_10414_f.ptr(), (*(_10352_ident)));;
				if ((_1057_t != nullptr)) {
					return _1057_t;;
				};
			}
			_iter_next_1ab63de33:;
			++it;
			goto _iter_begin_1ab63de33;
		}
		_iter_end_1ab63de33:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7bd1a6d_Enum> _1a7c35297_findEnumInPackage(jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>* _11527_files, jule::Str* _11551_ident) {
	{
		auto expr = _11527_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab64085d:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _11614_f = *it;
			{
				jule::Ptr<_1a7bd1a6d_Enum> _1177_e = _1a7cd0782_FindEnum(_11614_f.ptr(), (*(_11551_ident)));;
				if ((_1177_e != nullptr)) {
					return _1177_e;;
				};
			}
			_iter_next_1ab64085d:;
			++it;
			goto _iter_begin_1ab64085d;
		}
		_iter_end_1ab64085d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7bd3278_TypeEnum> _1a7c3572b_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>* _12731_files, jule::Str* _12755_ident) {
	{
		auto expr = _12731_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab641bb1:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _12814_f = *it;
			{
				jule::Ptr<_1a7bd3278_TypeEnum> _1297_e = _1a7cd0ac3_FindTypeEnum(_12814_f.ptr(), (*(_12755_ident)));;
				if ((_1297_e != nullptr)) {
					return _1297_e;;
				};
			}
			_iter_next_1ab641bb1:;
			++it;
			goto _iter_begin_1ab641bb1;
		}
		_iter_end_1ab641bb1:;
	};
	return nullptr;;
}



inline jule::Any _1a7c35ad3_defByIdentPackage(jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>* _13827_files, jule::Str* _13851_ident, jule::Bool _13863_binded) {
	{
		auto expr = _13827_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab63d5d6:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _13914_file = *it;
			{
				jule::Any _1407_def = _1a7cd1de3_defByIdent(_13914_file.ptr(), _13851_ident, _13863_binded);;
				if ((_1407_def != nullptr)) {
					return _1407_def;;
				};
			}
			_iter_next_1ab63d5d6:;
			++it;
			goto _iter_begin_1ab63d5d6;
		}
		_iter_end_1ab63d5d6:;
	};
	return nullptr;;
}



inline jule::Bool _1a7c3bb94_isStdPackage(jule::Str* _36918_f, jule::Str _36926_p) {
	return _1daebc991_HasPrefix((*(_36918_f)), _1daede4b8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1d9257eb4_PathStdlib; (*it++) = _36926_p; __jule_collection; })));;
}



inline jule::Bool _1a7c542c7_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab6540ad:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ab654124:;
			{
				jule::Ptr<_1a7bb2994_StructSubIdentExprModel> _187_model = (*(_1328_m)).cast_ptr<_1a7bb2994_StructSubIdentExprModel>(&__jule_any_type101);;
				return (((*(_187_model))._field_Field != nullptr) && _1a7c542c7_isValidModelForRef(&((*((*_187_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ab65418a:;
			{
				jule::Ptr<_1a7bad2ec_UnaryExprModel> _217_unary = (*(_1328_m)).cast_ptr<_1a7bad2ec_UnaryExprModel>(&__jule_any_type113);;
				if (((*((*(_217_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1a7d1e969_Ptr((*((*_217_unary.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1a7d1e6d3_Sptr((*((*(_217_unary))._field_Expr))._field_Kind) == nullptr)) {
					return false;;
				};
				return _1a7c542c7_isValidModelForRef(&((*(*(_217_unary))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1ab654201:;
			{
				jule::Ptr<_1a7bb0783_IndexingExprModel> _357_indexing = (*(_1328_m)).cast_ptr<_1a7bb0783_IndexingExprModel>(&__jule_any_type53);;
				if ((_1a7d2021c_Arr((*((*(_357_indexing))._field_Expr))._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1a7c542c7_isValidModelForRef(&((*(*(_357_indexing))._field_Expr.alloc)._field_Model));;
			}
		}
		else {
			_case_begin_1ab653ba1:;
			{
				return false;;
			}
		}
		_match_end_1ab653783:;
	};
}



inline _1d9144ab5_Log _1a7c5477d_compilerErr(jule::Ptr<_1a7b69b05_Token>* _4717_token, jule::Bool _4732_line, jule::Str _4744_fmt, jule::Slice<jule::Any> _4757_args) {
	_1d9144ab5_Log _486_log = _1d9144ab5_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4717_token))))._field_Row, ._field_Column=(*((*(_4717_token))))._field_Column, ._field_Path=(*((*((*(_4717_token))))._field_File))._field_Path, ._field_Text=_1d9145027_Logf(_4744_fmt, _4757_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
	if (_4732_line) {
		_486_log._field_Line=_1a7b713d1_GetRow((*((*(_4717_token))))._field_File, (*((*(_4717_token))))._field_Row);
	};
	return _486_log;;
}



inline jule::Bool _1a7c54b02_impIsLookupable(jule::Ptr<_1a7c36793_ImportInfo>* _6121_i, jule::Str* _6138_ident) {
	if ((*((*(_6121_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_6121_i))))._field_ImportAll))) {
		if (((*((*(_6121_i))))._field_Selected.len() > 0LL)) {
			return _1a7c39158_existIdent((*(_6121_i)).ptr(), (*(_6138_ident)));;
		};
	};
	return (*((*(_6121_i))))._field_ImportAll;;
}



inline void _1a7c54e32_appendRetVars(jule::Slice<jule::Ptr<_1a7c7b178_Var>>* _7323_dest, jule::Ptr<_1a7bbd8b2_FnIns>* _7342_f) {
	if ((_1a7bbad87_IsVoid((*((*(_7342_f))))._field_Decl.ptr()) || ((*((*(_7342_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>> _786_types = _1a7bbeae4_Types((*(_7342_f)).ptr());;
	{
		auto expr = &((*((*(*((*(_7342_f))))._field_Decl.alloc)._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab665dc2:;
		if (it != expr_end) {
			jule::I64 _797_i = it - expr->begin();
			jule::Ptr<_1a7b69b05_Token> _7914_ident = *it;
			{
				if ((_1a7b6c4dc_IsIgnoreIdent((*(_7914_ident))._field_Kind) || _1a7b6c7a6_IsAnonIdent((*_7914_ident.alloc)._field_Kind))) {
					goto _iter_next_1ab665dc2;
				};
				{ jule::Slice<jule::Ptr<_1a7c7b178_Var>> &__jule_push_dest = (*(_7323_dest)); __jule_push_dest.push(jule::new_ptr<_1a7c7b178_Var>(_1a7c7b178_Var{._field_Scope=(*((*(_7342_f))))._field_Scope, ._field_Token=_7914_ident, ._field_Ident=(*_7914_ident.alloc)._field_Kind, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1a7d244a7_TypeSymbol>(_1a7d244a7_TypeSymbol{._field_Decl=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Kind=_786_types[_797_i]}), ._field_Value=jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>(nullptr), ._field_RetOrder=_797_i, ._field_Depends=jule::Slice<jule::Ptr<_1a7c7b178_Var>>(nullptr)})); };
			}
			_iter_next_1ab665dc2:;
			++it;
			_797_i++;
			goto _iter_begin_1ab665dc2;
		}
		_iter_end_1ab665dc2:;
	};
	if ((((*(*((*((*(_7342_f))))._field_Decl))._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_7323_dest)).len() == 1LL))) {
		(*((*(_7323_dest))[((*(_7323_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1a7c5521d_appendParamVars(jule::Slice<jule::Ptr<_1a7c7b178_Var>>* _10325_dest, jule::Ptr<_1a7bbd8b2_FnIns>* _10344_f) {
	if (((*((*(_10344_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_10344_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab66a723:;
		if (it != expr_end) {
			jule::Ptr<_1a7bbc839_ParamIns> _10814_p = *it;
			{
				if ((_1a7b6c4dc_IsIgnoreIdent((*((*(_10814_p))._field_Decl))._field_Ident) || _1a7b6c7a6_IsAnonIdent((*(*(_10814_p))._field_Decl.alloc)._field_Ident))) {
					goto _iter_next_1ab66a723;
				};
				jule::Ptr<_1a7c7b178_Var> _1137_v = jule::new_ptr<_1a7c7b178_Var>(_1a7c7b178_Var{._field_Scope=(*((*(_10344_f))))._field_Scope, ._field_Token=(*(*(_10814_p))._field_Decl.alloc)._field_Token, ._field_Ident=(*(*(_10814_p))._field_Decl.alloc)._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*(*(_10814_p))._field_Decl.alloc)._field_Mutable, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=(*(*(_10814_p))._field_Decl.alloc)._field_Reference, ._field_Kind=jule::new_ptr<_1a7d244a7_TypeSymbol>(_1a7d244a7_TypeSymbol{._field_Decl=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr)}), ._field_Value=jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a7c7b178_Var>>(nullptr)});;
				{
					
					if (_1a7bb955b_IsSelf((*(_10814_p))._field_Decl)) {
						_case_begin_1ab66e606:;
						{
							(*((*(_1137_v))._field_Kind))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_10344_f))))._field_Owner, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data0)});
							(*_1137_v.alloc)._field_Reference=(!(_1a7bb97e2_IsRef((*(_10814_p))._field_Decl)));
							if (_1a7bb97e2_IsRef((*(_10814_p))._field_Decl)) {
								((*(_1137_v))._field_Ident).mut_slice(1LL);;
								(*((*(*(_1137_v))._field_Kind.alloc)._field_Kind))._field_Kind=jule::Trait(jule::new_ptr<_1a7d288da_Sptr>(_1a7d288da_Sptr{._field_Elem=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=(*(*((*(_1137_v))._field_Kind))._field_Kind.alloc)._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_1137_v))._field_Kind))._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data23);
							};
						}
					}
					else if ((*(*(_10814_p))._field_Decl.alloc)._field_Variadic) {
						_case_begin_1ab66e2d7:;
						{
							(*((*(_1137_v))._field_Kind))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7d293ad_Slc>(_1a7d293ad_Slc{._field_Elem=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=(*((*_10814_p.alloc)._field_Kind))._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*(_10814_p))._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data24)});
						}
					}
					else {
						_case_begin_1ab66e271:;
						{
							(*((*(_1137_v))._field_Kind))._field_Kind=(*_10814_p.alloc)._field_Kind;
						}
					}
					_match_end_1ab66e13e:;
				};
				{ jule::Slice<jule::Ptr<_1a7c7b178_Var>> &__jule_push_dest = (*(_10325_dest)); __jule_push_dest.push(_1137_v); };
			}
			_iter_next_1ab66a723:;
			++it;
			goto _iter_begin_1ab66a723;
		}
		_iter_end_1ab66a723:;
	};
}



inline void _1a7c55509_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>* _16334_dest, jule::Ptr<_1a7bbd8b2_FnIns>* _16359_f) {
	jule::I64 _1646_size = (*((*(_16359_f))))._field_Generics.len();;
	if (((*((*((*(_16359_f))))._field_Decl))._field_Owner != nullptr)) {
		_1646_size+=(*(*((*((*(_16359_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1646_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_16359_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab677a1b:;
		if (it != expr_end) {
			jule::I64 _1737_i = it - expr->begin();
			jule::Ptr<_1a7d1a3b0_InsGeneric> _17314_g = *it;
			{
				if ((_17314_g == nullptr)) {
					goto _iter_next_1ab677a1b;
				};
				jule::Ptr<_1a7b92127_GenericDecl> _1777_decl = (*(*((*(_16359_f))))._field_Decl.alloc)._field_Generics[_1737_i];;
				{ jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>> &__jule_push_dest = (*(_16334_dest)); __jule_push_dest.push(jule::new_ptr<_1a7d1aea4_TypeAlias>(_1a7d1aea4_TypeAlias{._field_Scope=(*(*((*(_16359_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1777_decl.alloc)._field_Token, ._field_Ident=(*(_1777_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1a7d244a7_TypeSymbol>(_1a7d244a7_TypeSymbol{._field_Decl=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Kind=(*(_17314_g))._field_Kind}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr)})); };
			}
			_iter_next_1ab677a1b:;
			++it;
			_1737_i++;
			goto _iter_begin_1ab677a1b;
		}
		_iter_end_1ab677a1b:;
	};
	if (((*(*((*(_16359_f))))._field_Decl.alloc)._field_Owner != nullptr)) {
		jule::Ptr<_1a7ba8b11_StructIns> _1897_owner = (*((*(_16359_f))))._field_Owner;;
		{
			auto expr = &((*_1897_owner.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab6793ad:;
			if (it != expr_end) {
				jule::I64 _1908_i = it - expr->begin();
				jule::Ptr<_1a7d1a3b0_InsGeneric> _19015_g = *it;
				{
					jule::Ptr<_1a7b92127_GenericDecl> _1918_decl = (*((*(_1897_owner))._field_Decl))._field_Generics[_1908_i];;
					{ jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>> &__jule_push_dest = (*(_16334_dest)); __jule_push_dest.push(jule::new_ptr<_1a7d1aea4_TypeAlias>(_1a7d1aea4_TypeAlias{._field_Scope=(*(*((*(_16359_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1918_decl.alloc)._field_Token, ._field_Ident=(*(_1918_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1a7d244a7_TypeSymbol>(_1a7d244a7_TypeSymbol{._field_Decl=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Kind=(*(_19015_g))._field_Kind}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1ab6793ad:;
				++it;
				_1908_i++;
				goto _iter_begin_1ab6793ad;
			}
			_iter_end_1ab6793ad:;
		};
	};
}



inline jule::Ptr<_1a7ccd9e4_SymbolTable> _1a7c5587d_findFile(jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>* _20418_files, jule::Ptr<_1a7b7038b_File>* _20442_handler) {
	{
		auto expr = _20418_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab67d48e:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _20514_fl = *it;
			{
				if (((*(_20514_fl))._field_File == (*(_20442_handler)))) {
					return _20514_fl;;
				};
			}
			_iter_next_1ab67d48e:;
			++it;
			goto _iter_begin_1ab67d48e;
		}
		_iter_end_1ab67d48e:;
	};
	return nullptr;;
}



inline void _1a7c55d34_pushSuggestion(_1d9144ab5_Log* _21330_log, jule::Str _21341_fmt, jule::Slice<jule::Any> _21354_args) {
	(*(_21330_log))._field_Suggestion=_1d9145027_Logf(_21341_fmt, _21354_args);
}



inline void _1a7c7940c_pushImplemented(jule::Ptr<_1a7bce362_Trait> _300524_t, jule::Ptr<_1a7ba5ca6_Struct>* _300540_d) {
	_julec_label_1ab67d060:;
	{
		
		if (((*(_300524_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1ab6811b7:;
			{
				{
					auto expr = &((*_300524_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab681b24:;
					if (it != expr_end) {
						jule::Ptr<_1a7ba5ca6_Struct> _300910_s = *it;
						{
							if ((_300910_s == (*(_300540_d)))) {
								goto _match_end_1ab68064a;
							};
						}
						_iter_next_1ab681b24:;
						++it;
						goto _iter_begin_1ab681b24;
					}
					_iter_end_1ab681b24:;
				};
				goto _case_begin_1ab680705;
			}
		}
		else {
			_case_begin_1ab680705:;
			{
				(*(_300524_t))._field_Implemented=jule::append((*_300524_t.alloc)._field_Implemented,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_300540_d)); __jule_collection; }));
			}
		}
		_match_end_1ab68064a:;
	};
	{
		auto expr = &((*(_300524_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab68253c:;
		if (it != expr_end) {
			jule::Ptr<_1a7d244a7_TypeSymbol> _301814_i = *it;
			{
				_1a7c7940c_pushImplemented(_1a7d20c56_Trait((*(_301814_i))._field_Kind.ptr()), _300540_d);
			}
			_iter_next_1ab68253c:;
			++it;
			goto _iter_begin_1ab68253c;
		}
		_iter_end_1ab68253c:;
	};
}



inline void _1a7c796e8_pushImplements(jule::Ptr<_1a7ba5ca6_Struct>* _302324_s, jule::Ptr<_1a7bce362_Trait> _302340_t) {
	_julec_label_1ab6817c2:;
	{
		
		if (((*((*(_302324_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1ab683c58:;
			{
				{
					auto expr = &((*((*(_302324_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab6846b5:;
					if (it != expr_end) {
						jule::Ptr<_1a7bce362_Trait> _302710_b = *it;
						{
							if ((_302710_b == _302340_t)) {
								goto _match_end_1ab6831db;
							};
						}
						_iter_next_1ab6846b5:;
						++it;
						goto _iter_begin_1ab6846b5;
					}
					_iter_end_1ab6846b5:;
				};
				goto _case_begin_1ab683296;
			}
		}
		else {
			_case_begin_1ab683296:;
			{
				{ jule::Slice<jule::Ptr<_1a7bce362_Trait>> &__jule_push_dest = (*((*(_302324_s))))._field_Implements; __jule_push_dest.push(_302340_t); };
			}
		}
		_match_end_1ab6831db:;
	};
	{
		auto expr = &((*(_302340_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6850cd:;
		if (it != expr_end) {
			jule::Ptr<_1a7d244a7_TypeSymbol> _303614_i = *it;
			{
				_1a7c796e8_pushImplements(_302324_s, _1a7d20c56_Trait((*(_303614_i))._field_Kind.ptr()));
			}
			_iter_next_1ab6850cd:;
			++it;
			goto _iter_begin_1ab6850cd;
		}
		_iter_end_1ab6850cd:;
	};
}



inline void _1a7c79b49_pushRuntimeToStr(jule::Ptr<_1a7c56c14_sema>* _304126_s, jule::Ptr<_1a7d1bc96_TypeKind>* _304141_t, jule::Ptr<_1a7b69b05_Token>* _304160_token, jule::Ptr<_1a7bc1a4c_ReferenceStack> _30426_refers) {
	if ((((*((*((*(_304126_s))))._field_meta))._field_runtime == nullptr) || _1a7d1cdc9_IsNil((*(_304141_t)).ptr()))) {
		return;;
	};
	jule::Ptr<_1a7bbd8b2_FnIns> _30466_f = _1a7bbbddd_instanceForce(_1a78253d7_runtimeFindFn(&((*(*((*(_304126_s))))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5))));;
	(*(_30466_f))._field_Generics=jule::append((*_30466_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a7d1a3b0_InsGeneric>(_1a7d1a3b0_InsGeneric{._field_Kind=(*(_304141_t)), ._field_Constraint=jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>(nullptr)}); __jule_collection; }));
	jule::Bool _30482_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7c731e7_checkGenericFn((*(_304126_s)), &(_30466_f), _304160_token);
		_30482_ok = __jule_assign_result.__jule_result_arg0;
	});
	if ((!(_30482_ok))) {
		__jule_panic_s(jule::Str::lit("sema: toStr evaluation failed, this is an implementation mistake", 64) + jule::Str("\nlocation: std/jule/sema/sema.jule:3050:3"));;
	};
	if ((_30426_refers != nullptr)) {
		_1a7bc2861_Push(_30426_refers, jule::Any(_30466_f, &__jule_any_type7));
	};
}



inline jule::Bool _1a7cb9518_traitHasReferenceReceiver(jule::Ptr<_1a7bce362_Trait>* _2831_t) {
	{
		auto expr = &((*((*(_2831_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab94ee36:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> *_299_f = it;
			{
				if ((*((*(_299_f))))._field_Statically) {
					goto _iter_next_1ab94ee36;
				};
				jule::Ptr<_1a7bb8e0c_Param> _353_p = (*(*(_299_f)).alloc)._field_Params[0LL];;
				if ((_1a7bb97e2_IsRef(_353_p.ptr()) && _1a7bb955b_IsSelf(_353_p))) {
					return true;;
				};
			}
			_iter_next_1ab94ee36:;
			++it;
			goto _iter_begin_1ab94ee36;
		}
		_iter_end_1ab94ee36:;
	};
	return false;;
}



inline jule::Bool _1a7cb989d_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1a7cd41ae_Data>* _4333_d) {
	jule::Str _442_value = _1c004567d_FmtFloat(_1c006d156_AsF64((*((*(_4333_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _1c0060c70_CheckBitFloat(_442_value, _1c005e7c9_BitsizeOf((*(_4321_kind))));;
}



inline jule::Bool _1a7cb9c22_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1a7cd41ae_Data>* _4830_d) {
	jule::F64 _492_min = _1c0065e62_Min(_4818_kind);;
	jule::F64 _502_max = _1c00661e8_Max(_4818_kind);;
	{
		
		if (_1c006ee9e_IsF64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1ab9539b7:;
			{
				jule::F64 _533_x = _1c006c8a3_ReadF64((*((*(_4830_d))))._field_Constant);;
				jule::F64 _543_i;
				jule::F64 _546_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1c001b7a8_Modf(_533_x);
					_543_i = __jule_assign_result.__jule_result_arg0;
					_546_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_546_frac != 0LL)) {
					return false;;
				};
				return ((_543_i >= _492_min) && (_543_i <= _502_max));;
			}
		}
		else if (_1c006e6eb_IsU64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1ab953a2d:;
			{
				jule::F64 _603_x = _1c006d156_AsF64((*((*(_4830_d))))._field_Constant);;
				if ((_603_x <= _502_max)) {
					return true;;
				};
			}
		}
		else if (_1c006e465_IsI64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1ab953aa5:;
			{
				jule::F64 _653_x = _1c006d156_AsF64((*((*(_4830_d))))._field_Constant);;
				return ((_492_min <= _653_x) && (_653_x <= _502_max));;
			}
		}
		_match_end_1ab953896:;
	};
	return false;;
}



inline jule::Bool _1a7cba0da_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1a7cd41ae_Data>* _7132_d) {
	jule::F64 _722_max = _1c00661e8_Max(_7120_kind);;
	if (((*((*(_7132_d))))._field_IsRune && (_7120_kind == static_cast<jule::Str>(jule::Str::lit("u8", 2))))) {
		return _1a7c9cb39_IsAscii(static_cast<jule::I32>(_1c006bd69_ReadI64((*((*(_7132_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_1c006ee9e_IsF64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1ab959737:;
			{
				jule::F64 _793_x = _1c006c8a3_ReadF64((*((*(_7132_d))))._field_Constant);;
				if ((_793_x < 0LL)) {
					return false;;
				};
				jule::F64 _833_i;
				jule::F64 _836_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1c001b7a8_Modf(_793_x);
					_833_i = __jule_assign_result.__jule_result_arg0;
					_836_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_836_frac != 0LL)) {
					return false;;
				};
				return (_833_i <= _722_max);;
			}
		}
		else if (_1c006e6eb_IsU64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1ab95979d:;
			{
				jule::F64 _893_x = _1c006d156_AsF64((*((*(_7132_d))))._field_Constant);;
				if ((_893_x <= _722_max)) {
					return true;;
				};
			}
		}
		else if (_1c006e465_IsI64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1ab959814:;
			{
				jule::F64 _943_x = _1c006d156_AsF64((*((*(_7132_d))))._field_Constant);;
				return ((0LL <= _943_x) && (_943_x <= _722_max));;
			}
		}
		_match_end_1ab958cdb:;
	};
	return false;;
}



inline jule::Bool _1a7cba45e_intAssignable(jule::Str _10018_kind, jule::Ptr<_1a7cd41ae_Data>* _10030_d) {
	{
		
		if (_1c006921d_IsSigInt(_10018_kind)) {
			_case_begin_1ab95e363:;
			{
				return _1a7cb9c22_sigAssignable(_10018_kind, _10030_d);;
			}
		}
		else if (_1c006952b_IsUnsigInt(_10018_kind)) {
			_case_begin_1ab95e3eb:;
			{
				return _1a7cba0da_unsigAssignable(_10018_kind, _10030_d);;
			}
		}
		else {
			_case_begin_1ab95dd8a:;
			{
				return false;;
			}
		}
		_match_end_1ab95dcad:;
	};
}



inline void _1a7cc6954_checkMutRiskOfStructLit(jule::Ptr<_1a7c56c14_sema>* _92133_s, jule::Ptr<_1a7badbc1_StructLitExprModel>* _92144_m) {
	{
		auto expr = &((*((*(_92144_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9604c9:;
		if (it != expr_end) {
			jule::Ptr<_1a7bad82a_StructArgExprModel> *_9229_arg = it;
			{
				if ((*((*((*((*(_9229_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1ab9604c9;
				};
				if (((!((*((*(*(_9229_arg)).alloc)._field_Expr))._field_Mutable)) && _1a7d1d67c_Mutable((*(*((*(_9229_arg))))._field_Expr.alloc)._field_Kind.ptr()))) {
					_1a7c59b18_pushErr((*(_92133_s)).ptr(), (*(*(_9229_arg)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*((*(_9229_arg))))._field_Expr))._field_Kind), &__jule_any_type4); __jule_collection; }));
				};
			}
			_iter_next_1ab9604c9:;
			++it;
			goto _iter_begin_1ab9604c9;
		}
		_iter_end_1ab9604c9:;
	};
}



inline jule::Ptr<_1a7d1bc96_TypeKind> _1a7ccc790_lenKind(void) {
	return _1a7e02a5d_primInt;;
}



inline jule::Bool _1a7cccae2_isGoodValueToInfer(jule::Ptr<_1a7cd41ae_Data>* _142624_d) {
	return (!(_1a7cd45cc_IsNil((*(_142624_d)).ptr())));;
}



inline jule::Ptr<_1a7b7e4cc_Directive> _1a7d1351d_findDirective(jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>* _440323_directives, jule::Str _440354_d) {
	{
		auto expr = _440323_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abac2608:;
		if (it != expr_end) {
			jule::Ptr<_1a7b7e4cc_Directive> _440414_dr = *it;
			{
				if (((*((*(_440414_dr))._field_Tag))._field_Kind == _440354_d)) {
					return _440414_dr;;
				};
			}
			_iter_next_1abac2608:;
			++it;
			goto _iter_begin_1abac2608;
		}
		_iter_end_1abac2608:;
	};
	return nullptr;;
}



inline jule::Any _1a7d138d6_findBuiltinsImport(jule::Str* _441224_ident, jule::Ptr<_1a7c36793_ImportInfo> _441236_imp) {
	return _1a7e0616b_findPackageBuiltinDef(&((*(_441236_imp))._field_LinkPath), _441224_ident);;
}



inline void _1a7d13b17_fitBitsize(jule::Ptr<_1a7cd41ae_Data>* _442120_d) {
	jule::Ptr<_1a7d24dae_Prim> _44226_prim = _1a7d1e44c_Prim((*((*(_442120_d))))._field_Kind.ptr());;
	jule::I64 _44232_z = _1c005e7c9_BitsizeOf(_1a7d25233_Str(_44226_prim.ptr()));;
	{
		
		if (_1c006e465_IsI64((*((*(_442120_d))))._field_Constant.ptr())) {
			_case_begin_1abac5b4a:;
			{
				jule::I64 _44263_k = _1c0061303_BitsizeOfInt(_1c006bd69_ReadI64((*((*(_442120_d))))._field_Constant));;
				if (((_44263_k > _44232_z) || _1c006952b_IsUnsigInt((*_44226_prim.alloc)._field_Kind))) {
					(*(*((*(_442120_d))))._field_Constant.alloc)._field_Kind=_1c005eb1a_IntFromBits(_44263_k);
					(*((*(_442120_d))))._field_Kind=(*((*(_1a7e04db2_findBuiltinTypeAlias((*(*((*(_442120_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1c006e6eb_IsU64((*((*(_442120_d))))._field_Constant.ptr())) {
			_case_begin_1abac5bb1:;
			{
				jule::I64 _44323_k = _1c00615bc_BitsizeOfUint(_1c006c100_ReadU64((*((*(_442120_d))))._field_Constant));;
				if (((_44323_k > _44232_z) || _1c006921d_IsSigInt((*_44226_prim.alloc)._field_Kind))) {
					(*(*((*(_442120_d))))._field_Constant.alloc)._field_Kind=_1c005eda1_UintFromBits(_44323_k);
					(*((*(_442120_d))))._field_Kind=(*((*(_1a7e04db2_findBuiltinTypeAlias((*(*((*(_442120_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1c006ee9e_IsF64((*((*(_442120_d))))._field_Constant.ptr())) {
			_case_begin_1abac5c38:;
			{
				if ((_44232_z == 64LLU)) {
					return;;
				};
				jule::I64 _44423_k = _1c0061039_BitsizeOfFloat(_1c006c8a3_ReadF64((*((*(_442120_d))))._field_Constant));;
				if ((_44423_k > _44232_z)) {
					(*(*((*(_442120_d))))._field_Constant.alloc)._field_Kind=_1c006016a_FloatFromBits(_44423_k);
					(*((*(_442120_d))))._field_Kind=(*((*(_1a7e04db2_findBuiltinTypeAlias((*(*((*(_442120_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1abac5a29:;
	};
}



inline void _1a7d13e47_makeStructLitAlloc(jule::Ptr<_1a7cd41ae_Data>* _445028_d, jule::Ptr<_1a7badbc1_StructLitExprModel>* _445043_lit) {
	(*((*(_445028_d))))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7d288da_Sptr>(_1a7d288da_Sptr{._field_Elem=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_445043_lit))))._field_Strct, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data23)});
	(*((*(_445028_d))))._field_Model=jule::Any(jule::new_ptr<_1a7badebd_AllocStructLitExprModel>(_1a7badebd_AllocStructLitExprModel{._field_Lit=(*(_445043_lit))}), &__jule_any_type115);
}



inline jule::Ptr<_1a7c7b178_Var> _1a7d142bb_buildErrorVar(jule::Ptr<_1a7c1397e_Scope>* _446123_s, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _446139_fc) {
	return jule::new_ptr<_1a7c7b178_Var>(_1a7c7b178_Var{._field_Scope=(*(_446123_s)), ._field_Token=(*((*(_446139_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_Kind=(*(_1a7e04db2_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("any", 3)))))._field_Kind, ._field_Value=jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a7c7b178_Var>>(nullptr)});;
}



inline jule::Any _1a7d14640_findBuiltinsSema(jule::Str* _447622_ident, jule::Ptr<_1a7c56c14_sema> _447638_s) {
	{
		auto expr = &((*((*(_447638_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abad4d79:;
		if (it != expr_end) {
			jule::Ptr<_1a7c36793_ImportInfo> _447714_imp = *it;
			{
				if (((*(_447714_imp))._field_ImportAll || _1a7c39158_existIdent(_447714_imp, (*(_447622_ident))))) {
					jule::Any _44798_def = _1a7d138d6_findBuiltinsImport(_447622_ident, _447714_imp);;
					if ((_44798_def != nullptr)) {
						return _44798_def;;
					};
				};
			}
			_iter_next_1abad4d79:;
			++it;
			goto _iter_begin_1abad4d79;
		}
		_iter_end_1abad4d79:;
	};
	jule::Str _44876_ppath = _1a7b70a73_Dir((*(*(_447638_s))._field_file.alloc)._field_File.ptr());;
	if (_1daebc991_HasPrefix(_44876_ppath, _1d9257eb4_PathStdlib)) {
		(_44876_ppath).mut_slice(_1d9257eb4_PathStdlib.len());;
		_44876_ppath=(jule::Str::lit("std", 3) + _1daec3337_Replace(_44876_ppath, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));
		return _1a7e0616b_findPackageBuiltinDef(&(_44876_ppath), _447622_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1a7d14909_isOkForShifting(jule::Ptr<_1a7cd41ae_Data>* _450125_d) {
	if (_1a7cd4ae9_IsConst((*(_450125_d)).ptr())) {
		{
			
			if (_1c006e465_IsI64((*((*(_450125_d))))._field_Constant.ptr())) {
				_case_begin_1abad8333:;
				{
					return (_1c006bd69_ReadI64((*((*(_450125_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_1c006e6eb_IsU64((*((*(_450125_d))))._field_Constant.ptr())) {
				_case_begin_1abad83cc:;
				{
					return true;;
				}
			}
			else if (_1c006ee9e_IsF64((*((*(_450125_d))))._field_Constant.ptr())) {
				_case_begin_1abad8454:;
				{
					return (_1c006c8a3_ReadF64((*((*(_450125_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_1abad829a:;
				{
					return false;;
				}
			}
			_match_end_1abad81bd:;
		};
	};
	jule::Ptr<_1a7d24dae_Prim> _45142_prim = _1a7d1e44c_Prim((*((*(_450125_d))))._field_Kind.ptr());;
	return ((_45142_prim != nullptr) && _1c00697e5_IsInt(_1a7d25233_Str(_45142_prim)));;
}



inline jule::Bool _1a7d14cd3_isInstancedStruct(jule::Ptr<_1a7ba8b11_StructIns> _451822_s) {
	return ((*((*(_451822_s))._field_Decl))._field_Generics.len() == (*_451822_s.alloc)._field_Generics.len());;
}



inline jule::Bool _1a7d150d0_isPtrArithmeticCompatible(jule::Ptr<_1a7cd41ae_Data>* _452235_l, jule::Ptr<_1a7cd41ae_Data>* _452250_r) {
	jule::Ptr<_1a7d2c1a2_Ptr> _45232_ptr = _1a7d1e969_Ptr((*((*(_452250_r))))._field_Kind.ptr());;
	if ((_45232_ptr != nullptr)) {
		return _1a7d1c4d3_Equal((*(_1a7d1e969_Ptr((*((*(_452235_l))))._field_Kind)))._field_Elem, (*_45232_ptr.alloc)._field_Elem);;
	};
	if ((_1a7cd4ae9_IsConst((*(_452250_r)).ptr()) && (*((*(_452250_r))))._field_untyped)) {
		return (_1a7cba45e_intAssignable(static_cast<jule::Str>(jule::Str::lit("int", 3)), _452250_r) || _1a7cba45e_intAssignable(static_cast<jule::Str>(jule::Str::lit("uint", 4)), _452250_r));;
	};
	_1a7cba948_typeCompatibilityChecker _45326_tcc = _1a7cba948_typeCompatibilityChecker{._field_s=jule::Ptr<_1a7c56c14_sema>(nullptr), ._field_dest=_1a7e02a5d_primInt, ._field_src=(*((*(_452250_r))))._field_Kind, ._field_errorToken=jule::Ptr<_1a7b69b05_Token>(nullptr)};;
	if (_1a7cbc142_check(&_45326_tcc)) {
		return true;;
	};
	_45326_tcc._field_dest=_1a7e02695_primUint;
	return _1a7cbc142_check(&_45326_tcc);;
}



inline void _1a7d155db_applyRuntimeToStr(jule::Ptr<_1a7c56c14_sema>* _454327_s, jule::Ptr<_1a7d1bc96_TypeKind>* _454342_from, jule::Ptr<_1a7d1bc96_TypeKind>* _454364_to, jule::Ptr<_1a7b69b05_Token>* _45447_token, jule::Ptr<_1a7bc1a4c_ReferenceStack> _454426_refers) {
	jule::Ptr<_1a7d24dae_Prim> _45452_prim = _1a7d1e44c_Prim((*(_454364_to)).ptr());;
	if ((_45452_prim != nullptr)) {
		if (_1a7d28610_IsAny(_45452_prim)) {
			_1a7c79b49_pushRuntimeToStr(_454327_s, _454342_from, _45447_token, _454426_refers);
		};
		return;;
	};
	if ((_1a7d1ee86_TypeEnum((*(_454364_to)).ptr()) != nullptr)) {
		_1a7c79b49_pushRuntimeToStr(_454327_s, _454342_from, _45447_token, _454426_refers);
		return;;
	};
}



inline void _1a7d15ae7_applyCastKindModel(jule::Ptr<_1a7c56c14_sema>* _455828_s, jule::Ptr<_1a7cd41ae_Data>* _455843_d, jule::Ptr<_1a7d1bc96_TypeKind>* _455858_t, jule::Ptr<_1a7b69b05_Token>* _45597_token, jule::Ptr<_1a7bc1a4c_ReferenceStack> _455926_refers) {
	_1a7d155db_applyRuntimeToStr(_455828_s, &((*((*(_455843_d))))._field_Kind), _455858_t, _45597_token, _455926_refers);
	(*((*(_455843_d))))._field_Model=jule::Any(jule::new_ptr<_1a7bae551_CastingExprModel>(_1a7bae551_CastingExprModel{._field_Token=(*(_45597_token)), ._field_Expr=jule::new_ptr<_1a7cd41ae_Data>((*((*(_455843_d))))), ._field_Kind=(*(_455858_t)), ._field_ExprKind=(*((*(_455843_d))))._field_Kind}), &__jule_any_type96);
}



inline void _1a7d16103_applyCastKind(jule::Ptr<_1a7c56c14_sema>* _456923_s, jule::Ptr<_1a7cd41ae_Data>* _456938_d, jule::Ptr<_1a7d1bc96_TypeKind>* _456953_t, jule::Ptr<_1a7b69b05_Token>* _45707_token, jule::Ptr<_1a7bc1a4c_ReferenceStack> _457026_refers) {
	_1a7d15ae7_applyCastKindModel(_456923_s, _456938_d, _456953_t, _45707_token, _457026_refers);
	(*((*(_456938_d))))._field_Kind=(*(_456953_t));
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d16312_buildVoidData(void) {
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e017c6_primVoid, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Str _1a7d167eb_checkDataForIntegerIndexing(jule::Ptr<_1a7c56c14_sema>* _458137_s, jule::Ptr<_1a7cd41ae_Data>* _458152_d, jule::Ptr<_1a7b69b05_Token>* _45827_token, jule::Ptr<_1a7bc1a4c_ReferenceStack> _458226_refers) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_458152_d)) == nullptr)) {
		__jule_func_result = static_cast<jule::Str>(jule::Str());
		return __jule_func_result;;
	};
	{
		
		if ((_1a7d1e44c_Prim((*((*(_458152_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1abaee437:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if ((!(_1c00697e5_IsInt(_1a7d25233_Str(_1a7d1e44c_Prim((*((*(_458152_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1abaee49d:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if (_1a7cd4ae9_IsConst((*(_458152_d)).ptr())) {
			_case_begin_1abaee514:;
			{
				if ((_1c006d156_AsF64((*((*(_458152_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31));
					return __jule_func_result;;
				};
			}
		}
		else if ((_1a7d1e44c_Prim((*((*(_458152_d))))._field_Kind.ptr()) == nullptr) || _1a7cd4ae9_IsConst((*(_458152_d)).ptr()) || (_1c005e510_RealKindOf(_1a7d25233_Str(_1a7d1e44c_Prim((*((*(_458152_d))))._field_Kind).ptr())) != _1c005e510_RealKindOf(static_cast<jule::Str>(jule::Str::lit("int", 3))))) {
			_case_begin_1abaee57a:;
			{
				_1a7d16103_applyCastKind(_458137_s, _458152_d, &(_1a7e02a5d_primInt), _45827_token, _458226_refers);
			}
		}
		_match_end_1abaee019:;
	};
	__jule_func_result = static_cast<jule::Str>(jule::Str());
	return __jule_func_result;;
}



inline void _1a7d16d07_applyCastModelByEnum(jule::Ptr<_1a7c56c14_sema>* _460730_s, jule::Ptr<_1a7cd41ae_Data>* _460745_d, jule::Ptr<_1a7bd1a6d_Enum> _460759_e, jule::Ptr<_1a7b69b05_Token>* _46087_token, jule::Ptr<_1a7bc1a4c_ReferenceStack> _460826_refers) {
	if ((_460759_e == nullptr)) {
		return;;
	};
	_1a7d15ae7_applyCastKindModel(_460730_s, _460745_d, &((*((*(_460759_e))._field_Kind))._field_Kind), _46087_token, _460826_refers);
}



inline void _1a7d17324_castConstByType(jule::Str* _461521_t, jule::Ptr<_1a7cd41ae_Data>* _461534_d) {
	{
		
		if (_1c006921d_IsSigInt((*(_461521_t)))) {
			_case_begin_1abb051c9:;
			{
				{
					auto _match_expr{ _1c005e7c9_BitsizeOf(_1c005e510_RealKindOf((*(_461521_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1abb05cac:;
						{
							_1c006d40e_SetI64((*((*(_461534_d))))._field_Constant.ptr(), _1c006cb39_AsI64((*((*(_461534_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1abb05d34:;
						{
							_1c006d40e_SetI64((*((*(_461534_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_1c006cb39_AsI64((*((*(_461534_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1abb05d9a:;
						{
							_1c006d40e_SetI64((*((*(_461534_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I16>(_1c006cb39_AsI64((*((*(_461534_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1abb05e11:;
						{
							_1c006d40e_SetI64((*((*(_461534_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I8>(_1c006cb39_AsI64((*((*(_461534_d))))._field_Constant))));
						}
					}
					_match_end_1abb0597c:;
				};
			}
		}
		else if (_1c006952b_IsUnsigInt((*(_461521_t)))) {
			_case_begin_1abb05273:;
			{
				{
					auto _match_expr{ _1c005e7c9_BitsizeOf(_1c005e510_RealKindOf((*(_461521_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1abb05729:;
						{
							_1c006d6b7_SetU64((*((*(_461534_d))))._field_Constant.ptr(), _1c006cdc0_AsU64((*((*(_461534_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1abb0a014:;
						{
							_1c006d6b7_SetU64((*((*(_461534_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_1c006cdc0_AsU64((*((*(_461534_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1abb0a07a:;
						{
							_1c006d6b7_SetU64((*((*(_461534_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U16>(_1c006cdc0_AsU64((*((*(_461534_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1abb0a0e1:;
						{
							_1c006d6b7_SetU64((*((*(_461534_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U8>(_1c006cdc0_AsU64((*((*(_461534_d))))._field_Constant))));
						}
					}
					_match_end_1abb09e9d:;
				};
			}
		}
		else if (_1c0069b36_IsFloat((*(_461521_t)))) {
			_case_begin_1abb052d9:;
			{
				{
					auto _match_expr{ _1c005e7c9_BitsizeOf(_1c005e510_RealKindOf((*(_461521_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1abb0620d:;
						{
							_1c006ded1_SetF64((*((*(_461534_d))))._field_Constant.ptr(), _1c006d156_AsF64((*((*(_461534_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1abb0e128:;
						{
							_1c006ded1_SetF64((*((*(_461534_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F32>(_1c006d156_AsF64((*((*(_461534_d))))._field_Constant))));
						}
					}
					_match_end_1abb0e090:;
				};
			}
		}
		_match_end_1abb05075:;
	};
}



inline void _1a7d17500_updateModelToGenericIns(jule::Any* _464933_m, jule::Ptr<_1a7bbd8b2_FnIns>* _464952_f) {
	{
		auto &_match_expr{ (*(_464933_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1abb0a575:;
			{
				(*(_464933_m))=jule::Any((*(_464952_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1abb0e601:;
			{
				(*((*(_464933_m)).cast_ptr<_1a7bb2994_StructSubIdentExprModel>(&__jule_any_type101)))._field_Method=(*(_464952_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1abb0e3c0:;
			{
				(*((*(_464933_m)).cast_ptr<_1a7bb2d3a_StructStaticIdentExprModel>(&__jule_any_type99)))._field_Method=(*(_464952_f));
			}
		}
		_match_end_1abb0a4dc:;
	};
}



inline jule::Bool _1a7d17874_pushSubIdentFromExpr(jule::Any _466029_expr, jule::Ptr<_1a7b857e1_SubIdentTypeDecl>* _466050_t) {
	{
		auto &_match_expr{ _466029_expr };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1abb1523e:;
			{
				jule::Ptr<_1a7b8aa6b_IdentExpr> _46637_e = _466029_expr.unsafe_cast_ptr<_1a7b8aa6b_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1a7b806ba_IdentTypeDecl>> &__jule_push_dest = (*((*(_466050_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1a7b806ba_IdentTypeDecl>(_1a7b806ba_IdentTypeDecl{._field_Token=(*(_46637_e))._field_Token, ._field_Ident=(*_46637_e.alloc)._field_Ident, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>>(nullptr)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1abb1256b:;
			{
				jule::Ptr<_1a7b8c364_SubIdentExpr> _46697_e = _466029_expr.unsafe_cast_ptr<_1a7b8c364_SubIdentExpr>();;
				if ((!(_1a7d17874_pushSubIdentFromExpr((*((*(_46697_e))._field_Expr))._field_Kind, _466050_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1a7b806ba_IdentTypeDecl>> &__jule_push_dest = (*((*(_466050_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1a7b806ba_IdentTypeDecl>(_1a7b806ba_IdentTypeDecl{._field_Token=(*_46697_e.alloc)._field_Ident, ._field_Ident=(*((*_46697_e.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1a7b800b0_TypeDecl>>(nullptr)})); };
			}
		}
		else {
			_case_begin_1abb12505:;
			{
				return false;;
			}
		}
		_match_end_1abb1248e:;
	};
	return true;;
}



inline jule::Str _1a7d17b3d_constoa(jule::Ptr<_1c006a461_Const>* _468313_c) {
	{
		
		if (_1c006e465_IsI64((*(_468313_c)).ptr())) {
			_case_begin_1abb1b278:;
			{
				return _1c005c0ce_FmtInt(_1c006bd69_ReadI64((*(_468313_c)).ptr()), 10LL);;
			}
		}
		else if (_1c006e6eb_IsU64((*(_468313_c)).ptr())) {
			_case_begin_1abb19cd2:;
			{
				return _1c005bc16_FmtUint(_1c006c100_ReadU64((*(_468313_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_1abb1b94e:;
			{
				return jule::Str();;
			}
		}
		_match_end_1abb19210:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7d181d2_evalEnumStatic(jule::Ptr<_1a7c56c14_sema>* _469424_s, jule::Ptr<_1a7bd1a6d_Enum>* _469439_enm, jule::Ptr<_1a7bd1001_EnumItem>* _469456_item, jule::Ptr<_1a7b69b05_Token>* _46957_token, jule::Ptr<_1a7bc1a4c_ReferenceStack> _469526_refers) {
	jule::Ptr<_1a7cd41ae_Data> _46966_d = jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_469439_enm)), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
	if (((*(_469456_item)) != nullptr)) {
		(*(_46966_d))._field_Constant=jule::new_ptr<_1c006a461_Const>((*(*((*((*((*(_469456_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_46966_d.alloc)._field_Model=jule::Any((*_46966_d.alloc)._field_Constant, &__jule_any_type20);
		_1a7d16d07_applyCastModelByEnum(_469424_s, &(_46966_d), (*(_469439_enm)), _46957_token, _469526_refers);
	};
	return _46966_d;;
}



inline jule::Ptr<_1a7badbc1_StructLitExprModel> _1a7d1849b_isLitBased(jule::Any* _471220_m) {
	{
		auto &_match_expr{ (*(_471220_m)) };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1abb212c2:;
			{
				return (*(_471220_m)).cast_ptr<_1a7badbc1_StructLitExprModel>(&__jule_any_type98);;
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1abb21338:;
			{
				return (*((*(_471220_m)).cast_ptr<_1a7badebd_AllocStructLitExprModel>(&__jule_any_type115)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1abb2139e:;
			{
				jule::Ptr<_1a7bb2994_StructSubIdentExprModel> _47197_ssi = (*(_471220_m)).cast_ptr<_1a7bb2994_StructSubIdentExprModel>(&__jule_any_type101);;
				return _1a7d1849b_isLitBased(&((*((*(_47197_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1abb21415:;
			{
				jule::Ptr<_1a7bae551_CastingExprModel> _47227_c = (*(_471220_m)).cast_ptr<_1a7bae551_CastingExprModel>(&__jule_any_type96);;
				return _1a7d1849b_isLitBased(&((*((*(_47227_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1abb20d71:;
			{
				return nullptr;;
			}
		}
		_match_end_1abb20d0a:;
	};
}



inline void _1a7d18787_makeImplicitDeref(jule::Ptr<_1a7cd41ae_Data>* _472927_d, jule::Ptr<_1a7b69b05_Token> _472941_baseToken) {
	jule::Ptr<_1a7bad2ec_UnaryExprModel> _47306_unary = jule::new_ptr<_1a7bad2ec_UnaryExprModel>(_1a7bad2ec_UnaryExprModel{._field_Expr=jule::new_ptr<_1a7cd41ae_Data>((*((*(_472927_d))))), ._field_Op=jule::new_ptr<_1a7b69b05_Token>((*(_472941_baseToken)))});;
	(*((*(_47306_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*(*(_47306_unary))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("*", 1));
	(*((*(_472927_d))))._field_Model=jule::Any(_47306_unary, &__jule_any_type113);
}



inline void _1abc3865e_updateRefer(jule::Ptr<_1a7bc1a4c_ReferenceStack> _474023_ref, jule::Ptr<_1a7bbd8b2_FnIns>* _474046_old, jule::Ptr<_1a7bbd8b2_FnIns>* _474059_new) {
	{
		auto expr = &((*(_474023_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc3a09a:;
		if (it != expr_end) {
			jule::I64 _47416_i = it - expr->begin();
			jule::Any _47419_sym = *it;
			{
				if ((jule::Any((*(_474046_old)), &__jule_any_type7) == _47419_sym)) {
					(*(_474023_ref))._field_buffer[_47416_i]=jule::Any((*(_474059_new)), &__jule_any_type7);
				};
			}
			_iter_next_1abc3a09a:;
			++it;
			_47416_i++;
			goto _iter_begin_1abc3a09a;
		}
		_iter_end_1abc3a09a:;
	};
}



inline void _1a7d18e19_makeVariadic(jule::Ptr<_1a7cd41ae_Data>* _474822_d, jule::Ptr<_1a7d1bc96_TypeKind> _474836_elem) {
	(*((*(_474822_d))))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=(*_474836_elem.alloc)._field_BindIdent, ._field_Generic=(*(_474836_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_474836_elem.alloc)._field_Kind});
}



inline jule::Bool _1a7d19348_isVarCaptured(jule::Ptr<_1a7c1ac1c_scopeChecker> _476218_r, jule::Ptr<_1a7c1ac1c_scopeChecker> _476240_s, jule::Ptr<_1a7c7b178_Var> _476258_v) {
	if (((*(_476258_v))._field_Scope == nullptr)) {
		return false;;
	};
	for (;;) {
		{
			if (((*(_476240_s))._field_scope == (*_476258_v.alloc)._field_Scope)) {
				return false;;
			};
			if ((((*_476240_s.alloc)._field_parent == nullptr) || (_476240_s == _476218_r))) {
				goto _iter_end_1abb2a4a7;
			};
			_476240_s=(*_476240_s.alloc)._field_parent;
		}
	_iter_next_1abb2a4a7:;
	}
	_iter_end_1abb2a4a7:;;
	return true;;
}



inline jule::Bool _1a7d37e49_kindUsesGenerics(jule::Ptr<_1a7d1bc96_TypeKind>* _175726_k, jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>>* _175741_generics) {
	{
		auto expr = _175741_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1807cb:;
		if (it != expr_end) {
			jule::Ptr<_1a7b92127_GenericDecl> *_17589_g = it;
			{
				if (static__1a7d37a4d_exist(&((*((*(_17589_g))))._field_Ident), _175726_k)) {
					return true;;
				};
			}
			_iter_next_1ac1807cb:;
			++it;
			goto _iter_begin_1ac1807cb;
		}
		_iter_end_1ac1807cb:;
	};
	return false;;
}



inline jule::Bool _1a7d38312_hasDirective(jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>* _176722_directives, jule::Str _176753_tag) {
	{
		auto expr = _176722_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1810b2:;
		if (it != expr_end) {
			jule::Ptr<_1a7b7e4cc_Directive> _176814_dr = *it;
			{
				if (((*((*(_176814_dr))._field_Tag))._field_Kind == _176753_tag)) {
					return true;;
				};
			}
			_iter_next_1ac1810b2:;
			++it;
			goto _iter_begin_1ac1810b2;
		}
		_iter_end_1ac1810b2:;
	};
	return false;;
}



inline jule::Bool _1a7d385cb_canGetPtr(jule::Ptr<_1a7cd41ae_Data>* _177619_d) {
	{
		
		if ((!((*((*(_177619_d))))._field_Lvalue)) || _1a7cd4ae9_IsConst((*(_177619_d)).ptr())) {
			_case_begin_1ac1829dc:;
			{
				return false;;
			}
		}
		else if ((_1a7d20739_Fn((*((*(_177619_d))))._field_Kind.ptr()) != nullptr) || (_1a7d1ec00_Enum((*((*(_177619_d))))._field_Kind) != nullptr)) {
			_case_begin_1ac182de9:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ac181d2c:;
			{
				return true;;
			}
		}
		_match_end_1ac1821e5:;
	};
}



inline jule::Bool _1a7d3891c_isValidForSptrType(jule::Ptr<_1a7d1bc96_TypeKind>* _178828_t) {
	jule::Ptr<_1a7ba8b11_StructIns> _17896_s = _1a7d209c0_Struct((*(_178828_t)).ptr());;
	if ((((_17896_s != nullptr) && ((*_17896_s.alloc)._field_Decl != nullptr)) && (*(*(_17896_s))._field_Decl.alloc)._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1a7d38ba3_isValidForRef(jule::Ptr<_1a7d1bc96_TypeKind>* _179723_t) {
	return (_1a7d20739_Fn((*(_179723_t)).ptr()) == nullptr);;
}



inline jule::Bool _1a7d38e6c_isBuiltinStrConvertable(jule::Ptr<_1a7d1bc96_TypeKind>* _180033_t) {
	return ((((!(_1a7d1d160_Void((*(_180033_t)).ptr()))) && (_1a7d20739_Fn((*(_180033_t)).ptr()) == nullptr)) && (_1a7d21273_Tup((*(_180033_t)).ptr()) == nullptr)) && (!(_1a7d21509_comptime((*(_180033_t)).ptr()))));;
}



inline jule::Str _1a7d39236_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _180427_tokens) {
	if ((((*(_180427_tokens)).len() == 1LL) && ((*((*(_180427_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		return jule::Str::lit("std::unsafe", 11);;
	};
	jule::I64 _18086_n = 0LL;;
	{
		auto expr = _180427_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac187cbc:;
		if (it != expr_end) {
			jule::Ptr<_1a7b69b05_Token> *_18099_token = it;
			{
				_18086_n+=(*((*(_18099_token))))._field_Kind.len();
				_18086_n+=2LL;
			}
			_iter_next_1ac187cbc:;
			++it;
			goto _iter_begin_1ac187cbc;
		}
		_iter_end_1ac187cbc:;
	};
	_1daed18b7_StrBuilder _18136_s = static__1daed1bb4_New(_18086_n);;
	{
		auto expr = _180427_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1865c3:;
		if (it != expr_end) {
			jule::I64 _18146_i = it - expr->begin();
			jule::Ptr<_1a7b69b05_Token> *_18149_token = it;
			{
				_1daeda6b2_WriteStr(&_18136_s, (*((*(_18149_token))))._field_Kind);
				if ((((*(_180427_tokens)).len() - _18146_i) > 1LL)) {
					_1daeda6b2_WriteStr(&_18136_s, jule::Str::lit("::", 2));
				};
			}
			_iter_next_1ac1865c3:;
			++it;
			_18146_i++;
			goto _iter_begin_1ac1865c3;
		}
		_iter_end_1ac1865c3:;
	};
	return _1daedaea9_Str(&_18136_s);;
}



inline jule::Ptr<_1a7d24dae_Prim> _1a7d39610_buildPrimType(jule::Str _182318_kind) {
	return jule::new_ptr<_1a7d24dae_Prim>(_1a7d24dae_Prim{._field_Kind=_182318_kind});;
}



inline void _1a7d39d5d_applyImplicitCast(jule::Ptr<_1a7c56c14_sema>* _185127_s, jule::Ptr<_1a7d1bc96_TypeKind>* _185142_dest, jule::Ptr<_1a7cd41ae_Data>* _185164_d, jule::Ptr<_1a7b69b05_Token>* _18527_token, jule::Ptr<_1a7bc1a4c_ReferenceStack> _185226_refers) {
	if (_1a7d1cdc9_IsNil((*((*(_185164_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1a7d24dae_Prim> _18562_destPrim = _1a7d1e44c_Prim((*(_185142_dest)).ptr());;
	if (((_18562_destPrim != nullptr) && _1a7d28610_IsAny(_18562_destPrim))) {
		jule::Ptr<_1a7d24dae_Prim> _18583_prim = _1a7d1e44c_Prim((*((*(_185164_d))))._field_Kind);;
		if (((_18583_prim == nullptr) || (!(_1a7d28610_IsAny(_18583_prim.ptr()))))) {
			_1a7d16103_applyCastKind(_185127_s, _185164_d, _185142_dest, _18527_token, _185226_refers);
		};
		return;;
	};
	jule::Ptr<_1a7bce362_Trait> _18652_dt = _1a7d20c56_Trait((*(_185142_dest)).ptr());;
	if ((_18652_dt != nullptr)) {
		jule::Ptr<_1a7bce362_Trait> _18673_bt = _1a7d20c56_Trait((*((*(_185164_d))))._field_Kind);;
		if (((_18673_bt == nullptr) || (_18673_bt != _18652_dt))) {
			_1a7d15ae7_applyCastKindModel(_185127_s, _185164_d, _185142_dest, _18527_token, _185226_refers);
			return;;
		};
	};
	if (((_1a7d1ee86_TypeEnum((*(_185142_dest)).ptr()) != nullptr) && (_1a7d1ee86_TypeEnum((*((*(_185164_d))))._field_Kind) == nullptr))) {
		_1a7d15ae7_applyCastKindModel(_185127_s, _185164_d, _185142_dest, _18527_token, _185226_refers);
		return;;
	};
}



inline jule::Bool _1a7d3a127_validTypeForXof(jule::Ptr<_1a7d1bc96_TypeKind>* _188025_t) {
	return ((!(_1a7d1d160_Void((*(_188025_t)).ptr()))) && (_1a7d20739_Fn((*(_188025_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1a7ccd9e4_SymbolTable__jule_tuple_s_1d9144ab5_Log _1a7d3d23a_buildSymbols(jule::Ptr<_1a7b7d19b_AST>* _1622_ast, jule::Trait* _1638_importer, jule::Ptr<_1a7bc7a0e_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1a7ccd9e4_SymbolTable__jule_tuple_s_1d9144ab5_Log __jule_func_result;
	jule::Ptr<_1a7bc7a0e_symbolBuilder> _176_sb = jule::new_ptr<_1a7bc7a0e_symbolBuilder>(_1a7bc7a0e_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_errors=jule::Slice<_1d9144ab5_Log>(nullptr), ._field_ast=(*(_1622_ast)), ._field_table=jule::Ptr<_1a7ccd9e4_SymbolTable>(nullptr)});;
	_1a7bcd493_build(_176_sb);
	if (((*_176_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_176_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_176_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline void _1a7d3d56a_collectImplicitImports(jule::Ptr<_1a7c56c14_sema>* _3132_s, jule::Ptr<_1a7ccd9e4_SymbolTable>* _3147_file) {
	{
		auto expr = &((*((*(_3147_file))))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2b8a79:;
		if (it != expr_end) {
			jule::Ptr<_1a7c36793_ImportInfo> _3214_imp = *it;
			{
				if ((!(_1a7bcd85b_isImplicitImport(_3214_imp)))) {
					goto _iter_end_1ac2b8a79;
				};
				{
					auto &_match_expr{ (*(_3214_imp))._field_LinkPath };
					
					if (_match_expr == jule::Str::lit("std::runtime", 12)) {
						_case_begin_1ac2b9c67:;
						{
							(*((*((*(_3132_s))))._field_meta))._field_runtime=_3214_imp;
						}
					}
					else {
						_case_begin_1ac2b930a:;
						{
							__jule_panic_s(jule::Str::lit("implementation mistake in implicit import collection, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/analysis.jule:40:4"));;
						}
					}
					_match_end_1ac2b989e:;
				};
			}
			_iter_next_1ac2b8a79:;
			++it;
			goto _iter_begin_1ac2b8a79;
		}
		_iter_end_1ac2b8a79:;
	};
}



inline __jule_tuple_x_1a7c396b9_Package__jule_tuple_s_1d9144ab5_Log _1a7d3d999_analyzePackage(jule::Slice<jule::Ptr<_1a7b7d19b_AST>>* _4524_files, jule::Trait* _4544_importer, jule::I64* _4565_flags) {
	__jule_tuple_x_1a7c396b9_Package__jule_tuple_s_1d9144ab5_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>> _476_tables = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>::alloc(0LL, (*(_4524_files)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7ccd9e4_SymbolTable>(nullptr); __jule_collection; });;
	{
		auto expr = _4524_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2baebb:;
		if (it != expr_end) {
			jule::Ptr<_1a7b7d19b_AST> _4814_f = *it;
			{
				jule::Ptr<_1a7ccd9e4_SymbolTable> _497_table;
				jule::Slice<_1d9144ab5_Log> _4918_errors;
				({
					__jule_tuple_x_1a7ccd9e4_SymbolTable__jule_tuple_s_1d9144ab5_Log __jule_assign_result = _1a7d3d23a_buildSymbols(&(_4814_f), _4544_importer, nullptr);
					_497_table = __jule_assign_result.__jule_result_arg0;
					_4918_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_4918_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _4918_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>> &__jule_push_dest = _476_tables; __jule_push_dest.push(_497_table); };
			}
			_iter_next_1ac2baebb:;
			++it;
			goto _iter_begin_1ac2baebb;
		}
		_iter_end_1ac2baebb:;
	};
	jule::Ptr<_1a7c56c14_sema> _566_sema = jule::new_ptr<_1a7c56c14_sema>(_1a7c56c14_sema{._field_errors=jule::Slice<_1d9144ab5_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1a7ccd9e4_SymbolTable>>(nullptr), ._field_file=jule::Ptr<_1a7ccd9e4_SymbolTable>(nullptr), ._field_flags=(*(_4565_flags)), ._field_meta=jule::new_ptr<_1a7c560dc_commonSemaMeta>(_1a7c560dc_commonSemaMeta{._field_comptimeTypeInfos=jule::Slice<jule::Ptr<_1a7be5aa4_comptimeTypeInfo>>(nullptr), ._field_runtime=jule::Ptr<_1a7c36793_ImportInfo>(nullptr)})});;
	jule::Ptr<_1a7ccd9e4_SymbolTable> _636_firstTable = _476_tables[0LL];;
	_1a7d3d56a_collectImplicitImports(&(_566_sema), &(_636_firstTable));
	_1a7c775c5_check(_566_sema, &(_476_tables));
	if (((*_566_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_566_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7c396b9_Package> _716_pkg = jule::new_ptr<_1a7c396b9_Package>(_1a7c396b9_Package{._field_Files=(*_566_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _716_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a7c396b9_Package__jule_tuple_s_1d9144ab5_Log _1a7d3de50_AnalyzePackage(jule::Slice<jule::Ptr<_1a7b7d19b_AST>> _9523_files, jule::Trait _9542_importer, jule::I64 _9562_flags) {
	__jule_tuple_x_1a7c396b9_Package__jule_tuple_s_1d9144ab5_Log __jule_func_result;
	if ((_9523_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1a7d3d999_analyzePackage(&(_9523_files), &(_9542_importer), &(_9562_flags)));
return __jule_func_result;;
}



inline jule::Ptr<_1a7bbd8b2_FnIns> _1a7e00dad_findBuiltinFunc(jule::Str* _2621_ident) {
	{
		auto &_match_expr{ (*(_2621_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1ac2ca926:;
			{
				static jule::Ptr<_1a7bbd8b2_FnIns> _2914_f = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>(_1a7e0691e_builtinCallerOut), ._field_reloaded=false});;
				return _2914_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1ac2ca98c:;
			{
				static jule::Ptr<_1a7bbd8b2_FnIns> _3214_f = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>(_1a7e06d4d_builtinCallerOutln), ._field_reloaded=false});;
				return _3214_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1ac2caa03:;
			{
				static jule::Ptr<_1a7bbd8b2_FnIns> _3514_f = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>(_1a7e0727c_builtinCallerNew), ._field_reloaded=false});;
				return _3514_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1ac2caa7a:;
			{
				static jule::Ptr<_1a7bbd8b2_FnIns> _3814_f = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>(_1a7e076ab_builtinCallerPanic), ._field_reloaded=false});;
				return _3814_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1ac2cac12:;
			{
				static jule::Ptr<_1a7bbd8b2_FnIns> _4114_f = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>(_1a7e07d1b_builtinCallerMake), ._field_reloaded=false});;
				return _4114_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1ac2cac78:;
			{
				static jule::Ptr<_1a7bbd8b2_FnIns> _4414_f = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>(_1a7e0813a_builtinCallerAppend), ._field_reloaded=false});;
				return _4414_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1ac2cad00:;
			{
				static jule::Ptr<_1a7bbd8b2_FnIns> _4714_f = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>(_1a7e08a53_builtinCallerCopy), ._field_reloaded=false});;
				return _4714_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1ac2cad77:;
			{
				static jule::Ptr<_1a7bbd8b2_FnIns> _5014_f = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>(_1a7e0a1e7_builtinCallerLen), ._field_reloaded=false});;
				return _5014_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1ac2cae98:;
			{
				static jule::Ptr<_1a7bbd8b2_FnIns> _5314_f = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>(_1a7e0a99a_builtinCallerCap), ._field_reloaded=false});;
				return _5314_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1ac2cb00e:;
			{
				static jule::Ptr<_1a7bbd8b2_FnIns> _5614_f = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>(_1a7e0b3b3_builtinCallerDelete), ._field_reloaded=false});;
				return _5614_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("assert", 6)) {
			_case_begin_1ac2cb075:;
			{
				static jule::Ptr<_1a7bbd8b2_FnIns> _5914_f = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>(_1a7e0b7e2_builtinCallerAssert), ._field_reloaded=false});;
				return _5914_f;;
			}
		}
		else {
			_case_begin_1ac2ca42b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac2ca78e:;
	};
}



inline jule::Ptr<_1a7d1aea4_TypeAlias> _1a7e011bb_primTypeAlias(jule::Ptr<_1a7d1bc96_TypeKind>* _6623_k) {
	return jule::new_ptr<_1a7d1aea4_TypeAlias>(_1a7d1aea4_TypeAlias{._field_Scope=jule::Ptr<_1a7b94e3d_ScopeTree>(nullptr), ._field_Public=true, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::new_ptr<_1a7d244a7_TypeSymbol>(_1a7d244a7_TypeSymbol{._field_Decl=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Kind=(*(_6623_k))}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1a7c7b178_Var> _1a7e04a71_findBuiltinVar(jule::Str* _9420_ident) {
	{
		auto &_match_expr{ (*(_9420_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1ac2d33ac:;
			{
				static jule::Ptr<_1a7c7b178_Var> _9714_v = jule::new_ptr<_1a7c7b178_Var>(_1a7c7b178_Var{._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Token=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1a7d244a7_TypeSymbol>(_1a7d244a7_TypeSymbol{._field_Decl=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Kind=_1a7e014c9_primNil}), ._field_Value=jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1c006b709_NewNil()})}), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a7c7b178_Var>>(nullptr)});;
				return _9714_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1ac2d3456:;
			{
				static jule::Ptr<_1a7c7b178_Var> _11214_v = jule::new_ptr<_1a7c7b178_Var>(_1a7c7b178_Var{._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Token=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Kind=(*(_1a7e04db2_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1c006ae67_NewBool(true)})}), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a7c7b178_Var>>(nullptr)});;
				return _11214_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1ac2d34cd:;
			{
				static jule::Ptr<_1a7c7b178_Var> _12514_v = jule::new_ptr<_1a7c7b178_Var>(_1a7c7b178_Var{._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Token=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Kind=(*(_1a7e04db2_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1a7cd5336_Value>(_1a7cd5336_Value{._field_Expr=jule::Ptr<_1a7b89251_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1c006ae67_NewBool(false)})}), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a7c7b178_Var>>(nullptr)});;
				return _12514_v;;
			}
		}
		else {
			_case_begin_1ac2d2b09:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac2cbeee:;
	};
}



inline jule::Ptr<_1a7d1aea4_TypeAlias> _1a7e04db2_findBuiltinTypeAlias(jule::Str _14225_ident) {
	{
		auto &_match_expr{ _14225_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1ac2d82c4:;
			{
				static jule::Ptr<_1a7d1aea4_TypeAlias> _14514_t = _1a7e011bb_primTypeAlias(&(_1a7e01a7e_primAny));;
				return _14514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1ac2d8439:;
			{
				static jule::Ptr<_1a7d1aea4_TypeAlias> _14814_t = _1a7e011bb_primTypeAlias(&(_1a7e01d7b_primStr));;
				return _14814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1ac2d84a0:;
			{
				static jule::Ptr<_1a7d1aea4_TypeAlias> _15114_t = _1a7e011bb_primTypeAlias(&(_1a7e02134_primBool));;
				return _15114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1ac2d857c:;
			{
				static jule::Ptr<_1a7d1aea4_TypeAlias> _15414_t = _1a7e011bb_primTypeAlias(&(_1a7e023dc_primUintptr));;
				return _15414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1ac2d85e3:;
			{
				static jule::Ptr<_1a7d1aea4_TypeAlias> _15714_t = _1a7e011bb_primTypeAlias(&(_1a7e02695_primUint));;
				return _15714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1ac2d8659:;
			{
				static jule::Ptr<_1a7d1aea4_TypeAlias> _16014_t = _1a7e011bb_primTypeAlias(&(_1a7e02a5d_primInt));;
				return _16014_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1ac2d86c0:;
			{
				static jule::Ptr<_1a7d1aea4_TypeAlias> _16314_t = _1a7e011bb_primTypeAlias(&(_1a7e02ca0_primI8));;
				return _16314_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1ac2d8736:;
			{
				static jule::Ptr<_1a7d1aea4_TypeAlias> _16614_t = _1a7e011bb_primTypeAlias(&(_1a7e03047_primI16));;
				return _16614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1ac2d8813:;
			{
				static jule::Ptr<_1a7d1aea4_TypeAlias> _16914_t = _1a7e011bb_primTypeAlias(&(_1a7e035a8_primI64));;
				return _16914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1ac2d888a:;
			{
				static jule::Ptr<_1a7d1aea4_TypeAlias> _17214_t = _1a7e011bb_primTypeAlias(&(_1a7e03b19_primU16));;
				return _17214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1ac2d8912:;
			{
				static jule::Ptr<_1a7d1aea4_TypeAlias> _17514_t = _1a7e011bb_primTypeAlias(&(_1a7e03dc2_primU32));;
				return _17514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1ac2d8989:;
			{
				static jule::Ptr<_1a7d1aea4_TypeAlias> _17814_t = _1a7e011bb_primTypeAlias(&(_1a7e043ab_primU64));;
				return _17814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ac2d8a11:;
			{
				static jule::Ptr<_1a7d1aea4_TypeAlias> _18114_t = _1a7e011bb_primTypeAlias(&(_1a7e045ed_primF32));;
				return _18114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ac2d8a88:;
			{
				static jule::Ptr<_1a7d1aea4_TypeAlias> _18414_t = _1a7e011bb_primTypeAlias(&(_1a7e0480c_primF64));;
				return _18414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1ac2d8b10:;
			{
				static jule::Ptr<_1a7d1aea4_TypeAlias> _18714_t = _1a7e011bb_primTypeAlias(&(_1a7e03861_primU8));;
				return _18714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1ac2d8b87:;
			{
				static jule::Ptr<_1a7d1aea4_TypeAlias> _19014_t = _1a7e011bb_primTypeAlias(&(_1a7e03300_primI32));;
				return _19014_t;;
			}
		}
		else {
			_case_begin_1ac2d3a1c:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac2d3ae9:;
	};
}



inline jule::Any _1a7e05148_findBuiltinDef(jule::Str* _19720_ident) {
	jule::Ptr<_1a7c7b178_Var> _1986_v = _1a7e04a71_findBuiltinVar(_19720_ident);;
	if ((_1986_v != nullptr)) {
		return jule::Any(_1986_v, &__jule_any_type8);;
	};
	jule::Ptr<_1a7bbd8b2_FnIns> _2026_f = _1a7e00dad_findBuiltinFunc(_19720_ident);;
	if ((_2026_f != nullptr)) {
		return jule::Any(_2026_f, &__jule_any_type7);;
	};
	jule::Ptr<_1a7d1aea4_TypeAlias> _2066_ta = _1a7e04db2_findBuiltinTypeAlias((*(_19720_ident)));;
	if ((_2066_ta != nullptr)) {
		return jule::Any(_2066_ta, &__jule_any_type27);;
	};
	return nullptr;;
}



inline jule::Any _1a7e05412_findBuiltinDefStdDebug(jule::Str* _21328_ident) {
	{
		auto &_match_expr{ (*(_21328_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1ac2e3510:;
			{
				static jule::Ptr<_1a7bbd8b2_FnIns> _21614_f = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>(_1a7e0eb58_builtinCallerStdDebugOut), ._field_reloaded=false});;
				return jule::Any(_21614_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1ac2e390b:;
			{
				static jule::Ptr<_1a7bbd8b2_FnIns> _21914_f = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>(_1a7e10087_builtinCallerStdDebugOutln), ._field_reloaded=false});;
				return jule::Any(_21914_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ac2e1dd2:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac2e2344:;
	};
}



inline jule::Any _1a7e056cb_findBuiltinDefStdMem(jule::Str* _22626_ident) {
	{
		auto &_match_expr{ (*(_22626_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1ac2e35a9:;
			{
				static jule::Ptr<_1a7bbd8b2_FnIns> _22914_f = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>(_1a7e0d98c_builtinCallerStdMemSizeOf), ._field_reloaded=false});;
				return jule::Any(_22914_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1ac2e527b:;
			{
				static jule::Ptr<_1a7bbd8b2_FnIns> _23214_f = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>(_1a7e0ddbb_builtinCallerStdMemAlignOf), ._field_reloaded=false});;
				return jule::Any(_23214_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1ac2e3642:;
			{
				static jule::Ptr<_1a7bbd8b2_FnIns> _23514_f = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>(_1a7e0e2ea_builtinCallerStdMemFree), ._field_reloaded=false});;
				return jule::Any(_23514_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ac2e3994:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac2e4ec3:;
	};
}



inline jule::Any _1a7e05aa5_findBuiltinDefStdComptime(jule::Str* _24231_ident) {
	{
		auto &_match_expr{ (*(_24231_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1ac2e5710:;
			{
				static jule::Ptr<_1a7bbd8b2_FnIns> _24514_f = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>(_1a7e0bc21_builtinCallerStdComptimeTypeOf), ._field_reloaded=false});;
				return jule::Any(_24514_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1ac2e7745:;
			{
				static jule::Ptr<_1a7bbd8b2_FnIns> _24814_f = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>(_1a7e0c392_builtinCallerStdComptimeValueOf), ._field_reloaded=false});;
				return jule::Any(_24814_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1ac2e77bc:;
			{
				static jule::Ptr<_1a7bbd8b2_FnIns> _25114_f = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>(_1a7e0c7c1_builtinCallerStdComptimeLine), ._field_reloaded=false});;
				return jule::Any(_25114_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1ac2e5787:;
			{
				static jule::Ptr<_1a7bbd8b2_FnIns> _25414_f = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>(_1a7e0cc00_builtinCallerStdComptimeFile), ._field_reloaded=false});;
				return jule::Any(_25414_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1ac2e580e:;
			{
				static jule::Ptr<_1a7bbd8b2_FnIns> _25714_f = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>(_1a7e0d12e_builtinCallerStdComptimeFiles), ._field_reloaded=false});;
				return jule::Any(_25714_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1ac2e78dd:;
			{
				static jule::Ptr<_1a7bbd8b2_FnIns> _26014_f = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7bba8d1_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>(_1a7e0d55d_builtinCallerStdComptimeTypeAlias), ._field_reloaded=false});;
				return jule::Any(_26014_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ac2e36a8:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac2e749d:;
	};
}



inline jule::Any _1a7e05ce7_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident) {
	{
		auto &_match_expr{ (*(_26737_ident)) };
		
		if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1ac2e7b85:;
			{
				static jule::Ptr<_1a7bbd8b2_FnIns> _27014_f = jule::new_ptr<_1a7bbd8b2_FnIns>(_1a7bbd8b2_FnIns{._field_Owner=jule::Ptr<_1a7ba8b11_StructIns>(nullptr), ._field_Decl=jule::new_ptr<_1a7bba8d1_Fn>(_1a7bba8d1_Fn{._field_sema=jule::Ptr<_1a7c56c14_sema>(nullptr), ._field_Token=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1a7b94e3d_ScopeTree>(nullptr), ._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b92127_GenericDecl>>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b92127_GenericDecl>(nullptr); __jule_collection; }), ._field_Result=jule::Ptr<_1a7bb86c0_RetType>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bb8e0c_Param>>(nullptr), ._field_Owner=jule::Ptr<_1a7ba5ca6_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1a7bbd8b2_FnIns>>(nullptr)}), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1a3b0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7bbc839_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1a7c1397e_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7bc1a4c_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1a7cd41ae_Data>,jule::Ptr<_1a7cd5dd6_eval>*,jule::Ptr<_1a7b8ce7a_FnCallExpr>*,jule::Ptr<_1a7cd41ae_Data>*>(_1a7e0e729_builtinCallerStdJuleIntegratedEmit), ._field_reloaded=false});;
				return jule::Any(_27014_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ac2e7976:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac2ebb9a:;
	};
}



inline jule::Any _1a7e0616b_findPackageBuiltinDef(jule::Str* _28227_linkPath, jule::Str* _28243_ident) {
	{
		auto &_match_expr{ (*(_28227_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std::comptime", 13)) {
			_case_begin_1ac2edb8b:;
			{
				return _1a7e05aa5_findBuiltinDefStdComptime(_28243_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::debug", 10)) {
			_case_begin_1ac2edc02:;
			{
				return _1a7e05412_findBuiltinDefStdDebug(_28243_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::mem", 8)) {
			_case_begin_1ac2ed8a0:;
			{
				return _1a7e056cb_findBuiltinDefStdMem(_28243_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::jule::integrated", 21)) {
			_case_begin_1ac2ed916:;
			{
				return _1a7e05ce7_findBuiltinDefStdJuleIntegrated(_28243_ident);;
			}
		}
		else {
			_case_begin_1ac2ed350:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac2ec162:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e064e0_builtinCallerError(jule::Ptr<_1a7cd5dd6_eval>* _29728_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _29743_fc) {
	if (((*((*(_29743_fc))))._field_Args.len() < 1LL)) {
		_1a7cd6469_pushErr((*(_29728_e)).ptr(), (*((*(_29743_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("err", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_29743_fc))))._field_Args.len() > 1LL)) {
		_1a7cd6469_pushErr((*(_29728_e)).ptr(), (*((*((*(_29743_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("error", 5), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1a7cd41ae_Data> _3056_expr = _1a7d09aa8_evalExpr((*(_29728_e)), (*((*(_29743_fc))))._field_Args[0LL]);;
	if ((_3056_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a7b69b05_Token> _3106_token = (*((*((*(_29743_fc))))._field_Args[0LL]))._field_Token;;
	if (_1a7cd45cc_IsNil(_3056_expr.ptr())) {
		_1a7cd6469_pushErr((*(_29728_e)).ptr(), _3106_token, static_cast<jule::Str>(jule::Str::lit("you cannot call error function with nil", 39)), jule::Slice<jule::Any>());
	};
	;
	;
	if ((!(_1a7c6741c_checkValidityForInitExpr((*((*(_29728_e))))._field_s, true, false, &(_1a7e01a7e_primAny), &(_3056_expr), &(_3106_token))))) {
		return nullptr;;
	};
	_1a7d155db_applyRuntimeToStr(&((*((*(_29728_e))))._field_s), &((*(_3056_expr))._field_Kind), &(_1a7e01a7e_primAny), &(_3106_token), _1a7cd946c_getOwnerRefers((*(_29728_e)).ptr()));
	jule::Ptr<_1a7cd41ae_Data> _3236_d = _1a7d16312_buildVoidData();;
	(*(_3236_d))._field_Model=jule::Any(jule::new_ptr<_1a7bb6624_BuiltinErrorCallExprModel>(_1a7bb6624_BuiltinErrorCallExprModel{._field_Func=jule::Ptr<_1a7bbd8b2_FnIns>(nullptr), ._field_Err=_3056_expr}), &__jule_any_type30);
	return _3236_d;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e0691e_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _32826_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _32841_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	if (((*((*(_32841_fc))))._field_Args.len() < 1LL)) {
		_1a7cd6469_pushErr((*(_32826_e)).ptr(), (*((*(_32841_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_32841_fc))))._field_Args.len() > 1LL)) {
		_1a7cd6469_pushErr((*(_32826_e)).ptr(), (*((*((*(_32841_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("out", 3), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1a7b89251_Expr> _3376_arg = (*((*(_32841_fc))))._field_Args[0LL];;
	jule::Ptr<_1a7cd41ae_Data> _3386_expr = _1a7d09aa8_evalExpr((*(_32826_e)), _3376_arg);;
	if ((_3386_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a7d38e6c_isBuiltinStrConvertable(&((*(_3386_expr))._field_Kind))))) {
		_1a7cd6469_pushErr((*(_32826_e)).ptr(), (*(_3376_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a7c79b49_pushRuntimeToStr(&((*((*(_32826_e))))._field_s), &((*(_3386_expr))._field_Kind), &((*_3376_arg.alloc)._field_Token), _1a7cd946c_getOwnerRefers((*(_32826_e)).ptr()));
	jule::Ptr<_1a7cd41ae_Data> _3506_d = _1a7d16312_buildVoidData();;
	(*(_3506_d))._field_Model=jule::Any(jule::new_ptr<_1a7bb38da_BuiltinOutCallExprModel>(_1a7bb38da_BuiltinOutCallExprModel{._field_Expr=_3386_expr, ._field_Debug=false}), &__jule_any_type34);
	return _3506_d;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e06d4d_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _35528_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _35543_fc, jule::Ptr<_1a7cd41ae_Data>* _35565_d) {
	(*(_35565_d))=_1a7e0691e_builtinCallerOut(nullptr, _35528_e, _35543_fc, _35565_d);
	if (((*(_35565_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_35565_d))))._field_Model=jule::Any(jule::new_ptr<_1a7bb3cb4_BuiltinOutlnCallExprModel>(_1a7bb3cb4_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_35565_d))))._field_Model.cast_ptr<_1a7bb38da_BuiltinOutCallExprModel>(&__jule_any_type34)))._field_Expr, ._field_Debug=false}), &__jule_any_type35);
	return (*(_35565_d));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e0727c_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _36726_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _36741_fc, jule::Ptr<_1a7cd41ae_Data>* _36763_d) {
	if (((*((*(_36741_fc))))._field_Args.len() < 1LL)) {
		_1a7cd6469_pushErr((*(_36726_e)).ptr(), (*((*(_36741_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_36741_fc))))._field_Args.len() > 2LL)) {
		_1a7cd6469_pushErr((*(_36726_e)).ptr(), (*((*((*(_36741_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("new", 3), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1a7cd41ae_Data> _3766_t = _1a7d090d5_eval1((*(_36726_e)), (*((*(_36741_fc))))._field_Args[0LL]);;
	if ((_3766_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3766_t))._field_Decl))) {
		_1a7cd6469_pushErr((*(_36726_e)).ptr(), (*((*((*(_36741_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1a7d3891c_isValidForSptrType(&((*(_3766_t))._field_Kind))))) {
		jule::Ptr<_1a7ba8b11_StructIns> _3877_s = _1a7d209c0_Struct((*(_3766_t))._field_Kind.ptr());;
		if ((((_3877_s != nullptr) && ((*_3877_s.alloc)._field_Decl != nullptr)) && (*(*(_3877_s))._field_Decl.alloc)._field_Binded)) {
			_1a7cd6469_pushErr((*(_36726_e)).ptr(), (*((*((*(_36741_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded structures cannot supports reference counting", 52)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_36763_d))))._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7d288da_Sptr>(_1a7d288da_Sptr{._field_Elem=(*(_3766_t))._field_Kind}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data23)});
	if (((*((*(_36741_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a7d1bc96_TypeKind> _4017_old = (*((*(_36726_e))))._field_prefix;;
		(*((*(_36726_e))))._field_prefix=(*(_3766_t))._field_Kind;
		jule::Ptr<_1a7cd41ae_Data> _4047_init = _1a7d09aa8_evalExpr((*(_36726_e)), (*((*(_36741_fc))))._field_Args[1LL]);;
		(*((*(_36726_e))))._field_prefix=_4017_old;
		if ((_4047_init != nullptr)) {
			jule::Ptr<_1a7b69b05_Token> _4098_token = (*((*((*(_36741_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1a7c6741c_checkValidityForInitExpr((*((*(_36726_e))))._field_s, (!((*((*(_36726_e))))._field_immutable)), false, &((*(_3766_t))._field_Kind), &(_4047_init), &(_4098_token));
			_1a7c62b87_checkAssignType((*((*(_36726_e))))._field_s, false, &((*(_3766_t))._field_Kind), &(_4047_init), _4098_token, _1a7cd946c_getOwnerRefers((*(_36726_e)).ptr()));
			(*((*(_36763_d))))._field_Model=jule::Any(jule::new_ptr<_1a7bb418d_BuiltinNewCallExprModel>(_1a7bb418d_BuiltinNewCallExprModel{._field_Kind=(*(_3766_t))._field_Kind, ._field_Init=(*_4047_init.alloc)._field_Model}), &__jule_any_type116);
		};
	} else {
		(*((*(_36763_d))))._field_Model=jule::Any(jule::new_ptr<_1a7bb418d_BuiltinNewCallExprModel>(_1a7bb418d_BuiltinNewCallExprModel{._field_Kind=(*(_3766_t))._field_Kind, ._field_Init=jule::Any(nullptr)}), &__jule_any_type116);
	};
	return (*(_36763_d));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e076ab_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _42928_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _42943_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	if (((*((*(_42943_fc))))._field_Args.len() < 1LL)) {
		_1a7cd6469_pushErr((*(_42928_e)).ptr(), (*((*(_42943_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("message", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_42943_fc))))._field_Args.len() > 1LL)) {
		_1a7cd6469_pushErr((*(_42928_e)).ptr(), (*((*((*(_42943_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("panic", 5), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1a7cd41ae_Data> _4386_expr = _1a7d09aa8_evalExpr((*(_42928_e)), (*((*(_42943_fc))))._field_Args[0LL]);;
	if ((_4386_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1a7d1e44c_Prim((*(_4386_expr))._field_Kind.ptr()) == nullptr) || (!(_1a7d28379_IsStr(_1a7d1e44c_Prim((*(_4386_expr))._field_Kind).ptr()))))) {
		_1a7cd6469_pushErr((*(_42928_e)).ptr(), (*((*(_42943_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("panic function only accepts strings", 35)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a7cd41ae_Data> _4476_d = _1a7d16312_buildVoidData();;
	(*(_4476_d))._field_Model=jule::Any(jule::new_ptr<_1a7bb4567_BuiltinPanicCallExprModel>(_1a7bb4567_BuiltinPanicCallExprModel{._field_Token=(*((*(_42943_fc))))._field_Token, ._field_Expr=(*(_4386_expr))._field_Model}), &__jule_any_type36);
	return _4476_d;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e07d1b_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _45527_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _45542_fc, jule::Ptr<_1a7cd41ae_Data>* _45564_d) {
	if (((*((*(_45542_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_45542_fc))))._field_Args.len() == 1LL)) {
			_1a7cd6469_pushErr((*(_45527_e)).ptr(), (*((*(_45542_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("size", 4), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		_1a7cd6469_pushErr((*(_45527_e)).ptr(), (*((*(_45542_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	} else if (((*((*(_45542_fc))))._field_Args.len() > 3LL)) {
		_1a7cd6469_pushErr((*(_45527_e)).ptr(), (*((*((*(_45542_fc))))._field_Args[3LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7cd41ae_Data> _4686_t = _1a7d08c94_evalExprKind((*(_45527_e)), (*((*((*(_45542_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4686_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4686_t))._field_Decl))) {
		_1a7cd6469_pushErr((*(_45527_e)).ptr(), (*((*((*(_45542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1a7d204a3_Slc((*(_4686_t))._field_Kind.ptr()) == nullptr)) {
		_1a7cd6469_pushErr((*(_45527_e)).ptr(), (*((*((*(_45542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_4686_t))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_45564_d))))._field_Kind=(*(_4686_t))._field_Kind;
	jule::Ptr<_1a7cd41ae_Data> _4836_lenExpr = _1a7d09aa8_evalExpr(_1a7c6222a_evalp((*((*(_45527_e))))._field_s, (*((*(_45527_e))))._field_lookup, (*(_4686_t))._field_Kind), (*((*(_45542_fc))))._field_Args[1LL]);;
	if ((_4836_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1a7ce5049_checkIntegerIndexingByData((*(_45527_e)).ptr(), &(_4836_lenExpr), (*((*((*(_45542_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1a7bb4ec4_BuiltinMakeCallExprModel> _4906_model = jule::new_ptr<_1a7bb4ec4_BuiltinMakeCallExprModel>(_1a7bb4ec4_BuiltinMakeCallExprModel{._field_Kind=(*(_4686_t))._field_Kind, ._field_Len=(*(_4836_lenExpr))._field_Model, ._field_Cap=jule::Any(nullptr)});;
	(*((*(_45564_d))))._field_Model=jule::Any(_4906_model, &__jule_any_type117);
	if (((*((*(_45542_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1a7cd41ae_Data> _4967_capExpr = _1a7d09aa8_evalExpr(_1a7c6222a_evalp((*((*(_45527_e))))._field_s, (*((*(_45527_e))))._field_lookup, (*(_4686_t))._field_Kind), (*((*(_45542_fc))))._field_Args[2LL]);;
		if ((_4967_capExpr == nullptr)) {
			return (*(_45564_d));;
		};
		_1a7ce5049_checkIntegerIndexingByData((*(_45527_e)).ptr(), &(_4967_capExpr), (*((*((*(_45542_fc))))._field_Args[2LL]))._field_Token);
		(*(_4906_model))._field_Cap=(*(_4967_capExpr))._field_Model;
	};
	return (*(_45564_d));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e0813a_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _50629_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _50644_fc, jule::Ptr<_1a7cd41ae_Data>* _50666_d) {
	if (((*((*(_50644_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_50644_fc))))._field_Args.len() == 1LL)) {
			_1a7cd6469_pushErr((*(_50629_e)).ptr(), (*((*(_50644_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("values", 6), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		_1a7cd6469_pushErr((*(_50629_e)).ptr(), (*((*(_50644_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7b89251_Expr> _5166_firstArg = (*((*(_50644_fc))))._field_Args[0LL];;
	jule::Ptr<_1a7cd41ae_Data> _5176_t = _1a7d09aa8_evalExpr((*(_50629_e)), _5166_firstArg);;
	if ((_5176_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a7d293ad_Slc> _5226_s = _1a7d204a3_Slc((*(_5176_t))._field_Kind.ptr());;
	if ((_5226_s == nullptr)) {
		_1a7cd6469_pushErr((*(_50629_e)).ptr(), (*(_5166_firstArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	;
	;
	if (_1a7c6741c_checkValidityForInitExpr((*((*(_50629_e))))._field_s, true, false, &((*(_5176_t))._field_Kind), &(_5176_t), &((*_5166_firstArg.alloc)._field_Token))) {
		_1a7c62b87_checkAssignType((*((*(_50629_e))))._field_s, false, &((*(_5176_t))._field_Kind), &(_5176_t), (*_5166_firstArg.alloc)._field_Token, _1a7cd946c_getOwnerRefers((*(_50629_e)).ptr()));
	};
	jule::Ptr<_1a7d1bc96_TypeKind> _5376_prefix = (*((*(_50629_e))))._field_prefix;;
	(*((*(_50629_e))))._field_prefix=(*(_5176_t))._field_Kind;
	__JULE_DEFER({
		(*((*(_50629_e))))._field_prefix=_5376_prefix;
	});;
	(*(_50666_d))=jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=(*(_5176_t))._field_Kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});
	jule::Ptr<_1a7b89251_Expr> _5456_secondArg = (*((*(_50644_fc))))._field_Args[1LL];;
	{
		auto &_match_expr{ (*(_5456_secondArg))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ac3436e7:;
			{
				if (((*((*(_50644_fc))))._field_Args.len() > 2LL)) {
					_1a7cd6469_pushErr((*(_50629_e)).ptr(), (*((*((*(_50644_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a7cd41ae_Data> _5527_e1 = _1a7d09aa8_evalExpr((*(_50629_e)), (*((*(_5456_secondArg))._field_Kind.unsafe_cast_ptr<_1a7b8b6d7_VariadicExpr>()))._field_Expr);;
				if ((_5527_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_1a7d1e44c_Prim((*(_5226_s))._field_Elem.ptr()) != nullptr) && _1a7d267d9_IsU8(_1a7d1e44c_Prim((*(_5226_s))._field_Elem).ptr()))) {
					if (((_1a7d1e44c_Prim((*(_5527_e1))._field_Kind) != nullptr) && _1a7d28379_IsStr(_1a7d1e44c_Prim((*(_5527_e1))._field_Kind).ptr()))) {
						_1a7d18e19_makeVariadic(&(_5527_e1), _1a7e03861_primU8);
						(*((*(_50666_d))))._field_Model=jule::Any(jule::new_ptr<_1a7bb539d_BuiltinAppendCallExprModel>(_1a7bb539d_BuiltinAppendCallExprModel{._field_Dest=(*(_5176_t))._field_Model, ._field_Elements=(*(_5527_e1))._field_Model}), &__jule_any_type33);
						return (*(_50666_d));;
					};
				};
				if ((!(_1a7d1e1b6_Variadicable((*(_5527_e1))._field_Kind)))) {
					_1a7cd6469_pushErr((*(_50629_e)).ptr(), (*(_5456_secondArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_5527_e1))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				_1a7d18e19_makeVariadic(&(_5527_e1), (*(_5226_s))._field_Elem);
				if (_1a7c6741c_checkValidityForInitExpr((*((*(_50629_e))))._field_s, true, false, &((*(_5226_s))._field_Elem), &(_5527_e1), &((*_5456_secondArg.alloc)._field_Token))) {
					_1a7c62b87_checkAssignType((*((*(_50629_e))))._field_s, false, &((*(_5226_s))._field_Elem), &(_5527_e1), (*_5456_secondArg.alloc)._field_Token, _1a7cd946c_getOwnerRefers((*(_50629_e)).ptr()));
				};
				(*((*(_50666_d))))._field_Model=jule::Any(jule::new_ptr<_1a7bb539d_BuiltinAppendCallExprModel>(_1a7bb539d_BuiltinAppendCallExprModel{._field_Dest=(*(_5176_t))._field_Model, ._field_Elements=(*(_5527_e1))._field_Model}), &__jule_any_type33);
				return (*(_50666_d));;
			}
		}
		_match_end_1ac343670:;
	};
	jule::Ptr<_1a7cd41ae_Data> _5866_e1 = _1a7d09aa8_evalExpr((*(_50629_e)), _5456_secondArg);;
	if ((_5866_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a7bb02cc_SliceExprModel> _5916_slice = jule::new_ptr<_1a7bb02cc_SliceExprModel>(_1a7bb02cc_SliceExprModel{._field_ElemKind=(*(_5226_s))._field_Elem, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_50644_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	{
		auto expr = (*((*(_50644_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ac34e714:;
		if (it != expr_end) {
			jule::Ptr<_1a7b89251_Expr> _59514_arg = *it;
			{
				_5866_e1=_1a7d09aa8_evalExpr((*(_50629_e)), _59514_arg);
				if ((_5866_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5866_e1))._field_Kind.alloc)._field_Variadic) {
					_1a7cd6469_pushErr((*(_50629_e)).ptr(), (*(_59514_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				if (_1a7c6741c_checkValidityForInitExpr((*((*(_50629_e))))._field_s, true, false, &((*(_5226_s))._field_Elem), &(_5866_e1), &((*_59514_arg.alloc)._field_Token))) {
					_1a7c62b87_checkAssignType((*((*(_50629_e))))._field_s, false, &((*(_5226_s))._field_Elem), &(_5866_e1), (*_59514_arg.alloc)._field_Token, _1a7cd946c_getOwnerRefers((*(_50629_e)).ptr()));
				};
				(*(_5916_slice))._field_Elems=jule::append((*_5916_slice.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_5866_e1))._field_Model; __jule_collection; }));
			}
			_iter_next_1ac34e714:;
			++it;
			goto _iter_begin_1ac34e714;
		}
		_iter_end_1ac34e714:;
	};
	(*((*(_50666_d))))._field_Model=jule::Any(jule::new_ptr<_1a7bb539d_BuiltinAppendCallExprModel>(_1a7bb539d_BuiltinAppendCallExprModel{._field_Dest=(*(_5176_t))._field_Model, ._field_Elements=jule::Any(_5916_slice, &__jule_any_type80)}), &__jule_any_type33);
	return (*(_50666_d));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e08624_callerCopySlice(jule::Ptr<_1a7cd41ae_Data>* _61725_dest, jule::Ptr<_1a7cd5dd6_eval>* _61743_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _61758_fc, jule::Ptr<_1a7cd41ae_Data>* _61780_d) {
	if ((!((*((*(_61725_dest))))._field_Mutable))) {
		_1a7cd6469_pushErr((*(_61743_e)).ptr(), (*((*((*(_61758_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a7cd41ae_Data> _6226_src = _1a7d09aa8_evalExpr((*(_61743_e)), (*((*(_61758_fc))))._field_Args[1LL]);;
	if ((_6226_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a7d293ad_Slc> _6266_slc = _1a7d204a3_Slc((*(_6226_src))._field_Kind.ptr());;
	if ((_6266_slc != nullptr)) {
		if (((!((*(_6226_src))._field_Mutable)) && _1a7d1d67c_Mutable((*_6266_slc.alloc)._field_Elem.ptr()))) {
			_1a7cd6469_pushErr((*(_61743_e)).ptr(), (*((*((*(_61758_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		};
		if ((!(_1a7d1c4d3_Equal((*((*(_61725_dest))))._field_Kind, (*(_6226_src))._field_Kind)))) {
			_1a7cd6469_pushErr((*(_61743_e)).ptr(), (*((*((*(_61758_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_61725_dest))))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*(_6226_src))._field_Kind), &__jule_any_type4); __jule_collection; }));
		};
	} else {
		jule::Ptr<_1a7d24dae_Prim> _6363_destPrim = _1a7d1e44c_Prim((*(_1a7d204a3_Slc((*((*(_61725_dest))))._field_Kind)))._field_Elem.ptr());;
		jule::Ptr<_1a7d24dae_Prim> _6373_prim = _1a7d1e44c_Prim((*(_6226_src))._field_Kind);;
		if (((((_6363_destPrim == nullptr) || (_6373_prim == nullptr)) || (!(_1a7d28379_IsStr(_6373_prim.ptr())))) || (!(_1a7d267d9_IsU8(_6363_destPrim.ptr()))))) {
			_1a7cd6469_pushErr((*(_61743_e)).ptr(), (*((*((*(_61758_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*((*(_61725_dest))))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*(_6226_src))._field_Kind), &__jule_any_type4); __jule_collection; }));
		};
	};
	(*((*(_61780_d))))._field_Kind=_1a7ccc790_lenKind();
	(*((*(_61780_d))))._field_Model=jule::Any(jule::new_ptr<_1a7bb624a_BuiltinCopyCallExprModel>(_1a7bb624a_BuiltinCopyCallExprModel{._field_Dest=(*(_61725_dest)), ._field_Src=_6226_src}), &__jule_any_type38);
	return (*(_61780_d));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e08a53_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _65127_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _65142_fc, jule::Ptr<_1a7cd41ae_Data>* _65164_d) {
	if (((*((*(_65142_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_65142_fc))))._field_Args.len() == 1LL)) {
			_1a7cd6469_pushErr((*(_65127_e)).ptr(), (*((*(_65142_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src", 3), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		_1a7cd6469_pushErr((*(_65127_e)).ptr(), (*((*(_65142_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_65142_fc))))._field_Args.len() > 2LL)) {
		_1a7cd6469_pushErr((*(_65127_e)).ptr(), (*((*((*(_65142_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("copy", 4), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1a7cd41ae_Data> _6646_dest = _1a7d09aa8_evalExpr((*(_65127_e)), (*((*(_65142_fc))))._field_Args[0LL]);;
	{
		
		if ((_6646_dest == nullptr)) {
			_case_begin_1a7634d0c:;
			{
				return nullptr;;
			}
		}
		else if ((_1a7d204a3_Slc((*(_6646_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7635b10:;
			{
				return _1a7e08624_callerCopySlice(&(_6646_dest), _65127_e, _65142_fc, _65164_d);;
			}
		}
		else {
			_case_begin_1a7634944:;
			{
				_1a7cd6469_pushErr((*(_65127_e)).ptr(), (*((*((*(_65142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a7632c94:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e08dc7_callerLenSlice(jule::Ptr<_1a7cd41ae_Data>* _67624_expr, jule::Ptr<_1a7cd41ae_Data>* _67642_d) {
	(*((*(_67642_d))))._field_Kind=_1a7ccc790_lenKind();
	(*((*(_67642_d))))._field_Model=jule::Any(jule::new_ptr<_1a7bb569a_BuiltinLenCallExprModel>(_1a7bb569a_BuiltinLenCallExprModel{._field_Expr=(*(_67624_expr))}), &__jule_any_type118);
	return (*(_67642_d));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e0924b_callerLenMap(jule::Ptr<_1a7cd41ae_Data>* _68422_expr, jule::Ptr<_1a7cd41ae_Data>* _68440_d) {
	(*((*(_68440_d))))._field_Kind=_1a7ccc790_lenKind();
	(*((*(_68440_d))))._field_Model=jule::Any(jule::new_ptr<_1a7bb569a_BuiltinLenCallExprModel>(_1a7bb569a_BuiltinLenCallExprModel{._field_Expr=(*(_68422_expr))}), &__jule_any_type118);
	return (*(_68440_d));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e095c0_callerLenArr(jule::Ptr<_1a7cd41ae_Data>* _69222_expr, jule::Ptr<_1a7cd41ae_Data>* _69240_d) {
	(*((*(_69240_d))))._field_Kind=_1a7ccc790_lenKind();
	(*((*(_69240_d))))._field_Constant=static__1c006a8d4_NewI64(static_cast<jule::I64>((*(_1a7d2021c_Arr((*((*(_69222_expr))))._field_Kind.ptr())))._field_N));
	(*((*(_69240_d))))._field_Model=jule::Any((*((*(_69240_d))))._field_Constant, &__jule_any_type20);
	return (*(_69240_d));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e09944_callerLenStr(jule::Ptr<_1a7cd41ae_Data>* _69922_expr, jule::Ptr<_1a7cd41ae_Data>* _69940_d) {
	(*((*(_69940_d))))._field_Kind=_1a7ccc790_lenKind();
	if (_1a7cd4ae9_IsConst((*(_69922_expr)).ptr())) {
		(*((*(_69940_d))))._field_Constant=static__1c006a8d4_NewI64(static_cast<jule::I64>(_1c006c61c_ReadStr((*((*(_69922_expr))))._field_Constant.ptr()).len()));
		(*((*(_69940_d))))._field_Model=jule::Any((*((*(_69940_d))))._field_Constant, &__jule_any_type20);
	} else {
		(*((*(_69940_d))))._field_Model=jule::Any(jule::new_ptr<_1a7bb569a_BuiltinLenCallExprModel>(_1a7bb569a_BuiltinLenCallExprModel{._field_Expr=(*(_69922_expr))}), &__jule_any_type118);
	};
	return (*(_69940_d));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e09cb8_callerLenComptime(jule::Ptr<_1a7cd41ae_Data>* _71227_d, jule::I64 _71237_n) {
	(*((*(_71227_d))))._field_Kind=_1a7ccc790_lenKind();
	(*((*(_71227_d))))._field_Constant=static__1c006a8d4_NewI64(static_cast<jule::I64>(_71237_n));
	(*((*(_71227_d))))._field_Model=jule::Any((*((*(_71227_d))))._field_Constant, &__jule_any_type20);
	return (*(_71227_d));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e0a1e7_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _71926_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _71941_fc, jule::Ptr<_1a7cd41ae_Data>* _71963_d) {
	if (((*((*(_71941_fc))))._field_Args.len() < 1LL)) {
		_1a7cd6469_pushErr((*(_71926_e)).ptr(), (*((*(_71941_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_71941_fc))))._field_Args.len() > 1LL)) {
		_1a7cd6469_pushErr((*(_71926_e)).ptr(), (*((*((*(_71941_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("len", 3), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1a7cd41ae_Data> _7276_dest = _1a7d09767_evalExpr1((*(_71926_e)), (*((*(_71941_fc))))._field_Args[0LL]);;
	{
		
		if ((_7276_dest == nullptr)) {
			_case_begin_1a7644ee8:;
			{
				return nullptr;;
			}
		}
		else if ((_1a7d204a3_Slc((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7645ceb:;
			{
				return _1a7e08dc7_callerLenSlice(&(_7276_dest), _71963_d);;
			}
		}
		else if ((_1a7d2021c_Arr((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7645d62:;
			{
				return _1a7e095c0_callerLenArr(&(_7276_dest), _71963_d);;
			}
		}
		else if ((_1a7d20edc_Map((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7644b96:;
			{
				return _1a7e0924b_callerLenMap(&(_7276_dest), _71963_d);;
			}
		}
		else if (((_1a7d1e44c_Prim((*(_7276_dest))._field_Kind.ptr()) != nullptr) && _1a7d28379_IsStr(_1a7d1e44c_Prim((*(_7276_dest))._field_Kind).ptr()))) {
			_case_begin_1a7644c0c:;
			{
				return _1a7e09944_callerLenStr(&(_7276_dest), _71963_d);;
			}
		}
		else if ((_1a7d21790_comptimeStructFields((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7644c73:;
			{
				return _1a7e09cb8_callerLenComptime(_71963_d, (*(_1a7d21790_comptimeStructFields((*(_7276_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1a7d21cac_comptimeEnumFields((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7644cd9:;
			{
				return _1a7e09cb8_callerLenComptime(_71963_d, (*(_1a7d21cac_comptimeEnumFields((*(_7276_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1a7d22a7c_comptimeTypeInfos((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7645e50:;
			{
				return _1a7e09cb8_callerLenComptime(_71963_d, (*(_1a7d22a7c_comptimeTypeInfos((*(_7276_dest))._field_Kind)))._field_types.len());;
			}
		}
		else if ((_1a7d222c9_comptimeParams((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7645eb6:;
			{
				return _1a7e09cb8_callerLenComptime(_71963_d, (*(_1a7d222c9_comptimeParams((*(_7276_dest))._field_Kind)))._field_params.len());;
			}
		}
		else if ((_1a7d23099_comptimeStatics((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a764602c:;
			{
				return _1a7e09cb8_callerLenComptime(_71963_d, (*(_1a7d23099_comptimeStatics((*(_7276_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1a7d24100_comptimeFiles((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7646093:;
			{
				return _1a7e09cb8_callerLenComptime(_71963_d, (*(_1a7d24100_comptimeFiles((*(_7276_dest))._field_Kind)))._field_files.len());;
			}
		}
		else if ((_1a7d23ad3_comptimeDecls((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7646109:;
			{
				return _1a7e09cb8_callerLenComptime(_71963_d, (*(_1a7d23ad3_comptimeDecls((*(_7276_dest))._field_Kind)))._field_decls.len());;
			}
		}
		else {
			_case_begin_1a7644b30:;
			{
				_1a7cd6469_pushErr((*(_71926_e)).ptr(), (*((*((*(_71941_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a7642e80:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e0a56b_callerCapSlice(jule::Ptr<_1a7cd41ae_Data>* _75924_expr, jule::Ptr<_1a7cd41ae_Data>* _75942_d) {
	(*((*(_75942_d))))._field_Kind=_1a7ccc790_lenKind();
	(*((*(_75942_d))))._field_Model=jule::Any(jule::new_ptr<_1a7bb5997_BuiltinCapCallExprModel>(_1a7bb5997_BuiltinCapCallExprModel{._field_Expr=(*(_75924_expr))}), &__jule_any_type119);
	return (*(_75942_d));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e0a99a_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _76726_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _76741_fc, jule::Ptr<_1a7cd41ae_Data>* _76763_d) {
	if (((*((*(_76741_fc))))._field_Args.len() < 1LL)) {
		_1a7cd6469_pushErr((*(_76726_e)).ptr(), (*((*(_76741_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_76741_fc))))._field_Args.len() > 1LL)) {
		_1a7cd6469_pushErr((*(_76726_e)).ptr(), (*((*((*(_76741_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("cap", 3), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1a7cd41ae_Data> _7756_dest = _1a7d09aa8_evalExpr((*(_76726_e)), (*((*(_76741_fc))))._field_Args[0LL]);;
	{
		
		if ((_7756_dest == nullptr)) {
			_case_begin_1a7658902:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7756_dest))._field_Decl) {
			_case_begin_1a7659705:;
			{
				_1a7cd6469_pushErr((*(_76726_e)).ptr(), (*((*((*(_76741_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a7d204a3_Slc((*(_7756_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a765976b:;
			{
				return _1a7e0a56b_callerCapSlice(&(_7756_dest), _76763_d);;
			}
		}
		else {
			_case_begin_1a7658539:;
			{
				_1a7cd6469_pushErr((*(_76726_e)).ptr(), (*((*((*(_76741_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a7655602:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e0ae84_callerDeleteMap(jule::Ptr<_1a7cd5dd6_eval>* _79025_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _79040_fc, jule::Ptr<_1a7cd41ae_Data>* _79062_expr, jule::Ptr<_1a7cd41ae_Data>* _79080_d) {
	if ((!((*((*(_79062_expr))))._field_Mutable))) {
		_1a7cd6469_pushErr((*(_79025_e)).ptr(), (*((*((*(_79040_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	(*(_79080_d))=_1a7d16312_buildVoidData();
	jule::Ptr<_1a7bb5d71_BuiltinDeleteCallExprModel> _7956_model = jule::new_ptr<_1a7bb5d71_BuiltinDeleteCallExprModel>(_1a7bb5d71_BuiltinDeleteCallExprModel{._field_Dest=(*(_79062_expr)), ._field_Key=jule::Ptr<_1a7cd41ae_Data>(nullptr)});;
	if (((*((*(_79040_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a7cd41ae_Data> _7997_key = _1a7d09aa8_evalExpr((*(_79025_e)), (*((*(_79040_fc))))._field_Args[1LL]);;
		{
			
			if ((_7997_key == nullptr)) {
				_case_begin_1a766082c:;
				{
					return nullptr;;
				}
			}
			else if ((*(_7997_key))._field_Decl) {
				_case_begin_1a765e485:;
				{
					_1a7cd6469_pushErr((*(_79025_e)).ptr(), (*((*((*(_79040_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1a765e41e:;
				{
					;
					jule::Ptr<_1a7d1bc96_TypeKind> _8088_keyType = (*(_1a7d20edc_Map((*((*(_79062_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1a7c62b87_checkAssignType((*((*(_79025_e))))._field_s, false, &(_8088_keyType), &(_7997_key), (*((*((*(_79040_fc))))._field_Args[1LL]))._field_Token, _1a7cd946c_getOwnerRefers((*(_79025_e)).ptr()))))) {
						return nullptr;;
					};
				}
			}
			_match_end_1a765e3a8:;
		};
		(*(_7956_model))._field_Key=_7997_key;
	};
	(*((*(_79080_d))))._field_Model=jule::Any(_7956_model, &__jule_any_type39);
	return (*(_79080_d));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e0b3b3_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _81929_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _81944_fc, jule::Ptr<_1a7cd41ae_Data>* _81966_d) {
	if (((*((*(_81944_fc))))._field_Args.len() < 1LL)) {
		_1a7cd6469_pushErr((*(_81929_e)).ptr(), (*((*(_81944_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("map", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_81944_fc))))._field_Args.len() > 2LL)) {
		_1a7cd6469_pushErr((*(_81929_e)).ptr(), (*((*((*(_81944_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("delete", 6), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1a7cd41ae_Data> _8276_dest = _1a7d09aa8_evalExpr((*(_81929_e)), (*((*(_81944_fc))))._field_Args[0LL]);;
	{
		
		if ((_8276_dest == nullptr)) {
			_case_begin_1a76672d4:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8276_dest))._field_Decl) {
			_case_begin_1a76680d7:;
			{
				_1a7cd6469_pushErr((*(_81929_e)).ptr(), (*((*((*(_81944_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a7d20edc_Map((*(_8276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a766814d:;
			{
				return _1a7e0ae84_callerDeleteMap(_81929_e, _81944_fc, &(_8276_dest), _81966_d);;
			}
		}
		else {
			_case_begin_1a7666e1b:;
			{
				_1a7cd6469_pushErr((*(_81929_e)).ptr(), (*((*((*(_81944_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a766526b:;
	};
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e0b7e2_builtinCallerAssert(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _84229_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _84244_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	if (((*((*(_84244_fc))))._field_Args.len() < 1LL)) {
		_1a7cd6469_pushErr((*(_84229_e)).ptr(), (*((*(_84244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_84244_fc))))._field_Args.len() > 2LL)) {
		_1a7cd6469_pushErr((*(_84229_e)).ptr(), (*((*((*(_84244_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("assert", 6), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1a7cd41ae_Data> _8516_expr = _1a7d09aa8_evalExpr((*(_84229_e)), (*((*(_84244_fc))))._field_Args[0LL]);;
	if ((_8516_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1a7d1e44c_Prim((*(_8516_expr))._field_Kind.ptr()) == nullptr) || (!(_1a7d280e3_IsBool(_1a7d1e44c_Prim((*(_8516_expr))._field_Kind).ptr()))))) {
		_1a7cd6469_pushErr((*(_84229_e)).ptr(), (*((*(_84244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("assertion requires boolean expression", 37)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a7bb4a1d_BuiltinAssertCallExprModel> _8606_model = jule::new_ptr<_1a7bb4a1d_BuiltinAssertCallExprModel>(_1a7bb4a1d_BuiltinAssertCallExprModel{._field_Token=(*((*(_84244_fc))))._field_Token, ._field_Expr=(*(_8516_expr))._field_Model, ._field_Log=jule::Str::lit("assertion failed", 16)});;
	if (((*((*(_84244_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a7cd41ae_Data> _8687_log = _1a7d09aa8_evalExpr((*(_84229_e)), (*((*(_84244_fc))))._field_Args[1LL]);;
		if ((_8687_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1a7cd4ae9_IsConst(_8687_log.ptr()))) || (_1a7d1e44c_Prim((*(_8687_log))._field_Kind) == nullptr)) || (!(_1a7d28379_IsStr(_1a7d1e44c_Prim((*(_8687_log))._field_Kind).ptr()))))) {
			_1a7cd6469_pushErr((*(_84229_e)).ptr(), (*((*((*(_84244_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("const str", 9), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*(_8687_log))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		(*(_8606_model))._field_Log=_1c006c61c_ReadStr((*(_8687_log))._field_Constant.ptr());
	};
	jule::Ptr<_1a7cd41ae_Data> _8816_d = _1a7d16312_buildVoidData();;
	(*(_8816_d))._field_Model=jule::Any(_8606_model, &__jule_any_type37);
	return _8816_d;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e0bc21_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _88640_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _88655_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	if (((*((*(_88655_fc))))._field_Args.len() < 1LL)) {
		_1a7cd6469_pushErr((*(_88640_e)).ptr(), (*((*(_88655_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_88655_fc))))._field_Args.len() > 1LL)) {
		_1a7cd6469_pushErr((*(_88640_e)).ptr(), (*((*((*(_88655_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1a7cd41ae_Data> _8956_d = _1a7d08c94_evalExprKind((*(_88640_e)), (*((*((*(_88655_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8956_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a7bbd8b2_FnIns> _8992_f = _1a7d20739_Fn((*(_8956_d))._field_Kind.ptr());;
	if ((_8992_f != nullptr)) {
		if (_1a7bbed7a_IsBuiltin(_8992_f)) {
			_1a7cd6469_pushErr((*(_88640_e)).ptr(), (*((*((*(_88655_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		if (((*_8992_f.alloc)._field_Generics.len() != (*((*_8992_f.alloc)._field_Decl))._field_Generics.len())) {
			_1a7cd6469_pushErr((*(_88640_e)).ptr(), (*((*((*(_88655_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1a7ba8b11_StructIns> _9102_s = _1a7d209c0_Struct((*(_8956_d))._field_Kind);;
	if (((_9102_s != nullptr) && ((*_9102_s.alloc)._field_Generics.len() != (*((*_9102_s.alloc)._field_Decl))._field_Generics.len()))) {
		_1a7cd6469_pushErr((*(_88640_e)).ptr(), (*((*((*(_88655_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1a7d21509_comptime((*(_8956_d))._field_Kind)) {
		_1a7cd6469_pushErr((*(_88640_e)).ptr(), (*((*((*(_88655_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_8956_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1a7c09d1b_buildComptimeTypeInfoData(&((*((*(_88640_e))))._field_s), &((*(_8956_d))._field_Kind));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e0c392_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _92241_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _92256_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	if (((*((*(_92256_fc))))._field_Args.len() < 1LL)) {
		_1a7cd6469_pushErr((*(_92241_e)).ptr(), (*((*(_92256_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_92256_fc))))._field_Args.len() > 1LL)) {
		_1a7cd6469_pushErr((*(_92241_e)).ptr(), (*((*((*(_92256_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1a7cd41ae_Data> _9306_d = _1a7d09aa8_evalExpr((*(_92241_e)), (*((*(_92256_fc))))._field_Args[0LL]);;
	if ((_9306_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a7cccae2_isGoodValueToInfer(&(_9306_d))))) {
		_1a7cd6469_pushErr((*(_92241_e)).ptr(), (*((*((*(_92256_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_9306_d))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1a7c0a15c_buildComptimeValue(&(_9306_d));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e0c7c1_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _94238_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _94253_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	if (((*((*(_94253_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_94238_e)).ptr(), (*((*((*(_94253_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Line", 4), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c006a461_Const> _9466_constant = static__1c006a8d4_NewI64(static_cast<jule::I64>((*((*((*(_94253_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02a5d_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9466_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_9466_constant});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e0cc00_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _95438_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _95453_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	if (((*((*(_95453_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_95438_e)).ptr(), (*((*((*(_95453_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("File", 4), &__jule_any_type4); __jule_collection; }));
	};
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7c01384_comptimeFile>(_1a7c01384_comptimeFile{._field_file=(*((*((*(_95438_e))))._field_s))._field_file}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data18)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e0d12e_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _96739_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _96754_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	if (((*((*(_96754_fc))))._field_Args.len() > 0LL)) {
		_1a7cd6469_pushErr((*(_96739_e)).ptr(), (*((*((*(_96754_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Files", 5), &__jule_any_type4); __jule_collection; }));
	};
	return jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7bee915_comptimeFiles>(_1a7bee915_comptimeFiles{._field_files=(*((*((*(_96739_e))))._field_s))._field_files}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data17)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e0d55d_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _98043_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _98058_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	if (((*((*(_98058_fc))))._field_Args.len() > 2LL)) {
		_1a7cd6469_pushErr((*(_98043_e)).ptr(), (*((*((*(_98058_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_98058_fc))))._field_Args.len() == 0LL)) {
		_1a7cd6469_pushErr((*(_98043_e)).ptr(), (*((*(_98058_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_98058_fc))))._field_Args.len() == 1LL)) {
		_1a7cd6469_pushErr((*(_98043_e)).ptr(), (*((*(_98058_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_98058_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1a76927c6:;
			{
				goto _match_end_1a7693aa2;
			}
		}
		else {
			_case_begin_1a7693b29:;
			{
				_1a7cd6469_pushErr((*(_98043_e)).ptr(), (*((*((*(_98058_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1a7cd67cc_pushSuggestion((*(_98043_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a7693aa2:;
	};
	jule::Ptr<_1a7b69b05_Token> _10016_ident = (*((*((*((*(_98058_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1a7b8aa6b_IdentExpr>(&__jule_any_type52)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_98043_e))))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0)) {
			_case_begin_1a76961ae:;
			{
				goto _match_end_1a76963e0;
			}
		}
		else {
			_case_begin_1a7696456:;
			{
				_1a7cd6469_pushErr((*(_98043_e)).ptr(), (*((*(_98058_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you can call @ function in the scopes only", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a76963e0:;
	};
	jule::Ptr<_1a7c1ac1c_scopeChecker> _10106_sc = (*((*(_98043_e))))._field_lookup.cast_ptr<_1a7c1ac1c_scopeChecker>((jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data0);;
	jule::Ptr<_1a7d1aea4_TypeAlias> _10116_alias = jule::new_ptr<_1a7d1aea4_TypeAlias>(_1a7d1aea4_TypeAlias{._field_Scope=(*(_10106_sc))._field_tree, ._field_Public=_1a7c53c00_IsPub((*(_10016_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_10016_ident, ._field_Ident=(*_10016_ident.alloc)._field_Kind, ._field_Kind=jule::new_ptr<_1a7d244a7_TypeSymbol>(_1a7d244a7_TypeSymbol{._field_Decl=jule::Ptr<_1a7b800b0_TypeDecl>(nullptr), ._field_Kind=jule::Ptr<_1a7d1bc96_TypeKind>(nullptr)}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>(nullptr)});;
	jule::Ptr<_1a7cd41ae_Data> _10216_t = _1a7d090d5_eval1((*(_98043_e)), (*((*(_98058_fc))))._field_Args[1LL]);;
	if ((_10216_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_10216_t))._field_Decl) {
		(*((*(_10116_alias))._field_Kind))._field_Kind=(*(_10216_t))._field_Kind;
	} else {
		jule::Ptr<_1a7be5aa4_comptimeTypeInfo> _10287_cti = _1a7d22d13_comptimeTypeInfo((*(_10216_t))._field_Kind.ptr());;
		if ((_10287_cti == nullptr)) {
			_1a7cd6469_pushErr((*(_98043_e)).ptr(), (*((*((*(_98058_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			_1a7cd67cc_pushSuggestion((*(_98043_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("expected type declaration", 25)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_10116_alias))._field_Kind))._field_Kind=(*(_10287_cti))._field_base;
	};
	_1a7c20d87_checkTypeAlias(_10106_sc, &(_10116_alias));
	return _1a7d16312_buildVoidData();;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e0d98c_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _104035_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _104050_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<_1a7cd41ae_Data> _10416_result = jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02695_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
	if (((*((*(_104050_fc))))._field_Args.len() < 1LL)) {
		_1a7cd6469_pushErr((*(_104035_e)).ptr(), (*((*(_104050_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4); __jule_collection; }));
		return _10416_result;;
	};
	if (((*((*(_104050_fc))))._field_Args.len() > 1LL)) {
		_1a7cd6469_pushErr((*(_104035_e)).ptr(), (*((*((*(_104050_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1a7cd41ae_Data> _10536_d = _1a7d08c94_evalExprKind((*(_104035_e)), (*((*((*(_104050_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10536_d == nullptr)) {
		return _10416_result;;
	};
	if ((!(_1a7d3a127_validTypeForXof(&((*(_10536_d))._field_Kind))))) {
		_1a7cd6469_pushErr((*(_104035_e)).ptr(), (*((*((*(_104050_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_10536_d))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4); __jule_collection; }));
	};
	(*(_10416_result))._field_Model=jule::Any(jule::new_ptr<_1a7bb6cc8_SizeofExprModel>(_1a7bb6cc8_SizeofExprModel{._field_Expr=(*(_10536_d))._field_Model}), &__jule_any_type120);
	return _10416_result;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e0ddbb_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _106536_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _106551_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<_1a7cd41ae_Data> _10666_result = jule::new_ptr<_1a7cd41ae_Data>(_1a7cd41ae_Data{._field_untyped=false, ._field_Kind=_1a7e02695_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1c006a461_Const>(nullptr)});;
	if (((*((*(_106551_fc))))._field_Args.len() < 1LL)) {
		_1a7cd6469_pushErr((*(_106536_e)).ptr(), (*((*(_106551_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4); __jule_collection; }));
		return _10666_result;;
	};
	if (((*((*(_106551_fc))))._field_Args.len() > 1LL)) {
		_1a7cd6469_pushErr((*(_106536_e)).ptr(), (*((*((*(_106551_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1a7cd41ae_Data> _10786_d = _1a7d08c94_evalExprKind((*(_106536_e)), (*((*((*(_106551_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10786_d == nullptr)) {
		return _10666_result;;
	};
	if ((!(_1a7d3a127_validTypeForXof(&((*(_10786_d))._field_Kind))))) {
		_1a7cd6469_pushErr((*(_106536_e)).ptr(), (*((*((*(_106551_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7d1c192_Str((*(_10786_d))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4); __jule_collection; }));
	};
	(*(_10666_result))._field_Model=jule::Any(jule::new_ptr<_1a7bb6eb5_AlignofExprModel>(_1a7bb6eb5_AlignofExprModel{._field_Expr=(*(_10786_d))._field_Model}), &__jule_any_type121);
	return _10666_result;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e0e2ea_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _109033_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _109048_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	if (((*((*(_109048_fc))))._field_Args.len() < 1LL)) {
		_1a7cd6469_pushErr((*(_109033_e)).ptr(), (*((*(_109048_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("h", 1), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_109048_fc))))._field_Args.len() > 1LL)) {
		_1a7cd6469_pushErr((*(_109033_e)).ptr(), (*((*((*(_109048_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Free", 4), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1a7cd41ae_Data> _10996_d = _1a7d09aa8_evalExpr((*(_109033_e)), (*((*(_109048_fc))))._field_Args[0LL]);;
	if ((_10996_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a7d1de30_GC((*(_10996_d))._field_Kind.ptr())))) {
		_1a7cd6469_pushErr((*(_109033_e)).ptr(), (*((*((*(_109048_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a7cd41ae_Data> _11086_result = _1a7d16312_buildVoidData();;
	(*(_11086_result))._field_Model=jule::Any(jule::new_ptr<_1a7bb7933_FreeExprModel>(_1a7bb7933_FreeExprModel{._field_Expr=(*(_10996_d))._field_Model}), &__jule_any_type40);
	return _11086_result;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e0e729_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _111344_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _111359_fc, jule::Ptr<_1a7cd41ae_Data>* _111381_d) {
	if ((!(_1a7cd6e5e_isUnsafe((*(_111344_e)).ptr())))) {
		_1a7cd6469_pushErr((*(_111344_e)).ptr(), (*((*(_111359_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	if (((*((*(_111359_fc))))._field_Args.len() < 1LL)) {
		_1a7cd6469_pushErr((*(_111344_e)).ptr(), (*((*(_111359_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("code", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7cd41ae_Data> _11236_argd = _1a7d09aa8_evalExpr((*(_111344_e)), (*((*(_111359_fc))))._field_Args[0LL]);;
	if ((_11236_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1a7d1e44c_Prim((*(_11236_argd))._field_Kind.ptr()) == nullptr) || (!(_1a7d28379_IsStr(_1a7d1e44c_Prim((*(_11236_argd))._field_Kind).ptr()))))) {
		_1a7cd6469_pushErr((*(_111344_e)).ptr(), (*((*((*(_111359_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_1a7d1c192_Str((*(_11236_argd))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1a7cd4ae9_IsConst(_11236_argd.ptr()))) || (!(_1c006ec18_IsStr((*(_11236_argd))._field_Constant.ptr()))))) {
		_1a7cd6469_pushErr((*(_111344_e)).ptr(), (*((*((*(_111359_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7cd41ae_Data> _11386_r = _1a7d16312_buildVoidData();;
	jule::Ptr<_1a7bbd8b2_FnIns> _11406_f = _1a7d20739_Fn((*((*(_111381_d))))._field_Kind);;
	if (((*(_11406_f))._field_Generics.len() > 0LL)) {
		(*(_11386_r))._field_Kind=(*((*(_11406_f))._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1a7bb7636_BackendEmitExprModel> _11456_model = jule::new_ptr<_1a7bb7636_BackendEmitExprModel>(_1a7bb7636_BackendEmitExprModel{._field_Code=_1c006c61c_ReadStr((*(_11236_argd))._field_Constant), ._field_Exprs=jule::Slice<jule::Any>(nullptr)});;
	if (((*((*(_111359_fc))))._field_Args.len() > 1LL)) {
		(*(_11456_model))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_111359_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
		{
			auto expr = (*((*(_111359_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1a76c3472:;
			if (it != expr_end) {
				jule::Ptr<_1a7b89251_Expr> _115115_arg = *it;
				{
					_11236_argd=_1a7d090d5_eval1((*(_111344_e)), _115115_arg);
					if ((_11236_argd == nullptr)) {
						return nullptr;;
					};
					(*_11456_model.alloc)._field_Exprs=jule::append((*_11456_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_11236_argd))._field_Model; __jule_collection; }));
				}
				_iter_next_1a76c3472:;
				++it;
				goto _iter_begin_1a76c3472;
			}
			_iter_end_1a76c3472:;
		};
	};
	(*_11386_r.alloc)._field_Model=jule::Any(_11456_model, &__jule_any_type32);
	return _11386_r;;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e0eb58_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _116434_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _116449_fc, jule::Ptr<_1a7cd41ae_Data>* _116471_d) {
	(*(_116471_d))=_1a7e0691e_builtinCallerOut(nullptr, _116434_e, _116449_fc, _116471_d);
	if (((*(_116471_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_116471_d))))._field_Model.cast_ptr<_1a7bb38da_BuiltinOutCallExprModel>(&__jule_any_type34)))._field_Debug=true;
	return (*(_116471_d));;
}



inline jule::Ptr<_1a7cd41ae_Data> _1a7e10087_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _117336_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _117351_fc, jule::Ptr<_1a7cd41ae_Data>* _117373_d) {
	(*(_117373_d))=_1a7e06d4d_builtinCallerOutln(nullptr, _117336_e, _117351_fc, _117373_d);
	if (((*(_117373_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_117373_d))))._field_Model.cast_ptr<_1a7bb3cb4_BuiltinOutlnCallExprModel>(&__jule_any_type35)))._field_Debug=true;
	return (*(_117373_d));;
}



inline jule::Ptr<_1a879690c_FileInfo> _1a87dca52_ParseFile(jule::Ptr<_1a7b7038b_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a879690c_FileInfo> _276_finf = jule::new_ptr<_1a879690c_FileInfo>(_1a879690c_FileInfo{._field_Ast=jule::Ptr<_1a7b7d19b_AST>(nullptr), ._field_Errors=jule::Slice<_1d9144ab5_Log>(nullptr)});;
	({
		__jule_tuple_x_1a7b7d19b_AST__jule_tuple_s_1d9144ab5_Log __jule_assign_result = _1a87dd0e6_parseFileset(_2318_f);
		(*_276_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_276_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_276_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_276_finf.alloc)._field_Ast=nullptr;
	};
	return _276_finf;;
}



inline __jule_tuple_x_1a7b7d19b_AST__jule_tuple_s_1d9144ab5_Log _1a87dd0e6_parseFileset(jule::Ptr<_1a7b7038b_File> _5521_f) {
	__jule_tuple_x_1a7b7d19b_AST__jule_tuple_s_1d9144ab5_Log __jule_func_result;
	jule::Ptr<_1a880dc2c_parser> _566_p = jule::new_ptr<_1a880dc2c_parser>(_1a880dc2c_parser{._field_ast=jule::Ptr<_1a7b7d19b_AST>(nullptr), ._field_directives=jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>(nullptr), ._field_errors=jule::Slice<_1d9144ab5_Log>(nullptr), ._field_ep=jule::Ptr<_1a87ed117_exprBuilder>(nullptr)});;
	_1a881eab7_parse(_566_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_566_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_566_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1a7b94e3d_ScopeTree> _1a87ddab9_newScope(void) {
	return jule::new_ptr<_1a7b94e3d_ScopeTree>(_1a7b94e3d_ScopeTree{._field_Parent=jule::Ptr<_1a7b94e3d_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<_1a7b947cd_Stmt>(nullptr), ._field_End=jule::Ptr<_1a7b69b05_Token>(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1a87dde1b_isSt(jule::Ptr<_1a7b69b05_Token> _499_current, jule::Ptr<_1a7b69b05_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_4926_prev))._field_Row < (*_499_current.alloc)._field_Row));
	__jule_func_result.__jule_result_arg1=((*_499_current.alloc)._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1a87de290_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1a7b69b05_Token> _613_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_613_prev))._field_Id == static_cast<jule::U64>(17LLU)) || (_1a7b6a650_IsBinOp((*_613_prev.alloc)._field_Id) && ((*_613_prev.alloc)._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1a87de658_nextStPos(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _6815_tokens, jule::I64 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _696_braceN = 0LL;;
	jule::I64 _706_i = _6833_start;;
	for (; (_706_i < (*(_6815_tokens)).len()); (_706_i)++) {
		{
			jule::Bool _727_ok = false;;
			jule::Bool _737_terminated = false;;
			jule::Ptr<_1a7b69b05_Token> _743_tok = (*(_6815_tokens))[_706_i];;
			{
				auto &_match_expr{ (*(_743_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1a77525bc:;
					{
						if (((_696_braceN == 0LL) && (_706_i > _6833_start))) {
							if ((!(_1a87de290_prevIsIncompleteExpr(_6815_tokens, &(_706_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a87dde1b_isSt(_743_tok, (*(_6815_tokens))[(_706_i - 1LL)]);
									_727_ok = __jule_assign_result.__jule_result_arg0;
									_737_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_727_ok) {
									goto _julec_label_1a775625d;
								};
							};
						};
						(_696_braceN)++;
						goto _iter_next_1a7751159;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1a775280e:;
					{
						(_696_braceN)--;
						if (((_696_braceN == 0LL) && ((_706_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a87dde1b_isSt((*(_6815_tokens))[(_706_i + 1LL)], _743_tok);
								_727_ok = __jule_assign_result.__jule_result_arg0;
								_737_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_727_ok) {
								(_706_i)++;
								goto _julec_label_1a775625d;
							};
						};
						goto _iter_next_1a7751159;
					}
				}
				_match_end_1a7752765:;
			};
			if ((_696_braceN != 0LL)) {
				goto _iter_next_1a7751159;
			};
			if ((_706_i > _6833_start)) {
				if (_1a87de290_prevIsIncompleteExpr(_6815_tokens, &(_706_i))) {
					goto _iter_next_1a7751159;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a87dde1b_isSt(_743_tok, (*(_6815_tokens))[(_706_i - 1LL)]);
					_727_ok = __jule_assign_result.__jule_result_arg0;
					_737_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a87dde1b_isSt(_743_tok, _743_tok);
					_727_ok = __jule_assign_result.__jule_result_arg0;
					_737_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_727_ok))) {
				goto _iter_next_1a7751159;
			};
			_julec_label_1a775625d:;
			if (_737_terminated) {
				(_706_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _706_i;
			__jule_func_result.__jule_result_arg1 = _737_terminated;
			return __jule_func_result;;
		}
	_iter_next_1a7751159:;
	}
	_iter_end_1a7751159:;;
	__jule_func_result.__jule_result_arg0 = _706_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1a7b69b05_Token__jule_tuple_bool _1a87de9cc_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1a7b69b05_Token>> _13028_tokens) {
	__jule_tuple_sx_1a7b69b05_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1312_start = (*(_13016_i));;
	jule::Bool _1326_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a87de658_nextStPos(&(_13028_tokens), _1312_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_1326_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1a7b69b05_Token>> _1346_stTokens = _13028_tokens.slice(_1312_start, (*(_13016_i)));;
	if (_1326_terminated) {
		if ((_1346_stTokens.len() == 1LL)) {
			__jule_func_result = std::move(_1a87de9cc_skipSt(_13016_i, _13028_tokens));
return __jule_func_result;;
		};
		(_1346_stTokens).mut_slice(0LL, (_1346_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1346_stTokens;
	__jule_func_result.__jule_result_arg1 = _1326_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1a87ded0c_stmt>> _1a87e01b4_splitStmts(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _15120_tokens) {
	jule::Slice<jule::Ptr<_1a87ded0c_stmt>> _1526_stmts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a87ded0c_stmt>>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a87ded0c_stmt>(nullptr); __jule_collection; });;
	jule::I64 _1536_pos = 0LL;;
	while ((_1536_pos < (*(_15120_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1a7b69b05_Token>> _1557_stmt;
			jule::Bool _15513_terminated;
			({
				__jule_tuple_sx_1a7b69b05_Token__jule_tuple_bool __jule_assign_result = _1a87de9cc_skipSt(&(_1536_pos), (*(_15120_tokens)));
				_1557_stmt = __jule_assign_result.__jule_result_arg0;
				_15513_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1a87ded0c_stmt>> &__jule_push_dest = _1526_stmts; __jule_push_dest.push(jule::new_ptr<_1a87ded0c_stmt>(_1a87ded0c_stmt{._field_tokens=_1557_stmt, ._field_terminated=_15513_terminated})); };
		}
	_iter_next_1a7759ecb:;
	}
	_iter_end_1a7759ecb:;;
	return _1526_stmts;;
}



inline jule::Bool _1a880881a_isTypeOp(jule::U64* _89314_id) {
	return ((((*(_89314_id)) == static_cast<jule::U64>(65LLU)) || ((*(_89314_id)) == static_cast<jule::U64>(54LLU))) || ((*(_89314_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1a8808b28_isTypeRange(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _90021_tokens) {
	jule::Bool _9016_op = false;;
	{
		auto expr = _90021_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac505a52:;
		if (it != expr_end) {
			jule::I64 _9026_i = it - expr->begin();
			jule::Ptr<_1a7b69b05_Token> _9029_token = *it;
			{
				if (((*(_9029_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_9016_op) {
						return true;;
					};
					jule::I64 _9078_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1a7b69b05_Token>> _9088_lTokens = (*(_90021_tokens)).slice(_9026_i);;
					{
						auto expr = &(_9088_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac507416:;
						if (it != expr_end) {
							jule::Ptr<_1a7b69b05_Token> _90911_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_90911_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1ac507bb9:;
										{
											(_9078_rangeN)++;
											goto _iter_next_1ac507416;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1ac5080a4:;
										{
											(_9078_rangeN)--;
											goto _iter_next_1ac507416;
										}
									}
									_match_end_1ac507ea5:;
								};
								if ((_9078_rangeN == 0LL)) {
									return _1a880881a_isTypeOp(&((*(_90911_lToken))._field_Id));;
								};
							}
							_iter_next_1ac507416:;
							++it;
							goto _iter_begin_1ac507416;
						}
						_iter_end_1ac507416:;
					};
					return true;;
				};
				if ((!(_1a880881a_isTypeOp(&((*_9029_token.alloc)._field_Id))))) {
					return false;;
				};
				_9016_op=true;
			}
			_iter_next_1ac505a52:;
			++it;
			_9026_i++;
			goto _iter_begin_1ac505a52;
		}
		_iter_end_1ac505a52:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1a7b69b05_Token>> _1a8808de2_getBlockExpr(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _93322_tokens) {
	jule::I64 _9346_braceN = 0LL;;
	jule::I64 _9356_skipToNextBraceClose = 0LL;;
	{
		auto expr = _93322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac506745:;
		if (it != expr_end) {
			jule::I64 _9366_i = it - expr->begin();
			jule::Ptr<_1a7b69b05_Token> _9369_tok = *it;
			{
				{
					auto &_match_expr{ (*(_9369_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1ac50acaa:;
						{
							if (((((*(_93322_tokens)).len() - _9366_i) > 1LL) && ((*((*(_93322_tokens))[(_9366_i + 1LL)]))._field_Id == static_cast<jule::U64>(72LLU)))) {
								(_9356_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1ac50ad43:;
						{
							if (((_9346_braceN > 0LL) || (_9356_skipToNextBraceClose > 0LL))) {
								if ((_9356_skipToNextBraceClose > 0LL)) {
									(_9356_skipToNextBraceClose)--;
								};
								(_9346_braceN)++;
								goto _match_end_1ac50abde;
							};
							return (*(_93322_tokens)).slice(0LL, _9366_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac50ada9:;
						{
							(_9346_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac50ae20:;
						{
							(_9346_braceN)--;
						}
					}
					_match_end_1ac50abde:;
				};
			}
			_iter_next_1ac506745:;
			++it;
			_9366_i++;
			goto _iter_begin_1ac506745;
		}
		_iter_end_1ac506745:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1a7b69b05_Token__jule_tuple_sx_1a7b69b05_Token _1a88092aa_splitDelim(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _96520_tokens, jule::U64 _96538_delim) {
	__jule_tuple_sx_1a7b69b05_Token__jule_tuple_sx_1a7b69b05_Token __jule_func_result;
	jule::I64 _9666_func = -1LL;;
	jule::I64 _9676_rangeN = 0LL;;
	jule::I64 _9686_i = 0LL;;
	for (; (_9686_i < (*(_96520_tokens)).len()); (_9686_i)++) {
		{
			jule::Ptr<_1a7b69b05_Token> _9703_token = (*(_96520_tokens))[_9686_i];;
			{
				auto &_match_expr{ (*(_9703_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(29LLU)) {
					_case_begin_1ac510908:;
					{
						_9666_func=_9676_rangeN;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ac510980:;
					{
						(_9676_rangeN)++;
						goto _iter_next_1ac50e0dd;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ac5109e6:;
					{
						(_9676_rangeN)--;
						if ((_9666_func == _9676_rangeN)) {
							_9666_func=-1LL;
							if (((((*(_96520_tokens)).len() - _9686_i) > 1LL) && ((*((*(_96520_tokens))[(_9686_i + 1LL)]))._field_Id == static_cast<jule::U64>(8LLU)))) {
								(_9686_i)++;
								goto _iter_next_1ac50e0dd;
							};
						};
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1ac510a5c:;
					{
						(_9676_rangeN)--;
					}
				}
				_match_end_1ac510672:;
			};
			if ((((*(_9703_token))._field_Id == _96538_delim) && (_9676_rangeN == 0LL))) {
				jule::Slice<jule::Ptr<_1a7b69b05_Token>> _9948_l = (*(_96520_tokens)).slice(0LL, _9686_i);;
				jule::Slice<jule::Ptr<_1a7b69b05_Token>> _9958_r = (*(_96520_tokens)).slice((_9686_i + 1LL));;
				__jule_func_result.__jule_result_arg0 = _9948_l;
				__jule_func_result.__jule_result_arg1 = _9958_r;
				return __jule_func_result;;
			};
		}
	_iter_next_1ac50e0dd:;
	}
	_iter_end_1ac50e0dd:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1a8809574_findLowestPrecOp(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _100422_tokens) {
	jule::U8 _10096_prec = 255LLU;;
	jule::I64 _10106_precPos = -1LL;;
	jule::I64 _10126_braceN = 0LL;;
	jule::Bool _10136_skipToNextBraceOpen = false;;
	{
		auto expr = _100422_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac515be9:;
		if (it != expr_end) {
			jule::I64 _10146_i = it - expr->begin();
			jule::Ptr<_1a7b69b05_Token> *_10149_token = it;
			{
				{
					auto &_match_expr{ (*((*(_10149_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1ac516997:;
						{
							_10136_skipToNextBraceOpen=false;
							goto _case_begin_1ac516a30;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1ac516a30:;
						{
							(_10126_braceN)++;
							goto _iter_next_1ac515be9;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1ac516a96:;
						{
							(_10126_braceN)--;
							goto _iter_next_1ac515be9;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1ac516b0c:;
						{
							_10136_skipToNextBraceOpen=true;
							goto _iter_next_1ac515be9;
						}
					}
					_match_end_1ac5168cb:;
				};
				{
					
					if (_10136_skipToNextBraceOpen) {
						_case_begin_1ac5181c4:;
						{
							goto _iter_next_1ac515be9;
						}
					}
					else if ((_10146_i == 0LL)) {
						_case_begin_1ac51836c:;
						{
							goto _iter_next_1ac515be9;
						}
					}
					else if ((_10126_braceN > 0LL)) {
						_case_begin_1ac5183d3:;
						{
							goto _iter_next_1ac515be9;
						}
					}
					else if ((!(_1a7b6a650_IsBinOp((*((*(_10149_token))))._field_Id)))) {
						_case_begin_1ac518449:;
						{
							goto _iter_next_1ac515be9;
						}
					}
					_match_end_1ac51815d:;
				};
				jule::Ptr<_1a7b69b05_Token> _10433_left = (*(_100422_tokens))[(_10146_i - 1LL)];;
				if ((_1a7b6a342_IsUnaryOp((*(_10433_left))._field_Id) || ((*_10433_left.alloc)._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1ac515be9;
				};
				if (((_10146_i > 1LL) && ((*_10433_left.alloc)._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_1a7b69b05_Token> _10514_lleft = (*(_100422_tokens))[(_10146_i - 2LL)];;
					if (((*(_10514_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_10149_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*(*(_10149_token)).alloc)._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1ac515be9;
						};
					};
				};
				jule::U8 _10603_p = _1a7b69eac_Prec((*(_10149_token)));;
				if (((_10603_p != 0LLU) && (_10603_p <= _10096_prec))) {
					_10096_prec=_10603_p;
					_10106_precPos=_10146_i;
				};
			}
			_iter_next_1ac515be9:;
			++it;
			_10146_i++;
			goto _iter_begin_1ac515be9;
		}
		_iter_end_1ac515be9:;
	};
	return _10106_precPos;;
}



inline jule::Ptr<_1a7b8aa6b_IdentExpr> _1a880983d_buildIdentExpr(jule::Ptr<_1a7b69b05_Token>* _106924_token) {
	return jule::new_ptr<_1a7b8aa6b_IdentExpr>(_1a7b8aa6b_IdentExpr{._field_Token=(*(_106924_token)), ._field_Ident=(*((*(_106924_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1a7b69b05_Token__jule_tuple_int _1a8809b07_getRangeExprTokens(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _107728_tokens) {
	__jule_tuple_sx_1a7b69b05_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _10786_rangeN = 0LL;;
	jule::I64 _10796_i = ((*(_107728_tokens)).len() - 1LL);;
	for (; (_10796_i >= 0LL); (_10796_i)--) {
		{
			jule::Ptr<_1a7b69b05_Token> _10813_tok = (*(_107728_tokens))[_10796_i];;
			{
				auto &_match_expr{ (*(_10813_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ac5202ec:;
					{
						(_10786_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ac52062c:;
					{
						(_10786_rangeN)--;
					}
				}
				_match_end_1ac520374:;
			};
			if ((_10786_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_107728_tokens)).slice(0LL, _10796_i);
				__jule_func_result.__jule_result_arg1 = _10786_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1ac51e7c4:;
	}
	_iter_end_1ac51e7c4:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10786_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1a8809ed1_isAnonFnHead(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _110018_tokens) {
	{
		auto &_match_expr{ (*((*(_110018_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ac5220ce:;
			{
				if ((((*(_110018_tokens)).len() == 1LL) || ((*((*(_110018_tokens))[1LL]))._field_Id != static_cast<jule::U64>(29LLU)))) {
					goto _match_end_1ac52250d;
				};
				goto _case_begin_1ac522651;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1ac522651:;
			{
				if (((*((*(_110018_tokens))[((*(_110018_tokens)).len() - 1LL)]))._field_Id == static_cast<jule::U64>(73LLU))) {
					goto _match_end_1ac52250d;
				};
				return true;;
			}
		}
		_match_end_1ac52250d:;
	};
	return false;;
}



inline jule::Bool _1a880abd5_checkAssignTokens(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1a7b6e3bd_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _206_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5bb530:;
		if (it != expr_end) {
			jule::Ptr<_1a7b69b05_Token> *_219_t = it;
			{
				{
					auto &_match_expr{ (*((*(_219_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac5bbbe5:;
						{
							(_206_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac5bc07a:;
						{
							(_206_braceN)--;
						}
					}
					_match_end_1ac5bbe7b:;
				};
				{
					
					if ((_206_braceN < 0LL)) {
						_case_begin_1ac5bd1d0:;
						{
							return false;;
						}
					}
					else if ((_206_braceN > 0LL)) {
						_case_begin_1ac5bd268:;
						{
							goto _iter_next_1ac5bb530;
						}
					}
					else if (_1a7b6e951_IsAssignOp((*((*(_219_t))))._field_Id) || ((*(*(_219_t)).alloc)._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1ac5bd2ce:;
						{
							return true;;
						}
					}
					_match_end_1ac5bd136:;
				};
			}
			_iter_next_1ac5bb530:;
			++it;
			goto _iter_begin_1ac5bb530;
		}
		_iter_end_1ac5bb530:;
	};
	return false;;
}



inline _1d9144ab5_Log _1a880bda1_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1a7b7038b_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _1d9144ab5_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_1d9145027_Logf(_5143_fmt, _5156_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Slice<jule::Ptr<_1a7b69b05_Token>> _1a880c3ce_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1a7b69b05_Token> _732_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_732_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I64 _786_rangeN = 1LL;;
	jule::I64 _792_start = (*(_6915_i));;
	for (; ((_786_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1a7b69b05_Token> _813_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_813_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1ac5c3339:;
					{
						(_786_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1ac5c369c:;
					{
						(_786_rangeN)--;
					}
				}
				_match_end_1ac5c3614:;
			};
		}
	_iter_next_1ac5c0e3b:;
	}
	_iter_end_1ac5c0e3b:;;
	return (*(_6959_tokens)).slice(_792_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1a7b69b05_Token__jule_tuple_sx_1a7b69b05_Token _1a880c698_rangeLast(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _9919_tokens) {
	__jule_tuple_sx_1a7b69b05_Token__jule_tuple_sx_1a7b69b05_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _1032_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1032_first != static_cast<jule::U64>(73LLU)) && (_1032_first != static_cast<jule::U64>(76LLU))) && (_1032_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1096_braceN = 0LL;;
	jule::I64 _1106_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_1106_i >= 0LL); (_1106_i)--) {
		{
			jule::Ptr<_1a7b69b05_Token> _1123_token = (*(_9919_tokens))[_1106_i];;
			{
				auto &_match_expr{ (*(_1123_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ac5c7519:;
					{
						(_1096_braceN)++;
						goto _iter_next_1ac5c6859;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ac5c7849:;
					{
						(_1096_braceN)--;
					}
				}
				_match_end_1ac5c7591:;
			};
			if ((_1096_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _1106_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_1106_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1ac5c6859:;
	}
	_iter_end_1ac5c6859:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1a7b69b05_Token__jule_tuple_s_1d9144ab5_Log _1a880cb4e_parts(jule::Slice<jule::Ptr<_1a7b69b05_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1a7b69b05_Token__jule_tuple_s_1d9144ab5_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1416_rangeN = 0LL;;
	jule::I64 _1426_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5ca6d7:;
		if (it != expr_end) {
			jule::I64 _1436_i = it - expr->begin();
			jule::Ptr<_1a7b69b05_Token> _1439_token = *it;
			{
				{
					auto &_match_expr{ (*(_1439_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac5cb71b:;
						{
							(_1416_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac5cb793:;
						{
							(_1416_rangeN)--;
						}
					}
					else if (_match_expr == _13733_id) {
						_case_begin_1ac5cb809:;
						{
							if ((_1416_rangeN > 0LL)) {
								goto _iter_next_1ac5ca6d7;
							};
							if ((_13746_exprMust && ((_1436_i - _1426_last) <= 0LL))) {
								_1d9144ab5_Log _1545_err = _1a880bda1_makeErr((*(_1439_token))._field_Row, (*_1439_token.alloc)._field_Column, &((*_1439_token.alloc)._field_File), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());;
								{ jule::Slice<_1d9144ab5_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_1545_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1426_last, _1436_i)); };
							_1426_last=(_1436_i + 1LL);
						}
					}
					_match_end_1ac5cb650:;
				};
			}
			_iter_next_1ac5ca6d7:;
			++it;
			_1436_i++;
			goto _iter_begin_1ac5ca6d7;
		}
		_iter_end_1ac5ca6d7:;
	};
	if ((_1426_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1a7b69b05_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1426_last)); };
	};
	return __jule_func_result;;
}



inline jule::U64 _1a880cdd5_getCloseOfBrace(jule::U64 _16720_left) {
	{
		auto &_match_expr{ _16720_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1ac5ced4b:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1ac5cede5:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1ac5cee6c:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1ac5cb122:;
			{
				return _16720_left;;
			}
		}
		_match_end_1ac5cb1ee:;
	};
}



inline _1d9144ab5_Log _1a880d314_compilerErr(jule::Ptr<_1a7b69b05_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args) {
	return _1d9144ab5_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_18017_token))))._field_Row, ._field_Column=(*((*(_18017_token))))._field_Column, ._field_Path=(*((*((*(_18017_token))))._field_File))._field_Path, ._field_Text=_1d9145027_Logf((*(_18033_fmt)), _18046_args), ._field_Line=_1a7b713d1_GetRow((*((*(_18017_token))))._field_File, (*((*(_18017_token))))._field_Row), ._field_Suggestion=jule::Str()};;
}



inline void _1a880d6aa_pushSuggestion(_1d9144ab5_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args) {
	(*(_19130_log))._field_Suggestion=_1d9145027_Logf(_19141_fmt, _19154_args);
}



inline jule::Ptr<_1a7b800b0_TypeDecl> _1a88205bd_buildVoidType(void) {
	return jule::new_ptr<_1a7b800b0_TypeDecl>(_1a7b800b0_TypeDecl{._field_Token=jule::Ptr<_1a7b69b05_Token>(nullptr), ._field_Kind=jule::Any(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1a80324ea_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("windows", 7))) {
			_case_begin_1ac7a9300:;
			{
				__jule_func_result.__jule_result_arg0=_1d9147cd8_IsWindows(_1d9258a64_Os);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("darwin", 6))) {
			_case_begin_1ac7a9366:;
			{
				__jule_func_result.__jule_result_arg0=_1d91480e6_IsDarwin(_1d9258a64_Os);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("linux", 5))) {
			_case_begin_1ac7a8ed1:;
			{
				__jule_func_result.__jule_result_arg0=_1d91483b0_IsLinux(_1d9258a64_Os);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unix", 4))) {
			_case_begin_1ac7a9047:;
			{
				__jule_func_result.__jule_result_arg0=_1d914901a_IsUnix(_1d9258a64_Os);
			}
		}
		else {
			_case_begin_1ac7a893c:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1ac7a8db0:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1a803263d_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i386", 4))) {
			_case_begin_1ac7ab863:;
			{
				__jule_func_result.__jule_result_arg0=_1d9148701_IsI386(_1d9258d1c_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("amd64", 5))) {
			_case_begin_1ac7ab8c9:;
			{
				__jule_func_result.__jule_result_arg0=_1d9148987_IsAmd64(_1d9258d1c_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("arm64", 5))) {
			_case_begin_1ac7ab544:;
			{
				__jule_func_result.__jule_result_arg0=_1d9148c51_IsArm64(_1d9258d1c_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x64", 3))) {
			_case_begin_1ac7ab5aa:;
			{
				__jule_func_result.__jule_result_arg0=_1d9149636_Is64Bit(_1d9258d1c_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x32", 3))) {
			_case_begin_1ac7ab621:;
			{
				__jule_func_result.__jule_result_arg0=_1d91493e4_Is32Bit(_1d9258d1c_Arch);
			}
		}
		else {
			_case_begin_1ac7aaea0:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1ac7ab423:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a80327d6_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1daedecd2_Base(_5029_p);
	jule::I64 _522_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_522_n - _1daede74e_Ext(_5029_p).len()));;
	jule::Str _586_a1 = jule::Str();;
	jule::Str _616_a2 = jule::Str();;
	jule::I64 _646_i = _1daec0697_FindLastByte(_5029_p, '_');;
	if ((_646_i == -1LL)) {
		jule::Bool _677_ok;
		jule::Bool _6715_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a80324ea_checkOs(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6715_exist) {
			return _677_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a803263d_checkArch(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6715_exist)) || _677_ok);;
	};
	if (((_646_i + 1LL) >= _522_n)) {
		return true;;
	};
	_586_a1=_5029_p.slice((_646_i + 1LL));
	(_5029_p).mut_slice(0LL, _646_i);;
	_646_i=_1daec0697_FindLastByte(_5029_p, '_');
	if ((_646_i != -1LL)) {
		_616_a2=_5029_p.slice((_646_i + 1LL));
	};
	if ((_616_a2).empty()) {
		jule::Bool _887_ok;
		jule::Bool _8815_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a80324ea_checkOs(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8815_exist) {
			return _887_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a803263d_checkArch(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8815_exist)) || _887_ok);;
	};
	jule::Bool _966_ok;
	jule::Bool _9614_exist;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a803263d_checkArch(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9614_exist) {
		if ((!(_966_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a80324ea_checkOs(_616_a2);
			_966_ok = __jule_assign_result.__jule_result_arg0;
			_9614_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9614_exist)) || _966_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a80324ea_checkOs(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9614_exist)) || _966_ok);;
}



inline void _1a804d24c_setOsVars(jule::Slice<jule::Str>* _3919_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3919_vars)); __jule_push_dest.push(_1d9258a64_Os); };
	if (_1d914901a_IsUnix(_1d9258a64_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3919_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1a804d4c2_setArchVars(jule::Slice<jule::Str>* _4721_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4721_vars)); __jule_push_dest.push(_1d9258d1c_Arch); };
	if (_1d9149636_Is64Bit(_1d9258d1c_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4721_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_1d91493e4_Is32Bit(_1d9258d1c_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4721_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1a804d7ad_initVars(jule::Slice<jule::Str>* _5818_vars, _1a804ce2d_CompileInfo* _5832_info) {
	_1a804d24c_setOsVars(_5818_vars);
	_1a804d4c2_setArchVars(_5818_vars);
	if ((*(_5832_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5818_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5832_info))._field_AtomicRC) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5818_vars)); __jule_push_dest.push(jule::Str::lit("atomicrc", 8)); };
	};
	if ((*(_5832_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5818_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5832_info))._field_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1ac7b7ebd:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5818_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1ac7b7297:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5818_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1ac7b7231:;
	};
	{
		auto &_match_expr{ (*(_5832_info))._field_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1ac7b7330:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5818_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1ac7b7011:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5818_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1ac7b8c9e:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5818_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1ac7b8c38:;
	};
}



inline jule::Slice<jule::U8> _1a882468d_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__1d828d869_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(_1a9954ee8_toStr(jule::Str::lit("error: file cannot read", 23)));
			;
			_1d92579db_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1d9144ab5_Log _1a882499b_flatCompilerErr(jule::Str _4120_text) {
	return _1d9144ab5_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=_4120_text, ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Ptr<_1a7bba8d1_Fn> _1a7e9d840_RuntimeFindFn(jule::Ptr<_1a7c36793_ImportInfo>* _1223_runtime, jule::Str _1245_ident) {
	;
	jule::Ptr<_1a7bba8d1_Fn> _146_f = _1a7c37d9e_FindFn((*(_1223_runtime)).ptr(), _1245_ident, false);;
	if ((_146_f == nullptr)) {
		jule::outln(_1ac808d99_toStr(_1245_ident));
		__jule_panic_s(jule::Str::lit("runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 103) + jule::Str("\nlocation: julec/obj/runtime.jule:17:3"));;
	};
	return _146_f;;
}



inline jule::Ptr<_1a7ba5ca6_Struct> _1a7e9de39_RuntimeFindStruct(jule::Ptr<_1a7c36793_ImportInfo>* _2727_runtime, jule::Str _2749_ident) {
	;
	jule::Ptr<_1a7ba5ca6_Struct> _296_f = _1a7c379a3_FindStruct((*(_2727_runtime)).ptr(), _2749_ident, false);;
	if ((_296_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 101) + jule::Str("\nlocation: julec/obj/runtime.jule:31:3"));;
	};
	return _296_f;;
}



inline void _1a882930d_pushPasses(jule::Ptr<_1a7c396b9_Package>* _12220_p, jule::Slice<jule::Str>* _12244_passes) {
	{
		auto expr = &((*((*(_12220_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac80aa9e:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _12314_f = *it;
			{
				_julec_label_1ac80b220:;
				{
					auto expr = &((*(_12314_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac80b64e:;
					if (it != expr_end) {
						_1a7bc3059_Pass _12510_pass = *it;
						{
							if ((_12510_pass._field_Text).empty()) {
								goto _iter_next_1ac80b64e;
							};
							{
								auto expr = _12244_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ac80d684:;
								if (it != expr_end) {
									jule::Str _12911_cpass = *it;
									{
										if ((_12911_cpass == _12510_pass._field_Text)) {
											goto _iter_next_1ac80b64e;
										};
									}
									_iter_next_1ac80d684:;
									++it;
									goto _iter_begin_1ac80d684;
								}
								_iter_end_1ac80d684:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_12244_passes)); __jule_push_dest.push(_12510_pass._field_Text); };
						}
						_iter_next_1ac80b64e:;
						++it;
						goto _iter_begin_1ac80b64e;
					}
					_iter_end_1ac80b64e:;
				};
			}
			_iter_next_1ac80aa9e:;
			++it;
			goto _iter_begin_1ac80aa9e;
		}
		_iter_end_1ac80aa9e:;
	};
}



inline jule::Slice<jule::Str> _1a88296c6_getAllUniquePasses(jule::Ptr<_1a7c396b9_Package>* _13928_pkg, jule::Slice<jule::Ptr<_1a7c36793_ImportInfo>> _13953_uses) {
	jule::Slice<jule::Str> _14010_passes = nullptr;;
	_1a882930d_pushPasses(_13928_pkg, &(_14010_passes));
	{
		auto expr = &(_13953_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac80e5db:;
		if (it != expr_end) {
			jule::Ptr<_1a7c36793_ImportInfo> _14314_u = *it;
			{
				if ((!((*(_14314_u))._field_Binded))) {
					_1a882930d_pushPasses(&((*_14314_u.alloc)._field_Package), &(_14010_passes));
				};
			}
			_iter_next_1ac80e5db:;
			++it;
			goto _iter_begin_1ac80e5db;
		}
		_iter_end_1ac80e5db:;
	};
	return _14010_passes;;
}



inline _1a804ce2d_CompileInfo _1a88298d5_buildCompileInfo(void) {
	_1a804ce2d_CompileInfo _1536_info = _1a804ce2d_CompileInfo{._field_Prod=_1d92614d9_Production, ._field_Test=_1d9260b26_Test, ._field_AtomicRC=_1d9261781_AtomicRC, ._field_Compiler=jule::Str::lit("clang", 5), ._field_CppStd=jule::Str::lit("cpp14", 5)};;
	{
		auto &_match_expr{ _1d925db02_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1ac8109e9:;
			{
				_1536_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("clang", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1ac810b5e:;
			{
				_1536_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("gcc", 3));
			}
		}
		_match_end_1ac810ac6:;
	};
	{
		auto &_match_expr{ _1d92603b7_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1ac810bd6:;
			{
				_1536_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp14", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1ac81191d:;
			{
				_1536_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp17", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1ac81118c:;
			{
				_1536_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp20", 5));
			}
		}
		_match_end_1ac811c1a:;
	};
	return _1536_info;;
}



inline void _1a8829b8d_pushRuntimeToAST(jule::Ptr<_1a7b7d19b_AST>* _17926_f) {
	jule::Ptr<_1a7b9d023_UseDecl> _1806_decl = jule::new_ptr<_1a7b9d023_UseDecl>(_1a7b9d023_UseDecl{._field_Token=nullptr, ._field_LinkPath=jule::Str::lit("std::runtime", 12), ._field_Alias=jule::Str(), ._field_Full=false, ._field_Selected=nullptr, ._field_Binded=false, ._field_Std=true});;
	{ jule::Slice<jule::Ptr<_1a7b9d023_UseDecl>> &__jule_push_dest = (*((*(_17926_f))))._field_UseDecls; __jule_push_dest.push(_1806_decl); };
	if (((*((*(_17926_f))))._field_UseDecls.len() > 1LL)) {
		(*((*(_17926_f))))._field_UseDecls[((*((*(_17926_f))))._field_UseDecls.len() - 1LL)]=(*((*(_17926_f))))._field_UseDecls[0LL];
		(*((*(_17926_f))))._field_UseDecls[0LL]=_1806_decl;
	};
}



inline void _1a882a386_IterPackages(jule::Ptr<_1a882795a_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1a7c396b9_Package>*> _731_f) {
	{
		auto expr = &((*((*(_722_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8293c5:;
		if (it != expr_end) {
			jule::Ptr<_1a7c36793_ImportInfo> _814_used = *it;
			{
				if ((!((*(_814_used))._field_Binded))) {
					_731_f(&((*_814_used.alloc)._field_Package));
				};
			}
			_iter_next_1ac8293c5:;
			++it;
			goto _iter_begin_1ac8293c5;
		}
		_iter_end_1ac8293c5:;
	};
	_731_f(&((*((*(_722_ir))))._field_Main));
}



inline void _1a882a6b6_IterFiles(jule::Ptr<_1a7c396b9_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1a7ccd9e4_SymbolTable>*> _1634_f) {
	{
		auto expr = &((*((*(_1619_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac832774:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _1714_file = *it;
			{
				_1634_f(&(_1714_file));
			}
			_iter_next_1ac832774:;
			++it;
			goto _iter_begin_1ac832774;
		}
		_iter_end_1ac832774:;
	};
}



inline void _1a882aa5c_iterTraitInheritMethods(jule::Ptr<_1a7bce362_Trait>* _2233_base, jule::Ptr<_1a7bce362_Trait>* _2252_t, jule::Fn<void,jule::Ptr<_1a7bba8d1_Fn>*> _2263_f) {
	_1a882ae7a_iterTraitInheritMethods1(_2233_base, _2252_t, _2263_f);
	{
		auto expr = &((*((*(_2252_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8338b8:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _2414_m = *it;
			{
				if ((!(_1a88310e5_ContainsTraitMethod(_2233_base, &((*(_2414_m))._field_Ident))))) {
					_2263_f(&(_2414_m));
				};
			}
			_iter_next_1ac8338b8:;
			++it;
			goto _iter_begin_1ac8338b8;
		}
		_iter_end_1ac8338b8:;
	};
}



inline void _1a882ae7a_iterTraitInheritMethods1(jule::Ptr<_1a7bce362_Trait>* _3134_base, jule::Ptr<_1a7bce362_Trait>* _3153_t, jule::Fn<void,jule::Ptr<_1a7bba8d1_Fn>*> _3164_f) {
	{
		auto expr = &((*((*(_3153_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac834c60:;
		if (it != expr_end) {
			jule::Ptr<_1a7d244a7_TypeSymbol> _3214_inh = *it;
			{
				jule::Ptr<_1a7bce362_Trait> _337_t2 = _1a7d20c56_Trait((*(_3214_inh))._field_Kind.ptr());;
				_1a882aa5c_iterTraitInheritMethods(_3134_base, &(_337_t2), _3164_f);
			}
			_iter_next_1ac834c60:;
			++it;
			goto _iter_begin_1ac834c60;
		}
		_iter_end_1ac834c60:;
	};
}



inline void _1a882b233_IterTraitMethods(jule::Ptr<_1a7bce362_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1a7bba8d1_Fn>*> _3937_f) {
	{
		auto expr = &((*((*(_3926_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac836206:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _4014_m = *it;
			{
				_3937_f(&(_4014_m));
			}
			_iter_next_1ac836206:;
			++it;
			goto _iter_begin_1ac836206;
		}
		_iter_end_1ac836206:;
	};
	_1a882ae7a_iterTraitInheritMethods1(_3926_t, _3926_t, _3937_f);
}



inline jule::Bool _1a882d510_IsForwarded(jule::Ptr<_1a7c1397e_Scope>* _2417_s) {
	jule::Any _252_last = (*((*(_2417_s))))._field_Stmts[((*((*(_2417_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _252_last };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ac861bb0:;
			{
				{
					auto &_match_expr{ (*(_252_last.cast_ptr<_1a7cd41ae_Data>(&__jule_any_type31)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1ac861e02:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1ac862a6d:;
						{
							return false;;
						}
					}
					_match_end_1ac862a07:;
				};
			}
		}
		else {
			_case_begin_1ac861d36:;
			{
				return true;;
			}
		}
		_match_end_1ac861cc0:;
	};
}



inline jule::Bool _1a882d81d_IsExprComesFromBind(jule::Ptr<_1a7cd41ae_Data>* _4025_d) {
	{
		auto &_match_expr{ (*((*(_4025_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac8635b8:;
			{
				return (*((*((*(_4025_d))))._field_Model.unsafe_cast_ptr<_1a7c7b178_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ac8637c7:;
			{
				return (*((*((*((*((*(_4025_d))))._field_Model.unsafe_cast_ptr<_1a7bb2994_StructSubIdentExprModel>()))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1ac86262d:;
			{
				return false;;
			}
		}
		_match_end_1ac8625b7:;
	};
}



inline jule::Bool _1a882dad7_IsAny(jule::Ptr<_1a7d1bc96_TypeKind>* _5215_t) {
	if ((_1a7d1ee86_TypeEnum((*(_5215_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1a7d24dae_Prim> _562_prim = _1a7d1e44c_Prim((*(_5215_t)).ptr());;
	return ((_562_prim != nullptr) && _1a7d28610_IsAny(_562_prim));;
}



inline jule::Bool _1a882de28_IsClosure(jule::Ptr<_1a7bb0c39_AnonFnExprModel>* _6115_m) {
	return ((*((*(_6115_m))))._field_Captured.len() > 0LL);;
}



inline jule::Bool _1a882e1ae_IsOpMethod(jule::Ptr<_1a7bba8d1_Fn>* _6416_m) {
	if ((((*((*(_6416_m))))._field_Generics.len() > 0LL) || ((*((*(_6416_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1a7bbd8b2_FnIns> _682_mi = (*((*(_6416_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1a882e533_IsTraitMethod(jule::Ptr<_1a7ba8b11_StructIns>* _8023_owner, jule::Ptr<_1a7bbd8b2_FnIns>* _8043_f) {
	{
		auto expr = &((*((*((*(_8023_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8690a2:;
		if (it != expr_end) {
			jule::Ptr<_1a7bce362_Trait> _8114_t = *it;
			{
				if ((_1a7bd0044_FindMethod(_8114_t.ptr(), (*((*((*(_8043_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1ac8690a2:;
			++it;
			goto _iter_begin_1ac8690a2;
		}
		_iter_end_1ac8690a2:;
	};
	return false;;
}



inline jule::Bool _1a882e8a7_IsStdPackage(jule::Str _9417_f, jule::Str _9425_p) {
	return _1daebc991_HasPrefix(_9417_f, _1daede4b8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1d9257eb4_PathStdlib; (*it++) = _9425_p; __jule_collection; })));;
}



inline jule::Ptr<_1a7b7e4cc_Directive> _1a88308a8_FindDirective(jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>* _1123_directives, jule::Str _1154_tag) {
	{
		auto expr = _1123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac875575:;
		if (it != expr_end) {
			jule::Ptr<_1a7b7e4cc_Directive> _1214_dr = *it;
			{
				if (((*((*(_1214_dr))._field_Tag))._field_Kind == _1154_tag)) {
					return _1214_dr;;
				};
			}
			_iter_next_1ac875575:;
			++it;
			goto _iter_begin_1ac875575;
		}
		_iter_end_1ac875575:;
	};
	return nullptr;;
}



inline jule::Bool _1a8830c71_HasDirective(jule::Slice<jule::Ptr<_1a7b7e4cc_Directive>>* _2118_directives, jule::Str _2149_tag) {
	return (_1a88308a8_FindDirective(&((*((&((*(_2118_directives))))))), _2149_tag) != nullptr);;
}



inline jule::Bool _1a88310e5_ContainsTraitMethod(jule::Ptr<_1a7bce362_Trait>* _2629_t, jule::Str* _2641_ident) {
	{
		auto expr = &((*((*(_2629_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8771ae:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _279_m = *it;
			{
				if (((*(_279_m))._field_Ident == (*(_2641_ident)))) {
					return true;;
				};
			}
			_iter_next_1ac8771ae:;
			++it;
			goto _iter_begin_1ac8771ae;
		}
		_iter_end_1ac8771ae:;
	};
	return false;;
}



inline jule::I64 _1a88317aa_FindTraitTypeOffsetS(jule::Ptr<_1a7bce362_Trait> _3925_t, jule::Ptr<_1a7ba8b11_StructIns> _3940_s) {
	if (((*(_3925_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _436_i = 0LL;;
	{
		auto expr = &((*_3925_t.alloc)._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac878dc5:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba5ca6_Struct> *_449_si = it;
			{
				if (((*(_3940_s))._field_Decl == (*(_449_si)))) {
					{
						auto expr = &((*((*(_449_si))))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac879cb6:;
						if (it != expr_end) {
							jule::Ptr<_1a7ba8b11_StructIns> *_4611_ins = it;
							{
								if (((*(_4611_ins)) == _3940_s)) {
									return _436_i;;
								};
								(_436_i)++;
							}
							_iter_next_1ac879cb6:;
							++it;
							goto _iter_begin_1ac879cb6;
						}
						_iter_end_1ac879cb6:;
					};
					goto _iter_end_1ac878dc5;
				} else {
					_436_i+=(*((*(_449_si))))._field_Instances.len();
				};
			}
			_iter_next_1ac878dc5:;
			++it;
			goto _iter_begin_1ac878dc5;
		}
		_iter_end_1ac878dc5:;
	};
	return -1LL;;
}



inline jule::I64 _1a8831b2e_FindTraitTypeOffset(jule::Ptr<_1a7bce362_Trait> _6224_t, jule::Ptr<_1a7d1bc96_TypeKind> _6239_k) {
	if (((*(_6224_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1a7ba8b11_StructIns> _6610_s = nullptr;;
	if ((_1a7d1e6d3_Sptr(_6239_k.ptr()) != nullptr)) {
		_6239_k=(*(_1a7d1e6d3_Sptr(_6239_k)))._field_Elem;
	};
	_6610_s=_1a7d209c0_Struct(_6239_k);
	if ((_6610_s == nullptr)) {
		return -1LL;;
	};
	return _1a88317aa_FindTraitTypeOffsetS(_6224_t, _6610_s);;
}



inline jule::Ptr<_1a7bbd8b2_FnIns> _1a883205d_FindOperator(jule::Ptr<_1a7ba8b11_StructIns>* _7822_s, jule::U64 _7837_op, jule::Bool _7850_unary) {
	{
		auto &_match_expr{ _7837_op };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1ac87d7ae:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Eq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1ac87d5b1:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Gt;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ac87d627:;
			{
				return (*((*(_7822_s))))._field_Operators._field_GtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1ac87d825:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Lt;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ac87d89c:;
			{
				return (*((*(_7822_s))))._field_Operators._field_LtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1ac87d924:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shl;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ac87da45:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shr;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1ac87daab:;
			{
				if (_7850_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Pos;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Add;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ac87db22:;
			{
				if (_7850_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Neg;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Sub;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1ac87db88:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Div;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac87dbee:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mul;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ac87dc76:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mod;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ac87dced:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAnd;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1ac87dd75:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOr;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ac87ddec:;
			{
				if (_7850_unary) {
					return (*((*(_7822_s))))._field_Operators._field_BitNot;;
				};
				return (*((*(_7822_s))))._field_Operators._field_BitXor;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1ac87de74:;
			{
				return (*((*(_7822_s))))._field_Operators._field_AddAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1ac87deeb:;
			{
				return (*((*(_7822_s))))._field_Operators._field_SubAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1ac87e073:;
			{
				return (*((*(_7822_s))))._field_Operators._field_DivAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1ac87e0ea:;
			{
				return (*((*(_7822_s))))._field_Operators._field_MulAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1ac87e172:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ModAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1ac87e1e9:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShlAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1ac87e271:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1ac87e2e8:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1ac87e370:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAndAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1ac87e3e7:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitXorAssign;;
			}
		}
		else {
			_case_begin_1ac87d1e8:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac87d32a:;
	};
}



inline jule::Ptr<_1a7bbd8b2_FnIns> _1a88323d2_FindFnGenericInstance(jule::Ptr<_1a7bba8d1_Fn>* _14731_f, jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>> _14739_generics) {
	_julec_label_1ac887ea0:;
	{
		auto expr = &((*((*(_14731_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac88ad3d:;
		if (it != expr_end) {
			jule::Ptr<_1a7bbd8b2_FnIns> _14914_ins = *it;
			{
				{
					auto expr = &((*(_14914_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac88b745:;
					if (it != expr_end) {
						jule::I64 _1507_i = it - expr->begin();
						{
							if ((!(_1a7d1c4d3_Equal((*((*(_14914_ins))._field_Generics[_1507_i]))._field_Kind, _14739_generics[_1507_i])))) {
								goto _iter_next_1ac88ad3d;
							};
						}
						_iter_next_1ac88b745:;
						++it;
						_1507_i++;
						goto _iter_begin_1ac88b745;
					}
					_iter_end_1ac88b745:;
				};
				return _14914_ins;;
			}
			_iter_next_1ac88ad3d:;
			++it;
			goto _iter_begin_1ac88ad3d;
		}
		_iter_end_1ac88ad3d:;
	};
	__jule_panic_s(jule::Str::lit("generic instance lookup failed, this is an implementation mistake", 65) + jule::Str("\nlocation: julec/obj/lookup.jule:157:2"));;
}



inline jule::Ptr<_1a7ba8b11_StructIns> _1a8832866_FindStructGenericInstance(jule::Ptr<_1a7ba5ca6_Struct>* _16335_s, jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>> _16347_generics) {
	_julec_label_1ac88bbb8:;
	{
		auto expr = &((*((*(_16335_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac88ce3e:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba8b11_StructIns> _16514_ins = *it;
			{
				{
					auto expr = &((*(_16514_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac88d846:;
					if (it != expr_end) {
						jule::I64 _1667_i = it - expr->begin();
						{
							if ((!(_1a7d1c4d3_Equal((*((*(_16514_ins))._field_Generics[_1667_i]))._field_Kind, _16347_generics[_1667_i])))) {
								goto _iter_next_1ac88ce3e;
							};
						}
						_iter_next_1ac88d846:;
						++it;
						_1667_i++;
						goto _iter_begin_1ac88d846;
					}
					_iter_end_1ac88d846:;
				};
				return _16514_ins;;
			}
			_iter_next_1ac88ce3e:;
			++it;
			goto _iter_begin_1ac88ce3e;
		}
		_iter_end_1ac88ce3e:;
	};
	__jule_panic_s(jule::Str::lit("generic instance lookup failed, this is an implementation mistake", 65) + jule::Str("\nlocation: julec/obj/lookup.jule:173:2"));;
}



inline jule::Bool _1ac8272c4_isOrdered(jule::Ptr<_1a7c7b178_Var>* _1418_t, jule::Slice<jule::Ptr<_1a7c7b178_Var>> _1425_s) {
	_julec_label_1ac829705:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac829b56:;
		if (it != expr_end) {
			jule::Ptr<_1a7c7b178_Var> *_169_d = it;
			{
				{
					
{
						_case_begin_1ac82a45e:;
						{
							if ((*((*(_169_d))))._field_Constant) {
								goto _iter_next_1ac829b56;
							};
						}
					}
					_match_end_1ac82a3d7:;
				};
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac82ab46:;
					if (it != expr_end) {
						jule::Ptr<_1a7c7b178_Var> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1ac829b56;
							};
						}
						_iter_next_1ac82ab46:;
						++it;
						goto _iter_begin_1ac82ab46;
					}
					_iter_end_1ac82ab46:;
				};
				return false;;
			}
			_iter_next_1ac829b56:;
			++it;
			goto _iter_begin_1ac829b56;
		}
		_iter_end_1ac829b56:;
	};
	return true;;
}

inline jule::Bool _1ac82d044_isOrdered(jule::Ptr<_1a7ba5ca6_Struct>* _1418_t, jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>> _1425_s) {
	_julec_label_1ac830431:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac830882:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba5ca6_Struct> *_169_d = it;
			{
				;
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac830e9d:;
					if (it != expr_end) {
						jule::Ptr<_1a7ba5ca6_Struct> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1ac830882;
							};
						}
						_iter_next_1ac830e9d:;
						++it;
						goto _iter_begin_1ac830e9d;
					}
					_iter_end_1ac830e9d:;
				};
				return false;;
			}
			_iter_next_1ac830882:;
			++it;
			goto _iter_begin_1ac830882;
		}
		_iter_end_1ac830882:;
	};
	return true;;
}



inline void _1ac8248ed_order(jule::Slice<jule::Ptr<_1a7c7b178_Var>> _3717_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_1ac824db5:;
	jule::I64 _406_j = _386_i;;
	_julec_label_1ac825b52:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1a7c7b178_Var> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1ac826d40:;
				if (it != expr_end) {
					jule::Ptr<_1a7c7b178_Var> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1ac826207;
						};
					}
					_iter_next_1ac826d40:;
					++it;
					goto _iter_begin_1ac826d40;
				}
				_iter_end_1ac826d40:;
			};
			if (_1ac8272c4_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1ac826207:;
	}
	_iter_end_1ac826207:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1ac824db5;
	};
}

inline void _1ac8254d1_order(jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>> _3717_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_1ac82646b:;
	jule::I64 _406_j = _386_i;;
	_julec_label_1ac82a1a6:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1a7ba5ca6_Struct> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1ac82cab0:;
				if (it != expr_end) {
					jule::Ptr<_1a7ba5ca6_Struct> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1ac82be77;
						};
					}
					_iter_next_1ac82cab0:;
					++it;
					goto _iter_begin_1ac82cab0;
				}
				_iter_end_1ac82cab0:;
			};
			if (_1ac82d044_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1ac82be77:;
	}
	_iter_end_1ac82be77:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1ac82646b;
	};
}



inline void _1a8971246_EliminateDefines(jule::Ptr<_1a882795a_IR>* _40226_ir) {
	jule::Ptr<_1a896cd58_ObjectDeadCode> _4036_ocd = static__1a896d3ca_new(_40226_ir);;
	_1a8970e8d_elimanate(_4036_ocd);
}



inline void _1a89751b2_eliminateDeadCodeOfScope(jule::Ptr<_1a7c1397e_Scope> _23833_s) {
	jule::Slice<jule::Ptr<_1a7c164cb_Label>> _2392_labels = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c164cb_Label>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7c164cb_Label>(nullptr); __jule_collection; });;
	jule::Slice<jule::Ptr<_1a7c16b3b_GotoSt>> _2402_gotos = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c16b3b_GotoSt>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7c16b3b_GotoSt>(nullptr); __jule_collection; });;
	jule::Ptr<_1a8971e7d_scopeDeadCode> _2416_sdc = jule::new_ptr<_1a8971e7d_scopeDeadCode>(_1a8971e7d_scopeDeadCode{._field_parent=jule::Ptr<_1a8971e7d_scopeDeadCode>(nullptr), ._field_s=_23833_s, ._field_i=0, ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1a7c164cb_Label>>>)((&(_2392_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1a7c16b3b_GotoSt>>>)((&(_2402_gotos)))), ._field_except=false});;
	{
		_1a8974db5_optimizeStmts(_2416_sdc);
	};
}



inline void _1a8975437_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a7bba8d1_Fn>>* _25033_funcs) {
	{
		auto expr = _25033_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac920554:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _25114_func = *it;
			{
				{
					auto expr = &((*(_25114_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac923007:;
					if (it != expr_end) {
						jule::Ptr<_1a7bbd8b2_FnIns> _25215_ins = *it;
						{
							_1a89751b2_eliminateDeadCodeOfScope((*(_25215_ins))._field_Scope);
						}
						_iter_next_1ac923007:;
						++it;
						goto _iter_begin_1ac923007;
					}
					_iter_end_1ac923007:;
				};
			}
			_iter_next_1ac920554:;
			++it;
			goto _iter_begin_1ac920554;
		}
		_iter_end_1ac920554:;
	};
}



inline void _1a8975668_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1a7ba5ca6_Struct>>* _25937_structs) {
	{
		auto expr = _25937_structs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac922e6e:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba5ca6_Struct> _26014_s = *it;
			{
				{
					auto expr = &((*(_26014_s))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac924118:;
					if (it != expr_end) {
						jule::Ptr<_1a7ba8b11_StructIns> _26115_ins = *it;
						{
							_1a8975437_eliminateScopeFunctions(&((*(_26115_ins))._field_Methods));
						}
						_iter_next_1ac924118:;
						++it;
						goto _iter_begin_1ac924118;
					}
					_iter_end_1ac924118:;
				};
			}
			_iter_next_1ac922e6e:;
			++it;
			goto _iter_begin_1ac922e6e;
		}
		_iter_end_1ac922e6e:;
	};
}



inline void _1a8975921_eliminateFunctionsScopePackage(jule::Ptr<_1a7c396b9_Package>* _26740_pkg) {
	{
		auto expr = &((*((*(_26740_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac924dc7:;
		if (it != expr_end) {
			jule::Ptr<_1a7ccd9e4_SymbolTable> _26814_f = *it;
			{
				_1a8975437_eliminateScopeFunctions(&((*(_26814_f))._field_Funcs));
				_1a8975668_eliminateScopeStructMethods(&((*_26814_f.alloc)._field_Structs));
			}
			_iter_next_1ac924dc7:;
			++it;
			goto _iter_begin_1ac924dc7;
		}
		_iter_end_1ac924dc7:;
	};
}



inline void _1a8975b1e_eliminateScopePackage(jule::Ptr<_1a7c396b9_Package>* _27431_pkg) {
	_1a8975921_eliminateFunctionsScopePackage(_27431_pkg);
}



inline void _1a8975d50_EliminateScopes(jule::Ptr<_1a882795a_IR>* _27925_ir) {
	jule::I64 _2806_i = ((*((*(_27925_ir))))._field_Used.len() - 1LL);;
	for (; (_2806_i >= 0LL); (_2806_i)--) {
		{
			jule::Ptr<_1a7c36793_ImportInfo> _2827_u = (*((*(_27925_ir))))._field_Used[_2806_i];;
			if ((!((*(_2827_u))._field_Binded))) {
				_1a8975b1e_eliminateScopePackage(&((*_2827_u.alloc)._field_Package));
			};
		}
	_iter_next_1ac9265d2:;
	}
	_iter_end_1ac9265d2:;;
	_1a8975b1e_eliminateScopePackage(&((*((*(_27925_ir))))._field_Main));
}



inline jule::Uintptr _1a7e10340_typeData(jule::Any* _1714_m) {
	return ((jule::Uintptr)(((*(_1714_m))).type));;
}



inline jule::Bool _1a7e10708_equalConst(jule::Ptr<_1c006a461_Const> _2115_l, jule::Ptr<_1c006a461_Const> _2126_r) {
	{
		
		if (_1c006e465_IsI64(_2115_l.ptr())) {
			_case_begin_1ac988e4c:;
			{
				return (_1c006e465_IsI64(_2126_r.ptr()) && (_1c006bd69_ReadI64(_2115_l) == _1c006bd69_ReadI64(_2126_r)));;
			}
		}
		else if (_1c006e6eb_IsU64(_2115_l.ptr())) {
			_case_begin_1ac988eb3:;
			{
				return (_1c006e6eb_IsU64(_2126_r.ptr()) && (_1c006c100_ReadU64(_2115_l) == _1c006c100_ReadU64(_2126_r)));;
			}
		}
		else if (_1c006ee9e_IsF64(_2115_l.ptr())) {
			_case_begin_1ac989029:;
			{
				return (_1c006ee9e_IsF64(_2126_r.ptr()) && (_1c006c8a3_ReadF64(_2115_l) == _1c006c8a3_ReadF64(_2126_r)));;
			}
		}
		else if (_1c006ec18_IsStr(_2115_l.ptr())) {
			_case_begin_1ac9890a1:;
			{
				return (_1c006ec18_IsStr(_2126_r.ptr()) && (_1c006c61c_ReadStr(_2115_l) == _1c006c61c_ReadStr(_2126_r)));;
			}
		}
		else if (_1c006e982_IsBool(_2115_l.ptr())) {
			_case_begin_1ac989128:;
			{
				return (_1c006e982_IsBool(_2126_r.ptr()) && (_1c006c386_ReadBool(_2115_l) == _1c006c386_ReadBool(_2126_r)));;
			}
		}
		else if (_1c0070235_IsNil(_2115_l.ptr())) {
			_case_begin_1ac98928d:;
			{
				return _1c0070235_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_1ac988d5e:;
			{
				return false;;
			}
		}
		_match_end_1ac9888a8:;
	};
}



inline jule::Bool _1a7e10a7c_equalCasting(jule::Ptr<_1a7bae551_CastingExprModel> _4017_l, jule::Ptr<_1a7bae551_CastingExprModel> _4039_r) {
	if ((!(_1a7d1c4d3_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _1a7e119b2_equalModels((*((*_4017_l.alloc)._field_Expr))._field_Model, (*(*(_4039_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1a7e10e45_equalUnary(jule::Ptr<_1a7bad2ec_UnaryExprModel> _4715_l, jule::Ptr<_1a7bad2ec_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*(*(_4735_r))._field_Op.alloc)._field_Id) || ((*(*(_4715_l))._field_Op.alloc)._field_Kind != (*(*(_4735_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _1a7e119b2_equalModels((*((*_4715_l.alloc)._field_Expr))._field_Model, (*(*(_4735_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1a7e112b9_equalIndexing(jule::Ptr<_1a7bb0783_IndexingExprModel> _5418_l, jule::Ptr<_1a7bb0783_IndexingExprModel> _5441_r) {
	return (_1a7e119b2_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*(*(_5441_r))._field_Expr.alloc)._field_Model) && _1a7e119b2_equalModels((*((*_5418_l.alloc)._field_Index))._field_Model, (*(*(_5441_r))._field_Index.alloc)._field_Model));;
}



inline jule::Bool _1a7e1163d_equalBinary(jule::Ptr<_1a7bace23_BinaryExprModel> _5916_l, jule::Ptr<_1a7bace23_BinaryExprModel> _5937_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*(*(_5937_r))._field_Op.alloc)._field_Id) || ((*(*(_5916_l))._field_Op.alloc)._field_Kind != (*(*(_5937_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_1a7e119b2_equalModels((*((*_5916_l.alloc)._field_Left))._field_Model, (*(*(_5937_r))._field_Left.alloc)._field_Model) && _1a7e119b2_equalModels((*((*_5916_l.alloc)._field_Right))._field_Model, (*(*(_5937_r))._field_Right.alloc)._field_Model));;
}



inline jule::Bool _1a7e119b2_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_1a7e10340_typeData(&(_7016_l)) != _1a7e10340_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac997b1a:;
			{
				return (_7016_l.unsafe_cast_ptr<_1a7c7b178_Var>() == _7030_r.cast_ptr<_1a7c7b178_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ac9986a9:;
			{
				jule::Ptr<_1a7bb2994_StructSubIdentExprModel> _783_li = _7016_l.unsafe_cast_ptr<_1a7bb2994_StructSubIdentExprModel>();;
				jule::Ptr<_1a7bb2994_StructSubIdentExprModel> _793_ri = _7030_r.cast_ptr<_1a7bb2994_StructSubIdentExprModel>(&__jule_any_type101);;
				return (((*(_783_li))._field_Field == (*(_793_ri))._field_Field) && _1a7e119b2_equalModels((*((*_783_li.alloc)._field_Expr))._field_Model, (*(*(_793_ri))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ac998720:;
			{
				return _1a7e10708_equalConst(_7016_l.cast_ptr<_1c006a461_Const>(&__jule_any_type20), _7030_r.cast_ptr<_1c006a461_Const>(&__jule_any_type20));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1ac9982d0:;
			{
				return _1a7e10a7c_equalCasting(_7016_l.cast_ptr<_1a7bae551_CastingExprModel>(&__jule_any_type96), _7030_r.cast_ptr<_1a7bae551_CastingExprModel>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ac998346:;
			{
				return _1a7e10e45_equalUnary(_7016_l.cast_ptr<_1a7bad2ec_UnaryExprModel>(&__jule_any_type113), _7030_r.cast_ptr<_1a7bad2ec_UnaryExprModel>(&__jule_any_type113));;
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1ac9983ac:;
			{
				return _1a7e112b9_equalIndexing(_7016_l.cast_ptr<_1a7bb0783_IndexingExprModel>(&__jule_any_type53), _7030_r.cast_ptr<_1a7bb0783_IndexingExprModel>(&__jule_any_type53));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ac998423:;
			{
				return _1a7e1163d_equalBinary(_7016_l.cast_ptr<_1a7bace23_BinaryExprModel>(&__jule_any_type114), _7030_r.cast_ptr<_1a7bace23_BinaryExprModel>(&__jule_any_type114));;
			}
		}
		else {
			_case_begin_1ac998269:;
			{
				return false;;
			}
		}
		_match_end_1ac997d5c:;
	};
}



inline void _1a7e175cd_possibleNilRemove(jule::Ptr<_1a7e165ee_nils>* _7827_n, jule::Any _7837_m) {
	if (((*(_7827_n)) != nullptr)) {
		_1a7e16dd5_removeVar((*(_7827_n)).ptr(), _1a7e180a1_getNilVar(_7837_m));
	};
}



inline jule::Bool _1a7e17996_isGuaranteedNonNilExpr(jule::Ptr<_1a7e165ee_nils>* _8432_n, jule::Any _8442_m) {
	{
		auto &_match_expr{ _8442_m };
		
		if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1ac99e605:;
			{
				return true;;
			}
		}
		_match_end_1ac99e58e:;
	};
	return (((*(_8432_n)) != nullptr) && _1a7e17226_isSafe((*(_8432_n)).ptr(), _1a7e180a1_getNilVar(_8442_m)));;
}



inline jule::Bool _1a7e17c60_isNilValidType(jule::Ptr<_1a7d1bc96_TypeKind> _9223_t) {
	return (_1a7d1e6d3_Sptr(_9223_t.ptr()) != nullptr);;
}



inline jule::Uintptr _1a7e180a1_getNilVar(jule::Any _9414_m) {
	if ((!(_1a884976d_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _9414_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac9a0bab:;
			{
				jule::Ptr<_1a7c7b178_Var> _1003_v = _9414_m.unsafe_cast_ptr<_1a7c7b178_Var>();;
				if ((!((*(_1003_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_9414_m.unsafe_cast_ptr<_1a7c7b178_Var>());;
				};
				return _1a7e180a1_getNilVar((*((*((*_1003_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ac9a110c:;
			{
				return static_cast<jule::Uintptr>((*(_9414_m.unsafe_cast_ptr<_1a7bb2994_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		_match_end_1ac9a0b45:;
	};
	return 0LLU;;
}



inline jule::Bool _1a883931d_isConstantValidConditionalCase(jule::Ptr<_1a7c13d9c_If>* _68736_i) {
	{
		auto &_match_expr{ (*((*(_68736_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ac9a8103:;
			{
				jule::Ptr<_1c006a461_Const> _6903_c = (*((*(_68736_i))))._field_Expr.unsafe_cast_ptr<_1c006a461_Const>();;
				return (_1c006e982_IsBool(_6903_c.ptr()) && _1c006c386_ReadBool(_6903_c));;
			}
		}
		_match_end_1ac9a87b8:;
	};
	return false;;
}



inline jule::Bool _1a883962b_isUnreachableExpr(jule::Any* _69623_expr) {
	{
		auto &_match_expr{ (*(_69623_expr)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ac9a905a:;
			{
				jule::Ptr<_1c006a461_Const> _6993_c = (*(_69623_expr)).cast_ptr<_1c006a461_Const>(&__jule_any_type20);;
				return (_1c006e982_IsBool(_6993_c.ptr()) && (!(_1c006c386_ReadBool(_6993_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ac9a818b:;
			{
				jule::Ptr<_1a7bace23_BinaryExprModel> _7023_m = (*(_69623_expr)).cast_ptr<_1a7bace23_BinaryExprModel>(&__jule_any_type114);;
				if (((*((*(_7023_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1a883962b_isUnreachableExpr(&((*((*_7023_m.alloc)._field_Left))._field_Model)) || _1a883962b_isUnreachableExpr(&((*((*_7023_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1ac9a99c8:;
	};
	return false;;
}



inline jule::Bool _1a88398e5_isConstantValidMatchCase(jule::Ptr<_1a7c18bd7_Case>* _71130_case) {
	{
		auto expr = &((*((*(_71130_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9b30ca:;
		if (it != expr_end) {
			jule::Ptr<_1a7cd41ae_Data> *_7129_expr = it;
			{
				if (((_1a7cd4ae9_IsConst((*(_7129_expr)).ptr()) && _1c006e982_IsBool((*(*(_7129_expr)).alloc)._field_Constant.ptr())) && _1c006c386_ReadBool((*((*(_7129_expr))))._field_Constant))) {
					return true;;
				};
			}
			_iter_next_1ac9b30ca:;
			++it;
			goto _iter_begin_1ac9b30ca;
		}
		_iter_end_1ac9b30ca:;
	};
	return false;;
}



inline jule::Bool _1a8839c36_isUnreachableConditionalCase(jule::Ptr<_1a7c13d9c_If>* _72034_i) {
	return _1a883962b_isUnreachableExpr(&((*((*(_72034_i))))._field_Expr));;
}



inline jule::Bool _1a8839ebc_isUnreachableMatchCase(jule::Ptr<_1a7c18bd7_Case>* _72428_case) {
	{
		auto expr = &((*((*(_72428_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9b50dd:;
		if (it != expr_end) {
			jule::Ptr<_1a7cd41ae_Data> *_7259_expr = it;
			{
				if ((!(_1a883962b_isUnreachableExpr(&((*((*(_7259_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1ac9b50dd:;
			++it;
			goto _iter_begin_1ac9b50dd;
		}
		_iter_end_1ac9b50dd:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1a8840401_checkForBitShiftOpt(jule::Ptr<_1a7bac928_OperandExprModel>* _59625_l, jule::Ptr<_1a7bac928_OperandExprModel>* _59648_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1c00697e5_IsInt(_1a7d1c192_Str((*((*(_59625_l))))._field_Kind.ptr())))) || (!(_1c00697e5_IsInt(_1a7d1c192_Str((*((*(_59648_r))))._field_Kind)))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_1c006cdc0_AsU64((*((*(_59648_r))))._field_Model.cast_ptr<_1c006a461_Const>(&__jule_any_type20).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _6042_j = _1c001c0b1_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _6052_z = static_cast<jule::U64>(_6042_j);;
	if ((static_cast<jule::F64>(_6052_z) != _6042_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _6052_z;
	return __jule_func_result;;
}



inline jule::Bool _1a88407b9_areSameLvalueExprModel(jule::Any* _61328_l, jule::Any* _61343_r) {
	{
		auto &_match_expr{ (*(_61328_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aca69956:;
			{
				return ((*(_61343_r)) == (*(_61328_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1aca69769:;
			{
				{
					auto &_match_expr{ (*(_61343_r)) };
					
					if (_match_expr.type == &__jule_any_type101) {
						_case_begin_1aca6a2e7:;
						{
							goto _match_end_1aca6a77b;
						}
					}
					else {
						_case_begin_1aca6a7e2:;
						{
							return false;;
						}
					}
					_match_end_1aca6a77b:;
				};
				jule::Ptr<_1a7bb2994_StructSubIdentExprModel> _6263_lsi = (*(_61328_l)).cast_ptr<_1a7bb2994_StructSubIdentExprModel>(&__jule_any_type101);;
				jule::Ptr<_1a7bb2994_StructSubIdentExprModel> _6273_rsi = (*(_61343_r)).cast_ptr<_1a7bb2994_StructSubIdentExprModel>(&__jule_any_type101);;
				if (((*(_6263_lsi))._field_Field != (*(_6273_rsi))._field_Field)) {
					return false;;
				};
				return _1a88407b9_areSameLvalueExprModel(&((*((*_6263_lsi.alloc)._field_Expr))._field_Model), &((*(*(_6273_rsi))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1aca699cd:;
			{
				{
					auto &_match_expr{ (*(_61343_r)) };
					
					if (_match_expr.type == &__jule_any_type113) {
						_case_begin_1aca6c0da:;
						{
							jule::Ptr<_1a7bad2ec_UnaryExprModel> _6394_ul = (*(_61328_l)).cast_ptr<_1a7bad2ec_UnaryExprModel>(&__jule_any_type113);;
							jule::Ptr<_1a7bad2ec_UnaryExprModel> _6404_ur = (*(_61343_r)).cast_ptr<_1a7bad2ec_UnaryExprModel>(&__jule_any_type113);;
							if ((((*((*(_6394_ul))._field_Op))._field_Id != (*(*(_6404_ur))._field_Op.alloc)._field_Id) || ((*(*(_6394_ul))._field_Op.alloc)._field_Kind != (*(*(_6404_ur))._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _1a88407b9_areSameLvalueExprModel(&((*((*_6394_ul.alloc)._field_Expr))._field_Model), &((*(*(_6404_ur))._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_1aca6c063:;
				};
			}
		}
		_match_end_1aca698e0:;
	};
	return false;;
}



inline void _1a8842986_possibleDynamicRemove(jule::Ptr<_1a88418ec_dynamic>* _8131_d, jule::Any _8144_m) {
	if (((*(_8131_d)) != nullptr)) {
		_1a88421d3_removeVar((*(_8131_d)).ptr(), _1a8843514_getDynamicVar(_8144_m));
	};
}



inline jule::Bool _1a8842c94_isDynamicValidType(jule::Ptr<_1a7d1bc96_TypeKind> _8727_t) {
	return _1a882dad7_IsAny(&(_8727_t));;
}



inline jule::Ptr<_1a7d1bc96_TypeKind> _1a88431c3_isTypeGuaranteedDynamicData(jule::Ptr<_1a88418ec_dynamic>* _8937_dy, jule::Ptr<_1a7d1bc96_TypeKind> _8955_t, jule::Any _8973_m) {
	jule::Bool _902_isAny = _1a882dad7_IsAny(&(_8955_t));;
	if (((!(_902_isAny)) && (_1a7d20c56_Trait(_8955_t.ptr()) == nullptr))) {
		return _8955_t;;
	};
	if ((!(_902_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8973_m };
		
		if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1acb0a909:;
			{
				jule::Ptr<_1a7bae551_CastingExprModel> _997_cem = _8973_m.unsafe_cast_ptr<_1a7bae551_CastingExprModel>();;
				return _1a88431c3_isTypeGuaranteedDynamicData(_8937_dy, (*(_997_cem))._field_ExprKind, (*((*_997_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_1acb0ae7b:;
	};
	jule::Uintptr _1022_var = _1a8843514_getDynamicVar(_8973_m);;
	if ((_1022_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8937_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb0c80c:;
		if (it != expr_end) {
			_1a88415ab_dynamicVar _10614_v = *it;
			{
				if ((_10614_v._field_var == _1022_var)) {
					return _10614_v._field_kind;;
				};
			}
			_iter_next_1acb0c80c:;
			++it;
			goto _iter_begin_1acb0c80c;
		}
		_iter_end_1acb0c80c:;
	};
	return nullptr;;
}



inline jule::Uintptr _1a8843514_getDynamicVar(jule::Any _11418_m) {
	if ((!(_1a884b253_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _11418_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1acb0ced3:;
			{
				jule::Ptr<_1a7c7b178_Var> _1203_v = _11418_m.unsafe_cast_ptr<_1a7c7b178_Var>();;
				if ((!((*(_1203_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_11418_m.unsafe_cast_ptr<_1a7c7b178_Var>());;
				};
				return _1a8843514_getDynamicVar((*((*((*_1203_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1acb0db60:;
			{
				return static_cast<jule::Uintptr>((*(_11418_m.unsafe_cast_ptr<_1a7bb2994_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1acb0d05a:;
			{
				jule::Ptr<_1a7bad2ec_UnaryExprModel> _1313_uem = _11418_m.unsafe_cast_ptr<_1a7bad2ec_UnaryExprModel>();;
				if (((*((*(_1313_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1a8843514_getDynamicVar((*((*_1313_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1acb0ce6c:;
	};
	return 0LLU;;
}



inline jule::Bool _1a8846eda_isValidBoundaryInfo(jule::Any _8424_m) {
	return _1a8847727_fitsSize(_8424_m, _8424_m);;
}



inline jule::I64 _1a88473a3_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr) {
	{
		auto expr = &(_8916_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb22e1b:;
		if (it != expr_end) {
			jule::I64 _906_i = it - expr->begin();
			jule::Any *_909_m = it;
			{
				if (_1a8847727_fitsSize((*(_909_m)), _8934_expr)) {
					return _906_i;;
				};
			}
			_iter_next_1acb22e1b:;
			++it;
			_906_i++;
			goto _iter_begin_1acb22e1b;
		}
		_iter_end_1acb22e1b:;
	};
	return -1LL;;
}



inline jule::Bool _1a8847727_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2) {
	if ((_1a7e10340_typeData(&(_9813_e1)) != _1a7e10340_typeData(&(_9828_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9813_e1 };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1acb2499a:;
			{
				jule::Ptr<_1c006a461_Const> _1043_exprConst = _9828_e2.cast_ptr<_1c006a461_Const>(&__jule_any_type20);;
				return ((_1c006d156_AsF64(_1043_exprConst.ptr()) >= 0LL) && _1c0071d5d_GtEq(_9813_e1.unsafe_cast_ptr<_1c006a461_Const>().ptr(), (*(_1043_exprConst))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1acb24a11:;
			{
				return (_9828_e2 == _9813_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1acb24a77:;
			{
				jule::Ptr<_1a7bb2994_StructSubIdentExprModel> _1093_ssi1 = _9813_e1.unsafe_cast_ptr<_1a7bb2994_StructSubIdentExprModel>();;
				jule::Ptr<_1a7bb2994_StructSubIdentExprModel> _1103_ssi2 = _9828_e2.cast_ptr<_1a7bb2994_StructSubIdentExprModel>(&__jule_any_type101);;
				return (_1a7e119b2_equalModels((*((*(_1093_ssi1))._field_Expr))._field_Model, (*(*(_1103_ssi2))._field_Expr.alloc)._field_Model) && ((*_1093_ssi1.alloc)._field_Field == (*(_1103_ssi2))._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1acb24626:;
			{
				jule::Ptr<_1a7bad2ec_UnaryExprModel> _1133_uem1 = _9813_e1.unsafe_cast_ptr<_1a7bad2ec_UnaryExprModel>();;
				jule::Ptr<_1a7bad2ec_UnaryExprModel> _1143_uem2 = _9828_e2.cast_ptr<_1a7bad2ec_UnaryExprModel>(&__jule_any_type113);;
				if ((((*((*(_1133_uem1))._field_Op))._field_Id != static_cast<jule::U64>(62LLU)) || ((*(*(_1133_uem1))._field_Op.alloc)._field_Id != (*(*(_1143_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _1a8847727_fitsSize((*((*_1133_uem1.alloc)._field_Expr))._field_Model, (*(*(_1143_uem2))._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_1acb245b0:;
			{
				return false;;
			}
		}
		_match_end_1acb244e4:;
	};
}



inline void _1a8847a57_possibleBoundaryRemove(jule::Ptr<_1a8845e73_boundary>* _12432_b, jule::Any _12446_model) {
	{
		auto expr = &((*((*(_12432_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb24deb:;
		if (it != expr_end) {
			_1a8845b32_boundaryVar _12614_v = *it;
			{
				{
					auto expr = &(_12614_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acb2b92a:;
					if (it != expr_end) {
						jule::I64 _1277_i = it - expr->begin();
						jule::Any _12710_max = *it;
						{
							if (_1a7e119b2_equalModels(_12710_max, _12446_model)) {
								_12614_v._field_maxSize=jule::append(_12614_v._field_maxSize.slice(0LL, _1277_i),_12614_v._field_maxSize.slice((_1277_i + 1LL)));
								goto _iter_end_1acb2b92a;
							};
						}
						_iter_next_1acb2b92a:;
						++it;
						_1277_i++;
						goto _iter_begin_1acb2b92a;
					}
					_iter_end_1acb2b92a:;
				};
			}
			_iter_next_1acb24deb:;
			++it;
			goto _iter_begin_1acb24deb;
		}
		_iter_end_1acb24deb:;
	};
}



inline jule::Bool _1a8847d21_isBoundaryRiskyType(jule::Ptr<_1a7d1bc96_TypeKind> _13628_t) {
	return (_1a7d2021c_Arr(_13628_t.ptr()) == nullptr);;
}



inline jule::Bool _1a88480da_isBoundaryValidType(jule::Ptr<_1a7d1bc96_TypeKind> _14128_t) {
	return ((_1a7d204a3_Slc(_14128_t.ptr()) != nullptr) || (_1a7d2021c_Arr(_14128_t) != nullptr));;
}



inline jule::Uintptr _1a88483a4_getBoundaryVar(jule::Any _14319_m) {
	if ((!(_1a884976d_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14319_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1acb2dce5:;
			{
				jule::Ptr<_1a7c7b178_Var> _1493_v = _14319_m.unsafe_cast_ptr<_1a7c7b178_Var>();;
				if ((!((*(_1493_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14319_m.unsafe_cast_ptr<_1a7c7b178_Var>());;
				};
				return _1a88483a4_getBoundaryVar((*((*((*_1493_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1acb2e279:;
			{
				return static_cast<jule::Uintptr>((*(_14319_m.unsafe_cast_ptr<_1a7bb2994_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1acb2dd5b:;
			{
				jule::Ptr<_1a7bad2ec_UnaryExprModel> _1603_uem = _14319_m.unsafe_cast_ptr<_1a7bad2ec_UnaryExprModel>();;
				if (((*((*(_1603_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1a88483a4_getBoundaryVar((*((*_1603_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1acb2e19c:;
	};
	return 0LLU;;
}



inline void _1a884b42e_PushOptLevel(jule::I64 _3217_level) {
	jule::Bool _332_l1 = (_3217_level >= static_cast<jule::I64>(1LL));;
	_1a8848b13_Copy=_332_l1;
	_1a8848e10_Deadcode=_332_l1;
	_1a88491b8_Append=_332_l1;
	_1a88494b5_Math=_332_l1;
	_1a884976d_Access=_332_l1;
	_1a8849a26_Inline=_332_l1;
	_1a8849cce_Ptr=_332_l1;
	_1a884a197_Cond=_332_l1;
	_1a884a3d9_Str=_332_l1;
	_1a884a681_Slice=_332_l1;
	_1a884a939_Assign=_332_l1;
	_1a884abe2_Exceptional=_332_l1;
	_1a884ae9a_Iter=_332_l1;
	_1a884b253_Dynamic=_332_l1;
}



inline void _1a897954b_detectEnabled(void) {
	_1a8977318_exprEnabled=(((_1a8849cce_Ptr || _1a88494b5_Math) || _1a884976d_Access) || _1a884a197_Cond);
	_1a897755a_scopeEnabled=((((((((_1a884a197_Cond || _1a88491b8_Append) || _1a8848b13_Copy) || _1a884a3d9_Str) || _1a884a681_Slice) || _1a884a939_Assign) || _1a884abe2_Exceptional) || _1a884ae9a_Iter) || _1a884b253_Dynamic);
}



inline void _1a89a1595_Throw(jule::Str _910_msg) {
	jule::outln(_1a9954ee8_toStr(_910_msg));
	_1d92579db_Exit(1LL);
}



inline jule::U64 _1a968a833_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _1a95b8123_isCopyOptimizable(jule::Ptr<_1a7cd41ae_Data>* _119123_expr) {
	if ((!((*((*(_119123_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_119123_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1accc1b14:;
			{
				return false;;
			}
		}
		_match_end_1accc1a9d:;
	};
	return true;;
}



inline jule::Bool _1a95b84db_isIterCopyOptimizable(jule::Ptr<_1a7cd41ae_Data>* _120227_expr, jule::Ptr<_1a7c7b178_Var>* _120241_v) {
	if (((!((*((*(_120227_expr))))._field_Lvalue)) && (!(_1a7d1d67c_Mutable((*((*(_120227_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_120241_v))))._field_Mutable)) && (!((*((*(_120227_expr))))._field_Mutable)));;
}



inline jule::Bool _1a95b891a_captureVarHandling(jule::Ptr<_1a9694078_ObjectCoder>* _120928_oc, jule::Ptr<_1a7bb0c39_AnonFnExprModel>* _120951_m, jule::Ptr<_1a7c7b178_Var>* _120977_v) {
	{
		auto expr = &((*((*(_120951_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1accc3cd1:;
		if (it != expr_end) {
			jule::Ptr<_1a7c7b178_Var> _12109_cv = *it;
			{
				if ((_12109_cv == (*(_120977_v)))) {
					_1a9694760_write((*(_120928_oc)), jule::Str::lit("__jule_closure_ctx.alloc->", 26));
					static__1a95d464a_var(&((*((*(_120928_oc))))._field_Buf), (*(_120977_v)));
					return true;;
				};
			}
			_iter_next_1accc3cd1:;
			++it;
			goto _iter_begin_1accc3cd1;
		}
		_iter_end_1accc3cd1:;
	};
	return false;;
}



inline jule::Str _1a95cb4ee_decomposeCommonEsq(jule::U8 _196323_b) {
	{
		auto &_match_expr{ _196323_b };
		
		if (_match_expr == '\\') {
			_case_begin_1ace45cee:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1ace45b67:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1ace45bcd:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1ace456c2:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1ace45738:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1ace457b0:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1ace45837:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1ace458ae:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1ace45d65:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1ace45dcb:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1ace43192:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ace45617:;
	};
}



inline jule::Str _1a95cb80c_sbtoa(jule::U8 _199010_b) {
	if ((_199010_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_199010_b < 128LLU)) {
		jule::Str _19953_seq = _1a95cb4ee_decomposeCommonEsq(_199010_b);;
		if (!(_19953_seq).empty()) {
			return _19953_seq;;
		};
		if (((32LL <= _199010_b) && (_199010_b <= 126LLU))) {
			return __jule_strFromByte(_199010_b);;
		};
	};
	jule::Str _20032_seq = _1c005bc16_FmtUint(static_cast<jule::U64>(_199010_b), 8LL);;
	if ((_20032_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _20032_seq);;
	};
	return (jule::Str::lit("\\", 1) + _20032_seq);;
}



inline void _1a95cbae8_cstrBytes(_1daed18b7_StrBuilder* _201019_s, jule::Str _201034_ctx) {
	{
		auto expr = &(_201034_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace4a991:;
		if (it != expr_end) {
			jule::U8 *_20119_b = it;
			{
				_1daeda6b2_WriteStr(_201019_s, _1a95cb80c_sbtoa((*(_20119_b))));
			}
			_iter_next_1ace4a991:;
			++it;
			goto _iter_begin_1ace4a991;
		}
		_iter_end_1ace4a991:;
	};
}



inline void _1a95cbe28_cstrLit(_1daed18b7_StrBuilder* _201617_s, jule::Str _201632_ctx) {
	_1daeda96a_WriteByte(_201617_s, '\"');
	_1a95cbae8_cstrBytes(_201617_s, _201632_ctx);
	_1daeda96a_WriteByte(_201617_s, '\"');
}



inline void _1a95cc2be_ftoa(_1daed18b7_StrBuilder* _202214_s, jule::F64 _202229_f, jule::I64 _202237_bitsize) {
	if ((_202237_bitsize != 32LL)) {
		if ((_202229_f == static_cast<jule::F64>(static_cast<jule::I64>(_202229_f)))) {
			_1a95cc5aa_itoa(_202214_s, static_cast<jule::I64>(_202229_f));
			return;;
		};
		if ((_202229_f == static_cast<jule::F64>(static_cast<jule::U64>(_202229_f)))) {
			_1a95cc896_utoa(_202214_s, static_cast<jule::U64>(_202229_f));
			return;;
		};
	};
	jule::Str _20332_m = _1c004567d_FmtFloat(_202229_f, 'f', -1LL, _202237_bitsize);;
	_1daeda6b2_WriteStr(_202214_s, _20332_m);
	if ((!(_1daec1e5c_Contains(_20332_m, jule::Str::lit(".", 1))))) {
		_1daeda6b2_WriteStr(_202214_s, jule::Str::lit(".0", 2));
	};
}



inline void _1a95cc5aa_itoa(_1daed18b7_StrBuilder* _204014_s, jule::I64 _204029_x) {
	{
		
		if ((_204029_x == jule::MAX_I64)) {
			_case_begin_1ace50039:;
			{
				_1daeda6b2_WriteStr(_204014_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_204029_x == jule::MIN_I64)) {
			_case_begin_1ace500d3:;
			{
				_1daeda6b2_WriteStr(_204014_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1ace4ee18:;
	};
	_1daeda6b2_WriteStr(_204014_s, _1c005c0ce_FmtInt(_204029_x, 10LL));
	if (_1d9149636_Is64Bit(jule::Str::lit("amd64", 5))) {
		_1daeda96a_WriteByte(_204014_s, 'L');
	};
	_1daeda96a_WriteByte(_204014_s, 'L');
}



inline void _1a95cc896_utoa(_1daed18b7_StrBuilder* _205714_s, jule::U64 _205729_x) {
	{
		
		if ((_205729_x == jule::MAX_U64)) {
			_case_begin_1ace521c3:;
			{
				_1daeda6b2_WriteStr(_205714_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1ace52080:;
	};
	_1daeda6b2_WriteStr(_205714_s, _1c005bc16_FmtUint(_205729_x, 10LL));
	if (_1d9149636_Is64Bit(jule::Str::lit("amd64", 5))) {
		_1daeda96a_WriteByte(_205714_s, 'L');
	};
	_1daeda6b2_WriteStr(_205714_s, jule::Str::lit("LU", 2));
}



inline void _1a95ccee5_operatorOverloadingBinary(_1daed18b7_StrBuilder* _207135_buf, jule::Ptr<_1a7ba8b11_StructIns>* _207157_s, jule::Str* _207173_l, jule::Str* _20723_r, jule::U64 _207211_op, jule::Str _207224_kind) {
	;
	jule::Ptr<_1a7bbd8b2_FnIns> _20746_f = static_cast<jule::Ptr<_1a7bbd8b2_FnIns>>(nullptr);;
	if ((_207211_op == static_cast<jule::U64>(51LLU))) {
		_20746_f=_1a883205d_FindOperator(_207157_s, static_cast<jule::U64>(50LLU), false);
		_1daeda96a_WriteByte(_207135_buf, '!');
	} else {
		_20746_f=_1a883205d_FindOperator(_207157_s, _207211_op, false);
	};
	if ((_20746_f == nullptr)) {
		if (((_207211_op == static_cast<jule::U64>(50LLU)) || (_207211_op == static_cast<jule::U64>(51LLU)))) {
			static__1a95d4073_structureIns(_207135_buf, _207157_s);
			_1daeda6b2_WriteStr(_207135_buf, jule::Str::lit("_eq", 3));
			goto _julec_label_1ace55bcc;
		};
		__jule_panic_s(jule::Str::lit("binary operator overloading is not exist, this is an implementation mistake", 75) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2088:3"));;
	};
	static__1a95d33c4_funcIns(_207135_buf, &(_20746_f));
	_julec_label_1ace55bcc:;
	_1daeda6b2_WriteStr(_207135_buf, jule::Str::lit("(&", 2));
	_1daeda6b2_WriteStr(_207135_buf, (*(_207173_l)));
	_1daeda6b2_WriteStr(_207135_buf, jule::Str::lit(", ", 2));
	_1daeda6b2_WriteStr(_207135_buf, (*(_20723_r)));
	_1daeda96a_WriteByte(_207135_buf, ')');
}



inline jule::Slice<jule::U8> _1a96a134e_concatAllParts(jule::Slice<jule::Ptr<_1a7b69b05_Token>> _125019_parts) {
	jule::I64 _12516_n = 0LL;;
	{
		auto expr = &(_125019_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad21230c:;
		if (it != expr_end) {
			jule::Ptr<_1a7b69b05_Token> *_12529_part = it;
			{
				_12516_n+=(*((*(_12529_part))))._field_Kind.len();
			}
			_iter_next_1ad21230c:;
			++it;
			goto _iter_begin_1ad21230c;
		}
		_iter_end_1ad21230c:;
	};
	if ((_12516_n == 0LL)) {
		return nullptr;;
	};
	_1daed18b7_StrBuilder _12586_s = static__1daed1bb4_New(_12516_n);;
	{
		auto expr = &(_125019_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad21120c:;
		if (it != expr_end) {
			jule::Ptr<_1a7b69b05_Token> *_12599_p = it;
			{
				_1daeda6b2_WriteStr(&_12586_s, (*((*(_12599_p))))._field_Kind);
			}
			_iter_next_1ad21120c:;
			++it;
			goto _iter_begin_1ad21120c;
		}
		_iter_end_1ad21120c:;
	};
	return _1daedb95a_Buf(&_12586_s);;
}



inline jule::Bool _1a96a165c_isHeadDecl(jule::Ptr<_1a7bba8d1_Fn>* _126620_m) {
	if ((((*((*(_126620_m))))._field_Generics.len() > 0LL) || ((*((*(_126620_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1a882e1ae_IsOpMethod(_126620_m)) {
		return true;;
	};
	jule::Ptr<_1a7bbd8b2_FnIns> _12736_mi = (*((*(_126620_m))))._field_Instances[0LL];;
	;
	return static__1a7c7c773_Dispose(_1a7ba9bab_FindMethod((*(_12736_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Bool _1a96a1926_defaultEq(jule::Ptr<_1a7ba8b11_StructIns>* _127915_s) {
	return ((*((*(_127915_s))))._field_Comparable && ((*((*(_127915_s))))._field_Operators._field_Eq == nullptr));;
}



inline jule::Bool _1a96b0ade_ableToInit(jule::Ptr<_1a7d1bc96_TypeKind>* _46820_t) {
	return (!(_1a7d1cb43_Binded((*(_46820_t)).ptr())));;
}



inline jule::Bool _1a96b0db9_shouldInitialized(jule::Ptr<_1a7d1bc96_TypeKind>* _47527_t) {
	if ((!(_1a96b0ade_ableToInit(_47527_t)))) {
		return false;;
	};
	jule::Ptr<_1a7d24dae_Prim> _4792_prim = _1a7d1e44c_Prim((*(_47527_t)).ptr());;
	if ((_4792_prim != nullptr)) {
		return ((!(_1a7d28610_IsAny(_4792_prim))) && (!(_1a7d28379_IsStr(_4792_prim))));;
	};
	{
		
		if ((_1a7d1e6d3_Sptr((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1ad331ad0:;
			{
				return false;;
			}
		}
		else if ((_1a7d20edc_Map((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1ad33285b:;
			{
				return false;;
			}
		}
		else if ((_1a7d204a3_Slc((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1ad331b68:;
			{
				return false;;
			}
		}
		else if ((_1a7d20c56_Trait((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1ad331bce:;
			{
				return false;;
			}
		}
		else if ((_1a7d20739_Fn((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1ad3329e3:;
			{
				return false;;
			}
		}
		else if ((_1a7d2021c_Arr((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1ad332a59:;
			{
				jule::Ptr<_1a7d2b6ce_Arr> _4957_arr = _1a7d2021c_Arr((*(_47527_t)).ptr());;
				return _1a96b0ade_ableToInit(&((*(_4957_arr))._field_Elem));;
			}
		}
		else if ((_1a7d209c0_Struct((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1ad332ac0:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ad3319d1:;
			{
				return true;;
			}
		}
		_match_end_1ad331dbb:;
	};
}



inline void _1d9262bc2_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_1a9954ee8_toStr(_3022_msg));
}



inline void _1d9262e47_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1d9262bc2_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _416_max = _1d92629e6_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1d92629e6_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3c9969:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_429_k = it;
			{
				jule::I64 _433_n = (*(_429_k))[0LL].len();;
				if ((_433_n > _416_max)) {
					_416_max=_433_n;
				};
			}
			_iter_next_1ad3c9969:;
			++it;
			goto _iter_begin_1ad3c9969;
		}
		_iter_end_1ad3c9969:;
	};
	_1daed18b7_StrBuilder _496_s = static__1daed1bb4_New(32LL);;
	;
	{
		auto expr = &(_1d92629e6_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3caa58:;
		if (it != expr_end) {
			jule::I64 _516_i = it - expr->begin();
			jule::Array<jule::Str,2> *_519_part = it;
			{
				_1daeda6b2_WriteStr(&_496_s, (*(_519_part))[0LL]);
				_1daeda6b2_WriteStr(&_496_s, _1daebc5c8_Repeat(jule::Str::lit(" ", 1), ((_416_max - (*(_519_part))[0LL].len()) + 5LL)));
				_1daeda6b2_WriteStr(&_496_s, (*(_519_part))[1LL]);
				if (((_516_i + 1LL) < 5LL)) {
					_1daeda96a_WriteByte(&_496_s, '\n');
				};
			}
			_iter_next_1ad3caa58:;
			++it;
			_516_i++;
			goto _iter_begin_1ad3caa58;
		}
		_iter_end_1ad3caa58:;
	};
	jule::outln(_1ad3cba26_toStr(_496_s));
}



inline void _1d9263178_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1d9262bc2_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(_1a9954ee8_toStr(jule::Str::lit("jule0.0.16 @master", 18)));
}



inline void _1d9263387_toolDistos(void) {
	jule::out(_1a9954ee8_toStr(jule::Str::lit("supported operating systems:\n ", 30)));
	jule::out(_1ad3d3698_toStr(static_cast<jule::Str>(jule::Str::lit("windows", 7))));
	jule::out(_1a9954ee8_toStr(jule::Str::lit(" ", 1)));
	jule::out(_1ad3d3698_toStr(static_cast<jule::Str>(jule::Str::lit("linux", 5))));
	jule::out(_1a9954ee8_toStr(jule::Str::lit(" ", 1)));
	jule::out(_1ad3d3698_toStr(static_cast<jule::Str>(jule::Str::lit("darwin", 6))));
	jule::outln(_1a9954ee8_toStr(jule::Str()));
}



inline void _1d92634ec_toolDistarch(void) {
	jule::out(_1a9954ee8_toStr(jule::Str::lit("supported architects:\n ", 23)));
	jule::out(_1ad3da7b0_toStr(static_cast<jule::Str>(jule::Str::lit("amd64", 5))));
	jule::out(_1a9954ee8_toStr(jule::Str::lit(" ", 1)));
	jule::out(_1ad3da7b0_toStr(static_cast<jule::Str>(jule::Str::lit("i386", 4))));
	jule::out(_1a9954ee8_toStr(jule::Str::lit(" ", 1)));
	jule::out(_1ad3da7b0_toStr(static_cast<jule::Str>(jule::Str::lit("arm64", 5))));
	jule::outln(_1a9954ee8_toStr(jule::Str()));
}



inline void _1d92636ea_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(_1a9954ee8_toStr(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107)));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1d9262bc2_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1052_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1052_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1ad3e3e5b:;
			{
				_1d9263387_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1ad3e2663:;
			{
				_1d92634ec_toolDistarch();
			}
		}
		else {
			_case_begin_1ad3e2465:;
			{
				_1d9262bc2_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1052_cmd));
			}
		}
		_match_end_1ad3e2542:;
	};
}



inline void _1d926392b_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1d9262bc2_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(_1a9954ee8_toStr(jule::Str::lit("julec version: jule0.0.16 @master", 33)));
	jule::outln(_1a9954ee8_toStr(jule::Str::lit("architecture: amd64", 19)));
	jule::outln(_1a9954ee8_toStr(jule::Str::lit("operating system: darwin", 24)));
	jule::outln(_1a9954ee8_toStr((jule::Str::lit("default compiler: ", 18) + _1d925db02_Compiler)));
	jule::outln(_1a9954ee8_toStr((jule::Str::lit("default C++ standard: ", 22) + _1d92603b7_CppStd)));
}



inline void _1d9263c6c_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(_1a9954ee8_toStr(jule::Str::lit("command is not given, try julec mod init", 40)));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1d9262bc2_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1ad3e7932:;
			{
				({
					auto except = static__1d828dc10_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1d9262bc2_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1ad3e6c72:;
			{
				_1d9262bc2_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1ad3e738d:;
	};
}



inline jule::Bool _1d9263eae_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1ad3e8dc8:;
			{
				_1d9262e47_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1ad3e8e3e:;
			{
				_1d9263178_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1ad3e8ea5:;
			{
				_1d92636ea_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1ad3e869c:;
			{
				_1d926392b_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1ad3e8713:;
			{
				_1d9263c6c_mod(_15320_args);
			}
		}
		else {
			_case_begin_1ad3e7514:;
			{
				return false;;
			}
		}
		_match_end_1ad3e7ed7:;
	};
	return true;;
}



inline void _1d9264157_showInfo(void) {
	jule::outln(_1a9954ee8_toStr(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307)));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1896_args = _1d835987a_Args();;
	if ((_1896_args.len() < 2LL)) {
		_1d9264157_showInfo();
		return;;
	};
	if (_1d9263eae_processCommand(&(_1896_args))) {
		return;;
	};
	_1a9730e6c_compileCommand(&(_1896_args));
}



inline void _1a972cd8c_init(void) {
	_1d925db02_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_1d828cd85_File> _1a972d156_openOutput(jule::Str* _4316_path) {
	jule::Str _442_dir = _1daee01ab_Dir((*(_4316_path)));;
	({
		auto except = static__1d828bb42_Of(_442_dir);
		if (!except.ok()) {
			({
				auto except = static__1daee2862_Create(_442_dir);
				if (!except.ok()) {
					_1a89a1595_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__1d828d5a0_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1a89a1595_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1a972d2ee_clearObjects(void) {
	({
		auto except = static__1d828a14b_Remove(_1a972e454_getCompilePath());
		if (!except.ok()) {
			jule::outln(_1a9954ee8_toStr(jule::Str::lit("a problem occurs when object cleaning", 37)));
			return;;
		}
	});
	static__1daee2a93_Remove(_1a972c661_OutDir);
}



inline void _1a972d60c_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1d92015cd_Cmd> _736_cmd = static__1d9201a2e_New(_7214_compiler);;
	(*(_736_cmd))._field_Args=_1daec1ad8_Split(_7229_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _1d9201c2c_Spawn(_736_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1ad3eed9b:;
					{
						static__1a899c96a_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1ad3eee12:;
					{
						static__1a899c96a_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1ad3ee87e:;
					{
						static__1a899c96a_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1ad3ee98e:;
			};
			_1a89a1595_Throw(jule::Str());
		}
	});
	jule::I64 _862_status = ({
		auto except = _1d92021b1_Wait(_736_cmd);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:12"));
		(except.result);
	});;
	if ((_862_status != 0LL)) {
		jule::Str _883_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _1d925db02_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1a899c96a_Print(jule::Str::lit("\033[31m", 5), _883_errorMessage);
		_1a89a1595_Throw(jule::Str());
	};
	_1a972d2ee_clearObjects();
}



inline jule::Bool _1a972d8c6_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1002_offset = _1daec0697_FindLastByte(_9920_path, '.');;
	if ((_1002_offset == -1LL)) {
		return false;;
	};
	return _1d91379a9_IsValidCppExt(_9920_path.slice(_1002_offset));;
}



inline void _1a972db07_pushCompCmdClang(_1daed18b7_StrBuilder* _10726_cmd) {
	_1daeda6b2_WriteStr(_10726_cmd, jule::Str::lit("-Wno-everything ", 16));
	_1daeda6b2_WriteStr(_10726_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _1d92603b7_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1ad4030ad:;
			{
				_1daeda6b2_WriteStr(_10726_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1ad403ca1:;
			{
				_1daeda6b2_WriteStr(_10726_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1ad403d17:;
			{
				_1daeda6b2_WriteStr(_10726_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1ad403b80:;
	};
	_1daeda96a_WriteByte(_10726_cmd, ' ');
	if (_1d92614d9_Production) {
		_1daeda6b2_WriteStr(_10726_cmd, jule::Str::lit("-O3 ", 4));
		_1daeda6b2_WriteStr(_10726_cmd, jule::Str::lit("-flto ", 6));
		_1daeda6b2_WriteStr(_10726_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_1daeda6b2_WriteStr(_10726_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_1daeda6b2_WriteStr(_10726_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1a972dd38_pushCompCmdGcc(_1daed18b7_StrBuilder* _13324_cmd) {
	_1daeda6b2_WriteStr(_13324_cmd, jule::Str::lit("-w ", 3));
	_1daeda6b2_WriteStr(_13324_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _1d92603b7_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1ad405258:;
			{
				_1daeda6b2_WriteStr(_13324_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1ad4052be:;
			{
				_1daeda6b2_WriteStr(_13324_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1ad406cd7:;
			{
				_1daeda6b2_WriteStr(_13324_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1ad406bb6:;
	};
	_1daeda96a_WriteByte(_13324_cmd, ' ');
	if (_1d92614d9_Production) {
		_1daeda6b2_WriteStr(_13324_cmd, jule::Str::lit("-O3 ", 4));
		_1daeda6b2_WriteStr(_13324_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_1daeda6b2_WriteStr(_13324_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_1daeda6b2_WriteStr(_13324_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1a972e2bc_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1a882795a_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1603_compiler = &(_1d92601a8_CompilerPath);;
	_1daed18b7_StrBuilder _1616_cmd = static__1daed1bb4_New(64LL);;
	{
		auto &_match_expr{ _1d925db02_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1ad409dc8:;
			{
				_1a972dd38_pushCompCmdGcc(&(_1616_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1ad40a00a:;
			{
				_1a972db07_pushCompCmdClang(&(_1616_cmd));
			}
		}
		_match_end_1ad4099bb:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad40a2b3:;
		if (it != expr_end) {
			jule::Ptr<_1a7c36793_ImportInfo> *_1719_u = it;
			{
				if (((*((*(_1719_u))))._field_Binded && _1a972d8c6_isCppSourceFile((*(*(_1719_u)).alloc)._field_Path))) {
					_1daeda6b2_WriteStr(&_1616_cmd, (*(*(_1719_u)).alloc)._field_Path);
					_1daeda96a_WriteByte(&_1616_cmd, ' ');
				};
			}
			_iter_next_1ad40a2b3:;
			++it;
			goto _iter_begin_1ad40a2b3;
		}
		_iter_end_1ad40a2b3:;
	};
	if (!(_1a972cbd3_Out).empty()) {
		_1daeda6b2_WriteStr(&_1616_cmd, jule::Str::lit("-o ", 3));
		_1daeda6b2_WriteStr(&_1616_cmd, _1a972cbd3_Out);
		_1daeda96a_WriteByte(&_1616_cmd, ' ');
	};
	_1daeda6b2_WriteStr(&_1616_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad40cd54:;
		if (it != expr_end) {
			jule::Str *_1869_pass = it;
			{
				_1daeda96a_WriteByte(&_1616_cmd, ' ');
				_1daeda6b2_WriteStr(&_1616_cmd, (*(_1869_pass)));
			}
			_iter_next_1ad40cd54:;
			++it;
			goto _iter_begin_1ad40cd54;
		}
		_iter_end_1ad40cd54:;
	};
	if ((_1d9258a64_Os == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
		_1daeda6b2_WriteStr(&_1616_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1603_compiler));
	__jule_func_result.__jule_result_arg1 = _1daedaea9_Str(&_1616_cmd);
	return __jule_func_result;;
}



inline jule::Str _1a972e454_getCompilePath(void) {
	return _1daede4b8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1a972c661_OutDir; (*it++) = _1a972c92a_OutName; __jule_collection; }));;
}



inline void _1a972e685_applyTargetIndependentOptimizations(jule::Ptr<_1a882795a_IR>* _20545_ir) {
	jule::Ptr<_1a8977747_Optimizer> _2066_opt = static__1a8977bed_New(_20545_ir);;
	_1a89792d7_Optimize(_2066_opt.ptr());
}



inline void _1a972e82d_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _1d925db02_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1ad41061a:;
			{
				_1a89a1595_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1ad41054e:;
			{
				if ((_1d92601a8_CompilerPath).empty()) {
					_1d92601a8_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1ad41020d:;
			{
				if ((_1d92601a8_CompilerPath).empty()) {
					_1d92601a8_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1ad40e22e:;
			{
				_1a89a1595_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _1d925db02_Compiler));
			}
		}
		_match_end_1ad410043:;
	};
}



inline void _1a972ea3c_checkTargetArch(jule::Str _22720_arch) {
	if ((((_22720_arch != static_cast<jule::Str>(jule::Str::lit("amd64", 5))) && (_22720_arch != static_cast<jule::Str>(jule::Str::lit("arm64", 5)))) && (_22720_arch != static_cast<jule::Str>(jule::Str::lit("i386", 4))))) {
		_1a89a1595_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1a972ec6d_checkTargetOs(jule::Str _23518_os) {
	if ((((_23518_os != static_cast<jule::Str>(jule::Str::lit("windows", 7))) && (_23518_os != static_cast<jule::Str>(jule::Str::lit("linux", 5)))) && (_23518_os != static_cast<jule::Str>(jule::Str::lit("darwin", 6))))) {
		_1a89a1595_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1a972ee9e_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_1a89a1595_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2482_parts = _1daec1ad8_Split((*(_24321_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2482_parts.len() != 2LL)) {
		_1a89a1595_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _2532_os;
	jule::Str _2536_arch;
	({
		jule::Str ___jule_assign_arg = _2482_parts[0LL];
		jule::Str _1___jule_assign_arg = _2482_parts[1LL];
		_2532_os = ___jule_assign_arg;
		_2536_arch = _1___jule_assign_arg;
	});
	if ((!_2532_os.equal("native", 6))) {
		_1a972ec6d_checkTargetOs(_2532_os);
		_1d9258a64_Os=_2532_os;
	};
	if ((!_2536_arch.equal("native", 6))) {
		_1a972ea3c_checkTargetArch(_2536_arch);
		_1d9258d1c_Arch=_2536_arch;
	};
	_1c0061765_UpdateTarget();
}



inline void _1a97301d0_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_1a89a1595_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1ad417578:;
			{
				goto _match_end_1ad416de6;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1ad417622:;
			{
				_1a884b42e_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1ad416c4d:;
			{
				_1a89a1595_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1ad416de6:;
	};
}



inline void _1a9730598_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _1d92603b7_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1ad418436:;
			{
				goto _match_end_1ad417e08;
			}
		}
		else {
			_case_begin_1ad416e5c:;
			{
				_1a89a1595_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _1d92603b7_CppStd));
			}
		}
		_match_end_1ad417e08:;
	};
}



inline jule::Slice<jule::Str> _1a9730763_checkFlags(jule::Slice<jule::Str>* _29216_args) {
	jule::Str _2936_opt = jule::Str::lit("L0", 2);;
	jule::Str _2946_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1a97276b1_FlagSet> _2966_fs = static__1a97279d0_New();;
	_1ad419d3e_AddVar(_2966_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2936_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1ad419d3e_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_2946_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1ad419d3e_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_1a972cbd3_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1ad423e58_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1d92605c6_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1ad423e58_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1d926086d_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1ad419d3e_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_1d925db02_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1ad419d3e_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_1d92601a8_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1ad423e58_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1d92614d9_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1ad423e58_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1d9260dce_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1ad423e58_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1d9261297_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1ad423e58_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1d9261781_AtomicRC)))), jule::Str::lit("atomic-rc", 9), 0LL, jule::Str::lit("Atomic reference counting", 25));
	_1ad419d3e_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_1d92603b7_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1ad423e58_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a8848b13_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1ad423e58_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a8848e10_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1ad423e58_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a88491b8_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1ad423e58_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a88494b5_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1ad423e58_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a884976d_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1ad423e58_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a8849a26_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1ad423e58_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a8849cce_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1ad423e58_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a884a197_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1ad423e58_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a884a3d9_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1ad423e58_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a884a681_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1ad423e58_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a884a939_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1ad423e58_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a884abe2_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1ad423e58_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a884ae9a_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1ad423e58_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a884b253_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	jule::Slice<jule::Str> _3256_content = ({
		auto except = _1a972889e_Parse(_2966_fs, (*(_29216_args)));
		(except.ok()) ? (except.result) : ({
			_1a89a1595_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_1a972e82d_checkCompilerFlag();
	_1a9730598_checkCppStdFlag();
	_1a972ee9e_checkTargetFlag(&(_2946_target));
	_1a97301d0_checkOptFlag(&(_2936_opt));
	return _3256_content;;
}



inline void _1a9730972_setupSemaFlags(jule::I64* _33824_flags) {
	if (_1d92605c6_Shadowing) {
		(*(_33824_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1a882795a_IR> _1a9730c3b_buildIr(jule::Slice<jule::Str>* _34413_args) {
	jule::Slice<jule::Str> _3452_content = _1a9730763_checkFlags(_34413_args);;
	jule::I64 _3476_semaFlags = static_cast<jule::I64>(0LL);;
	_1a9730972_setupSemaFlags(&(_3476_semaFlags));
	if ((_3452_content.len() == 0LL)) {
		_1a89a1595_Throw(_1d9145027_Logf(static_cast<jule::Str>(jule::Str::lit("missing compile path", 20)), jule::Slice<jule::Any>()));
	} else if ((_3452_content.len() > 1LL)) {
		_1a89a1595_Throw((jule::Str::lit("undefined content: ", 19) + _3452_content[1LL]));
	};
	jule::Str _3556_path;
	jule::Bool _35512_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1daedea18_Abs(_3452_content[0LL]);
		_3556_path = __jule_assign_result.__jule_result_arg0;
		_35512_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35512_ok))) {
		_1a89a1595_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_1d828ee75_Status> _3612_inf = ({
		auto except = static__1d828bb42_Of(_1d9257eb4_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1a89a1595_Throw(_1d9145027_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_1d828ee75_Status>(nullptr);});
	});;
	if ((!(_1d8290382_IsDir(_3612_inf.ptr())))) {
		_1a89a1595_Throw(_1d9145027_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1a882795a_IR> _3696_ir;
	jule::Slice<_1d9144ab5_Log> _36910_logs;
	({
		__jule_tuple_x_1a882795a_IR__jule_tuple_s_1d9144ab5_Log __jule_assign_result = static__1a8827e33_Build(_3556_path, _3476_semaFlags);
		_3696_ir = __jule_assign_result.__jule_result_arg0;
		_36910_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3696_ir == nullptr) && (_36910_logs == nullptr))) {
		_1a89a1595_Throw(_1d9145027_Logf(static_cast<jule::Str>(jule::Str::lit("there is no Jule source code in package: @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3556_path, &__jule_any_type4); __jule_collection; })));
	};
	if ((_36910_logs != nullptr)) {
		static__1a89a0b16_PrintLogs(&(_36910_logs));
		_1a89a1595_Throw(jule::Str());
	};
	return _3696_ir;;
}



inline void _1a9730e6c_compileCommand(jule::Slice<jule::Str>* _38424_args) {
	((*(_38424_args))).mut_slice(1LL);;
	if ((*(_38424_args))[0LL].equal("test", 4)) {
		_1d9260b26_Test=true;
		((*(_38424_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1a882795a_IR> _3906_ir = _1a9730c3b_buildIr(_38424_args);;
	;
	if ((!(_1d9260b26_Test))) {
		jule::Ptr<_1a7bba8d1_Fn> _3957_main = _1a7c3ac81_FindFn((*(_3906_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_3957_main == nullptr)) {
			_1a89a1595_Throw(_1d9145027_Logf(static_cast<jule::Str>(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63)), jule::Slice<jule::Any>()));
		};
	};
	_1a972e685_applyTargetIndependentOptimizations(&(_3906_ir));
	_1a8828e9a_Order(_3906_ir);
	jule::Str _4062_compPath = _1a972e454_getCompilePath();;
	jule::Str _4072_compiler;
	jule::Str _40712_compilerCmd;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1a972e2bc_genCompileCmd(_4062_compPath, &(_3906_ir));
		_4072_compiler = __jule_assign_result.__jule_result_arg0;
		_40712_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1a9694078_ObjectCoder> _4096_oc = static__1a96944a7_New(&(_3906_ir), _1a96922c9_SerializationInfo{._field_Compiler=_4072_compiler, ._field_CompilerCommand=_40712_compilerCmd});;
	if (_1d9260b26_Test) {
		jule::Ptr<_1a95ce03a_TestCoder> _4147_tc = static__1a95ce4e1_New(&(_4096_oc));;
		_1a95d0866_Serialize(_4147_tc);
	} else {
		_1a96a0eb9_Serialize(_4096_oc);
	};
	jule::Ptr<_1d828cd85_File> _4206_file = _1a972d156_openOutput(&(_4062_compPath));;
	({
		auto except = _1d828a5d0_Write(_4206_file.ptr(), _1daedb95a_Buf(&(*(_4096_oc))._field_Buf));
		if (!except.ok()) {
			_1a89a1595_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _1d828e44c_Close(_4206_file);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:424:2"));
	});
	if ((!(_1d926086d_Transpilation))) {
		_1a972d60c_compileIr(_4072_compiler, _40712_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1d9258e60_init();
	_1c00618db_init();
	_1a972cd8c_init();

}

inline jule::Bool __jule_anon1ab08b441(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bbc839_ParamIns> _24921_p1, jule::Ptr<_1a7bbc839_ParamIns> _24936_p2) {
	if (((*((*(_24921_p1))._field_Decl))._field_Mutable != (*(*(_24936_p2))._field_Decl.alloc)._field_Mutable)) {
		return false;;
	};
	if (_1a7bb955b_IsSelf((*(_24921_p1))._field_Decl)) {
		if ((!(_1a7bb955b_IsSelf((*(_24936_p2))._field_Decl)))) {
			return false;;
		};
		if ((_1a7bb97e2_IsRef((*(_24921_p1))._field_Decl) != _1a7bb97e2_IsRef((*(_24936_p2))._field_Decl))) {
			return false;;
		};
		return true;;
	};
	if (((*(*(_24921_p1))._field_Decl.alloc)._field_Reference != (*(*(_24936_p2))._field_Decl.alloc)._field_Reference)) {
		return false;;
	};
	if (((*(*(_24921_p1))._field_Decl.alloc)._field_Variadic != (*(*(_24936_p2))._field_Decl.alloc)._field_Variadic)) {
		return false;;
	};
	return _1a7d1c4d3_Equal((*_24921_p1.alloc)._field_Kind, (*(_24936_p2))._field_Kind);;
}

inline jule::Bool __jule_anon_1ab0e5973(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c36793_ImportInfo> _49935_spkg) {
	jule::Ptr<__jule_anon_1ab0e5973_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab0e5973_ctx>();
	return ((!(_1a7bcd85b_isImplicitImport(_49935_spkg))) && ((*((*(__jule_closure_ctx.alloc->_49828_pkg))))._field_Path == (*(_49935_spkg))._field_Path));;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab166ecd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _6521_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _6536_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab166ecd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab166ecd_ctx>();
	return _1a7bd7414__Decl(__jule_closure_ctx.alloc->_self_, _6521_e, _6536_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab168e58(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _7221_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _7236_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab168e58_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab168e58_ctx>();
	return _1a7bd7810__Type(__jule_closure_ctx.alloc->_self_, _7221_e, _7236_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab180d1b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _17821_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _17836_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab180d1b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab180d1b_ctx>();
	return _1a7bda637__Decl(__jule_closure_ctx.alloc->_self_, _17821_e, _17836_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab182c96(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _18521_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _18536_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab182c96_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab182c96_ctx>();
	return _1a7bdaa33__Type(__jule_closure_ctx.alloc->_self_, _18521_e, _18536_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab194208(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _28321_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _28336_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab194208_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab194208_ctx>();
	return _1a7bdd849__Decl(__jule_closure_ctx.alloc->_self_, _28321_e, _28336_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab1aaa38(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _40221_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _40236_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab1aaa38_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab1aaa38_ctx>();
	return _1a7be1682__Decl(__jule_closure_ctx.alloc->_self_, _40221_e, _40236_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab1ac9b3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _40921_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _40936_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab1ac9b3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab1ac9b3_ctx>();
	return _1a7be1e79__Recv(__jule_closure_ctx.alloc->_self_, _40921_e, _40936_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab1ae93d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _41621_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _41636_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab1ae93d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab1ae93d_ctx>();
	return _1a7be1a7d__Type(__jule_closure_ctx.alloc->_self_, _41621_e, _41636_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab257541(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _97421_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _97436_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab257541_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab257541_ctx>();
	return _1a7be68da__Decl(__jule_closure_ctx.alloc->_self_, _97421_e, _97436_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2594bb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _98121_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _98136_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab2594bb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab2594bb_ctx>();
	return _1a7be6cd6__Str(__jule_closure_ctx.alloc->_self_, _98121_e, _98136_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab25b446(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _98821_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _98836_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab25b446_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab25b446_ctx>();
	return _1a7be75cd__Bits(__jule_closure_ctx.alloc->_self_, _98821_e, _98836_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab25d3c1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _99521_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _99536_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab25d3c1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab25d3c1_ctx>();
	return _1a7be79c9__Elem(__jule_closure_ctx.alloc->_self_, _99521_e, _99536_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab26034b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _100221_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _100236_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab26034b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab26034b_ctx>();
	return _1a7be7dc5__Size(__jule_closure_ctx.alloc->_self_, _100221_e, _100236_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2622c6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _100921_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _100936_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab2622c6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab2622c6_ctx>();
	return _1a7be82c1__Key(__jule_closure_ctx.alloc->_self_, _100921_e, _100936_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab264251(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _101621_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _101636_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab264251_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab264251_ctx>();
	return _1a7be86bc__Value(__jule_closure_ctx.alloc->_self_, _101621_e, _101636_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2661cb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _102321_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _102336_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab2661cb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab2661cb_ctx>();
	return _1a7be8ab8__Fields(__jule_closure_ctx.alloc->_self_, _102321_e, _102336_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab268299(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _103021_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _103036_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab268299_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab268299_ctx>();
	return _1a7be8eb4__Statics(__jule_closure_ctx.alloc->_self_, _103021_e, _103036_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab26a224(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _103721_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _103736_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab26a224_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab26a224_ctx>();
	return _1a7beb58d__Params(__jule_closure_ctx.alloc->_self_, _103721_e, _103736_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab26c19e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _104421_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _104436_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab26c19e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab26c19e_ctx>();
	return _1a7bea49e__Types(__jule_closure_ctx.alloc->_self_, _104421_e, _104436_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab26e129(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _105121_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _105136_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab26e129_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab26e129_ctx>();
	return _1a7be93b0__Binded(__jule_closure_ctx.alloc->_self_, _105121_e, _105136_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2710a4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _105821_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _105836_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab2710a4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab2710a4_ctx>();
	return _1a7be97ab__Ordered(__jule_closure_ctx.alloc->_self_, _105821_e, _105836_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab27302e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _106521_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _106536_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab27302e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab27302e_ctx>();
	return _1a7be9ba7__Comparable(__jule_closure_ctx.alloc->_self_, _106521_e, _106536_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab274ea9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _107221_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _107236_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab274ea9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab274ea9_ctx>();
	return _1a7bea0a3__Mutable(__jule_closure_ctx.alloc->_self_, _107221_e, _107236_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab276e34(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _107921_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _107936_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab276e34_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab276e34_ctx>();
	return _1a7bea89a__CanNil(__jule_closure_ctx.alloc->_self_, _107921_e, _107936_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab278dae(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _108621_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _108636_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab278dae_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab278dae_ctx>();
	return _1a7beac96__GC(__jule_closure_ctx.alloc->_self_, _108621_e, _108636_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab27ad39(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _109321_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _109336_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab27ad39_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab27ad39_ctx>();
	return _1a7beb192__Result(__jule_closure_ctx.alloc->_self_, _109321_e, _109336_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab27ccb4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _110021_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _110036_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab27ccb4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab27ccb4_ctx>();
	return _1a7be71d2__Kind(__jule_closure_ctx.alloc->_self_, _110021_e, _110036_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2ade05(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _126221_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _126236_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab2ade05_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab2ade05_ctx>();
	return _1a7bec913__Unwrap(__jule_closure_ctx.alloc->_self_, _126221_e, _126236_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2b0d80(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _126921_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _126936_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab2b0d80_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab2b0d80_ctx>();
	return _1a7becd0e__Type(__jule_closure_ctx.alloc->_self_, _126921_e, _126936_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2b2d0a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _127621_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _127636_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab2b2d0a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab2b2d0a_ctx>();
	return _1a7bed20a__Lvalue(__jule_closure_ctx.alloc->_self_, _127621_e, _127636_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2b4c85(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _128321_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _128336_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab2b4c85_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab2b4c85_ctx>();
	return _1a7bed606__Mutable(__jule_closure_ctx.alloc->_self_, _128321_e, _128336_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2b6c10(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _129021_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _129036_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab2b6c10_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab2b6c10_ctx>();
	return _1a7beda02__Const(__jule_closure_ctx.alloc->_self_, _129021_e, _129036_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2b8b8a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _129721_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _129736_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab2b8b8a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab2b8b8a_ctx>();
	return _1a7bedded__Field(__jule_closure_ctx.alloc->_self_, _129721_e, _129736_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2bab15(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _130421_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _130436_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab2bab15_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab2bab15_ctx>();
	return _1a7bee2e9__Method(__jule_closure_ctx.alloc->_self_, _130421_e, _130436_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2d082d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _142921_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _142936_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab2d082d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab2d082d_ctx>();
	return _1a7c02099__Path(__jule_closure_ctx.alloc->_self_, _142921_e, _142936_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2d27a8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _143621_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _143636_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab2d27a8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab2d27a8_ctx>();
	return _1a7c02495__Name(__jule_closure_ctx.alloc->_self_, _143621_e, _143636_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab2d4733(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _144321_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _144336_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab2d4733_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab2d4733_ctx>();
	return _1a7c02891__Dir(__jule_closure_ctx.alloc->_self_, _144321_e, _144336_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab34b05d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _194921_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _194936_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab34b05d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab34b05d_ctx>();
	return _1a7c062e0__Name(__jule_closure_ctx.alloc->_self_, _194921_e, _194936_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab34ced8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _195621_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _195636_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab34ced8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab34ced8_ctx>();
	return _1a7c066db__Public(__jule_closure_ctx.alloc->_self_, _195621_e, _195636_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab34ee63(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _196321_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _196336_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab34ee63_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab34ee63_ctx>();
	return _1a7c06ad7__Binded(__jule_closure_ctx.alloc->_self_, _196321_e, _196336_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab351ddd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _197021_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _197036_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab351ddd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab351ddd_ctx>();
	return _1a7c06ed3__Exceptional(__jule_closure_ctx.alloc->_self_, _197021_e, _197036_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab353d68(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _197721_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _197736_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab353d68_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab353d68_ctx>();
	return _1a7c073ce__Mutable(__jule_closure_ctx.alloc->_self_, _197721_e, _197736_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab355ce3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _198421_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _198436_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab355ce3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab355ce3_ctx>();
	return _1a7c077ca__Variadic(__jule_closure_ctx.alloc->_self_, _198421_e, _198436_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab357c6d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _199121_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _199136_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab357c6d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab357c6d_ctx>();
	return _1a7c07bc6__Reference(__jule_closure_ctx.alloc->_self_, _199121_e, _199136_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab359be8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _199821_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _199836_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab359be8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab359be8_ctx>();
	return _1a7c080c2__Params(__jule_closure_ctx.alloc->_self_, _199821_e, _199836_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab35bcb6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _200521_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _200536_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab35bcb6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab35bcb6_ctx>();
	return _1a7c084bd__Fields(__jule_closure_ctx.alloc->_self_, _200521_e, _200536_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab35dc41(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _201221_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _201236_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab35dc41_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab35dc41_ctx>();
	return _1a7c088b9__Statics(__jule_closure_ctx.alloc->_self_, _201221_e, _201236_fc);;
}

inline jule::Ptr<_1a7cd41ae_Data> __jule_anon_1ab360bbb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7cd5dd6_eval>* _201921_e, jule::Ptr<_1a7b8ce7a_FnCallExpr>* _201936_fc, jule::Ptr<_1a7cd41ae_Data>* ) {
	jule::Ptr<__jule_anon_1ab360bbb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab360bbb_ctx>();
	return _1a7c08cb5__Methods(__jule_closure_ctx.alloc->_self_, _201921_e, _201936_fc);;
}

inline jule::Bool __jule_anon_1ab36be91(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c56c14_sema>* _6415_sema, jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>* _6433_generics) {
	jule::Ptr<__jule_anon_1ab36be91_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab36be91_ctx>();
	{
		auto expr = &((*__jule_closure_ctx.alloc->_self_.alloc)._field_genericsD);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab36d04c:;
		if (it != expr_end) {
			jule::I64 _659_i = it - expr->begin();
			jule::Ptr<_1a7b92127_GenericDecl> _6516_g = *it;
			{
				jule::Ptr<_1a7d1a3b0_InsGeneric> _669_generic = (*(__jule_closure_ctx.alloc->_self_))._field_generics[_659_i];;
				if ((((*(_6516_g))._field_Constraint == nullptr) || ((*((*_6516_g.alloc)._field_Constraint))._field_Mask.len() == 0LL))) {
					goto _iter_next_1ab36d04c;
				};
				(*(_669_generic))._field_Constraint=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>::alloc(0LL, (*((*_6516_g.alloc)._field_Constraint))._field_Mask.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7d1bc96_TypeKind>(nullptr); __jule_collection; });
				{
					auto expr = &((*((*_6516_g.alloc)._field_Constraint))._field_Mask);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab370cdb:;
					if (it != expr_end) {
						jule::Ptr<_1a7b800b0_TypeDecl> _7117_mask = *it;
						{
							jule::I64 _726_n = (*((*(_6415_sema))))._field_errors.len();;
							jule::Ptr<_1a7d1bc96_TypeKind> _7310_kind = _1a7c5ea96_buildTypeWithRefers((*(_6415_sema)), &(_7117_mask), jule::Trait((*(_6415_sema)), (jule::Trait::Type*)&_1a7d3c448_Lookup_mptr_data3), (*(_6433_generics)), nullptr);;
							if ((_7310_kind == nullptr)) {
								{
									auto &_match_expr{ (*(_7117_mask))._field_Kind };
									
									if (_match_expr.type == &__jule_any_type78) {
										_case_begin_1ab372b45:;
										{
											jule::Ptr<_1a7b806ba_IdentTypeDecl> _7712_itd = (*(_7117_mask))._field_Kind.unsafe_cast_ptr<_1a7b806ba_IdentTypeDecl>();;
											if ((((*(_7712_itd))._field_Generics.len() == 0LL) && _1a7c0d7d1_isBuiltinConstraint(&((*_7712_itd.alloc)._field_Ident)))) {
												_7310_kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7d39610_buildPrimType((*_7712_itd.alloc)._field_Ident), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22)});
												((*((*(_6415_sema))))._field_errors).mut_slice(0LL, _726_n);;
												goto _julec_label_1ab37334e;
											};
										}
									}
									_match_end_1ab372abd:;
								};
								return false;;
							};
							_julec_label_1ab37334e:;
							(*_669_generic.alloc)._field_Constraint=jule::append((*_669_generic.alloc)._field_Constraint,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7d1bc96_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7310_kind; __jule_collection; }));
						}
						_iter_next_1ab370cdb:;
						++it;
						goto _iter_begin_1ab370cdb;
					}
					_iter_end_1ab370cdb:;
				};
			}
			_iter_next_1ab36d04c:;
			++it;
			_659_i++;
			goto _iter_begin_1ab36d04c;
		}
		_iter_end_1ab36d04c:;
	};
	return true;;
}

inline jule::Bool __jule_anon_1ab7436db(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c56c14_sema>* _103742_sema) {
	jule::Ptr<__jule_anon_1ab7436db_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab7436db_ctx>();
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_103047_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7446dc:;
		if (it != expr_end) {
			jule::Ptr<_1a7bbc839_ParamIns> _103916_p = *it;
			{
				if ((!(_1a7bb955b_IsSelf((*(_103916_p))._field_Decl.ptr())))) {
					(*_103916_p.alloc)._field_Kind=_1a7c6446e_buildNonGenericTypeKind((*(_103742_sema)), &((*((*(*(_103916_p))._field_Decl.alloc)._field_Kind))._field_Decl), &(__jule_closure_ctx.alloc->_103111_generics), __jule_closure_ctx.alloc->_103063_ignored);
					__jule_func_result=(__jule_func_result && ((*_103916_p.alloc)._field_Kind != nullptr));
				};
			}
			_iter_next_1ab7446dc:;
			++it;
			goto _iter_begin_1ab7446dc;
		}
		_iter_end_1ab7446dc:;
	};
	if ((!(_1a7bbad87_IsVoid((*__jule_closure_ctx.alloc->_103047_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_103047_f.alloc)._field_Result=_1a7c6446e_buildNonGenericTypeKind((*(_103742_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_103047_f))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), &(__jule_closure_ctx.alloc->_103111_generics), __jule_closure_ctx.alloc->_103063_ignored);
		__jule_func_result=(__jule_func_result && ((*__jule_closure_ctx.alloc->_103047_f.alloc)._field_Result != nullptr));
	};
	return __jule_func_result;;
}

inline jule::Bool __jule_anon_1ab75b6b0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c56c14_sema>* _114042_sema) {
	jule::Ptr<__jule_anon_1ab75b6b0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab75b6b0_ctx>();
	return __jule_closure_ctx.alloc->_113346_algo(_114042_sema, &(__jule_closure_ctx.alloc->_11387_generics));;
}

inline jule::Bool __jule_anon_1ab760e9a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c56c14_sema>* _115637_sema, jule::Slice<jule::Ptr<_1a7d1aea4_TypeAlias>>* _115655_generics) {
	jule::Ptr<__jule_anon_1ab760e9a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab760e9a_ctx>();
	jule::Bool _11578_ok = true;;
	{
		auto expr = &((*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab762441:;
		if (it != expr_end) {
			jule::Ptr<_1a7bbc839_ParamIns> _115816_p = *it;
			{
				if (_1a7bb955b_IsSelf((*(_115816_p))._field_Decl.ptr())) {
					if (((*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Owner == nullptr)) {
						goto _iter_next_1ab762441;
					};
					if (_1a7bb97e2_IsRef((*(_115816_p))._field_Decl)) {
						(*_115816_p.alloc)._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7d288da_Sptr>(_1a7d288da_Sptr{._field_Elem=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Owner, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data23)});
					} else {
						(*_115816_p.alloc)._field_Kind=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Owner, (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data0)});
					};
				} else {
					(*(_115816_p))._field_Kind=_1a7c611e6_buildTypeWithGenerics((*(_115637_sema)), &((*((*((*_115816_p.alloc)._field_Decl))._field_Kind))._field_Decl), (*(_115655_generics)), (*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Refers);
					if (((*_115816_p.alloc)._field_Kind != nullptr)) {
						_1a7c661b8_checkFnParamKind(__jule_closure_ctx.alloc->_self_, &(_115816_p));
					} else {
						_11578_ok=false;
					};
				};
			}
			_iter_next_1ab762441:;
			++it;
			goto _iter_begin_1ab762441;
		}
		_iter_end_1ab762441:;
	};
	if ((!(_1a7bbad87_IsVoid((*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Result=_1a7c611e6_buildTypeWithGenerics((*(_115637_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_115237_f))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), (*(_115655_generics)), (*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Refers);
		_11578_ok=(((*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Result != nullptr) && _11578_ok);
	};
	return _11578_ok;;
}

inline jule::Bool __jule_anon_1abdee65a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c36793_ImportInfo> _191543_imp) {
	jule::Ptr<__jule_anon_1abdee65a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abdee65a_ctx>();
	if ((((*__jule_closure_ctx.alloc->_191335_s.alloc)._field_Ns.len() == 1LL) && ((*(_191543_imp))._field_Alias == __jule_closure_ctx.alloc->_19143_path))) {
		return true;;
	};
	return (((*_191543_imp.alloc)._field_LinkPath == __jule_closure_ctx.alloc->_19143_path) && _1a7c393de_isAccessibleViaSelection(_191543_imp));;
}

inline jule::Str __jule_anon1ac20a24b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _87319_def) {
	{
		auto &_match_expr{ (*(_87319_def)) };
		
		if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ac20b34b:;
			{
				return (*((*(_87319_def)).cast_ptr<_1a7d1aea4_TypeAlias>(&__jule_any_type27)))._field_Ident;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ac20b170:;
			{
				return (*((*(_87319_def)).cast_ptr<_1a7ba5ca6_Struct>(&__jule_any_type23)))._field_Ident;;
			}
		}
		else {
			_case_begin_1ac20ac30:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ac20abb9:;
	};
}

inline jule::Bool __jule_anon_1ac290017(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c36793_ImportInfo> _156043_imp) {
	jule::Ptr<__jule_anon_1ac290017_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac290017_ctx>();
	if ((((*__jule_closure_ctx.alloc->_155836_decl.alloc)._field_Idents.len() == 1LL) && ((*(_156043_imp))._field_Alias == __jule_closure_ctx.alloc->_15593_path))) {
		return true;;
	};
	return (((*_156043_imp.alloc)._field_LinkPath == __jule_closure_ctx.alloc->_15593_path) && _1a7c393de_isAccessibleViaSelection(_156043_imp));;
}

inline void __jule_anon_1ac8e8b59(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7ccd9e4_SymbolTable>* _22131_file) {
	jule::Ptr<__jule_anon_1ac8e8b59_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac8e8b59_ctx>();
	{
		auto expr = &((*((*(_22131_file))))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8e95c7:;
		if (it != expr_end) {
			jule::Ptr<_1a7c7b178_Var> _22216_v = *it;
			{
				if (_1a8830c71_HasDirective(&((*(_22216_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					if ((!(_1ac8de7ed_isLive(__jule_closure_ctx.alloc->_self_, &(_22216_v))))) {
						_1ac8deba5_pushLive(__jule_closure_ctx.alloc->_self_, _22216_v);
						_1a896e002_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*_22216_v.alloc)._field_Refers));
					};
				};
			}
			_iter_next_1ac8e95c7:;
			++it;
			goto _iter_begin_1ac8e95c7;
		}
		_iter_end_1ac8e95c7:;
	};
	{
		auto expr = &((*((*(_22131_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8eb761:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _23016_f = *it;
			{
				if (_1a8830c71_HasDirective(&((*(_23016_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					{
						auto expr = &((*_23016_f.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac8ec058:;
						if (it != expr_end) {
							jule::Ptr<_1a7bbd8b2_FnIns> _23218_ins = *it;
							{
								if ((!(_1ac8ac997_isLive(__jule_closure_ctx.alloc->_self_, &(_23218_ins))))) {
									_1ac8acda4_pushLive(__jule_closure_ctx.alloc->_self_, _23218_ins);
									_1a896e002_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*(_23218_ins))._field_Refers));
								};
							}
							_iter_next_1ac8ec058:;
							++it;
							goto _iter_begin_1ac8ec058;
						}
						_iter_end_1ac8ec058:;
					};
				};
			}
			_iter_next_1ac8eb761:;
			++it;
			goto _iter_begin_1ac8eb761;
		}
		_iter_end_1ac8eb761:;
	};
}

inline void __jule_anon_1ac951c28(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2636_expr) {
	jule::Ptr<__jule_anon_1ac951c28_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac951c28_ctx>();
	{
		auto &_match_expr{ (*(_2636_expr)) };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1ac952674:;
			{
				jule::Ptr<_1a7baee03_FnCallExprModel> _299_m = (*(_2636_expr)).cast_ptr<_1a7baee03_FnCallExprModel>(&__jule_any_type41);;
				if (((*(_299_m))._field_Except != nullptr)) {
					{
						_1a8972753_optimizeBodyChildExceptional((*(__jule_closure_ctx.alloc->_self_))._field_s, &((*_299_m.alloc)._field_Except));
					};
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1ac9524ba:;
			{
				jule::Ptr<_1a7bb0c39_AnonFnExprModel> _349_m = (*(_2636_expr)).cast_ptr<_1a7bb0c39_AnonFnExprModel>(&__jule_any_type103);;
				_1a89751b2_eliminateDeadCodeOfScope((*((*(_349_m))._field_Func))._field_Scope);
			}
		}
		_match_end_1ac9525ec:;
	};
}

inline void __jule_anon_1acb03c98(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _56447_m) {
	jule::Ptr<__jule_anon_1acb03c98_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1acb03c98_ctx>();
	{
		(*(__jule_closure_ctx.alloc->_self_))._field_model=((jule::Ptr<jule::Any>)(_56447_m));
	};
	{
		auto &_match_expr{ (*(_56447_m)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1acb04628:;
			{
				{
					_1a883d564_binary(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1a7bace23_BinaryExprModel>(&__jule_any_type114));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1acb0487b:;
			{
				{
					_1a883d81c_unary(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1a7bad2ec_UnaryExprModel>(&__jule_any_type113));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1acb0468e:;
			{
				{
					_1a883dac5_structureLit(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1a7badbc1_StructLitExprModel>(&__jule_any_type98));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1acb04705:;
			{
				{
					_1a883dd7d_casting(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1a7bae551_CastingExprModel>(&__jule_any_type96));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1acb0476b:;
			{
				{
					_1a883e752_funcCall(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1a7baee03_FnCallExprModel>(&__jule_any_type41));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1acb05085:;
			{
				{
					_1a883ea0a_indexing(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1a7bb0783_IndexingExprModel>(&__jule_any_type53));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1acb050eb:;
			{
				{
					_1a883ecb3_anonFunc(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1a7bb0c39_AnonFnExprModel>(&__jule_any_type103));
				};
			}
		}
		_match_end_1acb04529:;
	};
}

inline void __jule_anon_1accd86ca(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1accd86ca_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1accd86ca_ctx>();
	if (__jule_closure_ctx.alloc->_1377_ref) {
		_1a9694760_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
	} else {
		_1a9694760_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
	};
}

inline void __jule_anon_1accdc1d4(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1accdc1d4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1accdc1d4_ctx>();
	{
		if ((*(*((*(__jule_closure_ctx.alloc->_12936_it))))._field_KeyB.alloc)._field_Reference) {
			_1a9694760_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it", 2));
		} else {
			_1a9694760_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*it", 3));
		};
	};
}

inline void __jule_anon_1acd0c765(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1acd0c765_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1acd0c765_ctx>();
	_1a9694760_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, (jule::Str::lit("*", 1) + __jule_closure_ctx.alloc->_2167_resultKey));
}

inline void __jule_anon_1acd0ecd9(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1acd0ecd9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1acd0ecd9_ctx>();
	_1a9694760_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, (jule::Str::lit("*", 1) + __jule_closure_ctx.alloc->_2177_resultVal));
}

inline void __jule_anon_1acd28d36(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1acd28d36_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1acd28d36_ctx>();
	_1a9694760_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("0", 1));
}

inline void __jule_anon_1acdb39e7(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1acdb39e7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1acdb39e7_ctx>();
	_1a9694760_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("_match_expr", 11));
}

inline void __jule_anon_1acdb4d28(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1acdb4d28_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1acdb4d28_ctx>();
	_1a95c0b42_possibleRefExpr((*(*(__jule_closure_ctx.alloc->_self_))._field_oc.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_77630_m))._field_Expr.alloc)._field_Model);
}

inline jule::Bool __jule_anon_1ace3a552(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c7b178_Var> _115267_v) {
	jule::Ptr<__jule_anon_1ace3a552_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ace3a552_ctx>();
	return _1a95b891a_captureVarHandling(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc), &(__jule_closure_ctx.alloc->_114634_m), &(_115267_v));;
}

inline void __jule_anon_1ad2a4e71(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c396b9_Package>* _75738_pkg) {
	jule::Ptr<__jule_anon_1ad2a4e71_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad2a4e71_ctx>();
	_1a882a6b6_IterFiles(_75738_pkg, jule::__new_closure<void,jule::Ptr<_1a7ccd9e4_SymbolTable>*>((void*)__jule_anon_1ad2a5d84, jule::Ptr<__jule_anon_1ad2a5d84_ctx>::make(__jule_anon_1ad2a5d84_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1ad2a5d84_ctx_handler));
}

inline void __jule_anon_1ad2a644a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn>* _77036_m) {
	jule::Ptr<__jule_anon_1ad2a644a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad2a644a_ctx>();
	jule::Ptr<_1a7bbd8b2_FnIns> _7718_ins = (*((*(_77036_m))))._field_Instances[0LL];;
	{
		auto expr = (*(_7718_ins))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ad2a9618:;
		if (it != expr_end) {
			jule::I64 _7729_i = it - expr.begin();
			jule::Ptr<_1a7bbc839_ParamIns> _77216_ip = *it;
			{
				if (_1a7b6c7a6_IsAnonIdent((*((*(_77216_ip))._field_Decl))._field_Ident)) {
					(*(*(_77216_ip))._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _1c005c398_Itoa(_7729_i));
				};
			}
			_iter_next_1ad2a9618:;
			++it;
			_7729_i++;
			goto _iter_begin_1ad2a9618;
		}
		_iter_end_1ad2a9618:;
	};
	_1a9696487_pushResult(__jule_closure_ctx.alloc->_self_, _77036_m);
	_1a969a16c_funcDeclTrait(__jule_closure_ctx.alloc->_self_, _77036_m);
}

inline void __jule_anon_1ad2abab0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c396b9_Package>* _78338_pkg) {
	jule::Ptr<__jule_anon_1ad2abab0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad2abab0_ctx>();
	_1a882a6b6_IterFiles(_78338_pkg, jule::__new_closure<void,jule::Ptr<_1a7ccd9e4_SymbolTable>*>((void*)__jule_anon_1ad2ac9c3, jule::Ptr<__jule_anon_1ad2ac9c3_ctx>::make(__jule_anon_1ad2ac9c3_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1ad2ac9c3_ctx_handler));
}

inline void __jule_anon_1ad2bc263(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad2bc263_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad2bc263_ctx>();
	_1a9694760_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("&(", 2));
	_1a95c9e9d_model((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_85024_v))._field_Value))._field_Data.alloc)._field_Model);
	_1a9694760_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(")", 1));
}

inline void __jule_anon_1ad2be353(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad2be353_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad2be353_ctx>();
	_1a95c0b42_possibleRefExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_85024_v))._field_Value))._field_Data.alloc)._field_Model);
}

inline void __jule_anon_1ad2c1a5e(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad2c1a5e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad2c1a5e_ctx>();
	_1a9694760_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("nullptr", 7));
}

inline void __jule_anon_1ad2c2c08(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad2c2c08_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad2c2c08_ctx>();
	_1a95cb169_initExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_85024_v))._field_Kind.alloc)._field_Kind);
}

inline void __jule_anon_1ad2e0dbe(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c396b9_Package>* _99338_pkg) {
	jule::Ptr<__jule_anon_1ad2e0dbe_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad2e0dbe_ctx>();
	_1a882a6b6_IterFiles(_99338_pkg, jule::__new_closure<void,jule::Ptr<_1a7ccd9e4_SymbolTable>*>((void*)__jule_anon_1ad2e1cc1, jule::Ptr<__jule_anon_1ad2e1cc1_ctx>::make(__jule_anon_1ad2e1cc1_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1ad2e1cc1_ctx_handler));
}

inline void __jule_anon_1ad2e2244(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn>* _100836_m) {
	jule::Ptr<__jule_anon_1ad2e2244_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad2e2244_ctx>();
	_1a9695112_indent(__jule_closure_ctx.alloc->_self_);
	_1a9694760_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(".", 1));
	static__1a95d30d8_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _100836_m);
	_1a9694760_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("=__jule_trait_method_", 21));
	jule::Ptr<_1a7bbd8b2_FnIns> _10134_mepf;
	jule::Bool _101310_exist;
	({
		__jule_tuple_x_1a7bbd8b2_FnIns__jule_tuple_bool __jule_assign_result = _1a969caa9_findTraitMetMap(__jule_closure_ctx.alloc->_self_, _100836_m);
		_10134_mepf = __jule_assign_result.__jule_result_arg0;
		_101310_exist = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_101310_exist))) {
		__jule_panic_s(jule::Str::lit("implementation mistake, [traitDataMethods] could not found MepMap record", 72) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1015:5"));;
	};
	_1a9694760_write(__jule_closure_ctx.alloc->_self_, _1c005bc16_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_10134_mepf)), 15LL));
	_1a9694760_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("_", 1));
	_1a9694760_write(__jule_closure_ctx.alloc->_self_, _1c005bc16_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(__jule_closure_ctx.alloc->_100749_s)), 15LL));
	_1a9694760_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(",\n", 2));
}

inline void __jule_anon_1ad2eeac0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c396b9_Package>* _104538_pkg) {
	jule::Ptr<__jule_anon_1ad2eeac0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad2eeac0_ctx>();
	_1a882a6b6_IterFiles(_104538_pkg, jule::__new_closure<void,jule::Ptr<_1a7ccd9e4_SymbolTable>*>((void*)__jule_anon_1ad3009d3, jule::Ptr<__jule_anon_1ad3009d3_ctx>::make(__jule_anon_1ad3009d3_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1ad3009d3_ctx_handler));
}

inline void __jule_anon_1ad315058(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c396b9_Package>* _111738_pkg) {
	jule::Ptr<__jule_anon_1ad315058_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad315058_ctx>();
	_1a882a6b6_IterFiles(_111738_pkg, jule::__new_closure<void,jule::Ptr<_1a7ccd9e4_SymbolTable>*>((void*)__jule_anon_1ad315e6b, jule::Ptr<__jule_anon_1ad315e6b_ctx>::make(__jule_anon_1ad315e6b_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1ad315e6b_ctx_handler));
}

inline void __jule_anon_1ad316532(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7ccd9e4_SymbolTable>* _113331_file) {
	jule::Ptr<__jule_anon_1ad316532_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad316532_ctx>();
	{
		auto expr = &((*((*(_113331_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad319612:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _113416_f = *it;
			{
				if ((*(_113416_f))._field_Ident.equal("init", 4)) {
					_1a9695112_indent(__jule_closure_ctx.alloc->_self_);
					static__1a95d30d8_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), &(_113416_f));
					_1a9694760_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("();\n", 4));
				};
			}
			_iter_next_1ad319612:;
			++it;
			goto _iter_begin_1ad319612;
		}
		_iter_end_1ad319612:;
	};
}

inline void __jule_anon_1ad32174b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c396b9_Package>* _117238_pkg) {
	jule::Ptr<__jule_anon_1ad32174b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad32174b_ctx>();
	_1a969ee63_pushInit(__jule_closure_ctx.alloc->_self_, _117238_pkg);
}

inline __jule_tuple_i64__jule_tuple_bool __jule_anon1ad3a713e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1c004aa29_ParseInt(_22856_s, _22864_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool __jule_anon1ad3aeca1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1c004a573_ParseUint(_23657_s, _23665_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LLU;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline jule::Bool __jule_anon1ab15a840(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c36793_ImportInfo> _203925_pkg) {
	return (*(_203925_pkg))._field_LinkPath.equal("std::comptime", 13);;
}

inline void __jule_anon_1ad2a5d84(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7ccd9e4_SymbolTable>* _75832_file) {
	jule::Ptr<__jule_anon_1ad2a5d84_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad2a5d84_ctx>();
	{
		auto expr = &((*((*(_75832_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2a6813:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _75917_f = *it;
			{
				if (((!((*(_75917_f))._field_Binded)) && ((*_75917_f.alloc)._field_Token != nullptr))) {
					_1a9696487_pushResult(__jule_closure_ctx.alloc->_self_, &(_75917_f));
					_1a9699db4_funcDecl(__jule_closure_ctx.alloc->_self_, &(_75917_f), false);
				};
			}
			_iter_next_1ad2a6813:;
			++it;
			goto _iter_begin_1ad2a6813;
		}
		_iter_end_1ad2a6813:;
	};
}

inline void __jule_anon_1ad2ac9c3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7ccd9e4_SymbolTable>* _78432_file) {
	jule::Ptr<__jule_anon_1ad2ac9c3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad2ac9c3_ctx>();
	{
		auto expr = &((*((*(_78432_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2ad452:;
		if (it != expr_end) {
			jule::Ptr<_1a7bce362_Trait> _78517_t = *it;
			{
				if (((*(_78517_t))._field_Token == nullptr)) {
					goto _iter_next_1ad2ad452;
				};
				_1a9694760_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("struct ", 7));
				static__1a95d36b0_traitDecl(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _78517_t);
				_1a9694760_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("MptrData", 8));
				_1a9694760_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(" {\n", 3));
				_1a9694c16_addIndent(__jule_closure_ctx.alloc->_self_);
				_1a9695112_indent(__jule_closure_ctx.alloc->_self_);
				_1a9694760_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("void (*dealloc)(jule::Ptr<jule::Uintptr>&);\n", 44));
				_1a969a623_traitDataTypeMethods(__jule_closure_ctx.alloc->_self_, &(_78517_t));
				_1a9694e14_doneIndent(__jule_closure_ctx.alloc->_self_);
				_1a9695112_indent(__jule_closure_ctx.alloc->_self_);
				_1a9694760_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("};\n\n", 4));
			}
			_iter_next_1ad2ad452:;
			++it;
			goto _iter_begin_1ad2ad452;
		}
		_iter_end_1ad2ad452:;
	};
}

inline void __jule_anon_1ad2e1cc1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7ccd9e4_SymbolTable>* _99432_file) {
	jule::Ptr<__jule_anon_1ad2e1cc1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad2e1cc1_ctx>();
	{
		auto expr = &((*((*(_99432_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2e2750:;
		if (it != expr_end) {
			jule::Ptr<_1a7bce362_Trait> _99517_t = *it;
			{
				if (((*(_99517_t))._field_Implemented.len() == 0LL)) {
					goto _iter_next_1ad2e2750;
				};
				_1a882b233_IterTraitMethods(&(_99517_t), jule::__new_closure<void,jule::Ptr<_1a7bba8d1_Fn>*>((void*)__jule_anon_1ad2e3cb2, jule::Ptr<__jule_anon_1ad2e3cb2_ctx>::make(__jule_anon_1ad2e3cb2_ctx{._self_=__jule_closure_ctx.alloc->_self_,._99517_t=_99517_t}).as<jule::Uintptr>(), __jule_anon_1ad2e3cb2_ctx_handler));
			}
			_iter_next_1ad2e2750:;
			++it;
			goto _iter_begin_1ad2e2750;
		}
		_iter_end_1ad2e2750:;
	};
}

inline void __jule_anon_1ad3009d3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7ccd9e4_SymbolTable>* _104632_file) {
	jule::Ptr<__jule_anon_1ad3009d3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad3009d3_ctx>();
	{
		auto expr = &((*((*(_104632_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3062be:;
		if (it != expr_end) {
			jule::Ptr<_1a7bce362_Trait> _104717_t = *it;
			{
				jule::I64 _104810_i = 0LL;;
				{
					auto expr = &((*(_104717_t))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad307105:;
					if (it != expr_end) {
						jule::Ptr<_1a7ba5ca6_Struct> _104918_s = *it;
						{
							{
								auto expr = &((*(_104918_s))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ad3079a7:;
								if (it != expr_end) {
									jule::Ptr<_1a7ba8b11_StructIns> _105019_ins = *it;
									{
										_1a969d89b_traitData(__jule_closure_ctx.alloc->_self_, &(_104717_t), _104810_i, &(_105019_ins));
										(_104810_i)++;
									}
									_iter_next_1ad3079a7:;
									++it;
									goto _iter_begin_1ad3079a7;
								}
								_iter_end_1ad3079a7:;
							};
						}
						_iter_next_1ad307105:;
						++it;
						goto _iter_begin_1ad307105;
					}
					_iter_end_1ad307105:;
				};
			}
			_iter_next_1ad3062be:;
			++it;
			goto _iter_begin_1ad3062be;
		}
		_iter_end_1ad3062be:;
	};
}

inline void __jule_anon_1ad315e6b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7ccd9e4_SymbolTable>* _111832_file) {
	jule::Ptr<__jule_anon_1ad315e6b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad315e6b_ctx>();
	{
		auto expr = &((*((*(_111832_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3168ea:;
		if (it != expr_end) {
			jule::Ptr<_1a7bba8d1_Fn> _111917_f = *it;
			{
				if (((!(_1d9260b26_Test)) && _1a8830c71_HasDirective(&((*(_111917_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
					goto _iter_next_1ad3168ea;
				};
				if (((!((*_111917_f.alloc)._field_Binded)) && ((*_111917_f.alloc)._field_Token != nullptr))) {
					_1a969c405_func(__jule_closure_ctx.alloc->_self_, &(_111917_f));
					_1a9694760_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1ad3168ea:;
			++it;
			goto _iter_begin_1ad3168ea;
		}
		_iter_end_1ad3168ea:;
	};
}

inline void __jule_anon_1ad2e3cb2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7bba8d1_Fn>* _99939_m) {
	jule::Ptr<__jule_anon_1ad2e3cb2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad2e3cb2_ctx>();
	_1a969ce1c_traitWrapper(__jule_closure_ctx.alloc->_self_, &(__jule_closure_ctx.alloc->_99517_t), _99939_m);
}

int main(int argc, char *argv[], char *envp[]) {

_1d92629e6_HelpMap = ({ auto __jule_collection = jule::Array<jule::Array<jule::Str,2>,5>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("help", 4); (*it++) = jule::Str::lit("Show help", 9); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("version", 7); (*it++) = jule::Str::lit("Show version", 12); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("tool", 4); (*it++) = jule::Str::lit("Tools for effective Jule", 24); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("julenv", 6); (*it++) = jule::Str::lit("Show information about native jule environment", 46); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("mod", 3); (*it++) = jule::Str::lit("Module management", 17); __jule_collection; }); __jule_collection; });
	_1a972c661_OutDir = jule::Str::lit("dist", 4);
	_1a972c92a_OutName = jule::Str::lit("ir.cpp", 6);
	_1a972cbd3_Out = jule::Str();
	_1d7e067ac_STDIN = 0LLU;
	_1d7e06adc_STDOUT = 1LLU;
	_1d7e06dc8_STDERR = 2LLU;
	_1d80613b7_first = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 19LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 35LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 52LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 68LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; __jule_collection; });
	_1d8061d13_acceptRanges = ({ auto __jule_collection = jule::Array<_1d806196c_acceptRange,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); (*it++) = _1d806196c_acceptRange{._field_lo=128LLU, ._field_hi=191LLU}; (*it++) = _1d806196c_acceptRange{._field_lo=160LLU, ._field_hi=191LLU}; (*it++) = _1d806196c_acceptRange{._field_lo=128LLU, ._field_hi=159LLU}; (*it++) = _1d806196c_acceptRange{._field_lo=144LLU, ._field_hi=191LLU}; (*it++) = _1d806196c_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}; for (; it < __jule_collection_end; ++it) *it = _1d806196c_acceptRange{._field_lo=0, ._field_hi=0};__jule_collection; });
	_1d81b112c__DE_BRUIJN32_TAB = ({ auto __jule_collection = jule::Array<jule::U8,32>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 28LLU; (*it++) = 2LLU; (*it++) = 29LLU; (*it++) = 14LLU; (*it++) = 24LLU; (*it++) = 3LLU; (*it++) = 30LLU; (*it++) = 22LLU; (*it++) = 20LLU; (*it++) = 15LLU; (*it++) = 25LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 8LLU; (*it++) = 31LLU; (*it++) = 27LLU; (*it++) = 13LLU; (*it++) = 23LLU; (*it++) = 21LLU; (*it++) = 19LLU; (*it++) = 16LLU; (*it++) = 7LLU; (*it++) = 26LLU; (*it++) = 12LLU; (*it++) = 18LLU; (*it++) = 6LLU; (*it++) = 11LLU; (*it++) = 5LLU; (*it++) = 10LLU; (*it++) = 9LLU; __jule_collection; });
	_1d81b16c1__DE_BRUIJN64_TAB = ({ auto __jule_collection = jule::Array<jule::U8,64>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 56LLU; (*it++) = 2LLU; (*it++) = 57LLU; (*it++) = 49LLU; (*it++) = 28LLU; (*it++) = 3LLU; (*it++) = 61LLU; (*it++) = 58LLU; (*it++) = 42LLU; (*it++) = 50LLU; (*it++) = 38LLU; (*it++) = 29LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 62LLU; (*it++) = 47LLU; (*it++) = 59LLU; (*it++) = 36LLU; (*it++) = 45LLU; (*it++) = 43LLU; (*it++) = 51LLU; (*it++) = 22LLU; (*it++) = 53LLU; (*it++) = 39LLU; (*it++) = 33LLU; (*it++) = 30LLU; (*it++) = 24LLU; (*it++) = 18LLU; (*it++) = 12LLU; (*it++) = 5LLU; (*it++) = 63LLU; (*it++) = 55LLU; (*it++) = 48LLU; (*it++) = 27LLU; (*it++) = 60LLU; (*it++) = 41LLU; (*it++) = 37LLU; (*it++) = 16LLU; (*it++) = 46LLU; (*it++) = 35LLU; (*it++) = 44LLU; (*it++) = 21LLU; (*it++) = 52LLU; (*it++) = 32LLU; (*it++) = 23LLU; (*it++) = 11LLU; (*it++) = 54LLU; (*it++) = 26LLU; (*it++) = 40LLU; (*it++) = 15LLU; (*it++) = 34LLU; (*it++) = 20LLU; (*it++) = 31LLU; (*it++) = 10LLU; (*it++) = 25LLU; (*it++) = 14LLU; (*it++) = 19LLU; (*it++) = 9LLU; (*it++) = 13LLU; (*it++) = 8LLU; (*it++) = 7LLU; (*it++) = 6LLU; __jule_collection; });
	__jule_argc = 0LL;
	__jule_argv = nullptr;
	__jule_envp = nullptr;
	_1dae16bb5__L = jule::new_ptr<_1dae78d37_RangeTable>(_1dae78d37_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_1dae78386_Range16>::alloc(359, 359); auto it = __jule_collection.begin(); (*it++) = _1dae78386_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU}; (*it++) = _1dae78386_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU}; (*it++) = _1dae78386_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU}; (*it++) = _1dae78386_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU}; (*it++) = _1dae78386_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU}; (*it++) = _1dae78386_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU}; (*it++) = _1dae78386_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU}; (*it++) = _1dae78386_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU}; (*it++) = _1dae78386_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_1dae788b4_Range32>::alloc(264, 264); auto it = __jule_collection.begin(); (*it++) = _1dae788b4_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=6LL});
	_1dae17ac8__LU = jule::new_ptr<_1dae78d37_RangeTable>(_1dae78d37_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_1dae78386_Range16>::alloc(109, 109); auto it = __jule_collection.begin(); (*it++) = _1dae78386_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU}; (*it++) = _1dae78386_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU}; (*it++) = _1dae78386_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU}; (*it++) = _1dae78386_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU}; (*it++) = _1dae78386_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU}; (*it++) = _1dae78386_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _1dae78386_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU}; (*it++) = _1dae78386_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU}; (*it++) = _1dae78386_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_1dae788b4_Range32>::alloc(40, 40); auto it = __jule_collection.begin(); (*it++) = _1dae788b4_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU}; (*it++) = _1dae788b4_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=3LL});
	_1dae1daac_Letter = _1dae16bb5__L;
	_1dae24d7c_Upper = _1dae17ac8__LU;
	_1dae72858__PROPERTIES = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 144LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 16LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 0LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 136LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; __jule_collection; });
	_1d913516b_CppHeaderExts = ({ auto __jule_collection = jule::Array<jule::Str,4>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".h", 2); (*it++) = jule::Str::lit(".hpp", 4); (*it++) = jule::Str::lit(".hxx", 4); (*it++) = jule::Str::lit(".hh", 3); __jule_collection; });
	_1d9136e2b_CppExts = ({ auto __jule_collection = jule::Array<jule::Str,3>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".cpp", 4); (*it++) = jule::Str::lit(".cc", 3); (*it++) = jule::Str::lit(".cxx", 4); __jule_collection; });
	_1d913713a_ObjectiveCppExts = ({ auto __jule_collection = jule::Array<jule::Str,1>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".mm", 3); __jule_collection; });
	_1d9257eb4_PathStdlib = jule::Str();
	_1d9258206_PathExec = jule::Str();
	_1d92584ae_PathWd = jule::Str();
	_1d92587ab_PathApi = jule::Str();
	_1d9258a64_Os = jule::Str::lit("darwin", 6);
	_1d9258d1c_Arch = jule::Str::lit("amd64", 5);
	_1d925db02_Compiler = jule::Str();
	_1d92601a8_CompilerPath = jule::Str();
	_1d92603b7_CppStd = jule::Str::lit("cpp17", 5);
	_1d92605c6_Shadowing = false;
	_1d926086d_Transpilation = false;
	_1d9260b26_Test = false;
	_1d9260dce_RC = true;
	_1d9261297_Safety = true;
	_1d92614d9_Production = false;
	_1d9261781_AtomicRC = false;
	_1c0044869_f32info = _1d949ac2e_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
	_1c0044b66_f64info = _1d949ac2e_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
	_1c004c553_detailedPowsOfTen = ({ auto __jule_collection = jule::Array<jule::Array<jule::U64,2>,696>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1671618768450675795LLU; (*it++) = 18054884314459144840LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1044761730281672372LLU; (*it++) = 11284302696536965525LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5917638181279478369LLU; (*it++) = 14105378370671206906LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16620419763454123769LLU; (*it++) = 17631722963339008632LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10387762352158827356LLU; (*it++) = 11019826852086880395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8373016921771146291LLU; (*it++) = 13774783565108600494LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1242899115359157055LLU; (*it++) = 17218479456385750618LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5388497965526861063LLU; (*it++) = 10761549660241094136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6735622456908576329LLU; (*it++) = 13451937075301367670LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17642900107990496220LLU; (*it++) = 16814921344126709587LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8720969558280366185LLU; (*it++) = 10509325840079193492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10901211947850457732LLU; (*it++) = 13136657300098991865LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238200953240460069LLU; (*it++) = 16420821625123739831LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18316404623416369399LLU; (*it++) = 10263013515702337394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13672133742415685941LLU; (*it++) = 12828766894627921743LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12478481159592219522LLU; (*it++) = 16035958618284902179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5493207715531443249LLU; (*it++) = 10022474136428063862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16089881681269079869LLU; (*it++) = 12528092670535079827LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15500666083158961933LLU; (*it++) = 15660115838168849784LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9687916301974351208LLU; (*it++) = 9787572398855531115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7498209359040551106LLU; (*it++) = 12234465498569413894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 149389661945913074LLU; (*it++) = 15293081873211767368LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 93368538716195671LLU; (*it++) = 9558176170757354605LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4728396691822632493LLU; (*it++) = 11947720213446693256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5910495864778290617LLU; (*it++) = 14934650266808366570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8305745933913819539LLU; (*it++) = 9334156416755229106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1158810380537498616LLU; (*it++) = 11667695520944036383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15283571030954036982LLU; (*it++) = 14584619401180045478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9881091751837770420LLU; (*it++) = 18230774251475056848LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6175682344898606512LLU; (*it++) = 11394233907171910530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16942974967978033949LLU; (*it++) = 14242792383964888162LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11955346673117766628LLU; (*it++) = 17803490479956110203LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5166248661484910190LLU; (*it++) = 11127181549972568877LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11069496845283525642LLU; (*it++) = 13908976937465711096LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13836871056604407053LLU; (*it++) = 17386221171832138870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4036358391950366504LLU; (*it++) = 10866388232395086794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14268820026792733938LLU; (*it++) = 13582985290493858492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17836025033490917422LLU; (*it++) = 16978731613117323115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8841672636718129437LLU; (*it++) = 10611707258198326947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6440404777470273892LLU; (*it++) = 13264634072747908684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8050505971837842365LLU; (*it++) = 16580792590934885855LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11949095260039733334LLU; (*it++) = 10362995369334303659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10324683056622278764LLU; (*it++) = 12953744211667879574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682481783923072647LLU; (*it++) = 16192180264584849468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11524923151806696212LLU; (*it++) = 10120112665365530917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 571095884476206553LLU; (*it++) = 12650140831706913647LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548927910877421904LLU; (*it++) = 15812676039633642058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13704765962725776594LLU; (*it++) = 9882922524771026286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7907585416552444934LLU; (*it++) = 12353653155963782858LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 661109733835780360LLU; (*it++) = 15442066444954728573LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2719036592861056677LLU; (*it++) = 9651291528096705358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12622167777931096654LLU; (*it++) = 12064114410120881697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1942651667131707105LLU; (*it++) = 15080143012651102122LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5825843310384704845LLU; (*it++) = 9425089382906938826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16505676174835656864LLU; (*it++) = 11781361728633673532LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2185351144835019464LLU; (*it++) = 14726702160792091916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2731688931043774330LLU; (*it++) = 18408377700990114895LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624834609543440812LLU; (*it++) = 11505236063118821809LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15392729280356688919LLU; (*it++) = 14381545078898527261LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5405853545163697437LLU; (*it++) = 17976931348623159077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5684501474941004850LLU; (*it++) = 11235582092889474423LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2493940825248868159LLU; (*it++) = 14044477616111843029LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7729112049988473103LLU; (*it++) = 17555597020139803786LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9442381049670183593LLU; (*it++) = 10972248137587377366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2579604275232953683LLU; (*it++) = 13715310171984221708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3224505344041192104LLU; (*it++) = 17144137714980277135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8932844867666826921LLU; (*it++) = 10715086071862673209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15777742103010921555LLU; (*it++) = 13393857589828341511LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110491610336264040LLU; (*it++) = 16742321987285426889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2526528228819083169LLU; (*it++) = 10463951242053391806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12381532322878629770LLU; (*it++) = 13079939052566739757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1641857348316123500LLU; (*it++) = 16349923815708424697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12555375888766046947LLU; (*it++) = 10218702384817765435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11082533842530170780LLU; (*it++) = 12773377981022206794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4629795266307937667LLU; (*it++) = 15966722476277758493LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5199465050656154994LLU; (*it++) = 9979201547673599058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15722703350174969551LLU; (*it++) = 12474001934591998822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10430007150863936130LLU; (*it++) = 15592502418239998528LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6518754469289960081LLU; (*it++) = 9745314011399999080LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8148443086612450102LLU; (*it++) = 12181642514249998850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 962181821410786819LLU; (*it++) = 15227053142812498563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16742264702877599426LLU; (*it++) = 9516908214257811601LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7092772823314835570LLU; (*it++) = 11896135267822264502LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18089338065998320271LLU; (*it++) = 14870169084777830627LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8999993282035256217LLU; (*it++) = 9293855677986144142LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2026619565689294464LLU; (*it++) = 11617319597482680178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11756646493966393888LLU; (*it++) = 14521649496853350222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5472436080603216552LLU; (*it++) = 18152061871066687778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8031958568804398249LLU; (*it++) = 11345038669416679861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14651634229432885715LLU; (*it++) = 14181298336770849826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9091170749936331336LLU; (*it++) = 17726622920963562283LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3376138709496513133LLU; (*it++) = 11079139325602226427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18055231442152805128LLU; (*it++) = 13848924157002783033LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8733981247408842698LLU; (*it++) = 17311155196253478792LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5458738279630526686LLU; (*it++) = 10819471997658424245LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11435108867965546262LLU; (*it++) = 13524339997073030306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5070514048102157020LLU; (*it++) = 16905424996341287883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 863228270850154185LLU; (*it++) = 10565890622713304927LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14914093393844856443LLU; (*it++) = 13207363278391631158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9419244705451294746LLU; (*it++) = 16509204097989538948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110399977761835024LLU; (*it++) = 10318252561243461842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9664627935347517973LLU; (*it++) = 12897815701554327303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7469098900757009562LLU; (*it++) = 16122269626942909129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16197401859041600736LLU; (*it++) = 10076418516839318205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6411694268519837208LLU; (*it++) = 12595523146049147757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12626303854077184414LLU; (*it++) = 15744403932561434696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7891439908798240259LLU; (*it++) = 9840252457850896685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14475985904425188227LLU; (*it++) = 12300315572313620856LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18094982380531485284LLU; (*it++) = 15375394465392026070LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6697677969404790399LLU; (*it++) = 9609621540870016294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17595469498610763806LLU; (*it++) = 12012026926087520367LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17382650854836066854LLU; (*it++) = 15015033657609400459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8558313775058847832LLU; (*it++) = 9384396036005875287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6086206200396171886LLU; (*it++) = 11730495045007344109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12219443768922602761LLU; (*it++) = 14663118806259180136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15274304711153253452LLU; (*it++) = 18328898507823975170LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14158126462898171311LLU; (*it++) = 11455561567389984481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3862600023340550427LLU; (*it++) = 14319451959237480602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14051622066030463842LLU; (*it++) = 17899314949046850752LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8782263791269039901LLU; (*it++) = 11187071843154281720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10977829739086299876LLU; (*it++) = 13983839803942852150LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4498915137003099037LLU; (*it++) = 17479799754928565188LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12035193997481712706LLU; (*it++) = 10924874846830353242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5820620459997365075LLU; (*it++) = 13656093558537941553LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11887461593424094248LLU; (*it++) = 17070116948172426941LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9735506505103752857LLU; (*it++) = 10668823092607766838LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2946011094524915263LLU; (*it++) = 13336028865759708548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682513868156144079LLU; (*it++) = 16670036082199635685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4607414176811284001LLU; (*it++) = 10418772551374772303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1147581702586717097LLU; (*it++) = 13023465689218465379LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15269535183515560084LLU; (*it++) = 16279332111523081723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7237616480483531100LLU; (*it++) = 10174582569701926077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13658706619031801779LLU; (*it++) = 12718228212127407596LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17073383273789752224LLU; (*it++) = 15897785265159259495LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17588393573759676996LLU; (*it++) = 9936115790724537184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3538747893490044629LLU; (*it++) = 12420144738405671481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9035120885289943691LLU; (*it++) = 15525180923007089351LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12564479580947296663LLU; (*it++) = 9703238076879430844LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15705599476184120828LLU; (*it++) = 12129047596099288555LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15020313326802763131LLU; (*it++) = 15161309495124110694LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4776009810824339053LLU; (*it++) = 9475818434452569184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5970012263530423816LLU; (*it++) = 11844773043065711480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7462515329413029771LLU; (*it++) = 14805966303832139350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 52386062455755702LLU; (*it++) = 9253728939895087094LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9288854614924470436LLU; (*it++) = 11567161174868858867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6999382250228200141LLU; (*it++) = 14458951468586073584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8749227812785250177LLU; (*it++) = 18073689335732591980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14691639419845557168LLU; (*it++) = 11296055834832869987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13752863256379558556LLU; (*it++) = 14120069793541087484LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17191079070474448196LLU; (*it++) = 17650087241926359355LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8438581409832836170LLU; (*it++) = 11031304526203974597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15159912780718433117LLU; (*it++) = 13789130657754968246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9726518939043265588LLU; (*it++) = 17236413322193710308LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15302446373756816800LLU; (*it++) = 10772758326371068942LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9904685930341245193LLU; (*it++) = 13465947907963836178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3157485376071780683LLU; (*it++) = 16832434884954795223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8890957387685944783LLU; (*it++) = 10520271803096747014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1890324697752655170LLU; (*it++) = 13150339753870933768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2362905872190818963LLU; (*it++) = 16437924692338667210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6088502188546649756LLU; (*it++) = 10273702932711667006LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16833999772538088003LLU; (*it++) = 12842128665889583757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7207441660390446292LLU; (*it++) = 16052660832361979697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16033866083812498692LLU; (*it++) = 10032913020226237310LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10818960567910847557LLU; (*it++) = 12541141275282796638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4300328673033783639LLU; (*it++) = 15676426594103495798LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16522763475928278486LLU; (*it++) = 9797766621314684873LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6818396289628184396LLU; (*it++) = 12247208276643356092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8522995362035230495LLU; (*it++) = 15309010345804195115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3021029092058325107LLU; (*it++) = 9568131466127621947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17611344420355070096LLU; (*it++) = 11960164332659527433LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8179122470161673908LLU; (*it++) = 14950205415824409292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14335323580705822000LLU; (*it++) = 9343878384890255807LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13307468457454889596LLU; (*it++) = 11679847981112819759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12022649553391224092LLU; (*it++) = 14599809976391024699LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10416625923311642211LLU; (*it++) = 18249762470488780874LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11122077220497164286LLU; (*it++) = 11406101544055488046LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4679224488766679549LLU; (*it++) = 14257626930069360058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15072402647813125244LLU; (*it++) = 17822033662586700072LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420251654883203278LLU; (*it++) = 11138771039116687545LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16387000587031392001LLU; (*it++) = 13923463798895859431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15872064715361852097LLU; (*it++) = 17404329748619824289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3002511419460075705LLU; (*it++) = 10877706092887390181LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8364825292752482535LLU; (*it++) = 13597132616109237726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1232659579085827361LLU; (*it++) = 16996415770136547158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14605470292210805812LLU; (*it++) = 10622759856335341973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4421779809981343554LLU; (*it++) = 13278449820419177467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 915538744049291538LLU; (*it++) = 16598062275523971834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5183897733458195115LLU; (*it++) = 10373788922202482396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6479872166822743894LLU; (*it++) = 12967236152753102995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3488154190101041964LLU; (*it++) = 16209045190941378744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2180096368813151227LLU; (*it++) = 10130653244338361715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16560178516298602746LLU; (*it++) = 12663316555422952143LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16088537126945865529LLU; (*it++) = 15829145694278690179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7749492695127472003LLU; (*it++) = 9893216058924181362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 463493832054564196LLU; (*it++) = 12366520073655226703LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14414425345350368957LLU; (*it++) = 15458150092069033378LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13620701859271368502LLU; (*it++) = 9661343807543145861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3190819268807046916LLU; (*it++) = 12076679759428932327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17823582141290972357LLU; (*it++) = 15095849699286165408LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11139738838306857723LLU; (*it++) = 9434906062053853380LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13924673547883572154LLU; (*it++) = 11793632577567316725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3570783879572301480LLU; (*it++) = 14742040721959145907LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18298537904747540562LLU; (*it++) = 18427550902448932383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18354115218108294707LLU; (*it++) = 11517219314030582739LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18330958004207980480LLU; (*it++) = 14396524142538228424LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4466953431550423984LLU; (*it++) = 17995655178172785531LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 486002885505321038LLU; (*it++) = 11247284486357990957LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5219189625309039202LLU; (*it++) = 14059105607947488696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6523987031636299002LLU; (*it++) = 17573882009934360870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17912549950054850588LLU; (*it++) = 10983676256208975543LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17779001419141175331LLU; (*it++) = 13729595320261219429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8388693718644305452LLU; (*it++) = 17161994150326524287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12160462601793772764LLU; (*it++) = 10726246343954077679LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10588892233814828051LLU; (*it++) = 13407807929942597099LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624429273841147159LLU; (*it++) = 16759759912428246374LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 778582277723329070LLU; (*it++) = 10474849945267653984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 973227847154161338LLU; (*it++) = 13093562431584567480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1216534808942701673LLU; (*it++) = 16366953039480709350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595392310871352257LLU; (*it++) = 10229345649675443343LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13632554370161802418LLU; (*it++) = 12786682062094304179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12429006944274865118LLU; (*it++) = 15983352577617880224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7768129340171790699LLU; (*it++) = 9989595361011175140LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9710161675214738374LLU; (*it++) = 12486994201263968925LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16749388112445810871LLU; (*it++) = 15608742751579961156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1244995533423855986LLU; (*it++) = 9755464219737475723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15391302472061983695LLU; (*it++) = 12194330274671844653LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5404070034795315907LLU; (*it++) = 15242912843339805817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14906758817815542202LLU; (*it++) = 9526820527087378635LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14021762503842039848LLU; (*it++) = 11908525658859223294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8303831092947774002LLU; (*it++) = 14885657073574029118LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 578208414664970847LLU; (*it++) = 9303535670983768199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14557818573613377271LLU; (*it++) = 11629419588729710248LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18197273217016721589LLU; (*it++) = 14536774485912137810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13523219484416126178LLU; (*it++) = 18170968107390172263LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15369541205401160717LLU; (*it++) = 11356855067118857664LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 765182433041899281LLU; (*it++) = 14196068833898572081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5568164059729762005LLU; (*it++) = 17745086042373215101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5785945546544795205LLU; (*it++) = 11090678776483259438LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16455803970035769814LLU; (*it++) = 13863348470604074297LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6734696907262548556LLU; (*it++) = 17329185588255092872LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4209185567039092847LLU; (*it++) = 10830740992659433045LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9873167977226253963LLU; (*it++) = 13538426240824291306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3118087934678041646LLU; (*it++) = 16923032801030364133LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4254647968387469981LLU; (*it++) = 10576895500643977583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 706623942056949572LLU; (*it++) = 13221119375804971979LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14718337982853350677LLU; (*it++) = 16526399219756214973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11504804248497038125LLU; (*it++) = 10328999512347634358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5157633273766521849LLU; (*it++) = 12911249390434542948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6447041592208152311LLU; (*it++) = 16139061738043178685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6335244004343789146LLU; (*it++) = 10086913586276986678LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17142427042284512241LLU; (*it++) = 12608641982846233347LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16816347784428252397LLU; (*it++) = 15760802478557791684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1286845328412881940LLU; (*it++) = 9850501549098619803LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15443614715798266137LLU; (*it++) = 12313126936373274753LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5469460339465668959LLU; (*it++) = 15391408670466593442LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8030098730593431003LLU; (*it++) = 9619630419041620901LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14649309431669176658LLU; (*it++) = 12024538023802026126LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9088264752731695015LLU; (*it++) = 15030672529752532658LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10291851488884697288LLU; (*it++) = 9394170331095332911LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8253128342678483706LLU; (*it++) = 11742712913869166139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5704724409920716729LLU; (*it++) = 14678391142336457674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16354277549255671720LLU; (*it++) = 18347988927920572092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 998051431430019017LLU; (*it++) = 11467493079950357558LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470936326142299579LLU; (*it++) = 14334366349937946947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8476984389250486570LLU; (*it++) = 17917957937422433684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14521487280136329914LLU; (*it++) = 11198723710889021052LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18151859100170412392LLU; (*it++) = 13998404638611276315LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18078137856785627587LLU; (*it++) = 17498005798264095394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15910522178918405146LLU; (*it++) = 10936253623915059621LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6053094668365842720LLU; (*it++) = 13670317029893824527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2954682317029915496LLU; (*it++) = 17087896287367280659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17987577512639554849LLU; (*it++) = 10679935179604550411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872785872372055657LLU; (*it++) = 13349918974505688014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13117610303610293764LLU; (*it++) = 16687398718132110018LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12810192458183821506LLU; (*it++) = 10429624198832568761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2177682517447613171LLU; (*it++) = 13037030248540710952LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2722103146809516464LLU; (*it++) = 16296287810675888690LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6313000485183335694LLU; (*it++) = 10185179881672430431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3279564588051781713LLU; (*it++) = 12731474852090538039LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17934513790346890853LLU; (*it++) = 15914343565113172548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1985699082112030975LLU; (*it++) = 9946464728195732843LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16317181907922202431LLU; (*it++) = 12433080910244666053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6561419329620589327LLU; (*it++) = 15541351137805832567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11018416108653950185LLU; (*it++) = 9713344461128645354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4549648098962661924LLU; (*it++) = 12141680576410806693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298746142130715309LLU; (*it++) = 15177100720513508366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1825030320404309164LLU; (*it++) = 9485687950320942729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892973918932774359LLU; (*it++) = 11857109937901178411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4004531380238580045LLU; (*it++) = 14821387422376473014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16337890167931276240LLU; (*it++) = 9263367138985295633LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6587304654631931588LLU; (*it++) = 11579208923731619542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17457502855144690293LLU; (*it++) = 14474011154664524427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17210192550503474962LLU; (*it++) = 18092513943330655534LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6144684325637283947LLU; (*it++) = 11307821214581659709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12292541425473992838LLU; (*it++) = 14134776518227074636LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15365676781842491048LLU; (*it++) = 17668470647783843295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16521077016292638761LLU; (*it++) = 11042794154864902059LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16039660251938410547LLU; (*it++) = 13803492693581127574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10826203278068237376LLU; (*it++) = 17254365866976409468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989749085647424168LLU; (*it++) = 10783978666860255917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6152128301777116498LLU; (*it++) = 13479973333575319897LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12301846395648783526LLU; (*it++) = 16849966666969149871LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14606183024921571560LLU; (*it++) = 10531229166855718669LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4422670725869800738LLU; (*it++) = 13164036458569648337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10140024425764638826LLU; (*it++) = 16455045573212060421LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8643358275316593218LLU; (*it++) = 10284403483257537763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6192511825718353619LLU; (*it++) = 12855504354071922204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7740639782147942024LLU; (*it++) = 16069380442589902755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2532056854628769813LLU; (*it++) = 10043362776618689222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12388443105140738074LLU; (*it++) = 12554203470773361527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10873867862998534689LLU; (*it++) = 15692754338466701909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9102010423587778132LLU; (*it++) = 9807971461541688693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989199047912110569LLU; (*it++) = 12259964326927110866LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10763126773035362404LLU; (*it++) = 15324955408658888583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13644483260788183358LLU; (*it++) = 9578097130411805364LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17055604075985229198LLU; (*it++) = 11972621413014756705LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7484447039699372786LLU; (*it++) = 14965776766268445882LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9289465418239495895LLU; (*it++) = 9353610478917778676LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11611831772799369869LLU; (*it++) = 11692013098647223345LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 679731660717048624LLU; (*it++) = 14615016373309029182LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10073036612751086588LLU; (*it++) = 18268770466636286477LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8601490892183123069LLU; (*it++) = 11417981541647679048LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10751863615228903837LLU; (*it++) = 14272476927059598810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4216457482181353988LLU; (*it++) = 17840596158824498513LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14164500972431816002LLU; (*it++) = 11150372599265311570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8482254178684994195LLU; (*it++) = 13937965749081639463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5991131704928854840LLU; (*it++) = 17422457186352049329LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15273672361649004035LLU; (*it++) = 10889035741470030830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9868718415206479236LLU; (*it++) = 13611294676837538538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3112525982153323237LLU; (*it++) = 17014118346046923173LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4251171748059520975LLU; (*it++) = 10633823966279326983LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 702278666647013314LLU; (*it++) = 13292279957849158729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5489534351736154547LLU; (*it++) = 16615349947311448411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1125115960621402640LLU; (*it++) = 10384593717069655257LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6018080969204141204LLU; (*it++) = 12980742146337069071LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2910915193077788601LLU; (*it++) = 16225927682921336339LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17960223060169475539LLU; (*it++) = 10141204801825835211LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17838592806784456520LLU; (*it++) = 12676506002282294014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13074868971625794843LLU; (*it++) = 15845632502852867518LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3560107088838733872LLU; (*it++) = 9903520314283042199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18285191916330581053LLU; (*it++) = 12379400392853802748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4409745821703674700LLU; (*it++) = 15474250491067253436LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11979463175419572495LLU; (*it++) = 9671406556917033397LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1139270913992301907LLU; (*it++) = 12089258196146291747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15259146697772541096LLU; (*it++) = 15111572745182864683LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7231123676894144233LLU; (*it++) = 9444732965739290427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4427218577690292387LLU; (*it++) = 11805916207174113034LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14757395258967641292LLU; (*it++) = 14757395258967641292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9223372036854775808LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11529215046068469760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14411518807585587200LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 18014398509481984000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11258999068426240000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14073748835532800000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17592186044416000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10995116277760000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13743895347200000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17179869184000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10737418240000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13421772800000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16777216000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10485760000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13107200000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16384000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10240000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12800000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12500000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15625000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9765625000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12207031250000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15258789062500000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9536743164062500000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11920928955078125000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14901161193847656250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4611686018427387904LLU; (*it++) = 9313225746154785156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5764607523034234880LLU; (*it++) = 11641532182693481445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11817445422220181504LLU; (*it++) = 14551915228366851806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5548434740920451072LLU; (*it++) = 18189894035458564758LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17302829768357445632LLU; (*it++) = 11368683772161602973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7793479155164643328LLU; (*it++) = 14210854715202003717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14353534962383192064LLU; (*it++) = 17763568394002504646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4359273333062107136LLU; (*it++) = 11102230246251565404LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5449091666327633920LLU; (*it++) = 13877787807814456755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2199678564482154496LLU; (*it++) = 17347234759768070944LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1374799102801346560LLU; (*it++) = 10842021724855044340LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1718498878501683200LLU; (*it++) = 13552527156068805425LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6759809616554491904LLU; (*it++) = 16940658945086006781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6530724019560251392LLU; (*it++) = 10587911840678754238LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17386777061305090048LLU; (*it++) = 13234889800848442797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7898413271349198848LLU; (*it++) = 16543612251060553497LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16465723340661719040LLU; (*it++) = 10339757656912845935LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15970468157399760896LLU; (*it++) = 12924697071141057419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15351399178322313216LLU; (*it++) = 16155871338926321774LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4982938468024057856LLU; (*it++) = 10097419586828951109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10840359103457460224LLU; (*it++) = 12621774483536188886LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4327076842467049472LLU; (*it++) = 15777218104420236108LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11927795063396681728LLU; (*it++) = 9860761315262647567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298057810818464256LLU; (*it++) = 12325951644078309459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8260886245095692416LLU; (*it++) = 15407439555097886824LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5163053903184807760LLU; (*it++) = 9629649721936179265LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11065503397408397604LLU; (*it++) = 12037062152420224081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18443565265187884909LLU; (*it++) = 15046327690525280101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13833071299956122020LLU; (*it++) = 9403954806578300063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12679653106517764621LLU; (*it++) = 11754943508222875079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11237880364719817872LLU; (*it++) = 14693679385278593849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 212292400617608628LLU; (*it++) = 18367099231598242312LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 132682750386005392LLU; (*it++) = 11479437019748901445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4777539456409894645LLU; (*it++) = 14349296274686126806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15195296357367144114LLU; (*it++) = 17936620343357658507LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7191217214140771119LLU; (*it++) = 11210387714598536567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4377335499248575995LLU; (*it++) = 14012984643248170709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10083355392488107898LLU; (*it++) = 17516230804060213386LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10913783138732455340LLU; (*it++) = 10947644252537633366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4418856886560793367LLU; (*it++) = 13684555315672041708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5523571108200991709LLU; (*it++) = 17105694144590052135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10369760970266701674LLU; (*it++) = 10691058840368782584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12962201212833377092LLU; (*it++) = 13363823550460978230LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6979379479186945558LLU; (*it++) = 16704779438076222788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13585484211346616781LLU; (*it++) = 10440487148797639242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7758483227328495169LLU; (*it++) = 13050608935997049053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14309790052588006865LLU; (*it++) = 16313261169996311316LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18166990819722280098LLU; (*it++) = 10195788231247694572LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4261994450943298507LLU; (*it++) = 12744735289059618216LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327493063679123134LLU; (*it++) = 15930919111324522770LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7941369183226839863LLU; (*it++) = 9956824444577826731LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5315025460606161924LLU; (*it++) = 12446030555722283414LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15867153862612478214LLU; (*it++) = 15557538194652854267LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7611128154919104931LLU; (*it++) = 9723461371658033917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14125596212076269068LLU; (*it++) = 12154326714572542396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17656995265095336336LLU; (*it++) = 15192908393215677995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8729779031470891258LLU; (*it++) = 9495567745759798747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6300537770911226168LLU; (*it++) = 11869459682199748434LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17099044250493808518LLU; (*it++) = 14836824602749685542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6075216638131242420LLU; (*it++) = 9273015376718553464LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7594020797664053025LLU; (*it++) = 11591269220898191830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 269153960225290473LLU; (*it++) = 14489086526122739788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 336442450281613091LLU; (*it++) = 18111358157653424735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7127805559067090038LLU; (*it++) = 11319598848533390459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4298070930406474644LLU; (*it++) = 14149498560666738074LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595960699862869113LLU; (*it++) = 17686873200833422592LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9122475437414293195LLU; (*it++) = 11054295750520889120LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11403094296767866494LLU; (*it++) = 13817869688151111400LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14253867870959833118LLU; (*it++) = 17272337110188889250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13520353437777283602LLU; (*it++) = 10795210693868055781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3065383741939440791LLU; (*it++) = 13494013367335069727LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17666787732706464701LLU; (*it++) = 16867516709168837158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6430056314514152534LLU; (*it++) = 10542197943230523224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8037570393142690668LLU; (*it++) = 13177747429038154030LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 823590954573587527LLU; (*it++) = 16472184286297692538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5126430365035880108LLU; (*it++) = 10295115178936057836LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6408037956294850135LLU; (*it++) = 12868893973670072295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3398361426941174765LLU; (*it++) = 16086117467087590369LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13653190937906703988LLU; (*it++) = 10053823416929743980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17066488672383379985LLU; (*it++) = 12567279271162179975LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16721424822051837077LLU; (*it++) = 15709099088952724969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3533361486141316317LLU; (*it++) = 9818186930595453106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13640073894531421205LLU; (*it++) = 12272733663244316382LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7826720331309500698LLU; (*it++) = 15340917079055395478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 280014188641050032LLU; (*it++) = 9588073174409622174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9573389772656088348LLU; (*it++) = 11985091468012027717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16578423234247498339LLU; (*it++) = 14981364335015034646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5749828502977298558LLU; (*it++) = 9363352709384396654LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16410657665576399005LLU; (*it++) = 11704190886730495817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6678264026688335045LLU; (*it++) = 14630238608413119772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8347830033360418806LLU; (*it++) = 18287798260516399715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2911550761636567802LLU; (*it++) = 11429873912822749822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12862810488900485560LLU; (*it++) = 14287342391028437277LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2243455055843443238LLU; (*it++) = 17859177988785546597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3708002419115845976LLU; (*it++) = 11161986242990966623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 23317005467419566LLU; (*it++) = 13952482803738708279LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13864204312116438170LLU; (*it++) = 17440603504673385348LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17888499731927549664LLU; (*it++) = 10900377190420865842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13137252628054661272LLU; (*it++) = 13625471488026082303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11809879766640938686LLU; (*it++) = 17031839360032602879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14298703881791668535LLU; (*it++) = 10644899600020376799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13261693833812197764LLU; (*it++) = 13306124500025470999LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11965431273837859301LLU; (*it++) = 16632655625031838749LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9784237555362356015LLU; (*it++) = 10395409765644899218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3006924907348169211LLU; (*it++) = 12994262207056124023LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17593714189467375226LLU; (*it++) = 16242827758820155028LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1772699331562333708LLU; (*it++) = 10151767349262596893LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6827560182880305039LLU; (*it++) = 12689709186578246116LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8534450228600381299LLU; (*it++) = 15862136483222807645LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7639874402088932264LLU; (*it++) = 9913835302014254778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 326470965756389522LLU; (*it++) = 12392294127517818473LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5019774725622874806LLU; (*it++) = 15490367659397273091LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 831516194300602802LLU; (*it++) = 9681479787123295682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10262767279730529310LLU; (*it++) = 12101849733904119602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3605087062808385830LLU; (*it++) = 15127312167380149503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9170708441896323000LLU; (*it++) = 9454570104612593439LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6851699533943015846LLU; (*it++) = 11818212630765741799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3952938399001381903LLU; (*it++) = 14772765788457177249LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13999801545444333449LLU; (*it++) = 9232978617785735780LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17499751931805416812LLU; (*it++) = 11541223272232169725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8039631859474607303LLU; (*it++) = 14426529090290212157LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14661225842770647033LLU; (*it++) = 18033161362862765196LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18386638188586430203LLU; (*it++) = 11270725851789228247LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18371611717305649850LLU; (*it++) = 14088407314736535309LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9129456591349898601LLU; (*it++) = 17610509143420669137LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17235125415662156385LLU; (*it++) = 11006568214637918210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12320534732722919674LLU; (*it++) = 13758210268297397763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10788982397476261688LLU; (*it++) = 17197762835371747204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966486035277439363LLU; (*it++) = 10748601772107342002LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734735507242023396LLU; (*it++) = 13435752215134177503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8806733365625141341LLU; (*it++) = 16794690268917721879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12421737381156795194LLU; (*it++) = 10496681418073576174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6303799689591218185LLU; (*it++) = 13120851772591970218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17103121648843798539LLU; (*it++) = 16401064715739962772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1466078993672598279LLU; (*it++) = 10250665447337476733LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6444284760518135752LLU; (*it++) = 12813331809171845916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8055355950647669691LLU; (*it++) = 16016664761464807395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2728754459941099604LLU; (*it++) = 10010415475915504622LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12634315111781150314LLU; (*it++) = 12513019344894380777LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1957835834444274180LLU; (*it++) = 15641274181117975972LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10447019433382447170LLU; (*it++) = 9775796363198734982LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3835402254873283155LLU; (*it++) = 12219745453998418728LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4794252818591603944LLU; (*it++) = 15274681817498023410LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7608094030047140369LLU; (*it++) = 9546676135936264631LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4898431519131537557LLU; (*it++) = 11933345169920330789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734725417341809851LLU; (*it++) = 14916681462400413486LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2097517367411243253LLU; (*it++) = 9322925914000258429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7233582727691441970LLU; (*it++) = 11653657392500323036LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9041978409614302462LLU; (*it++) = 14567071740625403795LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6690786993590490174LLU; (*it++) = 18208839675781754744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4181741870994056359LLU; (*it++) = 11380524797363596715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 615491320315182544LLU; (*it++) = 14225655996704495894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9992736187248753989LLU; (*it++) = 17782069995880619867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3939617107816777291LLU; (*it++) = 11113793747425387417LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9536207403198359517LLU; (*it++) = 13892242184281734271LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7308573235570561493LLU; (*it++) = 17365302730352167839LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11485387299872682789LLU; (*it++) = 10853314206470104899LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9745048106413465582LLU; (*it++) = 13566642758087631124LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12181310133016831978LLU; (*it++) = 16958303447609538905LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 695789805494438130LLU; (*it++) = 10598939654755961816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 869737256868047663LLU; (*it++) = 13248674568444952270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10310543607939835386LLU; (*it++) = 16560843210556190337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17973304801030866876LLU; (*it++) = 10350527006597618960LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4019886927579031980LLU; (*it++) = 12938158758247023701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9636544677901177879LLU; (*it++) = 16172698447808779626LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10634526442115624078LLU; (*it++) = 10107936529880487266LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4069786015789754290LLU; (*it++) = 12634920662350609083LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 475546501309804958LLU; (*it++) = 15793650827938261354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4908902581746016003LLU; (*it++) = 9871031767461413346LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15359500264037295811LLU; (*it++) = 12338789709326766682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9976003293191843956LLU; (*it++) = 15423487136658458353LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17764217104313372233LLU; (*it++) = 9639679460411536470LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12981899343536939483LLU; (*it++) = 12049599325514420588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16227374179421174354LLU; (*it++) = 15061999156893025735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17059637889779315827LLU; (*it++) = 9413749473058141084LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2877803288514593168LLU; (*it++) = 11767186841322676356LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3597254110643241460LLU; (*it++) = 14708983551653345445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9108253656731439729LLU; (*it++) = 18386229439566681806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1080972517029761926LLU; (*it++) = 11491393399729176129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5962901664714590312LLU; (*it++) = 14364241749661470161LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12065313099320625794LLU; (*it++) = 17955302187076837701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9846663696289085073LLU; (*it++) = 11222063866923023563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7696643601933968437LLU; (*it++) = 14027579833653779454LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 397432465562684739LLU; (*it++) = 17534474792067224318LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14083453346258841674LLU; (*it++) = 10959046745042015198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8380944645968776284LLU; (*it++) = 13698808431302518998LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1252808770606194547LLU; (*it++) = 17123510539128148748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10006377518483647400LLU; (*it++) = 10702194086955092967LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7896285879677171346LLU; (*it++) = 13377742608693866209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14482043368023852087LLU; (*it++) = 16722178260867332761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2133748077373825698LLU; (*it++) = 10451361413042082976LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2667185096717282123LLU; (*it++) = 13064201766302603720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3333981370896602653LLU; (*it++) = 16330252207878254650LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6695424375237764562LLU; (*it++) = 10206407629923909156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8369280469047205703LLU; (*it++) = 12758009537404886445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15073286604736395033LLU; (*it++) = 15947511921756108056LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420804127960246895LLU; (*it++) = 9967194951097567535LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7164319141522920715LLU; (*it++) = 12458993688871959419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4343712908476262990LLU; (*it++) = 15573742111089949274LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7326506586225052273LLU; (*it++) = 9733588819431218296LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9158133232781315341LLU; (*it++) = 12166986024289022870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2224294504121868368LLU; (*it++) = 15208732530361278588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10613556101930943538LLU; (*it++) = 9505457831475799117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17878631145841067327LLU; (*it++) = 11881822289344748896LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3901544858591782542LLU; (*it++) = 14852277861680936121LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13967680582688333849LLU; (*it++) = 9282673663550585075LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12847914709933029407LLU; (*it++) = 11603342079438231344LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16059893387416286759LLU; (*it++) = 14504177599297789180LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1628122660560806833LLU; (*it++) = 18130221999122236476LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10240948699705280078LLU; (*it++) = 11331388749451397797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17412871893058988002LLU; (*it++) = 14164235936814247246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12542717829468959195LLU; (*it++) = 17705294921017809058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12450884661845487401LLU; (*it++) = 11065809325636130661LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1728547772024695539LLU; (*it++) = 13832261657045163327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15995742770313033136LLU; (*it++) = 17290327071306454158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5385653213018257806LLU; (*it++) = 10806454419566533849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11343752534700210161LLU; (*it++) = 13508068024458167311LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9568004649947874797LLU; (*it++) = 16885085030572709139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3674159897003727796LLU; (*it++) = 10553178144107943212LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4592699871254659745LLU; (*it++) = 13191472680134929015LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1129188820640936778LLU; (*it++) = 16489340850168661269LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3011586022114279438LLU; (*it++) = 10305838031355413293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8376168546070237202LLU; (*it++) = 12882297539194266616LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470210682587796502LLU; (*it++) = 16102871923992833270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1932195658189984910LLU; (*it++) = 10064294952495520794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11638616609592256945LLU; (*it++) = 12580368690619400992LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548270761990321182LLU; (*it++) = 15725460863274251240LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9092669226243950738LLU; (*it++) = 9828413039546407025LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15977522551232326327LLU; (*it++) = 12285516299433008781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6136845133758244197LLU; (*it++) = 15356895374291260977LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15364743254667372383LLU; (*it++) = 9598059608932038110LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9982557031479439671LLU; (*it++) = 11997574511165047638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3254824252494523781LLU; (*it++) = 14996968138956309548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11257637194663853171LLU; (*it++) = 9373105086847693467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9460360474902428559LLU; (*it++) = 11716381358559616834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2602078556773259891LLU; (*it++) = 14645476698199521043LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17087656251248738576LLU; (*it++) = 18306845872749401303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17597314184671543466LLU; (*it++) = 11441778670468375814LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12773270693984653525LLU; (*it++) = 14302223338085469768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966588367480816906LLU; (*it++) = 17877779172606837210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14590803748102898470LLU; (*it++) = 11173611982879273256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238504685128623088LLU; (*it++) = 13967014978599091570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13574758819556003052LLU; (*it++) = 17458768723248864463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15401753289863583763LLU; (*it++) = 10911730452030540289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5417133557047315992LLU; (*it++) = 13639663065038175362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15994788983163920798LLU; (*it++) = 17049578831297719202LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14608429132904838403LLU; (*it++) = 10655986769561074501LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4425478360848884291LLU; (*it++) = 13319983461951343127LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 920161932633717460LLU; (*it++) = 16649979327439178909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2880944217109767365LLU; (*it++) = 10406237079649486818LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12824552308241985014LLU; (*it++) = 13007796349561858522LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6807318348447705459LLU; (*it++) = 16259745436952323153LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15783789013848285672LLU; (*it++) = 10162340898095201970LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10506364230455581282LLU; (*it++) = 12702926122619002463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8521269269642088699LLU; (*it++) = 15878657653273753079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12243322321167387293LLU; (*it++) = 9924161033296095674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6080780864604458308LLU; (*it++) = 12405201291620119593LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12212662099182960789LLU; (*it++) = 15506501614525149491LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327070802775656541LLU; (*it++) = 9691563509078218432LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6658838503469570676LLU; (*it++) = 12114454386347773040LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8323548129336963345LLU; (*it++) = 15143067982934716300LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14425589617690377899LLU; (*it++) = 9464417489334197687LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13420301003685584469LLU; (*it++) = 11830521861667747109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2940318199324816875LLU; (*it++) = 14788152327084683887LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8755227902219092403LLU; (*it++) = 9242595204427927429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15555720896201253407LLU; (*it++) = 11553244005534909286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10221279083396790951LLU; (*it++) = 14441555006918636608LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12776598854245988689LLU; (*it++) = 18051943758648295760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7985374283903742931LLU; (*it++) = 11282464849155184850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 758345818024902856LLU; (*it++) = 14103081061443981063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14782990327813292282LLU; (*it++) = 17628851326804976328LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9239368954883307676LLU; (*it++) = 11018032079253110205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16160897212031522499LLU; (*it++) = 13772540099066387756LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1754377441329851508LLU; (*it++) = 17215675123832984696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1096485900831157192LLU; (*it++) = 10759796952395615435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15205665431321110202LLU; (*it++) = 13449746190494519293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5172023733869224041LLU; (*it++) = 16812182738118149117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5538357842881958977LLU; (*it++) = 10507614211323843198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16146319340457224530LLU; (*it++) = 13134517764154803997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6347841120289366950LLU; (*it++) = 16418147205193504997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6273243709394548296LLU; (*it++) = 10261342003245940623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3229868618315797466LLU; (*it++) = 12826677504057425779LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872393828176910545LLU; (*it++) = 16033346880071782223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18087775170251650946LLU; (*it++) = 10020841800044863889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8774660907532399971LLU; (*it++) = 12526052250056079862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1744954097560724156LLU; (*it++) = 15657565312570099828LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10313968347830228405LLU; (*it++) = 9785978320356312392LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12892460434787785506LLU; (*it++) = 12232472900445390490LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892203506629956075LLU; (*it++) = 15290591125556738113LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15836842237712192307LLU; (*it++) = 9556619453472961320LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1349308723430688768LLU; (*it++) = 11945774316841201651LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15521693959570524672LLU; (*it++) = 14932217896051502063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16618587752372659776LLU; (*it++) = 9332636185032188789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6938176635183661008LLU; (*it++) = 11665795231290235987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4061034775552188356LLU; (*it++) = 14582244039112794984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5076293469440235445LLU; (*it++) = 18227805048890993730LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7784369436827535057LLU; (*it++) = 11392378155556871081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14342147814461806725LLU; (*it++) = 14240472694446088851LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13315998749649870503LLU; (*it++) = 17800590868057611064LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8322499218531169064LLU; (*it++) = 11125369292536006915LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5791438004736573426LLU; (*it++) = 13906711615670008644LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7239297505920716783LLU; (*it++) = 17383389519587510805LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6830403950414141941LLU; (*it++) = 10864618449742194253LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13149690956445065330LLU; (*it++) = 13580773062177742816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16437113695556331663LLU; (*it++) = 16975966327722178520LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10273196059722707289LLU; (*it++) = 10609978954826361575LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8229809056225996208LLU; (*it++) = 13262473693532951969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14898947338709883164LLU; (*it++) = 16578092116916189961LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2394313059052595121LLU; (*it++) = 10361307573072618726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12216263360670519709LLU; (*it++) = 12951634466340773407LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10658643182410761733LLU; (*it++) = 16189543082925966759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13579181016647807939LLU; (*it++) = 10118464426828729224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16973976270809759924LLU; (*it++) = 12648080533535911530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11994098301657424097LLU; (*it++) = 15810100666919889413LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9802154447749584012LLU; (*it++) = 9881312916824930883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7641007041259592112LLU; (*it++) = 12351641146031163604LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9551258801574490140LLU; (*it++) = 15439551432538954505LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17498751797052526097LLU; (*it++) = 9649719645336846565LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8038381691033493909LLU; (*it++) = 12062149556671058207LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5436291095364479483LLU; (*it++) = 15077686945838822759LLU; __jule_collection; }); __jule_collection; });
	_1c004e368_powtab = ({ auto __jule_collection = jule::Slice<jule::I64>::alloc(9, 9); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 3LL; (*it++) = 6LL; (*it++) = 9LL; (*it++) = 13LL; (*it++) = 16LL; (*it++) = 19LL; (*it++) = 23LL; (*it++) = 26LL; __jule_collection; });
	_1c004ee29_f64pow10 = ({ auto __jule_collection = jule::Slice<jule::F64>::alloc(23, 23); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 10LL; (*it++) = 100LL; (*it++) = 1000LL; (*it++) = 10000LL; (*it++) = 100000LL; (*it++) = 1000000LL; (*it++) = 10000000LL; (*it++) = 100000000LL; (*it++) = 1000000000LL; (*it++) = 10000000000LL; (*it++) = 100000000000LL; (*it++) = 1000000000000LL; (*it++) = 10000000000000LL; (*it++) = 100000000000000LL; (*it++) = 1000000000000000LL; (*it++) = 10000000000000000LL; (*it++) = 100000000000000000LL; (*it++) = 1000000000000000000LL; (*it++) = 10000000000000000000LLU; (*it++) = 100000000000000000000.0; (*it++) = 1000000000000000000000.0; (*it++) = 10000000000000000000000.0; __jule_collection; });
	_1c0050259_f32pow10 = ({ auto __jule_collection = jule::Slice<jule::F32>::alloc(11, 11); auto it = __jule_collection.begin(); (*it++) = 1.0f; (*it++) = 10.0f; (*it++) = 100.0f; (*it++) = 1000.0f; (*it++) = 10000.0f; (*it++) = 100000.0f; (*it++) = 1000000.0f; (*it++) = 10000000.0f; (*it++) = 100000000.0f; (*it++) = 1000000000.0f; (*it++) = 10000000000.0f; __jule_collection; });
	_1c00534b0_u64pow10 = ({ auto __jule_collection = jule::Array<jule::U64,20>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 10LLU; (*it++) = 100LLU; (*it++) = 1000LLU; (*it++) = 10000LLU; (*it++) = 100000LLU; (*it++) = 1000000LLU; (*it++) = 10000000LLU; (*it++) = 100000000LLU; (*it++) = 1000000000LLU; (*it++) = 10000000000LLU; (*it++) = 100000000000LLU; (*it++) = 1000000000000LLU; (*it++) = 10000000000000LLU; (*it++) = 100000000000000LLU; (*it++) = 1000000000000000LLU; (*it++) = 10000000000000000LLU; (*it++) = 100000000000000000LLU; (*it++) = 1000000000000000000LLU; (*it++) = 10000000000000000000LLU; __jule_collection; });
	_1c005767e_leftCheats = ({ auto __jule_collection = jule::Slice<_1c0057250_leftCheat>::alloc(61, 61); auto it = __jule_collection.begin(); (*it++) = _1c0057250_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()}; (*it++) = _1c0057250_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)}; (*it++) = _1c0057250_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)}; (*it++) = _1c0057250_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)}; (*it++) = _1c0057250_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)}; (*it++) = _1c0057250_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)}; (*it++) = _1c0057250_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)}; (*it++) = _1c0057250_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)}; (*it++) = _1c0057250_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)}; (*it++) = _1c0057250_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)}; (*it++) = _1c0057250_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)}; (*it++) = _1c0057250_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)}; (*it++) = _1c0057250_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)}; (*it++) = _1c0057250_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)}; (*it++) = _1c0057250_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)}; (*it++) = _1c0057250_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)}; (*it++) = _1c0057250_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)}; (*it++) = _1c0057250_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)}; (*it++) = _1c0057250_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)}; (*it++) = _1c0057250_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)}; (*it++) = _1c0057250_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)}; (*it++) = _1c0057250_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)}; (*it++) = _1c0057250_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)}; (*it++) = _1c0057250_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)}; (*it++) = _1c0057250_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)}; (*it++) = _1c0057250_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)}; (*it++) = _1c0057250_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)}; (*it++) = _1c0057250_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)}; (*it++) = _1c0057250_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)}; (*it++) = _1c0057250_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)}; (*it++) = _1c0057250_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)}; (*it++) = _1c0057250_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)}; (*it++) = _1c0057250_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)}; (*it++) = _1c0057250_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)}; (*it++) = _1c0057250_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)}; (*it++) = _1c0057250_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)}; (*it++) = _1c0057250_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)}; (*it++) = _1c0057250_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)}; (*it++) = _1c0057250_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)}; (*it++) = _1c0057250_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)}; (*it++) = _1c0057250_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)}; (*it++) = _1c0057250_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)}; (*it++) = _1c0057250_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)}; (*it++) = _1c0057250_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)}; (*it++) = _1c0057250_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)}; (*it++) = _1c0057250_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)}; (*it++) = _1c0057250_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)}; (*it++) = _1c0057250_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)}; (*it++) = _1c0057250_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)}; (*it++) = _1c0057250_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)}; (*it++) = _1c0057250_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)}; (*it++) = _1c0057250_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)}; (*it++) = _1c0057250_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)}; (*it++) = _1c0057250_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)}; (*it++) = _1c0057250_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)}; (*it++) = _1c0057250_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)}; (*it++) = _1c0057250_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)}; (*it++) = _1c0057250_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)}; (*it++) = _1c0057250_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)}; (*it++) = _1c0057250_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)}; (*it++) = _1c0057250_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}; __jule_collection; });
	_1c005d72e_BitSize = 0LL;
	_1c005da2b_SysInt = jule::Str();
	_1c005dcd4_SysUint = jule::Str();
	_1a7ac0c04_Spaces = ({ auto __jule_collection = jule::Array<jule::I32,5>(); auto it = __jule_collection.begin(); (*it++) = ' '; (*it++) = '\t'; (*it++) = '\v'; (*it++) = '\r'; (*it++) = '\n'; __jule_collection; });
	_1a7ac0e13_UnaryOps = ({ auto __jule_collection = jule::Array<jule::U64,6>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(61LLU); (*it++) = static_cast<jule::U64>(60LLU); (*it++) = static_cast<jule::U64>(67LLU); (*it++) = static_cast<jule::U64>(68LLU); (*it++) = static_cast<jule::U64>(62LLU); (*it++) = static_cast<jule::U64>(65LLU); __jule_collection; });
	_1a7ac1155_BinOps = ({ auto __jule_collection = jule::Array<jule::U64,18>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(60LLU); (*it++) = static_cast<jule::U64>(61LLU); (*it++) = static_cast<jule::U64>(62LLU); (*it++) = static_cast<jule::U64>(63LLU); (*it++) = static_cast<jule::U64>(64LLU); (*it++) = static_cast<jule::U64>(65LLU); (*it++) = static_cast<jule::U64>(66LLU); (*it++) = static_cast<jule::U64>(67LLU); (*it++) = static_cast<jule::U64>(56LLU); (*it++) = static_cast<jule::U64>(57LLU); (*it++) = static_cast<jule::U64>(69LLU); (*it++) = static_cast<jule::U64>(70LLU); (*it++) = static_cast<jule::U64>(53LLU); (*it++) = static_cast<jule::U64>(52LLU); (*it++) = static_cast<jule::U64>(54LLU); (*it++) = static_cast<jule::U64>(55LLU); (*it++) = static_cast<jule::U64>(50LLU); (*it++) = static_cast<jule::U64>(51LLU); __jule_collection; });
	_1a7b640d8_PostfixOps = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(58LLU); (*it++) = static_cast<jule::U64>(59LLU); __jule_collection; });
	_1a7b643c4_AssignOps = ({ auto __jule_collection = jule::Array<jule::U64,11>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(71LLU); (*it++) = static_cast<jule::U64>(40LLU); (*it++) = static_cast<jule::U64>(41LLU); (*it++) = static_cast<jule::U64>(43LLU); (*it++) = static_cast<jule::U64>(42LLU); (*it++) = static_cast<jule::U64>(44LLU); (*it++) = static_cast<jule::U64>(46LLU); (*it++) = static_cast<jule::U64>(45LLU); (*it++) = static_cast<jule::U64>(49LLU); (*it++) = static_cast<jule::U64>(48LLU); (*it++) = static_cast<jule::U64>(47LLU); __jule_collection; });
	_1a7b72921_keywords = ({ auto __jule_collection = jule::Array<_1a7b724e2_kindPair,28>(); auto it = __jule_collection.begin(); (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("const", 5)), ._field_id=static_cast<jule::U64>(6LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("ret", 3)), ._field_id=static_cast<jule::U64>(2LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("type", 4)), ._field_id=static_cast<jule::U64>(7LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("for", 3)), ._field_id=static_cast<jule::U64>(9LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("break", 5)), ._field_id=static_cast<jule::U64>(10LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("continue", 8)), ._field_id=static_cast<jule::U64>(11LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("in", 2)), ._field_id=static_cast<jule::U64>(12LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("if", 2)), ._field_id=static_cast<jule::U64>(13LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("else", 4)), ._field_id=static_cast<jule::U64>(14LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("use", 3)), ._field_id=static_cast<jule::U64>(16LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("goto", 4)), ._field_id=static_cast<jule::U64>(18LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("enum", 4)), ._field_id=static_cast<jule::U64>(20LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("struct", 6)), ._field_id=static_cast<jule::U64>(21LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("co", 2)), ._field_id=static_cast<jule::U64>(22LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("match", 5)), ._field_id=static_cast<jule::U64>(23LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("self", 4)), ._field_id=static_cast<jule::U64>(24LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("trait", 5)), ._field_id=static_cast<jule::U64>(25LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("impl", 4)), ._field_id=static_cast<jule::U64>(26LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("cpp", 3)), ._field_id=static_cast<jule::U64>(27LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fall", 4)), ._field_id=static_cast<jule::U64>(28LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fn", 2)), ._field_id=static_cast<jule::U64>(29LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("let", 3)), ._field_id=static_cast<jule::U64>(30LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("unsafe", 6)), ._field_id=static_cast<jule::U64>(31LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("mut", 3)), ._field_id=static_cast<jule::U64>(32LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("defer", 5)), ._field_id=static_cast<jule::U64>(33LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("static", 6)), ._field_id=static_cast<jule::U64>(34LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("error", 5)), ._field_id=static_cast<jule::U64>(36LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("map", 3)), ._field_id=static_cast<jule::U64>(37LLU)}; __jule_collection; });
	_1a7b72c51_basicOps = ({ auto __jule_collection = jule::Array<_1a7b724e2_kindPair,46>(); auto it = __jule_collection.begin(); (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("::", 2)), ._field_id=static_cast<jule::U64>(19LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":=", 2)), ._field_id=static_cast<jule::U64>(38LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":", 1)), ._field_id=static_cast<jule::U64>(8LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(";", 1)), ._field_id=static_cast<jule::U64>(3LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(",", 1)), ._field_id=static_cast<jule::U64>(5LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("...", 3)), ._field_id=static_cast<jule::U64>(39LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(".", 1)), ._field_id=static_cast<jule::U64>(17LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+=", 2)), ._field_id=static_cast<jule::U64>(40LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-=", 2)), ._field_id=static_cast<jule::U64>(41LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*=", 2)), ._field_id=static_cast<jule::U64>(42LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/=", 2)), ._field_id=static_cast<jule::U64>(43LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%=", 2)), ._field_id=static_cast<jule::U64>(44LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<=", 3)), ._field_id=static_cast<jule::U64>(45LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>=", 3)), ._field_id=static_cast<jule::U64>(46LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^=", 2)), ._field_id=static_cast<jule::U64>(47LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&=", 2)), ._field_id=static_cast<jule::U64>(48LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|=", 2)), ._field_id=static_cast<jule::U64>(49LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("==", 2)), ._field_id=static_cast<jule::U64>(50LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!=", 2)), ._field_id=static_cast<jule::U64>(51LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">=", 2)), ._field_id=static_cast<jule::U64>(52LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<=", 2)), ._field_id=static_cast<jule::U64>(53LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&&", 2)), ._field_id=static_cast<jule::U64>(54LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("||", 2)), ._field_id=static_cast<jule::U64>(55LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<", 2)), ._field_id=static_cast<jule::U64>(56LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>", 2)), ._field_id=static_cast<jule::U64>(57LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("++", 2)), ._field_id=static_cast<jule::U64>(58LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("--", 2)), ._field_id=static_cast<jule::U64>(59LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+", 1)), ._field_id=static_cast<jule::U64>(60LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-", 1)), ._field_id=static_cast<jule::U64>(61LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*", 1)), ._field_id=static_cast<jule::U64>(62LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/", 1)), ._field_id=static_cast<jule::U64>(63LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%", 1)), ._field_id=static_cast<jule::U64>(64LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&", 1)), ._field_id=static_cast<jule::U64>(65LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|", 1)), ._field_id=static_cast<jule::U64>(66LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^", 1)), ._field_id=static_cast<jule::U64>(67LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!", 1)), ._field_id=static_cast<jule::U64>(68LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<", 1)), ._field_id=static_cast<jule::U64>(69LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">", 1)), ._field_id=static_cast<jule::U64>(70LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("=", 1)), ._field_id=static_cast<jule::U64>(71LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("#", 1)), ._field_id=static_cast<jule::U64>(35LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("{", 1)), ._field_id=static_cast<jule::U64>(72LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("}", 1)), ._field_id=static_cast<jule::U64>(73LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("[", 1)), ._field_id=static_cast<jule::U64>(76LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("]", 1)), ._field_id=static_cast<jule::U64>(77LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("(", 1)), ._field_id=static_cast<jule::U64>(74LLU)}; (*it++) = _1a7b724e2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(")", 1)), ._field_id=static_cast<jule::U64>(75LLU)}; __jule_collection; });
	_1a7c0b515_builtinConstraints = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(8, 8); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Str>(jule::Str::lit("signed", 6)); (*it++) = static_cast<jule::Str>(jule::Str::lit("unsigned", 8)); (*it++) = static_cast<jule::Str>(jule::Str::lit("float", 5)); (*it++) = static_cast<jule::Str>(jule::Str::lit("numeric", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("mutable", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("immutable", 9)); (*it++) = static_cast<jule::Str>(jule::Str::lit("ordered", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("comparable", 10)); __jule_collection; });
	_1a7e014c9_primNil = jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=nullptr});
	_1a7e017c6_primVoid = jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7d39610_buildPrimType(jule::Str::lit("void", 4)), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22)});
	_1a7e01a7e_primAny = jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7d39610_buildPrimType(static_cast<jule::Str>(jule::Str::lit("any", 3))), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22)});
	_1a7e01d7b_primStr = jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7d39610_buildPrimType(static_cast<jule::Str>(jule::Str::lit("str", 3))), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22)});
	_1a7e02134_primBool = jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7d39610_buildPrimType(static_cast<jule::Str>(jule::Str::lit("bool", 4))), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22)});
	_1a7e023dc_primUintptr = jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7d39610_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uintptr", 7))), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22)});
	_1a7e02695_primUint = jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7d39610_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uint", 4))), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22)});
	_1a7e02a5d_primInt = jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7d39610_buildPrimType(static_cast<jule::Str>(jule::Str::lit("int", 3))), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22)});
	_1a7e02ca0_primI8 = jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7d39610_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i8", 2))), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22)});
	_1a7e03047_primI16 = jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7d39610_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i16", 3))), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22)});
	_1a7e03300_primI32 = jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7d39610_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i32", 3))), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22)});
	_1a7e035a8_primI64 = jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7d39610_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i64", 3))), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22)});
	_1a7e03861_primU8 = jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7d39610_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u8", 2))), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22)});
	_1a7e03b19_primU16 = jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7d39610_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u16", 3))), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22)});
	_1a7e03dc2_primU32 = jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7d39610_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u32", 3))), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22)});
	_1a7e043ab_primU64 = jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7d39610_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u64", 3))), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22)});
	_1a7e045ed_primF32 = jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7d39610_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f32", 3))), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22)});
	_1a7e0480c_primF64 = jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7d39610_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f64", 3))), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22)});
	_1a8843b85_emptyData = jule::new_ptr<_1a884457b_data>(_1a884457b_data{._field_boundary=jule::Ptr<_1a8845e73_boundary>(nullptr), ._field_nils=jule::Ptr<_1a7e165ee_nils>(nullptr), ._field_dynamic=jule::Ptr<_1a88418ec_dynamic>(nullptr)});
	_1a8848b13_Copy = false;
	_1a8848e10_Deadcode = false;
	_1a88491b8_Append = false;
	_1a88494b5_Math = false;
	_1a884976d_Access = false;
	_1a8849a26_Inline = false;
	_1a8849cce_Ptr = false;
	_1a884a197_Cond = false;
	_1a884a3d9_Str = false;
	_1a884a681_Slice = false;
	_1a884a939_Assign = false;
	_1a884abe2_Exceptional = false;
	_1a884ae9a_Iter = false;
	_1a884b253_Dynamic = false;
	_1a8977318_exprEnabled = false;
	_1a897755a_scopeEnabled = false;
	_1a96874cd_mdays = ({ auto __jule_collection = jule::Array<jule::U64,12>(); auto it = __jule_collection.begin(); (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 29LLU; __jule_collection; });
	_1a95ae48d_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
	_1a9692010_generalGCPtr = jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7d288da_Sptr>(_1a7d288da_Sptr{._field_Elem=jule::new_ptr<_1a7d1bc96_TypeKind>(_1a7d1bc96_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7d24dae_Prim>(_1a7d24dae_Prim{._field_Kind=static_cast<jule::Str>(jule::Str::lit("uintptr", 7))}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data22)})}), (jule::Trait::Type*)&_1a7d1b7e0_Kind_mptr_data23)});
	
	__jule_argc = static_cast<jule::Int>(argc);
	__jule_argv = reinterpret_cast<jule::U8**>(argv);
	__jule_envp = reinterpret_cast<jule::U8**>(envp);

	__jule_call_initializers();
	entry_point();

	return EXIT_SUCCESS;
}